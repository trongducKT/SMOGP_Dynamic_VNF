{"1": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) )", "choosing": "( ( RMSe - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.22406639004149378, "obj2": 0.6267949254894636}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + ( ARS - FirstVNF_RAM ) )", "choosing": "Max( Min( RCSe ,MUC ),Min( MUC ,MUC ) )", "obj1": 0.9979253112033195, "obj2": 0.0008416603683249052}, {"determining": "Max( Max( CRS,FirstVNF_RAM_Server ),( DDR - MDR ) )", "choosing": "( ( MUM / MUC ) / ( MUM * RMSe ) )", "obj1": 0.18672199170124482, "obj2": 0.6686229668978309}, {"determining": "( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) )", "choosing": "( ( RRSe - CS ) + ( CS - DS ) )", "obj1": 0.8547717842323651, "obj2": 0.13953331347576306}, {"determining": "( ( FirstVNF_Mem_Server - CRS ) * Max( FirstVNF_RAM_Server,DDR ) )", "choosing": "( ( DS + MLU ) + ( MUR + MUC ) )", "obj1": 0.3091286307053942, "obj2": 0.610320041068111}, {"determining": "Min( ( ACS + FirstVNF_RAM ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( ( DS / MLU ) + ( MUC * RCSe ) )", "obj1": 0.34232365145228216, "obj2": 0.5823214493449212}, {"determining": "Min( ( AMS - ARS ) ,( RRS / CRS ) )", "choosing": "( Max( CS,MUC ) + ( MLU - RCSe ) )", "obj1": 0.6556016597510373, "obj2": 0.34070745199387825}, {"determining": "( ( ( FirstVNF_CPU - FirstVNF_CPU ) / ( ACS - FirstVNF_Mem_Server ) ) - ( ( DDR / DDR ) / Max( MDR,BR ) ) )", "choosing": "Max( ( ( MLU - CS ) / ( RRSe * DS ) ),( ( CS * MUM ) + ( MUR / MUR ) ) )", "obj1": 0.8319502074688797, "obj2": 0.1957022071479393}, {"determining": "Min( Min( ( ARS * BR ) ,( MDR - FirstVNF_Mem ) ) ,Min( ( FirstVNF_Mem + MDR ) ,Min( MDR ,CRS ) ) )", "choosing": "Max( Min( ( MUR + DS ) ,Min( CS ,MUR ) ),( Min( MUR ,MUC ) / ( RCSe + RMSe ) ) )", "obj1": 0.9688796680497925, "obj2": 0.03829882003242249}, {"determining": "( ( Max( ARS,BR ) + ( Const * Const ) ) * Min( ( Const * CRS ) ,( Const / ARS ) ) )", "choosing": "( Max( Max( MUR,RMSe ),( MUM + MLU ) ) * ( ( MUC * RRSe ) - ( RMSe * RCSe ) ) )", "obj1": 0.17219917012448133, "obj2": 0.6896361688125888}, {"determining": "Min( Min( Max( MDR,BR ) ,( PN - Const ) ) ,( Min( Const ,MRS ) - Min( FirstVNF_RAM ,RRS ) ) )", "choosing": "( Max( MLU,RMSe ) * ( RRSe - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem / ACS ) * ( Const + FirstVNF_RAM ) ) - ( ( ACS * FirstVNF_RAM ) / ( CRS * FirstVNF_RAM ) ) )", "choosing": "( ( RMSe * ( MUC - RMSe ) ) / Min( CS ,( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) )", "choosing": "Max( Max( Min( DS ,RRSe ),( MUM / RRSe ) ),( ( RMSe / MUR ) * ( RRSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / BR ) + ( PN - FirstVNF_CPU ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) )", "choosing": "Max( ( DS / ( MUM / RCSe ) ),( RRSe + RRSe ) )", "obj1": 0.5892116182572614, "obj2": 0.3809824902828173}, {"determining": "Min( ( ( ( FirstVNF_CPU - MRS ) - ( MDR + Const ) ) * ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( BR / FirstVNF_RAM ) ) ) ,Max( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( ARS + ACS ) ),( Max( BR,FirstVNF_RAM ) * Min( ARS ,CRS ) ) ) )", "choosing": "Max( ( Min( ( RCSe * MLU ) ,( RMSe * DS ) ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( DS ,DS ) - Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / Min( CS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,DDR ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( ( ( MUC - DS ) + RRSe ) + MLU ) / ( MLU / ( DS * MUC ) ) )", "obj1": 0.7676348547717843, "obj2": 0.19641485195394168}, {"determining": "Min( ( ( Max( MDR,FirstVNF_RAM ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) - ( ( Const / ACS ) * ( ACS - DDR ) ) ) ,( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) - Max( Max( FirstVNF_CPU,FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( Max( CS,MUR ) / ( MUR / MUM ) ) ,Max( Max( MUR,RCSe ),( MLU - MUM ) ) ) / ( Min( Min( MUC ,MUC ) ,( RCSe - MUM ) ) / Min( ( CS + MUR ) ,( RMSe / MUR ) ) ) )", "obj1": 0.16597510373443983, "obj2": 0.7266264121084531}, {"determining": "( ( ( Min( ACS ,BR ) * ( ACS * FirstVNF_Mem ) ) + Max( ( FirstVNF_RAM / AMS ),( PN - FirstVNF_RAM_Server ) ) ) + ( Max( Min( PN ,BR ),( PN - FirstVNF_RAM ) ) + ( ( ACS - BR ) / ( FirstVNF_RAM_Server - CRS ) ) ) )", "choosing": "( ( Min( ( RMSe / MUM ) ,( MUC / MUR ) ) + ( ( MLU + RCSe ) - ( CS * RRSe ) ) ) + ( Max( ( RMSe + CS ),( CS + DS ) ) * Min( ( MUC - RCSe ) ,( MUC - MUC ) ) ) )", "obj1": 0.24896265560165975, "obj2": 0.6194231388584397}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR + ARS ) ) ,( ( FirstVNF_RAM_Server * PN ) - ( DDR / BR ) ) ) )", "choosing": "( Max( Min( ( MLU / RMSe ) ,( RMSe - RRSe ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( Min( ( MUM - MUR ) ,( MLU / CS ) ) - ( ( DS * RCSe ) * ( MLU * RMSe ) ) ) )", "obj1": 0.5062240663900415, "obj2": 0.4512293404692473}, {"determining": "Max( Min( ( ( ACS / FirstVNF_RAM ) - ( ARS * FirstVNF_Mem ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - ( FirstVNF_RAM_Server - MRS ) ) ),( ( Max( DDR,Const ) / ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) - ( ( Const / DDR ) + Min( MDR ,CRS ) ) ) )", "choosing": "( Max( MUM,RCSe ) * ( MUR - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR - FirstVNF_CPU_Server ) ,( FirstVNF_RAM + ARS ) )", "choosing": "( ( ( Min( RCSe ,RMSe ) - ( DS / DS ) ) + Max( ( CS + MLU ),Max( RMSe,CS ) ) ) - Max( Min( ( DS / RRSe ) ,( RMSe - MLU ) ),( ( RRSe + MLU ) / Max( DS,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "2": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) )", "choosing": "( ( RMSe - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.22406639004149378, "obj2": 0.6267949254894636}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + ( ARS - FirstVNF_RAM ) )", "choosing": "Max( Min( RCSe ,MUC ),Min( MUC ,MUC ) )", "obj1": 0.9979253112033195, "obj2": 0.0008416603683249052}, {"determining": "Min( ( ACS + FirstVNF_RAM ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( ( DS / MLU ) + ( MUC * RCSe ) )", "obj1": 0.34232365145228216, "obj2": 0.5823214493449212}, {"determining": "Min( Min( Max( MDR,BR ) ,( PN - Const ) ) ,( Min( Const ,MRS ) - Min( FirstVNF_RAM ,RRS ) ) )", "choosing": "( Max( MLU,RMSe ) * ( RRSe - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem / ACS ) * ( Const + FirstVNF_RAM ) ) - ( ( ACS * FirstVNF_RAM ) / ( CRS * FirstVNF_RAM ) ) )", "choosing": "( ( RMSe * ( MUC - RMSe ) ) / Min( CS ,( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,CRS ) - Max( MDR,FirstVNF_Mem ) ) * ( ( AMS - MDR ) + ( BR * FirstVNF_Mem ) ) )", "choosing": "Max( Max( Min( DS ,RRSe ),( MUM / RRSe ) ),( ( RMSe / MUR ) * ( RRSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / BR ) + ( PN - FirstVNF_CPU ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) )", "choosing": "Max( ( DS / ( MUM / RCSe ) ),( RRSe + RRSe ) )", "obj1": 0.5892116182572614, "obj2": 0.3809824902828173}, {"determining": "Min( ( ( ( FirstVNF_CPU - MRS ) - ( MDR + Const ) ) * ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( BR / FirstVNF_RAM ) ) ) ,Max( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( ARS + ACS ) ),( Max( BR,FirstVNF_RAM ) * Min( ARS ,CRS ) ) ) )", "choosing": "Max( ( Min( ( RCSe * MLU ) ,( RMSe * DS ) ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( DS ,DS ) - Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / Min( CS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,DDR ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( ( ( MUC - DS ) + RRSe ) + MLU ) / ( MLU / ( DS * MUC ) ) )", "obj1": 0.7676348547717843, "obj2": 0.19641485195394168}, {"determining": "Max( Min( ( ( ACS / FirstVNF_RAM ) - ( ARS * FirstVNF_Mem ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - ( FirstVNF_RAM_Server - MRS ) ) ),( ( Max( DDR,Const ) / ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) - ( ( Const / DDR ) + Min( MDR ,CRS ) ) ) )", "choosing": "( Max( MUM,RCSe ) * ( MUR - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR - FirstVNF_CPU_Server ) ,( FirstVNF_RAM + ARS ) )", "choosing": "( ( ( Min( RCSe ,RMSe ) - ( DS / DS ) ) + Max( ( CS + MLU ),Max( RMSe,CS ) ) ) - Max( Min( ( DS / RRSe ) ,( RMSe - MLU ) ),( ( RRSe + MLU ) / Max( DS,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + ( ( Min( ACS ,ACS ) + Max( ACS,( FirstVNF_CPU * MDR ) ) ) + ( FirstVNF_CPU + AMS ) ) ) * Max( RRS,FirstVNF_RAM ) )", "choosing": "( ( MUC + MUR ) - ( RRSe + RMSe ) )", "obj1": 0.18464730290456433, "obj2": 0.6596039871912951}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ),( MRS * ( ( ( CRS / BR ) + Min( PN ,FirstVNF_CPU ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) )", "choosing": "( ( ( ( MUM / RRSe ) + ( CS / MUC ) ) * Max( ( DS / ( MUM - RCSe ) ),( RRSe + RRSe ) ) ) * Min( Max( Min( CS ,DS ),( DS / MUC ) ) ,Max( ( MUM - DS ),( RRSe - MUR ) ) ) )", "obj1": 0.36099585062240663, "obj2": 0.5734704952000957}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_RAM + BR ) )", "choosing": "Max( ( MLU / CS ),RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,DDR ) - ( FirstVNF_CPU_Server + BR ) )", "choosing": "( ( RMSe - CS ) + ( CS - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "Max( ( MLU / CS ),( RMSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( MDR,FirstVNF_RAM ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) - ( ( Const / ACS ) * ( ACS - DDR ) ) ) ,( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) - Max( Max( FirstVNF_CPU,FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MLU,RMSe ) * ( RRSe - CS ) )", "obj1": 0.2987551867219917, "obj2": 0.5992802085715414}, {"determining": "( Min( FirstVNF_Mem_Server ,MRS ) * ( RRS / ARS ) )", "choosing": "( ( MUC + DS ) * ( ( RCSe * MUR ) * Min( Max( MUC,RCSe ) ,Max( RCSe,RRSe ) ) ) )", "obj1": 0.3029045643153527, "obj2": 0.5983931109324039}, {"determining": "( Max( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ),( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR + ARS ) ) ,Max( ( FirstVNF_RAM_Server * PN ),( DDR / BR ) ) ) )", "choosing": "Min( ( MUC + MUM ) ,( RMSe - RCSe ) )", "obj1": 0.4460580912863071, "obj2": 0.46693261764390354}, {"determining": "( ( FirstVNF_Mem_Server / ( ( Min( ACS ,ACS ) + Max( ACS,( FirstVNF_CPU * MDR ) ) ) + ( FirstVNF_CPU + AMS ) ) ) * ( RRS / ARS ) )", "choosing": "( ( MUC + DS ) * ( ( RCSe * MUR ) * RRSe ) )", "obj1": 0.35892116182572614, "obj2": 0.577995963348425}, {"determining": "( ( PN - FirstVNF_CPU_Server ) + ( ARS - FirstVNF_RAM ) )", "choosing": "Max( Min( RCSe ,MUC ),Min( MUC ,MUC ) )", "obj1": 0.9979253112033195, "obj2": 0.0008416603683249052}, {"determining": "( ( ( ( ( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server * Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR + ARS ) ) ,( ( FirstVNF_RAM_Server * PN ) - ( DDR / BR ) ) ) ) + FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,DDR ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( ( ( MUC - RMSe ) + RCSe ) + MLU ) / ( MLU / ( DS * MUC ) ) )", "obj1": 0.7780082987551867, "obj2": 0.1875816817496556}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR + ARS ) ) ,( ( FirstVNF_CPU_Server * PN ) - ( DDR / BR ) ) ) )", "choosing": "( Max( Min( ( MLU / RMSe ) ,( RMSe - RRSe ) ),( ( ( ( ( MUC - DS ) + RRSe ) + MLU ) / MLU ) - Max( MLU,MUC ) ) ) - ( Min( ( MUM - MUR ) ,( MLU / CS ) ) - ( ( DS * RCSe ) * ( MLU * RMSe ) ) ) )", "obj1": 0.42531120331950206, "obj2": 0.4958674043036049}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR + ARS ) ) ,( ( FirstVNF_RAM_Server * PN ) - Max( DDR,BR ) ) ) )", "choosing": "( ( ( ( MUC * DS ) + RRSe ) + MLU ) / ( MLU / ( DS * MUC ) ) )", "obj1": 0.5663900414937759, "obj2": 0.38299422074404615}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,DDR ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( Max( Min( ( MLU / RMSe ) ,( RMSe - RRSe ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( Min( ( MUM - MUR ) ,( MLU / CS ) ) - ( ( DS * RCSe ) * ( MLU * RMSe ) ) ) )", "obj1": 0.7199170124481328, "obj2": 0.2364866102560065}, {"determining": "( Min( CRS ,FirstVNF_CPU_Server ) + ( FirstVNF_RAM / ( ( ( ( FirstVNF_RAM + FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,DDR ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) ) ) )", "choosing": "( ( MLU + DS ) - ( DS * MUC ) )", "obj1": 0.7157676348547718, "obj2": 0.2523694398949801}, {"determining": "Min( ( ( FirstVNF_RAM_Server * DDR ) + Max( ARS,FirstVNF_Mem ) ) ,( ( CRS / ACS ) + ( RRS + ( ( FirstVNF_CPU - FirstVNF_RAM ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( RCSe - CS ) - ( RRSe * DS ) ) )", "obj1": 0.6307053941908713, "obj2": 0.26584397117813297}, {"determining": "( ( ( FirstVNF_CPU - FirstVNF_RAM ) / ( ACS - FirstVNF_Mem_Server ) ) - ( ( DDR / DDR ) / Max( MDR,BR ) ) )", "choosing": "( Max( MLU,MLU ) * ( MUR / RMSe ) )", "obj1": 0.8526970954356846, "obj2": 0.13207139969331258}, {"determining": "( Max( BR,DDR ) - ( ( Min( ACS ,BR ) * ( ACS * FirstVNF_Mem ) ) + Max( ( FirstVNF_RAM / AMS ),( PN - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe - CS ) + ( CS - ( MUC - RCSe ) ) )", "obj1": 0.8796680497925311, "obj2": 0.11252540804334177}, {"determining": "( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) )", "choosing": "( ( Min( ( RMSe / MUM ) ,( MUC / MUR ) ) + ( ( MLU + RCSe ) - ( CS * RRSe ) ) ) + ( Max( ( RMSe + CS ),( CS + DS ) ) * Min( ( MUC - RCSe ) ,( MUC - MUC ) ) ) )", "obj1": 0.8672199170124482, "obj2": 0.11451057799105815}, {"determining": "( ( BR / BR ) + ( ARS / ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) ) )", "choosing": "Min( Max( DS,Min( RCSe ,DS ) ) ,( DS - MUM ) )", "obj1": 0.8838174273858921, "obj2": 0.11064067228193346}, {"determining": "( ( Max( BR,BR ) + ( ARS / CRS ) ) - ( FirstVNF_RAM + BR ) )", "choosing": "( ( RRSe - CS ) + ( ( RCSe * MUM ) - MUM ) )", "obj1": 0.27800829875518673, "obj2": 0.6080419066359651}, {"determining": "( ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) - Max( Max( FirstVNF_CPU,FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) * Max( ( MDR + FirstVNF_RAM_Server ),CRS ) )", "choosing": "( ( MLU - MUM ) / Min( Max( RRSe,RCSe ) ,( RCSe + RMSe ) ) )", "obj1": 0.14730290456431536, "obj2": 0.7119507638920239}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( FirstVNF_CPU ,DDR ) )", "choosing": "( ( RMSe - MUR ) - Max( DS,RRSe ) )", "obj1": 0.22406639004149378, "obj2": 0.6267949254894636}, {"determining": "( ( Min( ARS ,PN ) * Max( ACS,FirstVNF_CPU_Server ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( ( RCSe + RRSe ) + MLU ) / ( MLU / ( DS * MUC ) ) )", "obj1": 0.7717842323651453, "obj2": 0.19306565343658147}, {"determining": "Min( ( BR - MDR ) ,( FirstVNF_RAM + ARS ) )", "choosing": "( ( ( Min( RCSe ,RMSe ) - RCSe ) + Max( ( CS + MLU ),Max( RMSe,CS ) ) ) - Max( Min( ( DS / RRSe ) ,( RMSe - MLU ) ),( ( RRSe + MLU ) / Max( DS,RCSe ) ) ) )", "obj1": 0.9771784232365145, "obj2": 0.010927948327663797}, {"determining": "( ( BR / PN ) + ( FirstVNF_RAM_Server / CRS ) )", "choosing": "Min( Max( DS,( RCSe * DS ) ) ,( MUR + MUR ) )", "obj1": 0.41286307053941906, "obj2": 0.539955754097266}, {"determining": "( Min( Const ,FirstVNF_RAM_Server ) * ( ( Const * CRS ) / ( Const / ARS ) ) )", "choosing": "( Max( Max( ( Max( MLU,MUC ) * Max( RCSe,MLU ) ),RMSe ),( MUM + MLU ) ) * ( ( MUC * RRSe ) - ( RMSe * RCSe ) ) )", "obj1": 0.16390041493775934, "obj2": 0.6793075755927802}, {"determining": "( ( AMS + ( ARS / FirstVNF_RAM_Server ) ) / Max( AMS,CRS ) )", "choosing": "( Min( ( DS + MUC ) ,Max( MUC,MUR ) ) + ( Min( DS ,RRSe ) + Max( MUC,DS ) ) )", "obj1": 0.33402489626556015, "obj2": 0.5949290607416909}, {"determining": "Min( ( ( ( FirstVNF_CPU - MRS ) - ( MDR + Const ) ) * ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( BR / FirstVNF_RAM ) ) ) ,Max( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( ARS + ACS ) ),( Max( BR,FirstVNF_RAM ) * Min( ARS ,CRS ) ) ) )", "choosing": "Max( ( Min( ( RCSe * MLU ) ,( RMSe * DS ) ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( DS ,DS ) - Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / Min( CS ,DS ) ) ) )", "obj1": 0.9875518672199171, "obj2": 0.006206516187094802}, {"determining": "Min( ( ( ( FirstVNF_CPU - MRS ) - ( MDR + Const ) ) * ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( BR / FirstVNF_RAM ) ) ) ,Min( Const ,FirstVNF_RAM_Server ) )", "choosing": "Max( ( Min( ( RCSe * MLU ) ,( MUR * DS ) ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( Max( MLU,MUC ) * Max( MUC,MLU ) ) )", "obj1": 0.9875518672199171, "obj2": 0.006206516187094802}, {"determining": "Min( ( ( ( FirstVNF_CPU - MRS ) - ( MDR + Const ) ) * ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( BR / FirstVNF_RAM ) ) ) ,Max( Max( ( FirstVNF_CPU - FirstVNF_RAM ),( ARS + ACS ) ),( Max( BR,FirstVNF_RAM ) * Min( ARS ,CRS ) ) ) )", "choosing": "( Max( MLU,MUC ) * Max( MUC,MLU ) )", "obj1": 0.9854771784232366, "obj2": 0.007336419589905887}, {"determining": "Min( Min( Const ,FirstVNF_RAM_Server ) ,( ARS / AMS ) )", "choosing": "Max( ( Min( ( RCSe * MLU ) ,( MUR * DS ) ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( DS ,DS ) - Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / Min( CS ,DS ) ) ) )", "obj1": 0.3796680497925311, "obj2": 0.5493603021253652}, {"determining": "Min( Min( ( ARS / BR ) ,( MDR - FirstVNF_Mem ) ) ,Min( ( FirstVNF_Mem + ( ( FirstVNF_Mem_Server / MRS ) * ( RRS / ARS ) ) ) ,Min( MDR ,CRS ) ) )", "choosing": "Max( Min( ( MUR + DS ) ,Min( CS ,MUR ) ),( Min( MUR ,RCSe ) / ( RCSe + RMSe ) ) )", "obj1": 0.9688796680497925, "obj2": 0.03824509735173476}, {"determining": "( ( FirstVNF_Mem_Server / MRS ) * Min( Min( ( ARS * BR ) ,( MDR - FirstVNF_Mem ) ) ,Min( ( FirstVNF_Mem + MDR ) ,Min( MDR ,CRS ) ) ) )", "choosing": "( Max( Min( ( MUR + DS ) ,Min( CS ,MUR ) ),( Min( MUR ,MUC ) / ( RCSe + RMSe ) ) ) * ( ( RCSe * MUR ) * Min( Max( MUC,RCSe ) ,Max( RCSe,MUR ) ) ) )", "obj1": 0.9730290456431535, "obj2": 0.030027261081181637}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR + ARS ) ) ,( ( FirstVNF_RAM_Server * PN ) - ( DDR / BR ) ) ) )", "choosing": "( Max( Min( ( MLU / RMSe ) ,( RMSe - RRSe ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( Min( ( MUM - MUR ) ,( MLU / CS ) ) - ( ( DS * RCSe ) * ( MLU * RMSe ) ) ) )", "obj1": 0.5020746887966805, "obj2": 0.44094108601041204}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) )", "choosing": "( ( RMSe - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.1908713692946058, "obj2": 0.6323800386013406}, {"determining": "Max( Min( MRS ,FirstVNF_RAM ),( ACS / AMS ) )", "choosing": "Max( Max( ( MUR / MUM ),Min( CS ,DS ) ),( ( RRSe * MUC ) * RMSe ) )", "obj1": 0.15560165975103735, "obj2": 0.6869605243522406}, {"determining": "( Min( Min( ( Min( Min( Min( ( BR * CRS ) ,( DDR / FirstVNF_CPU_Server ) ) ,Min( ( FirstVNF_CPU - ARS ) ,( ACS - BR ) ) ) ,( ( Min( BR ,CRS ) + Max( RRS,RRS ) ) / ( ( BR / PN ) + ( MRS * MDR ) ) ) ) / ( ( ( ( BR + MDR ) / ( FirstVNF_RAM / FirstVNF_RAM ) ) + ( ( MRS * FirstVNF_Mem_Server ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) - ( Max( Max( Const,AMS ),Max( MDR,MRS ) ) + Max( Min( FirstVNF_CPU_Server ,PN ),Min( ARS ,Const ) ) ) ) ) ,( ( Min( ( Max( AMS,CRS ) / ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ,( Max( RRS,RRS ) - Max( MRS,MRS ) ) ) / Max( Min( ( FirstVNF_Mem_Server / AMS ) ,Min( AMS ,FirstVNF_Mem ) ),( Min( ARS ,ARS ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) * ( ( ( Max( DDR,FirstVNF_Mem ) - ( FirstVNF_CPU / MRS ) ) + Min( Max( CRS,MDR ) ,Min( Const ,DDR ) ) ) - ( Min( Min( FirstVNF_CPU_Server ,PN ) ,( ACS - ARS ) ) * Max( ( PN * FirstVNF_RAM ),( FirstVNF_RAM - AMS ) ) ) ) ) ) ,( ( Min( ( ( Max( RRS,Const ) - ( AMS * FirstVNF_Mem_Server ) ) - Min( ( MDR * CRS ) ,Min( ARS ,PN ) ) ) ,Min( ( ( ARS / FirstVNF_CPU ) + ( CRS + FirstVNF_Mem ) ) ,Max( Max( FirstVNF_Mem,MDR ),( ACS - MDR ) ) ) ) * ( ( ( ( DDR + CRS ) * Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + Max( ( FirstVNF_RAM_Server / FirstVNF_CPU ),( ARS * FirstVNF_Mem ) ) ) + Min( Max( Min( ACS ,AMS ),Max( FirstVNF_CPU_Server,PN ) ) ,Max( ( PN + RRS ),( MDR + AMS ) ) ) ) ) / Min( ( Min( ( ( Const - FirstVNF_Mem ) + ( MDR * FirstVNF_Mem ) ) ,( Max( FirstVNF_Mem,FirstVNF_CPU ) - ( ACS / FirstVNF_Mem_Server ) ) ) - ( ( Max( ARS,BR ) * ( MDR / MDR ) ) + ( Max( ACS,FirstVNF_CPU ) * ( Const + FirstVNF_Mem_Server ) ) ) ) ,( ( ( Min( FirstVNF_Mem ,AMS ) * ( PN - MDR ) ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) * ( CRS + BR ) ) ) + Max( Min( ( ARS + MRS ) ,( MRS + RRS ) ),( ( MDR * Const ) - ( ACS - ACS ) ) ) ) ) ) ) + Max( ( ( Min( ( ( ( AMS / FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,Const ) ) + ( Min( BR ,FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,CRS ) ) ) ,( ( ( MDR / MDR ) * ( ARS / MRS ) ) + ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) / ( ACS - MDR ) ) ) ) - ( Max( ( Max( FirstVNF_CPU_Server,AMS ) - ( AMS / MDR ) ),( Max( MDR,RRS ) - ( DDR / BR ) ) ) - Min( Min( ( DDR / MDR ) ,Max( AMS,RRS ) ) ,( Min( ARS ,FirstVNF_Mem ) + Min( RRS ,FirstVNF_RAM_Server ) ) ) ) ) - Min( ( Max( Max( ( DDR - FirstVNF_CPU_Server ),( ACS - ARS ) ),( ( RRS + MDR ) - ( Const / ARS ) ) ) + ( ( ( MRS + DDR ) - Min( FirstVNF_RAM_Server ,PN ) ) - Max( Min( FirstVNF_CPU_Server ,ARS ),( MDR / PN ) ) ) ) ,( ( Max( Max( FirstVNF_RAM_Server,MRS ),Min( PN ,ARS ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Min( MRS ,ARS ) ) ) + Max( ( ( FirstVNF_Mem / MRS ) * Min( ARS ,FirstVNF_CPU ) ),( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) ) ) ),Max( ( Max( ( ( ( RRS + RRS ) + ( FirstVNF_RAM_Server * CRS ) ) + ( Max( FirstVNF_RAM,BR ) / Max( Const,PN ) ) ),( Max( ( FirstVNF_RAM / ARS ),( DDR - DDR ) ) + ( Max( DDR,ACS ) / ( DDR / BR ) ) ) ) * ( ( ( Min( CRS ,AMS ) + Min( FirstVNF_Mem_Server ,BR ) ) - Max( Min( BR ,DDR ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * ( ( ( DDR + MDR ) - ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) + ( ( DDR + CRS ) - Max( CRS,CRS ) ) ) ) ),( ( Min( Min( ( DDR - FirstVNF_RAM_Server ) ,( AMS * FirstVNF_Mem_Server ) ) ,Min( ( RRS / ARS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ( ( Max( MDR,FirstVNF_CPU_Server ) - ( MDR + FirstVNF_Mem_Server ) ) + ( ( BR * RRS ) * ( MRS + ARS ) ) ) ) / ( ( ( ( FirstVNF_RAM / PN ) * ( CRS * ACS ) ) - ( Min( PN ,FirstVNF_CPU_Server ) / ( FirstVNF_CPU - CRS ) ) ) + Min( ( ( MRS * FirstVNF_CPU_Server ) / Max( CRS,DDR ) ) ,Min( Max( Const,DDR ) ,( DDR * CRS ) ) ) ) ) ) ) )", "choosing": "( Min( MUM ,( MUC / RMSe ) ) / ( RCSe * MUC ) )", "obj1": 0.22821576763485477, "obj2": 0.6135354163220951}, {"determining": "( Max( Max( ( FirstVNF_RAM / FirstVNF_RAM_Server ),( PN - FirstVNF_RAM_Server ) ),DDR ) - ( FirstVNF_RAM + BR ) )", "choosing": "( ( RRSe - CS ) + RCSe )", "obj1": 0.8029045643153527, "obj2": 0.16706308428236655}], "3": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / BR ) + ( PN - FirstVNF_CPU ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) )", "choosing": "Max( ( DS / ( MUM / RCSe ) ),( RRSe + RRSe ) )", "obj1": 0.5892116182572614, "obj2": 0.3809824902828173}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,DDR ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( ( ( MUC - DS ) + RRSe ) + MLU ) / ( MLU / ( DS * MUC ) ) )", "obj1": 0.7676348547717843, "obj2": 0.19641485195394168}, {"determining": "Min( ( ( Max( MDR,FirstVNF_RAM ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) - ( ( Const / ACS ) * ( ACS - DDR ) ) ) ,( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) - Max( Max( FirstVNF_CPU,FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MLU,RMSe ) * ( RRSe - CS ) )", "obj1": 0.2987551867219917, "obj2": 0.5992802085715414}, {"determining": "( Min( FirstVNF_Mem_Server ,MRS ) * ( RRS / ARS ) )", "choosing": "( ( MUC + DS ) * ( ( RCSe * MUR ) * Min( Max( MUC,RCSe ) ,Max( RCSe,RRSe ) ) ) )", "obj1": 0.3029045643153527, "obj2": 0.5983931109324039}, {"determining": "( Max( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ),( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR + ARS ) ) ,Max( ( FirstVNF_RAM_Server * PN ),( DDR / BR ) ) ) )", "choosing": "Min( ( MUC + MUM ) ,( RMSe - RCSe ) )", "obj1": 0.4460580912863071, "obj2": 0.46693261764390354}, {"determining": "( ( ( ( ( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server * Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR + ARS ) ) ,( ( FirstVNF_RAM_Server * PN ) - ( DDR / BR ) ) ) ) + FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,DDR ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( ( ( MUC - RMSe ) + RCSe ) + MLU ) / ( MLU / ( DS * MUC ) ) )", "obj1": 0.7780082987551867, "obj2": 0.1875816817496556}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR + ARS ) ) ,( ( FirstVNF_RAM_Server * PN ) - Max( DDR,BR ) ) ) )", "choosing": "( ( ( ( MUC * DS ) + RRSe ) + MLU ) / ( MLU / ( DS * MUC ) ) )", "obj1": 0.5663900414937759, "obj2": 0.38299422074404615}, {"determining": "Min( ( ( FirstVNF_RAM_Server * DDR ) + Max( ARS,FirstVNF_Mem ) ) ,( ( CRS / ACS ) + ( RRS + ( ( FirstVNF_CPU - FirstVNF_RAM ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( RCSe - CS ) - ( RRSe * DS ) ) )", "obj1": 0.6307053941908713, "obj2": 0.26584397117813297}, {"determining": "( ( ( FirstVNF_CPU - FirstVNF_RAM ) / ( ACS - FirstVNF_Mem_Server ) ) - ( ( DDR / DDR ) / Max( MDR,BR ) ) )", "choosing": "( Max( MLU,MLU ) * ( MUR / RMSe ) )", "obj1": 0.8526970954356846, "obj2": 0.13207139969331258}, {"determining": "( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) )", "choosing": "( ( Min( ( RMSe / MUM ) ,( MUC / MUR ) ) + ( ( MLU + RCSe ) - ( CS * RRSe ) ) ) + ( Max( ( RMSe + CS ),( CS + DS ) ) * Min( ( MUC - RCSe ) ,( MUC - MUC ) ) ) )", "obj1": 0.8672199170124482, "obj2": 0.11451057799105815}, {"determining": "( ( Max( BR,BR ) + ( ARS / CRS ) ) - ( FirstVNF_RAM + BR ) )", "choosing": "( ( RRSe - CS ) + ( ( RCSe * MUM ) - MUM ) )", "obj1": 0.27800829875518673, "obj2": 0.6080419066359651}, {"determining": "( ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) - Max( Max( FirstVNF_CPU,FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) * Max( ( MDR + FirstVNF_RAM_Server ),CRS ) )", "choosing": "( ( MLU - MUM ) / Min( Max( RRSe,RCSe ) ,( RCSe + RMSe ) ) )", "obj1": 0.14730290456431536, "obj2": 0.7119507638920239}, {"determining": "( ( Min( ARS ,PN ) * Max( ACS,FirstVNF_CPU_Server ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( ( RCSe + RRSe ) + MLU ) / ( MLU / ( DS * MUC ) ) )", "obj1": 0.7717842323651453, "obj2": 0.19306565343658147}, {"determining": "( Min( Const ,FirstVNF_RAM_Server ) * ( ( Const * CRS ) / ( Const / ARS ) ) )", "choosing": "( Max( Max( ( Max( MLU,MUC ) * Max( RCSe,MLU ) ),RMSe ),( MUM + MLU ) ) * ( ( MUC * RRSe ) - ( RMSe * RCSe ) ) )", "obj1": 0.16390041493775934, "obj2": 0.6793075755927802}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR + ARS ) ) ,( ( FirstVNF_RAM_Server * PN ) - ( DDR / BR ) ) ) )", "choosing": "( Max( Min( ( MLU / RMSe ) ,( RMSe - RRSe ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( Min( ( MUM - MUR ) ,( MLU / CS ) ) - ( ( DS * RCSe ) * ( MLU * RMSe ) ) ) )", "obj1": 0.5020746887966805, "obj2": 0.44094108601041204}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) )", "choosing": "( ( RMSe - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.1908713692946058, "obj2": 0.6323800386013406}, {"determining": "( Min( Min( ( Min( Min( Min( ( BR * CRS ) ,( DDR / FirstVNF_CPU_Server ) ) ,Min( ( FirstVNF_CPU - ARS ) ,( ACS - BR ) ) ) ,( ( Min( BR ,CRS ) + Max( RRS,RRS ) ) / ( ( BR / PN ) + ( MRS * MDR ) ) ) ) / ( ( ( ( BR + MDR ) / ( FirstVNF_RAM / FirstVNF_RAM ) ) + ( ( MRS * FirstVNF_Mem_Server ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) - ( Max( Max( Const,AMS ),Max( MDR,MRS ) ) + Max( Min( FirstVNF_CPU_Server ,PN ),Min( ARS ,Const ) ) ) ) ) ,( ( Min( ( Max( AMS,CRS ) / ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ,( Max( RRS,RRS ) - Max( MRS,MRS ) ) ) / Max( Min( ( FirstVNF_Mem_Server / AMS ) ,Min( AMS ,FirstVNF_Mem ) ),( Min( ARS ,ARS ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) * ( ( ( Max( DDR,FirstVNF_Mem ) - ( FirstVNF_CPU / MRS ) ) + Min( Max( CRS,MDR ) ,Min( Const ,DDR ) ) ) - ( Min( Min( FirstVNF_CPU_Server ,PN ) ,( ACS - ARS ) ) * Max( ( PN * FirstVNF_RAM ),( FirstVNF_RAM - AMS ) ) ) ) ) ) ,( ( Min( ( ( Max( RRS,Const ) - ( AMS * FirstVNF_Mem_Server ) ) - Min( ( MDR * CRS ) ,Min( ARS ,PN ) ) ) ,Min( ( ( ARS / FirstVNF_CPU ) + ( CRS + FirstVNF_Mem ) ) ,Max( Max( FirstVNF_Mem,MDR ),( ACS - MDR ) ) ) ) * ( ( ( ( DDR + CRS ) * Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + Max( ( FirstVNF_RAM_Server / FirstVNF_CPU ),( ARS * FirstVNF_Mem ) ) ) + Min( Max( Min( ACS ,AMS ),Max( FirstVNF_CPU_Server,PN ) ) ,Max( ( PN + RRS ),( MDR + AMS ) ) ) ) ) / Min( ( Min( ( ( Const - FirstVNF_Mem ) + ( MDR * FirstVNF_Mem ) ) ,( Max( FirstVNF_Mem,FirstVNF_CPU ) - ( ACS / FirstVNF_Mem_Server ) ) ) - ( ( Max( ARS,BR ) * ( MDR / MDR ) ) + ( Max( ACS,FirstVNF_CPU ) * ( Const + FirstVNF_Mem_Server ) ) ) ) ,( ( ( Min( FirstVNF_Mem ,AMS ) * ( PN - MDR ) ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) * ( CRS + BR ) ) ) + Max( Min( ( ARS + MRS ) ,( MRS + RRS ) ),( ( MDR * Const ) - ( ACS - ACS ) ) ) ) ) ) ) + Max( ( ( Min( ( ( ( AMS / FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,Const ) ) + ( Min( BR ,FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,CRS ) ) ) ,( ( ( MDR / MDR ) * ( ARS / MRS ) ) + ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) / ( ACS - MDR ) ) ) ) - ( Max( ( Max( FirstVNF_CPU_Server,AMS ) - ( AMS / MDR ) ),( Max( MDR,RRS ) - ( DDR / BR ) ) ) - Min( Min( ( DDR / MDR ) ,Max( AMS,RRS ) ) ,( Min( ARS ,FirstVNF_Mem ) + Min( RRS ,FirstVNF_RAM_Server ) ) ) ) ) - Min( ( Max( Max( ( DDR - FirstVNF_CPU_Server ),( ACS - ARS ) ),( ( RRS + MDR ) - ( Const / ARS ) ) ) + ( ( ( MRS + DDR ) - Min( FirstVNF_RAM_Server ,PN ) ) - Max( Min( FirstVNF_CPU_Server ,ARS ),( MDR / PN ) ) ) ) ,( ( Max( Max( FirstVNF_RAM_Server,MRS ),Min( PN ,ARS ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Min( MRS ,ARS ) ) ) + Max( ( ( FirstVNF_Mem / MRS ) * Min( ARS ,FirstVNF_CPU ) ),( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) ) ) ),Max( ( Max( ( ( ( RRS + RRS ) + ( FirstVNF_RAM_Server * CRS ) ) + ( Max( FirstVNF_RAM,BR ) / Max( Const,PN ) ) ),( Max( ( FirstVNF_RAM / ARS ),( DDR - DDR ) ) + ( Max( DDR,ACS ) / ( DDR / BR ) ) ) ) * ( ( ( Min( CRS ,AMS ) + Min( FirstVNF_Mem_Server ,BR ) ) - Max( Min( BR ,DDR ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * ( ( ( DDR + MDR ) - ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) + ( ( DDR + CRS ) - Max( CRS,CRS ) ) ) ) ),( ( Min( Min( ( DDR - FirstVNF_RAM_Server ) ,( AMS * FirstVNF_Mem_Server ) ) ,Min( ( RRS / ARS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ( ( Max( MDR,FirstVNF_CPU_Server ) - ( MDR + FirstVNF_Mem_Server ) ) + ( ( BR * RRS ) * ( MRS + ARS ) ) ) ) / ( ( ( ( FirstVNF_RAM / PN ) * ( CRS * ACS ) ) - ( Min( PN ,FirstVNF_CPU_Server ) / ( FirstVNF_CPU - CRS ) ) ) + Min( ( ( MRS * FirstVNF_CPU_Server ) / Max( CRS,DDR ) ) ,Min( Max( Const,DDR ) ,( DDR * CRS ) ) ) ) ) ) ) )", "choosing": "( Min( MUM ,( MUC / RMSe ) ) / ( RCSe * MUC ) )", "obj1": 0.22821576763485477, "obj2": 0.6135354163220951}, {"determining": "( Max( Max( ( FirstVNF_RAM / FirstVNF_RAM_Server ),( PN - FirstVNF_RAM_Server ) ),DDR ) - ( FirstVNF_RAM + BR ) )", "choosing": "( ( RRSe - CS ) + RCSe )", "obj1": 0.8029045643153527, "obj2": 0.16706308428236655}, {"determining": "Min( Min( ( ARS * BR ) ,( MDR - FirstVNF_Mem ) ) ,Min( ( FirstVNF_Mem + ( ( FirstVNF_Mem_Server / MRS ) * ( RRS / ARS ) ) ) ,Min( MDR ,CRS ) ) )", "choosing": "Max( Max( Min( DS ,RRSe ),( MUM / RRSe ) ),( ( RMSe / MUR ) * ( RRSe - CS ) ) )", "obj1": 0.9730290456431535, "obj2": 0.024187549170693635}, {"determining": "( ( BR / PN ) + ( ARS / CRS ) )", "choosing": "Max( ( Min( ( RCSe * MLU ) ,( MUR * DS ) ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( DS ,DS ) - Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / Min( CS ,DS ) ) ) )", "obj1": 0.34232365145228216, "obj2": 0.5736410613750782}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( ( RRS / ARS ) + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR + ARS ) ) ,( ( FirstVNF_RAM_Server * PN ) - ( DDR / BR ) ) ) )", "choosing": "( ( ( ( MUC - DS ) + RRSe ) + Min( Max( MUC,RCSe ) ,Max( RCSe,MUR ) ) ) / ( MLU / ( DS * MUC ) ) )", "obj1": 0.5435684647302904, "obj2": 0.3992269531234976}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR + ARS ) ) ,( ( FirstVNF_RAM_Server * PN ) - ( DDR / BR ) ) ) )", "choosing": "( ( ( ( MUC - DS ) + RRSe ) + MLU ) / ( MLU / ( DS * MUC ) ) )", "obj1": 0.487551867219917, "obj2": 0.4540303618521625}, {"determining": "Min( ( ACS / FirstVNF_RAM ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( MLU,RMSe ) * ( RRSe - CS ) )", "obj1": 0.2987551867219917, "obj2": 0.5992802085715414}, {"determining": "( ( ( CRS / ACS ) + ( RRS + ( ( FirstVNF_CPU - FirstVNF_RAM ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR + ARS ) ) ,( ( FirstVNF_RAM_Server * PN ) - ( DDR / BR ) ) ) )", "choosing": "Min( CS ,( RMSe - MUM ) )", "obj1": 0.3091286307053942, "obj2": 0.5803835785353822}, {"determining": "( Min( Min( ( FirstVNF_RAM - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR + ARS ) ) ,( ( FirstVNF_RAM_Server * PN ) - ( DDR / BR ) ) ) )", "choosing": "( Max( MLU,MLU ) * Max( ( MLU - CS ),( RRSe * MUR ) ) )", "obj1": 0.42323651452282157, "obj2": 0.46812036449422034}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server * Const ) ) ) - Min( Max( ( DDR - FirstVNF_Mem ),( MDR + ARS ) ) ,( ( FirstVNF_RAM_Server * PN ) - ( DDR / BR ) ) ) )", "choosing": "( ( RMSe - RRSe ) - ( DS - RRSe ) )", "obj1": 0.34854771784232363, "obj2": 0.5213145546498036}, {"determining": "( ( ( FirstVNF_Mem / ACS ) * ( Const + FirstVNF_RAM ) ) - ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * FirstVNF_RAM ) / ( CRS * FirstVNF_RAM ) ) )", "choosing": "( ( RMSe * ( MUC - RMSe ) ) / ( RCSe * MLU ) )", "obj1": 0.6597510373443983, "obj2": 0.25177026521550727}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR + ARS ) ) ,( ( FirstVNF_RAM_Server * PN ) - ( DDR / BR ) ) ) )", "choosing": "( Max( Min( ( MLU / RMSe ) ,( RMSe - RRSe ) ),( ( MUR / MLU ) - Max( MLU,MUC ) ) ) - ( Min( ( MUM - MUR ) ,( MLU / CS ) ) - ( ( DS * RCSe ) * ( MLU * RMSe ) ) ) )", "obj1": 0.5020746887966805, "obj2": 0.44094108601041204}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,DDR ) + Max( ARS,FirstVNF_Mem ) ) ,( ( CRS / ACS ) + ( RRS + ( ( FirstVNF_CPU - FirstVNF_Mem ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( DS,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.7074688796680498, "obj2": 0.206027395209636}, {"determining": "( ( ( ( ( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR + ARS ) ) ,( ( FirstVNF_RAM_Server * PN ) - ( DDR / BR ) ) ) ) + FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,DDR ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.6659751037344398, "obj2": 0.24934367074258898}, {"determining": "Min( Min( ( ARS * BR ) ,( ( ( CRS / BR ) + ( PN - FirstVNF_CPU ) ) - ( ( MDR * RRS ) / Min( DDR ,PN ) ) ) ) ,Min( ( FirstVNF_Mem + ( ( FirstVNF_Mem_Server / MRS ) * ( RRS / ARS ) ) ) ,Min( MDR ,CRS ) ) )", "choosing": "Max( Min( ( MUR + DS ) ,( ( ( MUM / RRSe ) + ( CS / MUC ) ) * Max( ( DS / ( MUM - RCSe ) ),( RRSe + RRSe ) ) ) ),( Min( MUR ,MUC ) / ( RCSe + RMSe ) ) )", "obj1": 0.6182572614107884, "obj2": 0.36203136542093134}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) )", "choosing": "( ( ( RCSe + RRSe ) + MLU ) / ( MLU / ( DS * MUC ) ) )", "obj1": 0.34024896265560167, "obj2": 0.5788543866615252}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,FirstVNF_RAM ) )", "choosing": "( Max( Max( ( Max( MLU,MUC ) * Max( MUC,MLU ) ),RMSe ),( MUM + CS ) ) * ( ( MUC * RRSe ) - ( RMSe * RCSe ) ) )", "obj1": 0.14937759336099585, "obj2": 0.6861405377540728}, {"determining": "( ( AMS + ( FirstVNF_Mem_Server + ( FirstVNF_CPU + AMS ) ) ) * Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( Max( MLU,RMSe ) * ( RRSe - CS ) ) - ( RMSe + RMSe ) )", "obj1": 0.16804979253112035, "obj2": 0.6570861723028433}, {"determining": "( ( BR / PN ) + ( ( PN - FirstVNF_CPU_Server ) + ( ARS - FirstVNF_RAM ) ) )", "choosing": "Min( Max( DS,( RCSe * DS ) ) ,Min( RCSe ,MUC ) )", "obj1": 0.8257261410788381, "obj2": 0.16559635879248036}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_CPU ) * Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * Max( FirstVNF_Mem,FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( MUC - ( ( ( MUM - MUR ) / ( MLU / CS ) ) - ( ( DS * RCSe ) * ( MLU * RMSe ) ) ) )", "obj1": 0.7551867219917012, "obj2": 0.20223068117139723}, {"determining": "Min( Min( ( ARS / BR ) ,( MDR - FirstVNF_Mem ) ) ,Min( ( FirstVNF_Mem + ( BR * ( RRS / ARS ) ) ) ,Min( MDR ,CRS ) ) )", "choosing": "Max( ( RMSe - CS ),( Min( MUR ,RCSe ) / ( RCSe + RMSe ) ) )", "obj1": 0.966804979253112, "obj2": 0.03292774873337451}, {"determining": "( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) )", "choosing": "( ( Min( ( RMSe / MUM ) ,( MUC / MUR ) ) + ( ( MLU + RCSe ) - ( CS * RRSe ) ) ) + ( Max( ( RMSe + CS ),( CS + DS ) ) * Min( ( MUC - RCSe ) ,( MUC - MUC ) ) ) )", "obj1": 0.8672199170124482, "obj2": 0.11451057799105815}, {"determining": "( ( ( ( ( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR + ARS ) ) ,( ( FirstVNF_RAM_Server * PN ) - ( DDR / BR ) ) ) ) + FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,DDR ) ) + ( Min( ACS ,PN ) / PN ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( ( ( MUC - RMSe ) + Max( DS,( RCSe * DS ) ) ) + MLU ) / ( MLU / ( DS * MUC ) ) )", "obj1": 0.7800829875518672, "obj2": 0.18380620635204709}, {"determining": "( ( ( ( ( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR + ARS ) ) ,( ( FirstVNF_RAM_Server * PN ) - ( DDR / BR ) ) ) ) + FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,DDR ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( ( ( MUC - RMSe ) + RRSe ) + MLU ) / ( MLU / ( DS * MUC ) ) )", "obj1": 0.7780082987551867, "obj2": 0.1875816817496556}, {"determining": "( Max( BR,( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( BR / FirstVNF_RAM ) ) ) - ( ( Min( ACS ,BR ) * ( ACS * FirstVNF_Mem ) ) + Max( ( FirstVNF_RAM / AMS ),( PN - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe - CS ) + ( CS - ( Min( MLU ,RCSe ) - RCSe ) ) )", "obj1": 0.5269709543568465, "obj2": 0.43495499680849037}, {"determining": "( Max( BR,DDR ) - ( ( Min( ACS ,BR ) * ( ACS * FirstVNF_Mem ) ) + Max( ( FirstVNF_RAM / AMS ),( PN - FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( Min( ( RCSe * MLU ) ,( RMSe * DS ) ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Min( DS ,DS ) - Max( DS,CS ) ) - ( Min( MLU ,RCSe ) / Min( CS ,DS ) ) ) )", "obj1": 0.8858921161825726, "obj2": 0.10348883304330396}, {"determining": "( Max( ( Min( ( ( ( ( CRS + MDR ) * ( FirstVNF_RAM_Server / AMS ) ) / Min( ( RRS - CRS ) ,( FirstVNF_RAM * MDR ) ) ) / Min( ( ( MRS + FirstVNF_CPU ) * ( PN + FirstVNF_CPU_Server ) ) ,Max( ( FirstVNF_Mem_Server + MDR ),( FirstVNF_CPU_Server / PN ) ) ) ) ,Max( ( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) + Max( FirstVNF_Mem,FirstVNF_RAM ) ) - Min( ( RRS * FirstVNF_RAM ) ,( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) ),( Min( ( Const + MDR ) ,( DDR * MDR ) ) / ( ( MDR * FirstVNF_CPU ) / ( MDR - FirstVNF_Mem_Server ) ) ) ) ) + Max( ( Min( ( ( FirstVNF_CPU_Server / ACS ) / Max( CRS,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_Mem / FirstVNF_RAM ) - ( ARS / Const ) ) ) - Max( ( ( ARS * CRS ) * Min( MRS ,FirstVNF_RAM ) ),( Max( ARS,BR ) - ( BR / CRS ) ) ) ),Min( ( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( FirstVNF_Mem_Server + AMS ) ) + ( Min( ARS ,FirstVNF_RAM_Server ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) ,Min( Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,( FirstVNF_Mem_Server + Const ) ) ,( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) ) ) ),Max( ( ( Min( ( Min( FirstVNF_Mem_Server ,CRS ) * ( RRS + ARS ) ) ,Max( ( MDR + PN ),Max( RRS,CRS ) ) ) + ( Min( Min( FirstVNF_RAM ,Const ) ,Max( ACS,ARS ) ) - Min( ( ARS - DDR ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) ) ) + ( ( ( Max( FirstVNF_RAM,BR ) - Min( RRS ,PN ) ) * ( ( Const - MRS ) - Max( RRS,ARS ) ) ) / Min( ( ( AMS * BR ) - ( Const * FirstVNF_CPU ) ) ,( ( AMS - MRS ) / Max( PN,MDR ) ) ) ) ),( ( ( ( ( MRS + FirstVNF_RAM ) + ( MDR * FirstVNF_RAM ) ) - Max( Max( ACS,FirstVNF_Mem_Server ),( AMS + CRS ) ) ) - ( ( ( BR / BR ) - ( ARS * FirstVNF_CPU_Server ) ) * ( Max( FirstVNF_CPU_Server,PN ) + ( MDR + FirstVNF_CPU_Server ) ) ) ) * ( ( ( ( CRS - AMS ) * Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) / Min( Max( CRS,AMS ) ,( PN / FirstVNF_RAM_Server ) ) ) - ( ( Max( MDR,Const ) + ( FirstVNF_CPU * ACS ) ) + ( ( DDR + RRS ) * Max( FirstVNF_RAM_Server,RRS ) ) ) ) ) ) ) * ( Max( ( ( Max( ( Max( FirstVNF_RAM,ARS ) + ( AMS + ARS ) ),Min( ( Const + FirstVNF_RAM_Server ) ,( CRS / ARS ) ) ) * ( ( ( FirstVNF_Mem_Server - PN ) - ( FirstVNF_RAM_Server + BR ) ) / ( ( FirstVNF_RAM - PN ) - ( Const * AMS ) ) ) ) - ( ( ( ( FirstVNF_RAM / FirstVNF_Mem ) - Min( FirstVNF_CPU_Server ,BR ) ) * Max( ( BR / MDR ),Min( FirstVNF_RAM_Server ,Const ) ) ) / ( ( Min( DDR ,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) / ( Max( RRS,BR ) / Min( MRS ,DDR ) ) ) ) ),Max( Min( Max( ( ( FirstVNF_RAM_Server * CRS ) - ( Const - CRS ) ),Min( Max( FirstVNF_RAM,AMS ) ,Min( PN ,FirstVNF_RAM ) ) ) ,Max( ( Max( ACS,FirstVNF_CPU_Server ) * ( CRS * FirstVNF_Mem ) ),Min( ( ARS + ARS ) ,( AMS - BR ) ) ) ),Min( Min( Min( ( FirstVNF_Mem * PN ) ,( AMS / FirstVNF_RAM_Server ) ) ,Max( ( DDR - Const ),( RRS * FirstVNF_RAM ) ) ) ,( Max( Min( ARS ,BR ),( FirstVNF_RAM / MRS ) ) * Max( Min( MRS ,FirstVNF_Mem_Server ),Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) - ( ( ( ( ( ( PN - RRS ) / ( FirstVNF_Mem_Server * MDR ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) * Max( ARS,FirstVNF_RAM ) ) ) + ( Min( ( FirstVNF_CPU * FirstVNF_Mem_Server ) ,( ARS - FirstVNF_CPU_Server ) ) / ( ( ACS + FirstVNF_CPU_Server ) * ( PN + FirstVNF_CPU ) ) ) ) + ( ( ( ( RRS - ARS ) + Max( BR,FirstVNF_CPU ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - ( PN - MRS ) ) ) - ( Max( ( FirstVNF_Mem + FirstVNF_Mem_Server ),( MRS - Const ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) * ( AMS - FirstVNF_RAM ) ) ) ) ) - Min( Max( ( ( ( RRS / DDR ) + ( DDR - ARS ) ) / ( ( BR - FirstVNF_Mem_Server ) - ( ACS - ACS ) ) ),( Max( ( ACS * FirstVNF_Mem ),( FirstVNF_RAM_Server / PN ) ) - ( Max( Const,BR ) + Min( BR ,RRS ) ) ) ) ,( ( Min( ( ACS * FirstVNF_RAM ) ,Min( AMS ,RRS ) ) / ( Max( BR,MDR ) + Max( PN,FirstVNF_RAM ) ) ) - ( Min( ( FirstVNF_RAM / PN ) ,( DDR * FirstVNF_CPU ) ) + ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) / ( PN - RRS ) ) ) ) ) ) ) )", "choosing": "( Max( Min( Max( ( ( Max( ( MUR / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) ,( Min( Min( ( Min( CS ,RMSe ) / Min( DS ,MUC ) ) ,( ( RCSe * MUM ) / ( DS * MUM ) ) ) ,( ( ( MLU + MUR ) * Max( RRSe,RCSe ) ) * ( ( RMSe + RCSe ) - ( MLU + RRSe ) ) ) ) / ( Min( ( ( MLU / MLU ) / ( RMSe - CS ) ) ,Max( Max( CS,MUM ),( MUC - RMSe ) ) ) / Max( Max( ( MUM / RMSe ),( MLU * CS ) ),( ( RCSe * RRSe ) - ( RMSe - MUM ) ) ) ) ) ),Min( ( ( ( ( ( RRSe * CS ) / ( MUC * MUR ) ) + Min( ( RCSe * MUR ) ,Min( MUM ,CS ) ) ) - Min( ( ( RRSe * MUR ) * Max( CS,MUC ) ) ,( ( RCSe - RCSe ) / ( MUR * CS ) ) ) ) - ( Min( Max( Max( MUR,MUR ),Min( MUM ,RCSe ) ) ,( ( MUC * DS ) + Max( DS,MUR ) ) ) - ( ( ( DS / MUR ) + Max( DS,RCSe ) ) - Min( ( RRSe - RMSe ) ,Min( CS ,RMSe ) ) ) ) ) ,( Min( Max( ( ( MLU - RRSe ) * ( MUR / RMSe ) ),( Min( RRSe ,MLU ) + ( RRSe / CS ) ) ) ,Max( ( ( RMSe - RRSe ) / ( MUR / RMSe ) ),( ( MUC + MUR ) / ( CS * MUR ) ) ) ) - ( Min( ( Max( MLU,CS ) + ( CS / MUM ) ) ,( ( CS / RMSe ) / Max( DS,MUR ) ) ) * Max( ( ( RMSe - DS ) / Max( MUM,CS ) ),( Min( RCSe ,MUM ) / ( DS * MUC ) ) ) ) ) ) ) + ( Max( ( ( ( Min( Max( RRSe,CS ) ,Min( MUR ,RMSe ) ) / Min( Max( MUM,MUM ) ,( MUC / MUC ) ) ) - ( Max( ( RCSe * MLU ),( RRSe * RRSe ) ) / ( ( RRSe / RMSe ) / ( MLU - CS ) ) ) ) + Min( Max( Min( ( DS * RCSe ) ,( MUR - CS ) ),( ( RMSe / MUM ) * ( MLU / DS ) ) ) ,( ( Max( RRSe,RMSe ) * ( MUC * CS ) ) - ( ( RMSe / CS ) / ( RCSe / MUR ) ) ) ) ),Max( ( Max( ( ( RMSe * RRSe ) / ( MLU * CS ) ),( ( CS / RMSe ) / ( DS * RRSe ) ) ) + ( ( Min( RCSe ,CS ) / ( CS / RRSe ) ) * ( ( RCSe - CS ) / ( MLU * MUC ) ) ) ),( ( Min( ( MUM + MUC ) ,( RCSe * MUR ) ) * ( ( MUR * CS ) + ( MUC / MUR ) ) ) * Max( Min( ( DS * CS ) ,Min( RMSe ,DS ) ),( Max( RCSe,RMSe ) + Max( DS,MUR ) ) ) ) ) ) / ( ( ( ( Min( ( MLU * RMSe ) ,( MLU / MUR ) ) * ( ( RCSe * MUM ) / ( MUR * MLU ) ) ) - Min( ( ( RRSe + RMSe ) + ( MLU / RCSe ) ) ,Max( Max( MLU,MUC ),( MLU - CS ) ) ) ) + Max( Max( ( Min( RMSe ,CS ) + ( RRSe * MUM ) ),( ( DS / MUM ) - Min( DS ,CS ) ) ),( Min( ( MLU / RCSe ) ,( MLU - MLU ) ) / Min( ( MUR + MUR ) ,( MUC - MUR ) ) ) ) ) * ( ( Max( Max( ( DS - MUR ),( RCSe * RRSe ) ),Min( ( RCSe + MUC ) ,( RMSe + DS ) ) ) * ( ( ( RCSe / MUC ) - ( MUC - RMSe ) ) - ( ( DS + RMSe ) / ( MUR - MUC ) ) ) ) / Max( ( ( Min( MUM ,CS ) + ( MUC / RRSe ) ) / Max( ( RMSe / CS ),( RCSe - DS ) ) ),( ( ( RCSe * MLU ) + ( RCSe * MUM ) ) + Max( ( RMSe - DS ),( RCSe + MUC ) ) ) ) ) ) ) )", "obj1": 0.8443983402489627, "obj2": 0.13779806693042893}, {"determining": "( ( Min( ARS ,PN ) * Max( ACS,FirstVNF_CPU_Server ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( ( RCSe + RRSe ) + MLU ) / ( MLU / ( DS * MUC ) ) )", "obj1": 0.7759336099585062, "obj2": 0.18866206458243567}, {"determining": "Min( Min( Const ,( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) ) ,( ARS / AMS ) )", "choosing": "Max( ( Min( ( RCSe * MLU ) ,( MUR * DS ) ) - ( Min( RMSe ,MUM ) - ( RCSe + MUR ) ) ),( ( Max( ( RMSe + CS ),( CS + DS ) ) * Min( ( MUC - RCSe ) ,( MUC - MUC ) ) ) - ( Min( MLU ,RCSe ) / Min( CS ,DS ) ) ) )", "obj1": 0.8900414937759336, "obj2": 0.09982101054113124}, {"determining": "( ( ( FirstVNF_CPU - FirstVNF_RAM ) / ( ACS - FirstVNF_Mem_Server ) ) - ( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) ) )", "choosing": "( Max( MLU,( ( RMSe - RRSe ) - Max( DS,RRSe ) ) ) * ( MUR / RMSe ) )", "obj1": 0.9232365145228216, "obj2": 0.08125064239763474}, {"determining": "( ( ACS / MRS ) + Min( CRS ,DDR ) )", "choosing": "( MLU - Max( DS,RRSe ) )", "obj1": 0.2925311203319502, "obj2": 0.6073651042129871}, {"determining": "( ( ( FirstVNF_CPU - FirstVNF_RAM ) / ( ACS - FirstVNF_Mem_Server ) ) - ( ( DDR / DDR ) / Max( MDR,BR ) ) )", "choosing": "( Max( MLU,MLU ) * ( MUR / RMSe ) )", "obj1": 0.8775933609958506, "obj2": 0.10786191788228962}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) )", "choosing": "( ( RMSe - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.22406639004149378, "obj2": 0.6187411674046065}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,DDR ) + Max( ARS,FirstVNF_Mem ) ) ,( ( CRS / ACS ) + ( RRS + ( ( FirstVNF_CPU - FirstVNF_RAM ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.6224066390041494, "obj2": 0.2673387877817526}], "4": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ),( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR + ARS ) ) ,Max( ( FirstVNF_RAM_Server * PN ),( DDR / BR ) ) ) )", "choosing": "Min( ( MUC + MUM ) ,( RMSe - RCSe ) )", "obj1": 0.4460580912863071, "obj2": 0.46693261764390354}, {"determining": "Min( ( ( FirstVNF_RAM_Server * DDR ) + Max( ARS,FirstVNF_Mem ) ) ,( ( CRS / ACS ) + ( RRS + ( ( FirstVNF_CPU - FirstVNF_RAM ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( RCSe - CS ) - ( RRSe * DS ) ) )", "obj1": 0.6307053941908713, "obj2": 0.26584397117813297}, {"determining": "( ( Max( BR,BR ) + ( ARS / CRS ) ) - ( FirstVNF_RAM + BR ) )", "choosing": "( ( RRSe - CS ) + ( ( RCSe * MUM ) - MUM ) )", "obj1": 0.27800829875518673, "obj2": 0.6080419066359651}, {"determining": "( ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) - Max( Max( FirstVNF_CPU,FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) * Max( ( MDR + FirstVNF_RAM_Server ),CRS ) )", "choosing": "( ( MLU - MUM ) / Min( Max( RRSe,RCSe ) ,( RCSe + RMSe ) ) )", "obj1": 0.14730290456431536, "obj2": 0.7119507638920239}, {"determining": "( Min( Const ,FirstVNF_RAM_Server ) * ( ( Const * CRS ) / ( Const / ARS ) ) )", "choosing": "( Max( Max( ( Max( MLU,MUC ) * Max( RCSe,MLU ) ),RMSe ),( MUM + MLU ) ) * ( ( MUC * RRSe ) - ( RMSe * RCSe ) ) )", "obj1": 0.16390041493775934, "obj2": 0.6793075755927802}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) )", "choosing": "( ( RMSe - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.1908713692946058, "obj2": 0.6323800386013406}, {"determining": "( Min( Min( ( Min( Min( Min( ( BR * CRS ) ,( DDR / FirstVNF_CPU_Server ) ) ,Min( ( FirstVNF_CPU - ARS ) ,( ACS - BR ) ) ) ,( ( Min( BR ,CRS ) + Max( RRS,RRS ) ) / ( ( BR / PN ) + ( MRS * MDR ) ) ) ) / ( ( ( ( BR + MDR ) / ( FirstVNF_RAM / FirstVNF_RAM ) ) + ( ( MRS * FirstVNF_Mem_Server ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) - ( Max( Max( Const,AMS ),Max( MDR,MRS ) ) + Max( Min( FirstVNF_CPU_Server ,PN ),Min( ARS ,Const ) ) ) ) ) ,( ( Min( ( Max( AMS,CRS ) / ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ,( Max( RRS,RRS ) - Max( MRS,MRS ) ) ) / Max( Min( ( FirstVNF_Mem_Server / AMS ) ,Min( AMS ,FirstVNF_Mem ) ),( Min( ARS ,ARS ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) * ( ( ( Max( DDR,FirstVNF_Mem ) - ( FirstVNF_CPU / MRS ) ) + Min( Max( CRS,MDR ) ,Min( Const ,DDR ) ) ) - ( Min( Min( FirstVNF_CPU_Server ,PN ) ,( ACS - ARS ) ) * Max( ( PN * FirstVNF_RAM ),( FirstVNF_RAM - AMS ) ) ) ) ) ) ,( ( Min( ( ( Max( RRS,Const ) - ( AMS * FirstVNF_Mem_Server ) ) - Min( ( MDR * CRS ) ,Min( ARS ,PN ) ) ) ,Min( ( ( ARS / FirstVNF_CPU ) + ( CRS + FirstVNF_Mem ) ) ,Max( Max( FirstVNF_Mem,MDR ),( ACS - MDR ) ) ) ) * ( ( ( ( DDR + CRS ) * Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + Max( ( FirstVNF_RAM_Server / FirstVNF_CPU ),( ARS * FirstVNF_Mem ) ) ) + Min( Max( Min( ACS ,AMS ),Max( FirstVNF_CPU_Server,PN ) ) ,Max( ( PN + RRS ),( MDR + AMS ) ) ) ) ) / Min( ( Min( ( ( Const - FirstVNF_Mem ) + ( MDR * FirstVNF_Mem ) ) ,( Max( FirstVNF_Mem,FirstVNF_CPU ) - ( ACS / FirstVNF_Mem_Server ) ) ) - ( ( Max( ARS,BR ) * ( MDR / MDR ) ) + ( Max( ACS,FirstVNF_CPU ) * ( Const + FirstVNF_Mem_Server ) ) ) ) ,( ( ( Min( FirstVNF_Mem ,AMS ) * ( PN - MDR ) ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) * ( CRS + BR ) ) ) + Max( Min( ( ARS + MRS ) ,( MRS + RRS ) ),( ( MDR * Const ) - ( ACS - ACS ) ) ) ) ) ) ) + Max( ( ( Min( ( ( ( AMS / FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,Const ) ) + ( Min( BR ,FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,CRS ) ) ) ,( ( ( MDR / MDR ) * ( ARS / MRS ) ) + ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) / ( ACS - MDR ) ) ) ) - ( Max( ( Max( FirstVNF_CPU_Server,AMS ) - ( AMS / MDR ) ),( Max( MDR,RRS ) - ( DDR / BR ) ) ) - Min( Min( ( DDR / MDR ) ,Max( AMS,RRS ) ) ,( Min( ARS ,FirstVNF_Mem ) + Min( RRS ,FirstVNF_RAM_Server ) ) ) ) ) - Min( ( Max( Max( ( DDR - FirstVNF_CPU_Server ),( ACS - ARS ) ),( ( RRS + MDR ) - ( Const / ARS ) ) ) + ( ( ( MRS + DDR ) - Min( FirstVNF_RAM_Server ,PN ) ) - Max( Min( FirstVNF_CPU_Server ,ARS ),( MDR / PN ) ) ) ) ,( ( Max( Max( FirstVNF_RAM_Server,MRS ),Min( PN ,ARS ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Min( MRS ,ARS ) ) ) + Max( ( ( FirstVNF_Mem / MRS ) * Min( ARS ,FirstVNF_CPU ) ),( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) ) ) ),Max( ( Max( ( ( ( RRS + RRS ) + ( FirstVNF_RAM_Server * CRS ) ) + ( Max( FirstVNF_RAM,BR ) / Max( Const,PN ) ) ),( Max( ( FirstVNF_RAM / ARS ),( DDR - DDR ) ) + ( Max( DDR,ACS ) / ( DDR / BR ) ) ) ) * ( ( ( Min( CRS ,AMS ) + Min( FirstVNF_Mem_Server ,BR ) ) - Max( Min( BR ,DDR ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * ( ( ( DDR + MDR ) - ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) + ( ( DDR + CRS ) - Max( CRS,CRS ) ) ) ) ),( ( Min( Min( ( DDR - FirstVNF_RAM_Server ) ,( AMS * FirstVNF_Mem_Server ) ) ,Min( ( RRS / ARS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ( ( Max( MDR,FirstVNF_CPU_Server ) - ( MDR + FirstVNF_Mem_Server ) ) + ( ( BR * RRS ) * ( MRS + ARS ) ) ) ) / ( ( ( ( FirstVNF_RAM / PN ) * ( CRS * ACS ) ) - ( Min( PN ,FirstVNF_CPU_Server ) / ( FirstVNF_CPU - CRS ) ) ) + Min( ( ( MRS * FirstVNF_CPU_Server ) / Max( CRS,DDR ) ) ,Min( Max( Const,DDR ) ,( DDR * CRS ) ) ) ) ) ) ) )", "choosing": "( Min( MUM ,( MUC / RMSe ) ) / ( RCSe * MUC ) )", "obj1": 0.22821576763485477, "obj2": 0.6135354163220951}, {"determining": "( Max( Max( ( FirstVNF_RAM / FirstVNF_RAM_Server ),( PN - FirstVNF_RAM_Server ) ),DDR ) - ( FirstVNF_RAM + BR ) )", "choosing": "( ( RRSe - CS ) + RCSe )", "obj1": 0.8029045643153527, "obj2": 0.16706308428236655}, {"determining": "( Min( Min( ( FirstVNF_RAM - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR + ARS ) ) ,( ( FirstVNF_RAM_Server * PN ) - ( DDR / BR ) ) ) )", "choosing": "( Max( MLU,MLU ) * Max( ( MLU - CS ),( RRSe * MUR ) ) )", "obj1": 0.42323651452282157, "obj2": 0.46812036449422034}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server * Const ) ) ) - Min( Max( ( DDR - FirstVNF_Mem ),( MDR + ARS ) ) ,( ( FirstVNF_RAM_Server * PN ) - ( DDR / BR ) ) ) )", "choosing": "( ( RMSe - RRSe ) - ( DS - RRSe ) )", "obj1": 0.34854771784232363, "obj2": 0.5213145546498036}, {"determining": "( ( ( FirstVNF_Mem / ACS ) * ( Const + FirstVNF_RAM ) ) - ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * FirstVNF_RAM ) / ( CRS * FirstVNF_RAM ) ) )", "choosing": "( ( RMSe * ( MUC - RMSe ) ) / ( RCSe * MLU ) )", "obj1": 0.6597510373443983, "obj2": 0.25177026521550727}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,DDR ) + Max( ARS,FirstVNF_Mem ) ) ,( ( CRS / ACS ) + ( RRS + ( ( FirstVNF_CPU - FirstVNF_Mem ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( DS,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.7074688796680498, "obj2": 0.206027395209636}, {"determining": "( ( ( ( ( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR + ARS ) ) ,( ( FirstVNF_RAM_Server * PN ) - ( DDR / BR ) ) ) ) + FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,DDR ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.6659751037344398, "obj2": 0.24934367074258898}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,FirstVNF_RAM ) )", "choosing": "( Max( Max( ( Max( MLU,MUC ) * Max( MUC,MLU ) ),RMSe ),( MUM + CS ) ) * ( ( MUC * RRSe ) - ( RMSe * RCSe ) ) )", "obj1": 0.14937759336099585, "obj2": 0.6861405377540728}, {"determining": "( ( AMS + ( FirstVNF_Mem_Server + ( FirstVNF_CPU + AMS ) ) ) * Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( Max( MLU,RMSe ) * ( RRSe - CS ) ) - ( RMSe + RMSe ) )", "obj1": 0.16804979253112035, "obj2": 0.6570861723028433}, {"determining": "( ( BR / PN ) + ( ( PN - FirstVNF_CPU_Server ) + ( ARS - FirstVNF_RAM ) ) )", "choosing": "Min( Max( DS,( RCSe * DS ) ) ,Min( RCSe ,MUC ) )", "obj1": 0.8257261410788381, "obj2": 0.16559635879248036}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_CPU ) * Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * Max( FirstVNF_Mem,FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( MUC - ( ( ( MUM - MUR ) / ( MLU / CS ) ) - ( ( DS * RCSe ) * ( MLU * RMSe ) ) ) )", "obj1": 0.7551867219917012, "obj2": 0.20223068117139723}, {"determining": "( ( ( ( ( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR + ARS ) ) ,( ( FirstVNF_RAM_Server * PN ) - ( DDR / BR ) ) ) ) + FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,DDR ) ) + ( Min( ACS ,PN ) / PN ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( ( ( MUC - RMSe ) + Max( DS,( RCSe * DS ) ) ) + MLU ) / ( MLU / ( DS * MUC ) ) )", "obj1": 0.7800829875518672, "obj2": 0.18380620635204709}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) )", "choosing": "( ( RMSe - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.22406639004149378, "obj2": 0.6187411674046065}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,DDR ) + Max( ARS,FirstVNF_Mem ) ) ,( ( CRS / ACS ) + ( RRS + ( ( FirstVNF_CPU - FirstVNF_RAM ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.6224066390041494, "obj2": 0.2673387877817526}, {"determining": "( ( Min( ( Min( FirstVNF_RAM_Server ,DDR ) + Max( ARS,FirstVNF_Mem ) ) ,( ( CRS / ACS ) + ( RRS + ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( ( MLU - CS ) - ( RRSe * DS ) ) / ( MLU / ( DS * DS ) ) )", "obj1": 0.6037344398340249, "obj2": 0.30801986015684923}, {"determining": "( ( ( ( ( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR + ARS ) ) ,( ( FirstVNF_RAM_Server * PN ) - ( DDR / BR ) ) ) ) + FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,DDR ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.6659751037344398, "obj2": 0.24934367074258898}, {"determining": "( ( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR + ARS ) ) ,( ( FirstVNF_RAM_Server * PN ) - ( DDR / BR ) ) ) ) + Min( CRS ,DDR ) )", "choosing": "( Min( ( MUM - MUR ) ,( MLU / CS ) ) - Max( DS,RRSe ) )", "obj1": 0.34024896265560167, "obj2": 0.5327620694307954}, {"determining": "( ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) - Max( Max( FirstVNF_CPU,FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) * Max( ( MDR + FirstVNF_RAM_Server ),MDR ) )", "choosing": "( ( MLU - MUM ) / Min( Max( RRSe,RCSe ) ,( RMSe + RMSe ) ) )", "obj1": 0.14730290456431536, "obj2": 0.7119507638920239}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + FirstVNF_Mem )", "choosing": "( ( ( RCSe + RRSe ) + MLU ) / ( MLU / ( ( Max( MLU,RMSe ) * ( RRSe - CS ) ) * MUC ) ) )", "obj1": 0.2821576763485477, "obj2": 0.6000466719728713}, {"determining": "( ( ( FirstVNF_Mem / BR ) + ( ARS / CRS ) ) - ( FirstVNF_RAM + BR ) )", "choosing": "( ( RRSe - CS ) + ( ( RCSe * MLU ) - MUM ) )", "obj1": 0.2883817427385892, "obj2": 0.5988037309141123}, {"determining": "( ( ( ( ( Min( FirstVNF_RAM ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR + ARS ) ) ,( ( FirstVNF_RAM_Server * PN ) - ( DDR / BR ) ) ) ) + FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,DDR ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( ( ( ( RRSe - CS ) - RMSe ) + RRSe ) + MLU ) / ( MLU / ( DS * MUC ) ) )", "obj1": 0.7634854771784232, "obj2": 0.18551275396363906}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,DDR ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "Min( Max( DS,( RCSe * DS ) ) ,Min( RCSe ,MUC ) )", "obj1": 0.7946058091286307, "obj2": 0.17479765302988248}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( ( RRS / ARS ) + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( ( Max( Max( ( FirstVNF_RAM / AMS ),( PN - FirstVNF_RAM_Server ) ),DDR ) - ( FirstVNF_RAM + BR ) ),FirstVNF_Mem ),( MDR + ARS ) ) ,( ( FirstVNF_RAM_Server * PN ) - ( DDR / BR ) ) ) )", "choosing": "( ( ( ( MUC - DS ) + RRSe ) + Min( Max( MUC,RCSe ) ,Max( ( ( RRSe - CS ) + RRSe ),MUR ) ) ) / ( MLU / ( DS * MUC ) ) )", "obj1": 0.4730290456431535, "obj2": 0.4512192574956566}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) )", "choosing": "( ( RMSe - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.22406639004149378, "obj2": 0.6187411674046065}, {"determining": "( ( ( FirstVNF_Mem / ACS ) * ( Const + FirstVNF_RAM ) ) - ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * FirstVNF_RAM ) / ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) ) )", "choosing": "( ( RMSe * ( MUC - Max( ( RMSe + CS ),( CS + DS ) ) ) ) / ( RCSe * MLU ) )", "obj1": 0.2946058091286307, "obj2": 0.5727000310977022}, {"determining": "( ( ( FirstVNF_Mem / ACS ) * ( Const + FirstVNF_RAM ) ) - ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * FirstVNF_RAM ) / ( CRS * FirstVNF_RAM ) ) )", "choosing": "( ( Min( ( RMSe / MUM ) ,( MUC / MUR ) ) + ( ( MLU + RCSe ) - ( CS * RRSe ) ) ) + ( Max( ( RMSe + CS ),( CS + DS ) ) * Min( ( MUC - RCSe ) ,( MUC - MUC ) ) ) )", "obj1": 0.6680497925311203, "obj2": 0.24137861234540334}, {"determining": "( ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) - Max( Max( FirstVNF_CPU,FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) * Max( ( MDR + FirstVNF_RAM_Server ),MDR ) )", "choosing": "( ( MLU - MUM ) / Min( Max( RRSe,RCSe ) ,( RMSe + RMSe ) ) )", "obj1": 0.14730290456431536, "obj2": 0.7119507638920239}, {"determining": "( ( ( ( ( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR + ARS ) ) ,( ( FirstVNF_RAM_Server * PN ) - ( DDR / BR ) ) ) ) + FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,DDR ) ) + ( Min( ACS ,PN ) / PN ) ) * ( CRS + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( ( ( MUC - RMSe ) + Max( DS,( ( RCSe * MLU ) * DS ) ) ) + MLU ) / ( MLU / ( DS * MUC ) ) )", "obj1": 0.4896265560165975, "obj2": 0.44448043987072544}, {"determining": "( ( AMS + ( FirstVNF_Mem_Server + ( FirstVNF_CPU + AMS ) ) ) * Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( Max( MLU,RMSe ) * ( RRSe - CS ) ) - ( RMSe + RMSe ) )", "obj1": 0.18049792531120332, "obj2": 0.6468054231546849}, {"determining": "( Max( ( Min( ( ( ( ( CRS + MDR ) * ( FirstVNF_RAM_Server / AMS ) ) / ( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) ) ) / Min( ( ( MRS + FirstVNF_CPU ) * ( PN + FirstVNF_CPU_Server ) ) ,Max( ( FirstVNF_Mem_Server + MDR ),( FirstVNF_CPU_Server / PN ) ) ) ) ,Max( ( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) + Max( FirstVNF_Mem,FirstVNF_RAM ) ) - Min( ( RRS * FirstVNF_RAM ) ,( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) ),( Min( ( Const + MDR ) ,( DDR * MDR ) ) / ( ( MDR * FirstVNF_CPU ) / ( MDR - FirstVNF_Mem_Server ) ) ) ) ) + Max( ( Min( ( ( FirstVNF_CPU_Server / ACS ) / Max( CRS,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_Mem / FirstVNF_RAM ) - ( ARS / Const ) ) ) - Max( ( ( ARS * CRS ) * Min( MRS ,FirstVNF_RAM ) ),( Max( ARS,BR ) - ( BR / CRS ) ) ) ),Min( ( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( FirstVNF_Mem_Server + AMS ) ) + ( Min( ARS ,FirstVNF_RAM_Server ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) ,Min( Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,( FirstVNF_Mem_Server + Const ) ) ,( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) ) ) ),Max( ( ( Min( ( Min( FirstVNF_Mem_Server ,CRS ) * ( RRS + ARS ) ) ,Max( ( MDR + PN ),Max( RRS,CRS ) ) ) + ( Min( Min( FirstVNF_RAM ,Const ) ,Max( ACS,ARS ) ) - Min( ( ARS - DDR ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) ) ) + ( ( ( Max( FirstVNF_RAM,BR ) - Min( RRS ,PN ) ) * ( ( Const - MRS ) - Max( RRS,ARS ) ) ) / Min( ( ( AMS * BR ) - ( Const * FirstVNF_CPU ) ) ,( ( AMS - MRS ) / Max( PN,MDR ) ) ) ) ),( ( ( ( ( MRS + FirstVNF_RAM ) + ( MDR * FirstVNF_RAM ) ) - Max( Max( ACS,FirstVNF_Mem_Server ),( AMS + CRS ) ) ) - ( ( ( BR / BR ) - ( ARS * FirstVNF_CPU_Server ) ) * ( Max( FirstVNF_CPU_Server,PN ) + ( MDR + FirstVNF_CPU_Server ) ) ) ) * ( ( ( ( CRS - AMS ) * Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) / Min( Max( CRS,AMS ) ,( PN / FirstVNF_RAM_Server ) ) ) - ( ( Max( MDR,Const ) + ( FirstVNF_CPU * ACS ) ) + ( ( DDR + RRS ) * Max( FirstVNF_RAM_Server,RRS ) ) ) ) ) ) ) * ( Max( ( ( Max( ( Max( FirstVNF_RAM,ARS ) + ( AMS + ARS ) ),Min( ( Const + FirstVNF_RAM_Server ) ,( CRS / ARS ) ) ) * ( ( ( FirstVNF_Mem_Server - PN ) - ( FirstVNF_RAM_Server + BR ) ) / ( ( FirstVNF_RAM - PN ) - ( Const * AMS ) ) ) ) - ( ( ( ( FirstVNF_RAM / FirstVNF_Mem ) - Min( FirstVNF_CPU_Server ,BR ) ) * Max( ( BR / MDR ),Min( FirstVNF_RAM_Server ,Const ) ) ) / ( ( Min( DDR ,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) / ( Max( RRS,BR ) / Min( MRS ,DDR ) ) ) ) ),Max( Min( Max( ( ( FirstVNF_RAM_Server * CRS ) - ( Const - CRS ) ),Min( Max( FirstVNF_RAM,AMS ) ,Min( PN ,FirstVNF_RAM ) ) ) ,Max( ( Max( ACS,FirstVNF_CPU_Server ) * ( CRS * FirstVNF_Mem ) ),Min( ( ARS + ARS ) ,( AMS - BR ) ) ) ),Min( Min( Min( ( FirstVNF_Mem * PN ) ,( AMS / FirstVNF_RAM_Server ) ) ,Max( ( DDR - Const ),( RRS * FirstVNF_RAM ) ) ) ,( Max( Min( ARS ,BR ),( FirstVNF_RAM / MRS ) ) * Max( Min( MRS ,FirstVNF_Mem_Server ),Max( FirstVNF_CPU_Server,DDR ) ) ) ) ) ) - ( ( ( ( ( ( PN - RRS ) / ( FirstVNF_Mem_Server * MDR ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) * Max( ARS,FirstVNF_RAM ) ) ) + ( Min( ( FirstVNF_CPU * FirstVNF_Mem_Server ) ,( ARS - FirstVNF_CPU_Server ) ) / ( ( ACS + FirstVNF_CPU_Server ) * ( PN + FirstVNF_CPU ) ) ) ) + ( ( ( ( RRS - ARS ) + Max( BR,FirstVNF_CPU ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - ( PN - MRS ) ) ) - ( Max( ( FirstVNF_Mem + FirstVNF_Mem_Server ),( MRS - Const ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) * ( AMS - FirstVNF_RAM ) ) ) ) ) - Min( Max( ( ( ( RRS / DDR ) + ( DDR - ARS ) ) / ( ( BR - FirstVNF_Mem_Server ) - ( ACS - ACS ) ) ),( Max( ( ACS * FirstVNF_Mem ),( FirstVNF_RAM_Server / PN ) ) - ( Max( Const,BR ) + Min( BR ,RRS ) ) ) ) ,( ( Min( ( ACS * FirstVNF_RAM ) ,Min( AMS ,FirstVNF_CPU_Server ) ) / ( Max( BR,MDR ) + Max( PN,FirstVNF_RAM ) ) ) - ( Min( ( FirstVNF_RAM / PN ) ,( DDR * FirstVNF_CPU ) ) + ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) / ( PN - RRS ) ) ) ) ) ) ) )", "choosing": "( Max( Min( Max( ( ( Max( ( MUR / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) ,( Min( Min( ( Min( CS ,RMSe ) / Min( DS ,MUC ) ) ,( ( RCSe * MUM ) / ( DS * MUM ) ) ) ,( ( ( MLU + MUR ) * Max( RRSe,RCSe ) ) * ( ( RMSe + RCSe ) - ( MLU + RRSe ) ) ) ) / ( Min( ( ( MLU / MLU ) / ( RMSe - CS ) ) ,Max( Max( CS,MUM ),( MUC - RMSe ) ) ) / Max( ( ( RMSe - RRSe ) - Max( DS,RRSe ) ),( ( RCSe * RRSe ) - ( RMSe - MUM ) ) ) ) ) ),Min( ( ( ( ( ( RRSe * CS ) / ( MUC * MUR ) ) + Min( ( RCSe * MUR ) ,Min( MUM ,CS ) ) ) - Min( ( ( RRSe * MUR ) * Max( CS,MUC ) ) ,( ( RCSe - RCSe ) / ( MUR * CS ) ) ) ) - ( Min( Max( Max( MUR,MUR ),Min( MUM ,RCSe ) ) ,( ( MUC * DS ) + Max( DS,MUR ) ) ) - ( ( ( DS / MUR ) + Max( DS,RCSe ) ) - Min( ( RRSe - RMSe ) ,Min( CS ,RMSe ) ) ) ) ) ,( Min( Max( ( ( MLU - RRSe ) * ( MUR / RMSe ) ),( Min( RRSe ,MLU ) + ( RRSe / CS ) ) ) ,Max( ( ( RMSe - RRSe ) / ( MUR / RMSe ) ),( ( MUC + MUR ) / ( CS * MUR ) ) ) ) - ( Min( ( Max( MLU,CS ) + ( CS / MUM ) ) ,( ( CS / RMSe ) / Max( DS,MUR ) ) ) * Max( ( ( RMSe - DS ) / Max( MUM,CS ) ),( Min( RCSe ,MUM ) / ( DS * MUC ) ) ) ) ) ) ) + ( Max( ( ( ( Min( Max( RRSe,CS ) ,Min( MUR ,RMSe ) ) / Min( Max( MUM,MUM ) ,( MUC / RRSe ) ) ) - ( Max( ( RCSe * MLU ),( RRSe * RRSe ) ) / ( ( RRSe / RMSe ) / ( MLU - CS ) ) ) ) + Min( Max( Min( ( DS * RCSe ) ,( MUR - CS ) ),( ( RMSe / MUM ) * ( MLU / DS ) ) ) ,( ( Max( RRSe,RMSe ) * ( MUC * CS ) ) - ( ( RMSe / CS ) / ( RCSe / MUR ) ) ) ) ),Max( ( Max( ( ( RMSe * RRSe ) / ( MLU * CS ) ),( ( CS / RMSe ) / ( DS * RRSe ) ) ) + ( ( Min( RCSe ,CS ) / ( CS / RRSe ) ) * ( ( RCSe - CS ) / ( MLU * MUC ) ) ) ),( ( Min( ( MUM + MUC ) ,( RCSe * MUR ) ) * ( ( MUR * CS ) + ( MUC / MUR ) ) ) * Max( Min( ( DS * CS ) ,Min( RMSe ,DS ) ),( Max( RCSe,RMSe ) + Max( DS,MUR ) ) ) ) ) ) / ( ( ( ( Min( ( MLU * RMSe ) ,( MLU / MUR ) ) * ( ( RCSe * MUM ) / ( MUR * MLU ) ) ) - Min( ( ( RRSe + RMSe ) + ( MLU / RCSe ) ) ,Max( Max( MLU,MUC ),( MLU - CS ) ) ) ) + Max( Max( ( Min( RMSe ,CS ) + ( RRSe * MUM ) ),( ( DS / MUM ) - Min( DS ,CS ) ) ),( Min( ( MLU / RCSe ) ,( MLU - MLU ) ) / Min( ( MUR + MUR ) ,( MUC - MUR ) ) ) ) ) * ( ( Max( Max( ( DS - MUR ),( RCSe * RRSe ) ),Min( ( RCSe + MUC ) ,( RMSe + DS ) ) ) * ( ( ( RCSe / MUC ) - ( MUC - RMSe ) ) - ( ( DS + RMSe ) / ( MUR - MUC ) ) ) ) / Max( ( ( Min( MUM ,CS ) + ( MUC / RRSe ) ) / Max( ( RMSe / CS ),( RCSe - DS ) ) ),( ( ( RCSe * MLU ) + ( RCSe * MUM ) ) + Max( ( RMSe - DS ),( RCSe + MUC ) ) ) ) ) ) ) )", "obj1": 0.8278008298755186, "obj2": 0.1455342229735434}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) )", "choosing": "( ( RMSe - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.23651452282157676, "obj2": 0.6102127566690284}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,DDR ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( Min( ( RMSe / MUM ) ,( MUC / MUR ) ) + ( ( MLU + RCSe ) - ( CS * RRSe ) ) ) + ( Max( ( RMSe + CS ),( CS + DS ) ) * Min( ( MUC - RCSe ) ,( MUC - MUC ) ) ) )", "obj1": 0.6846473029045643, "obj2": 0.24071899678986183}, {"determining": "Min( ( ( DDR / FirstVNF_CPU ) + Max( AMS,DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( ( Max( ( MUR / MLU ),( MUR + RMSe ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RRSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.8175144247339845}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,DDR ) + Max( ARS,FirstVNF_Mem ) ) ,( ( CRS / ACS ) + ( RRS + ( DDR / ( ACS - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( DS,MLU ) * ( ( MLU - ( ( RMSe - RRSe ) - Max( DS,RRSe ) ) ) - ( RRSe * DS ) ) )", "obj1": 0.6929460580912863, "obj2": 0.21848146130637486}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) )", "choosing": "( Max( DS,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.21369294605809128, "obj2": 0.6323660833079126}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,DDR ) + Max( ARS,FirstVNF_Mem ) ) ,( ( CRS / ACS ) + ( RRS + ( ( FirstVNF_CPU - FirstVNF_Mem ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( RMSe - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.6991701244813278, "obj2": 0.2157097923558797}, {"determining": "( Min( Const ,FirstVNF_RAM_Server ) * Min( ( Const * CRS ) ,( Const / ARS ) ) )", "choosing": "( Max( Max( ( Max( MLU,MUC ) * Max( MUC,MLU ) ),RMSe ),( MUM + MLU ) ) * ( ( MUC * RRSe ) - ( RMSe * RCSe ) ) )", "obj1": 0.16390041493775934, "obj2": 0.6793075755927802}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_CPU ) * Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( Max( ( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) + Max( FirstVNF_Mem,FirstVNF_RAM ) ) - Min( ( RRS * FirstVNF_RAM ) ,( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) ),Min( Min( ( Const + MDR ) ,( DDR * MDR ) ) ,( ( MDR / FirstVNF_CPU ) / ( MDR - FirstVNF_Mem_Server ) ) ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( MUR - RMSe )", "obj1": 0.14315352697095435, "obj2": 0.7147612279128001}, {"determining": "( ( ( ( ( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR + ARS ) ) ,FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,DDR ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( ( ( MUC - RMSe ) + RRSe ) + MLU ) / ( ( Max( MLU,MUC ) * Max( MUC,MLU ) ) / ( DS * MUC ) ) )", "obj1": 0.7842323651452282, "obj2": 0.181049785171762}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( Min( FirstVNF_Mem_Server ,RRS ),ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR + ARS ) ) ,( ( FirstVNF_RAM_Server * PN ) - ( DDR / BR ) ) ) )", "choosing": "( Max( Min( ( MLU / RMSe ) ,( RMSe - RRSe ) ),( ( MUR / MLU ) - Max( ( MLU / ( DS * MUC ) ),MUC ) ) ) - ( Min( ( MUM - MUR ) ,( MLU / CS ) ) - ( ( DS * RCSe ) * ( MLU * RMSe ) ) ) )", "obj1": 0.495850622406639, "obj2": 0.43210373518000295}, {"determining": "( ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,RRS ) ) - Max( Max( FirstVNF_CPU,FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) * Max( ( MDR + FirstVNF_RAM_Server ),MDR ) )", "choosing": "( ( MLU - MUM ) / Max( Max( RRSe,RCSe ),( RMSe + RMSe ) ) )", "obj1": 0.14730290456431536, "obj2": 0.7119507638920239}, {"determining": "Min( ( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) ) ,( ( CRS / ACS ) + ( RRS + ( ( FirstVNF_CPU - FirstVNF_Mem ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( DS,MLU ) * ( ( MLU - CS ) - ( RMSe * RCSe ) ) )", "obj1": 0.5, "obj2": 0.3243520674524111}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,DDR ) + Max( ARS,FirstVNF_Mem ) ) ,( ( CRS / ACS ) + ( RRS + ( ( FirstVNF_CPU - FirstVNF_Mem ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( Max( ( Max( MLU,MUC ) * Max( MUC,MLU ) ),RMSe ),( MUM + MLU ) ) * ( ( MUC * RRSe ) - ( RMSe * RCSe ) ) )", "obj1": 0.6950207468879668, "obj2": 0.21821314263258237}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,BR ) )", "choosing": "( Max( DS,MLU ) * ( ( DS - CS ) - ( RRSe * DS ) ) )", "obj1": 0.21369294605809128, "obj2": 0.6323660833079126}], "5": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ),( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR + ARS ) ) ,Max( ( FirstVNF_RAM_Server * PN ),( DDR / BR ) ) ) )", "choosing": "Min( ( MUC + MUM ) ,( RMSe - RCSe ) )", "obj1": 0.4460580912863071, "obj2": 0.46693261764390354}, {"determining": "Min( ( ( FirstVNF_RAM_Server * DDR ) + Max( ARS,FirstVNF_Mem ) ) ,( ( CRS / ACS ) + ( RRS + ( ( FirstVNF_CPU - FirstVNF_RAM ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( RCSe - CS ) - ( RRSe * DS ) ) )", "obj1": 0.6307053941908713, "obj2": 0.26584397117813297}, {"determining": "( ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) - Max( Max( FirstVNF_CPU,FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) * Max( ( MDR + FirstVNF_RAM_Server ),CRS ) )", "choosing": "( ( MLU - MUM ) / Min( Max( RRSe,RCSe ) ,( RCSe + RMSe ) ) )", "obj1": 0.14730290456431536, "obj2": 0.7119507638920239}, {"determining": "( Min( Const ,FirstVNF_RAM_Server ) * ( ( Const * CRS ) / ( Const / ARS ) ) )", "choosing": "( Max( Max( ( Max( MLU,MUC ) * Max( RCSe,MLU ) ),RMSe ),( MUM + MLU ) ) * ( ( MUC * RRSe ) - ( RMSe * RCSe ) ) )", "obj1": 0.16390041493775934, "obj2": 0.6793075755927802}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) )", "choosing": "( ( RMSe - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.1908713692946058, "obj2": 0.6323800386013406}, {"determining": "( Min( Min( ( Min( Min( Min( ( BR * CRS ) ,( DDR / FirstVNF_CPU_Server ) ) ,Min( ( FirstVNF_CPU - ARS ) ,( ACS - BR ) ) ) ,( ( Min( BR ,CRS ) + Max( RRS,RRS ) ) / ( ( BR / PN ) + ( MRS * MDR ) ) ) ) / ( ( ( ( BR + MDR ) / ( FirstVNF_RAM / FirstVNF_RAM ) ) + ( ( MRS * FirstVNF_Mem_Server ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) - ( Max( Max( Const,AMS ),Max( MDR,MRS ) ) + Max( Min( FirstVNF_CPU_Server ,PN ),Min( ARS ,Const ) ) ) ) ) ,( ( Min( ( Max( AMS,CRS ) / ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ,( Max( RRS,RRS ) - Max( MRS,MRS ) ) ) / Max( Min( ( FirstVNF_Mem_Server / AMS ) ,Min( AMS ,FirstVNF_Mem ) ),( Min( ARS ,ARS ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) * ( ( ( Max( DDR,FirstVNF_Mem ) - ( FirstVNF_CPU / MRS ) ) + Min( Max( CRS,MDR ) ,Min( Const ,DDR ) ) ) - ( Min( Min( FirstVNF_CPU_Server ,PN ) ,( ACS - ARS ) ) * Max( ( PN * FirstVNF_RAM ),( FirstVNF_RAM - AMS ) ) ) ) ) ) ,( ( Min( ( ( Max( RRS,Const ) - ( AMS * FirstVNF_Mem_Server ) ) - Min( ( MDR * CRS ) ,Min( ARS ,PN ) ) ) ,Min( ( ( ARS / FirstVNF_CPU ) + ( CRS + FirstVNF_Mem ) ) ,Max( Max( FirstVNF_Mem,MDR ),( ACS - MDR ) ) ) ) * ( ( ( ( DDR + CRS ) * Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + Max( ( FirstVNF_RAM_Server / FirstVNF_CPU ),( ARS * FirstVNF_Mem ) ) ) + Min( Max( Min( ACS ,AMS ),Max( FirstVNF_CPU_Server,PN ) ) ,Max( ( PN + RRS ),( MDR + AMS ) ) ) ) ) / Min( ( Min( ( ( Const - FirstVNF_Mem ) + ( MDR * FirstVNF_Mem ) ) ,( Max( FirstVNF_Mem,FirstVNF_CPU ) - ( ACS / FirstVNF_Mem_Server ) ) ) - ( ( Max( ARS,BR ) * ( MDR / MDR ) ) + ( Max( ACS,FirstVNF_CPU ) * ( Const + FirstVNF_Mem_Server ) ) ) ) ,( ( ( Min( FirstVNF_Mem ,AMS ) * ( PN - MDR ) ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) * ( CRS + BR ) ) ) + Max( Min( ( ARS + MRS ) ,( MRS + RRS ) ),( ( MDR * Const ) - ( ACS - ACS ) ) ) ) ) ) ) + Max( ( ( Min( ( ( ( AMS / FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,Const ) ) + ( Min( BR ,FirstVNF_RAM_Server ) / Min( FirstVNF_RAM_Server ,CRS ) ) ) ,( ( ( MDR / MDR ) * ( ARS / MRS ) ) + ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) / ( ACS - MDR ) ) ) ) - ( Max( ( Max( FirstVNF_CPU_Server,AMS ) - ( AMS / MDR ) ),( Max( MDR,RRS ) - ( DDR / BR ) ) ) - Min( Min( ( DDR / MDR ) ,Max( AMS,RRS ) ) ,( Min( ARS ,FirstVNF_Mem ) + Min( RRS ,FirstVNF_RAM_Server ) ) ) ) ) - Min( ( Max( Max( ( DDR - FirstVNF_CPU_Server ),( ACS - ARS ) ),( ( RRS + MDR ) - ( Const / ARS ) ) ) + ( ( ( MRS + DDR ) - Min( FirstVNF_RAM_Server ,PN ) ) - Max( Min( FirstVNF_CPU_Server ,ARS ),( MDR / PN ) ) ) ) ,( ( Max( Max( FirstVNF_RAM_Server,MRS ),Min( PN ,ARS ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Min( MRS ,ARS ) ) ) + Max( ( ( FirstVNF_Mem / MRS ) * Min( ARS ,FirstVNF_CPU ) ),( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) ) ) ),Max( ( Max( ( ( ( RRS + RRS ) + ( FirstVNF_RAM_Server * CRS ) ) + ( Max( FirstVNF_RAM,BR ) / Max( Const,PN ) ) ),( Max( ( FirstVNF_RAM / ARS ),( DDR - DDR ) ) + ( Max( DDR,ACS ) / ( DDR / BR ) ) ) ) * ( ( ( Min( CRS ,AMS ) + Min( FirstVNF_Mem_Server ,BR ) ) - Max( Min( BR ,DDR ),Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * ( ( ( DDR + MDR ) - ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) + ( ( DDR + CRS ) - Max( CRS,CRS ) ) ) ) ),( ( Min( Min( ( DDR - FirstVNF_RAM_Server ) ,( AMS * FirstVNF_Mem_Server ) ) ,Min( ( RRS / ARS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ( ( Max( MDR,FirstVNF_CPU_Server ) - ( MDR + FirstVNF_Mem_Server ) ) + ( ( BR * RRS ) * ( MRS + ARS ) ) ) ) / ( ( ( ( FirstVNF_RAM / PN ) * ( CRS * ACS ) ) - ( Min( PN ,FirstVNF_CPU_Server ) / ( FirstVNF_CPU - CRS ) ) ) + Min( ( ( MRS * FirstVNF_CPU_Server ) / Max( CRS,DDR ) ) ,Min( Max( Const,DDR ) ,( DDR * CRS ) ) ) ) ) ) ) )", "choosing": "( Min( MUM ,( MUC / RMSe ) ) / ( RCSe * MUC ) )", "obj1": 0.22821576763485477, "obj2": 0.6135354163220951}, {"determining": "( Min( Min( ( FirstVNF_RAM - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR + ARS ) ) ,( ( FirstVNF_RAM_Server * PN ) - ( DDR / BR ) ) ) )", "choosing": "( Max( MLU,MLU ) * Max( ( MLU - CS ),( RRSe * MUR ) ) )", "obj1": 0.42323651452282157, "obj2": 0.46812036449422034}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server * Const ) ) ) - Min( Max( ( DDR - FirstVNF_Mem ),( MDR + ARS ) ) ,( ( FirstVNF_RAM_Server * PN ) - ( DDR / BR ) ) ) )", "choosing": "( ( RMSe - RRSe ) - ( DS - RRSe ) )", "obj1": 0.34854771784232363, "obj2": 0.5213145546498036}, {"determining": "( ( ( FirstVNF_Mem / ACS ) * ( Const + FirstVNF_RAM ) ) - ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * FirstVNF_RAM ) / ( CRS * FirstVNF_RAM ) ) )", "choosing": "( ( RMSe * ( MUC - RMSe ) ) / ( RCSe * MLU ) )", "obj1": 0.6597510373443983, "obj2": 0.25177026521550727}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,FirstVNF_RAM ) )", "choosing": "( Max( Max( ( Max( MLU,MUC ) * Max( MUC,MLU ) ),RMSe ),( MUM + CS ) ) * ( ( MUC * RRSe ) - ( RMSe * RCSe ) ) )", "obj1": 0.14937759336099585, "obj2": 0.6861405377540728}, {"determining": "( ( AMS + ( FirstVNF_Mem_Server + ( FirstVNF_CPU + AMS ) ) ) * Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( Max( MLU,RMSe ) * ( RRSe - CS ) ) - ( RMSe + RMSe ) )", "obj1": 0.16804979253112035, "obj2": 0.6570861723028433}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) )", "choosing": "( ( RMSe - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.22406639004149378, "obj2": 0.6187411674046065}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,DDR ) + Max( ARS,FirstVNF_Mem ) ) ,( ( CRS / ACS ) + ( RRS + ( ( FirstVNF_CPU - FirstVNF_RAM ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.6224066390041494, "obj2": 0.2673387877817526}, {"determining": "( ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) - Max( Max( FirstVNF_CPU,FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) * Max( ( MDR + FirstVNF_RAM_Server ),MDR ) )", "choosing": "( ( MLU - MUM ) / Min( Max( RRSe,RCSe ) ,( RMSe + RMSe ) ) )", "obj1": 0.14730290456431536, "obj2": 0.7119507638920239}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) )", "choosing": "( ( RMSe - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.22406639004149378, "obj2": 0.6187411674046065}, {"determining": "( ( ( FirstVNF_Mem / ACS ) * ( Const + FirstVNF_RAM ) ) - ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * FirstVNF_RAM ) / ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) ) )", "choosing": "( ( RMSe * ( MUC - Max( ( RMSe + CS ),( CS + DS ) ) ) ) / ( RCSe * MLU ) )", "obj1": 0.2946058091286307, "obj2": 0.5727000310977022}, {"determining": "( ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) - Max( Max( FirstVNF_CPU,FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) * Max( ( MDR + FirstVNF_RAM_Server ),MDR ) )", "choosing": "( ( MLU - MUM ) / Min( Max( RRSe,RCSe ) ,( RMSe + RMSe ) ) )", "obj1": 0.14730290456431536, "obj2": 0.7119507638920239}, {"determining": "( ( AMS + ( FirstVNF_Mem_Server + ( FirstVNF_CPU + AMS ) ) ) * Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( Max( MLU,RMSe ) * ( RRSe - CS ) ) - ( RMSe + RMSe ) )", "obj1": 0.18049792531120332, "obj2": 0.6468054231546849}, {"determining": "Min( ( ( DDR / FirstVNF_CPU ) + Max( AMS,DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( ( Max( ( MUR / MLU ),( MUR + RMSe ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RRSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.8175144247339845}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) )", "choosing": "( Max( DS,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.21369294605809128, "obj2": 0.6323660833079126}, {"determining": "( Min( Const ,FirstVNF_RAM_Server ) * Min( ( Const * CRS ) ,( Const / ARS ) ) )", "choosing": "( Max( Max( ( Max( MLU,MUC ) * Max( MUC,MLU ) ),RMSe ),( MUM + MLU ) ) * ( ( MUC * RRSe ) - ( RMSe * RCSe ) ) )", "obj1": 0.16390041493775934, "obj2": 0.6793075755927802}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_CPU ) * Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( Max( ( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) + Max( FirstVNF_Mem,FirstVNF_RAM ) ) - Min( ( RRS * FirstVNF_RAM ) ,( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) ),Min( Min( ( Const + MDR ) ,( DDR * MDR ) ) ,( ( MDR / FirstVNF_CPU ) / ( MDR - FirstVNF_Mem_Server ) ) ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( MUR - RMSe )", "obj1": 0.14315352697095435, "obj2": 0.7147612279128001}, {"determining": "( ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,RRS ) ) - Max( Max( FirstVNF_CPU,FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) * Max( ( MDR + FirstVNF_RAM_Server ),MDR ) )", "choosing": "( ( MLU - MUM ) / Max( Max( RRSe,RCSe ),( RMSe + RMSe ) ) )", "obj1": 0.14730290456431536, "obj2": 0.7119507638920239}, {"determining": "Min( ( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) ) ,( ( CRS / ACS ) + ( RRS + ( ( FirstVNF_CPU - FirstVNF_Mem ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( DS,MLU ) * ( ( MLU - CS ) - ( RMSe * RCSe ) ) )", "obj1": 0.5, "obj2": 0.3243520674524111}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,BR ) )", "choosing": "( Max( DS,MLU ) * ( ( DS - CS ) - ( RRSe * DS ) ) )", "obj1": 0.21369294605809128, "obj2": 0.6323660833079126}, {"determining": "( ( ( FirstVNF_Mem / ACS ) * ( Const + FirstVNF_RAM ) ) - ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * FirstVNF_RAM ) / ( CRS * FirstVNF_RAM ) ) )", "choosing": "( ( MLU - MUM ) / Min( Max( RRSe,RCSe ) ,( RMSe + RMSe ) ) )", "obj1": 0.6576763485477178, "obj2": 0.2539775171227926}, {"determining": "( ( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR + ARS ) ) ,( ( FirstVNF_RAM_Server * PN ) - ( DDR / BR ) ) ) ) + Min( CRS ,DDR ) )", "choosing": "( Max( MLU,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.3921161825726141, "obj2": 0.49242321650909004}, {"determining": "( Min( Const ,FirstVNF_RAM_Server ) * ( ( Const * CRS ) / ( Const / ARS ) ) )", "choosing": "( Max( Max( ( Max( MLU,MUC ) * Max( RCSe,MLU ) ),RMSe ),( MUM + MLU ) ) * ( ( MUC * RRSe ) - ( RMSe * RCSe ) ) )", "obj1": 0.16390041493775934, "obj2": 0.6793075755927802}, {"determining": "( ( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR + ARS ) ) ,( ( FirstVNF_RAM_Server * PN ) - ( DDR / BR ) ) ) ) + Min( CRS ,DDR ) )", "choosing": "( Min( ( MUM - MUR ) ,( MLU / CS ) ) - Max( DS,RRSe ) )", "obj1": 0.31742738589211617, "obj2": 0.5502040358638147}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Const ) + Min( CRS ,DDR ) ) ,( ( CRS / ACS ) + ( Min( ( Min( FirstVNF_RAM_Server ,DDR ) + Max( ARS,FirstVNF_Mem ) ) ,( ( CRS / ACS ) + ( RRS + ( ( FirstVNF_CPU - FirstVNF_Mem ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) ) + ( ( FirstVNF_CPU - FirstVNF_Mem ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( RMSe * ( ( MUC - CS ) - ( RMSe * RCSe ) ) )", "obj1": 0.5311203319502075, "obj2": 0.30898721439688126}, {"determining": "Min( ( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) ) ,( ( CRS / ACS ) + ( RRS + ( ( FirstVNF_CPU - FirstVNF_Mem ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( DS,MLU ) * ( ( MLU - CS ) - ( RMSe * RCSe ) ) )", "obj1": 0.5, "obj2": 0.3243520674524111}, {"determining": "( ( Max( BR,BR ) + ( ARS / CRS ) ) - ( FirstVNF_RAM + BR ) )", "choosing": "( Max( MLU,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.21784232365145229, "obj2": 0.6237234565965154}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR + ARS ) ) ,( ( FirstVNF_RAM_Server * PN ) - ( DDR / BR ) ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.4024896265560166, "obj2": 0.48411569298403234}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + ( Max( BR,BR ) + ( ARS - CRS ) ) )", "choosing": "( ( ( ( RCSe * MLU ) - MUM ) - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.15560165975103735, "obj2": 0.684148654573984}, {"determining": "( ( Max( BR,BR ) + ( ARS / CRS ) ) - ( FirstVNF_RAM + BR ) )", "choosing": "( ( RMSe - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.1908713692946058, "obj2": 0.6323800386013406}, {"determining": "( Min( Const ,FirstVNF_RAM_Server ) * ( ( Const * CRS ) / ( Const / ARS ) ) )", "choosing": "( Max( Max( ( Max( MLU,MUC ) * Max( RCSe,MLU ) ),RMSe ),( MUM + MLU ) ) * ( ( MUC * RRSe ) - ( RMSe * RCSe ) ) )", "obj1": 0.16390041493775934, "obj2": 0.6793075755927802}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( ( RRS / ARS ) + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( ( Max( Max( ( FirstVNF_RAM / AMS ),( PN - FirstVNF_RAM_Server ) ),DDR ) - ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) * ( AMS - FirstVNF_RAM ) ) ),FirstVNF_Mem ),( MDR + ARS ) ) ,( ( FirstVNF_RAM_Server * PN ) - ( DDR / BR ) ) ) )", "choosing": "( ( ( ( MUC - DS ) + RRSe ) + Min( Max( MUC,RCSe ) ,Max( ( ( Max( ( RMSe / CS ),( RCSe - DS ) ) - CS ) + RRSe ),MUR ) ) ) / ( MLU / ( DS * MUC ) ) )", "obj1": 0.4730290456431535, "obj2": 0.45112950672319896}, {"determining": "( ( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( MDR - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR + ARS ) ) ,( ( FirstVNF_RAM_Server * PN ) - ( DDR / BR ) ) ) ) + Min( CRS ,DDR ) )", "choosing": "( Min( Max( MUM,MUR ) ,( MLU / CS ) ) - Max( DS,RRSe ) )", "obj1": 0.27593360995850624, "obj2": 0.5771203550104733}, {"determining": "( ( ( ( ( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR + ARS ) ) ,FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,DDR ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( ( ( PN + FirstVNF_RAM_Server ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( MLU - MUM ) / Min( Max( RRSe,RCSe ) ,( RMSe + RMSe ) ) )", "obj1": 0.4896265560165975, "obj2": 0.4207364432970435}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,FirstVNF_RAM ) )", "choosing": "( Max( Max( ( Max( MLU,MUC ) * Max( MUC,MLU ) ),RMSe ),( MUM + CS ) ) * ( ( MUC * RRSe ) - ( RMSe * RCSe ) ) )", "obj1": 0.15767634854771784, "obj2": 0.6801320505723726}, {"determining": "( ( DDR + ( FirstVNF_Mem_Server + ( FirstVNF_CPU + AMS ) ) ) * Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( Max( MLU,( ( MLU - CS ) - ( RRSe * RMSe ) ) ) * ( RRSe - CS ) ) - ( RMSe + RMSe ) )", "obj1": 0.18049792531120332, "obj2": 0.6468054231546849}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) )", "choosing": "( ( Max( MLU,RMSe ) * ( RRSe - CS ) ) - ( RMSe + RMSe ) )", "obj1": 0.18049792531120332, "obj2": 0.6468054231546849}, {"determining": "( ( AMS + ( FirstVNF_Mem_Server + ( FirstVNF_CPU + AMS ) ) ) * Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( Max( DS,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.21369294605809128, "obj2": 0.6323660833079126}, {"determining": "Min( ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ,Min( ( PN + FirstVNF_RAM_Server ) ,DDR ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( ( Max( ( ( CS + DS ) / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.8175144247339845}, {"determining": "Min( ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( ( Min( ( RMSe / MUM ) ,( MUC / MUR ) ) + ( ( MLU + RCSe ) - ( CS * RRSe ) ) ) + ( Max( ( RMSe + CS ),( CS + DS ) ) * Min( ( MUC - RCSe ) ,( MUC - MUC ) ) ) )", "obj1": 0.25103734439834025, "obj2": 0.6087140904715485}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR + ARS ) ) ,( ( FirstVNF_RAM_Server * PN ) - ( DDR / BR ) ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.42323651452282157, "obj2": 0.46812036449422034}, {"determining": "( Min( Min( ( FirstVNF_RAM - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR + ARS ) ) ,( ( FirstVNF_RAM_Server * PN ) - ( DDR / BR ) ) ) )", "choosing": "( Max( MLU,MLU ) * Max( ( MLU - CS ),( RRSe * MUR ) ) )", "obj1": 0.3215767634854772, "obj2": 0.5293038121818016}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) )", "choosing": "( Max( DS,MLU ) * ( ( MLU - CS ) - ( RMSe * RCSe ) ) )", "obj1": 0.2551867219917012, "obj2": 0.5935866633911525}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,DDR ) + Max( ARS,FirstVNF_Mem ) ) ,( FirstVNF_RAM_Server + ( RRS + ( ( FirstVNF_CPU - FirstVNF_Mem ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( DS,( ( RRSe - CS ) + RCSe ) ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.5995850622406639, "obj2": 0.29357562435320794}, {"determining": "( Max( Max( ( FirstVNF_RAM / FirstVNF_RAM_Server ),( PN - FirstVNF_RAM_Server ) ),DDR ) - ( FirstVNF_RAM + BR ) )", "choosing": "( Max( DS,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.23443983402489627, "obj2": 0.6101927212196702}], "6": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) )", "choosing": "( ( RMSe - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.1908713692946058, "obj2": 0.6323800386013406}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,FirstVNF_RAM ) )", "choosing": "( Max( Max( ( Max( MLU,MUC ) * Max( MUC,MLU ) ),RMSe ),( MUM + CS ) ) * ( ( MUC * RRSe ) - ( RMSe * RCSe ) ) )", "obj1": 0.14937759336099585, "obj2": 0.6861405377540728}, {"determining": "( ( AMS + ( FirstVNF_Mem_Server + ( FirstVNF_CPU + AMS ) ) ) * Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( Max( MLU,RMSe ) * ( RRSe - CS ) ) - ( RMSe + RMSe ) )", "obj1": 0.16804979253112035, "obj2": 0.6570861723028433}, {"determining": "( ( ( FirstVNF_Mem / ACS ) * ( Const + FirstVNF_RAM ) ) - ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * FirstVNF_RAM ) / ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) ) )", "choosing": "( ( RMSe * ( MUC - Max( ( RMSe + CS ),( CS + DS ) ) ) ) / ( RCSe * MLU ) )", "obj1": 0.2946058091286307, "obj2": 0.5727000310977022}, {"determining": "( ( AMS + ( FirstVNF_Mem_Server + ( FirstVNF_CPU + AMS ) ) ) * Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( Max( MLU,RMSe ) * ( RRSe - CS ) ) - ( RMSe + RMSe ) )", "obj1": 0.18049792531120332, "obj2": 0.6468054231546849}, {"determining": "Min( ( ( DDR / FirstVNF_CPU ) + Max( AMS,DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( ( Max( ( MUR / MLU ),( MUR + RMSe ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RRSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.8175144247339845}, {"determining": "( ( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR + ARS ) ) ,( ( FirstVNF_RAM_Server * PN ) - ( DDR / BR ) ) ) ) + Min( CRS ,DDR ) )", "choosing": "( Min( ( MUM - MUR ) ,( MLU / CS ) ) - Max( DS,RRSe ) )", "obj1": 0.31742738589211617, "obj2": 0.5502040358638147}, {"determining": "( ( Max( BR,BR ) + ( ARS / CRS ) ) - ( FirstVNF_RAM + BR ) )", "choosing": "( Max( MLU,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.21784232365145229, "obj2": 0.6237234565965154}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + ( Max( BR,BR ) + ( ARS - CRS ) ) )", "choosing": "( ( ( ( RCSe * MLU ) - MUM ) - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.15560165975103735, "obj2": 0.684148654573984}, {"determining": "( ( Max( BR,BR ) + ( ARS / CRS ) ) - ( FirstVNF_RAM + BR ) )", "choosing": "( ( RMSe - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.1908713692946058, "obj2": 0.6323800386013406}, {"determining": "( ( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( MDR - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR + ARS ) ) ,( ( FirstVNF_RAM_Server * PN ) - ( DDR / BR ) ) ) ) + Min( CRS ,DDR ) )", "choosing": "( Min( Max( MUM,MUR ) ,( MLU / CS ) ) - Max( DS,RRSe ) )", "obj1": 0.27593360995850624, "obj2": 0.5771203550104733}, {"determining": "( ( DDR + ( FirstVNF_Mem_Server + ( FirstVNF_CPU + AMS ) ) ) * Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( Max( MLU,( ( MLU - CS ) - ( RRSe * RMSe ) ) ) * ( RRSe - CS ) ) - ( RMSe + RMSe ) )", "obj1": 0.18049792531120332, "obj2": 0.6468054231546849}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) )", "choosing": "( ( Max( MLU,RMSe ) * ( RRSe - CS ) ) - ( RMSe + RMSe ) )", "obj1": 0.18049792531120332, "obj2": 0.6468054231546849}, {"determining": "Min( ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ,Min( ( PN + FirstVNF_RAM_Server ) ,DDR ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( ( Max( ( ( CS + DS ) / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.8175144247339845}, {"determining": "( Min( Min( ( FirstVNF_RAM - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR + ARS ) ) ,( ( FirstVNF_RAM_Server * PN ) - ( DDR / BR ) ) ) )", "choosing": "( Max( MLU,MLU ) * Max( ( MLU - CS ),( RRSe * MUR ) ) )", "obj1": 0.3215767634854772, "obj2": 0.5293038121818016}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) )", "choosing": "( Max( DS,MLU ) * ( ( MLU - CS ) - ( RMSe * RCSe ) ) )", "obj1": 0.2551867219917012, "obj2": 0.5935866633911525}, {"determining": "( Max( Max( ( FirstVNF_RAM / FirstVNF_RAM_Server ),( PN - FirstVNF_RAM_Server ) ),DDR ) - ( FirstVNF_RAM + BR ) )", "choosing": "( Max( DS,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.23443983402489627, "obj2": 0.6101927212196702}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + ( Max( BR,BR ) + ( ARS / CRS ) ) )", "choosing": "( ( ( ( RCSe * MUM ) - MUM ) - RRSe ) - Max( ( ( RMSe * ( MUC - Max( ( RMSe + CS ),( CS + DS ) ) ) ) / ( RCSe * MLU ) ),RRSe ) )", "obj1": 0.15560165975103735, "obj2": 0.684148654573984}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + ( Max( BR,BR ) + ( ARS / CRS ) ) )", "choosing": "( ( RMSe * ( MUC - Max( ( RMSe + CS ),( CS + DS ) ) ) ) / ( RCSe * MLU ) )", "obj1": 0.15767634854771784, "obj2": 0.6753394487268858}, {"determining": "( ( ( FirstVNF_Mem / ACS ) * ( Const + FirstVNF_RAM ) ) - ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * FirstVNF_RAM ) / ( Max( BR,DDR ) - ( FirstVNF_RAM + BR ) ) ) )", "choosing": "( ( ( ( RCSe * MUM ) - MUM ) - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.2697095435684647, "obj2": 0.5861022588042655}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) )", "choosing": "( ( RMSe - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.1908713692946058, "obj2": 0.6323800386013406}, {"determining": "( ( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR + ARS ) ) ,( ( FirstVNF_RAM_Server * PN ) - ( DDR / BR ) ) ) ) + Min( CRS ,DDR ) )", "choosing": "( Min( ( MUM - MUR ) ,( MLU / CS ) ) - Max( DS,RRSe ) )", "obj1": 0.31742738589211617, "obj2": 0.5502040358638147}, {"determining": "( Min( Min( ( FirstVNF_CPU - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - ( ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) - Max( Max( FirstVNF_CPU,FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) * Max( ( MDR + FirstVNF_RAM_Server ),CRS ) ) ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR + ARS ) ) ,( ( FirstVNF_RAM_Server * PN ) - ( DDR / BR ) ) ) )", "choosing": "( Max( Min( Max( RRSe,RCSe ) ,( RCSe + RMSe ) ),MLU ) * ( ( MLU - CS ) - ( RRSe * MUR ) ) )", "obj1": 0.24481327800829875, "obj2": 0.5976736188920938}, {"determining": "( ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) - Max( Max( FirstVNF_CPU,FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) * Max( ( MDR + FirstVNF_RAM_Server ),CRS ) )", "choosing": "( Max( MLU,MLU ) * ( ( MLU - CS ) - ( RRSe * MUR ) ) )", "obj1": 0.22199170124481327, "obj2": 0.6132010097114761}, {"determining": "Min( ( ( DDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( RMSe * ( MUC - RMSe ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.8175144247339845}, {"determining": "Min( ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ,( FirstVNF_Mem - DDR ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( ( Max( ( MUR / MLU ),( MUR + MLU ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.12033195020746888, "obj2": 0.8131029625978375}, {"determining": "( ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) - Max( Max( FirstVNF_CPU,FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) * Max( ( MDR + FirstVNF_RAM_Server ),MDR ) )", "choosing": "( Max( DS,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.1887966804979253, "obj2": 0.6427833651671692}, {"determining": "( ( AMS + ( FirstVNF_Mem_Server + ( FirstVNF_CPU + AMS ) ) ) * Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( Max( MLU,RMSe ) * ( RRSe - CS ) ) - ( RMSe + RMSe ) )", "obj1": 0.17219917012448133, "obj2": 0.6566917524360238}, {"determining": "Min( ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ,Min( ( PN + FirstVNF_RAM_Server ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,RRS ) ) ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( ( Max( ( ( CS + DS ) / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ) ),Max( ( Min( ( ( MLU - MUM ) / Max( Max( RRSe,RCSe ),( RMSe + RMSe ) ) ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.8175144247339845}, {"determining": "Min( ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ,( ( AMS + ( FirstVNF_Mem_Server + ( FirstVNF_CPU + AMS ) ) ) * Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( ( Max( ( MUR / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,( RMSe + RMSe ) ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.8175144247339845}, {"determining": "( ( AMS + ( FirstVNF_Mem_Server + ( FirstVNF_CPU + AMS ) ) ) * Max( ( AMS / DDR ),FirstVNF_RAM ) )", "choosing": "( Max( ( ( Max( ( MUR / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) - ( RMSe + RMSe ) )", "obj1": 0.1078838174273859, "obj2": 0.8291059055437507}, {"determining": "( ( AMS + ( FirstVNF_Mem_Server + ( ARS + AMS ) ) ) * Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( Max( MLU,RMSe ) - ( RRSe - CS ) ) - ( RMSe + RMSe ) )", "obj1": 0.18049792531120332, "obj2": 0.6468054231546849}, {"determining": "Min( ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ,Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( Max( MLU,MUR ) * Max( ( ( Max( ( MUR / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.8175144247339845}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_CPU ) * Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( Max( ( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) + Max( FirstVNF_Mem,FirstVNF_RAM ) ) - Min( ( RRS * FirstVNF_RAM ) ,( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) ),Min( Min( ( Const + MDR ) ,( DDR * MDR ) ) ,( ( MDR / FirstVNF_CPU ) / ( MDR - FirstVNF_Mem_Server ) ) ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( MUR - RMSe )", "obj1": 0.14315352697095435, "obj2": 0.7113845075802654}, {"determining": "( Min( Min( ( FirstVNF_CPU - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( PN + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( DDR,FirstVNF_Mem ),( MDR + ARS ) ) ,( ( FirstVNF_RAM_Server * MRS ) - ( DDR / BR ) ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MLU - CS ) - ( RRSe * MUR ) ) )", "obj1": 0.33195020746887965, "obj2": 0.5207297884833707}, {"determining": "( ( DDR + ( FirstVNF_Mem_Server + ( FirstVNF_CPU + AMS ) ) ) / Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( Max( MLU,( ( MLU - CS ) - ( RRSe * RMSe ) ) ) * ( RRSe - CS ) ) - ( RMSe + RMSe ) )", "obj1": 0.18049792531120332, "obj2": 0.6468054231546849}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) )", "choosing": "( Max( DS,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.17427385892116182, "obj2": 0.648986530801673}, {"determining": "Min( ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ,Min( ( FirstVNF_RAM_Server / MRS ) ,DDR ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( ( Max( ( MUR / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( RRSe ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.8175144247339845}, {"determining": "Min( ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( ( Max( ( MUR / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.8175144247339845}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + ( Min( CRS ,DDR ) + ( ARS / CRS ) ) )", "choosing": "( ( ( MLU - CS ) - ( RRSe * DS ) ) - Max( DS,RRSe ) )", "obj1": 0.2095435684647303, "obj2": 0.6299770937818737}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.15560165975103735, "obj2": 0.684148654573984}, {"determining": "( ( ( Const + FirstVNF_Mem_Server ) * Min( ( Const * CRS ) ,( Const / ARS ) ) ) * Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( Max( MLU,( ( ( MUC * RRSe ) - ( RMSe * RCSe ) ) - Max( RRSe,MUC ) ) ) * ( RRSe - CS ) ) - ( RMSe + RMSe ) )", "obj1": 0.18049792531120332, "obj2": 0.6468054231546849}, {"determining": "( Min( Const ,Const ) * Min( ( Const * CRS ) ,( Const / ARS ) ) )", "choosing": "( ( Max( MUC,( ( MLU - CS ) - ( RRSe * RMSe ) ) ) * ( RRSe - CS ) ) - ( RMSe + RMSe ) )", "obj1": 0.18049792531120332, "obj2": 0.6468054231546849}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_CPU ) * Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( Max( ( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) + Max( FirstVNF_Mem,FirstVNF_RAM ) ) - Min( ( RRS * FirstVNF_RAM ) ,( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) ),Min( Min( ( Const + MDR ) ,( DDR * MDR ) ) ,( ( MDR / FirstVNF_CPU ) / ( MDR - FirstVNF_Mem_Server ) ) ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( Max( DS,MLU ) * ( ( MLU - CS ) - ( RMSe * RCSe ) ) )", "obj1": 0.2551867219917012, "obj2": 0.5935866633911525}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Max( Max( BR,BR ),( ARS - CRS ) ) )", "choosing": "( ( DS * MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.17427385892116182, "obj2": 0.648986530801673}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( MRS,ACS ) ) ,( ( ( RRS / ARS ) + AMS ) / ( FirstVNF_RAM_Server - Const ) ) ) - Min( Max( Max( ( Max( Max( ( FirstVNF_RAM / AMS ),( PN - FirstVNF_RAM_Server ) ),DDR ) - ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) * ( AMS - FirstVNF_RAM ) ) ),FirstVNF_Mem ),( MDR + ARS ) ) ,( ( FirstVNF_RAM_Server * PN ) - ( DDR / BR ) ) ) )", "choosing": "( Max( DS,MLU ) * ( ( MLU - CS ) - ( RMSe * RCSe ) ) )", "obj1": 0.3381742738589212, "obj2": 0.5129038962031434}, {"determining": "( Min( Const ,FirstVNF_RAM_Server ) * ( ( Const * CRS ) / ( Const / ARS ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.16182572614107885, "obj2": 0.6737917602742151}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) )", "choosing": "( Max( DS,MLU ) * ( ( MLU - CS ) - ( RMSe * RCSe ) ) )", "obj1": 0.2551867219917012, "obj2": 0.5935866633911525}, {"determining": "( ( AMS + ( FirstVNF_Mem_Server + ( FirstVNF_CPU + AMS ) ) ) * Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( Max( MLU,RMSe ) * ( RRSe - CS ) ) - ( RMSe + RMSe ) )", "obj1": 0.18049792531120332, "obj2": 0.6468054231546849}, {"determining": "( ( AMS + ( FirstVNF_Mem_Server + ( FirstVNF_CPU + AMS ) ) ) * Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( Max( DS,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.21369294605809128, "obj2": 0.6276435044252402}], "7": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + ( FirstVNF_Mem_Server + ( FirstVNF_CPU + AMS ) ) ) * Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( Max( MLU,RMSe ) * ( RRSe - CS ) ) - ( RMSe + RMSe ) )", "obj1": 0.18049792531120332, "obj2": 0.6468054231546849}, {"determining": "Min( ( ( DDR / FirstVNF_CPU ) + Max( AMS,DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( ( Max( ( MUR / MLU ),( MUR + RMSe ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RRSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.8175144247339845}, {"determining": "( ( DDR + ( FirstVNF_Mem_Server + ( FirstVNF_CPU + AMS ) ) ) * Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( Max( MLU,( ( MLU - CS ) - ( RRSe * RMSe ) ) ) * ( RRSe - CS ) ) - ( RMSe + RMSe ) )", "obj1": 0.18049792531120332, "obj2": 0.6468054231546849}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) )", "choosing": "( ( Max( MLU,RMSe ) * ( RRSe - CS ) ) - ( RMSe + RMSe ) )", "obj1": 0.18049792531120332, "obj2": 0.6468054231546849}, {"determining": "Min( ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ,Min( ( PN + FirstVNF_RAM_Server ) ,DDR ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( ( Max( ( ( CS + DS ) / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.8175144247339845}, {"determining": "Min( ( ( DDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( RMSe * ( MUC - RMSe ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.8175144247339845}, {"determining": "Min( ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ,Min( ( PN + FirstVNF_RAM_Server ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,RRS ) ) ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( ( Max( ( ( CS + DS ) / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ) ),Max( ( Min( ( ( MLU - MUM ) / Max( Max( RRSe,RCSe ),( RMSe + RMSe ) ) ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.8175144247339845}, {"determining": "Min( ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ,( ( AMS + ( FirstVNF_Mem_Server + ( FirstVNF_CPU + AMS ) ) ) * Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( ( Max( ( MUR / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,( RMSe + RMSe ) ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.8175144247339845}, {"determining": "( ( AMS + ( FirstVNF_Mem_Server + ( ARS + AMS ) ) ) * Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( Max( MLU,RMSe ) - ( RRSe - CS ) ) - ( RMSe + RMSe ) )", "obj1": 0.18049792531120332, "obj2": 0.6468054231546849}, {"determining": "Min( ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ,Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( Max( MLU,MUR ) * Max( ( ( Max( ( MUR / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.8175144247339845}, {"determining": "( ( DDR + ( FirstVNF_Mem_Server + ( FirstVNF_CPU + AMS ) ) ) / Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( Max( MLU,( ( MLU - CS ) - ( RRSe * RMSe ) ) ) * ( RRSe - CS ) ) - ( RMSe + RMSe ) )", "obj1": 0.18049792531120332, "obj2": 0.6468054231546849}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) )", "choosing": "( Max( DS,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.17427385892116182, "obj2": 0.648986530801673}, {"determining": "Min( ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ,Min( ( FirstVNF_RAM_Server / MRS ) ,DDR ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( ( Max( ( MUR / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( RRSe ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.8175144247339845}, {"determining": "Min( ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( ( Max( ( MUR / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.8175144247339845}, {"determining": "( ( ( Const + FirstVNF_Mem_Server ) * Min( ( Const * CRS ) ,( Const / ARS ) ) ) * Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( Max( MLU,( ( ( MUC * RRSe ) - ( RMSe * RCSe ) ) - Max( RRSe,MUC ) ) ) * ( RRSe - CS ) ) - ( RMSe + RMSe ) )", "obj1": 0.18049792531120332, "obj2": 0.6468054231546849}, {"determining": "( Min( Const ,Const ) * Min( ( Const * CRS ) ,( Const / ARS ) ) )", "choosing": "( ( Max( MUC,( ( MLU - CS ) - ( RRSe * RMSe ) ) ) * ( RRSe - CS ) ) - ( RMSe + RMSe ) )", "obj1": 0.18049792531120332, "obj2": 0.6468054231546849}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Max( Max( BR,BR ),( ARS - CRS ) ) )", "choosing": "( ( DS * MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.17427385892116182, "obj2": 0.648986530801673}, {"determining": "( Min( Const ,FirstVNF_RAM_Server ) * ( ( Const * CRS ) / ( Const / ARS ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.16182572614107885, "obj2": 0.6737917602742151}, {"determining": "( ( AMS + ( FirstVNF_Mem_Server + ( FirstVNF_CPU + AMS ) ) ) * Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( Max( MLU,RMSe ) * ( RRSe - CS ) ) - ( RMSe + RMSe ) )", "obj1": 0.18049792531120332, "obj2": 0.6468054231546849}, {"determining": "( ( DDR + ( FirstVNF_Mem_Server + ( FirstVNF_CPU + AMS ) ) ) / Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( Max( MLU,( ( MLU - CS ) - ( RRSe * RMSe ) ) ) * ( RRSe - CS ) ) - ( RMSe + RMSe ) )", "obj1": 0.18049792531120332, "obj2": 0.6468054231546849}, {"determining": "( ( AMS + ( FirstVNF_Mem_Server + ( FirstVNF_CPU + AMS ) ) ) * Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( Max( MLU,RMSe ) * ( RRSe - CS ) ) - ( RMSe + RMSe ) )", "obj1": 0.18049792531120332, "obj2": 0.6468054231546849}, {"determining": "Min( ( ( DDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( RMSe * ( MUC - RMSe ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( ( Max( MLU,RMSe ) * ( RRSe - CS ) ) - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.8175144247339845}, {"determining": "Min( ( ( DDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( RMSe * ( MUC - RMSe ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.1037344398340249, "obj2": 0.8177605134057677}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,FirstVNF_RAM ) )", "choosing": "( Max( DS,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.17427385892116182, "obj2": 0.648986530801673}, {"determining": "Min( ( ( DDR * FirstVNF_CPU ) - ( FirstVNF_RAM_Server / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( MLU,Max( MLU,RMSe ) ) * Max( ( ( Max( ( RRSe / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.8175144247339845}, {"determining": "Min( ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ,Min( ( PN + FirstVNF_RAM_Server ) ,DDR ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( ( Max( ( ( CS + DS ) / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.8175144247339845}, {"determining": "Min( ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( ( Max( ( MUR / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.8175144247339845}, {"determining": "Min( ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( ( Max( ( MUR / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.8175144247339845}, {"determining": "( ( DDR + ( FirstVNF_Mem_Server + ( FirstVNF_CPU + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) - Max( Max( FirstVNF_CPU,FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) / Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( Max( MLU,( ( MLU - CS ) - ( MLU * RMSe ) ) ) * ( RRSe - CS ) ) - ( RMSe + RMSe ) )", "obj1": 0.18049792531120332, "obj2": 0.6468054231546849}, {"determining": "( Min( Const ,FirstVNF_RAM_Server ) * Min( ( Const * CRS ) ,( Const / ARS ) ) )", "choosing": "( ( Max( MLU,( ( MLU - CS ) - ( RRSe * RMSe ) ) ) * ( RRSe - CS ) ) - ( RMSe + RMSe ) )", "obj1": 0.18049792531120332, "obj2": 0.6468054231546849}, {"determining": "( ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) - Max( Max( FirstVNF_CPU,FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) * Max( ( MDR + FirstVNF_RAM_Server ),CRS ) )", "choosing": "( ( Max( MLU,RMSe ) * ( RRSe - CS ) ) - ( RMSe + RMSe ) )", "obj1": 0.18049792531120332, "obj2": 0.6468054231546849}, {"determining": "( ( AMS + ( FirstVNF_Mem_Server + ( FirstVNF_CPU + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) - Max( Max( FirstVNF_CPU,FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) * Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( MLU - CS ) * ( RRSe - CS ) ) - ( RMSe + RMSe ) )", "obj1": 0.16597510373443983, "obj2": 0.662072798132122}, {"determining": "Min( ( ( DDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( RMSe * ( MUC - RMSe ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.1037344398340249, "obj2": 0.8177605134057677}, {"determining": "Min( ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ,Min( ( FirstVNF_RAM_Server / MRS ) ,DDR ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( ( Max( ( MUR / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( RRSe ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.8175144247339845}, {"determining": "Min( ( ( DDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,( Max( BR,BR ) + ( ARS / CRS ) ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( RMSe * ( MUC - Max( ( RMSe + CS ),( CS + DS ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.8175144247339845}, {"determining": "Min( ( ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,( FirstVNF_Mem * DDR ) )", "choosing": "( Max( MLU,RRSe ) * Max( ( CS * ( MUC - RMSe ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.1016597510373444, "obj2": 0.8231952771681966}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + ( ( ( AMS + ( FirstVNF_Mem_Server + ( FirstVNF_CPU + AMS ) ) ) * Max( FirstVNF_CPU,FirstVNF_RAM ) ) + ( ARS - CRS ) ) )", "choosing": "( Max( DS,( RRSe * DS ) ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.15560165975103735, "obj2": 0.674013336739303}, {"determining": "( ( AMS + ( FirstVNF_Mem_Server + ( FirstVNF_CPU + AMS ) ) ) * Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( Max( DS,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.17427385892116182, "obj2": 0.648986530801673}, {"determining": "Min( ( ( DDR * FirstVNF_CPU ) + ( AMS / FirstVNF_RAM ) ) ,( ( AMS + ( FirstVNF_Mem_Server + ( FirstVNF_CPU + AMS ) ) ) * Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( ( Max( ( MUR / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Max( MUR,( RMSe + RMSe ) ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.8175144247339845}, {"determining": "( ( AMS + ( ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) - Max( Max( FirstVNF_CPU,FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) * Max( ( MDR + FirstVNF_RAM_Server ),CRS ) ) ) * Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( Max( MLU,RMSe ) * ( ( MLU - CS ) - ( RRSe * MUR ) ) ) - ( RMSe + RMSe ) )", "obj1": 0.16804979253112035, "obj2": 0.6542950801022719}, {"determining": "Min( ( ( DDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( ACS / DDR ) ) ,FirstVNF_RAM_Server )", "choosing": "( Max( MLU,RMSe ) * Max( ( RMSe * ( MUC - RMSe ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( ( MLU - CS ) - ( RRSe * MUR ) ) ) ),Max( ( Min( RMSe ,MUC ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.8175144247339845}, {"determining": "Min( ( ( DDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( RMSe * ( MUC - RMSe ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.8175144247339845}, {"determining": "Min( ( ( ( Max( ( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) + Max( FirstVNF_Mem,FirstVNF_RAM ) ) - Min( ( RRS * FirstVNF_RAM ) ,( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) ),Min( Min( ( Const + MDR ) ,( DDR * MDR ) ) ,( ( MDR / FirstVNF_CPU ) / ( MDR - FirstVNF_Mem_Server ) ) ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( RMSe * ( MUC - RMSe ) ),Max( ( Min( ( MUM + RMSe ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.13070539419087138, "obj2": 0.8010938616606749}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_CPU ) * Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( Max( ( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) + Max( FirstVNF_Mem,FirstVNF_RAM ) ) - Min( ( RRS * FirstVNF_RAM ) ,( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) ),Min( Min( ( Const + MDR ) ,( DDR * MDR ) ) ,( ( MDR / FirstVNF_CPU ) / ( MDR - FirstVNF_Mem_Server ) ) ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( RMSe * ( MUC - RMSe ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.8175144247339845}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_CPU ) * Min( Min( FirstVNF_Mem_Server ,BR ) ,Min( FirstVNF_RAM ,RRS ) ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( Max( ( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) + Max( FirstVNF_Mem,FirstVNF_RAM ) ) - Min( ( ACS * FirstVNF_RAM ) ,( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) ),Min( Min( ( Const + MDR ) ,( FirstVNF_RAM * MDR ) ) ,( ( MDR / FirstVNF_CPU ) / ( MDR - FirstVNF_Mem_Server ) ) ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( Max( MLU,Min( ( RCSe - CS ) ,( RRSe * RMSe ) ) ) * ( DS - CS ) ) - ( RMSe + RMSe ) )", "obj1": 0.13692946058091288, "obj2": 0.6979040733699632}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + ( Max( BR,BR ) + ( ARS - CRS ) ) )", "choosing": "( Max( DS,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.17427385892116182, "obj2": 0.648986530801673}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + ( Max( BR,BR ) - ( ARS - CRS ) ) )", "choosing": "( Max( DS,MLU ) * ( ( DS - CS ) - ( RRSe * DS ) ) )", "obj1": 0.17427385892116182, "obj2": 0.648986530801673}, {"determining": "Min( ( ( DDR * ( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) ) ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( ( Max( ( MUR / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( ( ( RCSe * MUM ) - MUM ) ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.11618257261410789, "obj2": 0.8111309903968409}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( ( Max( ( MUR / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.1016597510373444, "obj2": 0.8231952771681966}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}], "8": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) )", "choosing": "( Max( DS,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.17427385892116182, "obj2": 0.648986530801673}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Max( Max( BR,BR ),( ARS - CRS ) ) )", "choosing": "( ( DS * MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.17427385892116182, "obj2": 0.648986530801673}, {"determining": "Min( ( ( DDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( RMSe * ( MUC - RMSe ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.1037344398340249, "obj2": 0.8177605134057677}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,FirstVNF_RAM ) )", "choosing": "( Max( DS,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.17427385892116182, "obj2": 0.648986530801673}, {"determining": "Min( ( ( DDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( RMSe * ( MUC - RMSe ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.1037344398340249, "obj2": 0.8177605134057677}, {"determining": "Min( ( ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,( FirstVNF_Mem * DDR ) )", "choosing": "( Max( MLU,RRSe ) * Max( ( CS * ( MUC - RMSe ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.1016597510373444, "obj2": 0.8231952771681966}, {"determining": "( ( AMS + ( FirstVNF_Mem_Server + ( FirstVNF_CPU + AMS ) ) ) * Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( Max( DS,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.17427385892116182, "obj2": 0.648986530801673}, {"determining": "( ( AMS + ( ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) - Max( Max( FirstVNF_CPU,FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) * Max( ( MDR + FirstVNF_RAM_Server ),CRS ) ) ) * Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( Max( MLU,RMSe ) * ( ( MLU - CS ) - ( RRSe * MUR ) ) ) - ( RMSe + RMSe ) )", "obj1": 0.16804979253112035, "obj2": 0.6542950801022719}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_CPU ) * Min( Min( FirstVNF_Mem_Server ,BR ) ,Min( FirstVNF_RAM ,RRS ) ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( Max( ( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) + Max( FirstVNF_Mem,FirstVNF_RAM ) ) - Min( ( ACS * FirstVNF_RAM ) ,( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) ),Min( Min( ( Const + MDR ) ,( FirstVNF_RAM * MDR ) ) ,( ( MDR / FirstVNF_CPU ) / ( MDR - FirstVNF_Mem_Server ) ) ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( Max( MLU,Min( ( RCSe - CS ) ,( RRSe * RMSe ) ) ) * ( DS - CS ) ) - ( RMSe + RMSe ) )", "obj1": 0.13692946058091288, "obj2": 0.6979040733699632}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + ( Max( BR,BR ) + ( ARS - CRS ) ) )", "choosing": "( Max( DS,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.17427385892116182, "obj2": 0.648986530801673}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + ( Max( BR,BR ) - ( ARS - CRS ) ) )", "choosing": "( Max( DS,MLU ) * ( ( DS - CS ) - ( RRSe * DS ) ) )", "obj1": 0.17427385892116182, "obj2": 0.648986530801673}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( ( Max( ( MUR / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.1016597510373444, "obj2": 0.8231952771681966}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "( ( FirstVNF_Mem_Server + ( FirstVNF_CPU + AMS ) ) + Min( CRS ,DDR ) )", "choosing": "( ( Max( MLU,RMSe ) * ( MUR - CS ) ) - ( RMSe + RMSe ) )", "obj1": 0.1950207468879668, "obj2": 0.63935605359301}, {"determining": "( ( DDR + ( FirstVNF_Mem_Server + ( FirstVNF_CPU + ( Max( ( FirstVNF_Mem_Server / ACS ),Min( DDR ,PN ) ) - Max( Max( FirstVNF_CPU,FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) / Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( ( Max( ( MUR / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,( RMSe + RMSe ) ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( Max( RCSe,MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.1037344398340249, "obj2": 0.8177605134057677}, {"determining": "( ( AMS / MRS ) + Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( ( Max( ( MUR / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( Min( Min( RRSe ,DS ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - RCSe ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.1016597510373444, "obj2": 0.8231952771681966}, {"determining": "( ( AMS + ( ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) - Max( Max( FirstVNF_CPU,FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) * Max( ( MDR + FirstVNF_RAM_Server ),CRS ) ) ) * Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( Max( MLU,RMSe ) * ( ( MLU - CS ) - ( RRSe * MUR ) ) ) - ( RMSe + RMSe ) )", "obj1": 0.2074688796680498, "obj2": 0.6250972947599388}, {"determining": "Min( ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,Min( ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ,Min( ( FirstVNF_RAM_Server / MRS ) ,DDR ) ) ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( ( Max( ( MUR / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ) ),( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ) ) )", "obj1": 0.3257261410788382, "obj2": 0.5843997908031562}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) )", "choosing": "( ( Max( ( ( MLU - CS ) - ( RRSe * DS ) ),RMSe ) * ( RRSe - CS ) ) - ( RMSe + RMSe ) )", "obj1": 0.24481327800829875, "obj2": 0.6092443892035899}, {"determining": "( ( DDR + ( ( DDR * FirstVNF_CPU ) + ( FirstVNF_CPU + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) - Max( Max( FirstVNF_CPU,FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) / Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( Max( MLU,( ( MLU - CS ) - ( MLU * Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) ) * ( RRSe - CS ) ) - ( RMSe + RMSe ) )", "obj1": 0.1991701244813278, "obj2": 0.6374153764244618}, {"determining": "Min( ( ( DDR * FirstVNF_CPU ) + ( FirstVNF_RAM_Server / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( MLU,Max( MLU,RMSe ) ) * Max( ( ( Max( ( MUR / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.1037344398340249, "obj2": 0.8177605134057677}, {"determining": "Min( ( ( DDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( ACS / DDR ) ) ,FirstVNF_RAM_Server )", "choosing": "( Max( MLU,RMSe ) * Max( ( RMSe * ( MUC - RMSe ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( ( MLU - CS ) - ( RRSe * MUR ) ) ) ),Max( ( Min( RMSe ,MUC ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.0912863070539419, "obj2": 0.8246594395967759}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) )", "choosing": "( Max( DS,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.17427385892116182, "obj2": 0.648986530801673}, {"determining": "Min( ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( DS,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.17427385892116182, "obj2": 0.648986530801673}, {"determining": "( ( DDR / MRS ) + Max( Max( BR,BR ),( ARS - CRS ) ) )", "choosing": "( ( MUR + DS ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.15560165975103735, "obj2": 0.6655553653853454}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Max( Max( BR,BR ),( ARS - CRS ) ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( ( Max( ( MUR / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( RRSe ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.1016597510373444, "obj2": 0.8231952771681966}, {"determining": "( Max( FirstVNF_RAM_Server,MRS ) + AMS )", "choosing": "( Max( ( ( Max( MLU,( ( RMSe - CS ) - ( RRSe * RMSe ) ) ) * ( RRSe - RCSe ) ) - ( RMSe + RMSe ) ),RMSe ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.16390041493775934, "obj2": 0.6550414370587921}, {"determining": "Min( ( Min( MRS ,( FirstVNF_CPU - FirstVNF_RAM ) ) + ( ACS / DDR ) ) ,FirstVNF_RAM_Server )", "choosing": "( Max( MLU,MUR ) * Max( ( RMSe * ( MUC - RMSe ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( ( MLU - CS ) - ( RRSe * MUR ) ) ) ),Max( ( Min( RMSe ,MUC ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( CS - MUR ) ) ) ) ) )", "obj1": 0.0912863070539419, "obj2": 0.8246594395967759}, {"determining": "( ( AMS + Min( ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) ) ) * Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( Max( MLU,RMSe ) * ( RRSe - CS ) ) - ( Max( MLU,RMSe ) * Max( ( ( Max( ( MUR / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) ) )", "obj1": 0.2925311203319502, "obj2": 0.5935156939077494}, {"determining": "( ( AMS + ( FirstVNF_Mem_Server + ( FirstVNF_CPU + AMS ) ) ) * Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( ( Max( ( MUR / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.1037344398340249, "obj2": 0.8177605134057677}, {"determining": "Min( ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ,Min( ( FirstVNF_RAM_Server / MRS ) ,DDR ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( ( Max( ( MUR / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( RRSe ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.1016597510373444, "obj2": 0.8231952771681966}, {"determining": "Min( ( ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,( FirstVNF_Mem * DDR ) )", "choosing": "( Max( MLU,RRSe ) * Max( ( CS * ( MUC - RMSe ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.10580912863070539, "obj2": 0.8072431827662205}, {"determining": "( ( DDR + ( FirstVNF_Mem_Server + ( FirstVNF_CPU + AMS ) ) ) / Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( RMSe * ( MUC - RMSe ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.1037344398340249, "obj2": 0.8177605134057677}, {"determining": "( ( AMS + ( FirstVNF_Mem_Server + ( FirstVNF_CPU + AMS ) ) ) * Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( ( Max( ( MUR / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,( RMSe + RMSe ) ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.1037344398340249, "obj2": 0.8177605134057677}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_CPU ) * Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( Max( ( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) + Max( FirstVNF_Mem,FirstVNF_RAM ) ) - Min( ( RRS * FirstVNF_RAM ) ,( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) ),Min( Min( ( Const + MDR ) ,( DDR * MDR ) ) ,( ( MDR / FirstVNF_CPU ) / ( MDR - FirstVNF_Mem_Server ) ) ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( Max( DS,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.17634854771784234, "obj2": 0.6434192672208429}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_CPU ) * Min( Min( FirstVNF_Mem_Server ,BR ) ,Min( FirstVNF_RAM ,RRS ) ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( Max( ( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) + Max( FirstVNF_Mem,FirstVNF_RAM ) ) - Min( ( ACS * FirstVNF_RAM ) ,( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) ),Min( Min( ( Const + MDR ) ,( FirstVNF_RAM * MDR ) ) ,( ( MDR / FirstVNF_CPU ) / ( MDR - FirstVNF_Mem_Server ) ) ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( Max( MLU,Min( ( RCSe - CS ) ,( RRSe * RMSe ) ) ) * ( DS - CS ) ) - ( RMSe + RMSe ) )", "obj1": 0.22821576763485477, "obj2": 0.6101927113689039}, {"determining": "Max( ( ( ( ( MDR * MDR ) + DDR ) * RRS ) / RRS ),( FirstVNF_CPU_Server - ( MRS + AMS ) ) )", "choosing": "( Max( Min( ( ( ( ( ( MLU * MUC ) * ( DS - RCSe ) ) + ( Min( MUC ,MLU ) + Max( RCSe,CS ) ) ) + ( ( ( RCSe - MLU ) - ( RCSe / MUM ) ) * Max( ( RMSe * MUM ),( MUM + MLU ) ) ) ) / Min( Min( ( ( RCSe * MUR ) + Min( MLU ,RMSe ) ) ,( ( RRSe / CS ) - ( MUR * RCSe ) ) ) ,( ( ( MUC + CS ) / ( CS / MUC ) ) / Min( Max( MUM,MUC ) ,( DS * MUR ) ) ) ) ) ,( Min( Max( Min( Max( CS,RCSe ) ,( RCSe / MUR ) ),Max( Min( RCSe ,MLU ),( MUR + RCSe ) ) ) ,( Max( ( MUR + RCSe ),( RMSe + RMSe ) ) * ( ( MUM / MUM ) - ( RRSe - MUR ) ) ) ) + Min( ( ( ( DS - RRSe ) - Min( MUR ,RCSe ) ) + ( ( MUR + DS ) / Max( RCSe,MUC ) ) ) ,( ( Min( MUM ,RRSe ) + Max( MLU,RRSe ) ) * ( ( RRSe * DS ) * ( DS - CS ) ) ) ) ) ),( Max( Max( ( Max( ( DS - DS ),Min( MUC ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ),( ( Min( MUM ,RMSe ) / ( RMSe - DS ) ) + ( Max( CS,RRSe ) * Max( RCSe,MUM ) ) ) ),( Min( ( ( MUM * DS ) / ( MLU / MLU ) ) ,( ( MUM / CS ) / ( CS - RRSe ) ) ) - ( Min( ( MLU + RMSe ) ,Max( RMSe,MLU ) ) / ( ( MUM / MUR ) + Min( MLU ,CS ) ) ) ) ) * ( ( Min( Min( Min( RRSe ,MUM ) ,( CS * MUM ) ) ,( Max( RMSe,DS ) - Min( MUC ,MUC ) ) ) * ( ( ( DS * MUC ) / ( DS + CS ) ) / ( ( DS / RCSe ) + ( MUM / MUR ) ) ) ) + ( ( Max( ( CS * MUR ),( MLU - DS ) ) * Max( Max( CS,RMSe ),Min( RRSe ,MLU ) ) ) / Max( Max( Min( RMSe ,CS ),( MUC * RCSe ) ),Min( Min( MUC ,MLU ) ,Min( RMSe ,MUC ) ) ) ) ) ) ) - ( Max( Max( Min( Max( ( ( DS * CS ) / ( CS - MUM ) ),( ( MLU / MUM ) * ( CS + DS ) ) ) ,( ( Max( RCSe,RMSe ) / ( CS - CS ) ) - ( ( RCSe - CS ) / Max( RRSe,RMSe ) ) ) ),Max( ( ( ( CS * MUM ) + ( DS * RRSe ) ) / ( Min( MUR ,CS ) / ( MUR + MUC ) ) ),( Max( Min( MUR ,DS ),Max( MUR,MUC ) ) - Max( ( MUM + MLU ),( MLU / CS ) ) ) ) ),( Min( Max( ( ( MUR + RRSe ) * ( RCSe - RMSe ) ),( Min( RMSe ,MLU ) * Min( MUC ,RMSe ) ) ) ,Max( ( ( DS / RRSe ) * ( CS - DS ) ),( Min( MUM ,MUR ) + ( MUM - CS ) ) ) ) + ( ( ( ( MUC * MUR ) + ( RRSe - RMSe ) ) * Min( ( RCSe / MUC ) ,( RMSe - MUC ) ) ) - ( ( ( MUM + RCSe ) + Max( MUC,RCSe ) ) + Max( ( RMSe - RMSe ),( MUM - MUR ) ) ) ) ) ) - ( ( ( ( ( ( DS - RCSe ) + ( MLU * MUM ) ) * ( Max( CS,MUM ) - ( MUR - MLU ) ) ) - ( Max( ( MUR / MUC ),Max( RRSe,MUM ) ) - ( Min( RMSe ,MLU ) * Max( MUC,DS ) ) ) ) + Min( ( ( Max( MUC,MLU ) + ( RMSe + MUM ) ) / ( Max( CS,MLU ) * Max( MUM,CS ) ) ) ,Max( ( ( MLU - MLU ) / ( DS / MUM ) ),Max( Min( MUC ,MUM ),Min( CS ,CS ) ) ) ) ) - ( Min( ( Max( Max( RCSe,DS ),Max( MLU,MUM ) ) + ( Min( MUR ,MLU ) * ( RCSe + RRSe ) ) ) ,Min( Min( ( DS - DS ) ,( MUR - MUR ) ) ,( ( RRSe * RRSe ) / Max( CS,RMSe ) ) ) ) - ( Min( ( ( RMSe - RMSe ) / ( RRSe + RRSe ) ) ,Min( Min( DS ,MLU ) ,Min( DS ,RMSe ) ) ) + Max( ( Min( RRSe ,MLU ) + Min( CS ,RMSe ) ),( ( RRSe * RCSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.11203319502074689, "obj2": 0.7727734706282464}, {"determining": "( ( DDR + ( FirstVNF_Mem_Server + ( FirstVNF_CPU + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) - Max( Max( FirstVNF_CPU,FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) / Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( ( Max( ( ( CS + DS ) / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.1037344398340249, "obj2": 0.8177605134057677}, {"determining": "( ( DDR + ( FirstVNF_Mem_Server + ( FirstVNF_CPU + AMS ) ) ) / Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( ( Max( ( ( CS + DS ) / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ) ),Max( ( Min( ( ( MLU - MUM ) / Max( Max( RRSe,RCSe ),( RMSe + RMSe ) ) ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.1037344398340249, "obj2": 0.8177605134057677}, {"determining": "Min( ( ( DDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,( Max( BR,BR ) + ( ARS / CRS ) ) )", "choosing": "( Max( DS,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.17427385892116182, "obj2": 0.648986530801673}, {"determining": "( ( AMS + ( FirstVNF_Mem_Server + ( FirstVNF_CPU + AMS ) ) ) * Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( Max( MLU,RRSe ) * Max( ( RMSe * ( MUC - RMSe ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.10580912863070539, "obj2": 0.8072431827662205}, {"determining": "Min( ( ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( DS,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.17427385892116182, "obj2": 0.648986530801673}, {"determining": "( ( AMS + ( FirstVNF_Mem_Server + ( FirstVNF_CPU + AMS ) ) ) * Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( Max( DS,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.17427385892116182, "obj2": 0.648986530801673}, {"determining": "( ( AMS + ( FirstVNF_Mem_Server + ( FirstVNF_CPU + AMS ) ) ) * Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( Max( DS,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.1887966804979253, "obj2": 0.6427833651671692}, {"determining": "( ( Max( ( ( ( ( ( BR - FirstVNF_Mem ) * ( DDR - DDR ) ) + ( ( FirstVNF_CPU - MRS ) * Max( FirstVNF_CPU_Server,PN ) ) ) / Min( Max( ( AMS * FirstVNF_CPU_Server ),( MDR - FirstVNF_RAM ) ) ,( ( FirstVNF_RAM * CRS ) / Min( AMS ,BR ) ) ) ) / ( ( ( Max( BR,AMS ) - Max( CRS,FirstVNF_RAM_Server ) ) + ( ( BR + FirstVNF_CPU ) - ( MRS - ACS ) ) ) * ( ( ( CRS + Const ) / ( BR * PN ) ) + ( ( AMS / FirstVNF_RAM ) * Max( RRS,ACS ) ) ) ) ),( Max( ( Max( Max( MDR,FirstVNF_Mem_Server ),( CRS - ACS ) ) - Max( ( CRS + ACS ),( FirstVNF_CPU / MRS ) ) ),( ( ( MDR - ACS ) * Min( RRS ,DDR ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem ) / ( FirstVNF_RAM - DDR ) ) ) ) / ( ( ( ( BR - CRS ) - ( MDR + FirstVNF_Mem_Server ) ) - Min( Max( DDR,FirstVNF_Mem_Server ) ,Max( FirstVNF_Mem_Server,MDR ) ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) + Min( ARS ,ARS ) ) - ( Max( MDR,CRS ) / Min( RRS ,FirstVNF_CPU_Server ) ) ) ) ) ) * ( ( ( ( ( Max( FirstVNF_RAM_Server,PN ) - ( ARS * FirstVNF_RAM ) ) * Min( ( AMS * CRS ) ,( FirstVNF_RAM - FirstVNF_RAM ) ) ) / ( ( ( Const / MDR ) * ( MRS / ARS ) ) / ( ( MDR * ACS ) * ( FirstVNF_RAM + FirstVNF_CPU ) ) ) ) - ( ( ( ( AMS + FirstVNF_CPU ) + ( ACS - FirstVNF_CPU ) ) / ( ( FirstVNF_RAM - RRS ) * ( ARS + BR ) ) ) * ( ( ( FirstVNF_RAM / CRS ) * Min( ACS ,FirstVNF_Mem ) ) * ( Max( Const,ACS ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ) ) / ( ( Max( ( ( Const + PN ) + ( FirstVNF_CPU - BR ) ),( ( MDR / ARS ) - ( BR - FirstVNF_RAM ) ) ) * ( ( Max( CRS,ACS ) + ( FirstVNF_RAM + RRS ) ) / ( ( ARS * FirstVNF_CPU_Server ) / Min( AMS ,FirstVNF_RAM ) ) ) ) * Max( ( ( ( MDR - MRS ) / Max( AMS,MRS ) ) / Min( Min( PN ,MDR ) ,( ACS - FirstVNF_Mem ) ) ),( ( ( MDR - ARS ) / ( PN - MRS ) ) * ( ( MRS + FirstVNF_RAM_Server ) - Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) ) ) ) ) ) + ( ( Max( ( Max( Max( ( MRS / ARS ),( PN * ARS ) ),( ( DDR * DDR ) - ( BR - FirstVNF_CPU ) ) ) - Min( Max( ( Const / ACS ),( BR + RRS ) ) ,( ( MRS + PN ) * ( PN / FirstVNF_CPU ) ) ) ),Min( ( ( Min( PN ,BR ) * ( Const * FirstVNF_RAM_Server ) ) / ( ( BR + ARS ) * ( MDR - FirstVNF_RAM_Server ) ) ) ,( Max( ( PN + CRS ),( FirstVNF_Mem_Server * CRS ) ) / Max( ( FirstVNF_CPU_Server - AMS ),Max( DDR,Const ) ) ) ) ) / ( Min( ( Min( ( AMS - FirstVNF_RAM ) ,Min( AMS ,FirstVNF_Mem ) ) * ( ( FirstVNF_CPU / FirstVNF_RAM ) * ( DDR + MDR ) ) ) ,( Max( Min( MRS ,FirstVNF_RAM ),Max( MRS,FirstVNF_Mem_Server ) ) / ( Max( MRS,AMS ) / Min( ACS ,CRS ) ) ) ) - ( Min( ( Max( FirstVNF_Mem,Const ) / ( MDR / MDR ) ) ,( ( ACS + Const ) + ( RRS + DDR ) ) ) / ( ( Min( FirstVNF_Mem ,BR ) + ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) / Max( ( DDR / FirstVNF_RAM ),( FirstVNF_Mem / MRS ) ) ) ) ) ) * ( Max( Min( ( Min( Min( BR ,BR ) ,Max( MDR,FirstVNF_CPU_Server ) ) - Min( ( AMS + Const ) ,( FirstVNF_Mem_Server + Const ) ) ) ,( Min( ( BR * FirstVNF_Mem ) ,Min( DDR ,MDR ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( RRS + Const ) ) ) ),( Max( ( ( FirstVNF_CPU_Server - ARS ) - ( ACS / MDR ) ),( ( MDR - BR ) / Min( FirstVNF_CPU_Server ,ARS ) ) ) - ( ( ( FirstVNF_Mem_Server + ARS ) - Max( CRS,RRS ) ) - ( ( FirstVNF_CPU - AMS ) + ( DDR / FirstVNF_RAM_Server ) ) ) ) ) / ( Min( Max( ( ( FirstVNF_Mem + FirstVNF_RAM ) - ( PN / ARS ) ),( ( FirstVNF_RAM_Server - RRS ) * ( FirstVNF_CPU_Server * ARS ) ) ) ,( ( ( BR / FirstVNF_CPU_Server ) - ( BR * Const ) ) * Max( ( ACS + AMS ),( BR * FirstVNF_RAM_Server ) ) ) ) / ( Max( Max( ( MRS + FirstVNF_CPU ),( MDR / CRS ) ),Max( ( MRS + Const ),Max( PN,AMS ) ) ) - Min( ( ( BR - DDR ) * ( RRS / MRS ) ) ,( ( CRS - CRS ) / ( PN * PN ) ) ) ) ) ) ) )", "choosing": "( Min( ( Max( MUC,( Max( ( MUR * ( DS - RMSe ) ),Max( MLU,RRSe ) ) + RRSe ) ) - MUR ) ,Min( MLU ,DS ) ) * Min( MUR ,CS ) )", "obj1": 0.504149377593361, "obj2": 0.4686467324317771}, {"determining": "Min( ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( ( Max( ( MUR / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.1037344398340249, "obj2": 0.8177605134057677}, {"determining": "Min( ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ,Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( Max( DS,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.17427385892116182, "obj2": 0.648986530801673}, {"determining": "( ( FirstVNF_RAM_Server / ( AMS / DDR ) ) + Min( CRS ,DDR ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( ( Max( ( MUR / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + RRSe ) ) * Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.1016597510373444, "obj2": 0.8231952771681966}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( ( Max( ( MUR / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( RRSe ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.1016597510373444, "obj2": 0.8231952771681966}, {"determining": "( ( AMS - ( FirstVNF_Mem_Server + ( FirstVNF_CPU + AMS ) ) ) * Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( Max( DS,MLU ) * ( Min( MLU ,CS ) - ( RRSe * DS ) ) )", "obj1": 0.17427385892116182, "obj2": 0.648986530801673}], "9": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,( FirstVNF_Mem * DDR ) )", "choosing": "( Max( MLU,RRSe ) * Max( ( CS * ( MUC - RMSe ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.1016597510373444, "obj2": 0.8231952771681966}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_CPU ) * Min( Min( FirstVNF_Mem_Server ,BR ) ,Min( FirstVNF_RAM ,RRS ) ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( Max( ( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) + Max( FirstVNF_Mem,FirstVNF_RAM ) ) - Min( ( ACS * FirstVNF_RAM ) ,( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) ),Min( Min( ( Const + MDR ) ,( FirstVNF_RAM * MDR ) ) ,( ( MDR / FirstVNF_CPU ) / ( MDR - FirstVNF_Mem_Server ) ) ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( Max( MLU,Min( ( RCSe - CS ) ,( RRSe * RMSe ) ) ) * ( DS - CS ) ) - ( RMSe + RMSe ) )", "obj1": 0.13692946058091288, "obj2": 0.6979040733699632}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( ( Max( ( MUR / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.1016597510373444, "obj2": 0.8231952771681966}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "( ( AMS / MRS ) + Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( ( Max( ( MUR / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( Min( Min( RRSe ,DS ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - RCSe ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.1016597510373444, "obj2": 0.8231952771681966}, {"determining": "Min( ( ( DDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( ACS / DDR ) ) ,FirstVNF_RAM_Server )", "choosing": "( Max( MLU,RMSe ) * Max( ( RMSe * ( MUC - RMSe ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( ( MLU - CS ) - ( RRSe * MUR ) ) ) ),Max( ( Min( RMSe ,MUC ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.0912863070539419, "obj2": 0.8246594395967759}, {"determining": "( ( DDR / MRS ) + Max( Max( BR,BR ),( ARS - CRS ) ) )", "choosing": "( ( MUR + DS ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.15560165975103735, "obj2": 0.6655553653853454}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Max( Max( BR,BR ),( ARS - CRS ) ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( ( Max( ( MUR / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( RRSe ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.1016597510373444, "obj2": 0.8231952771681966}, {"determining": "( Max( FirstVNF_RAM_Server,MRS ) + AMS )", "choosing": "( Max( ( ( Max( MLU,( ( RMSe - CS ) - ( RRSe * RMSe ) ) ) * ( RRSe - RCSe ) ) - ( RMSe + RMSe ) ),RMSe ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.16390041493775934, "obj2": 0.6550414370587921}, {"determining": "Min( ( Min( MRS ,( FirstVNF_CPU - FirstVNF_RAM ) ) + ( ACS / DDR ) ) ,FirstVNF_RAM_Server )", "choosing": "( Max( MLU,MUR ) * Max( ( RMSe * ( MUC - RMSe ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( ( MLU - CS ) - ( RRSe * MUR ) ) ) ),Max( ( Min( RMSe ,MUC ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( CS - MUR ) ) ) ) ) )", "obj1": 0.0912863070539419, "obj2": 0.8246594395967759}, {"determining": "Min( ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ,Min( ( FirstVNF_RAM_Server / MRS ) ,DDR ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( ( Max( ( MUR / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( RRSe ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.1016597510373444, "obj2": 0.8231952771681966}, {"determining": "Min( ( ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,( FirstVNF_Mem * DDR ) )", "choosing": "( Max( MLU,RRSe ) * Max( ( CS * ( MUC - RMSe ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.10580912863070539, "obj2": 0.8072431827662205}, {"determining": "( ( AMS + ( FirstVNF_Mem_Server + ( FirstVNF_CPU + AMS ) ) ) * Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( Max( MLU,RRSe ) * Max( ( RMSe * ( MUC - RMSe ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.10580912863070539, "obj2": 0.8072431827662205}, {"determining": "( ( FirstVNF_RAM_Server / ( AMS / DDR ) ) + Min( CRS ,DDR ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( ( Max( ( MUR / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + RRSe ) ) * Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.1016597510373444, "obj2": 0.8231952771681966}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( ( Max( ( MUR / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( RRSe ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.1016597510373444, "obj2": 0.8231952771681966}, {"determining": "Min( ( ( RRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( ACS / DDR ) ) ,FirstVNF_RAM_Server )", "choosing": "( Max( MLU,RMSe ) * Max( ( RMSe * ( MUC - RMSe ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( RMSe + MUM ) + ( ( MLU - CS ) - ( RRSe * MUR ) ) ) ),Max( ( Min( RMSe ,MUC ) + ( CS / DS ) ),Min( ( RCSe - RCSe ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.0912863070539419, "obj2": 0.8246594395967759}, {"determining": "( ( ( ( ( FirstVNF_RAM + FirstVNF_CPU ) * Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( Max( ( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) + Max( FirstVNF_Mem,FirstVNF_RAM ) ) - Min( ( RRS * FirstVNF_RAM ) ,( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) ),Min( Min( ( Const + MDR ) ,( DDR * MDR ) ) ,( ( MDR / FirstVNF_CPU ) / ( MDR - FirstVNF_Mem_Server ) ) ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) ) + Min( CRS ,DDR ) )", "choosing": "( Max( MLU,RMSe ) * Max( DS,Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.1016597510373444, "obj2": 0.8231952771681966}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_CPU ) * Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( Max( ( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) + Max( FirstVNF_Mem,FirstVNF_RAM ) ) - Min( ( RRS * FirstVNF_RAM ) ,( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) ),Min( Min( ( Const + MDR ) ,Min( DDR ,MDR ) ) ,( ( MDR / FirstVNF_CPU ) / ( MDR - FirstVNF_Mem_Server ) ) ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( ( Max( ( MUR / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( MUM - RRSe ) - Min( MUR ,RRSe ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.1016597510373444, "obj2": 0.8231952771681966}, {"determining": "( ( AMS / DDR ) + Min( CRS ,DDR ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( ( Max( ( MUR / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( MUR / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.1016597510373444, "obj2": 0.8231952771681966}, {"determining": "( Max( DDR,( FirstVNF_Mem_Server + ( FirstVNF_CPU + AMS ) ) ) / Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( ( Max( ( MUR / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) + Min( MUR ,RRSe ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.1016597510373444, "obj2": 0.8231952771681966}, {"determining": "( ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + FirstVNF_RAM )", "choosing": "( Max( ( Max( DS,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) ),MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.16390041493775934, "obj2": 0.6550414370587921}, {"determining": "( Min( FirstVNF_RAM_Server ,MRS ) + FirstVNF_RAM )", "choosing": "( Max( ( ( Max( MLU,( ( MLU - CS ) - ( RRSe * RMSe ) ) ) * ( RRSe - CS ) ) - ( RMSe + CS ) ),MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.16390041493775934, "obj2": 0.6550414370587921}, {"determining": "( ( AMS + ( ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) - Max( Max( FirstVNF_CPU,FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) * Max( ( MDR + FirstVNF_RAM_Server ),CRS ) ) ) * Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( ( Max( ( MUR / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + RRSe ) ) * Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.1016597510373444, "obj2": 0.8231952771681966}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + ( Max( BR,BR ) + ( ARS - CRS ) ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( RMSe * ( MUC - RMSe ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( ( MLU - CS ) - ( RRSe * MUR ) ) ) ),Max( ( Min( RMSe ,MUC ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.1037344398340249, "obj2": 0.8168396840817189}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,PN ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( ( Max( ( MUR - MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.1016597510373444, "obj2": 0.8231952771681966}, {"determining": "( ( ARS - CRS ) + Min( CRS ,DDR ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( ( Max( ( MUR / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + RRSe ) ) * Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ) ),Max( Min( RRSe ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.1016597510373444, "obj2": 0.8231952771681966}, {"determining": "( Min( CRS ,DDR ) + Max( ( BR / BR ),( ARS - CRS ) ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( ( Max( ( MUR / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( ( Max( ( MUR / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + RRSe ) ) ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / RCSe ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.1016597510373444, "obj2": 0.8231952771681966}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Max( Max( BR,BR ),( ARS - CRS ) ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( ( Max( ( MUR / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + RRSe ) ) * Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.1016597510373444, "obj2": 0.8231952771681966}, {"determining": "( ( FirstVNF_RAM_Server / ( AMS / DDR ) ) + Min( CRS ,DDR ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( ( Max( ( MUR / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( RRSe ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.1016597510373444, "obj2": 0.8231952771681966}, {"determining": "( ( AMS + ( FirstVNF_Mem_Server + ( FirstVNF_CPU + AMS ) ) ) * Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( ( Max( ( MUR / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,( RMSe + RMSe ) ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.1016597510373444, "obj2": 0.8231952771681966}, {"determining": "Min( ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ,Min( ( FirstVNF_RAM_Server / MRS ) ,DDR ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( RMSe * ( MUC - RMSe ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.1016597510373444, "obj2": 0.8231952771681966}, {"determining": "Min( ( ( MDR * ( ( DDR + ( FirstVNF_Mem_Server + ( FirstVNF_CPU + AMS ) ) ) / Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( MLU,RRSe ) * Max( ( ( Min( RMSe ,CS ) + ( CS / DS ) ) * ( MUC - RMSe ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.10580912863070539, "obj2": 0.8072431827662205}, {"determining": "( ( DDR + ( ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( FirstVNF_CPU + AMS ) ) ) / Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( ( Max( ( ( CS + DS ) / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ) ),Max( ( Min( ( ( MLU - MUM ) / Max( Max( RRSe,MUR ),( RMSe + RMSe ) ) ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.1016597510373444, "obj2": 0.8231952771681966}, {"determining": "Min( ( ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( MLU,RRSe ) * Max( ( RMSe * ( MUC - RMSe ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.10580912863070539, "obj2": 0.8072431827662205}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,FirstVNF_RAM ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( ( Max( ( MUR / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.1016597510373444, "obj2": 0.8231952771681966}, {"determining": "( ( FirstVNF_RAM_Server / ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( RRSe * DS ),RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "( ( FirstVNF_RAM_Server / BR ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( MUR,RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "Min( ( ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,( FirstVNF_CPU + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) - Max( Max( FirstVNF_CPU,FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,ACS ) ) ) ) )", "choosing": "( Max( MLU,RRSe ) * Max( ( RMSe * ( ( MLU - CS ) - ( MLU * Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUC ) ) ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.10580912863070539, "obj2": 0.8072431827662205}, {"determining": "Min( ( ( DDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( ACS / DDR ) ) ,FirstVNF_RAM_Server )", "choosing": "( Max( MLU,RMSe ) * Max( ( RMSe * ( MUC - RMSe ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( ( MLU - CS ) - ( RRSe * MUR ) ) ) ),Max( ( Min( RMSe ,MUC ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.1037344398340249, "obj2": 0.8168396840817189}, {"determining": "Min( ( ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,( ( FirstVNF_RAM_Server / MRS ) * ( CRS - DDR ) ) )", "choosing": "( Max( ( Min( RCSe ,MUM ) - RCSe ),MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.16390041493775934, "obj2": 0.6550414370587921}, {"determining": "Min( ( ( MDR * Max( FirstVNF_CPU,FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( ( Max( Min( RCSe ,MUM ),MUM ) - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "Min( ( ( MDR * ( ( ( ( MDR * MDR ) + DDR ) * RRS ) - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( ( Min( Max( Min( Max( CS,RCSe ) ,( RCSe / MUR ) ),Max( Min( RCSe ,MLU ),( MUR + RCSe ) ) ) ,( Max( ( MUR + RCSe ),( RMSe + RMSe ) ) * ( ( MUM / MUM ) - ( RRSe - MUR ) ) ) ) + Min( ( ( ( DS - RRSe ) - Min( MUR ,RCSe ) ) + ( ( MUR + DS ) / Max( RCSe,MUC ) ) ) ,( ( Min( MUM ,RRSe ) + Max( MLU,RRSe ) ) * ( ( RRSe * DS ) * ( DS - CS ) ) ) ) ),RRSe ) * Max( ( RMSe * ( MUC - RMSe ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) - ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.1078838174273859, "obj2": 0.7986410641480678}, {"determining": "Min( ( ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( Min( ( ( ( ( ( MLU * MUC ) * ( DS - RCSe ) ) + ( Min( MUC ,MLU ) + Max( RCSe,CS ) ) ) + ( ( ( RCSe - MLU ) - ( RCSe / MUM ) ) * Max( ( RMSe * MUM ),( MUM + MLU ) ) ) ) / Min( Min( ( ( RCSe * MUR ) + Min( MLU ,RMSe ) ) ,( ( RRSe / CS ) - ( MUR * RCSe ) ) ) ,( ( ( MUC + CS ) / ( CS / MUC ) ) / Min( Max( MUM,MUC ) ,( DS * MUR ) ) ) ) ) ,( Min( Max( Min( Max( CS,RCSe ) ,( RCSe / MUR ) ),Max( Min( RCSe ,MLU ),( MUR + RCSe ) ) ) ,( Max( ( MUR + RCSe ),( RMSe + RMSe ) ) * ( ( MUM / MUM ) - ( RRSe - MUR ) ) ) ) + Min( ( ( ( DS - RRSe ) - Min( MUR ,RCSe ) ) + ( ( MUR + DS ) / Max( RCSe,MUC ) ) ) ,( ( Min( MUM ,RRSe ) + Max( MLU,RRSe ) ) * ( ( RRSe * DS ) * ( DS - CS ) ) ) ) ) ),( Max( Max( ( Max( ( DS - DS ),Min( MUC ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ),( ( Min( MUM ,RMSe ) / ( RMSe - DS ) ) + ( Max( CS,RRSe ) * Max( RCSe,MUM ) ) ) ),( Min( ( ( MUM * DS ) / ( MLU / MLU ) ) ,( ( MUM / CS ) / ( CS - RRSe ) ) ) - ( Min( ( MLU + RMSe ) ,Max( RMSe,MLU ) ) / ( ( MUM / MUR ) + Min( MLU ,CS ) ) ) ) ) * ( ( Min( Min( Min( RRSe ,MUM ) ,( CS * MUM ) ) ,( Max( RMSe,DS ) - Min( MUC ,MUC ) ) ) * ( ( ( DS * MUC ) / ( DS + CS ) ) / ( ( DS / RCSe ) + ( MUM / MUR ) ) ) ) + ( ( Max( ( CS * MUR ),( MLU - DS ) ) * Max( Max( CS,RMSe ),Min( RRSe ,MLU ) ) ) / Max( Max( Min( RMSe ,CS ),( MUC * RCSe ) ),Min( Min( MUC ,MLU ) ,Min( RMSe ,MUC ) ) ) ) ) ) ) - ( Max( Max( Min( Max( ( ( DS * CS ) / ( CS - MUM ) ),( ( MLU / MUM ) * ( CS + DS ) ) ) ,( ( Max( RCSe,RMSe ) / ( CS - CS ) ) - ( ( RCSe - CS ) / Max( RRSe,RMSe ) ) ) ),Max( ( ( ( CS * MUM ) + ( DS * RRSe ) ) / ( Min( MUR ,CS ) / ( MUR + MUC ) ) ),( Max( Min( MUR ,DS ),Max( MUR,MUC ) ) - Max( ( MUM + MLU ),( MLU / CS ) ) ) ) ),( Min( Max( ( ( MUR + RRSe ) * ( RCSe - RMSe ) ),( Min( RMSe ,MLU ) * Min( MUC ,RMSe ) ) ) ,Max( ( ( DS / RRSe ) * ( CS - DS ) ),( Min( MUM ,MUR ) + ( MUM - CS ) ) ) ) + ( ( ( ( MUC * MUR ) + ( RRSe - RMSe ) ) * Min( ( RCSe / MUC ) ,( RMSe - MUC ) ) ) - ( ( ( MUM + RCSe ) + Max( MUC,RCSe ) ) + Max( ( RMSe - RMSe ),( MUM - MUR ) ) ) ) ) ) - ( ( ( ( ( ( DS - RCSe ) + ( MLU * MUM ) ) * ( Max( CS,MUM ) - ( MUR - MLU ) ) ) - ( Max( ( MUR / MUC ),Max( RRSe,MUM ) ) - ( Min( RMSe ,MLU ) * Max( MUC,DS ) ) ) ) + Min( ( ( Max( MUC,MLU ) + ( RMSe + MUM ) ) / ( Max( CS,MLU ) * Max( MUM,CS ) ) ) ,Max( ( ( MLU - MLU ) / ( DS / MUM ) ),Max( Min( MUC ,MUM ),Min( CS ,CS ) ) ) ) ) - ( Min( ( Max( Max( RCSe,DS ),Max( MLU,MUM ) ) + ( Min( MUR ,MLU ) * ( RCSe + RRSe ) ) ) ,Min( Min( ( DS - DS ) ,( MUR - MUR ) ) ,( ( RRSe * RRSe ) / Max( CS,RMSe ) ) ) ) - ( Min( ( ( RMSe - RMSe ) / ( RRSe + RRSe ) ) ,Min( Min( DS ,MLU ) ,Min( DS ,RMSe ) ) ) + Max( ( Min( RRSe ,MLU ) + Min( CS ,RMSe ) ),( ( RRSe * RCSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.77174485616461}, {"determining": "( ( AMS + ( FirstVNF_Mem_Server + MDR ) ) * Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( Max( MLU,RRSe ) * Max( ( RMSe * ( MUC - RMSe ) ),( ( MLU - CS ) - ( RRSe * DS ) ) ) )", "obj1": 0.15145228215767634, "obj2": 0.6764790825391633}, {"determining": "( ( AMS + ( FirstVNF_Mem_Server + ( FirstVNF_CPU + AMS ) ) ) * Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( Max( MLU,RRSe ) * Max( ( RMSe * ( MUC - RMSe ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.10580912863070539, "obj2": 0.8072431827662205}, {"determining": "( ( ( DDR + ( FirstVNF_Mem_Server + ( FirstVNF_CPU + AMS ) ) ) / ( AMS / DDR ) ) + Min( CRS ,DDR ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( ( Max( ( MUR / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + RRSe ) ) * Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.1016597510373444, "obj2": 0.8231952771681966}, {"determining": "( ( FirstVNF_RAM_Server / ( AMS / DDR ) ) + Min( CRS ,DDR ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( RMSe * ( MUC - RMSe ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.1016597510373444, "obj2": 0.8231952771681966}, {"determining": "Min( ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ,Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( ( Max( ( MUR / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( RRSe ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.1016597510373444, "obj2": 0.8231952771681966}, {"determining": "( ( AMS + ( FirstVNF_Mem_Server + ( FirstVNF_CPU + AMS ) ) ) * Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( ( Max( ( MUR / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,( RMSe + RMSe ) ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.1016597510373444, "obj2": 0.8231952771681966}, {"determining": "( ( DDR + ( FirstVNF_Mem_Server + ( FirstVNF_CPU + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) / Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( ( Max( ( MUR / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,( RMSe + RMSe ) ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS + MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.1016597510373444, "obj2": 0.8231952771681966}], "10": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_CPU ) * Min( Min( FirstVNF_Mem_Server ,BR ) ,Min( FirstVNF_RAM ,RRS ) ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( Max( ( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) + Max( FirstVNF_Mem,FirstVNF_RAM ) ) - Min( ( ACS * FirstVNF_RAM ) ,( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) ),Min( Min( ( Const + MDR ) ,( FirstVNF_RAM * MDR ) ) ,( ( MDR / FirstVNF_CPU ) / ( MDR - FirstVNF_Mem_Server ) ) ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( Max( MLU,Min( ( RCSe - CS ) ,( RRSe * RMSe ) ) ) * ( DS - CS ) ) - ( RMSe + RMSe ) )", "obj1": 0.13692946058091288, "obj2": 0.6979040733699632}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "( ( DDR / MRS ) + Max( Max( BR,BR ),( ARS - CRS ) ) )", "choosing": "( ( MUR + DS ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.15560165975103735, "obj2": 0.6655553653853454}, {"determining": "( Max( FirstVNF_RAM_Server,MRS ) + AMS )", "choosing": "( Max( ( ( Max( MLU,( ( RMSe - CS ) - ( RRSe * RMSe ) ) ) * ( RRSe - RCSe ) ) - ( RMSe + RMSe ) ),RMSe ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.16390041493775934, "obj2": 0.6550414370587921}, {"determining": "( ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + FirstVNF_RAM )", "choosing": "( Max( ( Max( DS,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) ),MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.16390041493775934, "obj2": 0.6550414370587921}, {"determining": "( Min( FirstVNF_RAM_Server ,MRS ) + FirstVNF_RAM )", "choosing": "( Max( ( ( Max( MLU,( ( MLU - CS ) - ( RRSe * RMSe ) ) ) * ( RRSe - CS ) ) - ( RMSe + CS ) ),MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.16390041493775934, "obj2": 0.6550414370587921}, {"determining": "( ( FirstVNF_RAM_Server / ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( RRSe * DS ),RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "( ( FirstVNF_RAM_Server / BR ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( MUR,RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "Min( ( ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,( ( FirstVNF_RAM_Server / MRS ) * ( CRS - DDR ) ) )", "choosing": "( Max( ( Min( RCSe ,MUM ) - RCSe ),MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.16390041493775934, "obj2": 0.6550414370587921}, {"determining": "Min( ( ( MDR * Max( FirstVNF_CPU,FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( ( Max( Min( RCSe ,MUM ),MUM ) - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "Min( ( ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( Min( ( ( ( ( ( MLU * MUC ) * ( DS - RCSe ) ) + ( Min( MUC ,MLU ) + Max( RCSe,CS ) ) ) + ( ( ( RCSe - MLU ) - ( RCSe / MUM ) ) * Max( ( RMSe * MUM ),( MUM + MLU ) ) ) ) / Min( Min( ( ( RCSe * MUR ) + Min( MLU ,RMSe ) ) ,( ( RRSe / CS ) - ( MUR * RCSe ) ) ) ,( ( ( MUC + CS ) / ( CS / MUC ) ) / Min( Max( MUM,MUC ) ,( DS * MUR ) ) ) ) ) ,( Min( Max( Min( Max( CS,RCSe ) ,( RCSe / MUR ) ),Max( Min( RCSe ,MLU ),( MUR + RCSe ) ) ) ,( Max( ( MUR + RCSe ),( RMSe + RMSe ) ) * ( ( MUM / MUM ) - ( RRSe - MUR ) ) ) ) + Min( ( ( ( DS - RRSe ) - Min( MUR ,RCSe ) ) + ( ( MUR + DS ) / Max( RCSe,MUC ) ) ) ,( ( Min( MUM ,RRSe ) + Max( MLU,RRSe ) ) * ( ( RRSe * DS ) * ( DS - CS ) ) ) ) ) ),( Max( Max( ( Max( ( DS - DS ),Min( MUC ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ),( ( Min( MUM ,RMSe ) / ( RMSe - DS ) ) + ( Max( CS,RRSe ) * Max( RCSe,MUM ) ) ) ),( Min( ( ( MUM * DS ) / ( MLU / MLU ) ) ,( ( MUM / CS ) / ( CS - RRSe ) ) ) - ( Min( ( MLU + RMSe ) ,Max( RMSe,MLU ) ) / ( ( MUM / MUR ) + Min( MLU ,CS ) ) ) ) ) * ( ( Min( Min( Min( RRSe ,MUM ) ,( CS * MUM ) ) ,( Max( RMSe,DS ) - Min( MUC ,MUC ) ) ) * ( ( ( DS * MUC ) / ( DS + CS ) ) / ( ( DS / RCSe ) + ( MUM / MUR ) ) ) ) + ( ( Max( ( CS * MUR ),( MLU - DS ) ) * Max( Max( CS,RMSe ),Min( RRSe ,MLU ) ) ) / Max( Max( Min( RMSe ,CS ),( MUC * RCSe ) ),Min( Min( MUC ,MLU ) ,Min( RMSe ,MUC ) ) ) ) ) ) ) - ( Max( Max( Min( Max( ( ( DS * CS ) / ( CS - MUM ) ),( ( MLU / MUM ) * ( CS + DS ) ) ) ,( ( Max( RCSe,RMSe ) / ( CS - CS ) ) - ( ( RCSe - CS ) / Max( RRSe,RMSe ) ) ) ),Max( ( ( ( CS * MUM ) + ( DS * RRSe ) ) / ( Min( MUR ,CS ) / ( MUR + MUC ) ) ),( Max( Min( MUR ,DS ),Max( MUR,MUC ) ) - Max( ( MUM + MLU ),( MLU / CS ) ) ) ) ),( Min( Max( ( ( MUR + RRSe ) * ( RCSe - RMSe ) ),( Min( RMSe ,MLU ) * Min( MUC ,RMSe ) ) ) ,Max( ( ( DS / RRSe ) * ( CS - DS ) ),( Min( MUM ,MUR ) + ( MUM - CS ) ) ) ) + ( ( ( ( MUC * MUR ) + ( RRSe - RMSe ) ) * Min( ( RCSe / MUC ) ,( RMSe - MUC ) ) ) - ( ( ( MUM + RCSe ) + Max( MUC,RCSe ) ) + Max( ( RMSe - RMSe ),( MUM - MUR ) ) ) ) ) ) - ( ( ( ( ( ( DS - RCSe ) + ( MLU * MUM ) ) * ( Max( CS,MUM ) - ( MUR - MLU ) ) ) - ( Max( ( MUR / MUC ),Max( RRSe,MUM ) ) - ( Min( RMSe ,MLU ) * Max( MUC,DS ) ) ) ) + Min( ( ( Max( MUC,MLU ) + ( RMSe + MUM ) ) / ( Max( CS,MLU ) * Max( MUM,CS ) ) ) ,Max( ( ( MLU - MLU ) / ( DS / MUM ) ),Max( Min( MUC ,MUM ),Min( CS ,CS ) ) ) ) ) - ( Min( ( Max( Max( RCSe,DS ),Max( MLU,MUM ) ) + ( Min( MUR ,MLU ) * ( RCSe + RRSe ) ) ) ,Min( Min( ( DS - DS ) ,( MUR - MUR ) ) ,( ( RRSe * RRSe ) / Max( CS,RMSe ) ) ) ) - ( Min( ( ( RMSe - RMSe ) / ( RRSe + RRSe ) ) ,Min( Min( DS ,MLU ) ,Min( DS ,RMSe ) ) ) + Max( ( Min( RRSe ,MLU ) + Min( CS ,RMSe ) ),( ( RRSe * RCSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.77174485616461}, {"determining": "( ( AMS + ( FirstVNF_Mem_Server + MDR ) ) * Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( Max( MLU,RRSe ) * Max( ( RMSe * ( MUC - RMSe ) ),( ( MLU - CS ) - ( RRSe * DS ) ) ) )", "obj1": 0.15145228215767634, "obj2": 0.6764790825391633}, {"determining": "( ( FirstVNF_RAM_Server / ( ( DDR * FirstVNF_CPU ) + ( CRS / DDR ) ) ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( Min( RMSe ,CS ) * DS ),RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( RRSe * DS ),RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "( ( DDR + ( FirstVNF_Mem_Server + ( ( ARS - CRS ) + Min( CRS ,DDR ) ) ) ) / Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( ( Max( ( MUR / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ) ),( ( Max( ( MUR / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + RRSe ) ) * Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ) ) ) )", "obj1": 0.14937759336099585, "obj2": 0.679887813746079}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - FirstVNF_RAM )", "choosing": "Max( ( MLU / RMSe ),MUC )", "obj1": 0.3381742738589212, "obj2": 0.5537881610154833}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( ( Max( ( MUR / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,( RMSe + RMSe ) ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,RMSe ) * ( Max( ( DS - DS ),Min( MUC ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ) )", "obj1": 0.1037344398340249, "obj2": 0.7738272717865934}, {"determining": "Min( ( ( MDR * Min( FirstVNF_CPU ,FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( Min( ( ( ( ( ( MLU * MUC ) * ( DS - RCSe ) ) + ( Min( MUC ,MLU ) + Max( RCSe,CS ) ) ) + ( ( ( RCSe - MLU ) - ( RCSe / MUM ) ) * Max( ( RMSe * MUM ),( MUM + MLU ) ) ) ) / Min( Min( ( ( RCSe * MUR ) + Min( MLU ,RMSe ) ) ,( ( RRSe / CS ) - ( MUR * RCSe ) ) ) ,( ( ( MUC + CS ) / ( CS / MUC ) ) / Min( Max( MUM,MUC ) ,( DS * MUR ) ) ) ) ) ,( Min( Max( Min( Max( CS,RCSe ) ,( RCSe / MUR ) ),Max( Min( RCSe ,MLU ),( MUR + RCSe ) ) ) ,( Max( ( MUR + RCSe ),( RMSe + RMSe ) ) * ( ( MUM / MUM ) - ( RRSe - MUR ) ) ) ) + Min( ( ( ( DS - RRSe ) - Min( MUR ,RCSe ) ) + ( ( MUR + DS ) / Max( RCSe,MUC ) ) ) ,( ( Min( MUM ,RRSe ) + Max( MLU,RRSe ) ) * ( ( RRSe * DS ) * ( DS - CS ) ) ) ) ) ),( Max( Max( ( Max( ( DS - DS ),Min( MUC ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ),( ( Min( MUM ,RMSe ) / ( RMSe - DS ) ) + ( Max( CS,RRSe ) * Max( RCSe,MUM ) ) ) ),( Min( ( ( MUM * DS ) / ( MLU / MLU ) ) ,( ( MUM / CS ) / ( CS - RRSe ) ) ) - ( Min( ( MLU + RMSe ) ,Max( RMSe,MLU ) ) / ( ( MUM / MUR ) + Min( MLU ,CS ) ) ) ) ) * ( ( Min( Min( Min( RRSe ,MUM ) ,( CS * MUM ) ) ,( Max( RMSe,DS ) - Min( MUC ,MUC ) ) ) * ( ( ( DS * MUC ) / ( DS + CS ) ) / ( ( DS / RCSe ) + ( MUM / MUR ) ) ) ) + ( ( Max( ( CS * MUR ),( MLU - DS ) ) * Max( Max( CS,RMSe ),Min( RRSe ,MLU ) ) ) / Max( Max( Min( RMSe ,CS ),( MUC * RCSe ) ),Min( Min( MUC ,MLU ) ,Min( RMSe ,MUC ) ) ) ) ) ) ) - ( Max( Max( Min( Max( ( ( DS * CS ) / ( CS - MUM ) ),( ( MLU / MUM ) * ( CS + DS ) ) ) ,( ( Max( RCSe,RMSe ) / ( CS - CS ) ) - ( ( RCSe - CS ) / Max( RRSe,RMSe ) ) ) ),Max( ( ( ( CS * MUM ) + ( DS * RRSe ) ) / ( Min( MUR ,CS ) / ( MUR + MUC ) ) ),( Max( Min( MUR ,DS ),Max( MUR,MUC ) ) - Max( ( MUM + MLU ),( MLU / CS ) ) ) ) ),( Min( Max( ( ( MUR + RRSe ) * ( RCSe - RMSe ) ),( Min( RMSe ,MLU ) * Min( MUC ,RMSe ) ) ) ,Max( ( ( DS / RRSe ) * ( CS - DS ) ),( Min( MUM ,MUR ) + ( MUM - CS ) ) ) ) + ( ( ( ( MUC * MUR ) + ( RRSe - RMSe ) ) * Min( ( RCSe / MUC ) ,( RMSe - MUC ) ) ) - ( ( ( MUM + RCSe ) + Max( MUC,RCSe ) ) + Max( ( RMSe - RMSe ),( MUM - MUR ) ) ) ) ) ) - ( ( ( ( ( ( DS - RCSe ) + ( MLU * MUM ) ) * ( Max( CS,MUM ) - ( MUR - MLU ) ) ) - ( Max( ( MUR / MUC ),Max( RRSe,MUM ) ) - ( Min( RMSe ,MLU ) * ( MUC * DS ) ) ) ) + Min( ( ( Max( MUC,MLU ) + ( RMSe + MUM ) ) / ( Max( CS,MLU ) * Max( MUM,CS ) ) ) ,Max( ( ( MLU - MLU ) / ( DS / MUM ) ),Max( Min( MUC ,MUM ),Min( CS ,CS ) ) ) ) ) - ( Min( ( Max( Max( RCSe,DS ),Max( MLU,MUM ) ) + ( Min( MUR ,MLU ) * ( RCSe + RRSe ) ) ) ,Min( Min( ( DS - DS ) ,( MUR - MUR ) ) ,( ( RRSe * RRSe ) / Max( CS,RMSe ) ) ) ) - ( Min( ( ( RMSe - RMSe ) / ( RRSe + RRSe ) ) ,Min( Min( DS ,MLU ) ,Min( DS ,RMSe ) ) ) + Max( ( Min( RRSe ,MLU ) + Min( CS ,RMSe ) ),( ( RRSe * RCSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.77174485616461}, {"determining": "( ( FirstVNF_CPU / MRS ) + Max( Max( BR,BR ),( ARS - CRS ) ) )", "choosing": "( ( MUR + DS ) * ( ( ( ( DS - RRSe ) - Min( MUR ,( RMSe + RMSe ) ) ) - CS ) - ( RRSe * DS ) ) )", "obj1": 0.1887966804979253, "obj2": 0.6331824071360623}, {"determining": "( ( DDR / MRS ) + Max( Max( BR,BR ),( ARS - CRS ) ) )", "choosing": "( ( MUR + DS ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.15560165975103735, "obj2": 0.6655553653853454}, {"determining": "Min( ( ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,( ( FirstVNF_RAM_Server / MRS ) * ( CRS - DDR ) ) )", "choosing": "( Max( ( Min( RCSe ,MUM ) - RCSe ),MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + ( FirstVNF_RAM_Server / ( AMS / DDR ) ) )", "choosing": "( Max( ( ( Max( MLU,( ( MUM + MUM ) - ( RRSe * RMSe ) ) ) * ( RRSe - CS ) ) - ( RMSe + RMSe ) ),MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.16390041493775934, "obj2": 0.6550414370587921}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + FirstVNF_Mem_Server )", "choosing": "( Max( ( ( Max( MLU,( ( RMSe - CS ) - ( RRSe * RMSe ) ) ) * ( RRSe - CS ) ) - ( RMSe + RMSe ) ),MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.16390041493775934, "obj2": 0.6550414370587921}, {"determining": "( ( ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) / DDR ) + Min( CRS ,DDR ) )", "choosing": "( Max( MLU,RMSe ) * Max( ( ( Max( ( MUR / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( MUR / MUR ) ) ),Max( ( Min( RMSe ,CS ) + Min( RMSe ,CS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.533195020746888, "obj2": 0.4632462517165369}, {"determining": "Min( Max( FirstVNF_CPU,FirstVNF_RAM ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( MLU,RRSe ) * Max( ( RMSe * ( MUC - RMSe ) ),( ( MLU - CS ) - ( RRSe * DS ) ) ) )", "obj1": 0.15145228215767634, "obj2": 0.6764790825391633}, {"determining": "Min( ( ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( MLU,RRSe ) * Max( ( RMSe * ( MUC - RMSe ) ),( ( MLU - CS ) - ( RRSe * DS ) ) ) )", "obj1": 0.15145228215767634, "obj2": 0.6764790825391633}, {"determining": "Min( ( Max( MDR,( FirstVNF_CPU - FirstVNF_RAM ) ) + Max( Max( BR,BR ),( ARS - CRS ) ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - DS ) - RRSe ) - Max( Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ),RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "Min( ( ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "( ( FirstVNF_RAM_Server / ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( RRSe * DS ),RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "Min( ( ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( ( ( FirstVNF_RAM + FirstVNF_CPU ) * Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( MLU,RRSe ) * Max( ( RMSe * ( MUC - RMSe ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( Max( ( MUR / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.43983402489626555, "obj2": 0.5308053907049676}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_CPU ) * Min( Min( FirstVNF_Mem_Server ,BR ) ,Min( FirstVNF_RAM ,RRS ) ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( Max( ( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) + Max( FirstVNF_Mem,FirstVNF_RAM ) ) - Min( ( ACS * FirstVNF_RAM ) ,( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) ),Min( Min( ( Const + MDR ) ,( DDR * MDR ) ) ,( ( MDR / FirstVNF_CPU ) / ( MDR - FirstVNF_Mem_Server ) ) ) ) + Min( RRS ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( MUM - CS ) - ( RMSe + RMSe ) )", "obj1": 0.24273858921161826, "obj2": 0.6041885636855628}, {"determining": "Min( ( ( RRS * ( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) + Max( FirstVNF_Mem,FirstVNF_RAM ) ) - Min( ( ACS * FirstVNF_RAM ) ,( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) ) ) + ( ACS / DDR ) ) ,FirstVNF_RAM_Server )", "choosing": "( Max( MLU,RMSe ) * Max( ( RMSe * ( MUC - RMSe ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / Max( MLU,( ( RCSe - CS ) - ( RRSe * RMSe ) ) ) ),Max( ( Min( RMSe ,MUC ) + ( CS / DS ) ),Min( ( RCSe - RCSe ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.1016597510373444, "obj2": 0.8160706010563711}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) * Min( CRS ,( MDR * ( Min( ( ( MDR * MDR ) + DDR ) ,RRS ) - FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( DS,Max( Min( Max( CS,RCSe ) ,( RCSe / DS ) ),Max( Min( RCSe ,MLU ),( MUR + RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) * Min( CRS ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - MLU ) - Max( DS,RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_CPU ) * Min( Min( FirstVNF_Mem_Server ,BR ) ,Min( FirstVNF_RAM ,RRS ) ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( Max( ( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) + Max( FirstVNF_Mem,FirstVNF_RAM ) ) - Min( ( ACS * FirstVNF_RAM ) ,( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) ),Min( Min( ( Const + MDR ) ,( DDR * MDR ) ) ,( ( MDR / ( FirstVNF_CPU + AMS ) ) / ( MDR - FirstVNF_Mem_Server ) ) ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( Max( MLU,( ( RCSe - CS ) - ( RRSe * ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ) ) ) ) * ( DS - CS ) ) - ( RMSe + RMSe ) )", "obj1": 0.26141078838174275, "obj2": 0.5959913003126986}, {"determining": "Min( ( ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( RRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( MLU,RRSe ) * Max( ( RMSe * ( MUC - RMSe ) ),Max( ( Min( Max( ( Min( RMSe ,MUC ) + ( CS / DS ) ),Min( ( RCSe - RCSe ) ,( MLU - MUR ) ) ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.43983402489626555, "obj2": 0.5308053907049676}, {"determining": "Min( ( ( MDR * ( ( ( FirstVNF_RAM_Server / MRS ) + FirstVNF_Mem_Server ) - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,( FirstVNF_Mem * DDR ) )", "choosing": "( Max( MLU,RRSe ) * Max( ( CS * ( MUC - RMSe ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( RMSe - CS ) - ( RRSe * RMSe ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.0912863070539419, "obj2": 0.8246110093112531}, {"determining": "( ( FirstVNF_CPU / MRS ) + ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) )", "choosing": "( ( ( ( Max( MLU,MUR ) * ( RRSe - CS ) ) - ( RMSe + RMSe ) ) * MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.16390041493775934, "obj2": 0.6550414370587921}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + FirstVNF_Mem_Server )", "choosing": "( Max( ( ( Max( MLU,( ( RMSe - CS ) - ( RRSe * RMSe ) ) ) * ( RRSe - CS ) ) - ( RMSe + RMSe ) ),MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.16390041493775934, "obj2": 0.6550414370587921}, {"determining": "Min( ( ( MDR * ( ( FirstVNF_RAM_Server / MRS ) - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( Min( ( ( ( ( ( MLU * MUC ) * ( DS - RCSe ) ) + ( Min( MUC ,MLU ) + Max( RCSe,CS ) ) ) + ( ( ( RCSe - MLU ) - ( RCSe / MUM ) ) * Max( ( RMSe * MUM ),( MUM + MLU ) ) ) ) / Min( Min( ( ( RCSe * MUR ) + Min( MLU ,RMSe ) ) ,( ( RRSe / CS ) - ( MUR * RCSe ) ) ) ,( ( ( MUC + CS ) / ( CS / MUC ) ) / Min( Max( MUM,MUC ) ,( DS * MUR ) ) ) ) ) ,( Min( Max( Min( Max( CS,RCSe ) ,( RCSe / MUR ) ),Max( Min( RCSe ,MLU ),( MUR + RCSe ) ) ) ,( Max( ( MUR + RCSe ),( RMSe + RMSe ) ) * ( ( MUM / MUM ) - ( RRSe - MUR ) ) ) ) + Min( ( ( ( DS - RRSe ) - Min( MUR ,RCSe ) ) + ( ( MUR + DS ) / Max( RCSe,MUC ) ) ) ,( ( Min( MUM ,RRSe ) + Max( MLU,RRSe ) ) * ( ( RRSe * DS ) * ( DS - CS ) ) ) ) ) ),( Max( Max( ( Max( ( DS - DS ),Min( MUC ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ),( ( Min( MUM ,RMSe ) / ( RMSe - DS ) ) + ( Max( CS,RRSe ) * Max( RCSe,MUM ) ) ) ),( Min( ( ( MUM * DS ) / ( MLU / MLU ) ) ,( ( MUM / CS ) / ( CS - RRSe ) ) ) - ( Min( ( MLU + RMSe ) ,Max( RMSe,MLU ) ) / ( ( MUM / MUR ) + Min( MLU ,CS ) ) ) ) ) * ( ( Min( Min( Min( RRSe ,MUM ) ,( CS * MUM ) ) ,( Max( RMSe,DS ) - Min( MUC ,MUC ) ) ) * ( ( ( DS * MUC ) / ( DS + CS ) ) / ( ( DS / RCSe ) + ( MUM / MUR ) ) ) ) + ( ( Max( ( CS * MUR ),( MLU - DS ) ) * Max( Max( CS,RMSe ),Min( RRSe ,MLU ) ) ) / Max( Max( Min( RMSe ,CS ),( MUC * RCSe ) ),Min( Min( MUC ,MLU ) ,Min( RMSe ,MUC ) ) ) ) ) ) ) - ( Max( Max( Min( Max( ( ( DS * CS ) / ( CS - MUM ) ),( ( MLU / MUM ) * ( CS + DS ) ) ) ,( ( Max( RCSe,RMSe ) / ( CS - CS ) ) - ( ( RCSe - CS ) / Max( RRSe,RMSe ) ) ) ),Max( ( ( ( CS * MUM ) + ( DS * RRSe ) ) / ( Min( MUR ,CS ) / ( MUR + MUC ) ) ),( Max( Min( MUR ,DS ),Max( MUR,MUC ) ) - Max( ( MUM + MLU ),( MLU / CS ) ) ) ) ),( Min( Max( ( ( MUR + RRSe ) * ( RCSe - RMSe ) ),( Min( RMSe ,MLU ) * Min( MUC ,RMSe ) ) ) ,Max( ( ( CS / RRSe ) * ( CS - DS ) ),( Min( MUM ,MUR ) + ( MUM - CS ) ) ) ) + ( ( ( ( MUC * MUR ) + ( RRSe - RMSe ) ) * Min( ( RCSe / MUC ) ,( RMSe - MUC ) ) ) - ( ( ( MUM + RCSe ) + Max( MUC,RCSe ) ) + Max( ( RMSe - RMSe ),( MUM - MUR ) ) ) ) ) ) - ( ( ( ( ( ( DS - RCSe ) + ( MLU * MUM ) ) * ( Max( CS,MUM ) - ( MUR - MLU ) ) ) - ( Max( ( MUR / MUC ),Max( RRSe,MUM ) ) - ( Min( RMSe ,MLU ) * Max( MUC,DS ) ) ) ) + Min( ( ( Max( MUC,MLU ) + ( RMSe + MUM ) ) / ( Max( CS,MLU ) * Max( MUM,CS ) ) ) ,Max( ( ( MLU - MLU ) / ( DS / MUM ) ),Max( Min( MUC ,MUM ),Min( CS ,CS ) ) ) ) ) - ( Min( ( Max( Max( RCSe,DS ),Max( MLU,MUM ) ) + ( Min( MUR ,MLU ) * ( RCSe + RRSe ) ) ) ,Min( Min( ( DS - DS ) ,( MUR - MUR ) ) ,( ( RRSe * RRSe ) / Max( CS,RMSe ) ) ) ) - ( Min( ( ( RMSe - RMSe ) / ( RRSe + RRSe ) ) ,Min( Min( DS ,MLU ) ,Min( DS ,RMSe ) ) ) + Max( ( Min( RRSe ,MLU ) + Min( CS ,RMSe ) ),( ( RRSe * RCSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.77174485616461}, {"determining": "Min( ( ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS - DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( Min( ( ( ( ( ( MLU * MUC ) * ( DS - RCSe ) ) + ( Min( MUC ,MLU ) + Max( RCSe,CS ) ) ) + ( ( ( RCSe - MLU ) - ( RCSe / MUR ) ) * Max( ( RMSe * MUM ),( MUM + MLU ) ) ) ) / Min( Min( ( ( RCSe * MUR ) + Min( MLU ,RMSe ) ) ,( ( RRSe / CS ) - ( MUR * RCSe ) ) ) ,( ( ( MUC + CS ) / ( CS / MUC ) ) / Min( Max( MUM,MUC ) ,( DS * MUR ) ) ) ) ) ,( Min( Max( Min( Max( CS,RCSe ) ,( RCSe / MUR ) ),Max( Min( RCSe ,MLU ),( MUR + RCSe ) ) ) ,( Max( ( MUR + RCSe ),( RMSe + RMSe ) ) * ( ( MUM / MUM ) - ( RRSe - MUR ) ) ) ) + Min( ( ( ( DS - RRSe ) - Min( MUR ,RCSe ) ) + ( ( MUR + DS ) / Max( RCSe,MUC ) ) ) ,( ( Min( MUM ,RRSe ) + Max( MLU,RRSe ) ) * ( ( RRSe * DS ) * ( DS - CS ) ) ) ) ) ),( Max( Max( ( Max( ( DS - DS ),Min( MUC ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ),( ( Min( MUM ,RMSe ) / ( RMSe - DS ) ) + ( Max( CS,RRSe ) * Max( RCSe,MUM ) ) ) ),( Min( ( ( MUM * DS ) / ( MLU / MLU ) ) ,( ( MUM / CS ) / ( CS - RRSe ) ) ) - ( Min( ( MLU + RMSe ) ,Max( RMSe,MLU ) ) / ( ( MUM / MUR ) + Min( MLU ,CS ) ) ) ) ) * ( ( Min( Min( Min( RRSe ,MUM ) ,( CS * MUM ) ) ,( Max( RMSe,DS ) - Min( MUC ,MUC ) ) ) * ( ( ( DS * MUC ) / ( DS + CS ) ) / ( ( DS / RCSe ) + ( MUM / MUR ) ) ) ) + ( ( Max( ( CS * MUR ),( MLU - DS ) ) * Max( Max( CS,RMSe ),Min( RRSe ,MLU ) ) ) / Max( Max( Min( RMSe ,CS ),( MUC * RCSe ) ),Min( Min( MUC ,MLU ) ,Min( RMSe ,MUC ) ) ) ) ) ) ) - ( Max( Max( Min( Max( ( ( DS * CS ) / ( CS - MUM ) ),( ( MLU / MUM ) * ( CS + DS ) ) ) ,( ( Max( RCSe,RMSe ) / ( CS - CS ) ) - ( ( RCSe - CS ) / Max( RRSe,RMSe ) ) ) ),Max( ( ( ( CS * MUM ) + ( DS * RRSe ) ) / ( Min( MUR ,CS ) / ( MUR + MUC ) ) ),( Max( Min( MUR ,DS ),Max( MUR,MUC ) ) - Max( ( MUM + MLU ),( MLU / CS ) ) ) ) ),( Min( Max( ( ( MUR + RRSe ) * ( RCSe - RMSe ) ),( Min( RMSe ,MLU ) * Min( MUC ,RMSe ) ) ) ,Max( ( ( DS / RRSe ) * ( CS - DS ) ),( Min( MUM ,MUR ) + ( MUM - CS ) ) ) ) + ( ( ( ( MUC * MUR ) + ( RRSe - RMSe ) ) * Min( ( RCSe / MUC ) ,( RMSe - MUC ) ) ) - ( ( ( MUM + RCSe ) + Max( MUC,RCSe ) ) + Max( ( RMSe - RMSe ),( MUM - MUR ) ) ) ) ) ) - ( ( ( ( ( ( DS - RCSe ) + ( MLU * MUM ) ) * ( Max( CS,MUM ) - ( MUR - MLU ) ) ) - ( Max( ( MUR / MUC ),Max( RRSe,MUM ) ) - ( Min( RMSe ,MLU ) * Max( MUC,DS ) ) ) ) + Min( ( ( Max( MUC,MLU ) + ( RMSe + MUM ) ) / ( Max( CS,MLU ) * Max( MUM,CS ) ) ) ,Max( ( ( MLU - MLU ) / ( DS / MUM ) ),Max( Min( MUC ,MUM ),Min( CS ,CS ) ) ) ) ) - ( Min( ( Max( Max( RCSe,DS ),Max( MLU,MUM ) ) + ( Min( MUR ,MLU ) * ( RCSe + RRSe ) ) ) ,Min( Min( ( DS - DS ) ,( MUR - MUR ) ) ,( ( RRSe * RRSe ) / Max( CS,RMSe ) ) ) ) - ( Min( ( ( RMSe - RMSe ) / ( RRSe + RRSe ) ) ,Min( Min( DS ,MLU ) ,Min( DS ,RMSe ) ) ) + Max( ( Min( RRSe ,MLU ) + Min( CS ,RMSe ) ),( ( RRSe * RCSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.77174485616461}, {"determining": "( ( DDR / MRS ) + Max( Max( BR,( FirstVNF_Mem_Server + ( FirstVNF_CPU + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ),( ARS - CRS ) ) )", "choosing": "( ( MUR + ( RCSe - MUM ) ) * ( ( MLU / CS ) - ( RRSe * DS ) ) )", "obj1": 0.15767634854771784, "obj2": 0.6635308715354988}, {"determining": "( ( DDR / MRS ) + Max( Max( BR,BR ),( ARS - CRS ) ) )", "choosing": "( ( MUR + DS ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.15560165975103735, "obj2": 0.6655553653853454}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Max( Max( BR,BR ),( ARS - CRS ) ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( RRSe * DS ),RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "Min( Min( ( ( ( ( ( ( ACS + FirstVNF_Mem_Server ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) - ( Max( ARS,CRS ) + ( ARS / FirstVNF_CPU ) ) ) - ( ( ( AMS - DDR ) / ( FirstVNF_CPU_Server / PN ) ) / ( ( RRS + BR ) * ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) + ( Max( ( ( MDR - FirstVNF_CPU_Server ) + Max( ACS,FirstVNF_Mem_Server ) ),Min( ( MDR - ACS ) ,( Const * FirstVNF_Mem ) ) ) - Max( ( ( MRS / BR ) + ( Const + FirstVNF_CPU_Server ) ),Min( ( FirstVNF_CPU_Server * PN ) ,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) ) ) * ( Max( Min( ( ( RRS + BR ) + ( AMS * DDR ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,Min( FirstVNF_RAM ,RRS ) ) ),( Max( Max( PN,ACS ),( DDR - AMS ) ) / Max( Min( MDR ,FirstVNF_CPU ),( CRS + FirstVNF_CPU ) ) ) ) + Min( ( Min( Min( ACS ,CRS ) ,Min( MDR ,CRS ) ) * ( ( BR + RRS ) / Min( FirstVNF_CPU ,MRS ) ) ) ,( Max( ( ACS + MRS ),( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( Max( Const,FirstVNF_RAM ) * ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ) ) ) ,( ( Min( ( Max( ( MRS - RRS ),Min( ARS ,FirstVNF_RAM ) ) + Max( ( DDR / FirstVNF_CPU_Server ),Min( RRS ,FirstVNF_CPU ) ) ) ,( ( ( MRS / MDR ) + ( RRS * FirstVNF_CPU ) ) * Min( ( FirstVNF_RAM + MRS ) ,( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) ) / ( Max( ( ( FirstVNF_RAM * ACS ) + Min( RRS ,AMS ) ),( ( Const * MRS ) * ( Const - DDR ) ) ) * ( Max( ( ARS + ACS ),( FirstVNF_RAM_Server + DDR ) ) + Min( Max( PN,FirstVNF_Mem ) ,( MRS * FirstVNF_CPU ) ) ) ) ) * ( ( ( ( Min( ARS ,FirstVNF_RAM ) * Max( Const,AMS ) ) / Min( ( DDR / FirstVNF_CPU_Server ) ,( MDR + FirstVNF_CPU_Server ) ) ) + ( ( Min( ACS ,Const ) * Min( FirstVNF_Mem_Server ,MRS ) ) / ( Max( FirstVNF_CPU_Server,BR ) - ( CRS / DDR ) ) ) ) - ( ( ( ( AMS + Const ) - ( PN + FirstVNF_Mem_Server ) ) + ( Max( AMS,ACS ) / Max( FirstVNF_CPU_Server,MRS ) ) ) * Max( ( ( PN + PN ) + Min( Const ,Const ) ),( ( MRS - CRS ) + ( ARS - PN ) ) ) ) ) ) ) ,( ( Min( ( Min( ( ( BR - FirstVNF_Mem_Server ) - ( BR - AMS ) ) ,( Max( Const,BR ) + ( MRS + PN ) ) ) + ( ( ( DDR * ACS ) - ( Const * FirstVNF_RAM_Server ) ) / ( Max( CRS,FirstVNF_CPU_Server ) + ( MRS / DDR ) ) ) ) ,( Max( Max( Min( BR ,MRS ),( FirstVNF_CPU_Server * MRS ) ),( Max( CRS,PN ) * ( CRS - FirstVNF_RAM ) ) ) - ( ( Max( FirstVNF_CPU_Server,MRS ) + ( FirstVNF_RAM + FirstVNF_CPU ) ) - ( Min( RRS ,Const ) + Max( FirstVNF_Mem,BR ) ) ) ) ) + ( Max( ( Min( ( FirstVNF_RAM / MDR ) ,( FirstVNF_CPU / DDR ) ) * ( ( PN / ARS ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) ),( ( ( MRS - FirstVNF_Mem ) * Min( MRS ,ACS ) ) * ( Min( FirstVNF_CPU_Server ,BR ) + Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) ) + Max( Max( ( Min( FirstVNF_Mem ,FirstVNF_CPU ) - ( CRS + Const ) ),( ( DDR + FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) ),Min( ( ( ACS / FirstVNF_CPU ) - ( FirstVNF_Mem / CRS ) ) ,( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * ( ACS - CRS ) ) ) ) ) ) - Min( ( Min( Min( ( Max( ACS,FirstVNF_Mem_Server ) / ( ACS - MRS ) ) ,Min( Min( ARS ,AMS ) ,( Const - ARS ) ) ) ,( ( Max( FirstVNF_RAM,FirstVNF_CPU ) * Min( FirstVNF_RAM ,MDR ) ) * ( ( FirstVNF_Mem * Const ) + Max( PN,ACS ) ) ) ) - ( ( ( Min( MRS ,ACS ) * ( ARS + DDR ) ) - ( ( Const / ACS ) - ( FirstVNF_Mem_Server / RRS ) ) ) * Min( ( Min( DDR ,RRS ) / ( Const * FirstVNF_CPU ) ) ,Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ,Min( MDR ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( ( ( AMS + FirstVNF_CPU ) * Min( FirstVNF_Mem ,MDR ) ) + ( ( MDR + DDR ) + ( MDR + ACS ) ) ) / ( ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( MRS - FirstVNF_CPU ) ) - Max( Max( Const,PN ),( ACS - MDR ) ) ) ) * ( Max( ( Max( FirstVNF_CPU_Server,PN ) - Min( AMS ,BR ) ),( ( MRS / PN ) - ( ACS / FirstVNF_Mem ) ) ) + ( ( ( RRS + RRS ) + ( DDR / PN ) ) - Max( ( ACS + CRS ),( FirstVNF_CPU - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( Max( Min( ( MLU * Max( ( Max( MUM,MUC ) * CS ),( RRSe * RMSe ) ) ) ,MUR ),Min( ( MUM + Min( MUM ,( MUM * MLU ) ) ) ,MUC ) ) + Min( ( MUR + ( MUM / ( RMSe - CS ) ) ) ,MLU ) ) / ( ( RRSe - MLU ) - MUM ) )", "obj1": 0.9522821576763485, "obj2": 0.038956664576118356}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) )", "choosing": "( Max( Min( ( Max( ( MUR / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + RRSe ) ) ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ),RMSe ) * Max( ( ( Max( ( MUR / MLU ),( MUR + DS ) ) * ( ( CS + RMSe ) + Max( CS,DS ) ) ) * Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( MUM + MUM ) + ( DS / MUR ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - RCSe ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.0995850622406639, "obj2": 0.8227551783799028}], "11": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_CPU ) * Min( Min( FirstVNF_Mem_Server ,BR ) ,Min( FirstVNF_RAM ,RRS ) ) ) + ( Min( ACS ,PN ) / Max( PN,CRS ) ) ) * ( Max( ( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) + Max( FirstVNF_Mem,FirstVNF_RAM ) ) - Min( ( ACS * FirstVNF_RAM ) ,( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) ),Min( Min( ( Const + MDR ) ,( FirstVNF_RAM * MDR ) ) ,( ( MDR / FirstVNF_CPU ) / ( MDR - FirstVNF_Mem_Server ) ) ) ) + Min( Min( FirstVNF_Mem_Server ,RRS ) ,Min( FirstVNF_RAM ,RRS ) ) ) )", "choosing": "( ( Max( MLU,Min( ( RCSe - CS ) ,( RRSe * RMSe ) ) ) * ( DS - CS ) ) - ( RMSe + RMSe ) )", "obj1": 0.13692946058091288, "obj2": 0.6979040733699632}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "( ( DDR / MRS ) + Max( Max( BR,BR ),( ARS - CRS ) ) )", "choosing": "( ( MUR + DS ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.15560165975103735, "obj2": 0.6655553653853454}, {"determining": "( ( FirstVNF_RAM_Server / ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( RRSe * DS ),RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "( ( FirstVNF_RAM_Server / BR ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( MUR,RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "Min( ( ( MDR * Max( FirstVNF_CPU,FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( ( Max( Min( RCSe ,MUM ),MUM ) - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "Min( ( ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( Min( ( ( ( ( ( MLU * MUC ) * ( DS - RCSe ) ) + ( Min( MUC ,MLU ) + Max( RCSe,CS ) ) ) + ( ( ( RCSe - MLU ) - ( RCSe / MUM ) ) * Max( ( RMSe * MUM ),( MUM + MLU ) ) ) ) / Min( Min( ( ( RCSe * MUR ) + Min( MLU ,RMSe ) ) ,( ( RRSe / CS ) - ( MUR * RCSe ) ) ) ,( ( ( MUC + CS ) / ( CS / MUC ) ) / Min( Max( MUM,MUC ) ,( DS * MUR ) ) ) ) ) ,( Min( Max( Min( Max( CS,RCSe ) ,( RCSe / MUR ) ),Max( Min( RCSe ,MLU ),( MUR + RCSe ) ) ) ,( Max( ( MUR + RCSe ),( RMSe + RMSe ) ) * ( ( MUM / MUM ) - ( RRSe - MUR ) ) ) ) + Min( ( ( ( DS - RRSe ) - Min( MUR ,RCSe ) ) + ( ( MUR + DS ) / Max( RCSe,MUC ) ) ) ,( ( Min( MUM ,RRSe ) + Max( MLU,RRSe ) ) * ( ( RRSe * DS ) * ( DS - CS ) ) ) ) ) ),( Max( Max( ( Max( ( DS - DS ),Min( MUC ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ),( ( Min( MUM ,RMSe ) / ( RMSe - DS ) ) + ( Max( CS,RRSe ) * Max( RCSe,MUM ) ) ) ),( Min( ( ( MUM * DS ) / ( MLU / MLU ) ) ,( ( MUM / CS ) / ( CS - RRSe ) ) ) - ( Min( ( MLU + RMSe ) ,Max( RMSe,MLU ) ) / ( ( MUM / MUR ) + Min( MLU ,CS ) ) ) ) ) * ( ( Min( Min( Min( RRSe ,MUM ) ,( CS * MUM ) ) ,( Max( RMSe,DS ) - Min( MUC ,MUC ) ) ) * ( ( ( DS * MUC ) / ( DS + CS ) ) / ( ( DS / RCSe ) + ( MUM / MUR ) ) ) ) + ( ( Max( ( CS * MUR ),( MLU - DS ) ) * Max( Max( CS,RMSe ),Min( RRSe ,MLU ) ) ) / Max( Max( Min( RMSe ,CS ),( MUC * RCSe ) ),Min( Min( MUC ,MLU ) ,Min( RMSe ,MUC ) ) ) ) ) ) ) - ( Max( Max( Min( Max( ( ( DS * CS ) / ( CS - MUM ) ),( ( MLU / MUM ) * ( CS + DS ) ) ) ,( ( Max( RCSe,RMSe ) / ( CS - CS ) ) - ( ( RCSe - CS ) / Max( RRSe,RMSe ) ) ) ),Max( ( ( ( CS * MUM ) + ( DS * RRSe ) ) / ( Min( MUR ,CS ) / ( MUR + MUC ) ) ),( Max( Min( MUR ,DS ),Max( MUR,MUC ) ) - Max( ( MUM + MLU ),( MLU / CS ) ) ) ) ),( Min( Max( ( ( MUR + RRSe ) * ( RCSe - RMSe ) ),( Min( RMSe ,MLU ) * Min( MUC ,RMSe ) ) ) ,Max( ( ( DS / RRSe ) * ( CS - DS ) ),( Min( MUM ,MUR ) + ( MUM - CS ) ) ) ) + ( ( ( ( MUC * MUR ) + ( RRSe - RMSe ) ) * Min( ( RCSe / MUC ) ,( RMSe - MUC ) ) ) - ( ( ( MUM + RCSe ) + Max( MUC,RCSe ) ) + Max( ( RMSe - RMSe ),( MUM - MUR ) ) ) ) ) ) - ( ( ( ( ( ( DS - RCSe ) + ( MLU * MUM ) ) * ( Max( CS,MUM ) - ( MUR - MLU ) ) ) - ( Max( ( MUR / MUC ),Max( RRSe,MUM ) ) - ( Min( RMSe ,MLU ) * Max( MUC,DS ) ) ) ) + Min( ( ( Max( MUC,MLU ) + ( RMSe + MUM ) ) / ( Max( CS,MLU ) * Max( MUM,CS ) ) ) ,Max( ( ( MLU - MLU ) / ( DS / MUM ) ),Max( Min( MUC ,MUM ),Min( CS ,CS ) ) ) ) ) - ( Min( ( Max( Max( RCSe,DS ),Max( MLU,MUM ) ) + ( Min( MUR ,MLU ) * ( RCSe + RRSe ) ) ) ,Min( Min( ( DS - DS ) ,( MUR - MUR ) ) ,( ( RRSe * RRSe ) / Max( CS,RMSe ) ) ) ) - ( Min( ( ( RMSe - RMSe ) / ( RRSe + RRSe ) ) ,Min( Min( DS ,MLU ) ,Min( DS ,RMSe ) ) ) + Max( ( Min( RRSe ,MLU ) + Min( CS ,RMSe ) ),( ( RRSe * RCSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.77174485616461}, {"determining": "( ( FirstVNF_RAM_Server / ( ( DDR * FirstVNF_CPU ) + ( CRS / DDR ) ) ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( Min( RMSe ,CS ) * DS ),RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( RRSe * DS ),RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,RMSe ) * ( Max( ( DS - DS ),Min( MUC ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ) )", "obj1": 0.1037344398340249, "obj2": 0.7738272717865934}, {"determining": "Min( ( ( MDR * Min( FirstVNF_CPU ,FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( Min( ( ( ( ( ( MLU * MUC ) * ( DS - RCSe ) ) + ( Min( MUC ,MLU ) + Max( RCSe,CS ) ) ) + ( ( ( RCSe - MLU ) - ( RCSe / MUM ) ) * Max( ( RMSe * MUM ),( MUM + MLU ) ) ) ) / Min( Min( ( ( RCSe * MUR ) + Min( MLU ,RMSe ) ) ,( ( RRSe / CS ) - ( MUR * RCSe ) ) ) ,( ( ( MUC + CS ) / ( CS / MUC ) ) / Min( Max( MUM,MUC ) ,( DS * MUR ) ) ) ) ) ,( Min( Max( Min( Max( CS,RCSe ) ,( RCSe / MUR ) ),Max( Min( RCSe ,MLU ),( MUR + RCSe ) ) ) ,( Max( ( MUR + RCSe ),( RMSe + RMSe ) ) * ( ( MUM / MUM ) - ( RRSe - MUR ) ) ) ) + Min( ( ( ( DS - RRSe ) - Min( MUR ,RCSe ) ) + ( ( MUR + DS ) / Max( RCSe,MUC ) ) ) ,( ( Min( MUM ,RRSe ) + Max( MLU,RRSe ) ) * ( ( RRSe * DS ) * ( DS - CS ) ) ) ) ) ),( Max( Max( ( Max( ( DS - DS ),Min( MUC ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ),( ( Min( MUM ,RMSe ) / ( RMSe - DS ) ) + ( Max( CS,RRSe ) * Max( RCSe,MUM ) ) ) ),( Min( ( ( MUM * DS ) / ( MLU / MLU ) ) ,( ( MUM / CS ) / ( CS - RRSe ) ) ) - ( Min( ( MLU + RMSe ) ,Max( RMSe,MLU ) ) / ( ( MUM / MUR ) + Min( MLU ,CS ) ) ) ) ) * ( ( Min( Min( Min( RRSe ,MUM ) ,( CS * MUM ) ) ,( Max( RMSe,DS ) - Min( MUC ,MUC ) ) ) * ( ( ( DS * MUC ) / ( DS + CS ) ) / ( ( DS / RCSe ) + ( MUM / MUR ) ) ) ) + ( ( Max( ( CS * MUR ),( MLU - DS ) ) * Max( Max( CS,RMSe ),Min( RRSe ,MLU ) ) ) / Max( Max( Min( RMSe ,CS ),( MUC * RCSe ) ),Min( Min( MUC ,MLU ) ,Min( RMSe ,MUC ) ) ) ) ) ) ) - ( Max( Max( Min( Max( ( ( DS * CS ) / ( CS - MUM ) ),( ( MLU / MUM ) * ( CS + DS ) ) ) ,( ( Max( RCSe,RMSe ) / ( CS - CS ) ) - ( ( RCSe - CS ) / Max( RRSe,RMSe ) ) ) ),Max( ( ( ( CS * MUM ) + ( DS * RRSe ) ) / ( Min( MUR ,CS ) / ( MUR + MUC ) ) ),( Max( Min( MUR ,DS ),Max( MUR,MUC ) ) - Max( ( MUM + MLU ),( MLU / CS ) ) ) ) ),( Min( Max( ( ( MUR + RRSe ) * ( RCSe - RMSe ) ),( Min( RMSe ,MLU ) * Min( MUC ,RMSe ) ) ) ,Max( ( ( DS / RRSe ) * ( CS - DS ) ),( Min( MUM ,MUR ) + ( MUM - CS ) ) ) ) + ( ( ( ( MUC * MUR ) + ( RRSe - RMSe ) ) * Min( ( RCSe / MUC ) ,( RMSe - MUC ) ) ) - ( ( ( MUM + RCSe ) + Max( MUC,RCSe ) ) + Max( ( RMSe - RMSe ),( MUM - MUR ) ) ) ) ) ) - ( ( ( ( ( ( DS - RCSe ) + ( MLU * MUM ) ) * ( Max( CS,MUM ) - ( MUR - MLU ) ) ) - ( Max( ( MUR / MUC ),Max( RRSe,MUM ) ) - ( Min( RMSe ,MLU ) * ( MUC * DS ) ) ) ) + Min( ( ( Max( MUC,MLU ) + ( RMSe + MUM ) ) / ( Max( CS,MLU ) * Max( MUM,CS ) ) ) ,Max( ( ( MLU - MLU ) / ( DS / MUM ) ),Max( Min( MUC ,MUM ),Min( CS ,CS ) ) ) ) ) - ( Min( ( Max( Max( RCSe,DS ),Max( MLU,MUM ) ) + ( Min( MUR ,MLU ) * ( RCSe + RRSe ) ) ) ,Min( Min( ( DS - DS ) ,( MUR - MUR ) ) ,( ( RRSe * RRSe ) / Max( CS,RMSe ) ) ) ) - ( Min( ( ( RMSe - RMSe ) / ( RRSe + RRSe ) ) ,Min( Min( DS ,MLU ) ,Min( DS ,RMSe ) ) ) + Max( ( Min( RRSe ,MLU ) + Min( CS ,RMSe ) ),( ( RRSe * RCSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.77174485616461}, {"determining": "( ( DDR / MRS ) + Max( Max( BR,BR ),( ARS - CRS ) ) )", "choosing": "( ( MUR + DS ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.15560165975103735, "obj2": 0.6655553653853454}, {"determining": "Min( ( Max( MDR,( FirstVNF_CPU - FirstVNF_RAM ) ) + Max( Max( BR,BR ),( ARS - CRS ) ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - DS ) - RRSe ) - Max( Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ),RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "Min( ( ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "( ( FirstVNF_RAM_Server / ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( RRSe * DS ),RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) * Min( CRS ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - MLU ) - Max( DS,RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "Min( ( ( MDR * ( ( ( FirstVNF_RAM_Server / MRS ) + FirstVNF_Mem_Server ) - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,( FirstVNF_Mem * DDR ) )", "choosing": "( Max( MLU,RRSe ) * Max( ( CS * ( MUC - RMSe ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( RMSe - CS ) - ( RRSe * RMSe ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.0912863070539419, "obj2": 0.8246110093112531}, {"determining": "Min( ( ( MDR * ( ( FirstVNF_RAM_Server / MRS ) - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( Min( ( ( ( ( ( MLU * MUC ) * ( DS - RCSe ) ) + ( Min( MUC ,MLU ) + Max( RCSe,CS ) ) ) + ( ( ( RCSe - MLU ) - ( RCSe / MUM ) ) * Max( ( RMSe * MUM ),( MUM + MLU ) ) ) ) / Min( Min( ( ( RCSe * MUR ) + Min( MLU ,RMSe ) ) ,( ( RRSe / CS ) - ( MUR * RCSe ) ) ) ,( ( ( MUC + CS ) / ( CS / MUC ) ) / Min( Max( MUM,MUC ) ,( DS * MUR ) ) ) ) ) ,( Min( Max( Min( Max( CS,RCSe ) ,( RCSe / MUR ) ),Max( Min( RCSe ,MLU ),( MUR + RCSe ) ) ) ,( Max( ( MUR + RCSe ),( RMSe + RMSe ) ) * ( ( MUM / MUM ) - ( RRSe - MUR ) ) ) ) + Min( ( ( ( DS - RRSe ) - Min( MUR ,RCSe ) ) + ( ( MUR + DS ) / Max( RCSe,MUC ) ) ) ,( ( Min( MUM ,RRSe ) + Max( MLU,RRSe ) ) * ( ( RRSe * DS ) * ( DS - CS ) ) ) ) ) ),( Max( Max( ( Max( ( DS - DS ),Min( MUC ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ),( ( Min( MUM ,RMSe ) / ( RMSe - DS ) ) + ( Max( CS,RRSe ) * Max( RCSe,MUM ) ) ) ),( Min( ( ( MUM * DS ) / ( MLU / MLU ) ) ,( ( MUM / CS ) / ( CS - RRSe ) ) ) - ( Min( ( MLU + RMSe ) ,Max( RMSe,MLU ) ) / ( ( MUM / MUR ) + Min( MLU ,CS ) ) ) ) ) * ( ( Min( Min( Min( RRSe ,MUM ) ,( CS * MUM ) ) ,( Max( RMSe,DS ) - Min( MUC ,MUC ) ) ) * ( ( ( DS * MUC ) / ( DS + CS ) ) / ( ( DS / RCSe ) + ( MUM / MUR ) ) ) ) + ( ( Max( ( CS * MUR ),( MLU - DS ) ) * Max( Max( CS,RMSe ),Min( RRSe ,MLU ) ) ) / Max( Max( Min( RMSe ,CS ),( MUC * RCSe ) ),Min( Min( MUC ,MLU ) ,Min( RMSe ,MUC ) ) ) ) ) ) ) - ( Max( Max( Min( Max( ( ( DS * CS ) / ( CS - MUM ) ),( ( MLU / MUM ) * ( CS + DS ) ) ) ,( ( Max( RCSe,RMSe ) / ( CS - CS ) ) - ( ( RCSe - CS ) / Max( RRSe,RMSe ) ) ) ),Max( ( ( ( CS * MUM ) + ( DS * RRSe ) ) / ( Min( MUR ,CS ) / ( MUR + MUC ) ) ),( Max( Min( MUR ,DS ),Max( MUR,MUC ) ) - Max( ( MUM + MLU ),( MLU / CS ) ) ) ) ),( Min( Max( ( ( MUR + RRSe ) * ( RCSe - RMSe ) ),( Min( RMSe ,MLU ) * Min( MUC ,RMSe ) ) ) ,Max( ( ( CS / RRSe ) * ( CS - DS ) ),( Min( MUM ,MUR ) + ( MUM - CS ) ) ) ) + ( ( ( ( MUC * MUR ) + ( RRSe - RMSe ) ) * Min( ( RCSe / MUC ) ,( RMSe - MUC ) ) ) - ( ( ( MUM + RCSe ) + Max( MUC,RCSe ) ) + Max( ( RMSe - RMSe ),( MUM - MUR ) ) ) ) ) ) - ( ( ( ( ( ( DS - RCSe ) + ( MLU * MUM ) ) * ( Max( CS,MUM ) - ( MUR - MLU ) ) ) - ( Max( ( MUR / MUC ),Max( RRSe,MUM ) ) - ( Min( RMSe ,MLU ) * Max( MUC,DS ) ) ) ) + Min( ( ( Max( MUC,MLU ) + ( RMSe + MUM ) ) / ( Max( CS,MLU ) * Max( MUM,CS ) ) ) ,Max( ( ( MLU - MLU ) / ( DS / MUM ) ),Max( Min( MUC ,MUM ),Min( CS ,CS ) ) ) ) ) - ( Min( ( Max( Max( RCSe,DS ),Max( MLU,MUM ) ) + ( Min( MUR ,MLU ) * ( RCSe + RRSe ) ) ) ,Min( Min( ( DS - DS ) ,( MUR - MUR ) ) ,( ( RRSe * RRSe ) / Max( CS,RMSe ) ) ) ) - ( Min( ( ( RMSe - RMSe ) / ( RRSe + RRSe ) ) ,Min( Min( DS ,MLU ) ,Min( DS ,RMSe ) ) ) + Max( ( Min( RRSe ,MLU ) + Min( CS ,RMSe ) ),( ( RRSe * RCSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.77174485616461}, {"determining": "Min( ( ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS - DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( Min( ( ( ( ( ( MLU * MUC ) * ( DS - RCSe ) ) + ( Min( MUC ,MLU ) + Max( RCSe,CS ) ) ) + ( ( ( RCSe - MLU ) - ( RCSe / MUR ) ) * Max( ( RMSe * MUM ),( MUM + MLU ) ) ) ) / Min( Min( ( ( RCSe * MUR ) + Min( MLU ,RMSe ) ) ,( ( RRSe / CS ) - ( MUR * RCSe ) ) ) ,( ( ( MUC + CS ) / ( CS / MUC ) ) / Min( Max( MUM,MUC ) ,( DS * MUR ) ) ) ) ) ,( Min( Max( Min( Max( CS,RCSe ) ,( RCSe / MUR ) ),Max( Min( RCSe ,MLU ),( MUR + RCSe ) ) ) ,( Max( ( MUR + RCSe ),( RMSe + RMSe ) ) * ( ( MUM / MUM ) - ( RRSe - MUR ) ) ) ) + Min( ( ( ( DS - RRSe ) - Min( MUR ,RCSe ) ) + ( ( MUR + DS ) / Max( RCSe,MUC ) ) ) ,( ( Min( MUM ,RRSe ) + Max( MLU,RRSe ) ) * ( ( RRSe * DS ) * ( DS - CS ) ) ) ) ) ),( Max( Max( ( Max( ( DS - DS ),Min( MUC ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ),( ( Min( MUM ,RMSe ) / ( RMSe - DS ) ) + ( Max( CS,RRSe ) * Max( RCSe,MUM ) ) ) ),( Min( ( ( MUM * DS ) / ( MLU / MLU ) ) ,( ( MUM / CS ) / ( CS - RRSe ) ) ) - ( Min( ( MLU + RMSe ) ,Max( RMSe,MLU ) ) / ( ( MUM / MUR ) + Min( MLU ,CS ) ) ) ) ) * ( ( Min( Min( Min( RRSe ,MUM ) ,( CS * MUM ) ) ,( Max( RMSe,DS ) - Min( MUC ,MUC ) ) ) * ( ( ( DS * MUC ) / ( DS + CS ) ) / ( ( DS / RCSe ) + ( MUM / MUR ) ) ) ) + ( ( Max( ( CS * MUR ),( MLU - DS ) ) * Max( Max( CS,RMSe ),Min( RRSe ,MLU ) ) ) / Max( Max( Min( RMSe ,CS ),( MUC * RCSe ) ),Min( Min( MUC ,MLU ) ,Min( RMSe ,MUC ) ) ) ) ) ) ) - ( Max( Max( Min( Max( ( ( DS * CS ) / ( CS - MUM ) ),( ( MLU / MUM ) * ( CS + DS ) ) ) ,( ( Max( RCSe,RMSe ) / ( CS - CS ) ) - ( ( RCSe - CS ) / Max( RRSe,RMSe ) ) ) ),Max( ( ( ( CS * MUM ) + ( DS * RRSe ) ) / ( Min( MUR ,CS ) / ( MUR + MUC ) ) ),( Max( Min( MUR ,DS ),Max( MUR,MUC ) ) - Max( ( MUM + MLU ),( MLU / CS ) ) ) ) ),( Min( Max( ( ( MUR + RRSe ) * ( RCSe - RMSe ) ),( Min( RMSe ,MLU ) * Min( MUC ,RMSe ) ) ) ,Max( ( ( DS / RRSe ) * ( CS - DS ) ),( Min( MUM ,MUR ) + ( MUM - CS ) ) ) ) + ( ( ( ( MUC * MUR ) + ( RRSe - RMSe ) ) * Min( ( RCSe / MUC ) ,( RMSe - MUC ) ) ) - ( ( ( MUM + RCSe ) + Max( MUC,RCSe ) ) + Max( ( RMSe - RMSe ),( MUM - MUR ) ) ) ) ) ) - ( ( ( ( ( ( DS - RCSe ) + ( MLU * MUM ) ) * ( Max( CS,MUM ) - ( MUR - MLU ) ) ) - ( Max( ( MUR / MUC ),Max( RRSe,MUM ) ) - ( Min( RMSe ,MLU ) * Max( MUC,DS ) ) ) ) + Min( ( ( Max( MUC,MLU ) + ( RMSe + MUM ) ) / ( Max( CS,MLU ) * Max( MUM,CS ) ) ) ,Max( ( ( MLU - MLU ) / ( DS / MUM ) ),Max( Min( MUC ,MUM ),Min( CS ,CS ) ) ) ) ) - ( Min( ( Max( Max( RCSe,DS ),Max( MLU,MUM ) ) + ( Min( MUR ,MLU ) * ( RCSe + RRSe ) ) ) ,Min( Min( ( DS - DS ) ,( MUR - MUR ) ) ,( ( RRSe * RRSe ) / Max( CS,RMSe ) ) ) ) - ( Min( ( ( RMSe - RMSe ) / ( RRSe + RRSe ) ) ,Min( Min( DS ,MLU ) ,Min( DS ,RMSe ) ) ) + Max( ( Min( RRSe ,MLU ) + Min( CS ,RMSe ) ),( ( RRSe * RCSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.77174485616461}, {"determining": "( ( DDR / MRS ) + Max( Max( BR,BR ),( ARS - CRS ) ) )", "choosing": "( ( MUR + DS ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.15560165975103735, "obj2": 0.6655553653853454}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Max( Max( BR,BR ),( ARS - CRS ) ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( RRSe * DS ),RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "Min( ( ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + Max( Max( BR,BR ),( ARS - CRS ) ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ),RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "Min( ( ( MDR * ( ( AMS / MRS ) - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( Min( ( ( ( ( ( MLU * MUC ) * ( DS - RCSe ) ) + ( Min( MUC ,MLU ) + Max( RCSe,CS ) ) ) + ( ( ( RCSe - MLU ) - ( RCSe / MUM ) ) * Max( ( RMSe * MUM ),( MUM + MLU ) ) ) ) / Min( Min( ( ( RCSe * MUR ) + Min( MLU ,RMSe ) ) ,( ( RRSe / CS ) - ( MUR * RCSe ) ) ) ,( ( ( MUC + CS ) / ( CS / MUC ) ) / Min( Max( MUM,MUC ) ,( DS * MUR ) ) ) ) ) ,( Min( Max( Min( Max( CS,RCSe ) ,( RCSe / MUR ) ),Max( Min( RCSe ,MLU ),( MUR + RCSe ) ) ) ,( Max( ( MUR + RCSe ),( RMSe + RMSe ) ) * ( ( MUM / MUM ) - ( RRSe - MUR ) ) ) ) + Min( ( ( ( DS - RRSe ) - Min( MUR ,RCSe ) ) + ( ( MUR + DS ) / Max( RCSe,MUC ) ) ) ,( ( Min( MUM ,RRSe ) + Max( MLU,RRSe ) ) * ( ( RRSe * DS ) * ( RMSe - CS ) ) ) ) ) ),( Max( Max( ( Max( ( DS - DS ),Min( MUC ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ),( ( Min( MUM ,RMSe ) / ( RMSe - DS ) ) + ( Max( CS,RRSe ) * Max( RCSe,MUM ) ) ) ),( Min( ( ( MUM * DS ) / ( MLU / MLU ) ) ,( ( MUM / CS ) / ( CS - RRSe ) ) ) - ( Min( ( MLU + RMSe ) ,Max( RMSe,MLU ) ) / ( ( MUM / MUR ) + Min( MLU ,CS ) ) ) ) ) * ( ( Min( Min( Min( RRSe ,MUM ) ,( CS * MUM ) ) ,( Max( RMSe,DS ) - Min( MUC ,MUC ) ) ) * ( ( ( DS * MUC ) / ( DS + CS ) ) / ( ( DS / RCSe ) + ( MUM / MUR ) ) ) ) + ( ( Max( ( CS * MUR ),( MLU - DS ) ) * Max( Max( CS,RMSe ),Min( RRSe ,MLU ) ) ) / Max( Max( Min( RMSe ,CS ),( MUC * RCSe ) ),Min( Min( MUC ,MLU ) ,Min( RMSe ,MUC ) ) ) ) ) ) ) - ( Max( Max( Min( Max( ( ( DS * CS ) / ( CS - MUM ) ),( ( MLU / MUM ) * ( CS + DS ) ) ) ,( ( Max( RCSe,RMSe ) / ( CS - CS ) ) - ( ( RCSe - CS ) / Max( RRSe,RMSe ) ) ) ),Max( ( ( ( CS * MUM ) + ( DS * RRSe ) ) / ( Min( MUR ,CS ) / ( MUR + MUC ) ) ),( Max( Min( MUR ,DS ),Max( MUR,MUC ) ) - Max( ( MUM + MLU ),( MLU / CS ) ) ) ) ),( Min( Max( ( ( MUR + RRSe ) * ( RCSe - RMSe ) ),( Min( RMSe ,MLU ) * Min( MUC ,RMSe ) ) ) ,Max( ( ( CS / RRSe ) * ( CS - DS ) ),( Min( MUM ,MUR ) + ( MUM - CS ) ) ) ) + ( ( ( ( MUC * MUR ) + ( RRSe - RMSe ) ) * Min( ( RCSe / MUC ) ,( RMSe - MUC ) ) ) - ( ( ( MUM + RCSe ) + Max( MUC,RCSe ) ) + Max( ( RMSe - RMSe ),( MUM - MUR ) ) ) ) ) ) - ( ( ( ( ( ( DS - RCSe ) + ( MLU * MUM ) ) * ( Max( CS,MUM ) - ( MUR - MLU ) ) ) - ( Max( ( MUR / MUC ),Max( RRSe,MUM ) ) - ( Min( RMSe ,MLU ) * Max( MUC,DS ) ) ) ) + Min( ( ( Max( MUC,MLU ) + ( RMSe + MUM ) ) / ( Max( CS,MLU ) * Max( MUM,CS ) ) ) ,Max( ( ( MLU - MLU ) / ( DS / MUM ) ),Max( Min( MUC ,MUM ),Min( CS ,CS ) ) ) ) ) - ( Min( ( Max( Max( RCSe,DS ),Max( MLU,MUM ) ) + ( Min( MUR ,MLU ) * ( RCSe + RRSe ) ) ) ,Min( Min( ( DS - DS ) ,( MUR - MUR ) ) ,( ( RRSe * RRSe ) / Max( CS,RMSe ) ) ) ) - ( Min( ( ( RMSe - RMSe ) / ( RRSe + RRSe ) ) ,Min( Min( DS ,MLU ) ,Min( DS ,RMSe ) ) ) + Max( ( Min( RRSe ,MLU ) + Min( CS ,RMSe ) ),( ( RRSe * RCSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.77174485616461}, {"determining": "( ( DDR / MRS ) + Max( Max( BR,BR ),Min( ARS ,CRS ) ) )", "choosing": "( ( MUR + CS ) * ( ( MLU - CS ) - ( RRSe * DS ) ) )", "obj1": 0.15560165975103735, "obj2": 0.6655553653853454}, {"determining": "( ( DDR / MRS ) + Max( Max( BR,BR ),( ARS - CRS ) ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "Min( ( ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( Min( ( ( ( ( ( MLU * MUC ) * ( DS - RCSe ) ) + ( Min( MUC ,MLU ) + Max( RCSe,CS ) ) ) + ( ( ( RCSe - MLU ) - ( RCSe / MUM ) ) * Max( ( RMSe * MUM ),( MUM + MLU ) ) ) ) / Min( Min( ( ( RCSe * MUR ) + Min( MLU ,RMSe ) ) ,( ( RRSe / CS ) - ( MUR * RCSe ) ) ) ,( ( ( MUC + CS ) / ( CS / MUC ) ) / Min( Max( MUM,MUC ) ,( DS * MUR ) ) ) ) ) ,( Min( Max( Min( Max( CS,RCSe ) ,( RCSe / MUR ) ),Max( Min( RCSe ,MLU ),( MUR + RCSe ) ) ) ,( Max( ( MUR + RCSe ),( RMSe + RMSe ) ) * ( ( MUM / MUM ) - ( RRSe - MUR ) ) ) ) + Min( ( ( ( DS - RRSe ) - Min( MUR ,RCSe ) ) + ( ( MUR + DS ) / Max( RCSe,MUC ) ) ) ,( ( Min( MUM ,RRSe ) + Max( MLU,RRSe ) ) * ( ( RRSe * DS ) * ( DS - CS ) ) ) ) ) ),( Max( Max( ( Max( ( DS - DS ),Min( MUC ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ),( ( Min( MUM ,RMSe ) / ( RMSe - DS ) ) + ( Max( CS,RRSe ) * Max( RCSe,MUM ) ) ) ),( Min( ( ( MUM * DS ) / ( MLU / MLU ) ) ,( ( MUM / CS ) / ( CS - RRSe ) ) ) - ( Min( ( MLU + RMSe ) ,Max( RMSe,MLU ) ) / ( ( MUM / MUR ) + Min( MLU ,CS ) ) ) ) ) * ( ( Min( Min( Min( RRSe ,MUM ) ,( CS * MUM ) ) ,( Max( RMSe,DS ) - Min( MUC ,MUC ) ) ) * ( ( ( DS * MUC ) / ( DS + CS ) ) / ( ( DS / RCSe ) + ( MUM / MUR ) ) ) ) + ( ( Max( ( CS * MUR ),( MLU - DS ) ) * Max( Max( CS,RMSe ),Min( RRSe ,MLU ) ) ) / Max( Max( Min( RMSe ,CS ),( MUC * RCSe ) ),Min( Min( MUC ,MLU ) ,Min( RMSe ,MUC ) ) ) ) ) ) ) - ( Max( Max( Min( Max( ( ( DS * CS ) / ( CS - MUM ) ),( ( MLU / MUM ) * ( CS + DS ) ) ) ,( ( Max( RCSe,RMSe ) / ( CS - CS ) ) - ( ( RCSe - CS ) / Max( RRSe,RMSe ) ) ) ),Max( ( ( ( CS * MUM ) + ( DS * RRSe ) ) / ( Min( MUR ,CS ) / ( MUR + MUC ) ) ),( Max( Min( MUR ,DS ),Max( MUR,MUC ) ) - Max( ( MUM + MLU ),( MLU / CS ) ) ) ) ),( Min( Max( ( ( MUR + RRSe ) * ( RCSe - RMSe ) ),( Min( RMSe ,MLU ) * Min( MUC ,RMSe ) ) ) ,Max( ( ( DS / RRSe ) * ( CS - DS ) ),( Min( MUM ,MUR ) + ( MUM - CS ) ) ) ) + ( ( ( ( MUC * MUR ) + ( RRSe - RMSe ) ) * Min( ( RCSe / MUC ) ,( RMSe - MUC ) ) ) - ( ( ( MUM + RCSe ) + Max( MUC,RCSe ) ) + Max( ( RMSe - RMSe ),( MUM - MUR ) ) ) ) ) ) - ( ( ( ( ( ( DS - RCSe ) + ( MLU * MUM ) ) * ( Max( CS,MUM ) - ( MUR - MLU ) ) ) - ( Max( ( MUR / MUC ),Max( RRSe,MUM ) ) - ( Min( RMSe ,MLU ) * Max( MUC,DS ) ) ) ) + Min( ( ( Max( MUC,MLU ) + ( RMSe + MUM ) ) / ( Max( CS,MLU ) * Max( MUM,CS ) ) ) ,Max( ( ( MLU - MLU ) / ( DS / MUM ) ),Max( Min( MUC ,MUM ),Min( CS ,CS ) ) ) ) ) - ( Min( ( Max( Max( RCSe,DS ),Max( MLU,MUM ) ) + ( Min( MUR ,MLU ) * ( RCSe + RRSe ) ) ) ,Min( Min( ( DS - DS ) ,( MUR - MUR ) ) ,( ( RRSe * RRSe ) / Max( CS,RMSe ) ) ) ) - ( Min( ( ( RMSe - RMSe ) / ( RRSe + RRSe ) ) ,Min( Min( DS ,MLU ) ,Min( DS ,RMSe ) ) ) + Max( ( Min( RRSe ,MLU ) + Min( CS ,RMSe ) ),( ( RRSe * RCSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.77174485616461}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( RRSe * DS ),RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Max( Max( BR,Min( CRS ,DDR ) ),( ARS - CRS ) ) )", "choosing": "( ( ( Min( RCSe ,( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( RRSe * DS ),RRSe ) ) ) - MUM ) - RRSe ) - Max( ( RRSe * DS ),RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "( ( FirstVNF_RAM_Server / ( ( DDR * FirstVNF_CPU ) + ( DDR / DDR ) ) ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - ( ( RRSe * DS ) / RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Max( Max( BR,BR ),( ARS - CRS ) ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( RRSe * DS ),RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,RMSe ) * ( Max( ( DS - DS ),Min( MUC ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ) )", "obj1": 0.09336099585062241, "obj2": 0.7909587329406192}, {"determining": "Min( ( ( MDR * ( ( ( FirstVNF_RAM_Server / MRS ) + FirstVNF_Mem_Server ) - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,( FirstVNF_Mem * DDR ) )", "choosing": "( Max( MLU,RRSe ) * Max( ( CS * ( MUC - RMSe ) ),Max( ( Min( ( MUM + MUC ) ,( MUM - CS ) ) / ( ( RMSe - CS ) - ( RRSe * RMSe ) ) ),Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.0912863070539419, "obj2": 0.8246110093112531}, {"determining": "( ( MDR * ( ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) - Const ) ) + FirstVNF_RAM )", "choosing": "( Max( ( Max( DS,MLU ) * ( ( MLU - CS ) - ( RRSe + DS ) ) ),MLU ) * ( ( Max( MLU,RRSe ) * Max( ( RMSe * ( MUC - RMSe ) ),( ( MLU - CS ) - ( RRSe * DS ) ) ) ) - ( RRSe * DS ) ) )", "obj1": 0.14730290456431536, "obj2": 0.6737673522235365}, {"determining": "Min( ( ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "Min( ( ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + Max( Max( BR,BR ),( ARS - CRS ) ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ),RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "Min( ( ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "( ( AMS + ( FirstVNF_Mem_Server + MDR ) ) * Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "( ( CRS / MRS ) + ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,RMSe ) * ( Max( ( DS - DS ),Min( ( ( MLU - CS ) - ( RRSe * DS ) ) ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ) )", "obj1": 0.1078838174273859, "obj2": 0.7725640014747847}, {"determining": "Min( ( ( MDR * ( ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / PN ) ) + FirstVNF_Mem_Server ) - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,( FirstVNF_Mem * DDR ) )", "choosing": "( Max( MLU,RRSe ) * Max( ( CS * ( MUC - RMSe ) ),Max( RMSe,Max( ( Min( RMSe ,CS ) + ( CS / DS ) ),Min( ( RCSe - MUM ) ,( MLU - MUR ) ) ) ) ) )", "obj1": 0.0912863070539419, "obj2": 0.8246110093112531}, {"determining": "Min( ( ( FirstVNF_Mem_Server * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Min( ( Min( RCSe ,MUM ) - MUM ) ,RRSe ) - Max( DS,RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( RRSe * DS ),RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "( ( DDR / MRS ) + Max( Max( BR,( FirstVNF_Mem_Server + ( FirstVNF_CPU + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( BR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) ) ),( ARS - CRS ) ) )", "choosing": "( Max( Min( ( ( ( ( ( MLU * MUC ) * ( DS - RCSe ) ) + ( Min( MUC ,MLU ) + Max( RCSe,CS ) ) ) + ( ( ( RCSe - MLU ) - ( RCSe / MUM ) ) * Max( ( RMSe * MUM ),( MUM + MLU ) ) ) ) / Min( Min( ( ( RCSe * MUR ) + Min( MLU ,RMSe ) ) ,( ( RRSe / CS ) - ( MUR * RCSe ) ) ) ,( ( ( MUC + CS ) / ( CS / MUC ) ) / Min( Max( MUM,MUC ) ,( DS * MUR ) ) ) ) ) ,( Min( Max( Min( Max( CS,RCSe ) ,( RCSe / MUR ) ),Max( Min( RCSe ,MLU ),( MUR + RCSe ) ) ) ,( Max( ( MUR + RCSe ),( RMSe + RMSe ) ) * ( ( MUM / MUM ) - ( RRSe - MUR ) ) ) ) + Min( ( ( ( DS - RRSe ) - Min( MUR ,RCSe ) ) + ( ( MUR + DS ) / Max( RCSe,MUC ) ) ) ,( ( Min( MUM ,RRSe ) + Max( MLU,RRSe ) ) * ( ( RRSe * DS ) * ( DS - CS ) ) ) ) ) ),( Max( Max( ( Max( ( DS - DS ),Min( MUC ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ),( ( Min( MUM ,RMSe ) / ( RMSe - DS ) ) + ( Max( CS,RRSe ) * Max( RCSe,MUM ) ) ) ),( Min( ( ( MUM * DS ) / ( MLU / MLU ) ) ,( ( MUM / CS ) / ( CS - RRSe ) ) ) - ( Min( ( MLU + RMSe ) ,Max( RMSe,MLU ) ) / ( ( MUM / MUR ) + Min( MLU ,CS ) ) ) ) ) * ( ( Min( Min( Min( RRSe ,MUM ) ,( CS * MUM ) ) ,( Max( RMSe,DS ) - Min( MUC ,MUC ) ) ) * ( ( ( DS * MUC ) / ( DS + CS ) ) / ( ( DS / RCSe ) + ( MUM / MUR ) ) ) ) + ( ( Max( ( CS * MUR ),( MLU - DS ) ) * Max( Max( CS,RMSe ),Min( RRSe ,MLU ) ) ) / Max( Max( Min( RMSe ,CS ),( MUC * RCSe ) ),Min( Min( MUC ,MLU ) ,Min( RMSe ,MUC ) ) ) ) ) ) ) - ( Max( Max( Min( Max( ( ( DS * CS ) / ( CS - MUM ) ),( ( MLU / MUM ) * ( CS + DS ) ) ) ,( ( Max( RCSe,RMSe ) / ( CS - CS ) ) - ( ( RCSe - CS ) / Max( RRSe,RMSe ) ) ) ),Max( ( ( ( CS * MUM ) + ( DS * RRSe ) ) / ( Min( MUR ,CS ) + ( MUR + MUC ) ) ),( Max( Min( MUR ,DS ),Max( MUR,MUC ) ) - Max( Max( MUM,MLU ),( MLU / CS ) ) ) ) ),( Min( Max( ( ( MUR + RRSe ) * ( RCSe - RMSe ) ),( Min( RMSe ,MLU ) * Min( MUC ,RMSe ) ) ) ,Max( ( ( DS / RRSe ) * ( CS - DS ) ),( Min( MUM ,MUR ) + ( MUM - CS ) ) ) ) + ( ( ( ( MUC * MUR ) + ( RRSe - RMSe ) ) * Min( ( RCSe / MUC ) ,( RMSe - MUC ) ) ) - ( ( ( MUM + RCSe ) + Max( MUC,RCSe ) ) + Max( ( RMSe - RMSe ),( MUM - MUR ) ) ) ) ) ) - ( ( ( ( ( ( DS - RCSe ) + ( MLU * MUM ) ) * ( Max( CS,MUM ) - ( MUR - MLU ) ) ) - ( Max( ( MUR / MUC ),Max( RRSe,MUM ) ) - ( Min( RMSe ,MLU ) * Max( MUC,DS ) ) ) ) + Min( ( ( Max( MUC,MLU ) + ( RMSe + MUM ) ) / ( Max( CS,MLU ) * Max( MUM,CS ) ) ) ,Max( ( ( MLU - MLU ) / ( DS / MUM ) ),Max( Min( MUC ,MUM ),Min( CS ,CS ) ) ) ) ) - ( Min( ( Max( Max( RCSe,DS ),Max( MLU,MUM ) ) + ( Min( MUR ,MLU ) * ( RCSe + RRSe ) ) ) ,Min( Min( ( DS - DS ) ,( MUR - MUR ) ) ,( ( RRSe * RRSe ) / Max( CS,RMSe ) ) ) ) - ( Min( ( ( RMSe - RMSe ) / ( RRSe + RRSe ) ) ,Min( Min( DS ,MLU ) ,Min( DS ,RMSe ) ) ) + Max( ( Min( RRSe ,MLU ) + Min( CS ,RMSe ) ),( ( RRSe * RCSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.77174485616461}, {"determining": "Min( ( ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS - DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( Min( ( ( ( ( ( MLU * MUC ) * ( DS - RCSe ) ) + ( Min( MUC ,MLU ) + Max( RCSe,CS ) ) ) + ( ( ( RCSe - MLU ) - ( RCSe / MUR ) ) * Max( ( RMSe * MUM ),( MUM + MLU ) ) ) ) / Min( Min( ( ( RCSe * MUR ) + Min( MLU ,RMSe ) ) ,( ( RRSe / CS ) - ( MUR * RCSe ) ) ) ,( ( ( MUC + CS ) / ( CS / MUC ) ) / Min( Max( MUM,MUC ) ,( DS * MUR ) ) ) ) ) ,( Min( Max( Min( Max( CS,RCSe ) ,( RCSe / MUR ) ),Max( Min( RCSe ,MLU ),( MUR + RCSe ) ) ) ,( Max( ( MUR + RCSe ),( RMSe + RMSe ) ) * ( ( MUM / MUM ) - ( RRSe - MUR ) ) ) ) + Min( ( ( ( DS - RRSe ) - Min( MUR ,RCSe ) ) + ( ( MUR + DS ) / Max( RCSe,MUC ) ) ) ,( ( Min( MUM ,RRSe ) + Max( MLU,RRSe ) ) * ( ( RRSe * DS ) * ( DS - CS ) ) ) ) ) ),( Max( Max( ( Max( ( DS - DS ),Min( MUC ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ),( ( Min( MUM ,RMSe ) / ( RMSe - DS ) ) + ( Max( CS,RRSe ) * Max( RCSe,MUM ) ) ) ),( Min( ( ( MUM * DS ) / ( MLU / MLU ) ) ,( ( MUM / CS ) / ( CS - RRSe ) ) ) - ( Min( ( MLU + RMSe ) ,Max( RMSe,MLU ) ) / ( ( MUM / MUR ) + Min( MLU ,CS ) ) ) ) ) * ( ( Min( Min( Min( RRSe ,MUM ) ,( CS * MUM ) ) ,( Max( RMSe,DS ) - Min( MUC ,MUC ) ) ) * ( ( ( DS * MUC ) / ( DS + CS ) ) / ( ( DS / RCSe ) + ( MUM / MUR ) ) ) ) + ( ( Max( ( CS * MUR ),( MLU - DS ) ) * Max( Max( CS,RMSe ),Min( RRSe ,MLU ) ) ) / Max( Max( Min( RMSe ,CS ),( MUC * RCSe ) ),Min( Min( MUC ,MLU ) ,Min( RMSe ,MUC ) ) ) ) ) ) ) - ( Max( Max( Min( Max( ( ( DS * CS ) / ( CS - MUM ) ),( ( MLU / MUM ) * ( CS + DS ) ) ) ,( ( Max( RCSe,RMSe ) / ( CS - CS ) ) - ( ( RCSe - CS ) / Max( RRSe,RMSe ) ) ) ),Max( ( ( ( CS * MUM ) + ( DS * RRSe ) ) / ( Min( MUR ,CS ) / ( MUR + MUC ) ) ),( Max( Min( MUR ,DS ),Max( MUR,MUC ) ) - Max( ( MUM + MLU ),( MLU / CS ) ) ) ) ),( Min( Max( ( ( MUR + RRSe ) * ( RCSe - RMSe ) ),( Min( RMSe ,MLU ) * Min( MUC ,RMSe ) ) ) ,Max( ( ( DS / RRSe ) * ( CS - DS ) ),( Min( MUM ,MUR ) + ( MUM - CS ) ) ) ) + ( ( ( ( MUC * MUR ) + ( RRSe - RMSe ) ) * Min( ( RCSe / MUC ) ,( RMSe - MUC ) ) ) - ( ( ( MUM + RCSe ) + Max( MUC,RCSe ) ) + Max( ( RMSe - RMSe ),( MUM - MUR ) ) ) ) ) ) - ( ( ( ( ( ( DS - RCSe ) + ( MLU * MUM ) ) * ( Max( CS,MUM ) - ( MUR - MLU ) ) ) - ( Max( ( MUR / MUC ),Max( RRSe,MUM ) ) - ( Min( RMSe ,MLU ) * Max( MUC,DS ) ) ) ) + Min( ( ( Max( MUC,MLU ) + ( RMSe + MUM ) ) / ( Max( CS,MLU ) * Max( MUM,CS ) ) ) ,Max( ( ( MLU - MLU ) / ( DS / MUM ) ),Max( Min( MUC ,MUM ),Min( CS ,CS ) ) ) ) ) - ( Min( ( Max( Max( RCSe,DS ),Max( MLU,MUM ) ) + ( Min( MUR ,MLU ) * ( RCSe + RRSe ) ) ) ,Min( Min( ( DS - DS ) ,( MUR - MUR ) ) ,( ( RRSe * RRSe ) / Max( CS,RMSe ) ) ) ) - ( Min( ( ( RMSe - RMSe ) / ( RRSe + RRSe ) ) ,Min( Min( DS ,MLU ) ,Min( DS ,RMSe ) ) ) + Max( ( Min( RRSe ,MLU ) + Min( CS ,RMSe ) ),( ( RRSe * RCSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.13070539419087138, "obj2": 0.7685692156721664}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "Min( ( ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,( FirstVNF_RAM_Server / MRS ) ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( DS,RRSe ) ),RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "Min( ( ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}], "12": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "( ( FirstVNF_RAM_Server / ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( RRSe * DS ),RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "( ( FirstVNF_RAM_Server / BR ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( MUR,RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "Min( ( ( MDR * Max( FirstVNF_CPU,FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( ( Max( Min( RCSe ,MUM ),MUM ) - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "Min( ( ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( Min( ( ( ( ( ( MLU * MUC ) * ( DS - RCSe ) ) + ( Min( MUC ,MLU ) + Max( RCSe,CS ) ) ) + ( ( ( RCSe - MLU ) - ( RCSe / MUM ) ) * Max( ( RMSe * MUM ),( MUM + MLU ) ) ) ) / Min( Min( ( ( RCSe * MUR ) + Min( MLU ,RMSe ) ) ,( ( RRSe / CS ) - ( MUR * RCSe ) ) ) ,( ( ( MUC + CS ) / ( CS / MUC ) ) / Min( Max( MUM,MUC ) ,( DS * MUR ) ) ) ) ) ,( Min( Max( Min( Max( CS,RCSe ) ,( RCSe / MUR ) ),Max( Min( RCSe ,MLU ),( MUR + RCSe ) ) ) ,( Max( ( MUR + RCSe ),( RMSe + RMSe ) ) * ( ( MUM / MUM ) - ( RRSe - MUR ) ) ) ) + Min( ( ( ( DS - RRSe ) - Min( MUR ,RCSe ) ) + ( ( MUR + DS ) / Max( RCSe,MUC ) ) ) ,( ( Min( MUM ,RRSe ) + Max( MLU,RRSe ) ) * ( ( RRSe * DS ) * ( DS - CS ) ) ) ) ) ),( Max( Max( ( Max( ( DS - DS ),Min( MUC ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ),( ( Min( MUM ,RMSe ) / ( RMSe - DS ) ) + ( Max( CS,RRSe ) * Max( RCSe,MUM ) ) ) ),( Min( ( ( MUM * DS ) / ( MLU / MLU ) ) ,( ( MUM / CS ) / ( CS - RRSe ) ) ) - ( Min( ( MLU + RMSe ) ,Max( RMSe,MLU ) ) / ( ( MUM / MUR ) + Min( MLU ,CS ) ) ) ) ) * ( ( Min( Min( Min( RRSe ,MUM ) ,( CS * MUM ) ) ,( Max( RMSe,DS ) - Min( MUC ,MUC ) ) ) * ( ( ( DS * MUC ) / ( DS + CS ) ) / ( ( DS / RCSe ) + ( MUM / MUR ) ) ) ) + ( ( Max( ( CS * MUR ),( MLU - DS ) ) * Max( Max( CS,RMSe ),Min( RRSe ,MLU ) ) ) / Max( Max( Min( RMSe ,CS ),( MUC * RCSe ) ),Min( Min( MUC ,MLU ) ,Min( RMSe ,MUC ) ) ) ) ) ) ) - ( Max( Max( Min( Max( ( ( DS * CS ) / ( CS - MUM ) ),( ( MLU / MUM ) * ( CS + DS ) ) ) ,( ( Max( RCSe,RMSe ) / ( CS - CS ) ) - ( ( RCSe - CS ) / Max( RRSe,RMSe ) ) ) ),Max( ( ( ( CS * MUM ) + ( DS * RRSe ) ) / ( Min( MUR ,CS ) / ( MUR + MUC ) ) ),( Max( Min( MUR ,DS ),Max( MUR,MUC ) ) - Max( ( MUM + MLU ),( MLU / CS ) ) ) ) ),( Min( Max( ( ( MUR + RRSe ) * ( RCSe - RMSe ) ),( Min( RMSe ,MLU ) * Min( MUC ,RMSe ) ) ) ,Max( ( ( DS / RRSe ) * ( CS - DS ) ),( Min( MUM ,MUR ) + ( MUM - CS ) ) ) ) + ( ( ( ( MUC * MUR ) + ( RRSe - RMSe ) ) * Min( ( RCSe / MUC ) ,( RMSe - MUC ) ) ) - ( ( ( MUM + RCSe ) + Max( MUC,RCSe ) ) + Max( ( RMSe - RMSe ),( MUM - MUR ) ) ) ) ) ) - ( ( ( ( ( ( DS - RCSe ) + ( MLU * MUM ) ) * ( Max( CS,MUM ) - ( MUR - MLU ) ) ) - ( Max( ( MUR / MUC ),Max( RRSe,MUM ) ) - ( Min( RMSe ,MLU ) * Max( MUC,DS ) ) ) ) + Min( ( ( Max( MUC,MLU ) + ( RMSe + MUM ) ) / ( Max( CS,MLU ) * Max( MUM,CS ) ) ) ,Max( ( ( MLU - MLU ) / ( DS / MUM ) ),Max( Min( MUC ,MUM ),Min( CS ,CS ) ) ) ) ) - ( Min( ( Max( Max( RCSe,DS ),Max( MLU,MUM ) ) + ( Min( MUR ,MLU ) * ( RCSe + RRSe ) ) ) ,Min( Min( ( DS - DS ) ,( MUR - MUR ) ) ,( ( RRSe * RRSe ) / Max( CS,RMSe ) ) ) ) - ( Min( ( ( RMSe - RMSe ) / ( RRSe + RRSe ) ) ,Min( Min( DS ,MLU ) ,Min( DS ,RMSe ) ) ) + Max( ( Min( RRSe ,MLU ) + Min( CS ,RMSe ) ),( ( RRSe * RCSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.77174485616461}, {"determining": "( ( FirstVNF_RAM_Server / ( ( DDR * FirstVNF_CPU ) + ( CRS / DDR ) ) ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( Min( RMSe ,CS ) * DS ),RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( RRSe * DS ),RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,RMSe ) * ( Max( ( DS - DS ),Min( MUC ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ) )", "obj1": 0.1037344398340249, "obj2": 0.7738272717865934}, {"determining": "Min( ( ( MDR * Min( FirstVNF_CPU ,FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( Min( ( ( ( ( ( MLU * MUC ) * ( DS - RCSe ) ) + ( Min( MUC ,MLU ) + Max( RCSe,CS ) ) ) + ( ( ( RCSe - MLU ) - ( RCSe / MUM ) ) * Max( ( RMSe * MUM ),( MUM + MLU ) ) ) ) / Min( Min( ( ( RCSe * MUR ) + Min( MLU ,RMSe ) ) ,( ( RRSe / CS ) - ( MUR * RCSe ) ) ) ,( ( ( MUC + CS ) / ( CS / MUC ) ) / Min( Max( MUM,MUC ) ,( DS * MUR ) ) ) ) ) ,( Min( Max( Min( Max( CS,RCSe ) ,( RCSe / MUR ) ),Max( Min( RCSe ,MLU ),( MUR + RCSe ) ) ) ,( Max( ( MUR + RCSe ),( RMSe + RMSe ) ) * ( ( MUM / MUM ) - ( RRSe - MUR ) ) ) ) + Min( ( ( ( DS - RRSe ) - Min( MUR ,RCSe ) ) + ( ( MUR + DS ) / Max( RCSe,MUC ) ) ) ,( ( Min( MUM ,RRSe ) + Max( MLU,RRSe ) ) * ( ( RRSe * DS ) * ( DS - CS ) ) ) ) ) ),( Max( Max( ( Max( ( DS - DS ),Min( MUC ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ),( ( Min( MUM ,RMSe ) / ( RMSe - DS ) ) + ( Max( CS,RRSe ) * Max( RCSe,MUM ) ) ) ),( Min( ( ( MUM * DS ) / ( MLU / MLU ) ) ,( ( MUM / CS ) / ( CS - RRSe ) ) ) - ( Min( ( MLU + RMSe ) ,Max( RMSe,MLU ) ) / ( ( MUM / MUR ) + Min( MLU ,CS ) ) ) ) ) * ( ( Min( Min( Min( RRSe ,MUM ) ,( CS * MUM ) ) ,( Max( RMSe,DS ) - Min( MUC ,MUC ) ) ) * ( ( ( DS * MUC ) / ( DS + CS ) ) / ( ( DS / RCSe ) + ( MUM / MUR ) ) ) ) + ( ( Max( ( CS * MUR ),( MLU - DS ) ) * Max( Max( CS,RMSe ),Min( RRSe ,MLU ) ) ) / Max( Max( Min( RMSe ,CS ),( MUC * RCSe ) ),Min( Min( MUC ,MLU ) ,Min( RMSe ,MUC ) ) ) ) ) ) ) - ( Max( Max( Min( Max( ( ( DS * CS ) / ( CS - MUM ) ),( ( MLU / MUM ) * ( CS + DS ) ) ) ,( ( Max( RCSe,RMSe ) / ( CS - CS ) ) - ( ( RCSe - CS ) / Max( RRSe,RMSe ) ) ) ),Max( ( ( ( CS * MUM ) + ( DS * RRSe ) ) / ( Min( MUR ,CS ) / ( MUR + MUC ) ) ),( Max( Min( MUR ,DS ),Max( MUR,MUC ) ) - Max( ( MUM + MLU ),( MLU / CS ) ) ) ) ),( Min( Max( ( ( MUR + RRSe ) * ( RCSe - RMSe ) ),( Min( RMSe ,MLU ) * Min( MUC ,RMSe ) ) ) ,Max( ( ( DS / RRSe ) * ( CS - DS ) ),( Min( MUM ,MUR ) + ( MUM - CS ) ) ) ) + ( ( ( ( MUC * MUR ) + ( RRSe - RMSe ) ) * Min( ( RCSe / MUC ) ,( RMSe - MUC ) ) ) - ( ( ( MUM + RCSe ) + Max( MUC,RCSe ) ) + Max( ( RMSe - RMSe ),( MUM - MUR ) ) ) ) ) ) - ( ( ( ( ( ( DS - RCSe ) + ( MLU * MUM ) ) * ( Max( CS,MUM ) - ( MUR - MLU ) ) ) - ( Max( ( MUR / MUC ),Max( RRSe,MUM ) ) - ( Min( RMSe ,MLU ) * ( MUC * DS ) ) ) ) + Min( ( ( Max( MUC,MLU ) + ( RMSe + MUM ) ) / ( Max( CS,MLU ) * Max( MUM,CS ) ) ) ,Max( ( ( MLU - MLU ) / ( DS / MUM ) ),Max( Min( MUC ,MUM ),Min( CS ,CS ) ) ) ) ) - ( Min( ( Max( Max( RCSe,DS ),Max( MLU,MUM ) ) + ( Min( MUR ,MLU ) * ( RCSe + RRSe ) ) ) ,Min( Min( ( DS - DS ) ,( MUR - MUR ) ) ,( ( RRSe * RRSe ) / Max( CS,RMSe ) ) ) ) - ( Min( ( ( RMSe - RMSe ) / ( RRSe + RRSe ) ) ,Min( Min( DS ,MLU ) ,Min( DS ,RMSe ) ) ) + Max( ( Min( RRSe ,MLU ) + Min( CS ,RMSe ) ),( ( RRSe * RCSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.77174485616461}, {"determining": "Min( ( Max( MDR,( FirstVNF_CPU - FirstVNF_RAM ) ) + Max( Max( BR,BR ),( ARS - CRS ) ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - DS ) - RRSe ) - Max( Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ),RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "Min( ( ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "( ( FirstVNF_RAM_Server / ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( RRSe * DS ),RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) * Min( CRS ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - MLU ) - Max( DS,RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "Min( ( ( MDR * ( ( FirstVNF_RAM_Server / MRS ) - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( Min( ( ( ( ( ( MLU * MUC ) * ( DS - RCSe ) ) + ( Min( MUC ,MLU ) + Max( RCSe,CS ) ) ) + ( ( ( RCSe - MLU ) - ( RCSe / MUM ) ) * Max( ( RMSe * MUM ),( MUM + MLU ) ) ) ) / Min( Min( ( ( RCSe * MUR ) + Min( MLU ,RMSe ) ) ,( ( RRSe / CS ) - ( MUR * RCSe ) ) ) ,( ( ( MUC + CS ) / ( CS / MUC ) ) / Min( Max( MUM,MUC ) ,( DS * MUR ) ) ) ) ) ,( Min( Max( Min( Max( CS,RCSe ) ,( RCSe / MUR ) ),Max( Min( RCSe ,MLU ),( MUR + RCSe ) ) ) ,( Max( ( MUR + RCSe ),( RMSe + RMSe ) ) * ( ( MUM / MUM ) - ( RRSe - MUR ) ) ) ) + Min( ( ( ( DS - RRSe ) - Min( MUR ,RCSe ) ) + ( ( MUR + DS ) / Max( RCSe,MUC ) ) ) ,( ( Min( MUM ,RRSe ) + Max( MLU,RRSe ) ) * ( ( RRSe * DS ) * ( DS - CS ) ) ) ) ) ),( Max( Max( ( Max( ( DS - DS ),Min( MUC ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ),( ( Min( MUM ,RMSe ) / ( RMSe - DS ) ) + ( Max( CS,RRSe ) * Max( RCSe,MUM ) ) ) ),( Min( ( ( MUM * DS ) / ( MLU / MLU ) ) ,( ( MUM / CS ) / ( CS - RRSe ) ) ) - ( Min( ( MLU + RMSe ) ,Max( RMSe,MLU ) ) / ( ( MUM / MUR ) + Min( MLU ,CS ) ) ) ) ) * ( ( Min( Min( Min( RRSe ,MUM ) ,( CS * MUM ) ) ,( Max( RMSe,DS ) - Min( MUC ,MUC ) ) ) * ( ( ( DS * MUC ) / ( DS + CS ) ) / ( ( DS / RCSe ) + ( MUM / MUR ) ) ) ) + ( ( Max( ( CS * MUR ),( MLU - DS ) ) * Max( Max( CS,RMSe ),Min( RRSe ,MLU ) ) ) / Max( Max( Min( RMSe ,CS ),( MUC * RCSe ) ),Min( Min( MUC ,MLU ) ,Min( RMSe ,MUC ) ) ) ) ) ) ) - ( Max( Max( Min( Max( ( ( DS * CS ) / ( CS - MUM ) ),( ( MLU / MUM ) * ( CS + DS ) ) ) ,( ( Max( RCSe,RMSe ) / ( CS - CS ) ) - ( ( RCSe - CS ) / Max( RRSe,RMSe ) ) ) ),Max( ( ( ( CS * MUM ) + ( DS * RRSe ) ) / ( Min( MUR ,CS ) / ( MUR + MUC ) ) ),( Max( Min( MUR ,DS ),Max( MUR,MUC ) ) - Max( ( MUM + MLU ),( MLU / CS ) ) ) ) ),( Min( Max( ( ( MUR + RRSe ) * ( RCSe - RMSe ) ),( Min( RMSe ,MLU ) * Min( MUC ,RMSe ) ) ) ,Max( ( ( CS / RRSe ) * ( CS - DS ) ),( Min( MUM ,MUR ) + ( MUM - CS ) ) ) ) + ( ( ( ( MUC * MUR ) + ( RRSe - RMSe ) ) * Min( ( RCSe / MUC ) ,( RMSe - MUC ) ) ) - ( ( ( MUM + RCSe ) + Max( MUC,RCSe ) ) + Max( ( RMSe - RMSe ),( MUM - MUR ) ) ) ) ) ) - ( ( ( ( ( ( DS - RCSe ) + ( MLU * MUM ) ) * ( Max( CS,MUM ) - ( MUR - MLU ) ) ) - ( Max( ( MUR / MUC ),Max( RRSe,MUM ) ) - ( Min( RMSe ,MLU ) * Max( MUC,DS ) ) ) ) + Min( ( ( Max( MUC,MLU ) + ( RMSe + MUM ) ) / ( Max( CS,MLU ) * Max( MUM,CS ) ) ) ,Max( ( ( MLU - MLU ) / ( DS / MUM ) ),Max( Min( MUC ,MUM ),Min( CS ,CS ) ) ) ) ) - ( Min( ( Max( Max( RCSe,DS ),Max( MLU,MUM ) ) + ( Min( MUR ,MLU ) * ( RCSe + RRSe ) ) ) ,Min( Min( ( DS - DS ) ,( MUR - MUR ) ) ,( ( RRSe * RRSe ) / Max( CS,RMSe ) ) ) ) - ( Min( ( ( RMSe - RMSe ) / ( RRSe + RRSe ) ) ,Min( Min( DS ,MLU ) ,Min( DS ,RMSe ) ) ) + Max( ( Min( RRSe ,MLU ) + Min( CS ,RMSe ) ),( ( RRSe * RCSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.77174485616461}, {"determining": "Min( ( ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS - DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( Min( ( ( ( ( ( MLU * MUC ) * ( DS - RCSe ) ) + ( Min( MUC ,MLU ) + Max( RCSe,CS ) ) ) + ( ( ( RCSe - MLU ) - ( RCSe / MUR ) ) * Max( ( RMSe * MUM ),( MUM + MLU ) ) ) ) / Min( Min( ( ( RCSe * MUR ) + Min( MLU ,RMSe ) ) ,( ( RRSe / CS ) - ( MUR * RCSe ) ) ) ,( ( ( MUC + CS ) / ( CS / MUC ) ) / Min( Max( MUM,MUC ) ,( DS * MUR ) ) ) ) ) ,( Min( Max( Min( Max( CS,RCSe ) ,( RCSe / MUR ) ),Max( Min( RCSe ,MLU ),( MUR + RCSe ) ) ) ,( Max( ( MUR + RCSe ),( RMSe + RMSe ) ) * ( ( MUM / MUM ) - ( RRSe - MUR ) ) ) ) + Min( ( ( ( DS - RRSe ) - Min( MUR ,RCSe ) ) + ( ( MUR + DS ) / Max( RCSe,MUC ) ) ) ,( ( Min( MUM ,RRSe ) + Max( MLU,RRSe ) ) * ( ( RRSe * DS ) * ( DS - CS ) ) ) ) ) ),( Max( Max( ( Max( ( DS - DS ),Min( MUC ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ),( ( Min( MUM ,RMSe ) / ( RMSe - DS ) ) + ( Max( CS,RRSe ) * Max( RCSe,MUM ) ) ) ),( Min( ( ( MUM * DS ) / ( MLU / MLU ) ) ,( ( MUM / CS ) / ( CS - RRSe ) ) ) - ( Min( ( MLU + RMSe ) ,Max( RMSe,MLU ) ) / ( ( MUM / MUR ) + Min( MLU ,CS ) ) ) ) ) * ( ( Min( Min( Min( RRSe ,MUM ) ,( CS * MUM ) ) ,( Max( RMSe,DS ) - Min( MUC ,MUC ) ) ) * ( ( ( DS * MUC ) / ( DS + CS ) ) / ( ( DS / RCSe ) + ( MUM / MUR ) ) ) ) + ( ( Max( ( CS * MUR ),( MLU - DS ) ) * Max( Max( CS,RMSe ),Min( RRSe ,MLU ) ) ) / Max( Max( Min( RMSe ,CS ),( MUC * RCSe ) ),Min( Min( MUC ,MLU ) ,Min( RMSe ,MUC ) ) ) ) ) ) ) - ( Max( Max( Min( Max( ( ( DS * CS ) / ( CS - MUM ) ),( ( MLU / MUM ) * ( CS + DS ) ) ) ,( ( Max( RCSe,RMSe ) / ( CS - CS ) ) - ( ( RCSe - CS ) / Max( RRSe,RMSe ) ) ) ),Max( ( ( ( CS * MUM ) + ( DS * RRSe ) ) / ( Min( MUR ,CS ) / ( MUR + MUC ) ) ),( Max( Min( MUR ,DS ),Max( MUR,MUC ) ) - Max( ( MUM + MLU ),( MLU / CS ) ) ) ) ),( Min( Max( ( ( MUR + RRSe ) * ( RCSe - RMSe ) ),( Min( RMSe ,MLU ) * Min( MUC ,RMSe ) ) ) ,Max( ( ( DS / RRSe ) * ( CS - DS ) ),( Min( MUM ,MUR ) + ( MUM - CS ) ) ) ) + ( ( ( ( MUC * MUR ) + ( RRSe - RMSe ) ) * Min( ( RCSe / MUC ) ,( RMSe - MUC ) ) ) - ( ( ( MUM + RCSe ) + Max( MUC,RCSe ) ) + Max( ( RMSe - RMSe ),( MUM - MUR ) ) ) ) ) ) - ( ( ( ( ( ( DS - RCSe ) + ( MLU * MUM ) ) * ( Max( CS,MUM ) - ( MUR - MLU ) ) ) - ( Max( ( MUR / MUC ),Max( RRSe,MUM ) ) - ( Min( RMSe ,MLU ) * Max( MUC,DS ) ) ) ) + Min( ( ( Max( MUC,MLU ) + ( RMSe + MUM ) ) / ( Max( CS,MLU ) * Max( MUM,CS ) ) ) ,Max( ( ( MLU - MLU ) / ( DS / MUM ) ),Max( Min( MUC ,MUM ),Min( CS ,CS ) ) ) ) ) - ( Min( ( Max( Max( RCSe,DS ),Max( MLU,MUM ) ) + ( Min( MUR ,MLU ) * ( RCSe + RRSe ) ) ) ,Min( Min( ( DS - DS ) ,( MUR - MUR ) ) ,( ( RRSe * RRSe ) / Max( CS,RMSe ) ) ) ) - ( Min( ( ( RMSe - RMSe ) / ( RRSe + RRSe ) ) ,Min( Min( DS ,MLU ) ,Min( DS ,RMSe ) ) ) + Max( ( Min( RRSe ,MLU ) + Min( CS ,RMSe ) ),( ( RRSe * RCSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.77174485616461}, {"determining": "Min( ( ( MDR * ( ( AMS / MRS ) - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( Min( ( ( ( ( ( MLU * MUC ) * ( DS - RCSe ) ) + ( Min( MUC ,MLU ) + Max( RCSe,CS ) ) ) + ( ( ( RCSe - MLU ) - ( RCSe / MUM ) ) * Max( ( RMSe * MUM ),( MUM + MLU ) ) ) ) / Min( Min( ( ( RCSe * MUR ) + Min( MLU ,RMSe ) ) ,( ( RRSe / CS ) - ( MUR * RCSe ) ) ) ,( ( ( MUC + CS ) / ( CS / MUC ) ) / Min( Max( MUM,MUC ) ,( DS * MUR ) ) ) ) ) ,( Min( Max( Min( Max( CS,RCSe ) ,( RCSe / MUR ) ),Max( Min( RCSe ,MLU ),( MUR + RCSe ) ) ) ,( Max( ( MUR + RCSe ),( RMSe + RMSe ) ) * ( ( MUM / MUM ) - ( RRSe - MUR ) ) ) ) + Min( ( ( ( DS - RRSe ) - Min( MUR ,RCSe ) ) + ( ( MUR + DS ) / Max( RCSe,MUC ) ) ) ,( ( Min( MUM ,RRSe ) + Max( MLU,RRSe ) ) * ( ( RRSe * DS ) * ( RMSe - CS ) ) ) ) ) ),( Max( Max( ( Max( ( DS - DS ),Min( MUC ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ),( ( Min( MUM ,RMSe ) / ( RMSe - DS ) ) + ( Max( CS,RRSe ) * Max( RCSe,MUM ) ) ) ),( Min( ( ( MUM * DS ) / ( MLU / MLU ) ) ,( ( MUM / CS ) / ( CS - RRSe ) ) ) - ( Min( ( MLU + RMSe ) ,Max( RMSe,MLU ) ) / ( ( MUM / MUR ) + Min( MLU ,CS ) ) ) ) ) * ( ( Min( Min( Min( RRSe ,MUM ) ,( CS * MUM ) ) ,( Max( RMSe,DS ) - Min( MUC ,MUC ) ) ) * ( ( ( DS * MUC ) / ( DS + CS ) ) / ( ( DS / RCSe ) + ( MUM / MUR ) ) ) ) + ( ( Max( ( CS * MUR ),( MLU - DS ) ) * Max( Max( CS,RMSe ),Min( RRSe ,MLU ) ) ) / Max( Max( Min( RMSe ,CS ),( MUC * RCSe ) ),Min( Min( MUC ,MLU ) ,Min( RMSe ,MUC ) ) ) ) ) ) ) - ( Max( Max( Min( Max( ( ( DS * CS ) / ( CS - MUM ) ),( ( MLU / MUM ) * ( CS + DS ) ) ) ,( ( Max( RCSe,RMSe ) / ( CS - CS ) ) - ( ( RCSe - CS ) / Max( RRSe,RMSe ) ) ) ),Max( ( ( ( CS * MUM ) + ( DS * RRSe ) ) / ( Min( MUR ,CS ) / ( MUR + MUC ) ) ),( Max( Min( MUR ,DS ),Max( MUR,MUC ) ) - Max( ( MUM + MLU ),( MLU / CS ) ) ) ) ),( Min( Max( ( ( MUR + RRSe ) * ( RCSe - RMSe ) ),( Min( RMSe ,MLU ) * Min( MUC ,RMSe ) ) ) ,Max( ( ( CS / RRSe ) * ( CS - DS ) ),( Min( MUM ,MUR ) + ( MUM - CS ) ) ) ) + ( ( ( ( MUC * MUR ) + ( RRSe - RMSe ) ) * Min( ( RCSe / MUC ) ,( RMSe - MUC ) ) ) - ( ( ( MUM + RCSe ) + Max( MUC,RCSe ) ) + Max( ( RMSe - RMSe ),( MUM - MUR ) ) ) ) ) ) - ( ( ( ( ( ( DS - RCSe ) + ( MLU * MUM ) ) * ( Max( CS,MUM ) - ( MUR - MLU ) ) ) - ( Max( ( MUR / MUC ),Max( RRSe,MUM ) ) - ( Min( RMSe ,MLU ) * Max( MUC,DS ) ) ) ) + Min( ( ( Max( MUC,MLU ) + ( RMSe + MUM ) ) / ( Max( CS,MLU ) * Max( MUM,CS ) ) ) ,Max( ( ( MLU - MLU ) / ( DS / MUM ) ),Max( Min( MUC ,MUM ),Min( CS ,CS ) ) ) ) ) - ( Min( ( Max( Max( RCSe,DS ),Max( MLU,MUM ) ) + ( Min( MUR ,MLU ) * ( RCSe + RRSe ) ) ) ,Min( Min( ( DS - DS ) ,( MUR - MUR ) ) ,( ( RRSe * RRSe ) / Max( CS,RMSe ) ) ) ) - ( Min( ( ( RMSe - RMSe ) / ( RRSe + RRSe ) ) ,Min( Min( DS ,MLU ) ,Min( DS ,RMSe ) ) ) + Max( ( Min( RRSe ,MLU ) + Min( CS ,RMSe ) ),( ( RRSe * RCSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.77174485616461}, {"determining": "Min( ( ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( Min( ( ( ( ( ( MLU * MUC ) * ( DS - RCSe ) ) + ( Min( MUC ,MLU ) + Max( RCSe,CS ) ) ) + ( ( ( RCSe - MLU ) - ( RCSe / MUM ) ) * Max( ( RMSe * MUM ),( MUM + MLU ) ) ) ) / Min( Min( ( ( RCSe * MUR ) + Min( MLU ,RMSe ) ) ,( ( RRSe / CS ) - ( MUR * RCSe ) ) ) ,( ( ( MUC + CS ) / ( CS / MUC ) ) / Min( Max( MUM,MUC ) ,( DS * MUR ) ) ) ) ) ,( Min( Max( Min( Max( CS,RCSe ) ,( RCSe / MUR ) ),Max( Min( RCSe ,MLU ),( MUR + RCSe ) ) ) ,( Max( ( MUR + RCSe ),( RMSe + RMSe ) ) * ( ( MUM / MUM ) - ( RRSe - MUR ) ) ) ) + Min( ( ( ( DS - RRSe ) - Min( MUR ,RCSe ) ) + ( ( MUR + DS ) / Max( RCSe,MUC ) ) ) ,( ( Min( MUM ,RRSe ) + Max( MLU,RRSe ) ) * ( ( RRSe * DS ) * ( DS - CS ) ) ) ) ) ),( Max( Max( ( Max( ( DS - DS ),Min( MUC ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ),( ( Min( MUM ,RMSe ) / ( RMSe - DS ) ) + ( Max( CS,RRSe ) * Max( RCSe,MUM ) ) ) ),( Min( ( ( MUM * DS ) / ( MLU / MLU ) ) ,( ( MUM / CS ) / ( CS - RRSe ) ) ) - ( Min( ( MLU + RMSe ) ,Max( RMSe,MLU ) ) / ( ( MUM / MUR ) + Min( MLU ,CS ) ) ) ) ) * ( ( Min( Min( Min( RRSe ,MUM ) ,( CS * MUM ) ) ,( Max( RMSe,DS ) - Min( MUC ,MUC ) ) ) * ( ( ( DS * MUC ) / ( DS + CS ) ) / ( ( DS / RCSe ) + ( MUM / MUR ) ) ) ) + ( ( Max( ( CS * MUR ),( MLU - DS ) ) * Max( Max( CS,RMSe ),Min( RRSe ,MLU ) ) ) / Max( Max( Min( RMSe ,CS ),( MUC * RCSe ) ),Min( Min( MUC ,MLU ) ,Min( RMSe ,MUC ) ) ) ) ) ) ) - ( Max( Max( Min( Max( ( ( DS * CS ) / ( CS - MUM ) ),( ( MLU / MUM ) * ( CS + DS ) ) ) ,( ( Max( RCSe,RMSe ) / ( CS - CS ) ) - ( ( RCSe - CS ) / Max( RRSe,RMSe ) ) ) ),Max( ( ( ( CS * MUM ) + ( DS * RRSe ) ) / ( Min( MUR ,CS ) / ( MUR + MUC ) ) ),( Max( Min( MUR ,DS ),Max( MUR,MUC ) ) - Max( ( MUM + MLU ),( MLU / CS ) ) ) ) ),( Min( Max( ( ( MUR + RRSe ) * ( RCSe - RMSe ) ),( Min( RMSe ,MLU ) * Min( MUC ,RMSe ) ) ) ,Max( ( ( DS / RRSe ) * ( CS - DS ) ),( Min( MUM ,MUR ) + ( MUM - CS ) ) ) ) + ( ( ( ( MUC * MUR ) + ( RRSe - RMSe ) ) * Min( ( RCSe / MUC ) ,( RMSe - MUC ) ) ) - ( ( ( MUM + RCSe ) + Max( MUC,RCSe ) ) + Max( ( RMSe - RMSe ),( MUM - MUR ) ) ) ) ) ) - ( ( ( ( ( ( DS - RCSe ) + ( MLU * MUM ) ) * ( Max( CS,MUM ) - ( MUR - MLU ) ) ) - ( Max( ( MUR / MUC ),Max( RRSe,MUM ) ) - ( Min( RMSe ,MLU ) * Max( MUC,DS ) ) ) ) + Min( ( ( Max( MUC,MLU ) + ( RMSe + MUM ) ) / ( Max( CS,MLU ) * Max( MUM,CS ) ) ) ,Max( ( ( MLU - MLU ) / ( DS / MUM ) ),Max( Min( MUC ,MUM ),Min( CS ,CS ) ) ) ) ) - ( Min( ( Max( Max( RCSe,DS ),Max( MLU,MUM ) ) + ( Min( MUR ,MLU ) * ( RCSe + RRSe ) ) ) ,Min( Min( ( DS - DS ) ,( MUR - MUR ) ) ,( ( RRSe * RRSe ) / Max( CS,RMSe ) ) ) ) - ( Min( ( ( RMSe - RMSe ) / ( RRSe + RRSe ) ) ,Min( Min( DS ,MLU ) ,Min( DS ,RMSe ) ) ) + Max( ( Min( RRSe ,MLU ) + Min( CS ,RMSe ) ),( ( RRSe * RCSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.77174485616461}, {"determining": "( ( CRS / MRS ) + ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,RMSe ) * ( Max( ( DS - DS ),Min( ( ( MLU - CS ) - ( RRSe * DS ) ) ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ) )", "obj1": 0.1078838174273859, "obj2": 0.7725640014747847}, {"determining": "( ( DDR / MRS ) + Max( Max( BR,( FirstVNF_Mem_Server + ( FirstVNF_CPU + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( BR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) ) ),( ARS - CRS ) ) )", "choosing": "( Max( Min( ( ( ( ( ( MLU * MUC ) * ( DS - RCSe ) ) + ( Min( MUC ,MLU ) + Max( RCSe,CS ) ) ) + ( ( ( RCSe - MLU ) - ( RCSe / MUM ) ) * Max( ( RMSe * MUM ),( MUM + MLU ) ) ) ) / Min( Min( ( ( RCSe * MUR ) + Min( MLU ,RMSe ) ) ,( ( RRSe / CS ) - ( MUR * RCSe ) ) ) ,( ( ( MUC + CS ) / ( CS / MUC ) ) / Min( Max( MUM,MUC ) ,( DS * MUR ) ) ) ) ) ,( Min( Max( Min( Max( CS,RCSe ) ,( RCSe / MUR ) ),Max( Min( RCSe ,MLU ),( MUR + RCSe ) ) ) ,( Max( ( MUR + RCSe ),( RMSe + RMSe ) ) * ( ( MUM / MUM ) - ( RRSe - MUR ) ) ) ) + Min( ( ( ( DS - RRSe ) - Min( MUR ,RCSe ) ) + ( ( MUR + DS ) / Max( RCSe,MUC ) ) ) ,( ( Min( MUM ,RRSe ) + Max( MLU,RRSe ) ) * ( ( RRSe * DS ) * ( DS - CS ) ) ) ) ) ),( Max( Max( ( Max( ( DS - DS ),Min( MUC ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ),( ( Min( MUM ,RMSe ) / ( RMSe - DS ) ) + ( Max( CS,RRSe ) * Max( RCSe,MUM ) ) ) ),( Min( ( ( MUM * DS ) / ( MLU / MLU ) ) ,( ( MUM / CS ) / ( CS - RRSe ) ) ) - ( Min( ( MLU + RMSe ) ,Max( RMSe,MLU ) ) / ( ( MUM / MUR ) + Min( MLU ,CS ) ) ) ) ) * ( ( Min( Min( Min( RRSe ,MUM ) ,( CS * MUM ) ) ,( Max( RMSe,DS ) - Min( MUC ,MUC ) ) ) * ( ( ( DS * MUC ) / ( DS + CS ) ) / ( ( DS / RCSe ) + ( MUM / MUR ) ) ) ) + ( ( Max( ( CS * MUR ),( MLU - DS ) ) * Max( Max( CS,RMSe ),Min( RRSe ,MLU ) ) ) / Max( Max( Min( RMSe ,CS ),( MUC * RCSe ) ),Min( Min( MUC ,MLU ) ,Min( RMSe ,MUC ) ) ) ) ) ) ) - ( Max( Max( Min( Max( ( ( DS * CS ) / ( CS - MUM ) ),( ( MLU / MUM ) * ( CS + DS ) ) ) ,( ( Max( RCSe,RMSe ) / ( CS - CS ) ) - ( ( RCSe - CS ) / Max( RRSe,RMSe ) ) ) ),Max( ( ( ( CS * MUM ) + ( DS * RRSe ) ) / ( Min( MUR ,CS ) + ( MUR + MUC ) ) ),( Max( Min( MUR ,DS ),Max( MUR,MUC ) ) - Max( Max( MUM,MLU ),( MLU / CS ) ) ) ) ),( Min( Max( ( ( MUR + RRSe ) * ( RCSe - RMSe ) ),( Min( RMSe ,MLU ) * Min( MUC ,RMSe ) ) ) ,Max( ( ( DS / RRSe ) * ( CS - DS ) ),( Min( MUM ,MUR ) + ( MUM - CS ) ) ) ) + ( ( ( ( MUC * MUR ) + ( RRSe - RMSe ) ) * Min( ( RCSe / MUC ) ,( RMSe - MUC ) ) ) - ( ( ( MUM + RCSe ) + Max( MUC,RCSe ) ) + Max( ( RMSe - RMSe ),( MUM - MUR ) ) ) ) ) ) - ( ( ( ( ( ( DS - RCSe ) + ( MLU * MUM ) ) * ( Max( CS,MUM ) - ( MUR - MLU ) ) ) - ( Max( ( MUR / MUC ),Max( RRSe,MUM ) ) - ( Min( RMSe ,MLU ) * Max( MUC,DS ) ) ) ) + Min( ( ( Max( MUC,MLU ) + ( RMSe + MUM ) ) / ( Max( CS,MLU ) * Max( MUM,CS ) ) ) ,Max( ( ( MLU - MLU ) / ( DS / MUM ) ),Max( Min( MUC ,MUM ),Min( CS ,CS ) ) ) ) ) - ( Min( ( Max( Max( RCSe,DS ),Max( MLU,MUM ) ) + ( Min( MUR ,MLU ) * ( RCSe + RRSe ) ) ) ,Min( Min( ( DS - DS ) ,( MUR - MUR ) ) ,( ( RRSe * RRSe ) / Max( CS,RMSe ) ) ) ) - ( Min( ( ( RMSe - RMSe ) / ( RRSe + RRSe ) ) ,Min( Min( DS ,MLU ) ,Min( DS ,RMSe ) ) ) + Max( ( Min( RRSe ,MLU ) + Min( CS ,RMSe ) ),( ( RRSe * RCSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.77174485616461}, {"determining": "Min( ( ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( Min( ( ( ( ( ( MLU * MUC ) * ( DS - RCSe ) ) + ( Min( MUC ,MLU ) + Max( RCSe,CS ) ) ) + ( ( ( RCSe - MLU ) - ( RCSe / MUM ) ) * Max( ( RMSe * MUM ),( MUM + MLU ) ) ) ) / Min( Min( ( ( RCSe * MUR ) + Min( MLU ,RMSe ) ) ,( ( RRSe / CS ) - ( MUR * RCSe ) ) ) ,( ( ( MUC + CS ) / ( CS / MUC ) ) / Min( Max( MUM,MUC ) ,( DS * MUR ) ) ) ) ) ,( Min( Max( Min( Max( CS,RCSe ) ,( RCSe / MUR ) ),Max( Min( RCSe ,MLU ),( MUR + RCSe ) ) ) ,( Max( ( MUR + RCSe ),( RMSe + RMSe ) ) * ( ( MUM / MUM ) - ( RRSe - MUR ) ) ) ) + Min( ( ( ( DS - RRSe ) - Min( MUR ,RCSe ) ) + ( ( MUR + DS ) / Max( RCSe,MUC ) ) ) ,( ( Min( MUM ,RRSe ) + Max( MLU,RRSe ) ) * ( ( RRSe * DS ) * ( DS - CS ) ) ) ) ) ),( Max( Max( ( Max( ( DS - DS ),Min( MUC ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ),( ( Min( MUM ,RMSe ) / ( RMSe - DS ) ) + ( Max( CS,RRSe ) * Max( RCSe,MUM ) ) ) ),( Min( ( ( MUM * DS ) / ( MLU / MLU ) ) ,( ( MUM / CS ) / ( CS - RRSe ) ) ) - ( Min( ( MLU + RMSe ) ,Max( RMSe,MLU ) ) / ( ( MUM / MUR ) + Min( MLU ,CS ) ) ) ) ) * ( ( Min( Min( Min( RRSe ,MUM ) ,( CS * MUM ) ) ,( Max( RMSe,DS ) - Min( MUC ,MUC ) ) ) * ( ( ( DS * MUC ) / ( DS + CS ) ) / ( ( DS / RCSe ) + ( MUM / MUR ) ) ) ) + ( ( Max( ( CS * MUR ),( MLU - DS ) ) * Max( Max( CS,RMSe ),Min( RRSe ,MLU ) ) ) / Max( Max( Min( RMSe ,CS ),( MUC * RCSe ) ),Min( Min( MUC ,MLU ) ,Min( RMSe ,MUC ) ) ) ) ) ) ) - ( Max( Max( Min( Max( ( ( DS * CS ) / ( CS - MUM ) ),( ( MLU / MUM ) * ( CS + DS ) ) ) ,( ( Max( RCSe,RMSe ) / ( CS - CS ) ) - ( ( RCSe - CS ) / Max( RRSe,RMSe ) ) ) ),Max( ( ( ( CS * MUM ) + ( DS * RRSe ) ) / ( Min( MUR ,CS ) / ( MUR + MUC ) ) ),( Max( Min( MUR ,DS ),Max( MUR,MUC ) ) - Max( ( MUM + MLU ),( MLU / CS ) ) ) ) ),( Min( Max( ( ( MUR + RRSe ) * ( RCSe - RMSe ) ),( Min( RMSe ,MLU ) * Min( MUC ,RMSe ) ) ) ,Max( ( ( DS / RRSe ) * ( CS - DS ) ),( Min( MUM ,MUR ) + ( MUM - CS ) ) ) ) + ( ( ( ( MUC * MUR ) + ( RRSe - RMSe ) ) * Min( ( RCSe / MUC ) ,( RMSe - MUC ) ) ) - ( ( ( MUM + RCSe ) + Max( MUC,RCSe ) ) + Max( ( RMSe - RMSe ),( MUM - MUR ) ) ) ) ) ) - ( ( ( ( ( ( DS - RCSe ) + ( MLU * MUM ) ) * ( Max( CS,MUM ) - ( MUR - MLU ) ) ) - ( Max( ( MUR / MUC ),Max( RRSe,MUM ) ) - ( Min( RMSe ,MLU ) * Max( MUC,DS ) ) ) ) + Min( ( ( Max( MUC,MLU ) + ( RMSe + MUM ) ) / ( Max( CS,MLU ) * Max( MUM,CS ) ) ) ,Max( ( ( MLU - MLU ) / ( DS / MUM ) ),Max( Min( MUC ,MUM ),Min( CS ,CS ) ) ) ) ) - ( Min( ( Max( Max( RCSe,DS ),Max( MLU,MUM ) ) + ( Min( MUR ,MLU ) * ( RCSe + RRSe ) ) ) ,Min( Min( ( DS - DS ) ,( MUR - MUR ) ) ,( ( RRSe * RRSe ) / Max( CS,RMSe ) ) ) ) - ( Min( ( ( RMSe - RMSe ) / ( RRSe + RRSe ) ) ,Min( Min( DS ,MLU ) ,Min( DS ,RMSe ) ) ) + Max( ( Min( RRSe ,MLU ) + Min( CS ,RMSe ) ),( ( RRSe * RCSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.77174485616461}, {"determining": "Min( ( ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,Min( FirstVNF_CPU ,DDR ) )", "choosing": "( Max( Min( ( ( ( ( ( MLU * MUC ) * ( DS - RCSe ) ) + ( Min( MUC ,MLU ) + Max( RCSe,CS ) ) ) + ( ( ( RCSe - MLU ) - ( RCSe / MUM ) ) * Max( ( RMSe * MUM ),( MUM + MLU ) ) ) ) / Min( Min( ( ( RCSe * MUR ) + Min( MLU ,RMSe ) ) ,( ( RRSe / CS ) - ( MUR * RCSe ) ) ) ,( ( ( MUC + CS ) / ( CS / MUC ) ) / Min( Max( MUM,MUC ) ,( DS * MUR ) ) ) ) ) ,( Min( Max( Min( Max( CS,RCSe ) ,( RCSe / MUR ) ),Max( Min( RCSe ,MLU ),( MUR + RCSe ) ) ) ,( Max( ( MUR + RCSe ),( RMSe + RMSe ) ) * ( ( MUM / MUM ) - ( RRSe - MUR ) ) ) ) + Min( ( ( ( DS - RRSe ) - Min( MUR ,RCSe ) ) + ( ( MUR + DS ) / Max( RCSe,MUC ) ) ) ,( ( Min( MUM ,RRSe ) + Max( MLU,RRSe ) ) * ( ( RRSe * DS ) * ( DS - CS ) ) ) ) ) ),( Max( Max( ( Max( ( DS - DS ),Min( MUC ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ),( ( Min( MUM ,RMSe ) / ( RMSe - DS ) ) + ( Max( CS,RRSe ) * Max( RCSe,MUM ) ) ) ),( Min( ( ( MUM * DS ) / ( MLU / MLU ) ) ,( ( MUM / CS ) / ( CS - RRSe ) ) ) - ( Min( ( MLU + RMSe ) ,Max( RMSe,MLU ) ) / ( ( MUM / MUR ) + Min( MLU ,CS ) ) ) ) ) * ( ( Min( Min( Min( RRSe ,MUM ) ,( CS * MUM ) ) ,( Max( RMSe,DS ) - Min( MUC ,MUC ) ) ) * ( ( ( DS * MUC ) / ( DS + CS ) ) / ( ( DS / RCSe ) + ( MUM / MUR ) ) ) ) + ( ( Max( ( CS * MUR ),( MLU - DS ) ) * Max( Max( CS,RMSe ),Min( RRSe ,MLU ) ) ) / Max( Max( Min( RMSe ,CS ),( MUC * RCSe ) ),Min( Min( MUC ,MLU ) ,Min( RMSe ,MUC ) ) ) ) ) ) ) - ( Max( Max( Min( Max( ( ( DS * CS ) / ( CS - MUM ) ),( ( MLU / MUM ) * ( CS + DS ) ) ) ,( ( Max( RCSe,RMSe ) / ( CS - CS ) ) - ( ( RCSe - CS ) / Max( RRSe,RMSe ) ) ) ),Max( ( ( ( CS * MUM ) + ( DS * RRSe ) ) / ( Min( MUR ,CS ) / ( MUR + MUC ) ) ),( Max( Max( MUR,DS ),Max( MUR,MUC ) ) - Max( ( MUM + MLU ),( MLU / CS ) ) ) ) ),( Min( Max( ( ( MUR + RRSe ) * ( RCSe - RMSe ) ),( Min( RMSe ,MLU ) * Min( MUC ,RMSe ) ) ) ,Max( ( ( DS / RRSe ) * ( CS - DS ) ),( Min( MUM ,MUR ) + ( MUM - CS ) ) ) ) + ( ( ( ( MUC * MUR ) + ( RRSe - RMSe ) ) * Min( ( RCSe / MUC ) ,( RMSe - MUC ) ) ) - ( ( ( MUM + RCSe ) + Max( MUC,RCSe ) ) + Max( ( RMSe - RMSe ),( MUM - MUR ) ) ) ) ) ) - ( ( ( ( ( ( DS - RCSe ) + ( MLU * MUM ) ) * ( Max( CS,MUM ) - ( MUR - MLU ) ) ) - ( Max( ( MUR / MUC ),Max( RRSe,MUM ) ) - ( Min( RMSe ,MLU ) * Max( MUC,DS ) ) ) ) + Min( ( ( Max( MUC,MLU ) + ( RMSe + MUM ) ) / ( Max( CS,MLU ) * Max( MUM,CS ) ) ) ,Max( ( ( MLU - MLU ) / ( DS / MUM ) ),Max( Min( MUC ,MUM ),Min( CS ,CS ) ) ) ) ) - ( Min( ( Max( Max( RCSe,DS ),Max( MLU,MUM ) ) + ( Min( MUR ,MLU ) * ( RCSe + RRSe ) ) ) ,Min( Min( ( DS - DS ) ,( MUR - MUR ) ) ,( ( RRSe * RRSe ) / Max( CS,RMSe ) ) ) ) - ( Min( ( ( RMSe - RMSe ) / ( RRSe + RRSe ) ) ,Min( Min( DS ,MLU ) ,Min( DS ,RMSe ) ) ) + Max( ( Min( RRSe ,MLU ) + Min( CS ,RMSe ) ),( ( RRSe * RCSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.77174485616461}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) )", "choosing": "( Max( Min( ( ( ( ( ( MLU * MUC ) * ( DS - RCSe ) ) + ( Min( MUC ,MLU ) + Max( RCSe,CS ) ) ) + ( ( ( RCSe - MLU ) - ( RCSe / MUR ) ) * Max( ( RMSe * MUM ),( MUM + MLU ) ) ) ) / Min( Min( ( ( RCSe * MUR ) + Min( MLU ,RMSe ) ) ,( ( RRSe / CS ) - ( MUR * RCSe ) ) ) ,( ( ( MUC + CS ) / ( CS / MUC ) ) / Min( Max( MUM,MUC ) ,( DS * MUR ) ) ) ) ) ,( Min( Max( Min( Max( CS,RCSe ) ,( RCSe / MUR ) ),Max( Min( RCSe ,MLU ),( MUR + RCSe ) ) ) ,( Max( ( MUR + RCSe ),( RMSe + RMSe ) ) * ( ( MUM / MUM ) - ( RRSe - MUR ) ) ) ) + Min( ( ( ( DS - RRSe ) - Min( MUR ,RCSe ) ) + ( ( MUR + DS ) / Max( RCSe,MUC ) ) ) ,( ( Min( MUM ,RRSe ) + Max( MLU,RRSe ) ) * ( ( RRSe * DS ) * ( DS - CS ) ) ) ) ) ),( Max( Max( ( Max( ( DS - DS ),Min( MUC ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ),( ( Min( MUM ,RMSe ) / ( RMSe - DS ) ) + ( Max( CS,RRSe ) * Max( RCSe,MUM ) ) ) ),( Min( ( ( MUM * DS ) / ( MLU / MLU ) ) ,( ( MUM / CS ) / ( CS - RRSe ) ) ) - ( Min( ( MLU + RMSe ) ,Max( RMSe,MLU ) ) / ( ( MUM / MUR ) + Min( MLU ,CS ) ) ) ) ) * ( ( Min( Min( Min( RRSe ,MUM ) ,( CS * MUM ) ) ,( Max( RMSe,DS ) - Min( MUC ,MUC ) ) ) * ( ( ( DS * MUC ) / ( DS + CS ) ) / ( ( DS / RCSe ) + ( MUM / MUR ) ) ) ) + ( ( Max( ( CS * MUR ),( MLU - DS ) ) * Max( Max( CS,RMSe ),Min( RRSe ,MLU ) ) ) / Max( Max( Min( RMSe ,CS ),( MUC * RCSe ) ),Min( Min( MUC ,MLU ) ,Min( RMSe ,MUC ) ) ) ) ) ) ) - ( Max( Max( Min( Max( ( ( DS * CS ) / ( CS - MUM ) ),( ( MLU / MUM ) * ( CS + DS ) ) ) ,( ( Max( RCSe,RMSe ) / ( CS - CS ) ) - ( ( RCSe - CS ) / Max( RRSe,RMSe ) ) ) ),Max( ( ( ( CS * MUM ) + ( DS * RRSe ) ) / ( Min( MUR ,CS ) / ( MUR + MUC ) ) ),( Max( Min( MUR ,DS ),Max( MUR,MUC ) ) - Max( ( MUM + MLU ),( MLU / CS ) ) ) ) ),( Min( Max( ( ( MUR + RRSe ) * ( RCSe - RMSe ) ),( Min( RMSe ,MLU ) * Min( MUC ,RMSe ) ) ) ,Max( ( ( DS / RRSe ) * ( CS - DS ) ),( Min( MUM ,MUR ) + ( MUM - CS ) ) ) ) + ( ( ( ( MUC * MUR ) + ( RRSe - RMSe ) ) * Min( ( RCSe / MUC ) ,( RMSe - MUC ) ) ) - ( ( ( MUM + RCSe ) + Max( MUC,RCSe ) ) + Max( ( RMSe - RMSe ),( MUM - MUR ) ) ) ) ) ) - ( ( ( ( ( ( DS - RCSe ) + ( MLU * MUM ) ) * ( Max( CS,MUM ) - ( MUR - MLU ) ) ) - ( Max( ( MUR / MUC ),Max( RRSe,MUM ) ) - ( Min( RMSe ,MLU ) * Max( MUC,DS ) ) ) ) + Min( ( ( Max( MUC,MLU ) + ( RMSe + MUM ) ) / ( Max( CS,MLU ) * Max( MUM,CS ) ) ) ,Max( ( ( MLU - MLU ) / ( DS / MUM ) ),Max( Min( MUC ,MUM ),Min( CS ,CS ) ) ) ) ) - ( Min( ( Max( Max( RCSe,DS ),Max( MLU,MUM ) ) + ( Min( MUR ,MLU ) * ( RCSe + RRSe ) ) ) ,Min( Min( ( DS - DS ) ,( MUR - MUR ) ) ,( ( RRSe * RRSe ) / Max( CS,RMSe ) ) ) ) - ( Min( ( ( RMSe - RMSe ) / ( RRSe + RRSe ) ) ,Min( Min( DS ,MLU ) ,Min( DS ,RMSe ) ) ) + Max( ( Min( RRSe ,MLU ) + Min( CS ,RMSe ) ),( ( RRSe * RCSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.77174485616461}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) * Min( CRS ,DDR ) )", "choosing": "( Max( Min( ( ( ( ( ( MLU * MUC ) * ( DS - RCSe ) ) + ( Min( MUC ,MLU ) + Max( RCSe,CS ) ) ) + ( ( ( RCSe - MLU ) - ( RCSe / MUM ) ) * Max( ( RMSe * MUM ),( MUM + MLU ) ) ) ) / Min( Min( ( ( RCSe * MUR ) + Min( MLU ,RMSe ) ) ,( ( RRSe / CS ) - ( MUR * RCSe ) ) ) ,( ( ( MUC + CS ) / ( CS / MUC ) ) / Min( Max( MUM,MUC ) ,( DS * MUR ) ) ) ) ) ,( Min( Max( Min( Max( CS,RCSe ) ,( RCSe / MUR ) ),Max( Min( RCSe ,MLU ),( MUR + RCSe ) ) ) ,( Max( ( MUR + RCSe ),( RMSe + RMSe ) ) * ( ( MUM / MUM ) - ( RRSe - MUR ) ) ) ) + Min( ( ( ( DS - RRSe ) - Min( MUR ,RCSe ) ) + ( ( MUR + DS ) / Max( RCSe,MUC ) ) ) ,( ( Min( MUM ,RRSe ) + Max( MLU,RRSe ) ) * ( ( RRSe * DS ) * ( DS - CS ) ) ) ) ) ),( Max( Max( ( Max( ( DS - DS ),Min( MUC ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ),( ( Min( MUM ,RMSe ) / ( RMSe - DS ) ) + ( Max( CS,RRSe ) * Max( RCSe,MUM ) ) ) ),( Min( ( ( MUM * DS ) / ( MLU / MLU ) ) ,( ( MUM / CS ) / ( CS - RRSe ) ) ) - ( Min( ( MLU + RMSe ) ,Max( RMSe,MLU ) ) / ( ( MUM / MUR ) + Min( MLU ,CS ) ) ) ) ) * ( ( Min( Min( Min( RRSe ,MUM ) ,( CS * MUM ) ) ,( Max( RMSe,DS ) - Min( MUC ,MUC ) ) ) * ( ( ( DS * MUC ) / ( DS + CS ) ) / ( ( DS / RCSe ) + ( MUM / MUR ) ) ) ) + ( ( Max( ( CS * MUR ),( MLU - DS ) ) * Max( Max( CS,RMSe ),Min( RRSe ,MLU ) ) ) / Max( Max( Min( RMSe ,CS ),( MUC * RCSe ) ),Min( Min( MUC ,MLU ) ,Min( RMSe ,MUC ) ) ) ) ) ) ) - ( Max( Max( Min( Max( ( ( DS * CS ) / ( CS - MUM ) ),( ( MLU / MUM ) * ( CS + DS ) ) ) ,( ( Max( RCSe,RMSe ) / ( CS - CS ) ) - ( ( RCSe - CS ) / Max( RRSe,RMSe ) ) ) ),Max( ( ( ( CS * MUM ) + ( DS * RRSe ) ) / ( Min( MUR ,CS ) / ( MUR + MUC ) ) ),( Max( Min( MUR ,DS ),Max( MUR,MUC ) ) - Max( ( MUM + MLU ),( MLU / CS ) ) ) ) ),( Min( Max( ( ( MUR + RRSe ) * ( RCSe - RMSe ) ),( Min( RMSe ,MLU ) * Min( MUC ,RMSe ) ) ) ,Max( ( ( DS / RRSe ) * ( CS - DS ) ),( Min( MUM ,MUR ) + ( MUM - CS ) ) ) ) + ( ( ( ( MUC * MUR ) + ( RRSe - RMSe ) ) * Min( ( RCSe / MUC ) ,( RMSe - MUC ) ) ) - ( ( ( MUM + RCSe ) + Max( MUC,RCSe ) ) + Max( ( RMSe - RMSe ),( MUM - MUR ) ) ) ) ) ) - ( ( ( ( ( ( DS - RCSe ) + ( MLU * MUM ) ) * ( Max( CS,MUM ) - ( MUR - MLU ) ) ) - ( Max( ( MUR / MUC ),Max( RRSe,MUM ) ) - ( Min( RMSe ,MLU ) * Max( MUC,DS ) ) ) ) + Min( ( ( Max( MUC,MLU ) + ( RMSe + MUM ) ) / ( Max( CS,MLU ) * Max( MUM,CS ) ) ) ,Max( ( ( MLU - MLU ) / ( DS / MUM ) ),Max( Min( MUC ,MUM ),Min( CS ,CS ) ) ) ) ) - ( Min( ( Max( Max( RCSe,DS ),Max( MLU,MUM ) ) + ( Min( MUR ,MLU ) * ( RCSe + RRSe ) ) ) ,Min( Min( ( DS - DS ) ,( MUR - MUR ) ) ,( ( RRSe * RRSe ) / Max( CS,RMSe ) ) ) ) - ( Min( ( ( RMSe - RMSe ) / ( RRSe + RRSe ) ) ,Min( Min( DS ,MLU ) ,Min( DS ,RMSe ) ) ) + Max( ( Min( RRSe ,MLU ) + Min( CS ,RMSe ) ),( ( RRSe * RCSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.77174485616461}, {"determining": "( ( DDR / MRS ) + Max( Max( BR,( FirstVNF_Mem_Server + ( FirstVNF_CPU + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) - MRS ) ) ) ),( ARS - CRS ) ) )", "choosing": "( Max( Min( ( ( ( ( ( MLU * MUC ) * ( DS - RCSe ) ) + ( Min( MUC ,MLU ) + Max( RCSe,CS ) ) ) + ( ( ( RCSe - MLU ) - ( RCSe / MUM ) ) * Max( ( RMSe * MUM ),( MUM + MLU ) ) ) ) / Min( Min( ( ( RCSe * MUR ) + Min( MLU ,RMSe ) ) ,( ( RRSe / CS ) - ( MUR * RCSe ) ) ) ,( ( ( MUC + CS ) / ( CS / MUC ) ) / Min( Max( MUM,MUC ) ,( DS * MUR ) ) ) ) ) ,Max( ( RRSe * DS ),RRSe ) ),( Max( Max( ( Max( ( DS - DS ),Min( MUC ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ),( ( Min( MUM ,RMSe ) / ( RMSe - DS ) ) + ( Max( CS,RRSe ) * Max( RCSe,MUM ) ) ) ),( Min( ( ( MUM * DS ) / ( MLU / MLU ) ) ,( ( MUM / CS ) / ( CS - RRSe ) ) ) - ( Min( ( MLU + RMSe ) ,Max( RMSe,MLU ) ) / ( ( MUM / MUR ) + Min( MLU ,CS ) ) ) ) ) * ( ( Min( Min( Min( RRSe ,MUM ) ,( CS * MUM ) ) ,( Max( RMSe,DS ) - Min( MUC ,MUC ) ) ) * ( ( ( DS * MUC ) / ( DS + CS ) ) / ( ( DS / RCSe ) + ( MUM / MUR ) ) ) ) + ( ( Max( ( CS * MUR ),( MLU - DS ) ) * Max( Max( CS,RMSe ),Min( RRSe ,MLU ) ) ) / Max( Max( Min( RMSe ,CS ),( MUC * RCSe ) ),Min( Min( MUC ,MLU ) ,Min( RMSe ,MUC ) ) ) ) ) ) ) - ( Max( Max( Min( Max( ( ( DS * CS ) / ( CS - MUM ) ),( ( MLU / MUM ) * ( CS + DS ) ) ) ,( ( Max( RCSe,RMSe ) / ( CS - CS ) ) - ( ( RCSe - CS ) / Max( RRSe,RMSe ) ) ) ),Max( ( ( ( CS * MUM ) + ( DS * RRSe ) ) / ( Min( MUR ,CS ) / ( MUR + MUC ) ) ),( Max( Min( MUR ,DS ),Max( MUR,MUC ) ) - Max( ( MUM + MLU ),( MLU / CS ) ) ) ) ),( Min( Max( ( ( MUR + RRSe ) * ( RCSe - RMSe ) ),( Min( RMSe ,MLU ) * Min( MUC ,RMSe ) ) ) ,Max( ( ( DS / RRSe ) * ( CS - DS ) ),( Min( MUM ,MUR ) + ( MUM - CS ) ) ) ) + ( ( ( ( MUC * MUR ) + ( RRSe - RMSe ) ) * Min( ( RCSe / MUC ) ,( RMSe - MUC ) ) ) - ( ( ( MUM + RCSe ) + Max( MUC,RCSe ) ) + Max( ( RMSe - RMSe ),( MUM - MUR ) ) ) ) ) ) - ( ( ( ( ( ( DS - RCSe ) + ( MLU * MUM ) ) * ( Max( CS,MUM ) - ( MUR - MLU ) ) ) - ( Max( ( MUR / MUC ),Max( RRSe,MUM ) ) - ( Min( RMSe ,MLU ) * Max( MUC,DS ) ) ) ) + Min( ( ( Max( MUC,MLU ) + ( RMSe + MUM ) ) / ( Max( CS,MLU ) * Max( MUM,CS ) ) ) ,Max( ( ( MLU - MLU ) / ( DS / MUM ) ),Max( Min( MUC ,MUM ),Min( CS ,CS ) ) ) ) ) - ( Min( ( Max( Max( RCSe,DS ),Max( MLU,MUM ) ) + ( Min( MUR ,MLU ) * ( RCSe + RRSe ) ) ) ,Min( Min( ( DS - DS ) ,( MUR - MUR ) ) ,( ( RRSe * RRSe ) / Max( CS,RMSe ) ) ) ) - ( Min( ( ( RMSe - RMSe ) / ( RRSe + RRSe ) ) ,Min( Min( DS ,MLU ) ,Min( DS ,RMSe ) ) ) + Max( ( Min( RRSe ,MLU ) + Min( CS ,RMSe ) ),( ( RRSe * RCSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.77174485616461}, {"determining": "( ( DDR / MRS ) + Max( Max( BR,( FirstVNF_Mem_Server + ( FirstVNF_CPU + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ),( ARS - CRS ) ) )", "choosing": "( Max( Min( ( ( ( ( ( MLU * MUC ) * ( DS - RCSe ) ) + ( Min( MUC ,MLU ) + Max( RCSe,CS ) ) ) + ( ( ( RCSe - MLU ) - ( RCSe / MUM ) ) * Max( ( RMSe * MUM ),( MUM + MLU ) ) ) ) / Min( Min( ( ( RCSe * MUR ) + Min( MLU ,RMSe ) ) ,( ( RRSe / CS ) - ( MUR * RCSe ) ) ) ,( ( ( MUC + CS ) / ( CS / MUC ) ) / Min( Max( MUM,MUC ) ,( DS * MUR ) ) ) ) ) ,( Min( Max( Min( Max( CS,RCSe ) ,( RCSe / MUR ) ),Max( Min( RCSe ,MLU ),( MUR + RCSe ) ) ) ,( Max( ( MUR + RCSe ),( RMSe + RMSe ) ) * ( ( MUM / MUM ) - ( RRSe - MUR ) ) ) ) + Min( ( ( ( DS - RRSe ) - Min( MUR ,RCSe ) ) + ( ( MUR + DS ) / Max( RCSe,MUC ) ) ) ,( ( Min( MUM ,RRSe ) + Max( MLU,RRSe ) ) * ( ( RRSe * DS ) * ( DS - CS ) ) ) ) ) ),( Max( Max( ( Max( ( DS - DS ),Min( MUC ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ),( ( Min( MUM ,RMSe ) / ( RMSe - DS ) ) + ( Max( CS,RRSe ) * Max( RCSe,MUM ) ) ) ),( Min( ( ( MUM * DS ) / ( MLU / MLU ) ) ,( ( MUM / CS ) / ( CS - RRSe ) ) ) - ( Min( ( MLU + RMSe ) ,Max( RMSe,MLU ) ) / ( ( MUM / MUR ) + Min( MLU ,CS ) ) ) ) ) * ( ( Min( Min( Min( RRSe ,MUM ) ,( CS * MUM ) ) ,( Max( RMSe,DS ) - Min( MUC ,MUC ) ) ) * ( ( ( DS * MUC ) / ( DS + CS ) ) / ( ( DS / RCSe ) + ( MUM / MUR ) ) ) ) + ( ( Max( ( CS * MUR ),( MLU - DS ) ) * Max( Max( CS,RMSe ),Min( RRSe ,MLU ) ) ) / Max( Max( Min( RMSe ,CS ),( MUC * RCSe ) ),Min( Min( MUC ,MLU ) ,Min( RMSe ,MUC ) ) ) ) ) ) ) - ( Max( Max( Min( Max( ( ( DS * CS ) / ( CS - MUM ) ),( ( MLU / MUM ) * ( CS + DS ) ) ) ,( ( Max( RCSe,RMSe ) / ( CS - CS ) ) - ( ( RCSe - CS ) / Max( RRSe,RMSe ) ) ) ),Max( ( ( ( CS * MUM ) + ( DS * RRSe ) ) / ( Min( MUR ,CS ) / ( MUR + MUC ) ) ),( Max( Min( MUR ,DS ),Max( MUR,MUC ) ) - Max( ( MUM + MLU ),( MLU / CS ) ) ) ) ),( Min( Max( ( ( MUR + RRSe ) * ( RCSe - RMSe ) ),( Min( RMSe ,MLU ) * Min( MUC ,RMSe ) ) ) ,Max( ( ( DS / RRSe ) * ( CS - DS ) ),( Min( MUM ,MUR ) + ( MUM - CS ) ) ) ) + ( ( ( ( MUC * MUR ) + ( RRSe - RMSe ) ) * Min( ( RCSe / MUC ) ,( RMSe - MUC ) ) ) - ( ( ( MUM + RCSe ) + Max( MUC,RCSe ) ) + Max( ( RMSe - RMSe ),( MUM - MUR ) ) ) ) ) ) - ( ( ( ( ( ( DS - RCSe ) + ( MLU * MUM ) ) * ( Max( CS,MUM ) - ( MUR - MLU ) ) ) - ( Max( ( MUR / MUC ),Max( RRSe,MUM ) ) - ( Min( RMSe ,MLU ) * Max( MUC,DS ) ) ) ) + Min( ( ( Max( MUC,MLU ) + ( RMSe + MUM ) ) / ( Max( CS,MLU ) * Max( MUM,CS ) ) ) ,Max( ( ( MLU - MLU ) / ( DS / MUM ) ),Max( Min( MUC ,MUM ),Min( CS ,CS ) ) ) ) ) - ( Min( ( Max( Max( RCSe,DS ),Max( MLU,MUM ) ) + ( Min( MUR ,MLU ) * ( RCSe + RRSe ) ) ) ,Min( Min( ( DS - DS ) ,( MUR - MUR ) ) ,( ( RRSe * RRSe ) / Max( CS,RMSe ) ) ) ) - ( Min( ( ( RMSe - RMSe ) / ( RRSe + RRSe ) ) ,Min( Min( DS ,MLU ) ,Min( DS ,RMSe ) ) ) + Max( ( Min( RRSe ,MLU ) + Min( CS ,RMSe ) ),( ( RRSe * RCSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.77174485616461}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + ( MDR * ( ( FirstVNF_Mem_Server + ( FirstVNF_CPU + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) - FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,RMSe ) * Max( Max( ( Max( ( DS - DS ),Min( MUC ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ),( ( Min( MUM ,RMSe ) / ( RMSe - DS ) ) + ( Max( CS,RRSe ) * Max( RCSe,MUM ) ) ) ),( Min( ( ( MUM * DS ) / ( MLU / MLU ) ) ,( ( MUM / CS ) / ( CS - RRSe ) ) ) - ( Min( ( MLU + RMSe ) ,Max( RMSe,MLU ) ) / ( ( MUM / MUR ) + Min( MLU ,CS ) ) ) ) ) )", "obj1": 0.1037344398340249, "obj2": 0.7738272717865934}, {"determining": "( ( ( FirstVNF_RAM_Server / MRS ) + ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) ) + Max( Max( BR,( FirstVNF_Mem_Server + ( FirstVNF_CPU + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ),( ARS - CRS ) ) )", "choosing": "( Max( Min( ( ( MUM - DS ) / Min( Min( ( ( RCSe * MUR ) + Min( MLU ,RMSe ) ) ,( ( RRSe / CS ) - ( MUR * RCSe ) ) ) ,( ( ( MUC + CS ) / ( CS / MUC ) ) / Min( Max( MUM,MUC ) ,( DS * MUR ) ) ) ) ) ,( Min( Max( Min( Max( CS,RCSe ) ,( RCSe / MUR ) ),Max( Min( RCSe ,MLU ),( MUR + RCSe ) ) ) ,( Max( ( MUR + RCSe ),( RMSe + RMSe ) ) * ( ( MUM / MUM ) - ( RRSe - MUR ) ) ) ) + Min( ( ( ( DS - RRSe ) - Min( MUR ,RCSe ) ) + ( ( MUR + DS ) / Max( RCSe,MUC ) ) ) ,( ( Min( MUM ,RRSe ) + Max( MLU,RRSe ) ) * ( ( RRSe * DS ) * ( DS - CS ) ) ) ) ) ),( Max( Max( ( Max( ( DS - DS ),Min( MUC ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ),( ( Min( MUM ,RMSe ) / ( RMSe - DS ) ) + ( Max( CS,RRSe ) * Max( RCSe,MUM ) ) ) ),( Min( ( ( MUM * DS ) / ( MLU / MLU ) ) ,( ( MUM / CS ) / ( CS - RRSe ) ) ) - ( Min( ( MLU + RMSe ) ,Max( RMSe,MLU ) ) / ( ( MUM / MUR ) + Min( MLU ,CS ) ) ) ) ) * ( ( Min( Min( Min( RRSe ,MUM ) ,( CS * MUM ) ) ,( Max( RMSe,DS ) - Min( MUC ,MUC ) ) ) * ( ( ( DS * MUC ) / ( DS + CS ) ) / ( ( DS / RCSe ) + ( MUM / MUR ) ) ) ) + ( ( Max( ( CS * MUR ),( MLU - DS ) ) * Max( Max( CS,RMSe ),Min( RRSe ,MLU ) ) ) / Max( Max( Min( RMSe ,CS ),( MUC * RCSe ) ),Min( Min( MUC ,MLU ) ,Min( RMSe ,MUC ) ) ) ) ) ) ) - ( Max( Max( Min( Max( ( ( DS * CS ) / ( CS - MUM ) ),( ( MLU / MUM ) * ( CS + DS ) ) ) ,( ( Max( RCSe,RMSe ) / ( CS - CS ) ) - ( ( RCSe - CS ) / Max( RRSe,RMSe ) ) ) ),Max( ( ( ( CS * MUM ) + ( DS * RRSe ) ) / ( Min( MUR ,CS ) / ( MUR + MUC ) ) ),( Max( Min( MUR ,DS ),Max( MUR,MUC ) ) - Max( ( MUM + MLU ),( MLU / CS ) ) ) ) ),( Min( Max( ( ( MUR + RRSe ) * ( RCSe - RMSe ) ),( Min( RMSe ,MLU ) * Min( MUC ,RMSe ) ) ) ,Max( ( ( DS / RRSe ) * ( CS - DS ) ),( Min( MUM ,MUR ) + ( MUM - CS ) ) ) ) + ( ( ( ( MUC * MUR ) + ( RRSe - RMSe ) ) * Min( ( RCSe / MUC ) ,( RMSe - MUC ) ) ) - ( ( ( MUM + RCSe ) + Max( MUC,RCSe ) ) + Max( ( RMSe - RMSe ),( MUM - MUR ) ) ) ) ) ) - ( ( ( ( ( ( DS - RCSe ) + ( MLU * MUM ) ) * ( Max( CS,MUM ) - ( MUR - MLU ) ) ) - ( Max( ( MUR / MUC ),Max( RRSe,MUM ) ) - ( Min( RMSe ,MLU ) * Max( MUC,DS ) ) ) ) + Min( ( ( Max( MUC,MLU ) + ( RMSe + MUM ) ) / ( Max( CS,MLU ) * Max( MUM,CS ) ) ) ,Max( ( ( MLU - MLU ) / ( DS / MUM ) ),Max( Min( MUC ,MUM ),Min( CS ,CS ) ) ) ) ) - ( Min( ( Max( Max( RCSe,DS ),Max( MLU,MUM ) ) + ( Min( MUR ,MLU ) * ( RCSe + RRSe ) ) ) ,Min( Min( ( DS - DS ) ,( MUR - MUR ) ) ,( ( RRSe * RRSe ) / Max( CS,RMSe ) ) ) ) - ( Min( ( ( RMSe - RMSe ) / ( RRSe + RRSe ) ) ,Min( Min( DS ,MLU ) ,Min( DS ,RMSe ) ) ) + Max( ( Min( RRSe ,MLU ) + Min( CS ,RMSe ) ),( ( RRSe * RCSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.77174485616461}, {"determining": "( ( DDR / MRS ) + Max( Max( BR,( FirstVNF_Mem_Server + ( FirstVNF_CPU + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ),( ARS - CRS ) ) )", "choosing": "( Max( MLU,RMSe ) * ( Max( ( DS - DS ),Min( MUC ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ) )", "obj1": 0.1037344398340249, "obj2": 0.7738272717865934}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) )", "choosing": "( Max( Min( ( ( ( ( ( MLU * MUC ) * ( DS - RCSe ) ) + ( Min( MUC ,MLU ) + Max( RCSe,CS ) ) ) + ( ( ( RCSe - MLU ) - ( RCSe / MUM ) ) * Max( ( RMSe * MUM ),( MUM + MLU ) ) ) ) / Min( Min( ( ( RCSe * MUR ) + Min( MLU ,RMSe ) ) ,( ( RRSe / CS ) - ( MUR * RCSe ) ) ) ,( ( ( MUC + CS ) / ( CS / MUC ) ) / Min( Max( MUM,MUC ) ,( DS * MUR ) ) ) ) ) ,( Min( Max( Min( Max( CS,RCSe ) ,( RCSe / MUR ) ),Max( Min( RCSe ,MLU ),( MUR + RCSe ) ) ) ,( Max( ( MUR + RCSe ),( RMSe + RMSe ) ) * ( ( MUM / MUM ) - ( RRSe - MUR ) ) ) ) + Min( ( ( ( DS - RRSe ) - Min( MUR ,RCSe ) ) + ( ( MUR + DS ) / Max( RCSe,MUC ) ) ) ,( ( Min( MUM ,RRSe ) + Max( MLU,RRSe ) ) * ( ( RRSe * DS ) * ( DS - CS ) ) ) ) ) ),( Max( Max( ( Max( ( DS - DS ),Min( MUC ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ),( ( Min( MUM ,RMSe ) / ( RMSe - DS ) ) + ( Max( CS,RRSe ) * Max( RCSe,MUM ) ) ) ),( Min( ( ( MUM * DS ) / ( MLU / MLU ) ) ,( ( MUM / CS ) / ( CS - RRSe ) ) ) - ( Min( ( MLU + RMSe ) ,Max( RMSe,MLU ) ) / ( ( MUM / MUR ) + Min( MLU ,CS ) ) ) ) ) * ( ( Min( Min( Min( RRSe ,MUM ) ,( CS * MUM ) ) ,( Max( RMSe,DS ) - Min( MUC ,MUC ) ) ) * ( ( ( DS * MUC ) / ( DS + CS ) ) / ( ( DS / RCSe ) + ( MUM / MUR ) ) ) ) + ( ( Max( ( CS * MUR ),( MLU - DS ) ) * Max( Max( CS,RMSe ),Min( RRSe ,MLU ) ) ) / Max( Max( Min( RMSe ,CS ),( MUC * RCSe ) ),Min( Min( MUC ,MLU ) ,Min( RMSe ,MUC ) ) ) ) ) ) ) - ( Max( Max( Min( Max( ( ( DS * CS ) / ( CS - MUM ) ),( ( MLU / MUM ) * ( CS + DS ) ) ) ,( ( Max( RCSe,RMSe ) / ( CS - CS ) ) - ( ( RCSe - CS ) / Max( RRSe,RMSe ) ) ) ),Max( ( ( ( CS * MUM ) + ( DS * RRSe ) ) / ( Min( MUR ,CS ) / ( MUR + MUC ) ) ),( Max( Min( MUR ,DS ),Max( MUR,MUC ) ) - Max( ( MUM + MLU ),( MLU / CS ) ) ) ) ),( Min( Max( ( ( MUR + RRSe ) * ( RCSe - RMSe ) ),( Min( RMSe ,MLU ) * Min( MUC ,RMSe ) ) ) ,Max( ( ( DS / RRSe ) * ( CS - DS ) ),( Min( MUM ,MUR ) + ( MUM - CS ) ) ) ) + ( ( ( ( MUC * MUR ) + ( RRSe - RMSe ) ) * Min( ( RCSe / MUC ) ,( RMSe - MUC ) ) ) - ( ( ( MUM + RCSe ) + Max( MUC,RCSe ) ) + Max( ( RMSe - RMSe ),( MUM - MUR ) ) ) ) ) ) - ( ( ( ( ( ( DS - RCSe ) + ( MLU * MUM ) ) * ( Max( CS,MUM ) - ( MUR - MLU ) ) ) - ( Max( ( MUR / MUC ),Max( RRSe,MUM ) ) - ( Min( RMSe ,MLU ) * Max( MUC,DS ) ) ) ) + Min( ( ( Max( MUC,MLU ) + ( RMSe + MUM ) ) / ( Max( CS,MLU ) * Max( MUM,CS ) ) ) ,Max( ( ( MLU - MLU ) / ( DS / MUM ) ),Max( Min( MUC ,MUM ),Min( CS ,CS ) ) ) ) ) - ( Min( ( Max( Max( RCSe,DS ),Max( MLU,MUM ) ) + ( Min( MUR ,MLU ) * ( RCSe + RRSe ) ) ) ,Min( Min( ( DS - DS ) ,( MUR - MUR ) ) ,( ( RRSe * RRSe ) / Max( CS,RMSe ) ) ) ) - ( Min( ( ( RMSe - RMSe ) / ( RRSe + RRSe ) ) ,Min( Min( DS ,MLU ) ,Min( DS ,RMSe ) ) ) + Max( ( Min( RRSe ,MLU ) + Min( CS ,RMSe ) ),( ( RRSe * RCSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.77174485616461}, {"determining": "Min( ( ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + Max( Max( BR,BR ),( ARS - CRS ) ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( Min( ( ( ( ( ( MLU * MUC ) * ( DS - RCSe ) ) + ( Min( MUC ,MLU ) + Max( RCSe,CS ) ) ) + ( ( ( RCSe - MLU ) - ( RCSe / MUM ) ) * Max( ( RMSe * MUM ),( MUM + MLU ) ) ) ) / Min( Min( ( ( RCSe * MUR ) + Min( MLU ,RMSe ) ) ,( ( RRSe / CS ) - ( MUR * RCSe ) ) ) ,( ( ( MUC + CS ) / ( CS / MUC ) ) / Min( Max( MUM,MUC ) ,( DS * MUR ) ) ) ) ) ,( Min( Max( Min( Max( CS,RCSe ) ,( RCSe / MUR ) ),Max( Min( RCSe ,MLU ),( MUR + RCSe ) ) ) ,( Max( ( MUR + RCSe ),( RMSe + RRSe ) ) * ( ( MUM / MUM ) - ( RRSe - MUR ) ) ) ) + Min( ( ( ( DS - RRSe ) - Min( MUR ,RCSe ) ) + ( ( MUR + DS ) / Max( RCSe,MUC ) ) ) ,( ( Min( MUM ,RRSe ) + Max( MLU,RRSe ) ) * ( ( RRSe * DS ) * ( DS - CS ) ) ) ) ) ),( Max( Max( ( Max( ( DS - DS ),Min( MUC ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ),( ( Min( MUM ,RMSe ) / ( RMSe - DS ) ) + ( Max( CS,RRSe ) * Max( RCSe,MUM ) ) ) ),( Min( ( ( MUM * DS ) / ( MLU / MLU ) ) ,( ( MUM / CS ) / ( CS - RRSe ) ) ) - ( Min( ( MLU + RMSe ) ,Max( RMSe,MLU ) ) / ( ( MUM / MUR ) + Min( MLU ,CS ) ) ) ) ) * ( ( Min( Min( Min( RRSe ,MUM ) ,( CS * MUM ) ) ,( Max( RMSe,DS ) - Min( MUC ,MUC ) ) ) * ( ( ( DS * MUC ) / ( DS + CS ) ) / ( ( DS / RCSe ) + ( MUM / MUR ) ) ) ) + ( ( Max( ( CS * MUR ),( MLU - DS ) ) * Max( Max( CS,RMSe ),Min( RRSe ,MLU ) ) ) / Max( Max( Min( RMSe ,CS ),( MUC * RCSe ) ),Min( Min( MUC ,MLU ) ,Min( RMSe ,MUC ) ) ) ) ) ) ) - ( Max( Max( Min( Max( ( ( DS * CS ) / ( CS - MUM ) ),( ( MLU / MUM ) * ( CS + DS ) ) ) ,( ( Max( RCSe,RMSe ) / ( CS - CS ) ) - ( ( RCSe - CS ) / Max( RRSe,RMSe ) ) ) ),Max( ( ( ( CS * MUM ) + ( DS * RRSe ) ) / ( Min( MUR ,CS ) / ( MUR + MUC ) ) ),( Max( Min( MUR ,DS ),Max( MUR,MUC ) ) - Max( ( MUM + MLU ),( MLU / CS ) ) ) ) ),( Min( Max( ( ( MUR + RRSe ) * ( RCSe - RMSe ) ),( Min( RMSe ,MLU ) * Min( MUC ,RMSe ) ) ) ,Max( ( ( DS / RRSe ) * ( CS - DS ) ),( Min( MUM ,MUR ) + ( MUM - CS ) ) ) ) + ( ( ( ( MUC * MUR ) + ( RRSe - RMSe ) ) * Min( ( RCSe / MUC ) ,( RMSe - MUC ) ) ) - ( ( ( MUM + RCSe ) + Max( MUC,RCSe ) ) + Max( ( RMSe - RMSe ),( MUM - MUR ) ) ) ) ) ) - ( ( ( ( ( ( DS - RCSe ) + ( MLU * MUM ) ) * ( Max( CS,MUM ) - ( MUR - MLU ) ) ) - ( Max( ( MUR / MUC ),Max( RRSe,MUM ) ) - ( Min( RMSe ,MLU ) * Max( MUC,DS ) ) ) ) + Min( ( ( Max( MUC,MLU ) + ( RMSe + MUM ) ) / ( Max( CS,MLU ) * Max( MUM,CS ) ) ) ,Max( ( ( MLU - MLU ) / ( DS / MUM ) ),Max( Min( MUC ,MUM ),Min( CS ,CS ) ) ) ) ) - ( Min( ( Max( Max( RCSe,DS ),Max( MLU,MUM ) ) + ( Min( MUR ,MLU ) * ( RCSe + RRSe ) ) ) ,Min( Min( ( DS - DS ) ,( MUR - MUR ) ) ,( ( RRSe * RRSe ) / Max( CS,RMSe ) ) ) ) - ( Min( ( ( RMSe - RMSe ) / ( RRSe + RRSe ) ) ,Min( Min( DS ,MLU ) ,Min( DS ,RMSe ) ) ) + Max( ( Min( RRSe ,MLU ) + Min( CS ,RMSe ) ),( ( RRSe * RCSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.77174485616461}, {"determining": "Min( ( ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,MRS ) )", "choosing": "( Max( Min( ( ( ( ( ( MLU * MUC ) * ( DS - RCSe ) ) + ( Min( MUC ,MLU ) + Max( RCSe,CS ) ) ) + ( ( ( RCSe - MLU ) - ( RCSe / MUM ) ) * Max( ( RMSe * MUM ),( MUM + MLU ) ) ) ) / Min( Min( ( ( RCSe * MUR ) + Min( MLU ,RMSe ) ) ,( ( RRSe / CS ) - ( MUR * RCSe ) ) ) ,( ( ( MUC + CS ) / ( CS / MUC ) ) / Min( Max( MUM,MUC ) ,( DS * MUR ) ) ) ) ) ,( Min( Max( Min( Max( CS,RCSe ) ,( RCSe / MUR ) ),Max( Min( RCSe ,MLU ),( MUR + RCSe ) ) ) ,( Max( ( MUR + RCSe ),( RMSe + RMSe ) ) * ( ( MUM / MUM ) - ( RRSe - MUR ) ) ) ) + Min( ( ( ( DS - RRSe ) - Min( MUR ,RCSe ) ) + ( ( MUR + DS ) / Max( RCSe,MUC ) ) ) ,( ( Min( MUM ,RRSe ) + Max( MLU,RRSe ) ) * ( ( RRSe * DS ) * ( DS - CS ) ) ) ) ) ),( Max( Max( ( Max( ( DS - DS ),Min( MUC ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ),( ( Min( MUM ,RMSe ) / ( RMSe - DS ) ) + ( Max( CS,RRSe ) * Max( RCSe,MUM ) ) ) ),( Min( ( ( MUM * DS ) / ( MLU / MLU ) ) ,( ( MUM / CS ) / ( CS - RRSe ) ) ) - ( Min( ( MLU + RMSe ) ,Max( RMSe,MLU ) ) / ( ( MUM / MUR ) + Min( MLU ,CS ) ) ) ) ) * ( ( Min( Min( Min( RRSe ,MUM ) ,( CS * MUM ) ) ,( Max( RMSe,DS ) - Min( MUC ,MUC ) ) ) * ( ( ( DS * MUC ) / ( DS + CS ) ) / ( ( DS / RCSe ) + ( MUM / MUR ) ) ) ) + ( ( Max( ( CS * MUR ),( MLU - DS ) ) * Max( Max( CS,RMSe ),Min( RRSe ,MLU ) ) ) / Max( Max( Min( RMSe ,CS ),( MUC * RCSe ) ),Min( Min( MUC ,MLU ) ,Min( RMSe ,MUC ) ) ) ) ) ) ) - ( Max( Max( Min( Max( ( ( DS * CS ) / ( CS - MUM ) ),( ( MLU / MUM ) * ( CS + DS ) ) ) ,( ( Max( RCSe,RMSe ) / ( CS - CS ) ) - ( ( RCSe - CS ) / Max( RRSe,RMSe ) ) ) ),Max( ( ( ( CS * MUM ) + ( DS * RRSe ) ) / ( Min( MUR ,CS ) / ( MUR + MUC ) ) ),( Max( Min( MUR ,DS ),Max( MUR,MUC ) ) - Max( ( MUM + MLU ),( MLU / CS ) ) ) ) ),( Min( Max( ( ( MUR + RRSe ) * ( RCSe - RMSe ) ),( Min( RMSe ,MLU ) * Min( MUC ,RMSe ) ) ) ,Max( ( ( DS / RRSe ) * ( CS - DS ) ),( Min( MUM ,MUR ) + ( MUM - CS ) ) ) ) + ( ( ( ( MUC * MUR ) + ( RRSe - RMSe ) ) * Min( ( RCSe / MUC ) ,( RMSe - MUC ) ) ) - ( ( ( MUM + RCSe ) + Max( MUC,RCSe ) ) + Max( ( RMSe - RMSe ),( MUM - MUR ) ) ) ) ) ) - ( ( ( ( ( ( DS - RCSe ) + ( MLU * MUM ) ) * ( Max( CS,MUM ) - ( MUR - MLU ) ) ) - ( Max( ( MUR / MUC ),Max( RRSe,MUM ) ) - ( Min( RMSe ,MLU ) * Max( MUC,DS ) ) ) ) + Min( ( ( Max( MUC,MLU ) + ( RMSe + MUM ) ) / ( Max( CS,MLU ) * Max( MUM,CS ) ) ) ,Max( ( ( MLU - CS ) / ( DS / MUM ) ),Max( Min( MUC ,MUM ),Min( CS ,CS ) ) ) ) ) - ( Min( ( Max( Max( RCSe,DS ),Max( MLU,MUM ) ) + ( Min( MUR ,MLU ) * ( RCSe + RRSe ) ) ) ,Min( Min( ( DS - DS ) ,( MUR - MUR ) ) ,( ( RRSe * RRSe ) / Max( CS,RMSe ) ) ) ) - ( Min( ( ( RMSe - RMSe ) / ( RRSe + RRSe ) ) ,Min( Min( DS ,MLU ) ,Min( DS ,RMSe ) ) ) + Max( ( Min( RRSe ,MLU ) + Min( CS ,RMSe ) ),( ( RRSe * RCSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.77174485616461}, {"determining": "Min( ( ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,DDR )", "choosing": "( Max( Min( ( ( ( ( ( MLU * MUC ) * ( DS - RCSe ) ) + ( Min( MUC ,MLU ) + Max( RCSe,CS ) ) ) + ( ( ( RCSe - MLU ) - ( RCSe / MUM ) ) * Max( ( RMSe * MUM ),( MUM + MLU ) ) ) ) / Min( Min( ( ( RCSe * MUR ) + Min( MLU ,RMSe ) ) ,( ( RRSe / CS ) - ( MUR * RCSe ) ) ) ,( ( ( MUC + CS ) / ( CS / MUC ) ) / Min( Max( MUM,MUC ) ,( DS * MUR ) ) ) ) ) ,( Min( Max( Min( Max( CS,RCSe ) ,( RCSe / MUR ) ),Max( Min( RCSe ,MLU ),( MUR + RCSe ) ) ) ,( Max( ( MUR + RCSe ),( RMSe + RMSe ) ) * ( ( MUM / MUM ) - ( RRSe - MUR ) ) ) ) + Min( ( ( ( DS - RRSe ) - Min( MUR ,RCSe ) ) + ( ( MUR + DS ) / Max( RCSe,MUC ) ) ) ,( ( Min( MUM ,RRSe ) + Max( MLU,RRSe ) ) * ( ( RRSe * DS ) * ( DS - CS ) ) ) ) ) ),( Max( Max( ( Max( ( DS - DS ),Min( MUC ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ),( ( Min( MUM ,RMSe ) / ( RMSe - DS ) ) + ( Max( CS,RRSe ) * Max( RCSe,MUM ) ) ) ),( Min( ( ( MUM * DS ) / ( MLU / MLU ) ) ,( ( MUM / CS ) / ( CS - RRSe ) ) ) - ( Min( ( MLU + RMSe ) ,Max( RMSe,MLU ) ) / ( ( MUM / MUR ) + Min( MLU ,CS ) ) ) ) ) * ( ( Min( Min( Min( RRSe ,MUM ) ,( CS * MUM ) ) ,( Max( RMSe,DS ) - Min( MUC ,MUC ) ) ) * ( ( ( DS * MUC ) / ( DS + CS ) ) / ( ( DS / RCSe ) + ( MUM / MUR ) ) ) ) + ( ( Max( ( CS * MUR ),( MLU - DS ) ) * Max( Max( CS,RMSe ),Min( RRSe ,MLU ) ) ) / Max( Max( Min( RMSe ,CS ),( MUC * RCSe ) ),Min( Min( MUC ,MLU ) ,Min( RMSe ,MUC ) ) ) ) ) ) ) - ( Max( Max( Min( Max( ( ( DS * CS ) / ( CS - MUM ) ),( ( MLU / MUM ) * ( CS + DS ) ) ) ,( ( Max( RCSe,RMSe ) / ( CS - CS ) ) - ( ( RCSe - CS ) / Max( RRSe,RMSe ) ) ) ),Max( ( ( ( CS * MUM ) + ( DS * RRSe ) ) / ( Min( MUR ,CS ) / ( MUR + MUC ) ) ),( Max( Min( MUR ,DS ),Max( MUR,MUC ) ) - Max( ( MUM + MLU ),( MLU / CS ) ) ) ) ),( Min( Max( ( ( MUR + RRSe ) * ( RCSe - RMSe ) ),( Min( RMSe ,MLU ) * Min( MUC ,RMSe ) ) ) ,Max( ( ( DS / RRSe ) * ( CS - DS ) ),( Min( MUM ,MUR ) + ( MUM - CS ) ) ) ) + ( ( ( ( MUC * MUR ) + ( RRSe - RMSe ) ) * Min( ( RCSe / MUC ) ,( RMSe - MUC ) ) ) - ( ( ( MUM + RCSe ) + Max( MUC,RCSe ) ) + Max( ( RMSe - RMSe ),( MUM - MUR ) ) ) ) ) ) - ( ( ( ( ( ( DS - RCSe ) + ( MLU * MUM ) ) * ( Max( CS,MUM ) - ( MUR - MLU ) ) ) - ( Max( ( MUR / MUC ),Max( RRSe,MUM ) ) - ( Min( RMSe ,MLU ) * Max( RRSe,DS ) ) ) ) + Min( ( ( Max( MUC,MLU ) + ( RMSe + MUM ) ) / ( Max( CS,MLU ) * Max( MUM,CS ) ) ) ,Max( ( ( MLU - MLU ) / ( DS / MUM ) ),Max( Min( MUC ,MUM ),Min( CS ,CS ) ) ) ) ) - ( Min( ( Max( Max( RCSe,DS ),Max( MLU,MUM ) ) + ( Min( MUR ,MLU ) * ( RCSe + RRSe ) ) ) ,Min( Min( ( DS - DS ) ,( MUR - MUR ) ) ,( ( RRSe * RRSe ) / Max( CS,RMSe ) ) ) ) - ( Min( ( ( RMSe - RMSe ) / ( RRSe + RRSe ) ) ,Min( Min( DS ,MLU ) ,Min( DS ,RMSe ) ) ) + Max( ( Min( RRSe ,MLU ) + Min( CS ,RMSe ) ),( ( RRSe * RCSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.11203319502074689, "obj2": 0.7688165372199899}, {"determining": "( ( FirstVNF_RAM_Server / ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) * ( CRS * DDR ) )", "choosing": "( Max( Min( ( ( ( ( ( MLU * MUC ) * ( DS - RCSe ) ) + ( Min( MUC ,MLU ) + Max( RCSe,CS ) ) ) + ( ( ( RCSe - MLU ) - ( RCSe / MUM ) ) * Max( ( RMSe * MUM ),( MUM + MLU ) ) ) ) / Min( Min( ( ( RCSe * MUR ) + Min( MLU ,RMSe ) ) ,( ( RRSe / CS ) - ( MUR * RCSe ) ) ) ,( ( ( MUC + CS ) / ( CS / MUC ) ) / Min( Max( MUM,MUC ) ,( DS * MUR ) ) ) ) ) ,( Min( Max( Min( Max( CS,RCSe ) ,( RCSe / MUR ) ),Max( Min( RCSe ,MLU ),( MUR + RCSe ) ) ) ,( Max( ( MUR + RCSe ),( RMSe + RMSe ) ) * ( ( MUM / MUM ) - ( RRSe - MUR ) ) ) ) + Min( ( ( ( DS - RRSe ) - Min( MUR ,RCSe ) ) + ( ( MUR + DS ) / Max( RCSe,MUC ) ) ) ,( ( Min( MUM ,RRSe ) + Max( MLU,RRSe ) ) * ( ( RRSe * DS ) * ( DS - CS ) ) ) ) ) ),( Max( Max( ( Max( ( DS - DS ),Min( MUC ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ),( ( Min( MUM ,RMSe ) / ( RMSe - DS ) ) + ( Max( CS,RRSe ) * Max( RCSe,MUM ) ) ) ),( Min( ( ( MUM * DS ) / ( MLU / MLU ) ) ,( ( MUM / CS ) / ( CS - RRSe ) ) ) - ( Min( ( MLU + RMSe ) ,Max( RMSe,MLU ) ) / ( ( MUM / MUR ) + Min( MLU ,CS ) ) ) ) ) * ( ( Min( Min( Min( RRSe ,MUM ) ,( CS * MUM ) ) ,( Max( RMSe,DS ) - Min( MUC ,MUC ) ) ) * ( ( ( DS * MUC ) / ( DS + CS ) ) / ( ( DS / RCSe ) + ( MUM / MUR ) ) ) ) + ( ( Max( ( CS * MUR ),( MLU - DS ) ) * Max( Max( CS,RMSe ),Min( RRSe ,MLU ) ) ) / Max( Max( Min( RMSe ,CS ),( MUC * RCSe ) ),Min( Min( MUC ,MLU ) ,Min( RMSe ,MUC ) ) ) ) ) ) ) - ( Max( Max( Min( Max( ( ( DS * CS ) / ( CS - MUM ) ),( ( MLU / MUM ) * ( CS + DS ) ) ) ,( ( Max( RCSe,RMSe ) / ( CS - CS ) ) - ( ( RCSe - CS ) / Max( RRSe,RMSe ) ) ) ),Max( ( ( ( CS * MUM ) + ( DS * RRSe ) ) / ( Min( MUR ,CS ) / ( MUR + MUC ) ) ),( Max( Min( MUR ,DS ),Max( MUR,MUC ) ) - Max( ( MUM + MLU ),( MLU / CS ) ) ) ) ),( Min( Max( ( ( MUR + RRSe ) * ( RCSe - RMSe ) ),( Min( RMSe ,MLU ) * Min( MUC ,RMSe ) ) ) ,Max( ( ( DS / RRSe ) * ( CS - DS ) ),( Min( MUM ,MUR ) + ( MUM - CS ) ) ) ) + ( ( ( ( MUC * MUR ) + ( RRSe - RMSe ) ) * Min( ( RCSe / MUC ) ,( RMSe - MUC ) ) ) - ( ( ( MUM + RCSe ) + Max( MUC,RCSe ) ) + Max( ( RMSe - RMSe ),( MUM - MUR ) ) ) ) ) ) - ( ( ( ( ( ( DS - RCSe ) + ( MLU * MUM ) ) * ( Max( CS,MUM ) - ( MUR - MLU ) ) ) - ( Max( ( MUR / MUC ),Max( RRSe,MUM ) ) - ( Min( RMSe ,MLU ) * Max( MUC,DS ) ) ) ) + Min( ( ( Max( MUC,MLU ) + ( RMSe + MUM ) ) / ( Max( CS,MLU ) * Max( MUM,CS ) ) ) ,Max( ( ( MLU - MLU ) / ( DS / MUM ) ),Max( Min( MUC ,MUM ),Min( CS ,CS ) ) ) ) ) - ( Min( ( Max( Max( RCSe,DS ),Max( MLU,MUM ) ) + ( Min( MUR ,MLU ) * ( RCSe + RRSe ) ) ) ,Min( Min( ( DS - DS ) ,( MUR - MUR ) ) ,( ( RRSe * RRSe ) / Max( CS,RMSe ) ) ) ) - ( Min( ( ( RMSe - RMSe ) / ( RRSe + RRSe ) ) ,Min( Min( MUM ,MLU ) ,Min( DS ,RMSe ) ) ) + Max( ( Min( RRSe ,MLU ) + Min( CS ,RMSe ) ),( ( RRSe * RCSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.77174485616461}, {"determining": "( Min( CRS ,DDR ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.12655601659751037, "obj2": 0.7012213362236587}, {"determining": "( CRS + Max( Max( BR,( FirstVNF_Mem_Server + ( FirstVNF_CPU + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ),( ARS - CRS ) ) )", "choosing": "( Max( Min( ( ( ( ( ( MLU * MUC ) * ( DS - RCSe ) ) + ( Min( MUC ,MLU ) + Max( RCSe,CS ) ) ) + ( ( ( RCSe - MLU ) - ( RCSe / MUM ) ) * Max( ( RMSe * MUM ),( MUM + MLU ) ) ) ) / Min( Min( ( ( RCSe * MUR ) + Min( MLU ,RMSe ) ) ,( ( RRSe / CS ) - ( MUR * RCSe ) ) ) ,( ( ( MUC + CS ) / ( CS / MUC ) ) / Min( Max( MUM,MUC ) ,( DS * MUR ) ) ) ) ) ,( Min( Max( Min( Max( CS,RCSe ) ,( RCSe / MUR ) ),Max( Min( RCSe ,MLU ),( MUR + RCSe ) ) ) ,( Max( ( MUR + RCSe ),( RMSe + RMSe ) ) * ( ( MUM / MUM ) - ( RRSe - MUR ) ) ) ) + Min( ( ( ( DS - RRSe ) - Min( MUR ,RCSe ) ) + ( ( MUR + DS ) / Max( RCSe,MUC ) ) ) ,( ( Min( MUM ,RRSe ) + Max( MLU,RRSe ) ) * ( ( RRSe * DS ) * ( DS - CS ) ) ) ) ) ),( Max( Max( ( Max( ( DS - DS ),Min( MUC ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ),( ( Min( MUM ,RMSe ) / ( RMSe - DS ) ) + ( Max( CS,RRSe ) * Max( RCSe,MUM ) ) ) ),( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( DS,RRSe ) ) ) * ( ( Min( Min( Min( RRSe ,MUM ) ,( CS * MUM ) ) ,( Max( RMSe,DS ) - Min( MUC ,MUC ) ) ) * ( ( ( DS * MUC ) / ( DS + CS ) ) / ( ( DS / RCSe ) + ( MUM / MUR ) ) ) ) + ( ( Max( ( CS * MUR ),( MLU - DS ) ) * Max( Max( CS,RMSe ),Min( RRSe ,MLU ) ) ) / Max( Max( Min( RMSe ,CS ),( MUC * RCSe ) ),Min( Min( MUC ,MLU ) ,Min( RMSe ,MUC ) ) ) ) ) ) ) - ( Max( Max( Min( Max( ( ( DS * CS ) / ( CS - MUM ) ),( ( MLU / MUM ) * ( CS + DS ) ) ) ,( ( Max( RCSe,RMSe ) / ( CS - CS ) ) - ( ( RCSe - CS ) / Max( RRSe,RMSe ) ) ) ),Max( ( ( ( CS * MUM ) + ( DS * RRSe ) ) / ( Min( MUR ,CS ) / ( MUR + MUC ) ) ),( Max( Min( MUR ,DS ),Max( MUR,MUC ) ) - Max( ( MUM + MLU ),( MLU / CS ) ) ) ) ),( Min( Max( ( ( MUR + RRSe ) * ( RCSe - RMSe ) ),( Min( RMSe ,MLU ) * Min( MUC ,RMSe ) ) ) ,Max( ( ( DS / RRSe ) * ( CS - DS ) ),( Min( MUM ,MUR ) + ( MUM - CS ) ) ) ) + ( ( ( ( MUC * MUR ) + ( RRSe - RMSe ) ) * Min( ( RCSe / MUC ) ,( RMSe - MUC ) ) ) - ( ( ( MUM + RCSe ) + Max( MUC,RCSe ) ) + Max( ( RMSe - RMSe ),( MUM - MUR ) ) ) ) ) ) - ( ( ( ( ( ( DS - RCSe ) + ( MLU * MUM ) ) * ( Max( CS,MUM ) - ( MUR - MLU ) ) ) - ( Max( ( MUR / MUC ),Max( RRSe,MUM ) ) - ( Min( RMSe ,MLU ) * Max( MUC,DS ) ) ) ) + Min( ( ( Max( MUC,MLU ) + ( RMSe + MUM ) ) / ( Max( CS,MLU ) * Max( MUM,CS ) ) ) ,Max( ( ( MLU - MLU ) / ( DS / MUM ) ),Max( Min( MUC ,MUM ),Min( CS ,CS ) ) ) ) ) - ( Min( ( Max( Max( RCSe,DS ),Max( MLU,MUM ) ) + ( Min( MUR ,MLU ) * ( RCSe + RRSe ) ) ) ,Min( Min( ( DS - DS ) ,( MUR - MUR ) ) ,( ( RRSe * RRSe ) / Max( CS,RMSe ) ) ) ) - ( Min( ( ( RMSe - RMSe ) / ( RRSe + RRSe ) ) ,Min( Min( DS ,MLU ) ,Min( DS ,RMSe ) ) ) + Max( ( Min( RRSe ,MLU ) + Min( CS ,RMSe ) ),( ( RRSe * RCSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.77174485616461}, {"determining": "( Max( FirstVNF_RAM_Server,MRS ) * Min( CRS ,DDR ) )", "choosing": "( Max( Min( ( ( ( ( ( MLU * MUC ) * ( DS - RCSe ) ) + ( Min( MUC ,MLU ) + Max( RCSe,CS ) ) ) + ( ( ( RCSe - MLU ) - ( RCSe / MUM ) ) * Max( ( RMSe * MUM ),( MUR + MLU ) ) ) ) / Min( Min( ( ( RCSe * MUR ) + Min( MLU ,RMSe ) ) ,( ( RRSe / CS ) - ( MUR * RCSe ) ) ) ,( ( ( MUC + CS ) / ( CS / MUC ) ) / Min( Max( MUM,MUC ) ,( DS * MUR ) ) ) ) ) ,( Min( Max( Min( Max( CS,RCSe ) ,( RCSe / MUR ) ),Max( Min( RCSe ,MLU ),( MUR + RCSe ) ) ) ,( Max( ( MUR + RCSe ),( RMSe + RMSe ) ) * ( ( MUM / MUM ) - ( RRSe - MUR ) ) ) ) + Min( ( ( ( DS - RRSe ) - Min( MUR ,RCSe ) ) + ( ( MUR + DS ) / Max( RCSe,MUC ) ) ) ,( ( Min( MUM ,RRSe ) + Max( MLU,RRSe ) ) * ( ( RRSe * DS ) * ( DS - CS ) ) ) ) ) ),( Max( Max( ( Max( ( DS - DS ),Min( MUC ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ),( ( Min( MUM ,RMSe ) / ( RMSe - DS ) ) + ( Max( CS,RRSe ) * Max( RCSe,MUM ) ) ) ),( Min( ( ( MUM * DS ) / ( MLU / MLU ) ) ,( ( MUM / CS ) / ( CS - RRSe ) ) ) - ( Min( ( MLU + RMSe ) ,Max( RMSe,MLU ) ) / ( ( MUM / MUR ) + Min( MLU ,CS ) ) ) ) ) * ( ( Min( Min( Min( RRSe ,MUM ) ,( CS * MUM ) ) ,( Max( RMSe,DS ) - Min( MUC ,MUC ) ) ) * ( ( ( DS * MUC ) / ( DS + CS ) ) / ( ( DS / RCSe ) + ( MUM / MUR ) ) ) ) + ( ( Max( ( CS * MUR ),( MLU - DS ) ) * Max( Max( CS,RMSe ),Min( RRSe ,MLU ) ) ) / Max( Max( Min( RMSe ,CS ),( MUC * RCSe ) ),Min( Min( MUC ,MLU ) ,Min( RMSe ,MUC ) ) ) ) ) ) ) - ( Max( Max( Min( Max( ( ( DS * CS ) / ( CS - MUM ) ),( ( MLU / MUM ) * ( CS + DS ) ) ) ,( ( Max( RCSe,RMSe ) / ( CS - CS ) ) - ( ( RCSe - CS ) / Max( RRSe,RMSe ) ) ) ),Max( ( ( ( CS * MUM ) + ( DS * RRSe ) ) / ( Min( MUR ,CS ) / ( MUR + MUC ) ) ),( Max( Min( MUR ,DS ),Max( MUR,MUC ) ) - Max( ( MUM + MLU ),( MLU / CS ) ) ) ) ),( Min( Max( ( ( MUR + RRSe ) * ( RCSe - RMSe ) ),( Min( RMSe ,MLU ) * Min( MUC ,RMSe ) ) ) ,Max( ( ( DS / RRSe ) * ( CS - DS ) ),( Min( MUM ,MUR ) + ( MUM - CS ) ) ) ) + ( ( ( ( MUC * MUR ) + ( RRSe - RMSe ) ) * Min( ( RCSe / MUC ) ,( RMSe - MUC ) ) ) - ( ( ( MUM + RCSe ) + Max( MUC,RCSe ) ) + Max( ( RMSe - RMSe ),( MUM - MUR ) ) ) ) ) ) - ( ( ( ( ( ( DS - RCSe ) + ( MLU * MUM ) ) * ( Max( CS,MUM ) - ( MUR - MLU ) ) ) - ( Max( ( MUR / MUC ),Max( RRSe,MUM ) ) - ( Min( RMSe ,MLU ) * Max( MUC,DS ) ) ) ) + Min( ( ( Max( MUC,MLU ) + ( RMSe + MUM ) ) / ( Max( CS,MLU ) * Max( MUM,CS ) ) ) ,Max( ( ( MLU - MLU ) / ( DS / MUM ) ),Max( Min( MUC ,MUM ),Min( CS ,CS ) ) ) ) ) - ( Min( ( Max( Max( RCSe,DS ),Max( MLU,MUM ) ) + ( Min( MUR ,MLU ) * ( RCSe + RRSe ) ) ) ,Min( Min( ( DS - DS ) ,( MUR - MUR ) ) ,( ( RRSe * RRSe ) / Max( CS,RMSe ) ) ) ) - ( Min( ( ( RMSe - RMSe ) / ( RRSe + RRSe ) ) ,Min( Min( DS ,MLU ) ,Min( DS ,RMSe ) ) ) + Max( ( Min( RRSe ,MLU ) + Min( CS ,RMSe ) ),( ( RRSe * RCSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.77174485616461}, {"determining": "Min( ( ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( Min( ( ( ( ( ( MLU * MUC ) * ( DS - RCSe ) ) + ( Min( MUC ,MLU ) + Max( RCSe,CS ) ) ) + ( ( ( RCSe - MLU ) - ( RCSe / MUM ) ) * Max( ( RMSe * MUM ),( MUM + MLU ) ) ) ) / Min( Min( ( ( RCSe * MUR ) + Min( MLU ,RMSe ) ) ,( ( RRSe / CS ) - ( MUR * RCSe ) ) ) ,( ( ( MUC + CS ) / ( CS / MUC ) ) / Min( Max( MUM,MUC ) ,( DS * MUR ) ) ) ) ) ,( Min( Max( Min( Max( CS,RCSe ) ,( RCSe / MUR ) ),Max( Min( RCSe ,MLU ),( MUR + RCSe ) ) ) ,( Max( ( MUR + RCSe ),( RMSe + RMSe ) ) * ( ( MUM / MUM ) - ( RRSe - MUR ) ) ) ) + Min( ( ( ( DS - RRSe ) - Min( MUR ,RCSe ) ) + ( ( MUR + DS ) / Max( RCSe,MUC ) ) ) ,( ( Min( MUM ,RRSe ) + Max( MLU,RRSe ) ) * ( ( RRSe * DS ) * ( DS - CS ) ) ) ) ) ),( Max( Max( ( Max( ( DS - DS ),Min( MUC ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ),( ( Min( MUM ,RMSe ) / ( RMSe - DS ) ) + ( Max( CS,RRSe ) * Max( RCSe,MUM ) ) ) ),( Min( ( ( MUM * DS ) / ( MLU / MLU ) ) ,( ( MUM / CS ) / ( CS - RRSe ) ) ) - ( Min( ( MLU + RMSe ) ,Max( RMSe,MLU ) ) / ( ( MUM / MUR ) + Min( MLU ,CS ) ) ) ) ) * ( ( Min( Min( Min( RRSe ,MUM ) ,( CS * MUM ) ) ,( Max( RMSe,DS ) - Min( MUC ,MUC ) ) ) * ( ( ( DS * MUC ) / ( DS + CS ) ) / ( ( DS / RCSe ) + ( MUM / MUR ) ) ) ) + ( ( Max( ( CS * MUR ),( MLU - DS ) ) * Max( Max( CS,RMSe ),Min( RRSe ,MLU ) ) ) / Max( Max( Min( RMSe ,CS ),( MUC * RCSe ) ),Min( Min( MUC ,MLU ) ,Min( RMSe ,MUC ) ) ) ) ) ) ) - ( Max( Max( Min( Max( ( ( DS * CS ) / ( CS - MUM ) ),( ( MLU / MUM ) * ( CS + DS ) ) ) ,( ( Max( RCSe,RMSe ) / ( CS - CS ) ) - ( ( RCSe - CS ) / Max( RRSe,RMSe ) ) ) ),Max( ( ( ( CS * MUM ) + ( DS * RRSe ) ) / ( Min( MUR ,CS ) / ( MUR + MUC ) ) ),( Max( Min( MUR ,DS ),Max( MUR,MUC ) ) - Max( ( MUM + MLU ),( MLU / CS ) ) ) ) ),( Min( Max( ( ( MUR + RRSe ) * ( RCSe - RMSe ) ),( Min( RMSe ,MLU ) * Min( MUC ,RMSe ) ) ) ,Max( ( ( DS / RRSe ) * ( CS - DS ) ),( Min( MUM ,MUR ) + ( MUM - CS ) ) ) ) + ( ( ( ( MUC * MUR ) + ( RRSe - RMSe ) ) * Min( ( RCSe / MUC ) ,( RMSe - MUC ) ) ) - ( ( ( MUM + RCSe ) + Max( MUC,RCSe ) ) + Max( ( RMSe - RMSe ),( MUM - MUR ) ) ) ) ) ) - ( ( ( ( ( ( DS - RCSe ) + ( MLU * MUM ) ) * ( Max( CS,MUM ) - ( MUR - MLU ) ) ) - ( Max( ( MUR / MUC ),Max( RRSe,MUM ) ) - ( Min( RMSe ,MLU ) * Max( MUC,DS ) ) ) ) + Min( ( ( Max( MUC,MLU ) + ( RMSe + MUM ) ) / ( Max( CS,MLU ) * Max( MUM,CS ) ) ) ,Max( ( ( MLU - MLU ) / ( DS / MUM ) ),Max( Min( MUC ,MUM ),Min( CS ,CS ) ) ) ) ) - ( Min( ( Max( Max( RCSe,DS ),Max( MLU,MUM ) ) + ( Min( MUR ,MLU ) * ( RCSe + RRSe ) ) ) ,Min( Min( ( DS - DS ) ,( MUR - MUR ) ) ,( ( RRSe * RRSe ) / Max( CS,RMSe ) ) ) ) - ( Min( ( ( RMSe - RMSe ) / ( RRSe + RRSe ) ) ,Min( Min( DS ,MLU ) ,Min( DS ,RMSe ) ) ) + Max( ( Min( RRSe ,MLU ) + Min( CS ,RMSe ) ),( ( RRSe * RCSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.77174485616461}, {"determining": "( ( MRS / FirstVNF_RAM ) + ( ( DDR * Const ) + ( AMS / DDR ) ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - ( ( MUC * DS ) - DS ) )", "obj1": 0.12655601659751037, "obj2": 0.7012213362236587}, {"determining": "Min( ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( RRSe,( Max( Max( ( Max( ( DS - DS ),Min( MUC ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ),( ( Min( MUM ,RMSe ) / ( RMSe - DS ) ) + ( Max( CS,RRSe ) * Max( RCSe,MUM ) ) ) ),( Min( ( ( MUM * DS ) / ( MLU / MLU ) ) ,( ( MUM / CS ) / ( CS - RRSe ) ) ) - ( Min( ( MLU + RMSe ) ,Max( RMSe,MLU ) ) / ( ( MUM / MUR ) + Min( MLU ,CS ) ) ) ) ) * ( ( Min( Min( Min( RRSe ,MUM ) ,( CS * MUM ) ) ,( Max( RMSe,DS ) - Min( MUC ,MUC ) ) ) * ( ( ( DS * MUC ) / ( DS + CS ) ) / ( ( DS / RCSe ) + ( MUM / MUR ) ) ) ) + ( ( Max( ( CS * MUR ),( MLU - DS ) ) * Max( Max( CS,RMSe ),Min( RRSe ,MLU ) ) ) / Max( Max( Min( RMSe ,CS ),( MUC * RCSe ) ),Min( Min( MUC ,MLU ) ,Min( RMSe ,MUC ) ) ) ) ) ) ) - ( Max( Max( Min( Max( ( ( DS * CS ) / ( CS - MUM ) ),( ( MLU / MUM ) * ( CS + DS ) ) ) ,( ( Max( RCSe,RMSe ) / ( CS - CS ) ) - ( ( RCSe - CS ) / Max( RRSe,RMSe ) ) ) ),Max( ( ( ( CS * MUM ) + ( DS * RRSe ) ) / ( Min( MUR ,CS ) / ( MUR + MUC ) ) ),( Max( Min( MUR ,DS ),Max( MUR,MUC ) ) - Max( ( MUM + MLU ),( MLU / CS ) ) ) ) ),( Min( Max( ( ( MUR + RRSe ) * ( RCSe - RMSe ) ),( Min( RMSe ,MLU ) * Min( MUC ,RMSe ) ) ) ,Max( ( ( DS / RRSe ) * ( CS - DS ) ),( Min( MUM ,MUR ) + ( MUM - CS ) ) ) ) + ( ( ( ( MUC * MUR ) + ( RRSe - RMSe ) ) * Min( ( RCSe / MUC ) ,( RMSe - MUC ) ) ) - ( ( ( MUM + RCSe ) + Max( MUC,RCSe ) ) + Max( ( RMSe - RMSe ),( MUM - MUR ) ) ) ) ) ) - ( ( ( ( ( ( DS - RCSe ) + ( MLU * MUM ) ) * ( Max( CS,MUM ) - ( MUR - MLU ) ) ) - ( Max( ( MUR / MUC ),Max( RRSe,MUM ) ) - ( Min( RMSe ,MLU ) * Max( MUC,DS ) ) ) ) + Min( ( ( Max( MUC,MLU ) + ( RMSe + MUM ) ) / ( Max( CS,MLU ) * Max( MUM,CS ) ) ) ,Max( ( ( MLU - MLU ) / ( DS / MUM ) ),Max( Min( MUC ,MUM ),Min( CS ,CS ) ) ) ) ) - ( Min( ( Max( Max( RCSe,DS ),Max( MLU,MUM ) ) + ( Min( MUR ,MLU ) * ( RCSe + RRSe ) ) ) ,Min( Min( ( DS - DS ) ,( MUR - MUR ) ) ,( ( RRSe * RRSe ) / Max( CS,RMSe ) ) ) ) - ( Min( ( ( RMSe - RMSe ) / ( RRSe + RRSe ) ) ,Min( Min( DS ,MLU ) ,Min( DS ,RMSe ) ) ) + Max( ( Min( RRSe ,MLU ) + Min( CS ,RMSe ) ),( ( RRSe * RCSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.77174485616461}, {"determining": "Min( ( ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,( FirstVNF_RAM_Server / MRS ) ) )", "choosing": "( Max( Min( ( ( ( ( ( MLU * MUC ) * ( DS - RCSe ) ) + ( Min( MUC ,MLU ) + Max( RCSe,CS ) ) ) + ( ( ( RCSe - MLU ) - ( RCSe / MUM ) ) * Max( ( RMSe * MUM ),( MUM + MLU ) ) ) ) / Min( Min( ( ( RCSe * MUR ) + Min( MLU ,RMSe ) ) ,( ( RRSe / CS ) - ( MUR * RCSe ) ) ) ,( ( ( MUC + CS ) / ( CS / MUC ) ) / Min( Max( MUM,MUC ) ,( DS * MUR ) ) ) ) ) ,( Min( Max( Min( Max( CS,RCSe ) ,( RCSe / MUR ) ),Max( Min( RCSe ,MLU ),( MUR + RCSe ) ) ) ,( Max( ( MUR + RCSe ),( RMSe + RMSe ) ) * ( ( MUM / MUM ) - ( RRSe - MUR ) ) ) ) + Min( ( ( ( DS - RRSe ) - Min( MUR ,RCSe ) ) + ( ( MUR + DS ) / Max( RCSe,MUC ) ) ) ,( ( Min( MUM ,RRSe ) + Max( MLU,RRSe ) ) * ( ( RRSe * DS ) * ( DS - CS ) ) ) ) ) ),( Max( Max( ( Max( ( DS - DS ),Min( MUC ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ),( ( Min( MUM ,RMSe ) / ( RMSe - DS ) ) + ( Max( CS,RRSe ) * Max( RCSe,MUM ) ) ) ),( Min( ( ( MUM * DS ) / ( MLU / MLU ) ) ,( ( MUM / CS ) / ( CS - RRSe ) ) ) - ( Min( ( MLU + RMSe ) ,Max( RMSe,MLU ) ) / ( ( MUM / MUR ) + Min( MLU ,CS ) ) ) ) ) * ( ( Min( Min( Min( RRSe ,MUM ) ,( CS * MUM ) ) ,( Max( RMSe,DS ) - Min( MUC ,MUC ) ) ) * ( ( ( DS * MUC ) / ( DS + CS ) ) / ( ( DS / RCSe ) + ( MUM / MUR ) ) ) ) + ( ( Max( ( CS * MUR ),( MLU - DS ) ) * Max( Max( CS,RMSe ),Min( RRSe ,MLU ) ) ) / Max( Max( Min( RMSe ,CS ),( MUC * RCSe ) ),Min( Min( MUC ,MLU ) ,Min( RMSe ,MUC ) ) ) ) ) ) ) - ( Max( Max( Min( Max( ( ( DS * CS ) / ( CS - MUM ) ),( ( MLU / MUM ) * ( CS + DS ) ) ) ,( ( Max( RCSe,RMSe ) / ( CS - CS ) ) - ( ( RCSe - CS ) / Max( RRSe,RMSe ) ) ) ),Max( ( ( ( CS * MUM ) + ( DS * RRSe ) ) / ( Min( MUR ,CS ) / ( MUR + MUC ) ) ),( Max( Min( MUR ,DS ),Max( MUR,MUC ) ) - Max( ( MUM + MLU ),( MLU / CS ) ) ) ) ),( Min( Max( ( ( MUR + RRSe ) * ( RCSe - RMSe ) ),( Min( RMSe ,MLU ) * Min( MUC ,RMSe ) ) ) ,Max( ( ( DS / RRSe ) * ( CS - DS ) ),( Min( MUM ,MUR ) + ( MUM - CS ) ) ) ) + ( ( ( ( MUC * MUR ) + ( RRSe - RMSe ) ) * Min( ( RCSe / MUC ) ,( RMSe - MUC ) ) ) - ( ( ( MUM + RCSe ) + Max( MUC,RCSe ) ) + Max( ( RMSe - RMSe ),( MUM - MUR ) ) ) ) ) ) - ( ( ( ( ( ( DS - RCSe ) + ( MLU * MUM ) ) * ( Max( CS,MUM ) - ( MUR - MLU ) ) ) - ( Max( ( MUR / MUC ),Max( RRSe,MUM ) ) - ( Min( RMSe ,MLU ) * Max( MUC,DS ) ) ) ) + Min( ( ( Max( MUC,MLU ) + ( RMSe + MUM ) ) / ( Max( CS,MLU ) * Max( MUM,CS ) ) ) ,Max( ( ( MLU - MLU ) / ( DS / MUM ) ),Max( Min( MUC ,MUM ),Min( CS ,CS ) ) ) ) ) - ( Min( ( Max( Max( RCSe,DS ),Max( MLU,MUM ) ) + ( Min( MUR ,MLU ) * ( RCSe + RRSe ) ) ) ,Min( Min( ( DS - DS ) ,( MUR - MUR ) ) ,( ( RRSe * RRSe ) / Max( CS,RMSe ) ) ) ) - ( Min( ( ( RMSe - RMSe ) / ( RRSe + RRSe ) ) ,Min( Min( DS ,MLU ) ,Min( DS ,RMSe ) ) ) + Max( ( Min( RRSe ,MLU ) + Min( CS ,RMSe ) ),( ( RRSe * RCSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.77174485616461}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,RMSe ) * ( Max( ( DS - DS ),Min( MUC ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ) )", "obj1": 0.1037344398340249, "obj2": 0.7738272717865934}, {"determining": "( ( MDR * ( ( MDR * ( ( DDR / MRS ) + Max( Max( BR,BR ),( ARS - CRS ) ) ) ) - FirstVNF_RAM ) ) + FirstVNF_RAM )", "choosing": "( Max( ( Max( DS,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) ),MLU ) * ( ( Max( MLU,RRSe ) * Max( ( RMSe * ( MUC - RMSe ) ),( ( MLU - CS ) - ( ( MUR + DS ) * DS ) ) ) ) - ( RRSe * DS ) ) )", "obj1": 0.13278008298755187, "obj2": 0.6902136633869949}, {"determining": "Min( ( ( MDR * ( ( FirstVNF_RAM_Server / MRS ) - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( Min( ( ( ( ( ( MLU * MUC ) * ( DS - RCSe ) ) + ( Min( MUC ,MLU ) + Max( RCSe,CS ) ) ) + ( ( ( RCSe - MLU ) - ( RCSe / MUM ) ) * Max( ( RMSe * MUM ),( MUM + MLU ) ) ) ) / Min( Min( ( ( RCSe * MUR ) + Min( MLU ,RMSe ) ) ,( ( RRSe / CS ) - ( MUR * RCSe ) ) ) ,( ( ( MUC + CS ) / ( CS / MUC ) ) / Min( Max( MUM,MUC ) ,( DS * MUR ) ) ) ) ) ,( Min( Max( Min( Max( CS,RCSe ) ,( RCSe / MUR ) ),Max( Min( RCSe ,MLU ),( MUR + RCSe ) ) ) ,( Max( ( MUR + RCSe ),( RMSe + RMSe ) ) * ( ( MUM / MUM ) - ( RRSe - MUR ) ) ) ) + Min( ( ( ( DS - RRSe ) - Min( MUR ,RCSe ) ) + ( ( MUR + DS ) / Max( RCSe,MUC ) ) ) ,( ( Min( MUM ,RRSe ) + Max( MLU,RRSe ) ) * ( ( RRSe * DS ) * ( DS - CS ) ) ) ) ) ),( Max( Max( ( Max( ( DS - DS ),Min( MUC ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ),( ( Min( MUM ,RMSe ) / ( RMSe - DS ) ) + ( Max( CS,RRSe ) * Max( RCSe,MUM ) ) ) ),( Min( ( ( MUM * DS ) / ( MLU / MLU ) ) ,( ( MUM / CS ) / ( CS - RRSe ) ) ) - ( Min( ( MLU + RMSe ) ,Max( RMSe,MLU ) ) / ( ( MUM / MUR ) + Min( MLU ,CS ) ) ) ) ) * ( ( Min( Min( Min( RRSe ,MUM ) ,( CS * MUM ) ) ,( Max( RMSe,DS ) - Min( MUC ,MUC ) ) ) * ( ( ( DS * MUC ) / ( DS + CS ) ) / ( ( DS / RCSe ) + ( MUM / MUR ) ) ) ) + ( ( Max( ( CS * MUR ),( MLU - DS ) ) * Max( Max( CS,RMSe ),Min( RRSe ,MLU ) ) ) / Max( Max( Min( RMSe ,CS ),( MUC * RCSe ) ),Min( Min( MUC ,MLU ) ,Min( RMSe ,MUC ) ) ) ) ) ) ) - ( Max( Max( Min( Max( ( ( DS * CS ) / ( CS - MUM ) ),( ( MLU / MUM ) * ( CS + DS ) ) ) ,( ( Max( RCSe,RMSe ) / ( CS - CS ) ) - ( ( RCSe - CS ) / Max( RRSe,RMSe ) ) ) ),Max( ( ( ( CS * MUM ) + ( DS * RRSe ) ) / ( Min( MUR ,CS ) / ( MUR + MUC ) ) ),( Max( Min( MUR ,DS ),Max( MUR,MUC ) ) - Max( ( MUM + MLU ),( MLU / CS ) ) ) ) ),( Min( Max( ( ( MUR + RRSe ) * ( RCSe - RMSe ) ),( Min( RMSe ,MLU ) * Min( MUC ,RMSe ) ) ) ,Max( ( ( DS / RRSe ) * ( CS - DS ) ),( Min( MUM ,MUR ) + ( MUM - CS ) ) ) ) + ( ( ( ( MUC * MUR ) + ( RRSe - RMSe ) ) * Min( ( RCSe / MUC ) ,( RMSe - MUC ) ) ) - ( ( ( MUM + RCSe ) + Max( MUC,RCSe ) ) + Max( ( RMSe - RMSe ),( MUM - MUR ) ) ) ) ) ) - ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) ) )", "obj1": 0.0912863070539419, "obj2": 0.7812640335838853}, {"determining": "Min( ( ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,Min( AMS ,DDR ) )", "choosing": "( Max( Min( ( ( ( ( ( MLU * MUC ) * ( DS - RCSe ) ) + ( Min( MUC ,MLU ) + Max( RCSe,CS ) ) ) + ( ( ( RCSe - MLU ) - ( RCSe / MUM ) ) * Max( ( RMSe * MUM ),( MUM + MLU ) ) ) ) / Min( Min( ( ( RCSe * MUR ) + Min( MLU ,RMSe ) ) ,( ( RRSe / CS ) - ( MUR * RCSe ) ) ) ,( ( ( MUC + CS ) / ( CS / MUC ) ) / Min( Max( MUM,MUC ) ,( DS * MUR ) ) ) ) ) ,( Min( Max( Min( Max( CS,RCSe ) ,( RCSe / MUR ) ),Max( Min( RCSe ,MLU ),( MUR + RCSe ) ) ) ,( Max( ( MUR + RCSe ),( RMSe + RMSe ) ) * ( ( MUM / MUM ) - ( RRSe - MUR ) ) ) ) + Min( ( ( ( DS - RRSe ) - Min( MUR ,RCSe ) ) + ( ( MUR + DS ) / Max( RCSe,MUC ) ) ) ,( ( Min( MUM ,RRSe ) + Max( MLU,RRSe ) ) * ( ( RRSe * DS ) * ( DS - CS ) ) ) ) ) ),( Max( Max( ( Max( ( DS - DS ),Min( MUC ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ),( ( Min( MUM ,RMSe ) / ( RMSe - DS ) ) + ( Max( CS,RRSe ) * Max( RCSe,MUM ) ) ) ),( Min( ( ( MUM * DS ) / ( MLU / MLU ) ) ,( ( MUM / CS ) / ( CS - RRSe ) ) ) - ( Min( ( MLU + RMSe ) ,Max( RMSe,MLU ) ) / ( ( MUM / MUR ) + Min( MLU ,CS ) ) ) ) ) * ( ( Min( Min( Min( RRSe ,MUM ) ,( CS * MUM ) ) ,( Max( RMSe,DS ) - Min( MUC ,MUC ) ) ) * ( ( ( DS * MUC ) / ( DS + CS ) ) / ( ( DS / RCSe ) + ( MUM / MUR ) ) ) ) + ( ( Max( ( CS * MUR ),( MLU - DS ) ) * Max( Max( CS,RMSe ),Min( RRSe ,MLU ) ) ) / Max( Max( Min( RMSe ,CS ),( MUC * RCSe ) ),Min( Min( MUC ,MLU ) ,Min( RMSe ,MUC ) ) ) ) ) ) ) - ( Max( Max( Min( Max( ( ( DS * CS ) / ( CS - MUM ) ),( ( MLU / MUM ) * ( CS + DS ) ) ) ,( ( Max( RCSe,RMSe ) / ( CS - CS ) ) - ( ( RCSe - CS ) / Max( RRSe,RMSe ) ) ) ),Max( ( ( ( CS * MUM ) + ( DS * RRSe ) ) / ( Min( MUR ,CS ) / ( MUR + MUC ) ) ),( Max( Min( MUR ,DS ),Max( MUR,MUC ) ) - Max( ( MUM + MLU ),( MLU / CS ) ) ) ) ),( Min( Max( ( ( MUR + RRSe ) * ( RCSe - RMSe ) ),( Min( RMSe ,MLU ) * Min( MUC ,RMSe ) ) ) ,Max( ( ( DS / RRSe ) * ( CS - DS ) ),( Min( MUM ,MUR ) + ( MUM - CS ) ) ) ) + ( ( ( ( MUC * MUR ) + ( RRSe - RMSe ) ) * Min( ( RCSe / MUC ) ,( RMSe - MUC ) ) ) - ( ( ( MUM + RCSe ) + Max( MUC,RCSe ) ) + Max( ( RMSe - RMSe ),( MUM - MUR ) ) ) ) ) ) - ( ( ( ( ( ( DS - RCSe ) + ( MLU * MUM ) ) * ( Max( CS,MUM ) - ( MUR - MLU ) ) ) - ( Max( ( MUR / MUC ),Max( RRSe,MUM ) ) - ( Min( RMSe ,MLU ) * Max( MUC,DS ) ) ) ) + Min( ( ( Max( MUC,MLU ) + ( RMSe + MUM ) ) / ( Max( CS,MLU ) * Max( MUM,CS ) ) ) ,Max( ( ( MLU - MLU ) / ( DS / MUM ) ),Max( Min( MUC ,MUM ),Min( CS ,CS ) ) ) ) ) - ( Min( ( Max( Max( RCSe,DS ),Max( MLU,MUM ) ) + ( Min( MUR ,MLU ) * ( RCSe + RRSe ) ) ) ,( Min( ( DS - DS ) ,( MUR - MUR ) ) * ( ( RRSe * RRSe ) / Max( CS,RMSe ) ) ) ) - ( Min( ( ( RMSe - RMSe ) / ( RRSe + RRSe ) ) ,Min( Min( DS ,MLU ) ,Min( DS ,RMSe ) ) ) + Max( ( Min( RRSe ,MLU ) + Min( CS ,RMSe ) ),( ( RRSe * RCSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.77174485616461}, {"determining": "Min( ( ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( Min( ( ( ( ( ( MLU * MUC ) * ( DS - RCSe ) ) + ( Min( MUC ,MLU ) + Max( RCSe,CS ) ) ) + ( ( ( RCSe - MLU ) - ( RCSe / MUM ) ) * Max( ( RMSe * MUM ),( MUM + MLU ) ) ) ) / Min( Min( ( ( RCSe * MUR ) + Min( MLU ,RMSe ) ) ,( ( RRSe / CS ) - ( MUR * RCSe ) ) ) ,( ( ( MUC + CS ) / ( CS / MUC ) ) / Min( Max( MUM,MUC ) ,( DS * MUR ) ) ) ) ) ,( Min( Max( Min( Max( CS,RCSe ) ,( RCSe / MUR ) ),Max( Min( RCSe ,MLU ),( MUR + RCSe ) ) ) ,( Max( ( MUR + RCSe ),( RMSe + RMSe ) ) * ( ( MUM / MUM ) - ( RRSe - MUR ) ) ) ) + Min( ( ( ( DS - RRSe ) - Min( MUR ,RCSe ) ) + ( ( MUR + DS ) / Max( RCSe,MUC ) ) ) ,( ( Min( MUM ,RRSe ) + Max( MLU,RRSe ) ) * ( ( RRSe * DS ) * ( DS - CS ) ) ) ) ) ),( Max( Max( ( Max( ( DS - DS ),Min( MUC ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ),( ( Min( MUM ,RMSe ) / ( RMSe - DS ) ) + ( Max( CS,RRSe ) * Max( RCSe,MUM ) ) ) ),( Min( ( ( MUM * DS ) / ( MLU / MLU ) ) ,( ( MUM / CS ) / ( CS - RRSe ) ) ) - ( Min( ( MLU + RMSe ) ,Max( RMSe,MLU ) ) / ( ( MUM / MUR ) + Min( MLU ,CS ) ) ) ) ) * ( ( Min( Min( Min( RRSe ,MUM ) ,( CS * MUM ) ) ,( Max( RMSe,DS ) - Min( MUC ,MUC ) ) ) * ( ( ( DS * MUC ) / ( DS + CS ) ) / ( ( DS / RCSe ) + ( MUM / MUR ) ) ) ) + ( ( Max( ( CS * MUR ),( MLU - DS ) ) * Max( Max( CS,RMSe ),Min( RRSe ,MLU ) ) ) / Max( Max( Min( RMSe ,CS ),( MUC * RCSe ) ),Min( Min( MUC ,MLU ) ,Min( RMSe ,MUC ) ) ) ) ) ) ) - ( Max( Max( Min( Max( ( ( DS * CS ) / ( CS - MUM ) ),( ( MLU / MUM ) * ( CS + DS ) ) ) ,( ( Max( RCSe,RMSe ) / ( CS - CS ) ) - ( ( RCSe - CS ) / Max( RRSe,RMSe ) ) ) ),Max( ( ( ( CS * MUM ) + ( DS * RRSe ) ) / ( Min( MUR ,CS ) / ( MUR + MUC ) ) ),( Max( Min( MUR ,DS ),Max( MUR,MUC ) ) - Max( ( MUM + MLU ),( MLU / CS ) ) ) ) ),( Min( Max( ( ( MUR + RRSe ) * ( RCSe - RMSe ) ),( Min( RMSe ,MLU ) * Min( MUC ,RMSe ) ) ) ,Max( ( ( DS / RRSe ) * ( CS - DS ) ),( Min( MUM ,MUR ) + ( MUM - CS ) ) ) ) + ( ( ( ( MUC * MUR ) + ( RRSe - RMSe ) ) * Min( ( RCSe / MUC ) ,( RMSe - MUC ) ) ) - ( ( ( MUM + RCSe ) + Max( MUC,RCSe ) ) + Max( ( RMSe - RMSe ),( MUM - MUR ) ) ) ) ) ) - ( ( ( ( ( ( DS - RCSe ) + ( MLU * MUM ) ) * ( Max( CS,MUM ) - ( MUR - MLU ) ) ) - ( Max( ( MUR / MUC ),Max( RRSe,MUM ) ) - ( Min( RMSe ,MLU ) * Max( MUC,DS ) ) ) ) + Min( ( ( Max( MUC,MLU ) + ( RMSe + MUM ) ) / ( Max( CS,MLU ) * Max( MUM,CS ) ) ) ,Max( ( ( MLU - MLU ) / ( DS / MUM ) ),Max( Min( MUC ,MUM ),Min( CS ,CS ) ) ) ) ) - ( Min( ( Max( Max( RCSe,DS ),Max( MLU,MUM ) ) + ( Min( MUR ,MLU ) * ( RCSe + RRSe ) ) ) ,Min( Min( ( DS - DS ) ,( MUR - MUR ) ) ,( ( RRSe * RRSe ) / Max( CS,RMSe ) ) ) ) - ( Min( ( ( RMSe - RMSe ) / ( RRSe + RRSe ) ) ,Min( Min( DS ,MLU ) ,Min( DS ,RMSe ) ) ) + Max( ( Min( RRSe ,MLU ) + Min( CS ,RMSe ) ),( ( RRSe * RCSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.77174485616461}, {"determining": "Min( ( ( MDR * ( ( AMS / MRS ) - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( Min( ( ( ( ( ( MLU * MUC ) * ( DS - RCSe ) ) + ( Min( MUC ,MLU ) + Max( RCSe,CS ) ) ) + ( ( ( RCSe - MLU ) - ( RCSe / MUM ) ) * Max( ( RMSe * MUM ),( MUM + MLU ) ) ) ) / Min( Min( ( ( RCSe * MUR ) + Min( MLU ,RMSe ) ) ,( ( RRSe / CS ) - ( MUR * RCSe ) ) ) ,( ( ( MUC + CS ) / ( CS / MUC ) ) / Min( Max( MUM,MUC ) ,( DS * MUR ) ) ) ) ) ,( Min( Max( Min( Max( CS,RCSe ) ,( RCSe / MUR ) ),Max( Min( RCSe ,MLU ),( MUR + RCSe ) ) ) ,( Max( ( MUR + RCSe ),( RMSe + RMSe ) ) * ( ( MUM / MUM ) - ( RRSe - MUR ) ) ) ) + Min( ( ( ( DS - RRSe ) - Min( MUR ,RCSe ) ) + ( ( MUR + DS ) / Max( RCSe,MUC ) ) ) ,( ( Min( MUM ,RRSe ) + Max( MLU,RRSe ) ) * ( ( RRSe * DS ) * ( RMSe - CS ) ) ) ) ) ),( Max( Max( ( Max( ( DS - DS ),Min( MUC ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ),( ( Min( MUM ,RMSe ) / ( RMSe - DS ) ) + ( Max( CS,RRSe ) * Max( RCSe,MUM ) ) ) ),( Min( ( ( MUM * DS ) / ( MLU / MLU ) ) ,( ( MUM / CS ) / ( CS - RRSe ) ) ) - ( Min( ( MLU + RMSe ) ,Max( RMSe,MLU ) ) / ( ( MUM / MUR ) + Min( MLU ,CS ) ) ) ) ) * ( ( Min( Min( Min( RRSe ,MUM ) ,( CS * MUM ) ) ,( Max( RMSe,DS ) - Min( MUC ,MUC ) ) ) * ( ( ( DS * MUC ) / ( DS + CS ) ) / ( ( DS / RCSe ) + ( MUM / MUR ) ) ) ) + ( ( Max( ( CS * MUR ),( MLU - DS ) ) * Max( Max( CS,RMSe ),Min( RRSe ,MLU ) ) ) / Max( Max( Min( RMSe ,CS ),( MUC * RCSe ) ),Min( Min( MUC ,MLU ) ,Min( RMSe ,MUC ) ) ) ) ) ) ) - ( Max( Max( Min( Max( ( ( DS * CS ) / ( CS - MUM ) ),( ( MLU / MUM ) * ( CS + DS ) ) ) ,( ( Max( RCSe,RMSe ) / ( CS - CS ) ) - ( ( RCSe - CS ) / Max( RRSe,RMSe ) ) ) ),Max( ( ( ( CS * MUM ) + ( DS * RRSe ) ) / ( Min( MUR ,CS ) / ( MUR + MUC ) ) ),( Max( Min( MUR ,DS ),Max( MUR,MUC ) ) - Max( ( MUM + MLU ),( MLU / CS ) ) ) ) ),( Min( Max( ( ( MUR + RRSe ) * ( RCSe - RMSe ) ),( Min( RMSe ,MLU ) * Min( MUC ,RMSe ) ) ) ,Max( ( ( CS / RRSe ) * ( CS - DS ) ),( Min( MUM ,MUR ) + ( MUM - CS ) ) ) ) + ( ( ( ( MUC * MUR ) + ( RRSe - RMSe ) ) * Min( ( RCSe / MUC ) ,( RMSe - MUC ) ) ) - ( ( ( MUM + RCSe ) + Max( MUC,RCSe ) ) + Max( ( RMSe - RMSe ),( MUM - MUR ) ) ) ) ) ) - ( ( ( ( ( ( DS - RCSe ) + ( MLU * MUM ) ) * ( Max( CS,MUM ) - ( MUR - MLU ) ) ) - ( Max( ( MUR / MUC ),Max( RRSe,MUM ) ) - ( Min( RMSe ,MLU ) * Max( MUC,DS ) ) ) ) + Min( ( ( Max( MUC,MLU ) + ( RMSe + MUM ) ) / ( Max( CS,MLU ) * Max( MUM,CS ) ) ) ,Max( ( ( MLU - MLU ) / ( DS / MUM ) ),Max( Min( MUC ,MUM ),Min( CS ,CS ) ) ) ) ) - ( Min( ( Max( Max( RCSe,DS ),Max( MLU,MUM ) ) + ( Min( MUR ,MLU ) * ( RCSe + RRSe ) ) ) ,Min( Min( ( DS - DS ) ,( MUR - MUR ) ) ,( ( RRSe * RRSe ) / Max( CS,RMSe ) ) ) ) - ( Min( ( ( RMSe - RMSe ) / ( RRSe + RRSe ) ) ,Min( Min( DS ,MLU ) ,Min( DS ,RMSe ) ) ) + Max( ( Min( RRSe ,MLU ) + Min( CS ,RMSe ) ),( ( RRSe * RCSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.77174485616461}, {"determining": "Min( ( ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + Max( Max( BR,BR ),( ARS - CRS ) ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( Min( ( ( ( ( ( MLU * MUC ) * ( DS - RCSe ) ) + ( Min( MUC ,MLU ) + Max( RCSe,CS ) ) ) + ( ( ( RCSe - MLU ) - ( RCSe / MUM ) ) * Max( ( RMSe * MUM ),( MUM + MLU ) ) ) ) / Min( Min( ( ( RCSe * MUR ) + Min( MLU ,RMSe ) ) ,( ( RRSe / CS ) - ( MUR * RCSe ) ) ) ,( ( ( MUC + CS ) / ( CS / MUC ) ) / Min( Max( MUM,MUC ) ,( DS * MUR ) ) ) ) ) ,( Min( Max( Min( Max( CS,RCSe ) ,( RCSe / MUR ) ),Max( Min( RCSe ,MLU ),( MUR + RCSe ) ) ) ,( Max( ( MUR + RCSe ),( RMSe + RMSe ) ) * ( ( MUM / MUM ) - ( RRSe - MUR ) ) ) ) + Min( ( ( ( DS - RRSe ) - Min( MUR ,RCSe ) ) + ( ( MUR + DS ) / Max( RCSe,MUC ) ) ) ,( ( Min( MUM ,RRSe ) + Max( MLU,RRSe ) ) * ( ( RRSe * DS ) * ( DS - CS ) ) ) ) ) ),( Max( Max( ( Max( ( DS - DS ),Min( MUC ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ),( ( Min( MUM ,RMSe ) / ( RMSe - DS ) ) + ( Max( CS,RRSe ) * Max( RCSe,MUM ) ) ) ),( Min( ( ( MUM * DS ) / ( MLU / MLU ) ) ,( ( MUM / CS ) / ( CS - RRSe ) ) ) - ( Min( ( MLU + RMSe ) ,Max( RMSe,MLU ) ) / ( ( MUM / MUR ) + Min( MLU ,CS ) ) ) ) ) * ( ( Min( Min( Min( RRSe ,MUM ) ,( CS * MUM ) ) ,( Max( RMSe,DS ) - Min( MUC ,MUC ) ) ) * ( ( ( DS * MUC ) / ( DS + CS ) ) / ( ( DS / RCSe ) + ( MUM / MUR ) ) ) ) + ( ( Max( ( CS * MUR ),( MLU - DS ) ) * Max( Max( CS,RMSe ),Min( RRSe ,MLU ) ) ) / Max( Max( Min( RMSe ,CS ),( MUC * RCSe ) ),Min( Min( MUC ,MLU ) ,Min( RMSe ,MUC ) ) ) ) ) ) ) - ( Max( Max( Min( Max( ( ( DS * CS ) / ( CS - MUM ) ),( ( MLU / MUM ) * ( CS + DS ) ) ) ,( ( Max( RCSe,RMSe ) / ( CS - CS ) ) - ( ( RCSe - CS ) / Max( RRSe,RMSe ) ) ) ),Max( ( ( ( CS * MUM ) + ( DS * RRSe ) ) / ( Min( MUR ,CS ) / ( MUR + MUC ) ) ),( Max( Min( MUR ,DS ),Max( MUR,MUC ) ) - Max( ( MUM + MLU ),( MLU / CS ) ) ) ) ),( Min( Max( ( ( MUR + RRSe ) * ( RCSe - RMSe ) ),( Min( RMSe ,MLU ) * Min( MUC ,RMSe ) ) ) ,Max( ( ( DS / RRSe ) * ( CS - DS ) ),( Min( MUM ,MUR ) + ( MUM - CS ) ) ) ) + ( ( ( ( MUC * MUR ) + ( RRSe - RMSe ) ) * Min( ( RCSe / MUC ) ,( RMSe - MUC ) ) ) - ( ( ( MUM + RCSe ) + Max( MUC,RCSe ) ) + Max( ( RMSe - RMSe ),( MUM - MUR ) ) ) ) ) ) - ( ( ( ( ( ( DS - RCSe ) + ( MLU * MUM ) ) * ( Max( CS,MUM ) - ( MUR - MLU ) ) ) - ( Max( ( MUR / MUC ),Max( RRSe,MUM ) ) - ( Min( RMSe ,MLU ) * Max( MUC,DS ) ) ) ) + Min( ( ( Max( MUC,MLU ) + ( RMSe + MUM ) ) / ( Max( CS,MLU ) * Max( MUM,CS ) ) ) ,Max( ( ( MLU - MLU ) / ( DS / MUM ) ),Max( Min( MUC ,MUM ),Min( CS ,CS ) ) ) ) ) - ( Min( ( Max( Max( RCSe,DS ),Max( MLU,MUM ) ) + ( Min( MUR ,MLU ) * ( RCSe + RRSe ) ) ) ,Min( Min( ( DS - DS ) ,( MUR - MUR ) ) ,( ( RRSe * RRSe ) / Max( CS,RMSe ) ) ) ) - ( Min( ( ( RMSe - RMSe ) / ( RRSe + RRSe ) ) ,Min( Min( DS ,MLU ) ,Min( DS ,RMSe ) ) ) + Max( ( Min( RRSe ,MLU ) + Min( CS ,RMSe ) ),( ( RRSe * RCSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.77174485616461}, {"determining": "( ( DDR / MRS ) + Max( Max( BR,( FirstVNF_Mem_Server + DDR ) ),( ARS - CRS ) ) )", "choosing": "( Max( Min( ( ( ( ( ( MLU * MUC ) * ( DS - RCSe ) ) + ( Min( MUC ,MLU ) + Max( RCSe,CS ) ) ) + ( ( ( RCSe - MLU ) - ( RCSe / MUM ) ) * Max( ( RMSe * MUM ),( MUM + MLU ) ) ) ) / Min( Min( ( ( RCSe * MUR ) + Min( MLU ,RMSe ) ) ,( ( RRSe / CS ) - ( MUR * RCSe ) ) ) ,( ( ( MUC + CS ) / ( CS / MUC ) ) / Min( Max( MUM,MUC ) ,( DS * MUR ) ) ) ) ) ,( Min( Max( Min( Max( CS,RCSe ) ,( RCSe / MUR ) ),Max( Min( RCSe ,MLU ),( MUR + RCSe ) ) ) ,( Max( ( MUR + RCSe ),( RMSe + RMSe ) ) * ( ( MUM / MUM ) - ( RRSe - MUR ) ) ) ) + Min( ( ( ( DS - RRSe ) - Min( MUR ,RCSe ) ) + ( ( MUR + DS ) / Max( RCSe,MUC ) ) ) ,( ( Min( MUM ,RRSe ) + Max( MLU,RRSe ) ) * ( ( RRSe * DS ) * ( DS - CS ) ) ) ) ) ),( Max( Max( ( Max( ( DS - DS ),Min( MUC ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ),( ( Min( MUM ,RMSe ) / ( RMSe - DS ) ) + ( Max( CS,RRSe ) * Max( RCSe,MUM ) ) ) ),( Min( ( ( MUM * DS ) / ( MLU / MLU ) ) ,( ( MUM / CS ) / ( CS - RRSe ) ) ) - ( Min( ( MLU + RMSe ) ,Max( RMSe,MLU ) ) / ( ( MUM / MUR ) + Min( MLU ,CS ) ) ) ) ) * ( ( Min( Min( Min( RRSe ,MUM ) ,( CS * MUM ) ) ,( Max( RMSe,DS ) - Min( MUC ,MUC ) ) ) * ( ( ( DS * MUC ) / ( DS + CS ) ) / ( ( DS / RCSe ) + ( MUM / MUR ) ) ) ) + ( ( Max( ( CS * MUR ),( MLU - DS ) ) * Max( Max( CS,RMSe ),Min( RRSe ,MLU ) ) ) / Max( Max( Min( RMSe ,CS ),( MUC * RCSe ) ),Min( Min( MUC ,MLU ) ,Min( RMSe ,MUC ) ) ) ) ) ) ) - ( Max( Max( Min( Max( ( ( DS * CS ) / ( CS - MUM ) ),( ( MLU / MUM ) * ( CS + DS ) ) ) ,( ( Max( RCSe,RMSe ) / ( CS - CS ) ) - ( ( RCSe - CS ) / Max( RRSe,RMSe ) ) ) ),Max( ( ( ( CS * MUM ) + ( DS * RRSe ) ) / ( Min( MUR ,CS ) / ( MUR + MUC ) ) ),( Max( Min( MUR ,DS ),Max( MUR,MUC ) ) - Max( ( MUM + MLU ),( MLU / CS ) ) ) ) ),( Min( Max( ( ( MUR + RRSe ) * ( RCSe - RMSe ) ),( Min( RMSe ,MLU ) * Min( MUC ,RMSe ) ) ) ,Max( ( ( DS / RRSe ) * ( CS - DS ) ),( Min( MUM ,MUR ) + ( MUM - CS ) ) ) ) + ( ( ( ( MUC * MUR ) + ( RRSe - RMSe ) ) * Min( ( RCSe / MUC ) ,( RMSe - MUC ) ) ) - ( ( ( MUM + RCSe ) + Max( MUC,RCSe ) ) + Max( ( RMSe - RMSe ),( MUM - MUR ) ) ) ) ) ) - ( ( ( ( ( ( DS - RCSe ) + ( MLU * MUM ) ) * ( Max( CS,MUM ) - ( MUR - MLU ) ) ) - ( Max( ( MUR / MUC ),Max( RRSe,MUM ) ) - ( Min( RMSe ,MLU ) * Max( MUC,DS ) ) ) ) + Min( ( ( Max( MUC,MLU ) + ( RMSe + MUM ) ) / ( Max( CS,MLU ) * Max( MUM,CS ) ) ) ,Max( Min( RCSe ,MUM ),Max( Min( MUC ,MUM ),Min( CS ,CS ) ) ) ) ) - ( Min( ( Max( Max( RCSe,DS ),Max( MLU,MUM ) ) + ( Min( MUR ,MLU ) * ( RCSe + RRSe ) ) ) ,Min( Min( ( DS - DS ) ,( MUR - MUR ) ) ,( ( RRSe * RRSe ) / Max( CS,RMSe ) ) ) ) - ( Min( ( ( RMSe - RMSe ) / ( RRSe + RRSe ) ) ,Min( Min( DS ,MLU ) ,Min( DS ,RMSe ) ) ) + Max( ( Min( RRSe ,MLU ) + Min( CS ,RMSe ) ),( ( RRSe * RCSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.77174485616461}, {"determining": "( ( DDR / MRS ) + Max( Max( BR,( FirstVNF_Mem_Server + ( FirstVNF_CPU + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ),( ARS - CRS ) ) )", "choosing": "( Max( Min( ( ( ( ( ( MLU * MUC ) * ( DS - RCSe ) ) + ( Min( MUC ,MLU ) + Max( RCSe,CS ) ) ) + ( ( ( RCSe - MLU ) - ( RCSe / MUM ) ) * Max( ( RMSe * MUM ),( MUM + MLU ) ) ) ) / Min( Min( ( ( RCSe * MUR ) + Min( MLU ,RMSe ) ) ,( ( RRSe / CS ) - ( MUR * RCSe ) ) ) ,( ( ( MUC + CS ) / ( CS / MUC ) ) / Min( Max( MUM,MUC ) ,( DS * MUR ) ) ) ) ) ,( Min( Max( Min( Max( CS,RCSe ) ,( RCSe / MUR ) ),Max( Min( RCSe ,MLU ),( MUR + RCSe ) ) ) ,( Max( ( MUR + RCSe ),( RMSe + RMSe ) ) * ( ( MUM / MUM ) - ( RRSe - MUR ) ) ) ) + Min( ( ( ( DS - RRSe ) - Min( MUR ,RCSe ) ) + ( ( MUR + DS ) / Max( RCSe,MUC ) ) ) ,( ( Min( MUM ,RRSe ) + Max( MLU,RRSe ) ) * ( ( RRSe * DS ) * ( DS - CS ) ) ) ) ) ),( Max( Max( ( Max( ( DS - DS ),Min( MUC ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ),( ( Min( MUM ,RMSe ) / ( RMSe - DS ) ) + ( Max( CS,RRSe ) * Max( RCSe,MUM ) ) ) ),( Min( ( ( MUM * DS ) / ( MLU / MLU ) ) ,( ( MUM / CS ) / ( CS - RRSe ) ) ) - ( Min( ( MLU + RMSe ) ,Max( RMSe,MLU ) ) / ( ( MUM / MUR ) + Min( MLU ,CS ) ) ) ) ) * ( ( Min( Min( Min( RRSe ,MUM ) ,( CS * MUM ) ) ,( Max( RMSe,DS ) - Min( MUC ,MUC ) ) ) * ( ( ( DS * MUC ) / ( DS + CS ) ) / ( ( DS / RCSe ) + ( MUM / MUR ) ) ) ) + ( ( Max( ( CS * MUR ),( MLU - DS ) ) * Max( Max( CS,RMSe ),Min( RRSe ,MLU ) ) ) / Max( Max( Min( RMSe ,CS ),( MUC * RCSe ) ),Min( Min( MUC ,MLU ) ,Min( RMSe ,MUC ) ) ) ) ) ) ) - ( Max( Max( Min( Max( ( ( DS * CS ) / ( CS - MUM ) ),( ( MLU / MUM ) * ( CS + DS ) ) ) ,( ( Max( RCSe,RMSe ) / ( CS - CS ) ) - ( ( RCSe - CS ) / Max( RRSe,RMSe ) ) ) ),Max( ( ( ( CS * MUM ) + ( DS * RRSe ) ) / ( Min( MUR ,CS ) / ( MUR + MUC ) ) ),( Max( Min( MUR ,DS ),Max( MUR,MUC ) ) - Max( ( MUM + MLU ),( MLU / CS ) ) ) ) ),( Min( Max( ( ( MUR + RRSe ) * ( RCSe - RMSe ) ),( Min( RMSe ,MLU ) * Min( MUC ,RMSe ) ) ) ,Max( ( ( DS / RRSe ) * ( CS - DS ) ),( Min( MUM ,MUR ) + ( MUM - CS ) ) ) ) + ( ( ( ( MUC * MUR ) + ( RRSe - RMSe ) ) * Min( ( RCSe / MUC ) ,( RMSe - MUC ) ) ) - ( ( ( MUM + RCSe ) + Max( MUC,RCSe ) ) + Max( ( RMSe - RMSe ),( MUM - MUR ) ) ) ) ) ) - ( ( ( ( ( ( DS - RCSe ) + ( MLU * MUM ) ) * ( Max( CS,MUM ) - ( MUR - MLU ) ) ) - ( Max( ( MUR / MUC ),Max( RRSe,MUM ) ) - ( Min( RMSe ,MLU ) * Max( MUC,DS ) ) ) ) + Min( ( ( Max( MUC,MLU ) + ( RMSe + MUM ) ) / ( Max( CS,MLU ) * Max( MUM,CS ) ) ) ,Max( ( ( MLU - MLU ) / ( DS / MUM ) ),Max( Min( MUC ,MUM ),Min( CS ,CS ) ) ) ) ) - ( Min( ( Max( Max( RCSe,DS ),Max( MLU,MUM ) ) + ( Min( MUR ,MLU ) * ( RCSe + RRSe ) ) ) ,Min( Min( ( DS - DS ) ,( MUR - MUR ) ) ,( ( RRSe * RRSe ) / Max( CS,RMSe ) ) ) ) - ( Min( ( ( RMSe - RMSe ) / ( RRSe + RRSe ) ) ,Min( Min( DS ,MLU ) ,Min( DS ,RMSe ) ) ) + Max( ( Min( RRSe ,MLU ) + Min( CS ,RMSe ) ),( ( RRSe * RCSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.77174485616461}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + ( MDR * ( ( AMS / DDR ) - FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) ) * ( Max( ( DS - DS ),Min( MUC ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ) )", "obj1": 0.12448132780082988, "obj2": 0.7587512638036993}], "13": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "( ( FirstVNF_RAM_Server / ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( RRSe * DS ),RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "( ( FirstVNF_RAM_Server / BR ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( MUR,RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "Min( ( ( MDR * Max( FirstVNF_CPU,FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( ( Max( Min( RCSe ,MUM ),MUM ) - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "( ( FirstVNF_RAM_Server / ( ( DDR * FirstVNF_CPU ) + ( CRS / DDR ) ) ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( Min( RMSe ,CS ) * DS ),RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( RRSe * DS ),RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "Min( ( Max( MDR,( FirstVNF_CPU - FirstVNF_RAM ) ) + Max( Max( BR,BR ),( ARS - CRS ) ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - DS ) - RRSe ) - Max( Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ),RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "Min( ( ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "( ( FirstVNF_RAM_Server / ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( RRSe * DS ),RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) * Min( CRS ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - MLU ) - Max( DS,RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "( Min( CRS ,DDR ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.12655601659751037, "obj2": 0.7012213362236587}, {"determining": "( ( MRS / FirstVNF_RAM ) + ( ( DDR * Const ) + ( AMS / DDR ) ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - ( ( MUC * DS ) - DS ) )", "obj1": 0.12655601659751037, "obj2": 0.7012213362236587}, {"determining": "( ( MDR * ( ( MDR * ( ( DDR / MRS ) + Max( Max( BR,BR ),( ARS - CRS ) ) ) ) - FirstVNF_RAM ) ) + FirstVNF_RAM )", "choosing": "( Max( ( Max( DS,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) ),MLU ) * ( ( Max( MLU,RRSe ) * Max( ( RMSe * ( MUC - RMSe ) ),( ( MLU - CS ) - ( ( MUR + DS ) * DS ) ) ) ) - ( RRSe * DS ) ) )", "obj1": 0.13278008298755187, "obj2": 0.6902136633869949}, {"determining": "( ( FirstVNF_RAM_Server / ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) - ( FirstVNF_RAM_Server / PN ) )", "choosing": "Max( ( MLU / RMSe ),( ( RRSe * DS ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) * ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( MLU - RRSe ) - Max( ( RRSe * DS ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / ( ( DDR * FirstVNF_CPU ) + ( ( ( CRS / MRS ) + ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) ) / DDR ) ) ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,Max( ( DS - DS ),Min( ( ( MLU - CS ) - ( RRSe * DS ) ) ,MUC ) ) ) - MUM ) - RRSe ) - Max( ( RRSe * DS ),RRSe ) )", "obj1": 0.17842323651452283, "obj2": 0.6492837378644675}, {"determining": "( ( FirstVNF_RAM_Server / ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( RRSe * DS ),RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "( ( ( FirstVNF_RAM_Server / MRS ) + ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) ) + Max( Max( BR,( FirstVNF_Mem_Server + ( FirstVNF_CPU + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ),( ARS - CRS ) ) )", "choosing": "( ( Max( Min( RCSe ,MUM ),MUM ) - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.1908713692946058, "obj2": 0.6323800386013406}, {"determining": "( Min( FirstVNF_RAM_Server ,MRS ) + ( MDR * ( ( AMS / MDR ) - FirstVNF_RAM ) ) )", "choosing": "( Max( CS,( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) ) * ( Max( ( RCSe - DS ),Min( MUC ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ) )", "obj1": 0.12240663900414937, "obj2": 0.7555422762802162}, {"determining": "Min( ( ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "( ( FirstVNF_RAM_Server / ( ( DDR * FirstVNF_CPU ) + ( FirstVNF_RAM_Server / DDR ) ) ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - DS ) - RRSe ) - Max( ( RRSe * DS ),RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) * Min( DDR ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUC ) - MUM ) - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "Min( ( ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,DDR )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "( ( Max( ( ( ( ( Max( PN,FirstVNF_RAM ) + ( FirstVNF_Mem + FirstVNF_CPU ) ) - Min( ( DDR - FirstVNF_Mem_Server ) ,( RRS - CRS ) ) ) + ( ( ( FirstVNF_Mem + Const ) / ( ARS + Const ) ) * Min( ( FirstVNF_Mem - FirstVNF_CPU_Server ) ,( CRS - DDR ) ) ) ) - ( ( Max( ( Const / FirstVNF_Mem_Server ),( DDR / CRS ) ) * ( ( DDR + ACS ) + ( FirstVNF_RAM / PN ) ) ) - ( ( ( MRS / ARS ) - Max( FirstVNF_RAM,BR ) ) / Max( ( BR - ACS ),( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ),( ( ( ( ( FirstVNF_RAM_Server - Const ) + ( FirstVNF_CPU * FirstVNF_RAM ) ) + ( ( Const / FirstVNF_CPU ) + Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) - ( ( ( FirstVNF_Mem_Server / DDR ) - ( AMS / FirstVNF_CPU_Server ) ) + ( ( Const * FirstVNF_CPU_Server ) * ( RRS + ACS ) ) ) ) - Max( ( Min( ( Const * MRS ) ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) - ( ( ACS + PN ) + ( ACS * MRS ) ) ),( ( ( FirstVNF_RAM * CRS ) - Max( ACS,PN ) ) / ( ( ACS * FirstVNF_CPU ) + Max( RRS,AMS ) ) ) ) ) ) - Min( Min( Max( Max( ( Max( FirstVNF_Mem,CRS ) / ( FirstVNF_RAM_Server * ACS ) ),Max( Max( BR,MDR ),Min( PN ,RRS ) ) ),Max( ( Min( BR ,Const ) - ( ARS / BR ) ),( Min( DDR ,ACS ) * Max( CRS,AMS ) ) ) ) ,Max( ( Max( ( DDR * FirstVNF_RAM ),( ARS + FirstVNF_CPU_Server ) ) / ( ( FirstVNF_RAM * MRS ) + Max( ACS,FirstVNF_RAM ) ) ),( ( ( CRS * MDR ) * Min( MDR ,ACS ) ) - ( Min( MDR ,DDR ) * Min( FirstVNF_RAM ,RRS ) ) ) ) ) ,( ( Max( ( Min( RRS ,CRS ) * Max( RRS,ACS ) ),( ( FirstVNF_CPU_Server * DDR ) - ( RRS / CRS ) ) ) * ( ( Max( CRS,MRS ) - Max( RRS,FirstVNF_RAM_Server ) ) + Max( ( FirstVNF_RAM / BR ),Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) / ( Min( ( Max( MDR,FirstVNF_RAM_Server ) - Max( Const,AMS ) ) ,Max( ( FirstVNF_Mem_Server - DDR ),( FirstVNF_RAM_Server / ARS ) ) ) + Max( ( ( FirstVNF_Mem_Server - ARS ) - ( ACS + PN ) ),Max( ( Const / FirstVNF_Mem ),( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) ) ) ) ) + ( ( ( ( ( Min( ( PN / PN ) ,Max( CRS,ARS ) ) / Max( ( FirstVNF_RAM / DDR ),( ACS + FirstVNF_RAM ) ) ) - ( Min( ( FirstVNF_RAM + RRS ) ,( FirstVNF_CPU + FirstVNF_CPU_Server ) ) / ( Max( DDR,DDR ) * ( FirstVNF_RAM + Const ) ) ) ) * ( Min( Max( ( ACS / FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ,( Max( AMS,PN ) + ( DDR / AMS ) ) ) / Max( ( ( MRS + FirstVNF_Mem ) / ( DDR / FirstVNF_Mem_Server ) ),( ( MRS / RRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) ) ) - ( Max( ( Min( ( BR - CRS ) ,( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) / ( ( ARS * FirstVNF_CPU_Server ) - Max( FirstVNF_RAM,AMS ) ) ),( Max( ( FirstVNF_Mem_Server + DDR ),( FirstVNF_Mem_Server - MRS ) ) / Max( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ),Max( PN,AMS ) ) ) ) - ( ( ( ( ACS / AMS ) * Min( ACS ,FirstVNF_RAM_Server ) ) - ( ( FirstVNF_CPU_Server / ARS ) * ( ACS + FirstVNF_RAM ) ) ) / Max( ( ( MRS * Const ) - ( RRS - FirstVNF_RAM_Server ) ),Min( Min( ARS ,MRS ) ,( CRS * MRS ) ) ) ) ) ) * Min( ( ( ( ( ( PN * FirstVNF_RAM_Server ) + Max( BR,BR ) ) * Max( ( FirstVNF_RAM_Server + BR ),( AMS + FirstVNF_RAM_Server ) ) ) / Min( ( ( AMS * AMS ) + ( FirstVNF_Mem_Server * DDR ) ) ,Min( ( AMS - FirstVNF_RAM ) ,( Const + DDR ) ) ) ) + ( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - ( ACS - BR ) ) - ( Max( FirstVNF_RAM,Const ) - ( FirstVNF_CPU_Server - ACS ) ) ) - ( ( Max( FirstVNF_Mem,RRS ) - ( ARS - CRS ) ) - Max( Max( FirstVNF_CPU,FirstVNF_Mem ),( DDR * FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( ( ( PN - FirstVNF_Mem ) / Max( Const,Const ) ) - Min( ( MRS / FirstVNF_CPU_Server ) ,Max( MRS,FirstVNF_Mem_Server ) ) ) / ( ( ( MRS + FirstVNF_CPU ) - ( AMS - DDR ) ) / ( ( FirstVNF_Mem * Const ) * ( FirstVNF_CPU + PN ) ) ) ) * ( Max( Min( Max( DDR,PN ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ),Min( ( BR * MRS ) ,( FirstVNF_CPU / ARS ) ) ) + Min( ( ( PN / ACS ) / ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ,Max( ( FirstVNF_Mem_Server - MRS ),Max( DDR,ARS ) ) ) ) ) ) ) )", "choosing": "( ( Min( Max( ( Max( ( ( MUR - MUR ) / Min( MUR ,MUR ) ),( Min( MUC ,MUR ) - ( DS - MLU ) ) ) / ( ( Max( CS,MUM ) - Max( MUR,DS ) ) / Min( ( CS * MLU ) ,( MLU - RMSe ) ) ) ),( Max( Min( ( MUC - MUR ) ,( RCSe + MUC ) ),Max( ( MUC / MUR ),( RMSe + MUC ) ) ) / ( Min( ( MLU / RMSe ) ,Max( RRSe,CS ) ) + Max( Max( MLU,RCSe ),Min( MUC ,RRSe ) ) ) ) ) ,( ( ( ( ( RRSe / MLU ) / Min( CS ,RCSe ) ) + Max( Max( MUM,RMSe ),( RCSe * RCSe ) ) ) * Max( Min( ( MUR * RCSe ) ,( CS - RRSe ) ),( Max( CS,CS ) * ( RMSe / CS ) ) ) ) + ( Max( ( Max( RCSe,DS ) * Min( MUR ,MUR ) ),( ( MUR / MLU ) - ( MUR - RRSe ) ) ) - ( Min( ( MLU + RRSe ) ,( MUR * RRSe ) ) * ( ( CS - MUM ) + Max( MLU,MLU ) ) ) ) ) ) * ( ( Max( Min( Min( Max( RRSe,MUC ) ,( MUM / MUR ) ) ,( Max( MLU,CS ) - Min( RRSe ,MUC ) ) ),Max( ( ( RCSe * MUC ) + ( MLU / MUM ) ),( ( DS + MUM ) - ( RCSe - DS ) ) ) ) + ( ( ( ( CS / RCSe ) - Max( RMSe,MUC ) ) * Min( Max( MUM,DS ) ,( RMSe / DS ) ) ) * ( ( ( CS / RCSe ) - Max( DS,CS ) ) - Min( ( RCSe * CS ) ,( RMSe / MUR ) ) ) ) ) * ( ( Min( Max( Min( RCSe ,RRSe ),( MUM * MUR ) ) ,( Min( RMSe ,RRSe ) * ( RRSe * CS ) ) ) - ( Min( Max( MUC,RCSe ) ,Min( RMSe ,RMSe ) ) - ( ( MLU / MUM ) * ( MUR / MUM ) ) ) ) * Min( ( Max( Max( RMSe,MUM ),( MLU - MUR ) ) * Min( Min( DS ,RCSe ) ,Max( MUM,RCSe ) ) ) ,Max( Max( ( MUC + MUR ),( CS + CS ) ),( ( DS + MUM ) + ( CS + RCSe ) ) ) ) ) ) ) - ( ( Min( ( Max( ( Min( MUM ,RMSe ) + ( RMSe / RRSe ) ),( ( DS + CS ) / ( RMSe * MLU ) ) ) * Min( ( ( CS - RCSe ) - Max( MLU,CS ) ) ,( Min( RRSe ,RMSe ) + ( MUC + RMSe ) ) ) ) ,Max( Max( Max( Min( DS ,RRSe ),( CS / RCSe ) ),Min( Max( RRSe,MUR ) ,( CS / RRSe ) ) ),( Max( ( CS + RMSe ),( RMSe * DS ) ) / ( Min( MUR ,DS ) / ( RMSe - RRSe ) ) ) ) ) - ( ( ( ( ( MLU - MUR ) / Min( MLU ,RCSe ) ) + ( ( DS * MUC ) / ( MLU / MUC ) ) ) - ( ( Min( RRSe ,MUC ) - ( MUC * RRSe ) ) + ( Max( RMSe,MUR ) / Min( MLU ,RMSe ) ) ) ) - ( ( Max( ( MUR + RMSe ),( MUC / MUR ) ) - Max( Min( RCSe ,RCSe ),Min( DS ,MUM ) ) ) * ( ( Max( RCSe,RCSe ) + Max( MUM,RRSe ) ) - Max( Max( DS,MUR ),( DS / MUC ) ) ) ) ) ) * ( Min( ( ( ( ( MUC / RRSe ) * ( MUC / CS ) ) + ( Min( DS ,MUR ) + ( MLU + RCSe ) ) ) * ( Min( ( RRSe * MLU ) ,( RCSe + RRSe ) ) / ( Max( RMSe,MLU ) / ( DS - RCSe ) ) ) ) ,Min( ( ( ( MUC / RRSe ) + ( MLU + MLU ) ) - Max( ( RRSe / DS ),Max( MLU,MUR ) ) ) ,Max( ( ( MUR * MLU ) / ( RRSe * MLU ) ),Max( ( RCSe + RRSe ),Min( MUR ,CS ) ) ) ) ) - ( Min( ( Max( ( CS * DS ),( RMSe * MUC ) ) * ( Max( DS,DS ) - ( RRSe - MUM ) ) ) ,( ( Max( MUR,MUR ) * ( MUM / MUC ) ) * ( ( RMSe / RMSe ) - ( CS + MUC ) ) ) ) / Max( Min( ( ( MUR - RRSe ) / ( MLU + CS ) ) ,( Min( CS ,MUC ) + ( MLU + MUR ) ) ),Max( ( ( RRSe + MUR ) * ( DS + MUR ) ),Max( ( MUR / RRSe ),Max( MUM,RRSe ) ) ) ) ) ) ) )", "obj1": 0.4066390041493776, "obj2": 0.5870456024555933}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( CRS + Max( Max( BR,( FirstVNF_Mem_Server + ( ARS + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ),( ARS - CRS ) ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - ( ( RRSe * DS ) * DS ) )", "obj1": 0.12655601659751037, "obj2": 0.7012213362236587}, {"determining": "( ( DDR / MRS ) + Max( Max( BR,( FirstVNF_Mem_Server + ( FirstVNF_RAM_Server / MRS ) ) ),( ARS - CRS ) ) )", "choosing": "( ( RRSe * DS ) * ( Max( ( DS - DS ),Min( MUC ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ) )", "obj1": 0.3091286307053942, "obj2": 0.5994666464193333}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( RRSe * DS ),RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "( ( DDR / MRS ) + Max( Max( BR,( FirstVNF_Mem_Server + ( FirstVNF_CPU + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ),( ARS - CRS ) ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "Min( ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "Min( ( ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + Max( MRS,( ARS - CRS ) ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ),RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + ( ( DDR * Max( Max( BR,BR ),( ARS - CRS ) ) ) + ( AMS / DDR ) ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( RRSe * DS ),Max( Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ),RRSe ) ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "Min( ( ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + Max( Max( BR,BR ),( ARS - CRS ) ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( Min( Min( Min( RRSe ,MUM ) ,( MUC * CS ) ) ,( ( DS - RRSe ) - Min( MUR ,RRSe ) ) ),RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.12655601659751037, "obj2": 0.7012213362236587}, {"determining": "( ( MRS / FirstVNF_RAM ) + ( ( DDR * Const ) + ( AMS / DDR ) ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) + Max( ( RRSe * DS ),DS ) )", "obj1": 0.2966804979253112, "obj2": 0.6142793645207206}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) * Min( CRS ,DDR ) )", "choosing": "( Max( ( Max( DS,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) ),MLU ) * ( ( Max( MLU,RRSe ) * Max( ( RMSe * ( MUC - RMSe ) ),( ( MLU - CS ) - ( ( MUR + DS ) * DS ) ) ) ) - ( RRSe * DS ) ) )", "obj1": 0.13278008298755187, "obj2": 0.6902136633869949}, {"determining": "( ( MDR * ( ( MDR * ( ( DDR / MRS ) + Max( Max( BR,BR ),( ARS - CRS ) ) ) ) - FirstVNF_RAM ) ) + FirstVNF_RAM )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "( Min( ( Max( Max( ( ( Min( AMS ,DDR ) * ( RRS - AMS ) ) + ( ( FirstVNF_CPU_Server + Const ) * Max( FirstVNF_RAM,MDR ) ) ),( ( ( FirstVNF_CPU + ARS ) + ( BR * BR ) ) * ( Max( MDR,FirstVNF_RAM ) * ( MRS / FirstVNF_CPU ) ) ) ),( ( Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),Max( MRS,BR ) ) * ( ( AMS - FirstVNF_Mem_Server ) + Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) + ( ( ( AMS / FirstVNF_RAM_Server ) * ( DDR - FirstVNF_RAM ) ) - ( ( FirstVNF_CPU * ARS ) + ( AMS / FirstVNF_Mem ) ) ) ) ) - Min( Min( ( ( Min( PN ,FirstVNF_Mem ) / Min( Const ,BR ) ) - ( ( PN / FirstVNF_RAM ) - ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) ,( ( Max( PN,PN ) + ( CRS / MDR ) ) - ( ( FirstVNF_RAM_Server + ACS ) + Min( BR ,FirstVNF_CPU ) ) ) ) ,( ( Min( Min( MDR ,FirstVNF_RAM ) ,( AMS / MRS ) ) + Max( ( CRS * ARS ),( MDR * ACS ) ) ) - ( ( Max( BR,FirstVNF_CPU ) * ( ACS * FirstVNF_CPU_Server ) ) + ( ( RRS * PN ) - Max( RRS,FirstVNF_Mem_Server ) ) ) ) ) ) ,( ( Min( ( Max( ( FirstVNF_RAM + PN ),Max( MRS,ARS ) ) * ( ( PN + PN ) + ( MDR * BR ) ) ) ,( Max( ( BR * FirstVNF_Mem ),( FirstVNF_RAM + DDR ) ) - ( Min( MRS ,FirstVNF_CPU ) + ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) ) ) + ( Min( Max( ( AMS - AMS ),( MDR * ARS ) ) ,( ( FirstVNF_CPU + MDR ) * Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) - ( Max( Min( MDR ,ARS ),( MRS - BR ) ) / ( Max( RRS,FirstVNF_CPU_Server ) * ( CRS / FirstVNF_CPU ) ) ) ) ) / ( Max( Max( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) - ( FirstVNF_RAM / MRS ) ),( Max( RRS,BR ) - Min( FirstVNF_CPU ,BR ) ) ),Max( ( Max( Const,MRS ) + ( FirstVNF_CPU - DDR ) ),( ( RRS + ARS ) * ( FirstVNF_RAM_Server - AMS ) ) ) ) / ( Max( ( Max( PN,PN ) - ( DDR / ACS ) ),( ( FirstVNF_Mem_Server + BR ) / ( RRS / FirstVNF_CPU ) ) ) * Max( ( ( ARS + FirstVNF_CPU_Server ) + Max( BR,MDR ) ),( ( FirstVNF_CPU_Server * ARS ) - ( ARS * RRS ) ) ) ) ) ) ) - ( Min( ( Max( ( Max( ( MRS / CRS ),( DDR / FirstVNF_RAM ) ) / ( ( MRS / DDR ) - Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) ),Max( ( ( FirstVNF_Mem / ARS ) / Min( RRS ,ACS ) ),( ( FirstVNF_RAM * CRS ) * ( MRS / DDR ) ) ) ) / ( ( Max( ( MDR + FirstVNF_RAM ),( FirstVNF_CPU_Server * PN ) ) + ( ( PN * ARS ) * Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) + Min( ( ( FirstVNF_CPU / BR ) + ( AMS - BR ) ) ,Min( Max( CRS,Const ) ,Min( BR ,FirstVNF_Mem ) ) ) ) ) ,( ( ( Min( ( Const - DDR ) ,( MDR - ACS ) ) / Min( Min( FirstVNF_CPU_Server ,DDR ) ,Max( PN,FirstVNF_Mem ) ) ) / ( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) + Max( DDR,FirstVNF_CPU_Server ) ) + Max( Min( ARS ,CRS ),Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) ) * Max( Min( Min( ( MRS - ACS ) ,( CRS + FirstVNF_RAM ) ) ,( Max( AMS,FirstVNF_RAM_Server ) * ( DDR * DDR ) ) ),( ( ( ARS + ARS ) / ( FirstVNF_Mem_Server * DDR ) ) * ( Max( BR,FirstVNF_RAM ) + ( Const - FirstVNF_RAM ) ) ) ) ) ) - ( ( Min( ( ( ( FirstVNF_RAM - AMS ) - ( Const + FirstVNF_Mem_Server ) ) / ( ( FirstVNF_CPU_Server / ACS ) - ( ACS / PN ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) - Min( BR ,FirstVNF_RAM ) ) + ( Min( CRS ,DDR ) * ( PN * FirstVNF_CPU_Server ) ) ) ) / ( ( ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) / ( Const + FirstVNF_Mem ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - ( DDR / AMS ) ) ) + Max( Min( ( FirstVNF_CPU / ARS ) ,Min( BR ,RRS ) ),Max( ( CRS - MRS ),( MRS / FirstVNF_CPU ) ) ) ) ) + Max( ( ( Min( Min( CRS ,DDR ) ,( BR / RRS ) ) - ( Min( Const ,FirstVNF_CPU ) + Max( Const,RRS ) ) ) * Min( ( ( PN / PN ) * ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_CPU_Server * CRS ) + ( FirstVNF_CPU_Server + Const ) ) ) ),( ( ( Max( CRS,Const ) / Min( DDR ,Const ) ) * ( ( PN + MDR ) - ( RRS / ACS ) ) ) + ( Min( Min( BR ,CRS ) ,( MDR / MDR ) ) - ( ( Const * MDR ) - ( AMS - MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( Min( MUM ,( RRSe + DS ) ) - RRSe ) / RRSe ) + ( RMSe - MUC ) )", "obj1": 0.6991701244813278, "obj2": 0.2236437383288157}, {"determining": "( ( DDR / MRS ) + Max( Max( BR,( FirstVNF_Mem_Server + DDR ) ),( ARS - CRS ) ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( RRSe * DS ),RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "( ( FirstVNF_RAM_Server / ( ( DDR * FirstVNF_CPU ) + ( CRS / DDR ) ) ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( Min( RMSe ,CS ) * DS ),RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) * Min( ACS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) + DS ) - Max( DS,RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "( ( FirstVNF_RAM_Server / ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) * ( CRS / DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) * MUM ) - ( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( RRSe * DS ),RRSe ) ) ) - Max( DS,RRSe ) )", "obj1": 0.27593360995850624, "obj2": 0.6301793005369128}, {"determining": "( ( FirstVNF_RAM_Server / ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( RRSe * DS ),RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.12655601659751037, "obj2": 0.7012213362236587}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + ( ( DDR * Const ) + ( AMS / DDR ) ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( RRSe * DS ),RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}, {"determining": "( ( ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS / DDR ) ) * Min( CRS ,DDR ) )", "choosing": "( ( Max( RCSe,RMSe ) - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.18672199170124482, "obj2": 0.6449310599725961}, {"determining": "Min( ( ( FirstVNF_RAM_Server / MRS ) * Min( CRS ,DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( Min( ( ( ( ( ( MLU * MUC ) * ( DS - RCSe ) ) + ( Min( MUC ,MLU ) + Max( RCSe,CS ) ) ) + ( ( ( RCSe - MLU ) - ( RCSe / MUM ) ) * Max( ( RMSe * MUM ),( MUM + MLU ) ) ) ) / Min( Min( ( ( RCSe * MUR ) + Min( MLU ,RMSe ) ) ,( ( RRSe / CS ) - ( MUR * RCSe ) ) ) ,( ( ( MUC + CS ) / ( CS / MUC ) ) / Min( Max( MUM,MUC ) ,( DS * MUR ) ) ) ) ) ,( Min( Max( Min( Max( CS,RCSe ) ,( RCSe / MUR ) ),Max( Min( RCSe ,MLU ),( MUR + RCSe ) ) ) ,( Max( ( MUR + RCSe ),( RMSe + RMSe ) ) * ( ( MUM / MUM ) - ( RRSe - MUR ) ) ) ) + Min( ( ( ( DS - RRSe ) - Min( MUR ,RCSe ) ) + ( ( MUR + DS ) / Max( RCSe,MUC ) ) ) ,( ( Min( MUM ,RRSe ) + Max( MLU,RRSe ) ) * ( ( RRSe * DS ) * ( DS - CS ) ) ) ) ) ),( Max( Max( ( Max( ( DS - DS ),Min( MUC ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ),( ( Min( MUM ,RMSe ) / ( RMSe - DS ) ) + ( Max( CS,RRSe ) * Max( RCSe,MUM ) ) ) ),( Min( ( ( MUM * DS ) / ( MLU / MLU ) ) ,( ( MUM / CS ) / ( CS - RRSe ) ) ) - ( Min( ( MLU + RMSe ) ,Max( RMSe,MLU ) ) / ( ( MUM / MUR ) + Min( MLU ,CS ) ) ) ) ) * ( ( Min( Min( Min( RRSe ,MUM ) ,( CS * MUM ) ) ,( Max( RMSe,DS ) - Min( MUC ,MUC ) ) ) * ( ( ( DS * MUC ) / ( DS + CS ) ) / ( ( DS / RCSe ) + ( MUM / MUR ) ) ) ) + ( Max( DS,RRSe ) / Max( Max( Min( RMSe ,CS ),( MUC * RCSe ) ),Min( Min( MUC ,MLU ) ,Min( RMSe ,MUC ) ) ) ) ) ) ) - ( Max( Max( Min( Max( ( ( DS * CS ) / ( CS - MUM ) ),( ( MLU / MUM ) * ( CS + DS ) ) ) ,( ( Max( RCSe,RMSe ) / ( CS - CS ) ) - ( ( RCSe - CS ) / Max( RRSe,RMSe ) ) ) ),Max( ( ( ( CS * MUM ) + ( DS * RRSe ) ) / ( Min( MUR ,CS ) / ( MUR + MUC ) ) ),( Max( Min( MUR ,DS ),Max( MUR,MUC ) ) - Max( ( MUM + MLU ),( MLU / CS ) ) ) ) ),( Min( Max( ( ( MUR + RRSe ) * ( RCSe - RMSe ) ),( Min( RMSe ,MLU ) * Min( MUC ,RMSe ) ) ) ,Max( ( ( DS / RRSe ) * ( CS - DS ) ),( Min( MUM ,MUR ) + ( MUM - CS ) ) ) ) + ( ( ( ( MUC * MUR ) + ( RRSe - RMSe ) ) * Min( ( RCSe / MUC ) ,( RMSe - MUC ) ) ) - ( ( ( MUM + RCSe ) + Max( MUC,RCSe ) ) + Max( ( RMSe - RMSe ),( MUM - MUR ) ) ) ) ) ) - ( ( ( ( ( ( DS - RCSe ) + ( MLU * MUM ) ) * ( Max( CS,MUM ) - ( MUR - MLU ) ) ) - ( Max( ( MUR / MUC ),Max( RRSe,MUM ) ) - ( Min( RMSe ,MLU ) * Max( MUC,DS ) ) ) ) + Min( ( ( Max( MUC,MLU ) + ( RMSe + MUM ) ) / ( Max( CS,MLU ) * Max( MUM,CS ) ) ) ,Max( ( ( MLU - MLU ) / ( DS / MUM ) ),Max( Min( MUC ,MUM ),Min( CS ,CS ) ) ) ) ) - ( Min( ( Max( Max( RCSe,DS ),Max( MLU,MUM ) ) + ( Min( MUR ,MLU ) * ( RCSe + RRSe ) ) ) ,Min( Min( ( DS - DS ) ,( MUR - MUR ) ) ,( ( RRSe * RRSe ) / Max( CS,RMSe ) ) ) ) - ( Min( ( ( RMSe - RMSe ) / ( RRSe + RRSe ) ) ,Min( Min( DS ,MLU ) ,Min( DS ,RMSe ) ) ) + Max( ( Min( RRSe ,MLU ) + Min( CS ,RMSe ) ),( ( RRSe * RCSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.1037344398340249, "obj2": 0.762348372473755}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.13900414937759337, "obj2": 0.6852878480274586}], "14": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,DDR ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.12655601659751037, "obj2": 0.7012213362236587}, {"determining": "( ( MRS / FirstVNF_RAM ) + ( ( DDR * Const ) + ( AMS / DDR ) ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - ( ( MUC * DS ) - DS ) )", "obj1": 0.12655601659751037, "obj2": 0.7012213362236587}, {"determining": "( ( MDR * ( ( MDR * ( ( DDR / MRS ) + Max( Max( BR,BR ),( ARS - CRS ) ) ) ) - FirstVNF_RAM ) ) + FirstVNF_RAM )", "choosing": "( Max( ( Max( DS,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) ),MLU ) * ( ( Max( MLU,RRSe ) * Max( ( RMSe * ( MUC - RMSe ) ),( ( MLU - CS ) - ( ( MUR + DS ) * DS ) ) ) ) - ( RRSe * DS ) ) )", "obj1": 0.13278008298755187, "obj2": 0.6902136633869949}, {"determining": "( ( FirstVNF_RAM_Server / ( ( DDR * FirstVNF_CPU ) + ( ( ( CRS / MRS ) + ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) ) / DDR ) ) ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,Max( ( DS - DS ),Min( ( ( MLU - CS ) - ( RRSe * DS ) ) ,MUC ) ) ) - MUM ) - RRSe ) - Max( ( RRSe * DS ),RRSe ) )", "obj1": 0.17842323651452283, "obj2": 0.6492837378644675}, {"determining": "( ( ( FirstVNF_RAM_Server / MRS ) + ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) ) + Max( Max( BR,( FirstVNF_Mem_Server + ( FirstVNF_CPU + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ),( ARS - CRS ) ) )", "choosing": "( ( Max( Min( RCSe ,MUM ),MUM ) - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.1908713692946058, "obj2": 0.6323800386013406}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( CRS + Max( Max( BR,( FirstVNF_Mem_Server + ( ARS + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ),( ARS - CRS ) ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - ( ( RRSe * DS ) * DS ) )", "obj1": 0.12655601659751037, "obj2": 0.7012213362236587}, {"determining": "( ( DDR / MRS ) + Max( Max( BR,( FirstVNF_Mem_Server + ( FirstVNF_RAM_Server / MRS ) ) ),( ARS - CRS ) ) )", "choosing": "( ( RRSe * DS ) * ( Max( ( DS - DS ),Min( MUC ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ) )", "obj1": 0.3091286307053942, "obj2": 0.5994666464193333}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.12655601659751037, "obj2": 0.7012213362236587}, {"determining": "( ( MRS / FirstVNF_RAM ) + ( ( DDR * Const ) + ( AMS / DDR ) ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) + Max( ( RRSe * DS ),DS ) )", "obj1": 0.2966804979253112, "obj2": 0.6142793645207206}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) * Min( CRS ,DDR ) )", "choosing": "( Max( ( Max( DS,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) ),MLU ) * ( ( Max( MLU,RRSe ) * Max( ( RMSe * ( MUC - RMSe ) ),( ( MLU - CS ) - ( ( MUR + DS ) * DS ) ) ) ) - ( RRSe * DS ) ) )", "obj1": 0.13278008298755187, "obj2": 0.6902136633869949}, {"determining": "( ( FirstVNF_RAM_Server / ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) * ( CRS / DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) * MUM ) - ( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( RRSe * DS ),RRSe ) ) ) - Max( DS,RRSe ) )", "obj1": 0.27593360995850624, "obj2": 0.6301793005369128}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.12655601659751037, "obj2": 0.7012213362236587}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.12655601659751037, "obj2": 0.7012213362236587}, {"determining": "( CRS + Max( Max( BR,( FirstVNF_Mem_Server + ( ARS + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ),( ARS - CRS ) ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - ( ( RRSe * DS ) * DS ) )", "obj1": 0.14937759336099585, "obj2": 0.6788391206021291}, {"determining": "( ( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) ) + Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( RRSe * DS ),DS ) ),DS ) )", "obj1": 0.12655601659751037, "obj2": 0.7012213362236587}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.12655601659751037, "obj2": 0.7012213362236587}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.12655601659751037, "obj2": 0.7012213362236587}, {"determining": "( ( ( FirstVNF_RAM_Server / MRS ) * Min( CRS ,DDR ) ) - ( Min( ( Max( ( Max( ( MRS / CRS ),( DDR / FirstVNF_RAM ) ) / ( ( MRS / DDR ) - Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) ),Max( ( ( FirstVNF_Mem / ARS ) / Min( RRS ,ACS ) ),( ( FirstVNF_RAM * CRS ) * ( MRS / DDR ) ) ) ) / ( ( Max( ( MDR + FirstVNF_RAM ),( FirstVNF_CPU_Server * PN ) ) + ( ( PN * ARS ) * Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) + Min( ( ( FirstVNF_CPU / BR ) + ( AMS - BR ) ) ,Min( Max( CRS,Const ) ,Min( BR ,FirstVNF_Mem ) ) ) ) ) ,( ( ( Min( ( Const - DDR ) ,( MDR - ACS ) ) / Min( Min( FirstVNF_CPU_Server ,DDR ) ,Max( PN,FirstVNF_Mem ) ) ) / ( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) + Max( DDR,FirstVNF_CPU_Server ) ) + Max( Min( ARS ,CRS ),Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) ) * Max( Min( Min( ( MRS - ACS ) ,( CRS + FirstVNF_RAM ) ) ,( Max( AMS,FirstVNF_RAM_Server ) * ( DDR * DDR ) ) ),( ( ( ARS + ARS ) / ( FirstVNF_Mem_Server * DDR ) ) * ( Max( BR,FirstVNF_RAM ) + ( Const - FirstVNF_RAM ) ) ) ) ) ) - ( ( Min( ( ( ( FirstVNF_RAM - AMS ) - ( Const + FirstVNF_Mem_Server ) ) / ( ( FirstVNF_CPU_Server / ACS ) - ( ACS / PN ) ) ) ,( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) - Min( BR ,FirstVNF_RAM ) ) + ( Min( CRS ,DDR ) * ( PN * FirstVNF_CPU_Server ) ) ) ) / ( ( ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) / ( Const + FirstVNF_Mem ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - ( DDR / AMS ) ) ) + Max( Min( ( FirstVNF_CPU / ARS ) ,Min( BR ,RRS ) ),Max( ( CRS - MRS ),( MRS / FirstVNF_CPU ) ) ) ) ) + Max( ( ( Min( Min( CRS ,DDR ) ,( BR / RRS ) ) - ( Min( Const ,FirstVNF_CPU ) + Max( Const,RRS ) ) ) * Min( ( ( PN / PN ) * ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_CPU_Server * CRS ) + ( FirstVNF_CPU_Server + Const ) ) ) ),( ( ( Max( CRS,Const ) / Min( DDR ,Const ) ) * ( ( PN + MDR ) - ( RRS / ACS ) ) ) + ( Min( Min( BR ,CRS ) ,( MDR / MDR ) ) - ( ( Const * MDR ) - ( AMS - MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( Min( MUM ,( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) ) - RRSe ) / RRSe ) + ( RMSe - MUC ) )", "obj1": 0.2883817427385892, "obj2": 0.6214668234134052}, {"determining": "Min( ( ( MDR * Max( FirstVNF_CPU,FirstVNF_RAM ) ) + ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) * Min( CRS ,DDR ) ) / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( ( Max( Min( RCSe ,( ( ( Min( RCSe ,MUM ) - MUM ) - DS ) - Max( DS,RRSe ) ) ),MUM ) - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.1908713692946058, "obj2": 0.6323800386013406}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - DS ) - Max( DS,RRSe ) )", "obj1": 0.12655601659751037, "obj2": 0.7012213362236587}, {"determining": "( ( DDR / MRS ) + Max( Max( BR,( FirstVNF_Mem_Server + ( FirstVNF_RAM_Server / MRS ) ) ),( ARS - CRS ) ) )", "choosing": "( ( RRSe * DS ) * ( Max( ( DS - DS ),Min( MUC ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ) )", "obj1": 0.3091286307053942, "obj2": 0.5994666464193333}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) * Min( DDR ,( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( ( Min( RCSe ,MUC ) - MUM ) - RRSe ) - Max( DS,Max( ( RRSe * DS ),DS ) ) )", "obj1": 0.13485477178423236, "obj2": 0.6862950031001822}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) * Min( DDR ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.12655601659751037, "obj2": 0.7012213362236587}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + ( ( FirstVNF_CPU_Server * Const ) + ( AMS / DDR ) ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) + Max( ( RRSe * ( ( Min( MUM ,( RRSe + DS ) ) - RRSe ) / RRSe ) ),DS ) )", "obj1": 0.2966804979253112, "obj2": 0.6142793645207206}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( FirstVNF_RAM_Server / MRS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( Max( ( RRSe * DS ),RRSe ) * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( CRS + Max( Max( BR,( FirstVNF_Mem_Server + ( ARS + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ),( ARS - CRS ) ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - ( ( RRSe * DS ) * DS ) )", "obj1": 0.14937759336099585, "obj2": 0.6788391206021291}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + ( ( DDR * Const ) + ( AMS / DDR ) ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) + Max( ( RRSe * DS ),DS ) )", "obj1": 0.2966804979253112, "obj2": 0.6142793645207206}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Min( Max( Min( Max( CS,RCSe ) ,( RCSe / MUR ) ),Max( Min( RCSe ,MLU ),( MUR + RCSe ) ) ) ,( Max( ( MUR + RCSe ),( RMSe + RMSe ) ) * ( ( MUM / MUM ) - ( RRSe - MUR ) ) ) ) )", "obj1": 0.1825726141078838, "obj2": 0.6414952017561827}, {"determining": "Min( ( CRS * Min( CRS ,DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( Min( ( ( ( ( ( MLU * MUC ) * ( DS - RCSe ) ) + ( Min( MUC ,MLU ) + Max( RCSe,CS ) ) ) + ( ( ( RCSe - MLU ) - ( RCSe / MUM ) ) * Max( ( RMSe * MUM ),( MUM + MLU ) ) ) ) / Min( Min( ( ( RCSe * MUR ) + Min( MLU ,RMSe ) ) ,( ( RRSe / CS ) - ( MUR * RCSe ) ) ) ,( ( ( MUC + CS ) / ( CS / MUC ) ) / Min( Max( MUM,MUC ) ,( DS * MUR ) ) ) ) ) ,( Min( Max( Min( Max( CS,RCSe ) ,( RCSe / MUR ) ),Max( Min( RCSe ,MLU ),( MUR + RCSe ) ) ) ,( Max( ( MUR + RCSe ),( RMSe + RMSe ) ) * ( ( MUM / MUM ) - ( RRSe - MUR ) ) ) ) + Min( ( ( ( DS - RRSe ) - Min( MUR ,RCSe ) ) + ( ( MUR + DS ) / Max( RCSe,MUC ) ) ) ,( ( Min( MUM ,RRSe ) + Max( MLU,RRSe ) ) * ( ( RRSe * DS ) * ( DS - CS ) ) ) ) ) ),( Max( Max( ( Max( ( DS - DS ),Min( MUC ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ),( ( Min( MUM ,RMSe ) / ( RMSe - DS ) ) + ( Max( CS,RRSe ) * Max( RCSe,MUM ) ) ) ),( Min( ( ( MUM * DS ) / ( MLU / MLU ) ) ,( ( MUM / CS ) / ( CS - RRSe ) ) ) - ( Min( ( MLU + RMSe ) ,Max( RMSe,MLU ) ) / ( ( MUM / MUR ) + Min( MLU ,CS ) ) ) ) ) * ( ( Min( Min( Min( RRSe ,MUM ) ,( CS * MUM ) ) ,( Max( RMSe,DS ) - Min( MUC ,MUC ) ) ) * ( ( ( DS * MUC ) / ( DS + CS ) ) / ( ( DS / RCSe ) + ( MUM / MUR ) ) ) ) + ( Max( DS,RRSe ) / Max( Max( Min( RMSe ,CS ),( MUC * RCSe ) ),Min( Min( MUC ,MLU ) ,Min( RMSe ,MUC ) ) ) ) ) ) ) - ( ( Min( RCSe ,MUM ) - MUM ) - ( ( ( ( ( ( DS - RCSe ) + ( MLU * MUM ) ) * ( Max( CS,MUM ) - ( MUR - MLU ) ) ) - ( Max( ( MUR / MUC ),Max( RRSe,MUM ) ) - ( Min( RMSe ,MLU ) * Max( MUC,DS ) ) ) ) + Min( ( ( Max( MUC,MLU ) + ( RMSe + MUM ) ) / ( Max( CS,MLU ) * Max( MUM,CS ) ) ) ,Max( ( ( MLU - MLU ) / ( DS / MUM ) ),Max( Min( MUC ,MUM ),Min( CS ,CS ) ) ) ) ) - ( Min( ( Max( Max( RCSe,DS ),Max( MLU,MUM ) ) + ( Min( MUR ,MLU ) * ( RCSe + RRSe ) ) ) ,Min( Min( ( DS - DS ) ,( MUR - MUR ) ) ,( ( RRSe * RRSe ) / Max( CS,RMSe ) ) ) ) - ( Min( ( ( RMSe - RMSe ) / ( RRSe + RRSe ) ) ,Min( Min( DS ,MLU ) ,Min( DS ,RMSe ) ) ) + Max( ( Min( RRSe ,MLU ) + Min( CS ,RMSe ) ),( ( RRSe * RCSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.7554038775564432}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MLU ) - MUM ) - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.14730290456431536, "obj2": 0.6818410587808702}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - DS ) - Max( DS,RRSe ) )", "obj1": 0.12655601659751037, "obj2": 0.7012213362236587}, {"determining": "( PN * ( CRS - DDR ) )", "choosing": "( ( RMSe + MLU ) * ( ( Max( MLU,RRSe ) * Max( ( RMSe * ( MUC - RMSe ) ),( ( MLU - CS ) - ( ( MUR + DS ) * DS ) ) ) ) - ( RRSe * DS ) ) )", "obj1": 0.13900414937759337, "obj2": 0.6830944413218719}, {"determining": "( ( FirstVNF_RAM_Server / ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) * Min( Min( CRS ,DDR ) ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - ( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( RRSe * DS ),RRSe ) ) )", "obj1": 0.27593360995850624, "obj2": 0.6301793005369128}, {"determining": "( ( FirstVNF_RAM_Server / ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - ( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( RRSe * DS ),RRSe ) ) ) - Max( DS,RRSe ) )", "obj1": 0.27593360995850624, "obj2": 0.6301793005369128}, {"determining": "( ( FirstVNF_RAM_Server / ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.12655601659751037, "obj2": 0.7012213362236587}, {"determining": "( ( FirstVNF_RAM_Server / ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - ( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( RRSe * DS ),RRSe ) ) ) - Max( DS,RRSe ) )", "obj1": 0.27593360995850624, "obj2": 0.6301793005369128}, {"determining": "Min( ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( ( Max( DS,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) ),MLU ) * ( ( Max( MLU,RRSe ) * Max( ( RMSe * ( MUC - RMSe ) ),( ( MLU - CS ) - ( ( MUR + DS ) * DS ) ) ) ) - ( RRSe * DS ) ) )", "obj1": 0.13278008298755187, "obj2": 0.6902136633869949}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + ( ( DDR * Max( Max( BR,BR ),( ARS - CRS ) ) ) + ( AMS / DDR ) ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.12655601659751037, "obj2": 0.7012213362236587}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + ( CRS + ( AMS / DDR ) ) )", "choosing": "( ( ( Min( RCSe ,Max( RCSe,RMSe ) ) - MUM ) - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.13485477178423236, "obj2": 0.6862950031001822}, {"determining": "( ( ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS / DDR ) ) * Min( DDR ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( RRSe * MLU ),DS ) )", "obj1": 0.12655601659751037, "obj2": 0.7012213362236587}, {"determining": "( ( ( FirstVNF_RAM_Server / MRS ) + ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) ) + Max( Max( BR,( FirstVNF_Mem_Server + ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ),( ARS - CRS ) ) )", "choosing": "( ( Max( Min( RCSe ,MUM ),MUM ) - RCSe ) - Max( DS,RRSe ) )", "obj1": 0.1908713692946058, "obj2": 0.6323800386013406}, {"determining": "Min( ( ( FirstVNF_RAM_Server / MRS ) * Min( CRS ,( ( FirstVNF_RAM_Server / MRS ) + ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) ) ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( Min( ( ( ( ( ( MLU * MUC ) * ( DS - RCSe ) ) + ( Min( MUC ,MLU ) + Max( RCSe,CS ) ) ) + ( ( ( RCSe - MLU ) - ( RCSe / MUM ) ) * Max( ( RMSe * MUM ),( MUM + MLU ) ) ) ) / Min( Min( ( ( RCSe * MUR ) + Min( MLU ,RMSe ) ) ,( ( RRSe / CS ) - ( MUR * RCSe ) ) ) ,( ( ( MUC + CS ) / ( CS / MUC ) ) / Min( Max( MUM,MUC ) ,( DS * MUR ) ) ) ) ) ,( Min( Max( Min( Max( CS,RCSe ) ,( RCSe / MUR ) ),Max( Min( RCSe ,MLU ),( MUR + RCSe ) ) ) ,( Max( ( MUR + RCSe ),( RMSe + RMSe ) ) * ( ( MUM / MUM ) - ( RRSe - MUR ) ) ) ) + Min( ( ( ( DS - RRSe ) - Min( MUR ,RCSe ) ) + ( ( MUR + DS ) / Max( RCSe,MUC ) ) ) ,( ( Min( MUM ,RRSe ) + Max( MLU,RRSe ) ) * ( ( RRSe * DS ) * ( DS - CS ) ) ) ) ) ),( Max( Max( ( Max( ( DS - DS ),Min( MUC ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ),( ( Min( MUM ,RMSe ) / ( RMSe - DS ) ) + ( Max( CS,RRSe ) * Max( RCSe,MUM ) ) ) ),( Min( ( ( MUM * DS ) / ( MLU / MLU ) ) ,( ( MUM / CS ) / ( CS - RRSe ) ) ) - ( Min( ( MLU + RMSe ) ,Max( RMSe,MLU ) ) / ( ( MUM / MUR ) + Min( MLU ,CS ) ) ) ) ) * ( ( Min( Min( Min( RRSe ,MUM ) ,( CS * MUM ) ) ,( Max( RMSe,DS ) - Min( MUC ,MUC ) ) ) * ( ( ( DS * MUC ) / ( DS + CS ) ) / ( ( DS / RCSe ) + ( MUM / MUR ) ) ) ) + ( Max( DS,RRSe ) / Max( Max( Min( RMSe ,CS ),( MUC * RCSe ) ),Min( Min( MUC ,MLU ) ,Min( RMSe ,MUC ) ) ) ) ) ) ) - ( Max( Max( Min( Max( ( ( DS * CS ) / ( CS - MUM ) ),( ( MLU / MUM ) * ( CS + DS ) ) ) ,( ( Max( RCSe,RMSe ) / ( CS - CS ) ) - ( ( RCSe - CS ) / Max( RRSe,RMSe ) ) ) ),Max( ( ( ( CS * MUM ) + ( DS * RRSe ) ) / ( Min( MUR ,CS ) / ( MUR + MUC ) ) ),( Max( Min( MUR ,DS ),Max( MUR,MUC ) ) - Max( ( MUM + MLU ),( MLU / CS ) ) ) ) ),( Min( Max( ( ( MUR + RRSe ) * ( RCSe - RMSe ) ),( Min( RMSe ,MLU ) * Min( MUC ,RMSe ) ) ) ,Max( ( ( DS / RRSe ) * ( CS - DS ) ),( Min( MUM ,MUR ) + ( MUM - CS ) ) ) ) + ( ( ( ( MUC * MUR ) + ( RRSe - RMSe ) ) * Min( ( RCSe / MUC ) ,( RMSe - MUC ) ) ) - ( ( ( MUM + RCSe ) + Max( MUC,RCSe ) ) + Max( ( RMSe - RMSe ),( MUM - MUR ) ) ) ) ) ) - Max( Min( RCSe ,MUM ),MUM ) ) )", "obj1": 0.0975103734439834, "obj2": 0.7566961222271988}, {"determining": "Min( ( ( FirstVNF_RAM_Server - MRS ) * Min( CRS ,DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( ( Max( Min( RCSe ,MUM ),MUM ) / RRSe ) - Max( DS,RRSe ) )", "obj1": 0.1908713692946058, "obj2": 0.6323800386013406}, {"determining": "( ( DDR / MRS ) + Max( Max( BR,( Max( Max( BR,( FirstVNF_Mem_Server + ( FirstVNF_RAM_Server / MRS ) ) ),( ARS - CRS ) ) + ( FirstVNF_CPU + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ),( ARS - CRS ) ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( DS - DS ),Min( MUC ,MUC ) ) )", "obj1": 0.1825726141078838, "obj2": 0.6414952017561827}, {"determining": "( ( DDR / MRS ) + Max( Max( BR,( FirstVNF_Mem_Server + ( FirstVNF_CPU + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ),( ARS - CRS ) ) )", "choosing": "( ( RRSe * DS ) * ( Max( ( DS - DS ),Min( MUC ,MUC ) ) + ( ( MUM - DS ) + ( RRSe / DS ) ) ) )", "obj1": 0.3091286307053942, "obj2": 0.5994666464193333}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) * Min( CRS ,DDR ) )", "choosing": "( Max( ( Max( DS,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) ),MLU ) * ( ( Max( MLU,RRSe ) * Max( ( RMSe * ( MUC - RMSe ) ),( ( MLU - CS ) - ( ( MUR + DS ) * DS ) ) ) ) - ( RRSe * DS ) ) )", "obj1": 0.13278008298755187, "obj2": 0.6902136633869949}, {"determining": "( ( FirstVNF_RAM_Server / ( ( DDR * FirstVNF_CPU ) + ( ( ( CRS / MRS ) + ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) ) / DDR ) ) ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,Max( ( DS - DS ),Min( ( ( MLU - CS ) - ( RRSe * DS ) ) ,MUC ) ) ) - MUM ) - RRSe ) - Max( ( RRSe * DS ),RRSe ) )", "obj1": 0.17842323651452283, "obj2": 0.6492837378644675}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) + Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) + Max( ( RRSe * DS ),DS ) )", "obj1": 0.2966804979253112, "obj2": 0.6142793645207206}], "15": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( ( MDR * ( ( DDR / MRS ) + Max( Max( BR,BR ),( ARS - CRS ) ) ) ) - FirstVNF_RAM ) ) + FirstVNF_RAM )", "choosing": "( Max( ( Max( DS,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) ),MLU ) * ( ( Max( MLU,RRSe ) * Max( ( RMSe * ( MUC - RMSe ) ),( ( MLU - CS ) - ( ( MUR + DS ) * DS ) ) ) ) - ( RRSe * DS ) ) )", "obj1": 0.13278008298755187, "obj2": 0.6902136633869949}, {"determining": "( ( FirstVNF_RAM_Server / ( ( DDR * FirstVNF_CPU ) + ( ( ( CRS / MRS ) + ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) ) / DDR ) ) ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,Max( ( DS - DS ),Min( ( ( MLU - CS ) - ( RRSe * DS ) ) ,MUC ) ) ) - MUM ) - RRSe ) - Max( ( RRSe * DS ),RRSe ) )", "obj1": 0.17842323651452283, "obj2": 0.6492837378644675}, {"determining": "( ( ( FirstVNF_RAM_Server / MRS ) + ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) ) + Max( Max( BR,( FirstVNF_Mem_Server + ( FirstVNF_CPU + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ),( ARS - CRS ) ) )", "choosing": "( ( Max( Min( RCSe ,MUM ),MUM ) - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.1908713692946058, "obj2": 0.6323800386013406}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) * Min( CRS ,DDR ) )", "choosing": "( Max( ( Max( DS,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) ),MLU ) * ( ( Max( MLU,RRSe ) * Max( ( RMSe * ( MUC - RMSe ) ),( ( MLU - CS ) - ( ( MUR + DS ) * DS ) ) ) ) - ( RRSe * DS ) ) )", "obj1": 0.13278008298755187, "obj2": 0.6902136633869949}, {"determining": "Min( ( ( MDR * Max( FirstVNF_CPU,FirstVNF_RAM ) ) + ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) * Min( CRS ,DDR ) ) / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( ( Max( Min( RCSe ,( ( ( Min( RCSe ,MUM ) - MUM ) - DS ) - Max( DS,RRSe ) ) ),MUM ) - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.1908713692946058, "obj2": 0.6323800386013406}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( FirstVNF_RAM_Server / MRS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( Max( ( RRSe * DS ),RRSe ) * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Min( Max( Min( Max( CS,RCSe ) ,( RCSe / MUR ) ),Max( Min( RCSe ,MLU ),( MUR + RCSe ) ) ) ,( Max( ( MUR + RCSe ),( RMSe + RMSe ) ) * ( ( MUM / MUM ) - ( RRSe - MUR ) ) ) ) )", "obj1": 0.1825726141078838, "obj2": 0.6414952017561827}, {"determining": "Min( ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( ( Max( DS,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) ),MLU ) * ( ( Max( MLU,RRSe ) * Max( ( RMSe * ( MUC - RMSe ) ),( ( MLU - CS ) - ( ( MUR + DS ) * DS ) ) ) ) - ( RRSe * DS ) ) )", "obj1": 0.13278008298755187, "obj2": 0.6902136633869949}, {"determining": "( ( ( FirstVNF_RAM_Server / MRS ) + ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) ) + Max( Max( BR,( FirstVNF_Mem_Server + ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ),( ARS - CRS ) ) )", "choosing": "( ( Max( Min( RCSe ,MUM ),MUM ) - RCSe ) - Max( DS,RRSe ) )", "obj1": 0.1908713692946058, "obj2": 0.6323800386013406}, {"determining": "Min( ( ( FirstVNF_RAM_Server - MRS ) * Min( CRS ,DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( ( Max( Min( RCSe ,MUM ),MUM ) / RRSe ) - Max( DS,RRSe ) )", "obj1": 0.1908713692946058, "obj2": 0.6323800386013406}, {"determining": "( ( DDR / MRS ) + Max( Max( BR,( Max( Max( BR,( FirstVNF_Mem_Server + ( FirstVNF_RAM_Server / MRS ) ) ),( ARS - CRS ) ) + ( FirstVNF_CPU + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ),( ARS - CRS ) ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( DS - DS ),Min( MUC ,MUC ) ) )", "obj1": 0.1825726141078838, "obj2": 0.6414952017561827}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) * Min( CRS ,DDR ) )", "choosing": "( Max( ( Max( DS,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) ),MLU ) * ( ( Max( MLU,RRSe ) * Max( ( RMSe * ( MUC - RMSe ) ),( ( MLU - CS ) - ( ( MUR + DS ) * DS ) ) ) ) - ( RRSe * DS ) ) )", "obj1": 0.13278008298755187, "obj2": 0.6902136633869949}, {"determining": "( ( FirstVNF_RAM_Server / ( ( DDR * FirstVNF_CPU ) + ( ( ( CRS / MRS ) + ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) ) / DDR ) ) ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,Max( ( DS - DS ),Min( ( ( MLU - CS ) - ( RRSe * DS ) ) ,MUC ) ) ) - MUM ) - RRSe ) - Max( ( RRSe * DS ),RRSe ) )", "obj1": 0.17842323651452283, "obj2": 0.6492837378644675}, {"determining": "( ( MDR * ( ( MDR * ( ( DDR / MRS ) + Max( Max( BR,BR ),( FirstVNF_Mem_Server - CRS ) ) ) ) - FirstVNF_RAM ) ) + FirstVNF_RAM )", "choosing": "( Max( ( Max( DS,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) ),MLU ) * ( ( Max( MLU,( MUM - DS ) ) * Max( ( RMSe * ( MUC - RMSe ) ),( ( MLU - CS ) - ( ( MUR + DS ) * DS ) ) ) ) - ( RRSe * DS ) ) )", "obj1": 0.14522821576763487, "obj2": 0.6741151333533579}, {"determining": "( ( DDR / MRS ) + Max( Max( BR,( FirstVNF_Mem_Server + ( FirstVNF_CPU + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ),( ARS - CRS ) ) )", "choosing": "( Max( ( Max( DS,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) ),MLU ) * ( ( Max( MLU,RRSe ) * Max( ( RMSe * ( MUC - RMSe ) ),( ( MLU - CS ) - ( ( MUR + DS ) * DS ) ) ) ) - ( RRSe * DS ) ) )", "obj1": 0.13278008298755187, "obj2": 0.6902136633869949}, {"determining": "( CRS + Max( ( ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS / DDR ) ),( ARS - CRS ) ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - ( ( RRSe * DS ) * MUM ) )", "obj1": 0.18049792531120332, "obj2": 0.6488348350223021}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Min( Max( Min( Max( CS,RCSe ) ,( RCSe / MUR ) ),Max( Min( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) ,MLU ),( MUR + RCSe ) ) ) ,( Max( ( MUR + RCSe ),( RMSe + RMSe ) ) * ( ( MUM / MUM ) - ( RRSe - MUR ) ) ) ) )", "obj1": 0.1825726141078838, "obj2": 0.6414952017561827}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) + Min( CRS ,DDR ) ) + Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Min( Max( Min( Max( CS,RCSe ) ,( RCSe / MUR ) ),Max( Min( RCSe ,MLU ),( MUR + RCSe ) ) ) ,( Max( ( MUR + RCSe ),( RMSe + RMSe ) ) * ( ( MUM / MUM ) - ( MUC - MUR ) ) ) ) )", "obj1": 0.1825726141078838, "obj2": 0.6414952017561827}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_RAM ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - MLU ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( DDR / MRS ) + Max( Max( BR,( Max( Max( BR,( FirstVNF_Mem_Server + ( FirstVNF_RAM_Server / MRS ) ) ),( ARS - CRS ) ) + ( FirstVNF_CPU + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ),( ARS - CRS ) ) )", "choosing": "( ( Max( Min( RCSe ,MUM ),MUM ) - RCSe ) - Max( DS,RRSe ) )", "obj1": 0.1908713692946058, "obj2": 0.6323800386013406}, {"determining": "( ( ( FirstVNF_RAM_Server / MRS ) + ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) ) + Max( Max( BR,( FirstVNF_Mem_Server + ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ),( ARS - CRS ) ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( DS - DS ),Min( MUC ,MUC ) ) )", "obj1": 0.1825726141078838, "obj2": 0.6414952017561827}, {"determining": "( ( ( ( FirstVNF_RAM_Server / MRS ) + ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) ) / ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) * Min( Min( CRS ,DDR ) ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - ( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - ( ( Max( Min( RCSe ,MUM ),MUM ) - RRSe ) - Max( DS,RRSe ) ) ) )", "obj1": 0.1908713692946058, "obj2": 0.6323800386013406}, {"determining": "( ( ( FirstVNF_RAM_Server / MRS ) + ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) ) + Max( Max( BR,( FirstVNF_Mem_Server + ( FirstVNF_CPU + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ),( ARS - CRS ) ) )", "choosing": "( ( Max( Min( RCSe ,MUM ),MUM ) - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.1908713692946058, "obj2": 0.6323800386013406}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / PN ) ) )", "choosing": "( ( RRSe - CS ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / ( ( DDR * FirstVNF_CPU ) + ( ( ( CRS / MRS ) + ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) ) / DDR ) ) ) * Min( CRS ,ARS ) )", "choosing": "( ( ( Min( RCSe ,Max( ( DS - DS ),Min( ( ( MLU - CS ) - ( RRSe * DS ) ) ,MUC ) ) ) - MUM ) - RMSe ) - Max( ( RRSe * DS ),RRSe ) )", "obj1": 0.17842323651452283, "obj2": 0.6492837378644675}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Min( Max( Min( Max( CS,RCSe ) ,( RCSe / MUR ) ),Max( Min( RCSe ,MLU ),( MUR + RCSe ) ) ) ,( Max( ( MUR + RCSe ),( RMSe + RMSe ) ) * ( ( MUM / MUM ) - ( RRSe - MUR ) ) ) ) )", "obj1": 0.1825726141078838, "obj2": 0.6414952017561827}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( CRS + Max( Max( BR,( FirstVNF_Mem_Server + ( ARS + ( Max( ( FirstVNF_Mem_Server / ACS ),Min( CRS ,DDR ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ),( ARS - CRS ) ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - ( ( RRSe * DS ) * ( ( Min( RCSe ,MUM ) - MUM ) - ( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( RRSe * DS ),RRSe ) ) ) ) )", "obj1": 0.16597510373443983, "obj2": 0.6672757302115303}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) * Max( DDR,PN ) )", "choosing": "( Max( ( Max( DS,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) ),MLU ) * ( ( Max( MLU,RRSe ) * Max( ( RMSe * ( MUC - RMSe ) ),( ( MLU - CS ) - ( ( MUR + DS ) * DS ) ) ) ) - ( Max( ( RRSe * DS ),DS ) * DS ) ) )", "obj1": 0.12655601659751037, "obj2": 0.697034551554196}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) * Min( CRS ,DDR ) )", "choosing": "( Max( ( Max( DS,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) ),MLU ) * ( ( Max( MLU,RRSe ) * Max( ( RMSe * ( MUC - RMSe ) ),( ( MLU - CS ) - ( ( MUR + DS ) * DS ) ) ) ) - ( RRSe * DS ) ) )", "obj1": 0.13278008298755187, "obj2": 0.6902136633869949}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "Min( ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( ( Max( Min( RCSe ,MUM ),MUM ) - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.1908713692946058, "obj2": 0.6323800386013406}, {"determining": "( ( ( FirstVNF_RAM_Server / MRS ) + ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) ) + Max( Max( BR,( FirstVNF_Mem_Server + ( FirstVNF_CPU + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ),( ARS - CRS ) ) )", "choosing": "( Max( ( Max( DS,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) ),MLU ) * ( ( Max( MLU,RRSe ) * Max( ( RMSe * ( MUC - RMSe ) ),( ( MLU - CS ) - ( ( MUR + DS ) * DS ) ) ) ) - ( RRSe * DS ) ) )", "obj1": 0.13278008298755187, "obj2": 0.6902136633869949}, {"determining": "( ( ( FirstVNF_RAM_Server / MRS ) + ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) ) + Max( Max( BR,( FirstVNF_Mem_Server + ( FirstVNF_CPU + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ),( ARS - CRS ) ) )", "choosing": "( ( Max( Min( RCSe ,MUM ),MUM ) - RRSe ) - Max( DS,RRSe ) )", "obj1": 0.1908713692946058, "obj2": 0.6323800386013406}, {"determining": "( FirstVNF_CPU * Min( CRS ,DDR ) )", "choosing": "( ( ( ( ( Min( RCSe ,MUM ) - MUM ) - ( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( RRSe * DS ),RRSe ) ) ) - MUM ) - DS ) - Max( DS,RRSe ) )", "obj1": 0.11618257261410789, "obj2": 0.728920579882689}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) * Min( CRS ,DDR ) )", "choosing": "( Max( ( Max( DS,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) ),MLU ) * ( ( Max( MLU,RRSe ) * Max( ( RMSe * ( MUC - RMSe ) ),( ( MLU - CS ) - ( ( MUR + DS ) * DS ) ) ) ) - ( RRSe * DS ) ) )", "obj1": 0.13278008298755187, "obj2": 0.6902136633869949}, {"determining": "( PN * ( ( FirstVNF_RAM_Server / MRS ) + ( ( DDR * Max( Max( BR,BR ),( ARS - CRS ) ) ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RMSe + MLU ) * ( ( Max( MLU,RRSe ) * Max( ( RMSe * ( MUC - RMSe ) ),( ( MLU - CS ) - ( Max( ( RRSe * DS ),DS ) * DS ) ) ) ) - ( RRSe * DS ) ) )", "obj1": 0.13692946058091288, "obj2": 0.6825870985596908}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe * RRSe ) - Max( ( RRSe - RRSe ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( Max( BR,( Max( Max( BR,( FirstVNF_Mem_Server + ( FirstVNF_RAM_Server / MRS ) ) ),( ARS - CRS ) ) + ( FirstVNF_CPU + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - MUR ) - ( Min( RRSe ,MUM ) - MUM ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( DDR / MRS ) + Max( Max( BR,( Max( Max( BR,( FirstVNF_Mem_Server + ( FirstVNF_RAM_Server / MRS ) ) ),( ARS - CRS ) ) + ( FirstVNF_CPU + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ),( ARS - CRS ) ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( DS - DS ),Min( MUC ,MUC ) ) )", "obj1": 0.1825726141078838, "obj2": 0.6414952017561827}, {"determining": "Min( ( ( FirstVNF_RAM_Server / MRS ) * Min( CRS ,DDR ) ) ,( ( FirstVNF_RAM_Server / MRS ) * Min( CRS ,DDR ) ) )", "choosing": "( ( ( Max( MLU,RRSe ) * Max( ( RMSe * ( MUC - RMSe ) ),( ( MLU - CS ) - ( ( MUR + DS ) * DS ) ) ) ) - ( RRSe * DS ) ) - Max( DS,RRSe ) )", "obj1": 0.17219917012448133, "obj2": 0.6502352834408007}, {"determining": "( ( FirstVNF_RAM_Server / DDR ) * Min( CRS ,DDR ) )", "choosing": "( Max( ( Max( DS,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) ),MLU ) * ( ( Max( Min( RCSe ,MUM ),RRSe ) * Max( ( RMSe * ( MUC - RMSe ) ),( ( MLU - CS ) - ( ( MUR + DS ) * DS ) ) ) ) - ( RRSe * DS ) ) )", "obj1": 0.13485477178423236, "obj2": 0.684770124939355}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) * Min( CRS ,DDR ) )", "choosing": "( Max( ( Max( DS,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) ),MLU ) * ( ( Max( MLU,RRSe ) * Max( ( RMSe * ( MUC - RMSe ) ),( ( MLU - CS ) - ( ( MUR + DS ) * DS ) ) ) ) - ( RRSe * DS ) ) )", "obj1": 0.13278008298755187, "obj2": 0.6902136633869949}, {"determining": "( ( ( FirstVNF_RAM_Server / MRS ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - DS ) - Max( DS,( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( RRSe * DS ),DS ) ) ) )", "obj1": 0.0975103734439834, "obj2": 0.7385864247757601}], "16": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( ( MDR * ( ( DDR / MRS ) + Max( Max( BR,BR ),( ARS - CRS ) ) ) ) - FirstVNF_RAM ) ) + FirstVNF_RAM )", "choosing": "( Max( ( Max( DS,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) ),MLU ) * ( ( Max( MLU,RRSe ) * Max( ( RMSe * ( MUC - RMSe ) ),( ( MLU - CS ) - ( ( MUR + DS ) * DS ) ) ) ) - ( RRSe * DS ) ) )", "obj1": 0.13278008298755187, "obj2": 0.6902136633869949}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) * Min( CRS ,DDR ) )", "choosing": "( Max( ( Max( DS,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) ),MLU ) * ( ( Max( MLU,RRSe ) * Max( ( RMSe * ( MUC - RMSe ) ),( ( MLU - CS ) - ( ( MUR + DS ) * DS ) ) ) ) - ( RRSe * DS ) ) )", "obj1": 0.13278008298755187, "obj2": 0.6902136633869949}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( FirstVNF_RAM_Server / MRS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( Max( ( RRSe * DS ),RRSe ) * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "Min( ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS / DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( Max( ( Max( DS,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) ),MLU ) * ( ( Max( MLU,RRSe ) * Max( ( RMSe * ( MUC - RMSe ) ),( ( MLU - CS ) - ( ( MUR + DS ) * DS ) ) ) ) - ( RRSe * DS ) ) )", "obj1": 0.13278008298755187, "obj2": 0.6902136633869949}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) * Min( CRS ,DDR ) )", "choosing": "( Max( ( Max( DS,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) ),MLU ) * ( ( Max( MLU,RRSe ) * Max( ( RMSe * ( MUC - RMSe ) ),( ( MLU - CS ) - ( ( MUR + DS ) * DS ) ) ) ) - ( RRSe * DS ) ) )", "obj1": 0.13278008298755187, "obj2": 0.6902136633869949}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_RAM ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - MLU ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / PN ) ) )", "choosing": "( ( RRSe - CS ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) * Max( DDR,PN ) )", "choosing": "( Max( ( Max( DS,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) ),MLU ) * ( ( Max( MLU,RRSe ) * Max( ( RMSe * ( MUC - RMSe ) ),( ( MLU - CS ) - ( ( MUR + DS ) * DS ) ) ) ) - ( Max( ( RRSe * DS ),DS ) * DS ) ) )", "obj1": 0.12655601659751037, "obj2": 0.697034551554196}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe * RRSe ) - Max( ( RRSe - RRSe ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( Max( BR,( Max( Max( BR,( FirstVNF_Mem_Server + ( FirstVNF_RAM_Server / MRS ) ) ),( ARS - CRS ) ) + ( FirstVNF_CPU + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - MUR ) - ( Min( RRSe ,MUM ) - MUM ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( ( FirstVNF_RAM_Server / MRS ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - DS ) - Max( DS,( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( RRSe * DS ),DS ) ) ) )", "obj1": 0.0975103734439834, "obj2": 0.7385864247757601}, {"determining": "( CRS + Max( ( ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS / DDR ) ),( ARS - CRS ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) * ACS )", "choosing": "( Max( ( Max( DS,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) ),MLU ) * ( ( Max( MLU,RRSe ) * Max( ( RMSe * ( MUC - RMSe ) ),( ( MLU - CS ) - ( ( MUR + RRSe ) * DS ) ) ) ) - ( RRSe * DS ) ) )", "obj1": 0.12448132780082988, "obj2": 0.7028062573957821}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Min( ( FirstVNF_Mem_Server / ACS ) ,Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),MUM ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / MRS ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - DS ) - Max( DS,( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( RRSe * DS ),DS ) ) ) )", "obj1": 0.0975103734439834, "obj2": 0.7385864247757601}, {"determining": "Min( ( ( FirstVNF_RAM_Server / MRS ) * Min( CRS ,DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Max( Min( FirstVNF_Mem_Server ,ACS ),( FirstVNF_RAM_Server / MRS ) ) ) + ( DDR + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( Max( Max( Min( RCSe ,MUM ),DS ),RRSe ) * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( ( FirstVNF_RAM_Server / MRS ) + ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) ) + Max( Max( BR,( FirstVNF_Mem_Server + ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ),( ARS - CRS ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( Max( ( RRSe * DS ),RRSe ) * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( MRS * Max( FirstVNF_CPU,FirstVNF_RAM ) ) / DDR ) ) )", "choosing": "( ( Max( ( Max( DS,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) ),MLU ) * ( ( Max( MLU,RRSe ) - Max( ( RMSe * ( MUC - RMSe ) ),( ( MLU - CS ) - ( ( MUR + DS ) * DS ) ) ) ) - ( RRSe * DS ) ) ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.11618257261410789, "obj2": 0.7047446745478427}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) / FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * ( ( Min( Min( RCSe ,MUM ) ,MUM ) - RRSe ) - Max( ( DS - DS ),Min( MUC ,MUC ) ) ) ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) + ( ( DDR * Max( DDR,PN ) ) + ( AMS / DDR ) ) ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - DS ) - Max( DS,( ( ( ( RCSe * MUM ) - MUM ) - RRSe ) - Max( ( CS * DS ),DS ) ) ) )", "obj1": 0.0975103734439834, "obj2": 0.7385864247757601}, {"determining": "( ( ( FirstVNF_RAM_Server / MRS ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - DS ) - Max( DS,( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( RRSe * DS ),DS ) ) ) )", "obj1": 0.0975103734439834, "obj2": 0.7385864247757601}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( DDR / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * ( RRSe * DS ) ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) )", "choosing": "( ( RRSe - RRSe ) - DS )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / DDR ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_Mem_Server ) + ( AMS / DDR ) ) )", "choosing": "( Min( RRSe ,RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * ( ( Max( Min( RCSe ,MUM ),MUM ) - RRSe ) - Max( DS,RRSe ) ) ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( ( FirstVNF_RAM_Server / MRS ) + ( MDR * Min( FirstVNF_CPU ,Const ) ) ) + Max( Max( BR,( FirstVNF_Mem_Server + ( FirstVNF_CPU + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ),( ARS - CRS ) ) )", "choosing": "( ( MUM - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( ( FirstVNF_RAM_Server / ( ( DDR * FirstVNF_CPU ) + ( ( ( CRS / MRS ) + ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) ) / DDR ) ) ) / MRS ) * Min( CRS ,DDR ) )", "choosing": "( Max( ( Max( DS,MLU ) * ( ( MLU - CS ) - ( RRSe * DS ) ) ),MLU ) * ( ( Max( Max( ( RRSe * DS ),RRSe ),RRSe ) * Max( ( RMSe * ( MUC - RMSe ) ),( ( MLU - CS ) - ( ( MUR + DS ) * DS ) ) ) ) - ( RRSe * DS ) ) )", "obj1": 0.12863070539419086, "obj2": 0.6910334027757636}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) + Min( CRS ,DDR ) ) + Min( CRS ,DDR ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - DS ) - Max( DS,( ( ( Min( RCSe ,MUM ) - Min( Max( CS,RCSe ) ,( RCSe / MUR ) ) ) - RRSe ) - Min( ( RRSe * DS ) ,DS ) ) ) )", "obj1": 0.0975103734439834, "obj2": 0.7385864247757601}, {"determining": "( ( ( FirstVNF_RAM_Server / MRS ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - DS ) - Max( DS,( ( ( Min( RCSe ,MUM ) - MUM ) - RRSe ) - Max( ( RRSe * DS ),DS ) ) ) )", "obj1": 0.0975103734439834, "obj2": 0.7385864247757601}, {"determining": "( Max( BR,( FirstVNF_Mem_Server + ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( Min( MUC ,MUC ) * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( ( FirstVNF_RAM_Server / MRS ) + ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) ) + Max( Max( BR,( FirstVNF_Mem_Server + ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ),( ARS - CRS ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( Max( ( RRSe * DS ),RRSe ) * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( ACS / ACS ),Max( DDR,FirstVNF_Mem ) ) ) + ( ( CRS * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Min( ( RRSe * RCSe ) ,DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe - RRSe ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}], "17": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( FirstVNF_RAM_Server / MRS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( Max( ( RRSe * DS ),RRSe ) * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_RAM ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - MLU ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / PN ) ) )", "choosing": "( ( RRSe - CS ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe * RRSe ) - Max( ( RRSe - RRSe ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( Max( BR,( Max( Max( BR,( FirstVNF_Mem_Server + ( FirstVNF_RAM_Server / MRS ) ) ),( ARS - CRS ) ) + ( FirstVNF_CPU + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) * Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - MUR ) - ( Min( RRSe ,MUM ) - MUM ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( CRS + Max( ( ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) + ( AMS / DDR ) ),( ARS - CRS ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Min( ( FirstVNF_Mem_Server / ACS ) ,Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),MUM ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "Min( ( ( FirstVNF_RAM_Server / MRS ) * Min( CRS ,DDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Max( Min( FirstVNF_Mem_Server ,ACS ),( FirstVNF_RAM_Server / MRS ) ) ) + ( DDR + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( Max( Max( Min( RCSe ,MUM ),DS ),RRSe ) * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( ( FirstVNF_RAM_Server / MRS ) + ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) ) + Max( Max( BR,( FirstVNF_Mem_Server + ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ),( ARS - CRS ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( Max( ( RRSe * DS ),RRSe ) * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) / FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * ( ( Min( Min( RCSe ,MUM ) ,MUM ) - RRSe ) - Max( ( DS - DS ),Min( MUC ,MUC ) ) ) ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( DDR / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * ( RRSe * DS ) ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) )", "choosing": "( ( RRSe - RRSe ) - DS )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / DDR ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_Mem_Server ) + ( AMS / DDR ) ) )", "choosing": "( Min( RRSe ,RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * ( ( Max( Min( RCSe ,MUM ),MUM ) - RRSe ) - Max( DS,RRSe ) ) ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( ( FirstVNF_RAM_Server / MRS ) + ( MDR * Min( FirstVNF_CPU ,Const ) ) ) + Max( Max( BR,( FirstVNF_Mem_Server + ( FirstVNF_CPU + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ),( ARS - CRS ) ) )", "choosing": "( ( MUM - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( Max( BR,( FirstVNF_Mem_Server + ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( Min( MUC ,MUC ) * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( ( FirstVNF_RAM_Server / MRS ) + ( MDR * ( FirstVNF_CPU - FirstVNF_RAM ) ) ) + Max( Max( BR,( FirstVNF_Mem_Server + ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ),( ARS - CRS ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( Max( ( RRSe * DS ),RRSe ) * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( ACS / ACS ),Max( DDR,FirstVNF_Mem ) ) ) + ( ( CRS * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Min( ( RRSe * RCSe ) ,DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe - RRSe ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( Max( BR,( FirstVNF_Mem_Server + ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) + ( ( ( ( FirstVNF_RAM_Server / MRS ) * ACS ) * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( Min( MUC ,( ( MLU - CS ) - ( ( MUR + RRSe ) * DS ) ) ) * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( Max( BR,( FirstVNF_Mem_Server + ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( Min( MUC ,MUC ) * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * ( RRSe * DS ) ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( DS * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( DDR + PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RMSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_RAM,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe / DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( PN,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7759017988473716}], "18": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / Max( ( FirstVNF_Mem_Server / ACS ),Max( Max( DDR,PN ),PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( Max( ( RRSe * DS ),DS ) - Max( ( RRSe * DS ),MUR ) )", "obj1": 0.15560165975103735, "obj2": 0.6782827374840205}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + DDR ) )", "choosing": "( ( Max( ( RRSe * DS ),DS ) - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.1908713692946058, "obj2": 0.6370799491383696}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( DDR + PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe - RRSe ),DS ) )", "obj1": 0.17427385892116182, "obj2": 0.6551414434119471}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) )", "choosing": "( ( ( RRSe * ( RRSe * DS ) ) - RRSe ) - DS )", "obj1": 0.18049792531120332, "obj2": 0.6481964508291118}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( DDR / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * ( RRSe * RRSe ) ),DS ) )", "obj1": 0.17427385892116182, "obj2": 0.6551414434119471}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_RAM_Server ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - ( RRSe - RRSe ) )", "obj1": 0.15560165975103735, "obj2": 0.6782827374840205}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / DDR ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( RRSe + RRSe ) - Max( ( Max( ( Max( ( RRSe * DS ),RRSe ) * DS ),DS ) * DS ),DS ) )", "obj1": 0.0912863070539419, "obj2": 0.7720504369313168}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0995850622406639, "obj2": 0.7499040456247229}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RRSe * DS ),DS ) - Max( ( RRSe * ( ( Min( Min( RCSe ,MUM ) ,MUM ) - RRSe ) - Max( ( DS - DS ),Min( MUC ,MUC ) ) ) ),DS ) )", "obj1": 0.15560165975103735, "obj2": 0.6782827374840205}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / PN ) ) )", "choosing": "( ( RRSe - CS ) - RRSe )", "obj1": 0.24896265560165975, "obj2": 0.6024071227533904}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( ( ( RRSe - CS ) - Max( ( RRSe * DS ),DS ) ) - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.10580912863070539, "obj2": 0.6976634295848337}, {"determining": "Max( Max( BR,( Max( Max( BR,( FirstVNF_Mem_Server + ( FirstVNF_RAM_Server / MRS ) ) ),( ARS - CRS ) ) + ( FirstVNF_CPU + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( CRS ,FirstVNF_Mem_Server ) ) ) ) ) ),Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - MUR ) - ( Min( RRSe ,MUM ) - MUM ) )", "obj1": 0.1908713692946058, "obj2": 0.6370799491383696}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( Max( ( RRSe * DS ),DS ) - RRSe ) - Max( ( DS * DS ),DS ) )", "obj1": 0.1908713692946058, "obj2": 0.6370799491383696}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( DDR + PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RMSe * DS ),DS ) )", "obj1": 0.0954356846473029, "obj2": 0.7708760349181447}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( RRSe,DS ) )", "obj1": 0.1908713692946058, "obj2": 0.6370799491383696}, {"determining": "( ( FirstVNF_RAM_Server / ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * RRSe ),DS ) )", "obj1": 0.17427385892116182, "obj2": 0.6551414434119471}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_Mem_Server / ACS ) )", "choosing": "Max( ( MLU / RMSe ),( RMSe / ( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) ) ) )", "obj1": 0.966804979253112, "obj2": 0.02100468273052784}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) )", "choosing": "Max( ( MLU / RMSe ),( RMSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / DDR ) + ( ( DDR * FirstVNF_CPU ) / ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( Min( ( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) ) ,DS ),DS ) )", "obj1": 0.0954356846473029, "obj2": 0.7708760349181447}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / DDR ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_Mem_Server ) + ( AMS / DDR ) ) )", "choosing": "Min( Min( RRSe ,RRSe ) ,Max( ( RRSe * DS ),DS ) )", "obj1": 0.3651452282157676, "obj2": 0.5718716591415917}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( ACS / ACS ),Max( DDR,FirstVNF_Mem ) ) ) + ( ( CRS * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Min( ( RRSe * RCSe ) ,DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7732848837928242}, {"determining": "( ( FirstVNF_RAM_Server / Min( ( FirstVNF_Mem_Server / ACS ) ,Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + FirstVNF_CPU ) )", "choosing": "( RRSe - Max( ( RRSe * DS ),MUM ) )", "obj1": 0.15352697095435686, "obj2": 0.6873194388559631}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RRSe - RRSe ) - RRSe )", "obj1": 0.1908713692946058, "obj2": 0.6370799491383696}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + Min( AMS ,DDR ) ) )", "choosing": "( ( DS - RRSe ) - RRSe )", "obj1": 0.1908713692946058, "obj2": 0.6370799491383696}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),RRSe ) )", "obj1": 0.1908713692946058, "obj2": 0.6370799491383696}, {"determining": "( ( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RMSe * DS ),DS ) )", "obj1": 0.0954356846473029, "obj2": 0.7708760349181447}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( ( ( RRSe - RRSe ) - Max( ( DS * DS ),DS ) ) - RRSe ) - Max( ( RRSe / DS ),DS ) )", "obj1": 0.34647302904564314, "obj2": 0.5875309967541068}], "19": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + DDR ) )", "choosing": "( ( Max( ( RRSe * DS ),DS ) - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.1908713692946058, "obj2": 0.6370799491383696}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) )", "choosing": "( ( ( RRSe * ( RRSe * DS ) ) - RRSe ) - DS )", "obj1": 0.18049792531120332, "obj2": 0.6481964508291118}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / DDR ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( RRSe + RRSe ) - Max( ( Max( ( Max( ( RRSe * DS ),RRSe ) * DS ),DS ) * DS ),DS ) )", "obj1": 0.0912863070539419, "obj2": 0.7720504369313168}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0995850622406639, "obj2": 0.7499040456247229}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( ( ( RRSe - CS ) - Max( ( RRSe * DS ),DS ) ) - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.10580912863070539, "obj2": 0.6976634295848337}, {"determining": "Max( Max( BR,( Max( Max( BR,( FirstVNF_Mem_Server + ( FirstVNF_RAM_Server / MRS ) ) ),( ARS - CRS ) ) + ( FirstVNF_CPU + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( CRS ,FirstVNF_Mem_Server ) ) ) ) ) ),Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - MUR ) - ( Min( RRSe ,MUM ) - MUM ) )", "obj1": 0.1908713692946058, "obj2": 0.6370799491383696}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( Max( ( RRSe * DS ),DS ) - RRSe ) - Max( ( DS * DS ),DS ) )", "obj1": 0.1908713692946058, "obj2": 0.6370799491383696}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( DDR + PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RMSe * DS ),DS ) )", "obj1": 0.0954356846473029, "obj2": 0.7708760349181447}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( RRSe,DS ) )", "obj1": 0.1908713692946058, "obj2": 0.6370799491383696}, {"determining": "( ( AMS / DDR ) + ( ( DDR * FirstVNF_CPU ) / ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( Min( ( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) ) ,DS ),DS ) )", "obj1": 0.0954356846473029, "obj2": 0.7708760349181447}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( ACS / ACS ),Max( DDR,FirstVNF_Mem ) ) ) + ( ( CRS * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Min( ( RRSe * RCSe ) ,DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7732848837928242}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RRSe - RRSe ) - RRSe )", "obj1": 0.1908713692946058, "obj2": 0.6370799491383696}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + Min( AMS ,DDR ) ) )", "choosing": "( ( DS - RRSe ) - RRSe )", "obj1": 0.1908713692946058, "obj2": 0.6370799491383696}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),RRSe ) )", "obj1": 0.1908713692946058, "obj2": 0.6370799491383696}, {"determining": "( ( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RMSe * DS ),DS ) )", "obj1": 0.0954356846473029, "obj2": 0.7708760349181447}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_CPU,PN ) ) ) ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0995850622406639, "obj2": 0.7499040456247229}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) ) / DDR ) ) )", "choosing": "( ( ( ( RRSe - CS ) - Max( ( RRSe * RRSe ),DS ) ) - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.17427385892116182, "obj2": 0.6502835962879787}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( ( ( RRSe - CS ) - Max( ( RRSe * DS ),DS ) ) - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.10580912863070539, "obj2": 0.6976634295848337}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0995850622406639, "obj2": 0.7499040456247229}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( Max( ( Max( ( ( RRSe - RRSe ) * DS ),RRSe ) * DS ),DS ) * DS ),DS ) )", "obj1": 0.0912863070539419, "obj2": 0.7720504369313168}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( Max( ( Max( ( RRSe * DS ),RRSe ) * DS ),DS ) * DS ),DS ) )", "obj1": 0.08506224066390042, "obj2": 0.777969473862136}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( RRSe - RRSe ) - RRSe )", "obj1": 0.1908713692946058, "obj2": 0.6370799491383696}, {"determining": "( ( FirstVNF_RAM_Server / Min( ( FirstVNF_Mem_Server / ACS ) ,Max( DDR,FirstVNF_RAM ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - CS ) - Max( ( RRSe * DS ),MUM ) )", "obj1": 0.14937759336099585, "obj2": 0.6768159496630357}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe - RRSe ) * DS ),DS ) )", "obj1": 0.0954356846473029, "obj2": 0.7708760349181447}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( DDR + PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RMSe * DS ),DS ) )", "obj1": 0.0954356846473029, "obj2": 0.7708760349181447}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( Max( ( ( RRSe - RRSe ) * DS ),DS ) * DS ),DS ) )", "obj1": 0.08506224066390042, "obj2": 0.777969473862136}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( RRSe - RRSe ) - RRSe )", "obj1": 0.1908713692946058, "obj2": 0.6370799491383696}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server * ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( Min( RRSe ,RRSe ) - Max( ( ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) * DS ),DS ) )", "obj1": 0.08506224066390042, "obj2": 0.777969473862136}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_Mem ) ) ) + ( ( CRS * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Min( ( RRSe * MUM ) ,DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7732848837928242}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( AMS * FirstVNF_CPU ) + DDR ) )", "choosing": "( Max( ( ( RRSe - CS ) - Max( ( RRSe * DS ),DS ) ),RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.10580912863070539, "obj2": 0.6976634295848337}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( ( ( RRSe - MLU ) - Max( ( RRSe * DS ),DS ) ) - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.10995850622406639, "obj2": 0.6969823114271655}, {"determining": "Max( Max( BR,( Max( Max( BR,( FirstVNF_Mem_Server + ( FirstVNF_RAM_Server / MRS ) ) ),( ARS - CRS ) ) + ( FirstVNF_CPU + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ),Min( CRS ,DDR ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - MUM ) - MUR ) - ( Min( RCSe ,MUM ) - MUM ) )", "obj1": 0.1908713692946058, "obj2": 0.6370799491383696}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / DDR ),( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) ) ) + ( ( DDR * FirstVNF_Mem_Server ) + ( AMS / DDR ) ) )", "choosing": "Min( Min( DS ,RRSe ) ,( ( RRSe - RRSe ) - MUM ) )", "obj1": 0.1908713692946058, "obj2": 0.6370799491383696}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RRSe - RRSe ) - RRSe )", "obj1": 0.1908713692946058, "obj2": 0.6370799491383696}, {"determining": "( ( AMS / DDR ) + ACS )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( ( RRSe - ( ( RRSe - RRSe ) - Max( ( DS * DS ),DS ) ) ) - Max( ( RRSe * DS ),DS ) ) * DS ),DS ) )", "obj1": 0.0954356846473029, "obj2": 0.7708760349181447}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) ) * DS ),DS ) )", "obj1": 0.0954356846473029, "obj2": 0.7708760349181447}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - Const ) ) / ( FirstVNF_CPU_Server + ( Max( ( DDR / ACS ),Max( ( AMS / DDR ),PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( BR ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( MUR - RRSe ) - Max( ( Max( ( Max( ( RRSe * DS ),( RRSe - RRSe ) ) * DS ),DS ) * RRSe ),MUM ) )", "obj1": 0.08506224066390042, "obj2": 0.777969473862136}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_RAM ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - MLU ) - Max( ( Max( ( Max( ( RRSe * DS ),RRSe ) * DS ),DS ) * DS ),DS ) )", "obj1": 0.08506224066390042, "obj2": 0.777969473862136}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) / ACS ),Min( DDR ,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( ( ( RCSe - RRSe ) - Max( ( RRSe * DS ),DS ) ) - RRSe ) - Max( ( RRSe - RRSe ),DS ) )", "obj1": 0.15560165975103735, "obj2": 0.66455041206132}, {"determining": "( ( FirstVNF_RAM_Server / Min( ( FirstVNF_Mem_Server / ACS ) ,Max( DDR,FirstVNF_RAM ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - CS ) - Max( ( RRSe * DS ),MUM ) )", "obj1": 0.14937759336099585, "obj2": 0.6768159496630357}, {"determining": "( ( FirstVNF_RAM_Server / Min( ( FirstVNF_Mem_Server / ACS ) ,Max( DDR,FirstVNF_RAM ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - CS ) - Max( ( RRSe * DS ),MUM ) )", "obj1": 0.14937759336099585, "obj2": 0.6768159496630357}, {"determining": "( ( AMS / DDR ) + ( ( DDR * FirstVNF_CPU ) + Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( ( RRSe - RRSe ) - Max( ( RRSe * ( RRSe * DS ) ),DS ) ) * DS ),DS ) )", "obj1": 0.0954356846473029, "obj2": 0.7708760349181447}, {"determining": "( ( AMS / DDR ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) ) * DS ),DS ) )", "obj1": 0.0954356846473029, "obj2": 0.7708760349181447}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0995850622406639, "obj2": 0.7499040456247229}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) - RRSe ) - RRSe )", "obj1": 0.1908713692946058, "obj2": 0.6370799491383696}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0995850622406639, "obj2": 0.7499040456247229}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) / ACS ),Min( DDR ,PN ) ) ) + ( ( DDR * ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) ) + ( AMS / DDR ) ) )", "choosing": "( ( ( ( RCSe - RRSe ) - Max( ( RRSe * DS ),DS ) ) - RRSe ) - ( RRSe * DS ) )", "obj1": 0.17012448132780084, "obj2": 0.6557229664941512}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ),Max( DDR,PN ) ) ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server + ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( ( ( RRSe - CS ) - Max( ( RRSe * DS ),DS ) ) - RRSe ) - Max( ( RRSe * MUR ),Max( ( RRSe * DS ),DS ) ) )", "obj1": 0.10580912863070539, "obj2": 0.6976634295848337}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( ( ( RRSe - CS ) - Max( ( RRSe * DS ),DS ) ) - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.10580912863070539, "obj2": 0.6976634295848337}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) / ACS ),Min( DDR ,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( ( ( RCSe - RRSe ) - Max( ( RRSe * DS ),DS ) ) - RRSe ) - Max( ( RRSe - RRSe ),DS ) )", "obj1": 0.15560165975103735, "obj2": 0.66455041206132}], "20": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / DDR ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( RRSe + RRSe ) - Max( ( Max( ( Max( ( RRSe * DS ),RRSe ) * DS ),DS ) * DS ),DS ) )", "obj1": 0.0912863070539419, "obj2": 0.7720504369313168}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0995850622406639, "obj2": 0.7499040456247229}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( ( ( RRSe - CS ) - Max( ( RRSe * DS ),DS ) ) - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.10580912863070539, "obj2": 0.6976634295848337}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( ACS / ACS ),Max( DDR,FirstVNF_Mem ) ) ) + ( ( CRS * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Min( ( RRSe * RCSe ) ,DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7732848837928242}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_CPU,PN ) ) ) ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0995850622406639, "obj2": 0.7499040456247229}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( ( ( RRSe - CS ) - Max( ( RRSe * DS ),DS ) ) - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.10580912863070539, "obj2": 0.6976634295848337}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0995850622406639, "obj2": 0.7499040456247229}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( Max( ( Max( ( ( RRSe - RRSe ) * DS ),RRSe ) * DS ),DS ) * DS ),DS ) )", "obj1": 0.0912863070539419, "obj2": 0.7720504369313168}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( Max( ( Max( ( RRSe * DS ),RRSe ) * DS ),DS ) * DS ),DS ) )", "obj1": 0.08506224066390042, "obj2": 0.777969473862136}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( Max( ( ( RRSe - RRSe ) * DS ),DS ) * DS ),DS ) )", "obj1": 0.08506224066390042, "obj2": 0.777969473862136}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server * ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( Min( RRSe ,RRSe ) - Max( ( ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) * DS ),DS ) )", "obj1": 0.08506224066390042, "obj2": 0.777969473862136}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_Mem ) ) ) + ( ( CRS * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Min( ( RRSe * MUM ) ,DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7732848837928242}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( AMS * FirstVNF_CPU ) + DDR ) )", "choosing": "( Max( ( ( RRSe - CS ) - Max( ( RRSe * DS ),DS ) ),RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.10580912863070539, "obj2": 0.6976634295848337}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - Const ) ) / ( FirstVNF_CPU_Server + ( Max( ( DDR / ACS ),Max( ( AMS / DDR ),PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( BR ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( MUR - RRSe ) - Max( ( Max( ( Max( ( RRSe * DS ),( RRSe - RRSe ) ) * DS ),DS ) * RRSe ),MUM ) )", "obj1": 0.08506224066390042, "obj2": 0.777969473862136}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_RAM ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - MLU ) - Max( ( Max( ( Max( ( RRSe * DS ),RRSe ) * DS ),DS ) * DS ),DS ) )", "obj1": 0.08506224066390042, "obj2": 0.777969473862136}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0995850622406639, "obj2": 0.7499040456247229}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0995850622406639, "obj2": 0.7499040456247229}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ),Max( DDR,PN ) ) ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server + ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( ( ( RRSe - CS ) - Max( ( RRSe * DS ),DS ) ) - RRSe ) - Max( ( RRSe * MUR ),Max( ( RRSe * DS ),DS ) ) )", "obj1": 0.10580912863070539, "obj2": 0.6976634295848337}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( ( ( RRSe - CS ) - Max( ( RRSe * DS ),DS ) ) - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.10580912863070539, "obj2": 0.6976634295848337}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( AMS,Max( DDR,PN ) ) ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( ( ( RRSe - CS ) - Max( ( RRSe * Max( ( DS * DS ),DS ) ),DS ) ) - RRSe ) - Max( ( RRSe * DS ),Max( ( RRSe * DS ),DS ) ) )", "obj1": 0.10580912863070539, "obj2": 0.6976634295848337}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ),Max( DDR,PN ) ) ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( ( ( RRSe - CS ) - Max( ( RRSe * DS ),DS ) ) - RRSe ) - Max( ( RRSe * DS ),Max( ( RRSe * DS ),DS ) ) )", "obj1": 0.10580912863070539, "obj2": 0.6976634295848337}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( DDR,PN ) ) - Max( ( AMS / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - Max( ( Max( ( Max( ( RRSe * DS ),RRSe ) * DS ),DS ) * DS ),DS ) )", "obj1": 0.0912863070539419, "obj2": 0.7720504369313168}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( Max( ( Max( ( ( RRSe - RRSe ) * DS ),RRSe ) * DS ),DS ) * DS ),DS ) )", "obj1": 0.08506224066390042, "obj2": 0.777969473862136}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) / ACS ),Min( DDR ,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0995850622406639, "obj2": 0.7499040456247229}, {"determining": "( ( FirstVNF_RAM_Server + Max( ( FirstVNF_Mem_Server / Max( DDR,PN ) ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + FirstVNF_CPU ) )", "choosing": "( ( ( ( MLU - CS ) - Max( ( ( ( RRSe - RRSe ) - RRSe ) * DS ),DS ) ) - RRSe ) - ( ( RRSe * DS ) + RMSe ) )", "obj1": 0.10580912863070539, "obj2": 0.6976634295848337}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( PN,PN ) ) ) + ( ( DDR * ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( ( DDR * FirstVNF_CPU ) + DDR ) ) ) ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - ( RRSe * DS ) ) - RRSe )", "obj1": 0.0995850622406639, "obj2": 0.7499040456247229}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + DDR ) )", "choosing": "( ( ( ( RRSe - CS ) - Max( ( RRSe * DS ),DS ) ) - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.10580912863070539, "obj2": 0.6976634295848337}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) * FirstVNF_CPU ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( Max( ( Max( ( RRSe * DS ),RRSe ) * DS ),( ( RRSe - RRSe ) - RRSe ) ) * DS ),DS ) )", "obj1": 0.08506224066390042, "obj2": 0.777969473862136}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) * FirstVNF_CPU ) + ( AMS + DDR ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( Max( ( Max( ( RRSe / DS ),RRSe ) * DS ),DS ) * DS ),DS ) )", "obj1": 0.08506224066390042, "obj2": 0.777969473862136}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) ) * DS ),DS ) )", "obj1": 0.08506224066390042, "obj2": 0.777969473862136}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( CRS,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( ( ( RRSe - CS ) - Max( ( RRSe * DS ),DS ) ) + RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.10580912863070539, "obj2": 0.6976634295848337}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( DDR,PN ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( Max( ( Max( ( RRSe * DS ),( DS - RRSe ) ) * DS ),DS ) * DS ),DS ) )", "obj1": 0.09336099585062241, "obj2": 0.771972573267174}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( Max( ( Max( ( RRSe * DS ),( RRSe - RRSe ) ) * DS ),DS ) * DS ),DS ) )", "obj1": 0.08506224066390042, "obj2": 0.777969473862136}, {"determining": "Max( Max( BR,( Max( Max( BR,( FirstVNF_Mem_Server + ( FirstVNF_RAM_Server / MRS ) ) ),( ARS - CRS ) ) + ( FirstVNF_CPU + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ),Min( CRS ,DDR ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0995850622406639, "obj2": 0.7499040456247229}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( Max( ( ( RRSe - RRSe ) * DS ),DS ) * DS ),DS ) )", "obj1": 0.08506224066390042, "obj2": 0.777969473862136}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( ( AMS / DDR ),PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( Min( ( RRSe - RRSe ) ,RRSe ) - Max( ( Max( ( Max( ( RRSe * DS ),RRSe ) * DS ),DS ) * DS ),DS ) )", "obj1": 0.08506224066390042, "obj2": 0.777969473862136}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( ( AMS / DDR ),PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( Max( ( Max( ( RRSe * DS ),( RRSe - RRSe ) ) * DS ),( Max( ( RRSe * DS ),RRSe ) * DS ) ) * DS ),DS ) )", "obj1": 0.08506224066390042, "obj2": 0.777969473862136}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + Min( AMS ,ARS ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( Max( ( Max( ( RRSe * DS ),( RRSe - RRSe ) ) * DS ),CS ) * DS ),DS ) )", "obj1": 0.08506224066390042, "obj2": 0.777969473862136}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - Const ) ) / ( FirstVNF_CPU_Server + ( Max( ( DDR / ACS ),Max( ( AMS / DDR ),PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( BR ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( MUR - RRSe ) - Max( ( Max( ( Max( ( RRSe * DS ),( RRSe - RRSe ) ) * DS ),DS ) * RRSe ),MUM ) )", "obj1": 0.08506224066390042, "obj2": 0.777969473862136}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR - FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( ( FirstVNF_RAM_Server / DDR ),PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( BR ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( Max( ( ( Min( RCSe ,MUM ) - MUM ) * DS ),DS ) + RRSe ),DS ) )", "obj1": 0.08506224066390042, "obj2": 0.777969473862136}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe - RRSe ) * DS ),DS ) )", "obj1": 0.08506224066390042, "obj2": 0.777969473862136}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( Max( ( Max( ( ( RRSe - RRSe ) * DS ),RRSe ) * DS ),DS ) * DS ),DS ) )", "obj1": 0.0912863070539419, "obj2": 0.7720504369313168}, {"determining": "( ( FirstVNF_CPU_Server / Max( ( FirstVNF_Mem_Server / ACS ),( DDR * PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - ( ( DS * DS ) * ( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( ( RRSe - RRSe ) - Max( ( RRSe * DS ),DS ) ) * DS ),DS ) )", "obj1": 0.08506224066390042, "obj2": 0.777969473862136}, {"determining": "( ( FirstVNF_RAM_Server / Max( PN,Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0995850622406639, "obj2": 0.7499040456247229}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0995850622406639, "obj2": 0.7499040456247229}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( Max( ( ( ( RRSe - CS ) - RRSe ) * DS ),DS ) * DS ),DS ) )", "obj1": 0.08506224066390042, "obj2": 0.777969473862136}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( Max( ( ( RRSe - MLU ) * DS ),DS ) * DS ),DS ) )", "obj1": 0.08506224066390042, "obj2": 0.777969473862136}, {"determining": "( DDR + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( Max( Max( RRSe,DS ),DS ) * DS ),DS ) )", "obj1": 0.08506224066390042, "obj2": 0.777969473862136}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( Max( ( ( RRSe - RRSe ) * DS ),DS ) * DS ),DS ) )", "obj1": 0.08506224066390042, "obj2": 0.777969473862136}], "21": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / DDR ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( RRSe + RRSe ) - Max( ( Max( ( Max( ( RRSe * DS ),RRSe ) * DS ),DS ) * DS ),DS ) )", "obj1": 0.0912863070539419, "obj2": 0.7720504369313168}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( ( ( RRSe - CS ) - Max( ( RRSe * DS ),DS ) ) - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.10580912863070539, "obj2": 0.6976634295848337}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( ACS / ACS ),Max( DDR,FirstVNF_Mem ) ) ) + ( ( CRS * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Min( ( RRSe * RCSe ) ,DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7732848837928242}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( ( ( RRSe - CS ) - Max( ( RRSe * DS ),DS ) ) - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.10580912863070539, "obj2": 0.6976634295848337}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( Max( ( Max( ( ( RRSe - RRSe ) * DS ),RRSe ) * DS ),DS ) * DS ),DS ) )", "obj1": 0.0912863070539419, "obj2": 0.7720504369313168}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_Mem ) ) ) + ( ( CRS * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Min( ( RRSe * MUM ) ,DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7732848837928242}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( AMS * FirstVNF_CPU ) + DDR ) )", "choosing": "( Max( ( ( RRSe - CS ) - Max( ( RRSe * DS ),DS ) ),RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.10580912863070539, "obj2": 0.6976634295848337}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ),Max( DDR,PN ) ) ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server + ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( ( ( RRSe - CS ) - Max( ( RRSe * DS ),DS ) ) - RRSe ) - Max( ( RRSe * MUR ),Max( ( RRSe * DS ),DS ) ) )", "obj1": 0.10580912863070539, "obj2": 0.6976634295848337}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( ( ( RRSe - CS ) - Max( ( RRSe * DS ),DS ) ) - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.10580912863070539, "obj2": 0.6976634295848337}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( AMS,Max( DDR,PN ) ) ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( ( ( RRSe - CS ) - Max( ( RRSe * Max( ( DS * DS ),DS ) ),DS ) ) - RRSe ) - Max( ( RRSe * DS ),Max( ( RRSe * DS ),DS ) ) )", "obj1": 0.10580912863070539, "obj2": 0.6976634295848337}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ),Max( DDR,PN ) ) ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( ( ( RRSe - CS ) - Max( ( RRSe * DS ),DS ) ) - RRSe ) - Max( ( RRSe * DS ),Max( ( RRSe * DS ),DS ) ) )", "obj1": 0.10580912863070539, "obj2": 0.6976634295848337}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( DDR,PN ) ) - Max( ( AMS / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - Max( ( Max( ( Max( ( RRSe * DS ),RRSe ) * DS ),DS ) * DS ),DS ) )", "obj1": 0.0912863070539419, "obj2": 0.7720504369313168}, {"determining": "( ( FirstVNF_RAM_Server + Max( ( FirstVNF_Mem_Server / Max( DDR,PN ) ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + FirstVNF_CPU ) )", "choosing": "( ( ( ( MLU - CS ) - Max( ( ( ( RRSe - RRSe ) - RRSe ) * DS ),DS ) ) - RRSe ) - ( ( RRSe * DS ) + RMSe ) )", "obj1": 0.10580912863070539, "obj2": 0.6976634295848337}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + DDR ) )", "choosing": "( ( ( ( RRSe - CS ) - Max( ( RRSe * DS ),DS ) ) - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.10580912863070539, "obj2": 0.6976634295848337}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( CRS,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( ( ( RRSe - CS ) - Max( ( RRSe * DS ),DS ) ) + RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.10580912863070539, "obj2": 0.6976634295848337}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( Max( ( Max( ( ( RRSe - RRSe ) * DS ),RRSe ) * DS ),DS ) * DS ),DS ) )", "obj1": 0.0912863070539419, "obj2": 0.7720504369313168}, {"determining": "( ( FirstVNF_CPU_Server / Max( ( FirstVNF_Mem_Server / ACS ),( DDR * PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - ( ( DS * DS ) * ( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( MRS * ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( Max( ( Max( ( ( RRSe - RRSe ) * DS ),RRSe ) * ( RRSe * DS ) ),DS ) * DS ),DS ) )", "obj1": 0.08506224066390042, "obj2": 0.7757446043078238}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Min( DDR ,FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( ( RCSe - CS ) - Max( ( DS * DS ),MUM ) ) - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.1078838174273859, "obj2": 0.6968840706295909}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( ( ( RRSe - CS ) - Max( ( RRSe * DS ),DS ) ) - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.11203319502074689, "obj2": 0.6895722939264441}, {"determining": "( ( ( DDR * FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) * FirstVNF_CPU ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( Max( ( Max( ( RRSe * DS ),RRSe ) * DS ),( ( RRSe - RRSe ) - RRSe ) ) * DS ),DS ) )", "obj1": 0.0912863070539419, "obj2": 0.7720504369313168}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( Max( ( Max( ( RRSe * DS ),RRSe ) * DS ),( ( RRSe - RRSe ) - RRSe ) ) * DS ),DS ) )", "obj1": 0.0912863070539419, "obj2": 0.7720504369313168}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / Max( DDR,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_RAM ) ) ) ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + DDR ) )", "choosing": "( ( ( ( RRSe - CS ) - Max( ( ( ( RRSe - RRSe ) - RRSe ) * DS ),DS ) ) - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.10580912863070539, "obj2": 0.6976634295848337}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_RAM ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( ( ( RRSe - CS ) - Max( ( ( ( RRSe - RRSe ) - RRSe ) * DS ),DS ) ) - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.10580912863070539, "obj2": 0.6976634295848337}, {"determining": "( ( FirstVNF_RAM_Server + Max( ( FirstVNF_Mem_Server / Max( DDR,PN ) ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + FirstVNF_CPU ) )", "choosing": "( ( ( ( MLU - CS ) - Max( ( ( ( RRSe - RRSe ) - RRSe ) * DS ),DS ) ) - RRSe ) - ( ( RRSe * DS ) + RMSe ) )", "obj1": 0.15352697095435686, "obj2": 0.6695566333208199}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / Const ),Max( DDR,PN ) ) ) * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( Min( ( ( RRSe - CS ) - Max( ( RRSe * DS ),DS ) ) ,RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.10580912863070539, "obj2": 0.6976634295848337}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_Mem ) ) ) + ( ( CRS * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Min( ( RRSe * MUM ) ,DS ) )", "obj1": 0.08713692946058091, "obj2": 0.7732848837928242}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + ( AMS / DDR ) ) )", "choosing": "( ( ( ( RRSe - CS ) - Max( ( RRSe * DS ),DS ) ) - RRSe ) - Max( ( RRSe * MUR ),Max( ( RRSe * DS ),DS ) ) )", "obj1": 0.17427385892116182, "obj2": 0.6502835962879787}, {"determining": "( ( FirstVNF_RAM_Server / Max( Min( FirstVNF_Mem_Server ,ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( Max( ( Max( ( RRSe * RCSe ),RRSe ) * DS ),( ( RRSe - RRSe ) - RRSe ) ) * DS ),DS ) )", "obj1": 0.0912863070539419, "obj2": 0.7720504369313168}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( AMS,Max( DDR,PN ) ) ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( ( ( RRSe - CS ) - Max( ( RRSe * Max( ( DS * DS ),DS ) ),DS ) ) - RRSe ) - Max( ( RRSe * DS ),Max( ( RRSe * DS ),DS ) ) )", "obj1": 0.10580912863070539, "obj2": 0.6976634295848337}, {"determining": "( ( ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( FirstVNF_RAM_Server,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * ( Max( ( Max( ( RRSe * DS ),RCSe ) * DS ),DS ) * DS ) ),( RRSe - RRSe ) ) )", "obj1": 0.09336099585062241, "obj2": 0.767781226814007}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( Max( ( Max( ( RRSe * DS ),RRSe ) * DS ),DS ) * DS ),DS ) )", "obj1": 0.0912863070539419, "obj2": 0.7720504369313168}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_Mem_Server / ACS ) ,Max( MRS,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( DS * CS ) ) - RRSe )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_RAM_Server + Max( ( FirstVNF_Mem_Server / Max( DDR,PN ) ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + DDR ) )", "choosing": "( ( ( ( RRSe - CS ) - Max( ( RRSe * DS ),DS ) ) - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.10580912863070539, "obj2": 0.6976634295848337}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( ( ( RRSe - CS ) - Max( ( ( ( RRSe - RRSe ) - RRSe ) * DS ),DS ) ) - RRSe ) - ( ( RRSe * DS ) + DS ) )", "obj1": 0.0995850622406639, "obj2": 0.7071435138859475}, {"determining": "( ( FirstVNF_RAM_Server + Max( ( FirstVNF_Mem_Server / Max( DDR,PN ) ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + FirstVNF_CPU ) )", "choosing": "( ( ( ( MLU - CS ) - Max( ( ( ( RRSe - RRSe ) - RRSe ) * DS ),DS ) ) - RRSe ) - ( ( RRSe * DS ) + RMSe ) )", "obj1": 0.15352697095435686, "obj2": 0.6695566333208199}, {"determining": "( DDR + ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * MLU ),( RRSe - MUM ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( PN,PN ) ) ) + ( ( DDR * ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( ( DDR * FirstVNF_CPU ) + DDR ) ) ) ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - ( RRSe * DS ) ) - RRSe )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( Max( ( Max( ( RRSe * DS ),RRSe ) * DS ),DS ) * DS ),DS ) )", "obj1": 0.0912863070539419, "obj2": 0.7720504369313168}, {"determining": "( Max( DDR,PN ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( ( ( RRSe - CS ) - Max( ( RRSe * ( RRSe - CS ) ),DS ) ) - RRSe ) - Max( ( RRSe * DS ),Max( ( RRSe * DS ),DS ) ) )", "obj1": 0.10995850622406639, "obj2": 0.6953353740489083}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ),Max( DDR,PN ) ) ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( ( ( RRSe - CS ) - Max( ( ( ( RRSe - RRSe ) - RRSe ) * DS ),DS ) ) - RRSe ) - ( ( RRSe * DS ) + RMSe ) )", "obj1": 0.15352697095435686, "obj2": 0.6695566333208199}, {"determining": "( ( FirstVNF_RAM_Server + Max( ( FirstVNF_Mem_Server / Max( DDR,PN ) ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + FirstVNF_CPU ) )", "choosing": "( ( ( ( RRSe - CS ) - Max( ( RRSe * DS ),DS ) ) - RRSe ) - Max( ( RRSe * DS ),Max( ( RRSe * DS ),DS ) ) )", "obj1": 0.10580912863070539, "obj2": 0.6976634295848337}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,( FirstVNF_RAM_Server / Max( Max( ( FirstVNF_Mem_Server * ACS ),Max( DDR,PN ) ),Max( DDR,PN ) ) ) ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08298755186721991, "obj2": 0.7804649290575102}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) * FirstVNF_CPU ) )", "choosing": "( ( ( ( RRSe - CS ) - Max( ( RRSe * Max( ( DS * DS ),DS ) ),DS ) ) - RRSe ) - Max( ( RRSe * DS ),Max( ( RRSe * DS ),DS ) ) )", "obj1": 0.10580912863070539, "obj2": 0.6976634295848337}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - Const ) ) / ( FirstVNF_CPU_Server + ( Max( ( DDR / ACS ),Max( ( AMS / DDR ),PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( BR ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( ( ( RRSe - CS ) - Max( ( RRSe * DS ),DS ) ) - RRSe ) - Max( ( RRSe * MUR ),Max( ( RRSe * DS ),DS ) ) )", "obj1": 0.17427385892116182, "obj2": 0.6502835962879787}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + Min( RRS ,DDR ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( Max( ( DDR / ACS ),Max( DDR,PN ) ) / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( Max( ( Max( ( RRSe * DS ),RRSe ) * DS ),DS ) * DS ),DS ) )", "obj1": 0.0912863070539419, "obj2": 0.7720504369313168}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( Min( AMS ,DDR ),PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( RRSe - RMSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}], "22": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / Max( ( FirstVNF_Mem_Server / ACS ),( DDR * PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - ( ( DS * DS ) * ( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Min( DDR ,FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( ( RCSe - CS ) - Max( ( DS * DS ),MUM ) ) - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.1078838174273859, "obj2": 0.6968840706295909}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( ( ( RRSe - CS ) - Max( ( RRSe * DS ),DS ) ) - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.11203319502074689, "obj2": 0.6895722939264441}, {"determining": "( ( FirstVNF_RAM_Server + Max( ( FirstVNF_Mem_Server / Max( DDR,PN ) ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + FirstVNF_CPU ) )", "choosing": "( ( ( ( MLU - CS ) - Max( ( ( ( RRSe - RRSe ) - RRSe ) * DS ),DS ) ) - RRSe ) - ( ( RRSe * DS ) + RMSe ) )", "obj1": 0.15352697095435686, "obj2": 0.6695566333208199}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + ( AMS / DDR ) ) )", "choosing": "( ( ( ( RRSe - CS ) - Max( ( RRSe * DS ),DS ) ) - RRSe ) - Max( ( RRSe * MUR ),Max( ( RRSe * DS ),DS ) ) )", "obj1": 0.17427385892116182, "obj2": 0.6502835962879787}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_Mem_Server / ACS ) ,Max( MRS,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( DS * CS ) ) - RRSe )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( ( ( RRSe - CS ) - Max( ( ( ( RRSe - RRSe ) - RRSe ) * DS ),DS ) ) - RRSe ) - ( ( RRSe * DS ) + DS ) )", "obj1": 0.0995850622406639, "obj2": 0.7071435138859475}, {"determining": "( ( FirstVNF_RAM_Server + Max( ( FirstVNF_Mem_Server / Max( DDR,PN ) ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + FirstVNF_CPU ) )", "choosing": "( ( ( ( MLU - CS ) - Max( ( ( ( RRSe - RRSe ) - RRSe ) * DS ),DS ) ) - RRSe ) - ( ( RRSe * DS ) + RMSe ) )", "obj1": 0.15352697095435686, "obj2": 0.6695566333208199}, {"determining": "( DDR + ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * MLU ),( RRSe - MUM ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( PN,PN ) ) ) + ( ( DDR * ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( ( DDR * FirstVNF_CPU ) + DDR ) ) ) ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - ( RRSe * DS ) ) - RRSe )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( Max( DDR,PN ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( ( ( RRSe - CS ) - Max( ( RRSe * ( RRSe - CS ) ),DS ) ) - RRSe ) - Max( ( RRSe * DS ),Max( ( RRSe * DS ),DS ) ) )", "obj1": 0.10995850622406639, "obj2": 0.6953353740489083}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ),Max( DDR,PN ) ) ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( ( ( RRSe - CS ) - Max( ( ( ( RRSe - RRSe ) - RRSe ) * DS ),DS ) ) - RRSe ) - ( ( RRSe * DS ) + RMSe ) )", "obj1": 0.15352697095435686, "obj2": 0.6695566333208199}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - Const ) ) / ( FirstVNF_CPU_Server + ( Max( ( DDR / ACS ),Max( ( AMS / DDR ),PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( BR ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( ( ( RRSe - CS ) - Max( ( RRSe * DS ),DS ) ) - RRSe ) - Max( ( RRSe * MUR ),Max( ( RRSe * DS ),DS ) ) )", "obj1": 0.17427385892116182, "obj2": 0.6502835962879787}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + Min( RRS ,DDR ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( Min( AMS ,DDR ),PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( RRSe - RMSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( Max( ( FirstVNF_Mem_Server / Max( DDR,PN ) ),Max( DDR,PN ) ) * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( ( ( RRSe - CS ) - Max( ( RRSe * DS ),DS ) ) - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.12863070539419086, "obj2": 0.6728669261409738}, {"determining": "( ( FirstVNF_RAM_Server + Max( ( FirstVNF_Mem_Server / Max( DDR,PN ) ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RRSe - CS ) - Max( ( RRSe * DS ),DS ) ) - RRSe ) - ( RRSe * DS ) )", "obj1": 0.12655601659751037, "obj2": 0.6755920155253511}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( ( ( RRSe - CS ) - Max( ( RRSe * DS ),DS ) ) - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.11203319502074689, "obj2": 0.6895722939264441}, {"determining": "( Max( DDR,PN ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( ( ( RRSe - CS ) - Max( ( RRSe * ( RRSe - CS ) ),DS ) ) - RRSe ) - Max( ( RRSe * DS ),Max( ( RRSe * DS ),DS ) ) )", "obj1": 0.10995850622406639, "obj2": 0.6953353740489083}, {"determining": "( ( ( ( ( DDR * FirstVNF_CPU ) + FirstVNF_CPU ) / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ),Max( DDR,PN ) ) ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( ( ( RRSe - CS ) - Max( ( RRSe * RRSe ),DS ) ) - RRSe ) - Max( ( RRSe * DS ),Max( ( RRSe * DS ),DS ) ) )", "obj1": 0.17427385892116182, "obj2": 0.6502835962879787}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ),Max( DDR,PN ) ) ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( ( ( RRSe - CS ) - Max( ( ( ( RRSe - RRSe ) - RRSe ) * DS ),DS ) ) - RRSe ) - ( ( RRSe * DS ) + RMSe ) )", "obj1": 0.15352697095435686, "obj2": 0.6695566333208199}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( DDR * FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( ( RRSe - CS ) - Max( ( DS * DS ),DS ) ) - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.1078838174273859, "obj2": 0.6968840706295909}, {"determining": "( DDR + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( ( DDR * FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) * FirstVNF_CPU ) )", "choosing": "( ( ( ( RRSe - CS ) - Max( ( RRSe * DS ),DS ) ) - RRSe ) - Max( ( RRSe * DS ),Max( ( RRSe * DS ),DS ) ) )", "obj1": 0.11825726141078838, "obj2": 0.6868155446993935}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU * Const ) ) / ( FirstVNF_CPU_Server + ( Max( ( DDR / ACS ),Max( ( AMS / DDR ),PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( BR ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( ( ( RRSe - CS ) - Max( ( RRSe * Max( ( RRSe * DS ),DS ) ),DS ) ) - RRSe ) - Max( ( MLU * MUR ),Max( ( RRSe * DS ),DS ) ) )", "obj1": 0.17427385892116182, "obj2": 0.6502835962879787}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( ( ( RRSe - CS ) - Max( ( RRSe * DS ),DS ) ) - RRSe ) - Max( ( RRSe * MUR ),Max( ( RRSe * DS ),DS ) ) )", "obj1": 0.17427385892116182, "obj2": 0.6502835962879787}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ),Max( DDR,PN ) ) ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( ( ( RRSe - CS ) - Max( ( ( ( ( RRSe * DS ) - RRSe ) - RRSe ) * DS ),DS ) ) - RRSe ) - ( ( RRSe * DS ) + RMSe ) )", "obj1": 0.15352697095435686, "obj2": 0.6695566333208199}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),( DDR - PN ) ) / DDR ) ) )", "choosing": "( ( RRSe + RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( ( ( RRSe - CS ) - Max( ( RRSe * Max( ( DS * DS ),DS ) ),DS ) ) - RRSe ) - Max( ( RRSe * DS ),Max( ( RRSe * DS ),DS ) ) )", "obj1": 0.1078838174273859, "obj2": 0.6968840706295909}, {"determining": "Min( ( FirstVNF_RAM_Server + Max( ( FirstVNF_Mem_Server / Max( DDR,PN ) ),Max( DDR,PN ) ) ) ,( ( DDR * FirstVNF_CPU ) + FirstVNF_CPU ) )", "choosing": "( ( ( ( MLU - CS ) - Max( ( ( ( RRSe - RRSe ) - RRSe ) * DS ),DS ) ) - RRSe ) - ( ( RRSe * DS ) + RMSe ) )", "obj1": 0.17219917012448133, "obj2": 0.6545602167064536}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) + ( ( DDR * FirstVNF_Mem ) + ( ( MRS - ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( ( AMS / DDR ),PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( RRSe - RRSe ) - ( ( RRSe * DS ) * ( MLU - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_RAM_Server - FirstVNF_RAM ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * AMS ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe / ( ( Max( ( RRSe + DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR + FirstVNF_CPU ) + ( ARS / MRS ) ) ) )", "choosing": "( ( RRSe * Min( RRSe ,RRSe ) ) - RRSe )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) )", "choosing": "( ( ( ( RRSe - CS ) - Max( ( ( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) ) * DS ),DS ) ) - RRSe ) - ( ( RRSe * DS ) + DS ) )", "obj1": 0.0995850622406639, "obj2": 0.7071435138859475}, {"determining": "( ( PN / Max( Max( FirstVNF_Mem_Server,ACS ),Max( DDR,PN ) ) ) + Min( FirstVNF_RAM_Server ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * MUR ),( ( ( RRSe - CS ) - Max( ( ( ( RRSe - RRSe ) - RRSe ) * DS ),DS ) ) - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( ( ( RRSe - CS ) - Max( ( ( ( RRSe - RRSe ) - RRSe ) * DS ),DS ) ) - RRSe ) - ( ( RRSe * DS ) + DS ) )", "obj1": 0.0995850622406639, "obj2": 0.7071435138859475}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / AMS ) ) )", "choosing": "( ( RRSe - RRSe ) - ( ( RRSe * DS ) + ( MUC + RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( DDR + PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RRSe - MUC ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( Max( ( DDR / ACS ),Max( FirstVNF_RAM_Server,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( ( ( RRSe - CS ) - Max( ( RRSe * ( RRSe - Max( ( RRSe * DS ),RCSe ) ) ),DS ) ) - RRSe ) - Max( ( RRSe * DS ),Max( ( RRSe * DS ),DS ) ) )", "obj1": 0.10580912863070539, "obj2": 0.6975098467677951}, {"determining": "( Max( DDR,PN ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( ( ( RRSe - CS ) - Max( ( RRSe * ( RRSe - CS ) ),DS ) ) - RRSe ) - Max( ( RRSe * DS ),Max( ( RRSe * DS ),DS ) ) )", "obj1": 0.10995850622406639, "obj2": 0.6953353740489083}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ),Max( DDR,PN ) ) ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( ( ( RRSe - CS ) - Max( ( Max( ( RRSe * DS ),DS ) * DS ),DS ) ) - RRSe ) - ( ( RRSe * DS ) + RMSe ) )", "obj1": 0.15352697095435686, "obj2": 0.6695566333208199}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ),Max( DDR,MDR ) ) ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( Max( ( ( RRSe - CS ) - Max( ( ( ( RRSe - RRSe ) - RRSe ) * DS ),DS ) ),RRSe ) - ( ( RRSe * DS ) + RMSe ) )", "obj1": 0.15352697095435686, "obj2": 0.6695566333208199}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR + FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( DDR,PN ) ) - Max( ACS,Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( ( ( RRSe - CS ) - Max( ( RRSe * DS ),Max( ( ( RRSe - RRSe ) - RRSe ),DS ) ) ) - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.12863070539419086, "obj2": 0.6728669261409738}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( Max( DDR,ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( ( ( RRSe - RMSe ) - Max( ( RRSe * DS ),DS ) ) - RRSe ) - Max( ( RRSe * DS ),DS ) )", "obj1": 0.1078838174273859, "obj2": 0.6968840706295909}, {"determining": "( ( ( DDR / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ),Max( DDR,PN ) ) ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_Mem_Server ) ) / DDR ) ) )", "choosing": "( ( ( ( RRSe - CS ) * Max( ( RRSe * DS ),DS ) ) - RRSe ) - ( ( RRSe * DS ) + RMSe ) )", "obj1": 0.15352697095435686, "obj2": 0.6695566333208199}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ),Max( DDR,PN ) ) ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * CRS ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( ( ( RRSe - CS ) - Max( ( ( ( RRSe - RRSe ) - RRSe ) * DS ),DS ) ) - RRSe ) - ( ( RRSe * DS ) + RMSe ) )", "obj1": 0.15352697095435686, "obj2": 0.6695566333208199}], "23": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / Max( ( FirstVNF_Mem_Server / ACS ),( DDR * PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - ( ( DS * DS ) * ( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_Mem_Server / ACS ) ,Max( MRS,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( DS * CS ) ) - RRSe )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( DDR + ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * MLU ),( RRSe - MUM ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( PN,PN ) ) ) + ( ( DDR * ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( ( DDR * FirstVNF_CPU ) + DDR ) ) ) ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - ( RRSe * DS ) ) - RRSe )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + Min( RRS ,DDR ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( Min( AMS ,DDR ),PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( RRSe - RMSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( DDR + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),( DDR - PN ) ) / DDR ) ) )", "choosing": "( ( RRSe + RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) + ( ( DDR * FirstVNF_Mem ) + ( ( MRS - ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( ( AMS / DDR ),PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( RRSe - RRSe ) - ( ( RRSe * DS ) * ( MLU - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_RAM_Server - FirstVNF_RAM ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * AMS ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe / ( ( Max( ( RRSe + DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR + FirstVNF_CPU ) + ( ARS / MRS ) ) ) )", "choosing": "( ( RRSe * Min( RRSe ,RRSe ) ) - RRSe )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( PN / Max( Max( FirstVNF_Mem_Server,ACS ),Max( DDR,PN ) ) ) + Min( FirstVNF_RAM_Server ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * MUR ),( ( ( RRSe - CS ) - Max( ( ( ( RRSe - RRSe ) - RRSe ) * DS ),DS ) ) - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / AMS ) ) )", "choosing": "( ( RRSe - RRSe ) - ( ( RRSe * DS ) + ( MUC + RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( DDR + PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RRSe - MUC ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( ACS * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe - DS ),Max( ( RRSe * DS ),( RRSe - RRSe ) ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,( DDR - PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( Min( RRSe ,DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_RAM_Server / Max( Max( FirstVNF_Mem_Server,ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( Max( RRSe,DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_Mem_Server / ACS ) ,Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( ( ( RRSe - CS ) - Max( ( ( RRSe - ( DS * DS ) ) * DS ),DS ) ) - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( ( ( RRSe - CS ) - Max( ( ( ( RRSe - RRSe ) - RRSe ) * DS ),DS ) ) - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( ( AMS / DDR ),PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( DDR + ( ( FirstVNF_RAM_Server * ( FirstVNF_CPU * FirstVNF_CPU ) ) + ( AMS * DDR ) ) )", "choosing": "( ( RRSe - RMSe ) - Max( ( RRSe * DS ),( ( ( RRSe - MUM ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) ) / RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( DDR + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( DDR + ( ( DDR * FirstVNF_CPU ) + ( AMS / AMS ) ) )", "choosing": "( ( RRSe * RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),Max( ( RRSe * DS ),( RRSe - RRSe ) ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( Const * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * RCSe ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( ACS / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / DDR ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( Max( RRSe,RRSe ) - Max( ( RRSe * DS ),( DS - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RRSe - MUM ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) / ACS ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( ( ( RRSe - CS ) - Max( ( ( ( DS - RRSe ) - RRSe ) * DS ),DS ) ) - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( Max( ( DDR / ACS ),Max( FirstVNF_RAM_Server,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( ( ( RRSe - CS ) - Max( ( ( ( RRSe - RRSe ) - RRSe ) * DS ),DS ) ) - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( ( ( RRSe - CS ) - Max( ( ( ( RRSe - RRSe ) - RRSe ) * DS ),DS ) ) - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( ( AMS / DDR ),PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( ( ( RRSe - CS ) - Max( ( ( ( RRSe - RRSe ) - RRSe ) * DS ),DS ) ) - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( PN / Max( Max( FirstVNF_Mem_Server,ACS ),Max( DDR,PN ) ) ) + Min( FirstVNF_RAM_Server ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_CPU + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) + ( ( DDR * FirstVNF_Mem ) + ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( ( AMS / DDR ),PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( ( RRSe - RRSe ) - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * MUR ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Min( FirstVNF_Mem_Server ,ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( CS * DS ) ) - RRSe )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( DDR + ( ( DDR * ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( Max( ( RRSe * DS ),( RRSe - RRSe ) ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( DDR + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}], "24": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / Max( ( FirstVNF_Mem_Server / ACS ),( DDR * PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - ( ( DS * DS ) * ( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_Mem_Server / ACS ) ,Max( MRS,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( DS * CS ) ) - RRSe )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( DDR + ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * MLU ),( RRSe - MUM ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( PN,PN ) ) ) + ( ( DDR * ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( ( DDR * FirstVNF_CPU ) + DDR ) ) ) ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - ( RRSe * DS ) ) - RRSe )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + Min( RRS ,DDR ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( Min( AMS ,DDR ),PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( RRSe - RMSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( DDR + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),( DDR - PN ) ) / DDR ) ) )", "choosing": "( ( RRSe + RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) + ( ( DDR * FirstVNF_Mem ) + ( ( MRS - ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( ( AMS / DDR ),PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( RRSe - RRSe ) - ( ( RRSe * DS ) * ( MLU - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_RAM_Server - FirstVNF_RAM ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * AMS ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe / ( ( Max( ( RRSe + DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR + FirstVNF_CPU ) + ( ARS / MRS ) ) ) )", "choosing": "( ( RRSe * Min( RRSe ,RRSe ) ) - RRSe )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( PN / Max( Max( FirstVNF_Mem_Server,ACS ),Max( DDR,PN ) ) ) + Min( FirstVNF_RAM_Server ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * MUR ),( ( ( RRSe - CS ) - Max( ( ( ( RRSe - RRSe ) - RRSe ) * DS ),DS ) ) - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / AMS ) ) )", "choosing": "( ( RRSe - RRSe ) - ( ( RRSe * DS ) + ( MUC + RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( DDR + PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RRSe - MUC ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( ACS * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe - DS ),Max( ( RRSe * DS ),( RRSe - RRSe ) ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,( DDR - PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( Min( RRSe ,DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_RAM_Server / Max( Max( FirstVNF_Mem_Server,ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( Max( RRSe,DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_Mem_Server / ACS ) ,Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( ( ( RRSe - CS ) - Max( ( ( RRSe - ( DS * DS ) ) * DS ),DS ) ) - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( ( ( RRSe - CS ) - Max( ( ( ( RRSe - RRSe ) - RRSe ) * DS ),DS ) ) - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( ( AMS / DDR ),PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( DDR + ( ( FirstVNF_RAM_Server * ( FirstVNF_CPU * FirstVNF_CPU ) ) + ( AMS * DDR ) ) )", "choosing": "( ( RRSe - RMSe ) - Max( ( RRSe * DS ),( ( ( RRSe - MUM ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) ) / RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( DDR + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( DDR + ( ( DDR * FirstVNF_CPU ) + ( AMS / AMS ) ) )", "choosing": "( ( RRSe * RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),Max( ( RRSe * DS ),( RRSe - RRSe ) ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( Const * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * RCSe ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( ACS / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / DDR ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( Max( RRSe,RRSe ) - Max( ( RRSe * DS ),( DS - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RRSe - MUM ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) / ACS ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( ( ( RRSe - CS ) - Max( ( ( ( DS - RRSe ) - RRSe ) * DS ),DS ) ) - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( Max( ( DDR / ACS ),Max( FirstVNF_RAM_Server,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( ( ( RRSe - CS ) - Max( ( ( ( RRSe - RRSe ) - RRSe ) * DS ),DS ) ) - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( ( ( RRSe - CS ) - Max( ( ( ( RRSe - RRSe ) - RRSe ) * DS ),DS ) ) - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( ( AMS / DDR ),PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( ( ( RRSe - CS ) - Max( ( ( ( RRSe - RRSe ) - RRSe ) * DS ),DS ) ) - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( PN / Max( Max( FirstVNF_Mem_Server,ACS ),Max( DDR,PN ) ) ) + Min( FirstVNF_RAM_Server ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_CPU + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) + ( ( DDR * FirstVNF_Mem ) + ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( ( AMS / DDR ),PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( ( RRSe - RRSe ) - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * MUR ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Min( FirstVNF_Mem_Server ,ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( CS * DS ) ) - RRSe )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( DDR + ( ( DDR * ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( Max( ( RRSe * DS ),( RRSe - RRSe ) ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS * DDR ) ) ) )", "choosing": "( ( RRSe - MUM ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * Const ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RRSe - ( Max( Max( ( RRSe - Max( RRSe,DS ) ),RRSe ),DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( DDR,FirstVNF_CPU ) ) ) + ( ( Const * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * MUR ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}], "25": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / Max( ( FirstVNF_Mem_Server / ACS ),( DDR * PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - ( ( DS * DS ) * ( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_Mem_Server / ACS ) ,Max( MRS,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( DS * CS ) ) - RRSe )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( DDR + ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * MLU ),( RRSe - MUM ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( PN,PN ) ) ) + ( ( DDR * ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( ( DDR * FirstVNF_CPU ) + DDR ) ) ) ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - ( RRSe * DS ) ) - RRSe )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + Min( RRS ,DDR ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( Min( AMS ,DDR ),PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( RRSe - RMSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( DDR + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( DDR,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),( DDR - PN ) ) / DDR ) ) )", "choosing": "( ( RRSe + RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) + ( ( DDR * FirstVNF_Mem ) + ( ( MRS - ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( ( AMS / DDR ),PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( RRSe - RRSe ) - ( ( RRSe * DS ) * ( MLU - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_RAM_Server - FirstVNF_RAM ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * AMS ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe / ( ( Max( ( RRSe + DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR + FirstVNF_CPU ) + ( ARS / MRS ) ) ) )", "choosing": "( ( RRSe * Min( RRSe ,RRSe ) ) - RRSe )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( PN / Max( Max( FirstVNF_Mem_Server,ACS ),Max( DDR,PN ) ) ) + Min( FirstVNF_RAM_Server ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * MUR ),( ( ( RRSe - CS ) - Max( ( ( ( RRSe - RRSe ) - RRSe ) * DS ),DS ) ) - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / AMS ) ) )", "choosing": "( ( RRSe - RRSe ) - ( ( RRSe * DS ) + ( MUC + RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( DDR + PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RRSe - MUC ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( ACS * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe - DS ),Max( ( RRSe * DS ),( RRSe - RRSe ) ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,( DDR - PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( Min( RRSe ,DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_RAM_Server / Max( Max( FirstVNF_Mem_Server,ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( Max( RRSe,DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_Mem_Server / ACS ) ,Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( ( ( RRSe - CS ) - Max( ( ( RRSe - ( DS * DS ) ) * DS ),DS ) ) - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( ( ( RRSe - CS ) - Max( ( ( ( RRSe - RRSe ) - RRSe ) * DS ),DS ) ) - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( ( AMS / DDR ),PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( DDR + ( ( FirstVNF_RAM_Server * ( FirstVNF_CPU * FirstVNF_CPU ) ) + ( AMS * DDR ) ) )", "choosing": "( ( RRSe - RMSe ) - Max( ( RRSe * DS ),( ( ( RRSe - MUM ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) ) / RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( DDR + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( DDR + ( ( DDR * FirstVNF_CPU ) + ( AMS / AMS ) ) )", "choosing": "( ( RRSe * RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),Max( ( RRSe * DS ),( RRSe - RRSe ) ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( Const * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * RCSe ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( ACS / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / DDR ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( Max( RRSe,RRSe ) - Max( ( RRSe * DS ),( DS - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RRSe - MUM ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) / ACS ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( ( ( RRSe - CS ) - Max( ( ( ( DS - RRSe ) - RRSe ) * DS ),DS ) ) - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( Max( ( DDR / ACS ),Max( FirstVNF_RAM_Server,PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( ( ( RRSe - CS ) - Max( ( ( ( RRSe - RRSe ) - RRSe ) * DS ),DS ) ) - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( ( ( RRSe - CS ) - Max( ( ( ( RRSe - RRSe ) - RRSe ) * DS ),DS ) ) - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS * DDR ) ) ) )", "choosing": "( ( RRSe - MUM ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * Const ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RRSe - ( Max( Max( ( RRSe - Max( RRSe,DS ) ),RRSe ),DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( DDR,FirstVNF_CPU ) ) ) + ( ( Const * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * MUR ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( Max( RRS,ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( Min( RRSe ,DS ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( ACS,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,AMS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RRSe - MUR ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - DS ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server * Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR * AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( Max( RMSe,( RRSe - DS ) ),MUM ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_RAM_Server ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server / Max( ( ACS * ACS ),Max( DDR,FirstVNF_Mem_Server ) ) ) / ARS ) ) ) )", "choosing": "( ( MUC + ( ( Max( ( RMSe - ( RRSe * DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server + Max( ( FirstVNF_Mem_Server / ACS ),( DDR / FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe * ( ( Max( ( CS * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( Min( FirstVNF_RAM_Server ,Max( DDR,( DDR - PN ) ) ) + ( ( DDR * FirstVNF_CPU ) * ( Max( Min( FirstVNF_Mem_Server ,ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) - MLU ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( MDR * ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) / ARS ) ) ) )", "choosing": "( ( RRSe * ( ( Max( ( RRSe - ( RRSe * DS ) ),DS ) * DS ) * DS ) ) - MLU )", "obj1": 0.08298755186721991, "obj2": 0.766210344178605}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server + ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) / DDR ) ) / RRS ),Max( DDR,PN ) ) ) )", "choosing": "( ( MUM + ( ( Max( ( RRSe + ( RRSe * DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),Min( DDR ,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / AMS ),Max( DDR,PN ) ) / DDR ) ) / ACS ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - MUR ) - Max( ( ( RRSe * RRSe ) / RRSe ),( RRSe - RMSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) - Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS - ARS ) ) ) ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( ( ( RRSe * RRSe ) + RRSe ) * DS ) * DS ) ) - RCSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}], "26": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / Max( ( FirstVNF_Mem_Server / ACS ),( DDR * PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - ( ( DS * DS ) * ( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_Mem_Server / ACS ) ,Max( MRS,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( DS * CS ) ) - RRSe )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( DDR + ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( RRSe * MLU ),( RRSe - MUM ) ) )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( PN,PN ) ) ) + ( ( DDR * ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( ( DDR * FirstVNF_CPU ) + DDR ) ) ) ) + ( AMS / DDR ) ) )", "choosing": "( ( RRSe - ( RRSe * DS ) ) - RRSe )", "obj1": 0.0954356846473029, "obj2": 0.7654144363778773}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_RAM_Server - FirstVNF_RAM ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * AMS ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe / ( ( Max( ( RRSe + DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS * DDR ) ) ) )", "choosing": "( ( RRSe - MUM ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * Const ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RRSe - ( Max( Max( ( RRSe - Max( RRSe,DS ) ),RRSe ),DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( DDR,FirstVNF_CPU ) ) ) + ( ( Const * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * MUR ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( Max( RRS,ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( Min( RRSe ,DS ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( ACS,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,AMS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RRSe - MUR ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - DS ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server * Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR * AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( Max( RMSe,( RRSe - DS ) ),MUM ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_RAM_Server ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server / Max( ( ACS * ACS ),Max( DDR,FirstVNF_Mem_Server ) ) ) / ARS ) ) ) )", "choosing": "( ( MUC + ( ( Max( ( RMSe - ( RRSe * DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server + Max( ( FirstVNF_Mem_Server / ACS ),( DDR / FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe * ( ( Max( ( CS * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( Min( FirstVNF_RAM_Server ,Max( DDR,( DDR - PN ) ) ) + ( ( DDR * FirstVNF_CPU ) * ( Max( Min( FirstVNF_Mem_Server ,ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) - MLU ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( MDR * ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) / ARS ) ) ) )", "choosing": "( ( RRSe * ( ( Max( ( RRSe - ( RRSe * DS ) ),DS ) * DS ) * DS ) ) - MLU )", "obj1": 0.08298755186721991, "obj2": 0.766210344178605}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server + ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) / DDR ) ) / RRS ),Max( DDR,PN ) ) ) )", "choosing": "( ( MUM + ( ( Max( ( RRSe + ( RRSe * DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),Min( DDR ,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / AMS ),Max( DDR,PN ) ) / DDR ) ) / ACS ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - MUR ) - Max( ( ( RRSe * RRSe ) / RRSe ),( RRSe - RMSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) - Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS - ARS ) ) ) ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( ( ( RRSe * RRSe ) + RRSe ) * DS ) * DS ) ) - RCSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server - Max( ( ACS / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / DDR ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * DS ) * MUM ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( DDR - MDR ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / AMS ) ) )", "choosing": "( ( RRSe - ( ( ( ( RRSe - ( RRSe * DS ) ) / RRSe ) * RRSe ) * MUC ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,Max( DDR,PN ) ) ) + ( ( DDR * RRS ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_RAM_Server,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * Max( ( RRSe * DS ),( RRSe - CS ) ) ),RRSe ) * DS ) / DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / FirstVNF_CPU ),Max( DDR,PN ) ) ) + ( ( ACS * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - DS )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) * FirstVNF_CPU ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( Max( ( RRSe * RRSe ),RRSe ) * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ACS,FirstVNF_CPU ) ) ) * ( ( ( ACS / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) + ( AMS / ARS ) ) ) )", "choosing": "( ( MUC / RRSe ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RMSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( MRS / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( PN * ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( ( ( RRSe / RRSe ) * RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Min( DDR ,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( MUC * DS ) * DS ),( RCSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( ( PN / Max( ( ARS / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * RMSe ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( DDR / PN ) ) ) / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( Min( RRSe ,( RRSe * DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( Max( ( DDR * FirstVNF_CPU ),( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) / ACS ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Min( ( ( RRSe * DS ) * DS ) ,( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( Min( FirstVNF_RAM_Server ,Max( ( PN / ACS ),( DDR + PN ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) * ( AMS / MRS ) ) ) )", "choosing": "( ( MUM - ( ( Max( ( RRSe * MUR ),DS ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( DDR + PN ) ) ) + ( Max( DDR,FirstVNF_CPU ) + ( ARS / DDR ) ) ) )", "choosing": "( ( RRSe - ( ( Max( Max( MUR,DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server + ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe + DS ),RRSe ) * DS ) / DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( DDR / MRS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( Max( RRSe,RRSe ),RRSe ) + DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) + ( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) / ARS ) / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( Max( FirstVNF_Mem_Server,ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server + ACS ),Max( DDR,PN ) ) / DDR ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RCSe * RRSe ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( Max( FirstVNF_Mem_Server,ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( ACS / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( MUM * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_RAM_Server ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - DS ),CS ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( DDR + ( ( DDR * FirstVNF_CPU ) + ( AMS / FirstVNF_Mem ) ) )", "choosing": "( ( RRSe - ( ( ( ( RRSe - ( RRSe * DS ) ) * RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( DDR / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe + DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / PN ) ) ) )", "choosing": "( ( MUR * ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( Min( PN ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( Min( ( DS * DS ) ,DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( ( PN / Max( ( FirstVNF_Mem_Server / ( DDR * FirstVNF_CPU ) ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_RAM_Server,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RRSe - RRSe ) - ( ( ( RRSe * DS ) * DS ) + ( ( ( RRSe - RMSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) ) - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ARS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( Min( AMS ,DDR ),PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( Max( FirstVNF_Mem_Server,ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - MUR ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( Max( ( RRSe - ( RRSe * DS ) ),RRSe ) * DS ) * DS ),( ( ( RRSe - CS ) - Max( ( ( ( RRSe - RRSe ) - RRSe ) * DS ),DS ) ) - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( CRS / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,CRS ) ) ) + ( FirstVNF_RAM_Server - Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ARS ) ) ) )", "choosing": "( ( RRSe - ( ( ( ( RRSe - ( RMSe * DS ) ) * RRSe ) / DS ) - DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}], "27": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_RAM_Server - FirstVNF_RAM ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * AMS ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe / ( ( Max( ( RRSe + DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS * DDR ) ) ) )", "choosing": "( ( RRSe - MUM ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * Const ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RRSe - ( Max( Max( ( RRSe - Max( RRSe,DS ) ),RRSe ),DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( DDR,FirstVNF_CPU ) ) ) + ( ( Const * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * MUR ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( Max( RRS,ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( Min( RRSe ,DS ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( ACS,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,AMS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RRSe - MUR ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - DS ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server * Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR * AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( Max( RMSe,( RRSe - DS ) ),MUM ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_RAM_Server ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server / Max( ( ACS * ACS ),Max( DDR,FirstVNF_Mem_Server ) ) ) / ARS ) ) ) )", "choosing": "( ( MUC + ( ( Max( ( RMSe - ( RRSe * DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server + Max( ( FirstVNF_Mem_Server / ACS ),( DDR / FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe * ( ( Max( ( CS * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( Min( FirstVNF_RAM_Server ,Max( DDR,( DDR - PN ) ) ) + ( ( DDR * FirstVNF_CPU ) * ( Max( Min( FirstVNF_Mem_Server ,ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) - MLU ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server + ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) / DDR ) ) / RRS ),Max( DDR,PN ) ) ) )", "choosing": "( ( MUM + ( ( Max( ( RRSe + ( RRSe * DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),Min( DDR ,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / AMS ),Max( DDR,PN ) ) / DDR ) ) / ACS ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - MUR ) - Max( ( ( RRSe * RRSe ) / RRSe ),( RRSe - RMSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) - Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS - ARS ) ) ) ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( ( ( RRSe * RRSe ) + RRSe ) * DS ) * DS ) ) - RCSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server - Max( ( ACS / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / DDR ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * DS ) * MUM ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( DDR - MDR ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / AMS ) ) )", "choosing": "( ( RRSe - ( ( ( ( RRSe - ( RRSe * DS ) ) / RRSe ) * RRSe ) * MUC ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,Max( DDR,PN ) ) ) + ( ( DDR * RRS ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_RAM_Server,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * Max( ( RRSe * DS ),( RRSe - CS ) ) ),RRSe ) * DS ) / DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / FirstVNF_CPU ),Max( DDR,PN ) ) ) + ( ( ACS * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - DS )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) * FirstVNF_CPU ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( Max( ( RRSe * RRSe ),RRSe ) * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ACS,FirstVNF_CPU ) ) ) * ( ( ( ACS / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) + ( AMS / ARS ) ) ) )", "choosing": "( ( MUC / RRSe ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RMSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( MRS / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( PN * ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( ( ( RRSe / RRSe ) * RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Min( DDR ,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( MUC * DS ) * DS ),( RCSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( ( PN / Max( ( ARS / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * RMSe ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( DDR / PN ) ) ) / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( Min( RRSe ,( RRSe * DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( Max( ( DDR * FirstVNF_CPU ),( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) / ACS ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Min( ( ( RRSe * DS ) * DS ) ,( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( Min( FirstVNF_RAM_Server ,Max( ( PN / ACS ),( DDR + PN ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) * ( AMS / MRS ) ) ) )", "choosing": "( ( MUM - ( ( Max( ( RRSe * MUR ),DS ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( DDR + PN ) ) ) + ( Max( DDR,FirstVNF_CPU ) + ( ARS / DDR ) ) ) )", "choosing": "( ( RRSe - ( ( Max( Max( MUR,DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server + ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe + DS ),RRSe ) * DS ) / DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( DDR / MRS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( Max( RRSe,RRSe ),RRSe ) + DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) + ( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) / ARS ) / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( Max( FirstVNF_Mem_Server,ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server + ACS ),Max( DDR,PN ) ) / DDR ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RCSe * RRSe ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( Max( FirstVNF_Mem_Server,ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( ACS / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( MUM * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_RAM_Server ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - DS ),CS ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( DDR + ( ( DDR * FirstVNF_CPU ) + ( AMS / FirstVNF_Mem ) ) )", "choosing": "( ( RRSe - ( ( ( ( RRSe - ( RRSe * DS ) ) * RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( DDR / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe + DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / PN ) ) ) )", "choosing": "( ( MUR * ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( Min( PN ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( Min( ( DS * DS ) ,DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( ( PN / Max( ( FirstVNF_Mem_Server / ( DDR * FirstVNF_CPU ) ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_RAM_Server,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RRSe - RRSe ) - ( ( ( RRSe * DS ) * DS ) + ( ( ( RRSe - RMSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) ) - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ARS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( Min( AMS ,DDR ),PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( Max( FirstVNF_Mem_Server,ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - MUR ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( Max( ( RRSe - ( RRSe * DS ) ),RRSe ) * DS ) * DS ),( ( ( RRSe - CS ) - Max( ( ( ( RRSe - RRSe ) - RRSe ) * DS ),DS ) ) - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( CRS / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,CRS ) ) ) + ( FirstVNF_RAM_Server - Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ARS ) ) ) )", "choosing": "( ( RRSe - ( ( ( ( RRSe - ( RMSe * DS ) ) * RRSe ) / DS ) - DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( Min( PN ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + Max( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ),( ( DDR * FirstVNF_CPU ) + ( AMS / Const ) ) ) )", "choosing": "( ( CS - RRSe ) - Max( ( ( RRSe / DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_RAM_Server ) + ( Max( ( FirstVNF_Mem_Server / CRS ),Max( FirstVNF_Mem_Server,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - Min( ( Max( ( RRSe * DS ),RRSe ) - DS ) ,DS ) ) - RMSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_CPU_Server / Max( ( ACS / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / DDR ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * DS ) - DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( ACS / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * CRS ) + ( Max( ( FirstVNF_Mem_Server / DDR ),Max( BR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - MUC ) - Max( ( ( RRSe * DS ) * RRSe ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) + Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR + FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( MLU - ( ( Max( ( RRSe * DS ),RCSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}], "28": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_RAM_Server - FirstVNF_RAM ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * AMS ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe / ( ( Max( ( RRSe + DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS * DDR ) ) ) )", "choosing": "( ( RRSe - MUM ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * Const ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RRSe - ( Max( Max( ( RRSe - Max( RRSe,DS ) ),RRSe ),DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( DDR,FirstVNF_CPU ) ) ) + ( ( Const * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * MUR ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( Max( RRS,ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( Min( RRSe ,DS ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( ACS,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,AMS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RRSe - MUR ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - DS ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server * Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR * AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( Max( RMSe,( RRSe - DS ) ),MUM ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_RAM_Server ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server / Max( ( ACS * ACS ),Max( DDR,FirstVNF_Mem_Server ) ) ) / ARS ) ) ) )", "choosing": "( ( MUC + ( ( Max( ( RMSe - ( RRSe * DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server + Max( ( FirstVNF_Mem_Server / ACS ),( DDR / FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe * ( ( Max( ( CS * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( Min( FirstVNF_RAM_Server ,Max( DDR,( DDR - PN ) ) ) + ( ( DDR * FirstVNF_CPU ) * ( Max( Min( FirstVNF_Mem_Server ,ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) - MLU ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server + ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) / DDR ) ) / RRS ),Max( DDR,PN ) ) ) )", "choosing": "( ( MUM + ( ( Max( ( RRSe + ( RRSe * DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),Min( DDR ,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / AMS ),Max( DDR,PN ) ) / DDR ) ) / ACS ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - MUR ) - Max( ( ( RRSe * RRSe ) / RRSe ),( RRSe - RMSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) - Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS - ARS ) ) ) ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( ( ( RRSe * RRSe ) + RRSe ) * DS ) * DS ) ) - RCSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server - Max( ( ACS / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / DDR ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * DS ) * MUM ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( DDR - MDR ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / AMS ) ) )", "choosing": "( ( RRSe - ( ( ( ( RRSe - ( RRSe * DS ) ) / RRSe ) * RRSe ) * MUC ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,Max( DDR,PN ) ) ) + ( ( DDR * RRS ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_RAM_Server,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * Max( ( RRSe * DS ),( RRSe - CS ) ) ),RRSe ) * DS ) / DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / FirstVNF_CPU ),Max( DDR,PN ) ) ) + ( ( ACS * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - DS )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) * FirstVNF_CPU ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( Max( ( RRSe * RRSe ),RRSe ) * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ACS,FirstVNF_CPU ) ) ) * ( ( ( ACS / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) + ( AMS / ARS ) ) ) )", "choosing": "( ( MUC / RRSe ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RMSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( MRS / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( PN * ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( ( ( RRSe / RRSe ) * RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Min( DDR ,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( MUC * DS ) * DS ),( RCSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( ( PN / Max( ( ARS / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * RMSe ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( DDR / PN ) ) ) / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( Min( RRSe ,( RRSe * DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( Max( ( DDR * FirstVNF_CPU ),( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) / ACS ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Min( ( ( RRSe * DS ) * DS ) ,( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( Min( FirstVNF_RAM_Server ,Max( ( PN / ACS ),( DDR + PN ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) * ( AMS / MRS ) ) ) )", "choosing": "( ( MUM - ( ( Max( ( RRSe * MUR ),DS ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( DDR + PN ) ) ) + ( Max( DDR,FirstVNF_CPU ) + ( ARS / DDR ) ) ) )", "choosing": "( ( RRSe - ( ( Max( Max( MUR,DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server + ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe + DS ),RRSe ) * DS ) / DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( DDR / MRS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( Max( RRSe,RRSe ),RRSe ) + DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) + ( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) / ARS ) / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( Max( FirstVNF_Mem_Server,ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server + ACS ),Max( DDR,PN ) ) / DDR ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RCSe * RRSe ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( Max( FirstVNF_Mem_Server,ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( ACS / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( MUM * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_RAM_Server ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - DS ),CS ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( DDR + ( ( DDR * FirstVNF_CPU ) + ( AMS / FirstVNF_Mem ) ) )", "choosing": "( ( RRSe - ( ( ( ( RRSe - ( RRSe * DS ) ) * RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( DDR / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe + DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / PN ) ) ) )", "choosing": "( ( MUR * ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( Min( PN ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( Min( ( DS * DS ) ,DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( ( PN / Max( ( FirstVNF_Mem_Server / ( DDR * FirstVNF_CPU ) ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_RAM_Server,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RRSe - RRSe ) - ( ( ( RRSe * DS ) * DS ) + ( ( ( RRSe - RMSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) ) - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ARS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( Min( AMS ,DDR ),PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( Max( FirstVNF_Mem_Server,ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - MUR ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( Max( ( RRSe - ( RRSe * DS ) ),RRSe ) * DS ) * DS ),( ( ( RRSe - CS ) - Max( ( ( ( RRSe - RRSe ) - RRSe ) * DS ),DS ) ) - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( CRS / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,CRS ) ) ) + ( FirstVNF_RAM_Server - Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ARS ) ) ) )", "choosing": "( ( RRSe - ( ( ( ( RRSe - ( RMSe * DS ) ) * RRSe ) / DS ) - DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( Min( PN ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + Max( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ),( ( DDR * FirstVNF_CPU ) + ( AMS / Const ) ) ) )", "choosing": "( ( CS - RRSe ) - Max( ( ( RRSe / DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_RAM_Server ) + ( Max( ( FirstVNF_Mem_Server / CRS ),Max( FirstVNF_Mem_Server,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - Min( ( Max( ( RRSe * DS ),RRSe ) - DS ) ,DS ) ) - RMSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_CPU_Server / Max( ( ACS / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / DDR ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * DS ) - DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( ACS / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * CRS ) + ( Max( ( FirstVNF_Mem_Server / DDR ),Max( BR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - MUC ) - Max( ( ( RRSe * DS ) * RRSe ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) + Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR + FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( MLU - ( ( Max( ( RRSe * DS ),RCSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}], "29": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_RAM_Server - FirstVNF_RAM ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * AMS ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe / ( ( Max( ( RRSe + DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS * DDR ) ) ) )", "choosing": "( ( RRSe - MUM ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * Const ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RRSe - ( Max( Max( ( RRSe - Max( RRSe,DS ) ),RRSe ),DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( DDR,FirstVNF_CPU ) ) ) + ( ( Const * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * MUR ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( Max( RRS,ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( Min( RRSe ,DS ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( ACS,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,AMS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RRSe - MUR ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - DS ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server * Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR * AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( Max( RMSe,( RRSe - DS ) ),MUM ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_RAM_Server ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server / Max( ( ACS * ACS ),Max( DDR,FirstVNF_Mem_Server ) ) ) / ARS ) ) ) )", "choosing": "( ( MUC + ( ( Max( ( RMSe - ( RRSe * DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server + Max( ( FirstVNF_Mem_Server / ACS ),( DDR / FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe * ( ( Max( ( CS * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( Min( FirstVNF_RAM_Server ,Max( DDR,( DDR - PN ) ) ) + ( ( DDR * FirstVNF_CPU ) * ( Max( Min( FirstVNF_Mem_Server ,ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) - MLU ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server + ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) / DDR ) ) / RRS ),Max( DDR,PN ) ) ) )", "choosing": "( ( MUM + ( ( Max( ( RRSe + ( RRSe * DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),Min( DDR ,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / AMS ),Max( DDR,PN ) ) / DDR ) ) / ACS ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - MUR ) - Max( ( ( RRSe * RRSe ) / RRSe ),( RRSe - RMSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) - Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS - ARS ) ) ) ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( ( ( RRSe * RRSe ) + RRSe ) * DS ) * DS ) ) - RCSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server - Max( ( ACS / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / DDR ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * DS ) * MUM ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( DDR - MDR ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / AMS ) ) )", "choosing": "( ( RRSe - ( ( ( ( RRSe - ( RRSe * DS ) ) / RRSe ) * RRSe ) * MUC ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,Max( DDR,PN ) ) ) + ( ( DDR * RRS ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_RAM_Server,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * Max( ( RRSe * DS ),( RRSe - CS ) ) ),RRSe ) * DS ) / DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / FirstVNF_CPU ),Max( DDR,PN ) ) ) + ( ( ACS * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - DS )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) * FirstVNF_CPU ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( Max( ( RRSe * RRSe ),RRSe ) * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ACS,FirstVNF_CPU ) ) ) * ( ( ( ACS / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) + ( AMS / ARS ) ) ) )", "choosing": "( ( MUC / RRSe ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RMSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( MRS / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( PN * ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( ( ( RRSe / RRSe ) * RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Min( DDR ,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( MUC * DS ) * DS ),( RCSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( ( PN / Max( ( ARS / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * RMSe ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( DDR / PN ) ) ) / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( Min( RRSe ,( RRSe * DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( Max( ( DDR * FirstVNF_CPU ),( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) / ACS ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Min( ( ( RRSe * DS ) * DS ) ,( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( Min( FirstVNF_RAM_Server ,Max( ( PN / ACS ),( DDR + PN ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) * ( AMS / MRS ) ) ) )", "choosing": "( ( MUM - ( ( Max( ( RRSe * MUR ),DS ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( DDR + PN ) ) ) + ( Max( DDR,FirstVNF_CPU ) + ( ARS / DDR ) ) ) )", "choosing": "( ( RRSe - ( ( Max( Max( MUR,DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server + ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe + DS ),RRSe ) * DS ) / DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( DDR / MRS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( Max( RRSe,RRSe ),RRSe ) + DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) + ( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) / ARS ) / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( Max( FirstVNF_Mem_Server,ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server + ACS ),Max( DDR,PN ) ) / DDR ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RCSe * RRSe ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( Max( FirstVNF_Mem_Server,ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( ACS / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( MUM * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_RAM_Server ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - DS ),CS ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( DDR + ( ( DDR * FirstVNF_CPU ) + ( AMS / FirstVNF_Mem ) ) )", "choosing": "( ( RRSe - ( ( ( ( RRSe - ( RRSe * DS ) ) * RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( DDR / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe + DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / PN ) ) ) )", "choosing": "( ( MUR * ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( Min( PN ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( Min( ( DS * DS ) ,DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( ( PN / Max( ( FirstVNF_Mem_Server / ( DDR * FirstVNF_CPU ) ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_RAM_Server,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RRSe - RRSe ) - ( ( ( RRSe * DS ) * DS ) + ( ( ( RRSe - RMSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) ) - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ARS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( Min( AMS ,DDR ),PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( Max( FirstVNF_Mem_Server,ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - MUR ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( Max( ( RRSe - ( RRSe * DS ) ),RRSe ) * DS ) * DS ),( ( ( RRSe - CS ) - Max( ( ( ( RRSe - RRSe ) - RRSe ) * DS ),DS ) ) - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( CRS / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,CRS ) ) ) + ( FirstVNF_RAM_Server - Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ARS ) ) ) )", "choosing": "( ( RRSe - ( ( ( ( RRSe - ( RMSe * DS ) ) * RRSe ) / DS ) - DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( Min( PN ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + Max( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ),( ( DDR * FirstVNF_CPU ) + ( AMS / Const ) ) ) )", "choosing": "( ( CS - RRSe ) - Max( ( ( RRSe / DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_RAM_Server ) + ( Max( ( FirstVNF_Mem_Server / CRS ),Max( FirstVNF_Mem_Server,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - Min( ( Max( ( RRSe * DS ),RRSe ) - DS ) ,DS ) ) - RMSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_CPU_Server / Max( ( ACS / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / DDR ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * DS ) - DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( ACS / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * CRS ) + ( Max( ( FirstVNF_Mem_Server / DDR ),Max( BR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - MUC ) - Max( ( ( RRSe * DS ) * RRSe ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) + Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR + FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( MLU - ( ( Max( ( RRSe * DS ),RCSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}], "30": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_RAM_Server - FirstVNF_RAM ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * AMS ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe / ( ( Max( ( RRSe + DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS * DDR ) ) ) )", "choosing": "( ( RRSe - MUM ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * Const ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RRSe - ( Max( Max( ( RRSe - Max( RRSe,DS ) ),RRSe ),DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( DDR,FirstVNF_CPU ) ) ) + ( ( Const * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * MUR ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( Max( RRS,ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( Min( RRSe ,DS ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( ACS,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,AMS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RRSe - MUR ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - DS ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server * Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR * AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( Max( RMSe,( RRSe - DS ) ),MUM ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_RAM_Server ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server / Max( ( ACS * ACS ),Max( DDR,FirstVNF_Mem_Server ) ) ) / ARS ) ) ) )", "choosing": "( ( MUC + ( ( Max( ( RMSe - ( RRSe * DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server + Max( ( FirstVNF_Mem_Server / ACS ),( DDR / FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe * ( ( Max( ( CS * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( Min( FirstVNF_RAM_Server ,Max( DDR,( DDR - PN ) ) ) + ( ( DDR * FirstVNF_CPU ) * ( Max( Min( FirstVNF_Mem_Server ,ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) - MLU ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server + ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) / DDR ) ) / RRS ),Max( DDR,PN ) ) ) )", "choosing": "( ( MUM + ( ( Max( ( RRSe + ( RRSe * DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),Min( DDR ,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / AMS ),Max( DDR,PN ) ) / DDR ) ) / ACS ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - MUR ) - Max( ( ( RRSe * RRSe ) / RRSe ),( RRSe - RMSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) - Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS - ARS ) ) ) ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( ( ( RRSe * RRSe ) + RRSe ) * DS ) * DS ) ) - RCSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server - Max( ( ACS / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / DDR ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * DS ) * MUM ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( DDR - MDR ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / AMS ) ) )", "choosing": "( ( RRSe - ( ( ( ( RRSe - ( RRSe * DS ) ) / RRSe ) * RRSe ) * MUC ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,Max( DDR,PN ) ) ) + ( ( DDR * RRS ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_RAM_Server,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * Max( ( RRSe * DS ),( RRSe - CS ) ) ),RRSe ) * DS ) / DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / FirstVNF_CPU ),Max( DDR,PN ) ) ) + ( ( ACS * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - DS )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) * FirstVNF_CPU ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( Max( ( RRSe * RRSe ),RRSe ) * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ACS,FirstVNF_CPU ) ) ) * ( ( ( ACS / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) + ( AMS / ARS ) ) ) )", "choosing": "( ( MUC / RRSe ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RMSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( MRS / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( PN * ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( ( ( RRSe / RRSe ) * RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Min( DDR ,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( MUC * DS ) * DS ),( RCSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( ( PN / Max( ( ARS / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * RMSe ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( DDR / PN ) ) ) / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( Min( RRSe ,( RRSe * DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( Max( ( DDR * FirstVNF_CPU ),( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) / ACS ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Min( ( ( RRSe * DS ) * DS ) ,( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( Min( FirstVNF_RAM_Server ,Max( ( PN / ACS ),( DDR + PN ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) * ( AMS / MRS ) ) ) )", "choosing": "( ( MUM - ( ( Max( ( RRSe * MUR ),DS ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( DDR + PN ) ) ) + ( Max( DDR,FirstVNF_CPU ) + ( ARS / DDR ) ) ) )", "choosing": "( ( RRSe - ( ( Max( Max( MUR,DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server + ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe + DS ),RRSe ) * DS ) / DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( DDR / MRS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( Max( RRSe,RRSe ),RRSe ) + DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) + ( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) / ARS ) / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( Max( FirstVNF_Mem_Server,ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server + ACS ),Max( DDR,PN ) ) / DDR ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RCSe * RRSe ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( Max( FirstVNF_Mem_Server,ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( ACS / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( MUM * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_RAM_Server ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - DS ),CS ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( DDR + ( ( DDR * FirstVNF_CPU ) + ( AMS / FirstVNF_Mem ) ) )", "choosing": "( ( RRSe - ( ( ( ( RRSe - ( RRSe * DS ) ) * RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( DDR / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe + DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / PN ) ) ) )", "choosing": "( ( MUR * ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( Min( PN ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( Min( ( DS * DS ) ,DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( ( PN / Max( ( FirstVNF_Mem_Server / ( DDR * FirstVNF_CPU ) ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_RAM_Server,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RRSe - RRSe ) - ( ( ( RRSe * DS ) * DS ) + ( ( ( RRSe - RMSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) ) - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ARS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( Min( AMS ,DDR ),PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( Max( FirstVNF_Mem_Server,ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - MUR ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( Max( ( RRSe - ( RRSe * DS ) ),RRSe ) * DS ) * DS ),( ( ( RRSe - CS ) - Max( ( ( ( RRSe - RRSe ) - RRSe ) * DS ),DS ) ) - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( CRS / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,CRS ) ) ) + ( FirstVNF_RAM_Server - Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ARS ) ) ) )", "choosing": "( ( RRSe - ( ( ( ( RRSe - ( RMSe * DS ) ) * RRSe ) / DS ) - DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( Min( PN ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + Max( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ),( ( DDR * FirstVNF_CPU ) + ( AMS / Const ) ) ) )", "choosing": "( ( CS - RRSe ) - Max( ( ( RRSe / DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_RAM_Server ) + ( Max( ( FirstVNF_Mem_Server / CRS ),Max( FirstVNF_Mem_Server,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - Min( ( Max( ( RRSe * DS ),RRSe ) - DS ) ,DS ) ) - RMSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_CPU_Server / Max( ( ACS / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / DDR ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * DS ) - DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( ACS / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * CRS ) + ( Max( ( FirstVNF_Mem_Server / DDR ),Max( BR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - MUC ) - Max( ( ( RRSe * DS ) * RRSe ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) + Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR + FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( MLU - ( ( Max( ( RRSe * DS ),RCSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}], "31": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_RAM_Server - FirstVNF_RAM ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * AMS ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe / ( ( Max( ( RRSe + DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS * DDR ) ) ) )", "choosing": "( ( RRSe - MUM ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * Const ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RRSe - ( Max( Max( ( RRSe - Max( RRSe,DS ) ),RRSe ),DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( DDR,FirstVNF_CPU ) ) ) + ( ( Const * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * MUR ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( Max( RRS,ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( Min( RRSe ,DS ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( ACS,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,AMS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RRSe - MUR ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - DS ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server * Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR * AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( Max( RMSe,( RRSe - DS ) ),MUM ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_RAM_Server ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server / Max( ( ACS * ACS ),Max( DDR,FirstVNF_Mem_Server ) ) ) / ARS ) ) ) )", "choosing": "( ( MUC + ( ( Max( ( RMSe - ( RRSe * DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server + Max( ( FirstVNF_Mem_Server / ACS ),( DDR / FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe * ( ( Max( ( CS * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( Min( FirstVNF_RAM_Server ,Max( DDR,( DDR - PN ) ) ) + ( ( DDR * FirstVNF_CPU ) * ( Max( Min( FirstVNF_Mem_Server ,ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) - MLU ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server + ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) / DDR ) ) / RRS ),Max( DDR,PN ) ) ) )", "choosing": "( ( MUM + ( ( Max( ( RRSe + ( RRSe * DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),Min( DDR ,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / AMS ),Max( DDR,PN ) ) / DDR ) ) / ACS ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - MUR ) - Max( ( ( RRSe * RRSe ) / RRSe ),( RRSe - RMSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) - Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS - ARS ) ) ) ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( ( ( RRSe * RRSe ) + RRSe ) * DS ) * DS ) ) - RCSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server - Max( ( ACS / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / DDR ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * DS ) * MUM ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( DDR - MDR ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / AMS ) ) )", "choosing": "( ( RRSe - ( ( ( ( RRSe - ( RRSe * DS ) ) / RRSe ) * RRSe ) * MUC ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,Max( DDR,PN ) ) ) + ( ( DDR * RRS ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_RAM_Server,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * Max( ( RRSe * DS ),( RRSe - CS ) ) ),RRSe ) * DS ) / DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / FirstVNF_CPU ),Max( DDR,PN ) ) ) + ( ( ACS * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - DS )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) * FirstVNF_CPU ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( Max( ( RRSe * RRSe ),RRSe ) * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ACS,FirstVNF_CPU ) ) ) * ( ( ( ACS / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) + ( AMS / ARS ) ) ) )", "choosing": "( ( MUC / RRSe ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RMSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( MRS / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( PN * ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( ( ( RRSe / RRSe ) * RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Min( DDR ,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( MUC * DS ) * DS ),( RCSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( ( PN / Max( ( ARS / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * RMSe ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( DDR / PN ) ) ) / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( Min( RRSe ,( RRSe * DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( Max( ( DDR * FirstVNF_CPU ),( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) / ACS ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Min( ( ( RRSe * DS ) * DS ) ,( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( Min( FirstVNF_RAM_Server ,Max( ( PN / ACS ),( DDR + PN ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) * ( AMS / MRS ) ) ) )", "choosing": "( ( MUM - ( ( Max( ( RRSe * MUR ),DS ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( DDR + PN ) ) ) + ( Max( DDR,FirstVNF_CPU ) + ( ARS / DDR ) ) ) )", "choosing": "( ( RRSe - ( ( Max( Max( MUR,DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server + ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe + DS ),RRSe ) * DS ) / DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( DDR / MRS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( Max( RRSe,RRSe ),RRSe ) + DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) + ( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) / ARS ) / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( Max( FirstVNF_Mem_Server,ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server + ACS ),Max( DDR,PN ) ) / DDR ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RCSe * RRSe ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( Max( FirstVNF_Mem_Server,ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( ACS / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( MUM * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_RAM_Server ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - DS ),CS ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( DDR + ( ( DDR * FirstVNF_CPU ) + ( AMS / FirstVNF_Mem ) ) )", "choosing": "( ( RRSe - ( ( ( ( RRSe - ( RRSe * DS ) ) * RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( DDR / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe + DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / PN ) ) ) )", "choosing": "( ( MUR * ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( Min( PN ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( Min( ( DS * DS ) ,DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( ( PN / Max( ( FirstVNF_Mem_Server / ( DDR * FirstVNF_CPU ) ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_RAM_Server,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RRSe - RRSe ) - ( ( ( RRSe * DS ) * DS ) + ( ( ( RRSe - RMSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) ) - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ARS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( Min( AMS ,DDR ),PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( Max( FirstVNF_Mem_Server,ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - MUR ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( Max( ( RRSe - ( RRSe * DS ) ),RRSe ) * DS ) * DS ),( ( ( RRSe - CS ) - Max( ( ( ( RRSe - RRSe ) - RRSe ) * DS ),DS ) ) - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( CRS / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,CRS ) ) ) + ( FirstVNF_RAM_Server - Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ARS ) ) ) )", "choosing": "( ( RRSe - ( ( ( ( RRSe - ( RMSe * DS ) ) * RRSe ) / DS ) - DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( Min( PN ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + Max( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ),( ( DDR * FirstVNF_CPU ) + ( AMS / Const ) ) ) )", "choosing": "( ( CS - RRSe ) - Max( ( ( RRSe / DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_RAM_Server ) + ( Max( ( FirstVNF_Mem_Server / CRS ),Max( FirstVNF_Mem_Server,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - Min( ( Max( ( RRSe * DS ),RRSe ) - DS ) ,DS ) ) - RMSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_CPU_Server / Max( ( ACS / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / DDR ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * DS ) - DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( ACS / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * CRS ) + ( Max( ( FirstVNF_Mem_Server / DDR ),Max( BR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - MUC ) - Max( ( ( RRSe * DS ) * RRSe ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) + Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR + FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( MLU - ( ( Max( ( RRSe * DS ),RCSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}], "32": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_RAM_Server - FirstVNF_RAM ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * AMS ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe / ( ( Max( ( RRSe + DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS * DDR ) ) ) )", "choosing": "( ( RRSe - MUM ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * Const ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RRSe - ( Max( Max( ( RRSe - Max( RRSe,DS ) ),RRSe ),DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( DDR,FirstVNF_CPU ) ) ) + ( ( Const * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * MUR ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( Max( RRS,ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( Min( RRSe ,DS ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( ACS,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,AMS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RRSe - MUR ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - DS ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server * Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR * AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( Max( RMSe,( RRSe - DS ) ),MUM ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_RAM_Server ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server / Max( ( ACS * ACS ),Max( DDR,FirstVNF_Mem_Server ) ) ) / ARS ) ) ) )", "choosing": "( ( MUC + ( ( Max( ( RMSe - ( RRSe * DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server + Max( ( FirstVNF_Mem_Server / ACS ),( DDR / FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe * ( ( Max( ( CS * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( Min( FirstVNF_RAM_Server ,Max( DDR,( DDR - PN ) ) ) + ( ( DDR * FirstVNF_CPU ) * ( Max( Min( FirstVNF_Mem_Server ,ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) - MLU ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server + ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) / DDR ) ) / RRS ),Max( DDR,PN ) ) ) )", "choosing": "( ( MUM + ( ( Max( ( RRSe + ( RRSe * DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),Min( DDR ,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / AMS ),Max( DDR,PN ) ) / DDR ) ) / ACS ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - MUR ) - Max( ( ( RRSe * RRSe ) / RRSe ),( RRSe - RMSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) - Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS - ARS ) ) ) ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( ( ( RRSe * RRSe ) + RRSe ) * DS ) * DS ) ) - RCSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server - Max( ( ACS / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / DDR ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * DS ) * MUM ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( DDR - MDR ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / AMS ) ) )", "choosing": "( ( RRSe - ( ( ( ( RRSe - ( RRSe * DS ) ) / RRSe ) * RRSe ) * MUC ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,Max( DDR,PN ) ) ) + ( ( DDR * RRS ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_RAM_Server,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * Max( ( RRSe * DS ),( RRSe - CS ) ) ),RRSe ) * DS ) / DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / FirstVNF_CPU ),Max( DDR,PN ) ) ) + ( ( ACS * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - DS )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) * FirstVNF_CPU ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( Max( ( RRSe * RRSe ),RRSe ) * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ACS,FirstVNF_CPU ) ) ) * ( ( ( ACS / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) + ( AMS / ARS ) ) ) )", "choosing": "( ( MUC / RRSe ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RMSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( MRS / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( PN * ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( ( ( RRSe / RRSe ) * RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Min( DDR ,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( MUC * DS ) * DS ),( RCSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( ( PN / Max( ( ARS / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * RMSe ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( DDR / PN ) ) ) / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( Min( RRSe ,( RRSe * DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( Max( ( DDR * FirstVNF_CPU ),( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) / ACS ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Min( ( ( RRSe * DS ) * DS ) ,( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( Min( FirstVNF_RAM_Server ,Max( ( PN / ACS ),( DDR + PN ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) * ( AMS / MRS ) ) ) )", "choosing": "( ( MUM - ( ( Max( ( RRSe * MUR ),DS ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( DDR + PN ) ) ) + ( Max( DDR,FirstVNF_CPU ) + ( ARS / DDR ) ) ) )", "choosing": "( ( RRSe - ( ( Max( Max( MUR,DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server + ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe + DS ),RRSe ) * DS ) / DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( DDR / MRS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( Max( RRSe,RRSe ),RRSe ) + DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) + ( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) / ARS ) / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( Max( FirstVNF_Mem_Server,ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server + ACS ),Max( DDR,PN ) ) / DDR ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RCSe * RRSe ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( Max( FirstVNF_Mem_Server,ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( ACS / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( MUM * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_RAM_Server ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - DS ),CS ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( DDR + ( ( DDR * FirstVNF_CPU ) + ( AMS / FirstVNF_Mem ) ) )", "choosing": "( ( RRSe - ( ( ( ( RRSe - ( RRSe * DS ) ) * RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( DDR / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe + DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / PN ) ) ) )", "choosing": "( ( MUR * ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( Min( PN ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( Min( ( DS * DS ) ,DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( ( PN / Max( ( FirstVNF_Mem_Server / ( DDR * FirstVNF_CPU ) ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_RAM_Server,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RRSe - RRSe ) - ( ( ( RRSe * DS ) * DS ) + ( ( ( RRSe - RMSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) ) - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ARS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( Min( AMS ,DDR ),PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( Max( FirstVNF_Mem_Server,ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - MUR ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( Max( ( RRSe - ( RRSe * DS ) ),RRSe ) * DS ) * DS ),( ( ( RRSe - CS ) - Max( ( ( ( RRSe - RRSe ) - RRSe ) * DS ),DS ) ) - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( CRS / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,CRS ) ) ) + ( FirstVNF_RAM_Server - Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ARS ) ) ) )", "choosing": "( ( RRSe - ( ( ( ( RRSe - ( RMSe * DS ) ) * RRSe ) / DS ) - DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( Min( PN ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + Max( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ),( ( DDR * FirstVNF_CPU ) + ( AMS / Const ) ) ) )", "choosing": "( ( CS - RRSe ) - Max( ( ( RRSe / DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_RAM_Server ) + ( Max( ( FirstVNF_Mem_Server / CRS ),Max( FirstVNF_Mem_Server,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - Min( ( Max( ( RRSe * DS ),RRSe ) - DS ) ,DS ) ) - RMSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_CPU_Server / Max( ( ACS / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / DDR ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * DS ) - DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( ACS / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * CRS ) + ( Max( ( FirstVNF_Mem_Server / DDR ),Max( BR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - MUC ) - Max( ( ( RRSe * DS ) * RRSe ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) + Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR + FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( MLU - ( ( Max( ( RRSe * DS ),RCSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}], "33": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_RAM_Server - FirstVNF_RAM ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * AMS ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe / ( ( Max( ( RRSe + DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS * DDR ) ) ) )", "choosing": "( ( RRSe - MUM ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * Const ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RRSe - ( Max( Max( ( RRSe - Max( RRSe,DS ) ),RRSe ),DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( DDR,FirstVNF_CPU ) ) ) + ( ( Const * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * MUR ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( Max( RRS,ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( Min( RRSe ,DS ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( ACS,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,AMS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RRSe - MUR ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - DS ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server * Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR * AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( Max( RMSe,( RRSe - DS ) ),MUM ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_RAM_Server ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server / Max( ( ACS * ACS ),Max( DDR,FirstVNF_Mem_Server ) ) ) / ARS ) ) ) )", "choosing": "( ( MUC + ( ( Max( ( RMSe - ( RRSe * DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server + Max( ( FirstVNF_Mem_Server / ACS ),( DDR / FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe * ( ( Max( ( CS * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( Min( FirstVNF_RAM_Server ,Max( DDR,( DDR - PN ) ) ) + ( ( DDR * FirstVNF_CPU ) * ( Max( Min( FirstVNF_Mem_Server ,ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) - MLU ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server + ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) / DDR ) ) / RRS ),Max( DDR,PN ) ) ) )", "choosing": "( ( MUM + ( ( Max( ( RRSe + ( RRSe * DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),Min( DDR ,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / AMS ),Max( DDR,PN ) ) / DDR ) ) / ACS ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - MUR ) - Max( ( ( RRSe * RRSe ) / RRSe ),( RRSe - RMSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) - Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS - ARS ) ) ) ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( ( ( RRSe * RRSe ) + RRSe ) * DS ) * DS ) ) - RCSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server - Max( ( ACS / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / DDR ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * DS ) * MUM ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( DDR - MDR ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / AMS ) ) )", "choosing": "( ( RRSe - ( ( ( ( RRSe - ( RRSe * DS ) ) / RRSe ) * RRSe ) * MUC ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,Max( DDR,PN ) ) ) + ( ( DDR * RRS ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_RAM_Server,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * Max( ( RRSe * DS ),( RRSe - CS ) ) ),RRSe ) * DS ) / DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / FirstVNF_CPU ),Max( DDR,PN ) ) ) + ( ( ACS * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - DS )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) * FirstVNF_CPU ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( Max( ( RRSe * RRSe ),RRSe ) * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ACS,FirstVNF_CPU ) ) ) * ( ( ( ACS / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) + ( AMS / ARS ) ) ) )", "choosing": "( ( MUC / RRSe ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RMSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( MRS / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( PN * ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( ( ( RRSe / RRSe ) * RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Min( DDR ,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( MUC * DS ) * DS ),( RCSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( ( PN / Max( ( ARS / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * RMSe ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( DDR / PN ) ) ) / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( Min( RRSe ,( RRSe * DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( Max( ( DDR * FirstVNF_CPU ),( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) / ACS ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Min( ( ( RRSe * DS ) * DS ) ,( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( Min( FirstVNF_RAM_Server ,Max( ( PN / ACS ),( DDR + PN ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) * ( AMS / MRS ) ) ) )", "choosing": "( ( MUM - ( ( Max( ( RRSe * MUR ),DS ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( DDR + PN ) ) ) + ( Max( DDR,FirstVNF_CPU ) + ( ARS / DDR ) ) ) )", "choosing": "( ( RRSe - ( ( Max( Max( MUR,DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server + ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe + DS ),RRSe ) * DS ) / DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( DDR / MRS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( Max( RRSe,RRSe ),RRSe ) + DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) + ( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) / ARS ) / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( Max( FirstVNF_Mem_Server,ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server + ACS ),Max( DDR,PN ) ) / DDR ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RCSe * RRSe ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( Max( FirstVNF_Mem_Server,ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( ACS / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( MUM * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_RAM_Server ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - DS ),CS ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( DDR + ( ( DDR * FirstVNF_CPU ) + ( AMS / FirstVNF_Mem ) ) )", "choosing": "( ( RRSe - ( ( ( ( RRSe - ( RRSe * DS ) ) * RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( DDR / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe + DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / PN ) ) ) )", "choosing": "( ( MUR * ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( Min( PN ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( Min( ( DS * DS ) ,DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( ( PN / Max( ( FirstVNF_Mem_Server / ( DDR * FirstVNF_CPU ) ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_RAM_Server,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RRSe - RRSe ) - ( ( ( RRSe * DS ) * DS ) + ( ( ( RRSe - RMSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) ) - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ARS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( Min( AMS ,DDR ),PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( Max( FirstVNF_Mem_Server,ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - MUR ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( Max( ( RRSe - ( RRSe * DS ) ),RRSe ) * DS ) * DS ),( ( ( RRSe - CS ) - Max( ( ( ( RRSe - RRSe ) - RRSe ) * DS ),DS ) ) - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( CRS / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,CRS ) ) ) + ( FirstVNF_RAM_Server - Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ARS ) ) ) )", "choosing": "( ( RRSe - ( ( ( ( RRSe - ( RMSe * DS ) ) * RRSe ) / DS ) - DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( Min( PN ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + Max( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ),( ( DDR * FirstVNF_CPU ) + ( AMS / Const ) ) ) )", "choosing": "( ( CS - RRSe ) - Max( ( ( RRSe / DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_RAM_Server ) + ( Max( ( FirstVNF_Mem_Server / CRS ),Max( FirstVNF_Mem_Server,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - Min( ( Max( ( RRSe * DS ),RRSe ) - DS ) ,DS ) ) - RMSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_CPU_Server / Max( ( ACS / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / DDR ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * DS ) - DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( ACS / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * CRS ) + ( Max( ( FirstVNF_Mem_Server / DDR ),Max( BR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - MUC ) - Max( ( ( RRSe * DS ) * RRSe ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) + Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR + FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( MLU - ( ( Max( ( RRSe * DS ),RCSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}], "34": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_RAM_Server - FirstVNF_RAM ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * AMS ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe / ( ( Max( ( RRSe + DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS * DDR ) ) ) )", "choosing": "( ( RRSe - MUM ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * Const ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RRSe - ( Max( Max( ( RRSe - Max( RRSe,DS ) ),RRSe ),DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( DDR,FirstVNF_CPU ) ) ) + ( ( Const * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * MUR ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( Max( RRS,ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( Min( RRSe ,DS ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( ACS,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,AMS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RRSe - MUR ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - DS ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server * Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR * AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( Max( RMSe,( RRSe - DS ) ),MUM ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_RAM_Server ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server / Max( ( ACS * ACS ),Max( DDR,FirstVNF_Mem_Server ) ) ) / ARS ) ) ) )", "choosing": "( ( MUC + ( ( Max( ( RMSe - ( RRSe * DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server + Max( ( FirstVNF_Mem_Server / ACS ),( DDR / FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe * ( ( Max( ( CS * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( Min( FirstVNF_RAM_Server ,Max( DDR,( DDR - PN ) ) ) + ( ( DDR * FirstVNF_CPU ) * ( Max( Min( FirstVNF_Mem_Server ,ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) - MLU ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server + ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) / DDR ) ) / RRS ),Max( DDR,PN ) ) ) )", "choosing": "( ( MUM + ( ( Max( ( RRSe + ( RRSe * DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),Min( DDR ,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / AMS ),Max( DDR,PN ) ) / DDR ) ) / ACS ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - MUR ) - Max( ( ( RRSe * RRSe ) / RRSe ),( RRSe - RMSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) - Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS - ARS ) ) ) ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( ( ( RRSe * RRSe ) + RRSe ) * DS ) * DS ) ) - RCSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server - Max( ( ACS / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / DDR ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * DS ) * MUM ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( DDR - MDR ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / AMS ) ) )", "choosing": "( ( RRSe - ( ( ( ( RRSe - ( RRSe * DS ) ) / RRSe ) * RRSe ) * MUC ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,Max( DDR,PN ) ) ) + ( ( DDR * RRS ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_RAM_Server,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * Max( ( RRSe * DS ),( RRSe - CS ) ) ),RRSe ) * DS ) / DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / FirstVNF_CPU ),Max( DDR,PN ) ) ) + ( ( ACS * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - DS )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) * FirstVNF_CPU ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( Max( ( RRSe * RRSe ),RRSe ) * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ACS,FirstVNF_CPU ) ) ) * ( ( ( ACS / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) + ( AMS / ARS ) ) ) )", "choosing": "( ( MUC / RRSe ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RMSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( MRS / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( PN * ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( ( ( RRSe / RRSe ) * RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Min( DDR ,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( MUC * DS ) * DS ),( RCSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( ( PN / Max( ( ARS / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * RMSe ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( DDR / PN ) ) ) / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( Min( RRSe ,( RRSe * DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( Max( ( DDR * FirstVNF_CPU ),( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) / ACS ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Min( ( ( RRSe * DS ) * DS ) ,( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( Min( FirstVNF_RAM_Server ,Max( ( PN / ACS ),( DDR + PN ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) * ( AMS / MRS ) ) ) )", "choosing": "( ( MUM - ( ( Max( ( RRSe * MUR ),DS ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( DDR + PN ) ) ) + ( Max( DDR,FirstVNF_CPU ) + ( ARS / DDR ) ) ) )", "choosing": "( ( RRSe - ( ( Max( Max( MUR,DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server + ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe + DS ),RRSe ) * DS ) / DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( DDR / MRS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( Max( RRSe,RRSe ),RRSe ) + DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) + ( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) / ARS ) / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( Max( FirstVNF_Mem_Server,ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server + ACS ),Max( DDR,PN ) ) / DDR ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RCSe * RRSe ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( Max( FirstVNF_Mem_Server,ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( ACS / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( MUM * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_RAM_Server ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - DS ),CS ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( DDR + ( ( DDR * FirstVNF_CPU ) + ( AMS / FirstVNF_Mem ) ) )", "choosing": "( ( RRSe - ( ( ( ( RRSe - ( RRSe * DS ) ) * RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( DDR / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe + DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / PN ) ) ) )", "choosing": "( ( MUR * ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( Min( PN ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( Min( ( DS * DS ) ,DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( ( PN / Max( ( FirstVNF_Mem_Server / ( DDR * FirstVNF_CPU ) ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_RAM_Server,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RRSe - RRSe ) - ( ( ( RRSe * DS ) * DS ) + ( ( ( RRSe - RMSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) ) - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ARS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( Min( AMS ,DDR ),PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( Max( FirstVNF_Mem_Server,ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - MUR ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( Max( ( RRSe - ( RRSe * DS ) ),RRSe ) * DS ) * DS ),( ( ( RRSe - CS ) - Max( ( ( ( RRSe - RRSe ) - RRSe ) * DS ),DS ) ) - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( CRS / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,CRS ) ) ) + ( FirstVNF_RAM_Server - Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ARS ) ) ) )", "choosing": "( ( RRSe - ( ( ( ( RRSe - ( RMSe * DS ) ) * RRSe ) / DS ) - DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( Min( PN ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + Max( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ),( ( DDR * FirstVNF_CPU ) + ( AMS / Const ) ) ) )", "choosing": "( ( CS - RRSe ) - Max( ( ( RRSe / DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_RAM_Server ) + ( Max( ( FirstVNF_Mem_Server / CRS ),Max( FirstVNF_Mem_Server,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - Min( ( Max( ( RRSe * DS ),RRSe ) - DS ) ,DS ) ) - RMSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_CPU_Server / Max( ( ACS / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / DDR ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * DS ) - DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( ACS / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * CRS ) + ( Max( ( FirstVNF_Mem_Server / DDR ),Max( BR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - MUC ) - Max( ( ( RRSe * DS ) * RRSe ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) + Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR + FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( MLU - ( ( Max( ( RRSe * DS ),RCSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}], "35": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_RAM_Server - FirstVNF_RAM ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * AMS ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe / ( ( Max( ( RRSe + DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS * DDR ) ) ) )", "choosing": "( ( RRSe - MUM ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * Const ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RRSe - ( Max( Max( ( RRSe - Max( RRSe,DS ) ),RRSe ),DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( DDR,FirstVNF_CPU ) ) ) + ( ( Const * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * MUR ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( Max( RRS,ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( Min( RRSe ,DS ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( ACS,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,AMS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RRSe - MUR ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - DS ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server * Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR * AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( Max( RMSe,( RRSe - DS ) ),MUM ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_RAM_Server ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server / Max( ( ACS * ACS ),Max( DDR,FirstVNF_Mem_Server ) ) ) / ARS ) ) ) )", "choosing": "( ( MUC + ( ( Max( ( RMSe - ( RRSe * DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server + Max( ( FirstVNF_Mem_Server / ACS ),( DDR / FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe * ( ( Max( ( CS * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( Min( FirstVNF_RAM_Server ,Max( DDR,( DDR - PN ) ) ) + ( ( DDR * FirstVNF_CPU ) * ( Max( Min( FirstVNF_Mem_Server ,ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) - MLU ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server + ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) / DDR ) ) / RRS ),Max( DDR,PN ) ) ) )", "choosing": "( ( MUM + ( ( Max( ( RRSe + ( RRSe * DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),Min( DDR ,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / AMS ),Max( DDR,PN ) ) / DDR ) ) / ACS ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - MUR ) - Max( ( ( RRSe * RRSe ) / RRSe ),( RRSe - RMSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) - Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS - ARS ) ) ) ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( ( ( RRSe * RRSe ) + RRSe ) * DS ) * DS ) ) - RCSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server - Max( ( ACS / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / DDR ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * DS ) * MUM ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( DDR - MDR ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / AMS ) ) )", "choosing": "( ( RRSe - ( ( ( ( RRSe - ( RRSe * DS ) ) / RRSe ) * RRSe ) * MUC ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,Max( DDR,PN ) ) ) + ( ( DDR * RRS ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_RAM_Server,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * Max( ( RRSe * DS ),( RRSe - CS ) ) ),RRSe ) * DS ) / DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / FirstVNF_CPU ),Max( DDR,PN ) ) ) + ( ( ACS * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - DS )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) * FirstVNF_CPU ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( Max( ( RRSe * RRSe ),RRSe ) * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ACS,FirstVNF_CPU ) ) ) * ( ( ( ACS / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) + ( AMS / ARS ) ) ) )", "choosing": "( ( MUC / RRSe ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RMSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( MRS / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( PN * ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( ( ( RRSe / RRSe ) * RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Min( DDR ,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( MUC * DS ) * DS ),( RCSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( ( PN / Max( ( ARS / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * RMSe ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( DDR / PN ) ) ) / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( Min( RRSe ,( RRSe * DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( Max( ( DDR * FirstVNF_CPU ),( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) / ACS ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Min( ( ( RRSe * DS ) * DS ) ,( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( Min( FirstVNF_RAM_Server ,Max( ( PN / ACS ),( DDR + PN ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) * ( AMS / MRS ) ) ) )", "choosing": "( ( MUM - ( ( Max( ( RRSe * MUR ),DS ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( DDR + PN ) ) ) + ( Max( DDR,FirstVNF_CPU ) + ( ARS / DDR ) ) ) )", "choosing": "( ( RRSe - ( ( Max( Max( MUR,DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server + ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe + DS ),RRSe ) * DS ) / DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( DDR / MRS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( Max( RRSe,RRSe ),RRSe ) + DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) + ( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) / ARS ) / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( Max( FirstVNF_Mem_Server,ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server + ACS ),Max( DDR,PN ) ) / DDR ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RCSe * RRSe ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( Max( FirstVNF_Mem_Server,ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( ACS / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( MUM * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( Max( FirstVNF_RAM_Server,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_RAM_Server ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - DS ),CS ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( DDR + ( ( DDR * FirstVNF_CPU ) + ( AMS / FirstVNF_Mem ) ) )", "choosing": "( ( RRSe - ( ( ( ( RRSe - ( RRSe * DS ) ) * RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( DDR / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe + DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / PN ) ) ) )", "choosing": "( ( MUR * ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( Min( PN ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( Min( ( DS * DS ) ,DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( ( PN / Max( ( FirstVNF_Mem_Server / ( DDR * FirstVNF_CPU ) ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_RAM_Server,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / DDR ) ) ) )", "choosing": "( ( RRSe - RRSe ) - ( ( ( RRSe * DS ) * DS ) + ( ( ( RRSe - RMSe ) - Max( ( RRSe * DS ),( RRSe - RRSe ) ) ) - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ARS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( MRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_CPU + ( Max( ( DDR / ACS ),Max( Min( AMS ,DDR ),PN ) ) - Max( ( FirstVNF_CPU / FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( Max( FirstVNF_Mem_Server,ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - MUR ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( Max( ( RRSe - ( RRSe * DS ) ),RRSe ) * DS ) * DS ),( ( ( RRSe - CS ) - Max( ( ( ( RRSe - RRSe ) - RRSe ) * DS ),DS ) ) - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( CRS / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,CRS ) ) ) + ( FirstVNF_RAM_Server - Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ARS ) ) ) )", "choosing": "( ( RRSe - ( ( ( ( RRSe - ( RMSe * DS ) ) * RRSe ) / DS ) - DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( Min( PN ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + Max( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ),( ( DDR * FirstVNF_CPU ) + ( AMS / Const ) ) ) )", "choosing": "( ( CS - RRSe ) - Max( ( ( RRSe / DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_RAM_Server ) + ( Max( ( FirstVNF_Mem_Server / CRS ),Max( FirstVNF_Mem_Server,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - Min( ( Max( ( RRSe * DS ),RRSe ) - DS ) ,DS ) ) - RMSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_CPU_Server / Max( ( ACS / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / DDR ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * DS ) - DS ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( ACS / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * CRS ) + ( Max( ( FirstVNF_Mem_Server / DDR ),Max( BR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - MUC ) - Max( ( ( RRSe * DS ) * RRSe ),( RRSe - RRSe ) ) )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) + Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR + FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( MLU - ( ( Max( ( RRSe * DS ),RCSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7669966041556437}], "36": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server / Max( ( ACS / ACS ),Max( DDR,PN ) ) ) / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * RRSe ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + Min( ( DDR * FirstVNF_CPU ) ,( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( Max( Max( ( RRSe * DS ),RRSe ),DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_CPU_Server / Max( ( ACS / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / DDR ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * DS ) - DS ),( RRSe - RRSe ) ) )", "obj1": 0.12240663900414937, "obj2": 0.7132667685850573}, {"determining": "( ( FirstVNF_CPU_Server / Max( ( ACS / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / DDR ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * DS ) - DS ),( RRSe - RRSe ) ) )", "obj1": 0.12240663900414937, "obj2": 0.7132667685850573}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ACS / FirstVNF_Mem_Server ) )", "choosing": "Max( Max( MLU,RMSe ),( MLU / MLU ) )", "obj1": 0.3132780082987552, "obj2": 0.5581157511906953}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * RRSe ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_CPU_Server / Max( ( ACS / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / DDR ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * DS ) - DS ),( RRSe - RRSe ) ) )", "obj1": 0.12240663900414937, "obj2": 0.7132667685850573}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( DDR / PN ) ) ) / ARS ) - ( ACS / FirstVNF_Mem_Server ) )", "choosing": "Max( Max( MLU,RMSe ),( MLU / ( Max( Min( RRSe ,( RRSe * DS ) ),RRSe ) * DS ) ) )", "obj1": 0.8672199170124482, "obj2": 0.057056791433265516}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ACS / FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - ( ( Max( Min( RRSe ,( RRSe * DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.5373443983402489, "obj2": 0.373610391101024}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_RAM_Server ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server / Max( ( ACS * ACS ),Max( DDR,FirstVNF_Mem_Server ) ) ) / ARS ) ) ) )", "choosing": "( ( MLU - RRSe ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.17219917012448133, "obj2": 0.6745290320173924}, {"determining": "( ( CRS / Max( FirstVNF_Mem_Server,Max( DDR,CRS ) ) ) + ( FirstVNF_RAM_Server - Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ARS ) ) ) )", "choosing": "( ( RRSe - ( ( ( Max( ( RMSe - ( RRSe * DS ) ),RRSe ) * RRSe ) / DS ) - DS ) ) - RRSe )", "obj1": 0.45435684647302904, "obj2": 0.5015772042369532}, {"determining": "( ( CRS / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,CRS ) ) ) + ( FirstVNF_RAM_Server - Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ARS ) ) ) )", "choosing": "( ( RRSe - ( ( ( ( RRSe - ( RMSe * DS ) ) * RRSe ) / DS ) - DS ) ) - RRSe )", "obj1": 0.483402489626556, "obj2": 0.4811549957611048}, {"determining": "( Max( ARS,RRS ) * ( ( ( MDR * FirstVNF_RAM_Server ) / RRS ) * Const ) )", "choosing": "Max( Min( Min( ( Min( ( ( ( RMSe * MUC ) + ( DS - DS ) ) - ( Max( DS,CS ) + Min( RCSe ,MUR ) ) ) ,( ( Max( CS,RCSe ) - ( MUR - MUR ) ) * ( Min( MUM ,CS ) / Max( RRSe,MUR ) ) ) ) - ( Min( Max( Min( RRSe ,RRSe ),( CS - MUR ) ) ,( ( CS * RMSe ) / ( DS * RRSe ) ) ) / ( Min( ( MUR + RMSe ) ,( MUC - DS ) ) * Max( Min( CS ,MUC ),Min( RRSe ,DS ) ) ) ) ) ,Min( Max( ( Min( Max( MUR,MUR ) ,( MUC * RCSe ) ) - ( ( MUR * RCSe ) + Min( MUM ,MUR ) ) ),( ( ( RMSe - RCSe ) - Min( DS ,CS ) ) * ( Min( MUC ,MUM ) / Min( MUC ,MUM ) ) ) ) ,( ( ( ( RCSe - RMSe ) - ( MUM - MUM ) ) / ( ( RMSe / RMSe ) / ( MUC + RCSe ) ) ) * ( ( ( MLU * RRSe ) + ( RMSe / MUM ) ) / ( ( RMSe + MUR ) - ( RMSe / RMSe ) ) ) ) ) ) ,Min( Max( ( ( ( ( RRSe * RMSe ) / ( MUR * CS ) ) * ( Max( RMSe,MUM ) / ( MUR - RRSe ) ) ) * ( ( ( CS / DS ) * ( DS + DS ) ) / ( Max( MUM,MLU ) - ( RCSe + MUM ) ) ) ),Max( ( ( Max( MUM,MUR ) * ( MUM - RCSe ) ) + ( ( RCSe - DS ) + ( RMSe + CS ) ) ),( ( ( DS + MUR ) / ( MUC - MUR ) ) / Max( ( DS + RMSe ),( RMSe - MUR ) ) ) ) ) ,( Max( ( Max( ( MLU / RRSe ),( MUR - MUR ) ) * Min( ( RCSe - MLU ) ,( RRSe / MLU ) ) ),Min( ( ( MLU * RMSe ) - ( MLU + RMSe ) ) ,( ( MUR * CS ) + ( MUC + DS ) ) ) ) - ( Max( ( Max( DS,MLU ) + ( RMSe * MUC ) ),Max( ( RMSe + DS ),Min( RRSe ,MUM ) ) ) / Max( Max( ( RCSe + MUR ),( MUC - MLU ) ),( ( MUM + MUM ) * Min( DS ,MUR ) ) ) ) ) ) ),Max( ( ( Max( Max( ( ( DS / MUM ) - Max( MUC,MUC ) ),( Max( DS,RRSe ) / ( RCSe / RRSe ) ) ),Min( ( ( MUM + RMSe ) * ( MUR + RMSe ) ) ,Max( Min( RCSe ,RCSe ),( MUC / MUC ) ) ) ) * ( Max( ( ( RCSe - CS ) + ( RRSe + RRSe ) ),Min( ( MLU + RRSe ) ,( MLU * MUR ) ) ) + ( ( ( RCSe / MUM ) + ( MLU * CS ) ) + ( ( RCSe * MUM ) * ( MUM / CS ) ) ) ) ) - ( ( ( ( Max( CS,MLU ) - ( MUR / CS ) ) + ( ( MUC - MUM ) * ( CS - RCSe ) ) ) * ( Max( ( MUC * RMSe ),Max( RCSe,DS ) ) + Max( ( CS - RRSe ),( RRSe + RCSe ) ) ) ) + ( Max( ( ( RMSe / MUC ) + ( MUR * MUR ) ),Max( ( RCSe / DS ),( MUR - MLU ) ) ) / ( Min( ( MUM / MUM ) ,( MUC + MLU ) ) - ( ( MLU - DS ) / Min( RMSe ,CS ) ) ) ) ) ),( Min( ( Max( ( Min( MUC ,MLU ) / Min( MUM ,DS ) ),( ( MUR / RRSe ) - ( MLU * RRSe ) ) ) * ( Min( ( RRSe * MUR ) ,( MUR - RRSe ) ) / Min( ( MUR / MUC ) ,Max( DS,RMSe ) ) ) ) ,Min( ( ( ( MLU - RCSe ) * ( MLU * DS ) ) * ( Min( MUM ,RRSe ) * Min( MUR ,MUM ) ) ) ,( Min( ( MUC - MUM ) ,( RRSe - CS ) ) * ( Min( MUR ,CS ) + ( MUC / MUM ) ) ) ) ) * Min( ( ( ( ( RRSe - CS ) - ( MUM + CS ) ) + ( ( DS / MLU ) + ( MUC + MUM ) ) ) * ( ( ( MUC * MUM ) - ( RMSe / RMSe ) ) / Max( ( MUM / DS ),( CS / MUM ) ) ) ) ,( ( Max( Max( DS,RCSe ),Min( CS ,MUM ) ) * Max( ( MUM + MUC ),Min( CS ,RRSe ) ) ) / ( ( ( RRSe - MUM ) - Min( MUC ,CS ) ) + ( ( MUM / MUR ) - Min( RRSe ,RMSe ) ) ) ) ) ) ) )", "obj1": 0.2033195020746888, "obj2": 0.6424118854681077}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) ) - Max( ( ACS / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / DDR ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - ( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RRSe ) )", "obj1": 0.3983402489626556, "obj2": 0.5291326913072868}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server / DDR ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * ( ( RRSe * DS ) * RRSe ) ) ) - RMSe )", "obj1": 0.11825726141078838, "obj2": 0.7276736683570701}, {"determining": "( ( FirstVNF_RAM_Server * Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR * AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( Max( RMSe,( RRSe - DS ) ),MUM ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( MDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "Max( Max( MLU,MUR ),( MLU / MLU ) )", "obj1": 0.12240663900414937, "obj2": 0.7132667685850573}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ACS / FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.49377593360995853, "obj2": 0.40963225353265664}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( ( Max( ( DDR * FirstVNF_CPU ),( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) / ACS ) + Max( ( FirstVNF_Mem_Server / ACS ),( DDR / FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe * ( ( Max( ( CS * DS ),RRSe ) * Min( ( ( RRSe * DS ) * DS ) ,( RRSe - RRSe ) ) ) * DS ) ) - RRSe )", "obj1": 0.26141078838174275, "obj2": 0.6138768264820801}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server + Max( ( FirstVNF_Mem_Server / ACS ),( DDR / FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe - RRSe ) - Min( ( ( RRSe * DS ) * DS ) ,( RRSe - RRSe ) ) )", "obj1": 0.27385892116182575, "obj2": 0.6024266210448088}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / Max( ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ),Max( DDR,PN ) ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Min( ( ( RRSe - ( RRSe * DS ) ) * DS ) ,( RRSe - RRSe ) ) )", "obj1": 0.12240663900414937, "obj2": 0.7132667685850573}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( Max( ( DDR * FirstVNF_CPU ),( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) / ACS ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Min( ( ( RRSe * DS ) * DS ) ,( RRSe - RRSe ) ) )", "obj1": 0.12240663900414937, "obj2": 0.7132667685850573}, {"determining": "( ( FirstVNF_RAM_Server / Max( Max( FirstVNF_Mem_Server,ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( Max( ( FirstVNF_Mem_Server / AMS ),Max( DDR,PN ) ) / DDR ),Max( DDR,ACS ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * ( ( RRSe * RRSe ) / RRSe ) ) * DS ),( RRSe - MUR ) ) )", "obj1": 0.14107883817427386, "obj2": 0.6902221258386791}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),Min( DDR ,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( DDR * FirstVNF_CPU ) ) / ACS ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - MUR ) - Max( ( ( RRSe * RRSe ) / MUR ),( RRSe - RMSe ) ) )", "obj1": 0.26141078838174275, "obj2": 0.6138768264820801}, {"determining": "( ( FirstVNF_RAM_Server / Max( Max( FirstVNF_Mem_Server,ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) / DDR ) ) )", "choosing": "( ( RRSe - MUR ) - Max( ( ( RRSe * RRSe ) / RRSe ),( RRSe - RMSe ) ) )", "obj1": 0.18049792531120332, "obj2": 0.6490007086429078}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( RMSe,RRSe ) + DS ) * DS ) ) - RRSe )", "obj1": 0.0975103734439834, "obj2": 0.7540392007994232}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( DDR / MRS ) )", "choosing": "( Max( RRSe,RRSe ) - RRSe )", "obj1": 0.12240663900414937, "obj2": 0.7132667685850573}, {"determining": "( ( Min( ( Max( ( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ,( MDR / AMS ) ) * ( ( BR - FirstVNF_CPU ) * ( BR / RRS ) ) ),Min( Max( ( FirstVNF_RAM + FirstVNF_CPU ),( AMS / FirstVNF_RAM ) ) ,Max( ( FirstVNF_Mem_Server + CRS ),Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) ) / Max( Max( Max( ( FirstVNF_RAM * DDR ),( FirstVNF_CPU / RRS ) ),( ( Const + FirstVNF_Mem_Server ) * ( AMS - Const ) ) ),( ( Max( FirstVNF_RAM,BR ) * ( MDR / ARS ) ) - Max( Max( FirstVNF_CPU_Server,RRS ),Min( FirstVNF_Mem_Server ,Const ) ) ) ) ) ,( ( ( ( ( MDR / BR ) * ( AMS * RRS ) ) - Max( Max( ARS,FirstVNF_Mem ),( ARS * PN ) ) ) - ( Max( ( AMS + CRS ),Min( BR ,FirstVNF_RAM ) ) + Min( Min( MDR ,ACS ) ,( MDR / CRS ) ) ) ) * ( ( ( ( FirstVNF_CPU_Server - AMS ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) * Max( ( Const + FirstVNF_Mem ),Min( AMS ,Const ) ) ) * ( Max( ( PN - FirstVNF_Mem ),( CRS * FirstVNF_CPU_Server ) ) - ( ( Const * Const ) - Min( FirstVNF_CPU ,PN ) ) ) ) ) ) * ( ( ( Max( Min( Max( BR,ACS ) ,( Const - ACS ) ),( Min( RRS ,RRS ) * ( MRS / MRS ) ) ) / Min( ( Max( DDR,ARS ) / ( RRS / FirstVNF_CPU_Server ) ) ,Max( Min( FirstVNF_RAM ,CRS ),Min( ACS ,FirstVNF_Mem_Server ) ) ) ) / ( ( ( Max( MDR,PN ) - ( FirstVNF_CPU_Server + PN ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,RRS ) ) ) + Max( ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) / ( AMS / RRS ) ),( ( FirstVNF_CPU_Server / ACS ) / Min( BR ,MRS ) ) ) ) ) / Max( Max( Min( ( ( FirstVNF_Mem_Server / DDR ) / ( CRS - ARS ) ) ,( ( FirstVNF_RAM / DDR ) / Max( ACS,PN ) ) ),( Max( ( ARS - FirstVNF_CPU_Server ),( MRS * CRS ) ) / ( ( BR / DDR ) + Min( ACS ,MDR ) ) ) ),Min( ( ( ( ACS - FirstVNF_CPU ) + ( ARS / AMS ) ) - Min( ( FirstVNF_Mem_Server - PN ) ,( PN / MRS ) ) ) ,( ( ( AMS / ARS ) / Min( FirstVNF_Mem_Server ,AMS ) ) - ( ( MRS / FirstVNF_CPU ) + ( Const / FirstVNF_RAM ) ) ) ) ) ) ) - ( Max( ( ( ( ( Min( ARS ,FirstVNF_CPU ) * Min( FirstVNF_CPU ,FirstVNF_Mem ) ) + ( Max( BR,DDR ) - ( FirstVNF_CPU_Server + RRS ) ) ) - ( ( Max( CRS,FirstVNF_Mem ) + ( DDR - BR ) ) / Min( Max( Const,FirstVNF_RAM ) ,Min( MDR ,FirstVNF_RAM_Server ) ) ) ) * ( ( ( ( PN / FirstVNF_CPU ) * ( Const - FirstVNF_Mem_Server ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * Max( ARS,FirstVNF_CPU ) ) ) * ( ( Min( DDR ,FirstVNF_RAM ) / Min( FirstVNF_CPU ,AMS ) ) * Max( ( FirstVNF_CPU + RRS ),( BR * FirstVNF_CPU ) ) ) ) ),Max( ( ( ( ( BR / CRS ) * ( FirstVNF_RAM_Server * MDR ) ) + ( ( CRS - Const ) / ( ACS - CRS ) ) ) / Max( Min( Max( PN,FirstVNF_CPU ) ,( CRS / CRS ) ),( ( MRS * FirstVNF_Mem ) / ( Const + FirstVNF_Mem_Server ) ) ) ),Max( Max( Max( ( FirstVNF_RAM - AMS ),Min( CRS ,ARS ) ),Max( ( ARS + FirstVNF_CPU ),Min( DDR ,MRS ) ) ),( Max( ( ACS / RRS ),( FirstVNF_RAM_Server + Const ) ) * ( Max( FirstVNF_Mem_Server,BR ) / ( CRS + FirstVNF_RAM ) ) ) ) ) ) + ( ( ( ( ( ( FirstVNF_RAM_Server + RRS ) / ( PN / FirstVNF_CPU_Server ) ) + ( Min( RRS ,FirstVNF_CPU ) + ( FirstVNF_Mem + FirstVNF_RAM ) ) ) / ( ( ( AMS - FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,Const ) ) * ( ( Const / FirstVNF_RAM ) + ( MDR / FirstVNF_Mem_Server ) ) ) ) - ( ( ( Max( BR,BR ) / ( FirstVNF_CPU_Server / PN ) ) * ( Max( FirstVNF_Mem,MRS ) * ( ACS + FirstVNF_CPU ) ) ) / Min( ( Min( ACS ,FirstVNF_RAM_Server ) - ( ACS + FirstVNF_RAM_Server ) ) ,( ( PN / BR ) * ( ACS + FirstVNF_Mem ) ) ) ) ) * Min( ( ( Max( Min( Const ,MDR ),( AMS * FirstVNF_Mem_Server ) ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) - ( ( Min( AMS ,FirstVNF_Mem ) * ( DDR * FirstVNF_Mem_Server ) ) - ( ( MDR * ARS ) * ( ACS - CRS ) ) ) ) ,Min( ( ( ( CRS - FirstVNF_RAM ) + ( PN - FirstVNF_RAM_Server ) ) * ( Min( DDR ,MRS ) * Max( RRS,FirstVNF_CPU ) ) ) ,Max( ( ( FirstVNF_RAM_Server + AMS ) - ( FirstVNF_RAM / ACS ) ),Max( Min( FirstVNF_CPU_Server ,MDR ),( FirstVNF_Mem - PN ) ) ) ) ) ) ) )", "choosing": "( ( MUC - RCSe ) + ( Max( MLU,MUM ) + MUR ) )", "obj1": 0.950207468879668, "obj2": 0.045518437790686574}, {"determining": "( ( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,Max( ( ACS / ACS ),Max( DDR,PN ) ) ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS * DDR ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.1078838174273859, "obj2": 0.7388229981880431}, {"determining": "( ( FirstVNF_CPU_Server / Max( ( ACS / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / DDR ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * DS ) - DS ),( RRSe - RRSe ) ) )", "obj1": 0.12240663900414937, "obj2": 0.7132667685850573}, {"determining": "( ( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS * DDR ) ) ) )", "choosing": "( ( RRSe - MUM ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( Max( ( DDR * FirstVNF_CPU ),( Max( ( FirstVNF_Mem_Server / CRS ),Max( DDR,PN ) ) / DDR ) ) / ACS ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Min( ( ( RRSe * DS ) * DS ) ,( ( RRSe - Min( ( Max( ( RRSe * DS ),RRSe ) - DS ) ,DS ) ) - RRSe ) ) )", "obj1": 0.42531120331950206, "obj2": 0.5120383953390778}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_RAM_Server ) + ( Max( ( FirstVNF_CPU_Server / CRS ),Max( FirstVNF_Mem_Server,PN ) ) / DDR ) ) )", "choosing": "( ( RCSe - RRSe ) - Min( ( ( RRSe * DS ) * DS ) ,( RRSe - RRSe ) ) )", "obj1": 0.12240663900414937, "obj2": 0.7132667685850573}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( DDR / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe - ( ( Max( ( Max( ( RRSe + DS ),RRSe ) * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.0912863070539419, "obj2": 0.7630519824222379}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_CPU / Max( Max( RRS,ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),MUR ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "Min( ( ( Max( ( Min( ( ( PN - CRS ) * ( RRS + FirstVNF_RAM_Server ) ) ,Max( Max( MDR,BR ),( FirstVNF_Mem_Server - BR ) ) ) - Min( ( ( FirstVNF_CPU_Server + ARS ) * ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) ,( ( CRS * AMS ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ) ),( Max( ( ( FirstVNF_Mem + AMS ) + ( FirstVNF_CPU_Server - ACS ) ),Min( Max( DDR,ARS ) ,( CRS + DDR ) ) ) - Min( ( ( Const - RRS ) * ( CRS / Const ) ) ,Max( ( FirstVNF_Mem - CRS ),( RRS - BR ) ) ) ) ) / ( Max( ( Min( ( MRS + AMS ) ,Max( ARS,ARS ) ) * ( ( RRS / FirstVNF_RAM_Server ) - ( MRS + ARS ) ) ),( ( ( Const - MRS ) + ( DDR + PN ) ) - ( Min( BR ,MDR ) * ( FirstVNF_RAM * DDR ) ) ) ) - ( Max( ( ( AMS - FirstVNF_CPU_Server ) / ( MRS * FirstVNF_CPU_Server ) ),( ( FirstVNF_Mem - RRS ) + ( ARS * DDR ) ) ) / ( ( ( Const / ACS ) * ( AMS - CRS ) ) / ( Min( RRS ,FirstVNF_Mem_Server ) * Max( DDR,ACS ) ) ) ) ) ) - ( ( ( ( ( ( AMS / CRS ) / ( Const * FirstVNF_CPU_Server ) ) * ( ( ACS - FirstVNF_RAM ) * Min( DDR ,MDR ) ) ) * ( Min( Max( ACS,Const ) ,Min( FirstVNF_CPU_Server ,ACS ) ) - ( Max( CRS,Const ) / ( ARS / Const ) ) ) ) * ( Min( ( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) / ( BR + FirstVNF_Mem_Server ) ) ,( Max( PN,PN ) - ( MDR - MRS ) ) ) - ( ( ( DDR + FirstVNF_RAM ) - ( RRS - ACS ) ) + ( Max( ARS,FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * CRS ) ) ) ) ) / ( Max( ( Max( ( BR / RRS ),Max( CRS,MRS ) ) - Max( ( BR + CRS ),( Const * DDR ) ) ),( ( ( CRS * AMS ) + ( FirstVNF_Mem / MDR ) ) - ( ( FirstVNF_CPU + CRS ) / ( ACS - FirstVNF_RAM_Server ) ) ) ) - ( ( Max( Min( MRS ,ARS ),( BR + FirstVNF_Mem_Server ) ) * Max( ( ACS + Const ),( FirstVNF_Mem - FirstVNF_RAM ) ) ) * Min( ( ( ARS * ACS ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ,( ( FirstVNF_RAM - ARS ) * ( FirstVNF_RAM + BR ) ) ) ) ) ) ) ,( Max( ( ( ( ( ( RRS / FirstVNF_RAM_Server ) + ( PN / MRS ) ) * Min( ( DDR / FirstVNF_CPU ) ,( MRS * DDR ) ) ) + ( ( ( CRS + FirstVNF_Mem_Server ) / ( AMS - FirstVNF_RAM ) ) / ( Max( MDR,BR ) + Min( FirstVNF_Mem_Server ,AMS ) ) ) ) - ( Min( ( ( ACS - FirstVNF_Mem ) * ( FirstVNF_RAM_Server / MRS ) ) ,( ( FirstVNF_Mem_Server * CRS ) / Max( PN,Const ) ) ) - Min( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - ( MRS * FirstVNF_Mem_Server ) ) ,( ( BR - FirstVNF_Mem_Server ) * ( MRS - FirstVNF_CPU ) ) ) ) ),( ( Min( ( Min( Const ,MRS ) - ( FirstVNF_CPU_Server - MDR ) ) ,( Min( RRS ,FirstVNF_CPU ) / Max( AMS,BR ) ) ) * ( Max( ( FirstVNF_CPU_Server / BR ),( FirstVNF_RAM_Server * MRS ) ) * ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) / ( DDR + Const ) ) ) ) * ( ( Min( ( ARS * FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem_Server,MDR ) ) * ( Max( MRS,AMS ) * Min( CRS ,FirstVNF_Mem ) ) ) - ( Min( Min( CRS ,FirstVNF_Mem_Server ) ,Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) + ( Max( ARS,FirstVNF_Mem ) + Max( FirstVNF_CPU_Server,Const ) ) ) ) ) ) + ( ( ( Max( ( ( BR + FirstVNF_Mem_Server ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ),( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) + ( DDR / Const ) ) ) - Min( Max( ( FirstVNF_CPU - FirstVNF_Mem ),Max( ARS,FirstVNF_RAM ) ) ,Min( ( FirstVNF_Mem_Server - AMS ) ,Max( FirstVNF_RAM_Server,CRS ) ) ) ) / ( ( Max( Max( FirstVNF_Mem_Server,RRS ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ) + Min( ( FirstVNF_Mem / CRS ) ,Max( MRS,MRS ) ) ) - ( ( ( BR / ACS ) * ( ACS / Const ) ) * ( ( PN / DDR ) * Max( MDR,ARS ) ) ) ) ) - ( Max( ( ( Min( MRS ,RRS ) + ( FirstVNF_Mem / FirstVNF_Mem ) ) - ( Min( BR ,Const ) - ( MDR - Const ) ) ),( Max( ( CRS - AMS ),( FirstVNF_RAM - AMS ) ) + ( ( Const * AMS ) + ( ARS + CRS ) ) ) ) - ( Min( ( ( FirstVNF_CPU / MRS ) + ( PN - BR ) ) ,( ( Const + MDR ) / Max( FirstVNF_Mem,AMS ) ) ) + Min( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU ),Min( DDR ,FirstVNF_CPU ) ) ,Max( Max( MDR,FirstVNF_Mem ),Max( RRS,BR ) ) ) ) ) ) ) )", "choosing": "( Min( ( Max( ( ( ( ( MUR * RRSe ) / ( RCSe * MUC ) ) - ( Min( RRSe ,MUC ) - ( DS / RMSe ) ) ) + ( Min( ( RMSe * MUC ) ,( MUM - CS ) ) / ( Max( MUM,MUC ) / ( MLU + CS ) ) ) ),( ( ( ( MUR - MUM ) * ( MUR * CS ) ) - Max( Max( MUC,RRSe ),( MUR + RMSe ) ) ) - ( ( Min( CS ,MLU ) + ( CS / RMSe ) ) / ( Max( CS,RMSe ) * ( RRSe * CS ) ) ) ) ) - ( ( ( Max( Min( CS ,MUR ),( RRSe * CS ) ) + Min( ( DS / RMSe ) ,( MUM - MUC ) ) ) / ( ( ( RMSe / MUC ) + Min( MLU ,MUM ) ) - Max( ( MUM * DS ),( DS * MUR ) ) ) ) * ( ( ( ( CS + RMSe ) * Max( RRSe,RCSe ) ) / Min( ( RRSe - DS ) ,( DS * MLU ) ) ) / Min( ( ( RCSe * MUC ) + Max( DS,RMSe ) ) ,( ( MLU * RCSe ) + ( MUC - RMSe ) ) ) ) ) ) ,Min( Max( ( ( ( ( MUR * MUM ) / ( RRSe - RMSe ) ) * Min( ( DS + MUM ) ,( RMSe - MUC ) ) ) / Max( ( ( RRSe * RCSe ) * Min( RCSe ,DS ) ),( ( RCSe + MLU ) - ( DS + RCSe ) ) ) ),( Max( Min( ( MUC + RMSe ) ,Max( RMSe,MUR ) ),( ( CS + MUR ) * ( RCSe - MUR ) ) ) * ( ( ( MUC / RRSe ) / Max( RRSe,MUC ) ) / ( ( MUM + RRSe ) - ( RRSe - MLU ) ) ) ) ) ,Max( ( ( Min( ( MLU / CS ) ,Min( RMSe ,MUR ) ) / Min( ( RMSe - CS ) ,( CS * RCSe ) ) ) / Max( Min( Max( RMSe,DS ) ,Max( RRSe,MLU ) ),( Max( MUM,MUR ) + ( MUM - RCSe ) ) ) ),( ( ( Max( MUC,MUM ) - ( MUC + CS ) ) * ( Max( MUM,MUM ) + Max( MUR,MUC ) ) ) + Min( ( ( DS * MLU ) / ( RCSe * CS ) ) ,Max( Min( DS ,MLU ),( CS * DS ) ) ) ) ) ) ) - ( ( Min( Min( ( Max( ( DS - RCSe ),Max( MLU,MUM ) ) + ( ( CS * MUR ) / Max( RMSe,RRSe ) ) ) ,Min( ( ( RCSe + CS ) + Min( DS ,MUC ) ) ,( ( CS * DS ) + ( MUR + RRSe ) ) ) ) ,( Min( ( Min( RMSe ,MLU ) + ( MUR * RMSe ) ) ,( ( RRSe + RRSe ) * Max( RMSe,CS ) ) ) * ( ( Min( CS ,CS ) - Max( CS,RCSe ) ) / ( Max( MUR,MLU ) / ( RMSe / RCSe ) ) ) ) ) / ( ( Min( ( ( MUM + MUM ) - Max( MUR,RCSe ) ) ,( Min( MLU ,RCSe ) * Min( RRSe ,RMSe ) ) ) - ( ( Min( MUC ,RCSe ) + Min( RCSe ,RRSe ) ) * ( ( MUC * RMSe ) + Min( MLU ,RMSe ) ) ) ) / Min( Max( Min( Min( MUM ,DS ) ,( MUR / RRSe ) ),( ( DS + RCSe ) / ( RRSe * MUR ) ) ) ,( Max( Max( RCSe,MUM ),Min( RMSe ,DS ) ) * ( ( RRSe / MUR ) / ( RMSe - MUM ) ) ) ) ) ) / Max( ( ( Min( ( ( MUR / MLU ) - ( MUR / RCSe ) ) ,( ( CS / DS ) * Max( CS,MUC ) ) ) / ( ( ( DS + CS ) * ( CS / RRSe ) ) + Max( ( CS + RCSe ),( DS + MLU ) ) ) ) + ( ( ( Max( CS,RCSe ) - Max( MUR,RCSe ) ) - Max( ( DS / DS ),Min( RMSe ,DS ) ) ) * Min( ( ( MUM + RRSe ) - ( MUR + MLU ) ) ,( Min( MUR ,MLU ) / Min( RRSe ,MUC ) ) ) ) ),( ( ( ( ( MUR + MUC ) + ( MUM + CS ) ) - ( Min( MUM ,RMSe ) + Min( DS ,RRSe ) ) ) + ( Max( ( MUR + MUM ),( MUR * MUR ) ) / Max( Max( RMSe,DS ),( RCSe - MUC ) ) ) ) - ( Max( ( Max( MLU,RMSe ) + ( MUC - CS ) ),Max( ( MUC / DS ),( RMSe * MUR ) ) ) / Max( ( ( DS - CS ) * ( MUR * MUR ) ),Max( ( MUR + DS ),( MUR * RCSe ) ) ) ) ) ) ) )", "obj1": 0.6639004149377593, "obj2": 0.2641757034023336}], "37": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server / Max( ( ACS / ACS ),Max( DDR,PN ) ) ) / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * RRSe ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + Min( ( DDR * FirstVNF_CPU ) ,( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( Max( Max( ( RRSe * DS ),RRSe ),DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_CPU_Server / Max( ( ACS / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / DDR ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * DS ) - DS ),( RRSe - RRSe ) ) )", "obj1": 0.12240663900414937, "obj2": 0.7132667685850573}, {"determining": "( ( FirstVNF_CPU_Server / Max( ( ACS / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / DDR ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * DS ) - DS ),( RRSe - RRSe ) ) )", "obj1": 0.12240663900414937, "obj2": 0.7132667685850573}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * RRSe ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_CPU_Server / Max( ( ACS / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / DDR ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * DS ) - DS ),( RRSe - RRSe ) ) )", "obj1": 0.12240663900414937, "obj2": 0.7132667685850573}, {"determining": "( ( FirstVNF_RAM_Server * Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR * AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( Max( RMSe,( RRSe - DS ) ),MUM ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( MDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "Max( Max( MLU,MUR ),( MLU / MLU ) )", "obj1": 0.12240663900414937, "obj2": 0.7132667685850573}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / Max( ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ),Max( DDR,PN ) ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Min( ( ( RRSe - ( RRSe * DS ) ) * DS ) ,( RRSe - RRSe ) ) )", "obj1": 0.12240663900414937, "obj2": 0.7132667685850573}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( Max( ( DDR * FirstVNF_CPU ),( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) / ACS ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Min( ( ( RRSe * DS ) * DS ) ,( RRSe - RRSe ) ) )", "obj1": 0.12240663900414937, "obj2": 0.7132667685850573}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( RMSe,RRSe ) + DS ) * DS ) ) - RRSe )", "obj1": 0.0975103734439834, "obj2": 0.7540392007994232}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( DDR / MRS ) )", "choosing": "( Max( RRSe,RRSe ) - RRSe )", "obj1": 0.12240663900414937, "obj2": 0.7132667685850573}, {"determining": "( ( FirstVNF_CPU_Server / Max( ( ACS / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / DDR ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * DS ) - DS ),( RRSe - RRSe ) ) )", "obj1": 0.12240663900414937, "obj2": 0.7132667685850573}, {"determining": "( ( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS * DDR ) ) ) )", "choosing": "( ( RRSe - MUM ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_RAM_Server ) + ( Max( ( FirstVNF_CPU_Server / CRS ),Max( FirstVNF_Mem_Server,PN ) ) / DDR ) ) )", "choosing": "( ( RCSe - RRSe ) - Min( ( ( RRSe * DS ) * DS ) ,( RRSe - RRSe ) ) )", "obj1": 0.12240663900414937, "obj2": 0.7132667685850573}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( DDR / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe - ( ( Max( ( Max( ( RRSe + DS ),RRSe ) * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.0912863070539419, "obj2": 0.7630519824222379}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_CPU / Max( Max( RRS,ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),MUR ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_RAM_Server ) + ( Max( ( FirstVNF_Mem_Server / CRS ),Max( FirstVNF_Mem_Server,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Min( ( ( RRSe * DS ) * DS ) ,( RRSe - RRSe ) ) )", "obj1": 0.12240663900414937, "obj2": 0.7132667685850573}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "Max( Max( MLU,RMSe ),( MLU / MLU ) )", "obj1": 0.12240663900414937, "obj2": 0.7132667685850573}, {"determining": "( ( ( PN / Max( ( FirstVNF_Mem_Server / ( DDR * FirstVNF_CPU ) ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_RAM_Server,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_Mem_Server / ACS ) ) )", "choosing": "( ( RRSe - MUM ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( BR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS - ARS ) ) ) )", "choosing": "( ( RRSe - Min( ( Max( ( RRSe * DS ),RRSe ) * RCSe ) ,DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_CPU_Server / Max( ( ACS / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / ( FirstVNF_Mem_Server / ACS ) ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * DS ) - DS ),( RRSe - RRSe ) ) )", "obj1": 0.12240663900414937, "obj2": 0.7132667685850573}, {"determining": "( ( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS * DDR ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * DS ) - DS ),( RRSe - RRSe ) ) )", "obj1": 0.12240663900414937, "obj2": 0.7132667685850573}, {"determining": "( ( FirstVNF_CPU_Server / Max( ( ACS / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / DDR ),Max( DDR,PN ) ) / ACS ) ) )", "choosing": "( ( DS - MUM ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( ( PN / Min( ( FirstVNF_Mem_Server / ( DDR * FirstVNF_CPU ) ) ,Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_RAM_Server,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_Mem_Server / ACS ) ) )", "choosing": "( ( RRSe / RRSe ) - RRSe )", "obj1": 0.12240663900414937, "obj2": 0.7132667685850573}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( Max( ( DDR * FirstVNF_CPU ),( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) / DDR ) ) / ACS ),Max( DDR,PN ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Min( ( ( RRSe * DS ) * DS ) ,( RRSe - RRSe ) ) )", "obj1": 0.12240663900414937, "obj2": 0.7132667685850573}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( AMS / ACS ),Max( DDR,FirstVNF_RAM_Server ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server / Max( ( ACS * ACS ),Max( DDR,FirstVNF_Mem_Server ) ) ) / ARS ) ) ) )", "choosing": "( ( RRSe / RRSe ) - Max( ( ( RRSe * DS ) - DS ),( RRSe - RRSe ) ) )", "obj1": 0.12240663900414937, "obj2": 0.7132667685850573}, {"determining": "( ( FirstVNF_CPU_Server / Max( ( ACS / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_Mem_Server ) + ( Max( ( FirstVNF_Mem_Server / DDR ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe / RRSe ) - Max( ( ( RRSe * DS ) - DS ),( RRSe - RRSe ) ) )", "obj1": 0.12240663900414937, "obj2": 0.7132667685850573}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server / DDR ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - RRSe ) - Min( ( ( RRSe * DS ) * DS ) ,( RRSe - RRSe ) ) )", "obj1": 0.12240663900414937, "obj2": 0.7132667685850573}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( Max( RRSe,RRSe ) - RRSe )", "obj1": 0.12240663900414937, "obj2": 0.7132667685850573}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Min( ( RMSe - ( RRSe - DS ) ) ,RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( ( ACS * ACS ),Max( DDR,FirstVNF_Mem_Server ) ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( ( ( RRSe * DS ) / DS ) * RRSe ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * RRSe ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_RAM_Server ) + ( Max( ( FirstVNF_Mem_Server / CRS ),Max( FirstVNF_Mem_Server,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Min( ( ( RRSe * DS ) * DS ) ,( RRSe - RRSe ) ) )", "obj1": 0.12240663900414937, "obj2": 0.7132667685850573}, {"determining": "( ( FirstVNF_CPU_Server / ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / DDR ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0912863070539419, "obj2": 0.7630519824222379}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe - ( ( Max( ( ( RRSe * DS ) * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.0912863070539419, "obj2": 0.7630519824222379}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( Max( ( RRSe + DS ),RRSe ) * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.0912863070539419, "obj2": 0.7630519824222379}, {"determining": "( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server / DDR ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( Max( ( RRSe * DS ),RRSe ) * DS ),RRSe ) * DS ) * DS ) ) - RCSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( BR / ACS ) + ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server / DDR ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * RRSe ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( ( FirstVNF_Mem_Server / ACS ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) ) - ( ACS / FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - ( ( Max( Min( RRSe ,( RRSe * DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.0912863070539419, "obj2": 0.7630519824222379}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( Max( ( PN / FirstVNF_CPU_Server ),Max( DDR,PN ) ) / DDR ) )", "choosing": "( ( RRSe - ( ( Max( ( Min( RRSe ,( RRSe * DS ) ) * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( Max( ( PN / ACS ),Max( FirstVNF_Mem,PN ) ) / DDR ) )", "choosing": "( Max( RRSe,( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( Max( MLU,RMSe ),( MLU / ( Max( Min( RRSe ,( RRSe * DS ) ),RRSe ) - DS ) ) )", "obj1": 0.10580912863070539, "obj2": 0.7182697106395668}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) ) - Max( ( ACS / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / DDR ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( ( PN / Max( ( FirstVNF_Mem_Server / ( DDR * FirstVNF_CPU ) ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_RAM_Server,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( MDR / DDR ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RCSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}], "38": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server / Max( ( ACS / ACS ),Max( DDR,PN ) ) ) / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * RRSe ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + Min( ( DDR * FirstVNF_CPU ) ,( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( Max( Max( ( RRSe * DS ),RRSe ),DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * RRSe ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_RAM_Server * Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR * AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( Max( RMSe,( RRSe - DS ) ),MUM ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( RMSe,RRSe ) + DS ) * DS ) ) - RRSe )", "obj1": 0.0975103734439834, "obj2": 0.7540392007994232}, {"determining": "( ( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS * DDR ) ) ) )", "choosing": "( ( RRSe - MUM ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( DDR / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe - ( ( Max( ( Max( ( RRSe + DS ),RRSe ) * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.0912863070539419, "obj2": 0.7630519824222379}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_CPU / Max( Max( RRS,ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),MUR ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( ( PN / Max( ( FirstVNF_Mem_Server / ( DDR * FirstVNF_CPU ) ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_RAM_Server,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_Mem_Server / ACS ) ) )", "choosing": "( ( RRSe - MUM ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( BR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS - ARS ) ) ) )", "choosing": "( ( RRSe - Min( ( Max( ( RRSe * DS ),RRSe ) * RCSe ) ,DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_CPU_Server / Max( ( ACS / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / DDR ),Max( DDR,PN ) ) / ACS ) ) )", "choosing": "( ( DS - MUM ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Min( ( RMSe - ( RRSe - DS ) ) ,RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( ( ACS * ACS ),Max( DDR,FirstVNF_Mem_Server ) ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( ( ( RRSe * DS ) / DS ) * RRSe ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * RRSe ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_CPU_Server / ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / DDR ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0912863070539419, "obj2": 0.7630519824222379}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe - ( ( Max( ( ( RRSe * DS ) * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.0912863070539419, "obj2": 0.7630519824222379}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( Max( ( RRSe + DS ),RRSe ) * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.0912863070539419, "obj2": 0.7630519824222379}, {"determining": "( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server / DDR ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( Max( ( RRSe * DS ),RRSe ) * DS ),RRSe ) * DS ) * DS ) ) - RCSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( BR / ACS ) + ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server / DDR ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * RRSe ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( ( FirstVNF_Mem_Server / ACS ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) ) - ( ACS / FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - ( ( Max( Min( RRSe ,( RRSe * DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.0912863070539419, "obj2": 0.7630519824222379}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( Max( ( PN / FirstVNF_CPU_Server ),Max( DDR,PN ) ) / DDR ) )", "choosing": "( ( RRSe - ( ( Max( ( Min( RRSe ,( RRSe * DS ) ) * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( Max( ( PN / ACS ),Max( FirstVNF_Mem,PN ) ) / DDR ) )", "choosing": "( Max( RRSe,( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) ) - Max( ( ACS / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / DDR ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( ( PN / Max( ( FirstVNF_Mem_Server / ( DDR * FirstVNF_CPU ) ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_RAM_Server,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( MDR / DDR ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RCSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS * DDR ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * RRSe ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server / DDR ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( Max( ( RRSe * DS ),RRSe ) * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( BR / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * MLU ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_RAM_Server * Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR * AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( Max( RMSe,( RRSe - DS ) ),MUM ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08921161825726141, "obj2": 0.764123386811292}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( Max( ( RRSe + DS ),RRSe ) * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.0912863070539419, "obj2": 0.7630519824222379}, {"determining": "( ( ( PN / Max( ( FirstVNF_Mem_Server / ( DDR * FirstVNF_CPU ) ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_RAM_Server,PN ) ) ) ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) )", "choosing": "( ( RRSe - ( ( Max( ( Max( RRSe,RRSe ) * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( ( PN / Max( ( FirstVNF_Mem_Server / ( DDR * FirstVNF_CPU ) ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_RAM_Server,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_Mem_Server / ACS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_CPU_Server / Max( ( ACS / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / DDR ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * RRSe ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_CPU_Server / Max( ( ACS / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / DDR ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * RRSe ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( ( PN / Max( ( FirstVNF_Mem_Server / ( DDR * FirstVNF_CPU ) ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_RAM_Server,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_Mem_Server / ACS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),MUM ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7646121381363699}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_RAM_Server ) + ( Max( ( FirstVNF_Mem_Server / CRS ),Max( FirstVNF_Mem_Server,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * RRSe ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) )", "choosing": "( ( RRSe - ( ( Max( ( ( ( RRSe * DS ) * DS ) * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_CPU_Server / ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / DDR ),FirstVNF_CPU ) / DDR ) ) )", "choosing": "( ( RRSe - RRSe ) - Max( ( ( RRSe * DS ) * DS ),( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RRSe ) ) )", "obj1": 0.0912863070539419, "obj2": 0.7630519824222379}, {"determining": "( ( ( FirstVNF_CPU_Server / Max( ( ACS / ACS ),Max( DDR,PN ) ) ) / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( MDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ) - ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( Max( Max( MLU,MLU ),( MLU / MLU ) ) * RRSe ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ),Max( DDR,ACS ) ) ) + ( DDR / MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( ( RRSe * DS ) * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.0912863070539419, "obj2": 0.7630519824222379}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_RAM_Server ) + ( Max( ( FirstVNF_Mem_Server / CRS ),Max( FirstVNF_Mem_Server,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( Min( RRSe ,( RRSe * DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.0912863070539419, "obj2": 0.7630519824222379}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( ( DS * DS ) * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.0912863070539419, "obj2": 0.7630519824222379}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe - ( ( Max( ( ( RRSe * DS ) * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.0912863070539419, "obj2": 0.7630519824222379}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe - ( ( Max( ( ( RRSe * DS ) * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.0912863070539419, "obj2": 0.7630519824222379}], "39": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server / Max( ( ACS / ACS ),Max( DDR,PN ) ) ) / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * RRSe ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + Min( ( DDR * FirstVNF_CPU ) ,( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( Max( Max( ( RRSe * DS ),RRSe ),DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * RRSe ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_RAM_Server * Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR * AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( Max( RMSe,( RRSe - DS ) ),MUM ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( RMSe,RRSe ) + DS ) * DS ) ) - RRSe )", "obj1": 0.0975103734439834, "obj2": 0.7540392007994232}, {"determining": "( ( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS * DDR ) ) ) )", "choosing": "( ( RRSe - MUM ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_CPU / Max( Max( RRS,ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),MUR ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( ( PN / Max( ( FirstVNF_Mem_Server / ( DDR * FirstVNF_CPU ) ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_RAM_Server,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_Mem_Server / ACS ) ) )", "choosing": "( ( RRSe - MUM ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( BR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS - ARS ) ) ) )", "choosing": "( ( RRSe - Min( ( Max( ( RRSe * DS ),RRSe ) * RCSe ) ,DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_CPU_Server / Max( ( ACS / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / DDR ),Max( DDR,PN ) ) / ACS ) ) )", "choosing": "( ( DS - MUM ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Min( ( RMSe - ( RRSe - DS ) ) ,RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( ( ACS * ACS ),Max( DDR,FirstVNF_Mem_Server ) ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( ( ( RRSe * DS ) / DS ) * RRSe ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * RRSe ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server / DDR ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( Max( ( RRSe * DS ),RRSe ) * DS ),RRSe ) * DS ) * DS ) ) - RCSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( BR / ACS ) + ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server / DDR ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * RRSe ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( Max( ( PN / FirstVNF_CPU_Server ),Max( DDR,PN ) ) / DDR ) )", "choosing": "( ( RRSe - ( ( Max( ( Min( RRSe ,( RRSe * DS ) ) * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( Max( ( PN / ACS ),Max( FirstVNF_Mem,PN ) ) / DDR ) )", "choosing": "( Max( RRSe,( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) ) - Max( ( ACS / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / DDR ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( ( PN / Max( ( FirstVNF_Mem_Server / ( DDR * FirstVNF_CPU ) ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_RAM_Server,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( MDR / DDR ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RCSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS * DDR ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * RRSe ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server / DDR ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( Max( ( RRSe * DS ),RRSe ) * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( BR / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * MLU ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( ( PN / Max( ( FirstVNF_Mem_Server / ( DDR * FirstVNF_CPU ) ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_RAM_Server,PN ) ) ) ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) )", "choosing": "( ( RRSe - ( ( Max( ( Max( RRSe,RRSe ) * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( ( PN / Max( ( FirstVNF_Mem_Server / ( DDR * FirstVNF_CPU ) ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_RAM_Server,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_Mem_Server / ACS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_CPU_Server / Max( ( ACS / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / DDR ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * RRSe ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_CPU_Server / Max( ( ACS / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / DDR ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * RRSe ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_RAM_Server / Max( DDR,Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_RAM_Server ) + ( Max( ( FirstVNF_Mem_Server / CRS ),Max( FirstVNF_Mem_Server,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * RRSe ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) )", "choosing": "( ( RRSe - ( ( Max( ( ( ( RRSe * DS ) * DS ) * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( ( FirstVNF_CPU_Server / Max( ( ACS / ACS ),Max( DDR,PN ) ) ) / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( MDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ) - ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( Max( Max( MLU,MLU ),( MLU / MLU ) ) * RRSe ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( Max( ( RRSe + DS ),RRSe ) * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08921161825726141, "obj2": 0.7549783147266147}, {"determining": "( ( Max( ( FirstVNF_Mem_Server / DDR ),Max( DDR,PN ) ) / ACS ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) )", "choosing": "( ( RRSe - ( ( Max( ( ( RRSe * RRSe ) * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_CPU_Server / Max( ( ACS / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / DDR ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * RRSe ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( PN,ACS ) ) ) + ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUR * DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7633226159434772}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe - ( ( Max( RMSe,RRSe ) + DS ) * DS ) ) - RRSe )", "obj1": 0.0975103734439834, "obj2": 0.7540392007994232}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( DDR * FirstVNF_CPU ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.759003366389886}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe * ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) ) / MRS ) )", "choosing": "( ( RRSe - ( ( Max( Max( ( ( DS * DS ) * DS ),RRSe ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7631372251916434}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( DDR / MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}], "40": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server / Max( ( ACS / ACS ),Max( DDR,PN ) ) ) / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * RRSe ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + Min( ( DDR * FirstVNF_CPU ) ,( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( Max( Max( ( RRSe * DS ),RRSe ),DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * RRSe ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_RAM_Server * Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR * AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( Max( RMSe,( RRSe - DS ) ),MUM ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS * DDR ) ) ) )", "choosing": "( ( RRSe - MUM ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_CPU / Max( Max( RRS,ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),MUR ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( ( PN / Max( ( FirstVNF_Mem_Server / ( DDR * FirstVNF_CPU ) ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_RAM_Server,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_Mem_Server / ACS ) ) )", "choosing": "( ( RRSe - MUM ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( BR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS - ARS ) ) ) )", "choosing": "( ( RRSe - Min( ( Max( ( RRSe * DS ),RRSe ) * RCSe ) ,DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_CPU_Server / Max( ( ACS / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / DDR ),Max( DDR,PN ) ) / ACS ) ) )", "choosing": "( ( DS - MUM ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Min( ( RMSe - ( RRSe - DS ) ) ,RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( ( ACS * ACS ),Max( DDR,FirstVNF_Mem_Server ) ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( ( ( RRSe * DS ) / DS ) * RRSe ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * RRSe ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server / DDR ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( Max( ( RRSe * DS ),RRSe ) * DS ),RRSe ) * DS ) * DS ) ) - RCSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( BR / ACS ) + ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server / DDR ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * RRSe ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( Max( ( PN / FirstVNF_CPU_Server ),Max( DDR,PN ) ) / DDR ) )", "choosing": "( ( RRSe - ( ( Max( ( Min( RRSe ,( RRSe * DS ) ) * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( Max( ( PN / ACS ),Max( FirstVNF_Mem,PN ) ) / DDR ) )", "choosing": "( Max( RRSe,( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) ) - Max( ( ACS / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( FirstVNF_Mem_Server / DDR ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( ( PN / Max( ( FirstVNF_Mem_Server / ( DDR * FirstVNF_CPU ) ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_RAM_Server,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( MDR / DDR ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RCSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS * DDR ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * RRSe ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server / DDR ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( Max( ( RRSe * DS ),RRSe ) * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( BR / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * MLU ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( ( PN / Max( ( FirstVNF_Mem_Server / ( DDR * FirstVNF_CPU ) ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_RAM_Server,PN ) ) ) ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) )", "choosing": "( ( RRSe - ( ( Max( ( Max( RRSe,RRSe ) * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( Max( ( RRSe + DS ),RRSe ) * DS ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08921161825726141, "obj2": 0.7549783147266147}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( PN,ACS ) ) ) + ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUR * DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7633226159434772}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( DDR * FirstVNF_CPU ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.759003366389886}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe * ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) ) / MRS ) )", "choosing": "( ( RRSe - ( ( Max( Max( ( ( DS * DS ) * DS ),RRSe ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7631372251916434}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( DDR / MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( ACS / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( DDR / MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.0954356846473029, "obj2": 0.7507781778939276}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + Max( AMS,ARS ) ) ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * RMSe ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ( FirstVNF_Mem_Server / ACS ) ),Max( PN,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe * DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7633226159434772}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( PN,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe * DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7633226159434772}, {"determining": "( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server / DDR ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.759003366389886}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( DDR / MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_CPU / Max( Max( RRS,ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.759003366389886}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) ) / MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe - ( ( Max( Max( ( ( DS * DS ) * DS ),RRSe ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7631372251916434}], "41": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server / Max( ( ACS / ACS ),Max( DDR,PN ) ) ) / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * RRSe ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + Min( ( DDR * FirstVNF_CPU ) ,( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( Max( Max( ( RRSe * DS ),RRSe ),DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * RRSe ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_RAM_Server * Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR * AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( Max( RMSe,( RRSe - DS ) ),MUM ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS * DDR ) ) ) )", "choosing": "( ( RRSe - MUM ) - Max( ( ( RRSe * DS ) * DS ),( RRSe - RRSe ) ) )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_CPU / Max( Max( RRS,ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe * DS ),MUR ) * DS ) * DS ) ) - RMSe )", "obj1": 0.0995850622406639, "obj2": 0.7460488719091389}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Min( ( RMSe - ( RRSe - DS ) ) ,RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( BR / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * MLU ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe * ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( DDR / MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( ACS / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( DDR / MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.0954356846473029, "obj2": 0.7507781778939276}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + Max( AMS,ARS ) ) ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * RMSe ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( DDR / MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) ) / MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / Const ),Max( DDR,ACS ) ) ) + ( DDR / MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * MUR ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( ( PN / Max( ( FirstVNF_Mem_Server / ( DDR * FirstVNF_CPU ) ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_RAM_Server,PN ) ) ) ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_RAM_Server * Max( ( FirstVNF_Mem_Server / ACS ),( DDR - ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe / ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + Min( AMS ,ARS ) ) ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * MUR ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( ACS / Max( ( FirstVNF_Mem_Server / ACS ),( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ) ) + ( DDR / MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( MRS / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * MUM ) * DS ) ) - RRSe )", "obj1": 0.0954356846473029, "obj2": 0.7507781778939276}, {"determining": "( ( ACS / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( DDR / MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( DDR / MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ( FirstVNF_Mem_Server / ACS ) ),Max( PN,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( ACS / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( DDR / MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe * DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.09336099585062241, "obj2": 0.7513853096670957}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08921161825726141, "obj2": 0.7537988084675841}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) - DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server / DDR ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08921161825726141, "obj2": 0.7537988084675841}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( CRS / ACS ),Max( ( FirstVNF_Mem_Server / ACS ),ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUR - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_CPU / Max( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ),Max( DDR,PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - RRSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7581470288009987}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}], "42": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server * Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR * AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( Max( RMSe,( RRSe - DS ) ),MUM ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Min( ( RMSe - ( RRSe - DS ) ) ,RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( BR / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * MLU ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe * ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( DDR / MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + Max( AMS,ARS ) ) ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * RMSe ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( DDR / MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) ) / MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / Const ),Max( DDR,ACS ) ) ) + ( DDR / MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * MUR ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( ( PN / Max( ( FirstVNF_Mem_Server / ( DDR * FirstVNF_CPU ) ),Max( DDR,PN ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_RAM_Server,PN ) ) ) ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_RAM_Server * Max( ( FirstVNF_Mem_Server / ACS ),( DDR - ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe / ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + Min( AMS ,ARS ) ) ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * MUR ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( ACS / Max( ( FirstVNF_Mem_Server / ACS ),( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ) ) + ( DDR / MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( ACS / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( DDR / MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( DDR / MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ( FirstVNF_Mem_Server / ACS ) ),Max( PN,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( Max( ( PN / ACS ),Max( DDR,PN ) ) / DDR ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) - DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( CRS / ACS ),Max( ( FirstVNF_Mem_Server / ACS ),ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUR - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( ACS / Max( ( FirstVNF_Mem_Server / ACS ),( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ) ) + ( DDR / MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( CRS / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - Max( RRSe,DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( ACS / Max( ( FirstVNF_Mem_Server / ACS ),( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ) ) + ( DDR / MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ( FirstVNF_Mem_Server / ACS ) ),Max( PN,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7658484557670558}], "43": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( ( ( Max( ( MRS / FirstVNF_CPU ),( FirstVNF_RAM_Server / FirstVNF_Mem ) ) - Min( ( BR + FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM,PN ) ) ) - ( ( ( DDR - FirstVNF_Mem_Server ) / ( FirstVNF_CPU_Server / AMS ) ) / ( ( ARS * FirstVNF_RAM_Server ) + ( FirstVNF_CPU + RRS ) ) ) ),Min( ( ( ( AMS - FirstVNF_Mem_Server ) * Min( PN ,FirstVNF_RAM_Server ) ) * ( ( FirstVNF_Mem * Const ) / ( DDR + Const ) ) ) ,( ( ( PN * FirstVNF_CPU ) + Max( BR,FirstVNF_CPU_Server ) ) - Min( ( ACS / ARS ) ,( MRS + BR ) ) ) ) ),( Min( ( ( ( FirstVNF_CPU_Server / FirstVNF_CPU ) - ( CRS - ARS ) ) * ( ( CRS * FirstVNF_RAM ) + ( ARS + PN ) ) ) ,( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,AMS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_CPU ) ,( MRS + BR ) ) ) ) + ( Min( Min( Max( FirstVNF_Mem,FirstVNF_RAM ) ,( MRS - FirstVNF_RAM ) ) ,( ( FirstVNF_CPU_Server - DDR ) / Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ) - Min( Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,Min( RRS ,MRS ) ) ,( Max( ACS,FirstVNF_RAM_Server ) * Min( Const ,FirstVNF_RAM ) ) ) ) ) ) * ( ( ( ( Max( Min( AMS ,BR ),( BR / FirstVNF_RAM_Server ) ) / Min( Max( FirstVNF_RAM_Server,DDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) / ( ( Min( BR ,FirstVNF_CPU ) + ( FirstVNF_CPU * BR ) ) / Min( ( CRS - FirstVNF_Mem ) ,( FirstVNF_RAM_Server * AMS ) ) ) ) * ( Max( Max( ( FirstVNF_CPU + ARS ),( ARS - FirstVNF_CPU_Server ) ),( Max( MRS,FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,RRS ) ) ) + ( ( Min( AMS ,MRS ) * ( PN / BR ) ) + ( ( FirstVNF_CPU_Server + RRS ) - Max( ARS,Const ) ) ) ) ) + ( ( ( Min( ( PN - FirstVNF_Mem_Server ) ,( Const / CRS ) ) * ( Min( ARS ,Const ) - ( PN * FirstVNF_Mem ) ) ) - Min( ( ( MDR / FirstVNF_Mem_Server ) * ( PN * BR ) ) ,( ( ARS * Const ) * Min( ACS ,AMS ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server - DDR ) / Min( FirstVNF_RAM ,AMS ) ) + Max( ( AMS - FirstVNF_Mem_Server ),( FirstVNF_Mem + AMS ) ) ) / ( ( ( BR / AMS ) + ( MRS / FirstVNF_RAM_Server ) ) - ( Max( FirstVNF_CPU,MRS ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ) ) ) ) ) + Min( ( ( ( Min( ( ( FirstVNF_CPU_Server - FirstVNF_Mem ) - ( AMS + FirstVNF_CPU_Server ) ) ,( Max( AMS,ACS ) - Max( MRS,DDR ) ) ) - ( ( ( ACS / AMS ) * ( BR / AMS ) ) - Min( ( ARS / MRS ) ,( MRS * Const ) ) ) ) * ( ( Min( ( FirstVNF_CPU + ARS ) ,Min( MRS ,FirstVNF_CPU ) ) + ( Max( ACS,FirstVNF_Mem ) - ( AMS / AMS ) ) ) - ( ( ( FirstVNF_RAM - FirstVNF_CPU ) * ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) - ( ( FirstVNF_RAM_Server + RRS ) - ( ARS - CRS ) ) ) ) ) + ( ( ( ( Max( Const,DDR ) * ( FirstVNF_CPU / FirstVNF_RAM ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) / ( RRS - PN ) ) ) * ( ( Max( FirstVNF_CPU,ACS ) + ( RRS - FirstVNF_Mem_Server ) ) - Min( ( RRS / Const ) ,( FirstVNF_RAM - BR ) ) ) ) + Min( ( ( Max( FirstVNF_Mem_Server,BR ) * ( Const * ACS ) ) / ( ( ARS / PN ) + Min( RRS ,ACS ) ) ) ,( ( ( RRS + FirstVNF_Mem_Server ) - Max( FirstVNF_Mem,MRS ) ) - ( ( CRS * FirstVNF_Mem_Server ) * ( CRS + PN ) ) ) ) ) ) ,Min( ( Max( ( Max( ( MRS * RRS ),Max( ARS,ACS ) ) / Max( Max( CRS,BR ),( FirstVNF_RAM + CRS ) ) ),( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) / Min( ( AMS - ACS ) ,( RRS + RRS ) ) ) ) * ( Min( Min( ( FirstVNF_CPU / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ,( Min( FirstVNF_RAM ,MDR ) / Min( RRS ,BR ) ) ) / ( ( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server * MRS ) ) + Max( ( DDR - FirstVNF_RAM_Server ),( BR / MDR ) ) ) ) ) ,( Max( ( ( ( MDR + FirstVNF_CPU ) + Max( RRS,FirstVNF_CPU_Server ) ) * ( ( MDR / BR ) + ( FirstVNF_Mem / FirstVNF_CPU ) ) ),( Min( ( AMS - ARS ) ,( ARS - FirstVNF_RAM_Server ) ) * Max( ( ACS * MDR ),Min( FirstVNF_Mem_Server ,PN ) ) ) ) - Min( Max( Max( Min( MDR ,FirstVNF_RAM_Server ),Min( PN ,Const ) ),Max( ( BR / FirstVNF_Mem_Server ),Max( BR,FirstVNF_CPU ) ) ) ,Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) + ( MRS + AMS ) ),( ( PN / PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) ) ) ) ) )", "choosing": "( ( MUC + RMSe ) + ( ( RRSe * CS ) * ( MLU * MUR ) ) )", "obj1": 0.950207468879668, "obj2": 0.05272374843015086}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) ) / MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1078838174273859, "obj2": 0.7008305597707503}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) ) - RRSe )", "obj1": 0.2863070539419087, "obj2": 0.6302509739870613}, {"determining": "( ( ( ( ( ( ( ( DDR + ARS ) + Min( FirstVNF_RAM_Server ,Const ) ) * ( ( FirstVNF_RAM_Server + CRS ) - ( FirstVNF_RAM + AMS ) ) ) / Min( ( Min( CRS ,FirstVNF_RAM ) - ( FirstVNF_CPU * CRS ) ) ,( Min( MRS ,Const ) / Max( ARS,FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( FirstVNF_Mem_Server - CRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) + ( ( CRS - CRS ) + Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) ) - ( ( ( DDR / CRS ) - Max( FirstVNF_RAM,PN ) ) / ( ( BR + FirstVNF_Mem ) - Max( AMS,FirstVNF_RAM_Server ) ) ) ) ) + ( ( ( ( ( RRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server - ARS ) ) / ( ( DDR * BR ) + Max( FirstVNF_Mem,AMS ) ) ) * Min( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) + Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ,Max( ( FirstVNF_Mem + RRS ),( RRS + ARS ) ) ) ) - Max( ( ( Max( FirstVNF_Mem_Server,MRS ) - ( FirstVNF_RAM_Server * CRS ) ) + Max( Max( Const,FirstVNF_CPU_Server ),( CRS * DDR ) ) ),Min( Min( Max( DDR,MDR ) ,Max( AMS,PN ) ) ,( Min( MDR ,MRS ) / ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) ) ) * ( Min( Min( ( ( Min( ARS ,RRS ) * ( FirstVNF_Mem_Server * ARS ) ) * ( ( RRS * MDR ) / ( AMS / PN ) ) ) ,( Min( ( MRS * FirstVNF_Mem ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) - ( ( ACS - MDR ) - ( BR * DDR ) ) ) ) ,( Min( Max( ( FirstVNF_RAM * ACS ),( FirstVNF_CPU + MDR ) ) ,( ( FirstVNF_Mem / CRS ) * ( Const * ARS ) ) ) / Min( Max( Min( FirstVNF_Mem_Server ,Const ),Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ,Max( ( MRS * MRS ),Min( DDR ,RRS ) ) ) ) ) - ( Min( ( ( ( FirstVNF_Mem_Server + MRS ) / ( PN / CRS ) ) - ( ( ACS + FirstVNF_RAM_Server ) * ( Const / MDR ) ) ) ,( ( Min( Const ,FirstVNF_Mem_Server ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem ,Const ) * ( DDR / ACS ) ) ) ) + Min( ( ( Max( MDR,MRS ) / Max( ARS,MRS ) ) / ( ( BR - DDR ) * ( MRS - FirstVNF_CPU_Server ) ) ) ,( ( Min( Const ,BR ) - ( MDR + ACS ) ) - ( ( FirstVNF_RAM - DDR ) / ( PN + FirstVNF_RAM ) ) ) ) ) ) ) * ( ( ( ( ( Max( ( FirstVNF_CPU + Const ),( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) / ( ( MRS + ACS ) * Max( RRS,FirstVNF_Mem_Server ) ) ) / ( ( Max( DDR,MRS ) - ( MDR / ACS ) ) + ( Max( BR,FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server - CRS ) ) ) ) + ( ( Min( Min( DDR ,FirstVNF_Mem_Server ) ,( FirstVNF_CPU * FirstVNF_Mem ) ) + ( Max( CRS,FirstVNF_Mem_Server ) - ( Const + AMS ) ) ) - ( ( ( PN * FirstVNF_CPU ) + ( DDR + FirstVNF_Mem ) ) - ( ( Const + FirstVNF_Mem_Server ) - ( RRS + RRS ) ) ) ) ) / ( Min( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) + Max( PN,PN ) ) + ( Max( MDR,MRS ) - ( FirstVNF_Mem_Server + MDR ) ) ) ,( ( ( FirstVNF_CPU_Server * CRS ) + ( MRS - PN ) ) * Max( ( Const + FirstVNF_Mem_Server ),( ACS - FirstVNF_Mem ) ) ) ) * ( ( Max( Max( PN,MRS ),( ARS + Const ) ) / ( Max( MDR,FirstVNF_RAM ) - ( ARS * ARS ) ) ) / ( ( ( MRS - AMS ) - ( ACS / FirstVNF_CPU ) ) - ( Max( Const,MDR ) / Max( ARS,FirstVNF_CPU ) ) ) ) ) ) + ( ( ( ( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),Max( FirstVNF_Mem,ARS ) ) + ( Max( RRS,DDR ) - ( FirstVNF_Mem / MRS ) ) ) - Max( ( ( FirstVNF_RAM_Server - ACS ) / ( MDR + FirstVNF_Mem_Server ) ),( ( ARS * FirstVNF_RAM_Server ) * Max( FirstVNF_RAM,AMS ) ) ) ) + ( ( Max( ( AMS - FirstVNF_CPU ),( AMS / AMS ) ) - ( ( FirstVNF_RAM + FirstVNF_RAM ) + ( DDR - FirstVNF_Mem ) ) ) / ( ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) / ( BR - RRS ) ) - ( ( FirstVNF_Mem - DDR ) / Min( FirstVNF_CPU_Server ,Const ) ) ) ) ) - ( ( ( ( ( MRS * FirstVNF_RAM ) / Max( Const,PN ) ) - ( ( RRS - DDR ) / ( MRS - PN ) ) ) / Max( ( Min( MRS ,Const ) - Max( FirstVNF_CPU_Server,DDR ) ),Min( ( CRS + FirstVNF_CPU_Server ) ,( CRS + FirstVNF_RAM_Server ) ) ) ) / Max( ( ( Max( ARS,FirstVNF_RAM_Server ) - Min( BR ,CRS ) ) * ( ( FirstVNF_CPU_Server + CRS ) + ( MDR / Const ) ) ),( Max( ( DDR / RRS ),( FirstVNF_RAM_Server - Const ) ) + ( Max( PN,FirstVNF_Mem ) + Max( RRS,ARS ) ) ) ) ) ) ) )", "choosing": "( Max( ( Max( ( Min( ( ( RCSe / RMSe ) + Min( RCSe ,MUC ) ) ,( Min( MUM ,RCSe ) / Min( RMSe ,DS ) ) ) / ( ( ( MLU + DS ) / ( RRSe - MUR ) ) / Max( Max( MLU,RMSe ),Min( MLU ,RRSe ) ) ) ),( Min( ( ( MUM - MUM ) / Max( DS,MUM ) ) ,( ( CS + MUC ) - ( RMSe + MLU ) ) ) + ( ( ( MLU / MUR ) * ( RRSe * MUC ) ) + ( ( RMSe / RCSe ) / ( MUR / MUR ) ) ) ) ) * Min( ( Max( Min( ( RRSe * RCSe ) ,( RCSe + RCSe ) ),( ( DS + RRSe ) - ( CS / RMSe ) ) ) - ( Min( Min( RCSe ,MUR ) ,( MUR - MUC ) ) * ( Max( MLU,MLU ) / Min( RMSe ,DS ) ) ) ) ,Min( Max( Max( Max( MUC,RRSe ),Min( RRSe ,MLU ) ),( ( MUM - MUM ) / Max( RRSe,DS ) ) ) ,( ( ( RRSe / MUM ) * Min( RRSe ,DS ) ) / ( ( MUR / RRSe ) * Max( MLU,RMSe ) ) ) ) ) ),( Min( ( Max( Min( Max( RCSe,MUR ) ,Min( DS ,MUR ) ),( Max( RCSe,MUC ) / Min( MLU ,DS ) ) ) - Min( ( ( MUM - MUC ) - ( RRSe / MUC ) ) ,( Max( CS,RRSe ) / Max( RCSe,RMSe ) ) ) ) ,Max( ( ( ( MUR + MUR ) / ( RCSe - RMSe ) ) + Min( Min( RMSe ,MLU ) ,( RMSe - DS ) ) ),Min( Max( ( RMSe - MUR ),( RRSe - MUM ) ) ,( ( MUM / RCSe ) + Max( RCSe,MUC ) ) ) ) ) * Min( Max( ( ( ( MLU - MUM ) - ( MLU + RCSe ) ) / ( Max( CS,CS ) + Max( RCSe,RRSe ) ) ),Max( Min( ( RMSe - MUR ) ,Min( RMSe ,CS ) ),( Max( MUM,RCSe ) / ( RCSe + RRSe ) ) ) ) ,( ( ( Max( RMSe,MUC ) * Min( RCSe ,RCSe ) ) + ( ( CS / RCSe ) / ( RRSe + RRSe ) ) ) + ( ( ( DS / DS ) + ( RCSe - RRSe ) ) * ( Max( MUC,MUC ) + Min( DS ,CS ) ) ) ) ) ) ) / ( Max( ( ( ( ( ( RRSe + MUC ) / Min( RCSe ,DS ) ) - ( ( CS - CS ) * ( RRSe / RMSe ) ) ) - ( ( ( MLU * RCSe ) / Min( RCSe ,MUC ) ) + Max( ( RMSe + RRSe ),( MUM / MLU ) ) ) ) / ( Max( ( ( MUC - RMSe ) + ( RMSe / MUM ) ),( ( MUM / DS ) / ( MUR * MUR ) ) ) + Min( ( ( CS - MLU ) + Min( RMSe ,CS ) ) ,Max( ( RCSe + MUR ),Max( CS,MUR ) ) ) ) ),( ( ( ( Min( RCSe ,CS ) / Min( DS ,MUR ) ) - ( ( CS * RRSe ) - ( RCSe / CS ) ) ) - ( ( ( RMSe - RCSe ) / Min( RCSe ,MUM ) ) / Min( Max( MLU,MLU ) ,( RRSe * MUM ) ) ) ) * ( ( Min( ( DS * RCSe ) ,( MLU / MUR ) ) * ( ( MLU - CS ) - ( MUR + MUC ) ) ) * ( ( ( RMSe + MLU ) / ( RCSe - MLU ) ) * Min( ( DS / MUR ) ,Min( CS ,MUM ) ) ) ) ) ) - ( ( Max( ( ( ( RCSe + RMSe ) - ( RMSe / RMSe ) ) + ( ( MLU / MUR ) * Min( MUC ,MLU ) ) ),( Max( ( DS * MUM ),( MUC + RRSe ) ) + ( ( MLU - MUR ) - Min( RCSe ,MUR ) ) ) ) * ( ( Max( ( MUM + CS ),Min( CS ,MUR ) ) * Max( ( MUM + CS ),Min( CS ,DS ) ) ) * Min( ( Min( MLU ,DS ) / ( DS / RCSe ) ) ,( ( MUM * RRSe ) / Max( RCSe,DS ) ) ) ) ) - ( ( Max( Max( ( CS * MUR ),( DS + MUR ) ),( ( RCSe + MLU ) * Min( MUR ,CS ) ) ) * ( ( ( CS / MUM ) - ( MUM - MUR ) ) + Min( Max( MUR,DS ) ,Max( RMSe,RRSe ) ) ) ) + ( ( ( Min( RCSe ,MUM ) + ( MUR - RRSe ) ) / ( ( MLU / MUR ) * Min( MUM ,MUC ) ) ) * ( Min( ( MUR * MLU ) ,( MLU - MUC ) ) / ( ( DS * MUR ) - ( RCSe / DS ) ) ) ) ) ) ) )", "obj1": 0.34024896265560167, "obj2": 0.5517132881073181}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * ( RRSe - DS ) ) * DS ) ) - RRSe )", "obj1": 0.1908713692946058, "obj2": 0.6482698979824754}, {"determining": "( ( FirstVNF_RAM_Server * Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) - DS ) * DS ) ) - RRSe )", "obj1": 0.1991701244813278, "obj2": 0.6353160508612061}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( AMS / ACS ) / ( ( ACS / ACS ) * Max( AMS,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( MUC - ( ( Max( ( DS - ( RMSe - RMSe ) ),RRSe ) * MUM ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( ( ( FirstVNF_Mem_Server / ACS ) / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7567220241592852}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) * Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) - RRSe )", "obj1": 0.18464730290456433, "obj2": 0.6768128318428981}, {"determining": "( ( BR / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( DDR * FirstVNF_CPU ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - MUR )", "obj1": 0.08091286307053942, "obj2": 0.7640380726413522}, {"determining": "( ( MDR / FirstVNF_Mem_Server ) + ( ( DDR * FirstVNF_CPU ) + ( BR / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - ( RRSe - DS ) ) ),RRSe ) + DS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7572878225475821}, {"determining": "( ( FirstVNF_RAM_Server * Max( ( FirstVNF_Mem_Server / ACS ),Max( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ),ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR * AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( Max( ( RRSe - DS ),( RRSe - DS ) ),MUM ) * DS ) * DS ) ) - RRSe )", "obj1": 0.0975103734439834, "obj2": 0.7556978751798651}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe - ( RMSe - ( RRSe - DS ) ) ) - RRSe )", "obj1": 0.0995850622406639, "obj2": 0.7493337417942427}, {"determining": "( Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - ( RRSe / DS ) )", "obj1": 0.3921161825726141, "obj2": 0.5431776173086491}], "44": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( ( ( Max( ( MRS / FirstVNF_CPU ),( FirstVNF_RAM_Server / FirstVNF_Mem ) ) - Min( ( BR + FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM,PN ) ) ) - ( ( ( DDR - FirstVNF_Mem_Server ) / ( FirstVNF_CPU_Server / AMS ) ) / ( ( ARS * FirstVNF_RAM_Server ) + ( FirstVNF_CPU + RRS ) ) ) ),Min( ( ( ( AMS - FirstVNF_Mem_Server ) * Min( PN ,FirstVNF_RAM_Server ) ) * ( ( FirstVNF_Mem * Const ) / ( DDR + Const ) ) ) ,( ( ( PN * FirstVNF_CPU ) + Max( BR,FirstVNF_CPU_Server ) ) - Min( ( ACS / ARS ) ,( MRS + BR ) ) ) ) ),( Min( ( ( ( FirstVNF_CPU_Server / FirstVNF_CPU ) - ( CRS - ARS ) ) * ( ( CRS * FirstVNF_RAM ) + ( ARS + PN ) ) ) ,( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,AMS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_CPU ) ,( MRS + BR ) ) ) ) + ( Min( Min( Max( FirstVNF_Mem,FirstVNF_RAM ) ,( MRS - FirstVNF_RAM ) ) ,( ( FirstVNF_CPU_Server - DDR ) / Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ) - Min( Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,Min( RRS ,MRS ) ) ,( Max( ACS,FirstVNF_RAM_Server ) * Min( Const ,FirstVNF_RAM ) ) ) ) ) ) * ( ( ( ( Max( Min( AMS ,BR ),( BR / FirstVNF_RAM_Server ) ) / Min( Max( FirstVNF_RAM_Server,DDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) / ( ( Min( BR ,FirstVNF_CPU ) + ( FirstVNF_CPU * BR ) ) / Min( ( CRS - FirstVNF_Mem ) ,( FirstVNF_RAM_Server * AMS ) ) ) ) * ( Max( Max( ( FirstVNF_CPU + ARS ),( ARS - FirstVNF_CPU_Server ) ),( Max( MRS,FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,RRS ) ) ) + ( ( Min( AMS ,MRS ) * ( PN / BR ) ) + ( ( FirstVNF_CPU_Server + RRS ) - Max( ARS,Const ) ) ) ) ) + ( ( ( Min( ( PN - FirstVNF_Mem_Server ) ,( Const / CRS ) ) * ( Min( ARS ,Const ) - ( PN * FirstVNF_Mem ) ) ) - Min( ( ( MDR / FirstVNF_Mem_Server ) * ( PN * BR ) ) ,( ( ARS * Const ) * Min( ACS ,AMS ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server - DDR ) / Min( FirstVNF_RAM ,AMS ) ) + Max( ( AMS - FirstVNF_Mem_Server ),( FirstVNF_Mem + AMS ) ) ) / ( ( ( BR / AMS ) + ( MRS / FirstVNF_RAM_Server ) ) - ( Max( FirstVNF_CPU,MRS ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ) ) ) ) ) + Min( ( ( ( Min( ( ( FirstVNF_CPU_Server - FirstVNF_Mem ) - ( AMS + FirstVNF_CPU_Server ) ) ,( Max( AMS,ACS ) - Max( MRS,DDR ) ) ) - ( ( ( ACS / AMS ) * ( BR / AMS ) ) - Min( ( ARS / MRS ) ,( MRS * Const ) ) ) ) * ( ( Min( ( FirstVNF_CPU + ARS ) ,Min( MRS ,FirstVNF_CPU ) ) + ( Max( ACS,FirstVNF_Mem ) - ( AMS / AMS ) ) ) - ( ( ( FirstVNF_RAM - FirstVNF_CPU ) * ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) - ( ( FirstVNF_RAM_Server + RRS ) - ( ARS - CRS ) ) ) ) ) + ( ( ( ( Max( Const,DDR ) * ( FirstVNF_CPU / FirstVNF_RAM ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) / ( RRS - PN ) ) ) * ( ( Max( FirstVNF_CPU,ACS ) + ( RRS - FirstVNF_Mem_Server ) ) - Min( ( RRS / Const ) ,( FirstVNF_RAM - BR ) ) ) ) + Min( ( ( Max( FirstVNF_Mem_Server,BR ) * ( Const * ACS ) ) / ( ( ARS / PN ) + Min( RRS ,ACS ) ) ) ,( ( ( RRS + FirstVNF_Mem_Server ) - Max( FirstVNF_Mem,MRS ) ) - ( ( CRS * FirstVNF_Mem_Server ) * ( CRS + PN ) ) ) ) ) ) ,Min( ( Max( ( Max( ( MRS * RRS ),Max( ARS,ACS ) ) / Max( Max( CRS,BR ),( FirstVNF_RAM + CRS ) ) ),( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) / Min( ( AMS - ACS ) ,( RRS + RRS ) ) ) ) * ( Min( Min( ( FirstVNF_CPU / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ,( Min( FirstVNF_RAM ,MDR ) / Min( RRS ,BR ) ) ) / ( ( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server * MRS ) ) + Max( ( DDR - FirstVNF_RAM_Server ),( BR / MDR ) ) ) ) ) ,( Max( ( ( ( MDR + FirstVNF_CPU ) + Max( RRS,FirstVNF_CPU_Server ) ) * ( ( MDR / BR ) + ( FirstVNF_Mem / FirstVNF_CPU ) ) ),( Min( ( AMS - ARS ) ,( ARS - FirstVNF_RAM_Server ) ) * Max( ( ACS * MDR ),Min( FirstVNF_Mem_Server ,PN ) ) ) ) - Min( Max( Max( Min( MDR ,FirstVNF_RAM_Server ),Min( PN ,Const ) ),Max( ( BR / FirstVNF_Mem_Server ),Max( BR,FirstVNF_CPU ) ) ) ,Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) + ( MRS + AMS ) ),( ( PN / PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) ) ) ) ) )", "choosing": "( ( MUC + RMSe ) + ( ( RRSe * CS ) * ( MLU * MUR ) ) )", "obj1": 0.950207468879668, "obj2": 0.05272374843015086}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) ) / MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1078838174273859, "obj2": 0.7008305597707503}, {"determining": "( ( ( ( ( ( ( ( DDR + ARS ) + Min( FirstVNF_RAM_Server ,Const ) ) * ( ( FirstVNF_RAM_Server + CRS ) - ( FirstVNF_RAM + AMS ) ) ) / Min( ( Min( CRS ,FirstVNF_RAM ) - ( FirstVNF_CPU * CRS ) ) ,( Min( MRS ,Const ) / Max( ARS,FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( FirstVNF_Mem_Server - CRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) + ( ( CRS - CRS ) + Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) ) - ( ( ( DDR / CRS ) - Max( FirstVNF_RAM,PN ) ) / ( ( BR + FirstVNF_Mem ) - Max( AMS,FirstVNF_RAM_Server ) ) ) ) ) + ( ( ( ( ( RRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server - ARS ) ) / ( ( DDR * BR ) + Max( FirstVNF_Mem,AMS ) ) ) * Min( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) + Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ,Max( ( FirstVNF_Mem + RRS ),( RRS + ARS ) ) ) ) - Max( ( ( Max( FirstVNF_Mem_Server,MRS ) - ( FirstVNF_RAM_Server * CRS ) ) + Max( Max( Const,FirstVNF_CPU_Server ),( CRS * DDR ) ) ),Min( Min( Max( DDR,MDR ) ,Max( AMS,PN ) ) ,( Min( MDR ,MRS ) / ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) ) ) * ( Min( Min( ( ( Min( ARS ,RRS ) * ( FirstVNF_Mem_Server * ARS ) ) * ( ( RRS * MDR ) / ( AMS / PN ) ) ) ,( Min( ( MRS * FirstVNF_Mem ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) - ( ( ACS - MDR ) - ( BR * DDR ) ) ) ) ,( Min( Max( ( FirstVNF_RAM * ACS ),( FirstVNF_CPU + MDR ) ) ,( ( FirstVNF_Mem / CRS ) * ( Const * ARS ) ) ) / Min( Max( Min( FirstVNF_Mem_Server ,Const ),Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ,Max( ( MRS * MRS ),Min( DDR ,RRS ) ) ) ) ) - ( Min( ( ( ( FirstVNF_Mem_Server + MRS ) / ( PN / CRS ) ) - ( ( ACS + FirstVNF_RAM_Server ) * ( Const / MDR ) ) ) ,( ( Min( Const ,FirstVNF_Mem_Server ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem ,Const ) * ( DDR / ACS ) ) ) ) + Min( ( ( Max( MDR,MRS ) / Max( ARS,MRS ) ) / ( ( BR - DDR ) * ( MRS - FirstVNF_CPU_Server ) ) ) ,( ( Min( Const ,BR ) - ( MDR + ACS ) ) - ( ( FirstVNF_RAM - DDR ) / ( PN + FirstVNF_RAM ) ) ) ) ) ) ) * ( ( ( ( ( Max( ( FirstVNF_CPU + Const ),( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) / ( ( MRS + ACS ) * Max( RRS,FirstVNF_Mem_Server ) ) ) / ( ( Max( DDR,MRS ) - ( MDR / ACS ) ) + ( Max( BR,FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server - CRS ) ) ) ) + ( ( Min( Min( DDR ,FirstVNF_Mem_Server ) ,( FirstVNF_CPU * FirstVNF_Mem ) ) + ( Max( CRS,FirstVNF_Mem_Server ) - ( Const + AMS ) ) ) - ( ( ( PN * FirstVNF_CPU ) + ( DDR + FirstVNF_Mem ) ) - ( ( Const + FirstVNF_Mem_Server ) - ( RRS + RRS ) ) ) ) ) / ( Min( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) + Max( PN,PN ) ) + ( Max( MDR,MRS ) - ( FirstVNF_Mem_Server + MDR ) ) ) ,( ( ( FirstVNF_CPU_Server * CRS ) + ( MRS - PN ) ) * Max( ( Const + FirstVNF_Mem_Server ),( ACS - FirstVNF_Mem ) ) ) ) * ( ( Max( Max( PN,MRS ),( ARS + Const ) ) / ( Max( MDR,FirstVNF_RAM ) - ( ARS * ARS ) ) ) / ( ( ( MRS - AMS ) - ( ACS / FirstVNF_CPU ) ) - ( Max( Const,MDR ) / Max( ARS,FirstVNF_CPU ) ) ) ) ) ) + ( ( ( ( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),Max( FirstVNF_Mem,ARS ) ) + ( Max( RRS,DDR ) - ( FirstVNF_Mem / MRS ) ) ) - Max( ( ( FirstVNF_RAM_Server - ACS ) / ( MDR + FirstVNF_Mem_Server ) ),( ( ARS * FirstVNF_RAM_Server ) * Max( FirstVNF_RAM,AMS ) ) ) ) + ( ( Max( ( AMS - FirstVNF_CPU ),( AMS / AMS ) ) - ( ( FirstVNF_RAM + FirstVNF_RAM ) + ( DDR - FirstVNF_Mem ) ) ) / ( ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) / ( BR - RRS ) ) - ( ( FirstVNF_Mem - DDR ) / Min( FirstVNF_CPU_Server ,Const ) ) ) ) ) - ( ( ( ( ( MRS * FirstVNF_RAM ) / Max( Const,PN ) ) - ( ( RRS - DDR ) / ( MRS - PN ) ) ) / Max( ( Min( MRS ,Const ) - Max( FirstVNF_CPU_Server,DDR ) ),Min( ( CRS + FirstVNF_CPU_Server ) ,( CRS + FirstVNF_RAM_Server ) ) ) ) / Max( ( ( Max( ARS,FirstVNF_RAM_Server ) - Min( BR ,CRS ) ) * ( ( FirstVNF_CPU_Server + CRS ) + ( MDR / Const ) ) ),( Max( ( DDR / RRS ),( FirstVNF_RAM_Server - Const ) ) + ( Max( PN,FirstVNF_Mem ) + Max( RRS,ARS ) ) ) ) ) ) ) )", "choosing": "( Max( ( Max( ( Min( ( ( RCSe / RMSe ) + Min( RCSe ,MUC ) ) ,( Min( MUM ,RCSe ) / Min( RMSe ,DS ) ) ) / ( ( ( MLU + DS ) / ( RRSe - MUR ) ) / Max( Max( MLU,RMSe ),Min( MLU ,RRSe ) ) ) ),( Min( ( ( MUM - MUM ) / Max( DS,MUM ) ) ,( ( CS + MUC ) - ( RMSe + MLU ) ) ) + ( ( ( MLU / MUR ) * ( RRSe * MUC ) ) + ( ( RMSe / RCSe ) / ( MUR / MUR ) ) ) ) ) * Min( ( Max( Min( ( RRSe * RCSe ) ,( RCSe + RCSe ) ),( ( DS + RRSe ) - ( CS / RMSe ) ) ) - ( Min( Min( RCSe ,MUR ) ,( MUR - MUC ) ) * ( Max( MLU,MLU ) / Min( RMSe ,DS ) ) ) ) ,Min( Max( Max( Max( MUC,RRSe ),Min( RRSe ,MLU ) ),( ( MUM - MUM ) / Max( RRSe,DS ) ) ) ,( ( ( RRSe / MUM ) * Min( RRSe ,DS ) ) / ( ( MUR / RRSe ) * Max( MLU,RMSe ) ) ) ) ) ),( Min( ( Max( Min( Max( RCSe,MUR ) ,Min( DS ,MUR ) ),( Max( RCSe,MUC ) / Min( MLU ,DS ) ) ) - Min( ( ( MUM - MUC ) - ( RRSe / MUC ) ) ,( Max( CS,RRSe ) / Max( RCSe,RMSe ) ) ) ) ,Max( ( ( ( MUR + MUR ) / ( RCSe - RMSe ) ) + Min( Min( RMSe ,MLU ) ,( RMSe - DS ) ) ),Min( Max( ( RMSe - MUR ),( RRSe - MUM ) ) ,( ( MUM / RCSe ) + Max( RCSe,MUC ) ) ) ) ) * Min( Max( ( ( ( MLU - MUM ) - ( MLU + RCSe ) ) / ( Max( CS,CS ) + Max( RCSe,RRSe ) ) ),Max( Min( ( RMSe - MUR ) ,Min( RMSe ,CS ) ),( Max( MUM,RCSe ) / ( RCSe + RRSe ) ) ) ) ,( ( ( Max( RMSe,MUC ) * Min( RCSe ,RCSe ) ) + ( ( CS / RCSe ) / ( RRSe + RRSe ) ) ) + ( ( ( DS / DS ) + ( RCSe - RRSe ) ) * ( Max( MUC,MUC ) + Min( DS ,CS ) ) ) ) ) ) ) / ( Max( ( ( ( ( ( RRSe + MUC ) / Min( RCSe ,DS ) ) - ( ( CS - CS ) * ( RRSe / RMSe ) ) ) - ( ( ( MLU * RCSe ) / Min( RCSe ,MUC ) ) + Max( ( RMSe + RRSe ),( MUM / MLU ) ) ) ) / ( Max( ( ( MUC - RMSe ) + ( RMSe / MUM ) ),( ( MUM / DS ) / ( MUR * MUR ) ) ) + Min( ( ( CS - MLU ) + Min( RMSe ,CS ) ) ,Max( ( RCSe + MUR ),Max( CS,MUR ) ) ) ) ),( ( ( ( Min( RCSe ,CS ) / Min( DS ,MUR ) ) - ( ( CS * RRSe ) - ( RCSe / CS ) ) ) - ( ( ( RMSe - RCSe ) / Min( RCSe ,MUM ) ) / Min( Max( MLU,MLU ) ,( RRSe * MUM ) ) ) ) * ( ( Min( ( DS * RCSe ) ,( MLU / MUR ) ) * ( ( MLU - CS ) - ( MUR + MUC ) ) ) * ( ( ( RMSe + MLU ) / ( RCSe - MLU ) ) * Min( ( DS / MUR ) ,Min( CS ,MUM ) ) ) ) ) ) - ( ( Max( ( ( ( RCSe + RMSe ) - ( RMSe / RMSe ) ) + ( ( MLU / MUR ) * Min( MUC ,MLU ) ) ),( Max( ( DS * MUM ),( MUC + RRSe ) ) + ( ( MLU - MUR ) - Min( RCSe ,MUR ) ) ) ) * ( ( Max( ( MUM + CS ),Min( CS ,MUR ) ) * Max( ( MUM + CS ),Min( CS ,DS ) ) ) * Min( ( Min( MLU ,DS ) / ( DS / RCSe ) ) ,( ( MUM * RRSe ) / Max( RCSe,DS ) ) ) ) ) - ( ( Max( Max( ( CS * MUR ),( DS + MUR ) ),( ( RCSe + MLU ) * Min( MUR ,CS ) ) ) * ( ( ( CS / MUM ) - ( MUM - MUR ) ) + Min( Max( MUR,DS ) ,Max( RMSe,RRSe ) ) ) ) + ( ( ( Min( RCSe ,MUM ) + ( MUR - RRSe ) ) / ( ( MLU / MUR ) * Min( MUM ,MUC ) ) ) * ( Min( ( MUR * MLU ) ,( MLU - MUC ) ) / ( ( DS * MUR ) - ( RCSe / DS ) ) ) ) ) ) ) )", "obj1": 0.34024896265560167, "obj2": 0.5517132881073181}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * ( RRSe - DS ) ) * DS ) ) - RRSe )", "obj1": 0.1908713692946058, "obj2": 0.6482698979824754}, {"determining": "( ( FirstVNF_RAM_Server * Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) - DS ) * DS ) ) - RRSe )", "obj1": 0.1991701244813278, "obj2": 0.6353160508612061}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( AMS / ACS ) / ( ( ACS / ACS ) * Max( AMS,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( MUC - ( ( Max( ( DS - ( RMSe - RMSe ) ),RRSe ) * MUM ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( ( BR / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( DDR * FirstVNF_CPU ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - MUR )", "obj1": 0.08091286307053942, "obj2": 0.7640380726413522}, {"determining": "( ( MDR / FirstVNF_Mem_Server ) + ( ( DDR * FirstVNF_CPU ) + ( BR / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - ( RRSe - DS ) ) ),RRSe ) + DS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7572878225475821}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe - ( RMSe - ( RRSe - DS ) ) ) - RRSe )", "obj1": 0.0995850622406639, "obj2": 0.7493337417942427}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( DDR,ACS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_Mem_Server,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) ) / MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * CS ) * ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) ) ) - RRSe )", "obj1": 0.17219917012448133, "obj2": 0.6523678112321003}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( PN + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.12863070539419086, "obj2": 0.6878187756812693}, {"determining": "( ( FirstVNF_RAM_Server / Min( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ) ,Max( DDR,ACS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( ( RRSe - RRSe ) - ( ( Min( ( RMSe - ( RRSe - CS ) ) ,RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.2095435684647303, "obj2": 0.6257496496556124}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RMSe - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1078838174273859, "obj2": 0.7008305597707503}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( DDR / PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * CRS ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe * ( ( Max( ( RMSe - ( RRSe - DS ) ),MUM ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1078838174273859, "obj2": 0.7008305597707503}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Max( DDR,( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ) ) * FirstVNF_CPU ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * ( ( RMSe - ( RRSe - DS ) ) - RRSe ) ) * DS ) ) - RRSe )", "obj1": 0.3360995850622407, "obj2": 0.5671159451990339}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) + ( ( DDR * FirstVNF_CPU ) + ( BR / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7572878225475821}, {"determining": "( ( PN + ( RRS - ( ( ACS / Max( ( ( FirstVNF_Mem_Server / ACS ) / ACS ),( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ) ) + ( DDR / MRS ) ) ) ) / Max( FirstVNF_Mem_Server,BR ) )", "choosing": "( ( MUM - RMSe ) * Max( ( RMSe - ( RRSe - DS ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( ( ( ( ( ( ( ( DDR + ARS ) + Min( FirstVNF_RAM_Server ,Const ) ) * ( ( FirstVNF_RAM_Server + CRS ) - ( FirstVNF_RAM + AMS ) ) ) / Min( ( Min( CRS ,FirstVNF_RAM ) - ( FirstVNF_CPU * CRS ) ) ,( Min( MRS ,Const ) / Max( ARS,FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( FirstVNF_Mem_Server - CRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) + ( ( CRS - CRS ) + Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) ) - ( ( ( DDR / CRS ) - Max( FirstVNF_RAM,PN ) ) / ( ( BR + FirstVNF_Mem ) - Max( AMS,FirstVNF_RAM_Server ) ) ) ) ) + ( ( ( ( ( RRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server - ARS ) ) / ( ( DDR * BR ) + Max( FirstVNF_Mem,AMS ) ) ) * Min( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) + Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ,Max( ( FirstVNF_Mem + RRS ),( RRS + ARS ) ) ) ) - Max( ( ( Max( FirstVNF_Mem_Server,MRS ) - ( FirstVNF_RAM_Server * CRS ) ) + Max( Max( Const,FirstVNF_CPU_Server ),( CRS * DDR ) ) ),Min( Min( Max( DDR,MDR ) ,Max( AMS,PN ) ) ,( Min( MDR ,MRS ) / ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) ) ) * ( Min( Min( ( ( Min( ARS ,RRS ) * ( FirstVNF_Mem_Server * ARS ) ) * ( ( RRS * MDR ) / ( AMS / PN ) ) ) ,( Min( ( MRS * FirstVNF_Mem ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) - ( ( ACS - MDR ) - ( BR * DDR ) ) ) ) ,( Min( Max( ( FirstVNF_RAM * ACS ),( FirstVNF_CPU + MDR ) ) ,( ( FirstVNF_Mem / CRS ) * ( Const * ARS ) ) ) / Min( Max( Min( FirstVNF_Mem_Server ,Const ),Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ,Max( ( MRS * MRS ),Min( DDR ,RRS ) ) ) ) ) - ( Min( ( ( ( FirstVNF_Mem_Server + MRS ) / ( PN / CRS ) ) - ( ( ACS + FirstVNF_RAM_Server ) * ( Const / MDR ) ) ) ,( ( Min( Const ,FirstVNF_Mem_Server ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem ,Const ) * ( DDR / ACS ) ) ) ) + Min( ( ( Max( MDR,MRS ) / Max( ARS,MRS ) ) / ( ( BR - DDR ) * ( MRS - FirstVNF_CPU_Server ) ) ) ,( ( Min( Const ,BR ) - ( MDR + ACS ) ) - ( ( FirstVNF_RAM - DDR ) / ( PN + FirstVNF_RAM ) ) ) ) ) ) ) * ( ( ( ( ( Max( ( FirstVNF_CPU + Const ),( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) / ( ( MRS + ACS ) * Max( RRS,FirstVNF_Mem_Server ) ) ) / ( ( Max( DDR,MRS ) - ( MDR / ACS ) ) + ( Max( BR,FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server - CRS ) ) ) ) + ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) ) / ( Min( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) + Max( PN,PN ) ) + ( Max( MDR,MRS ) - ( FirstVNF_Mem_Server + MDR ) ) ) ,( ( ( FirstVNF_CPU_Server * CRS ) + ( MRS - PN ) ) * Max( ( Const + FirstVNF_Mem_Server ),( ACS - FirstVNF_Mem ) ) ) ) / ( ( Max( Max( PN,MRS ),( ARS + Const ) ) / ( Max( MDR,FirstVNF_RAM ) - ( ARS * ARS ) ) ) / ( ( ( MRS - AMS ) - ( ACS / FirstVNF_CPU ) ) - ( Max( Const,MDR ) / Max( ARS,FirstVNF_CPU ) ) ) ) ) ) + ( ( ( ( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),Max( FirstVNF_Mem,ARS ) ) * ( Max( RRS,DDR ) - ( FirstVNF_Mem / MRS ) ) ) - Max( ( ( FirstVNF_RAM_Server - ACS ) / ( MDR + FirstVNF_Mem_Server ) ),( ( ARS * FirstVNF_RAM_Server ) * Max( FirstVNF_RAM,AMS ) ) ) ) + ( ( Max( ( AMS - FirstVNF_CPU ),( AMS / AMS ) ) - ( ( FirstVNF_RAM + FirstVNF_RAM ) + ( DDR - FirstVNF_Mem ) ) ) / ( ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) / ( BR - RRS ) ) - ( ( FirstVNF_Mem - DDR ) / Min( FirstVNF_CPU_Server ,Const ) ) ) ) ) - ( ( ( ( ( MRS * FirstVNF_RAM ) / Max( Const,PN ) ) - ( ( RRS - DDR ) / ( MRS - PN ) ) ) / Max( ( Min( MRS ,Const ) - Max( FirstVNF_CPU_Server,DDR ) ),Min( ( CRS + FirstVNF_CPU_Server ) ,( CRS + FirstVNF_RAM_Server ) ) ) ) / Max( ( ( Max( ARS,FirstVNF_RAM_Server ) - Min( BR ,CRS ) ) * ( ( FirstVNF_CPU_Server + CRS ) + ( MDR / Const ) ) ),( Max( ( DDR / RRS ),( FirstVNF_RAM_Server - Const ) ) + ( Max( PN,FirstVNF_Mem ) + Max( RRS,ARS ) ) ) ) ) ) ) )", "choosing": "( Max( ( Max( ( Min( ( ( RCSe / RMSe ) + Min( RCSe ,MUC ) ) ,( Min( MUM ,RCSe ) / Min( RMSe ,DS ) ) ) / ( ( ( MLU + DS ) / ( RRSe - MUR ) ) / Max( Max( MLU,RMSe ),Min( MLU ,RRSe ) ) ) ),( Min( ( ( MUM - MUM ) / Max( DS,MUM ) ) ,( ( CS + MUC ) - ( RMSe + MLU ) ) ) + ( ( ( MLU / MUR ) * ( RRSe * MUC ) ) + ( ( RMSe / RCSe ) / ( MUR / MUR ) ) ) ) ) * Min( ( Max( Min( ( RRSe * RCSe ) ,( RCSe + RCSe ) ),( ( DS + RRSe ) - ( CS / RMSe ) ) ) - ( Min( Min( RCSe ,MUR ) ,( MUR - MUC ) ) * ( Max( MLU,MLU ) + Min( RMSe ,DS ) ) ) ) ,Max( ( RMSe - ( RRSe - ( RRSe - DS ) ) ),RRSe ) ) ),( Min( ( Max( Min( Max( RCSe,MUR ) ,Min( DS ,MUR ) ),( Max( RCSe,MUC ) / Min( MLU ,DS ) ) ) - Min( ( ( MUM - MUC ) - ( RRSe / MUC ) ) ,( Max( CS,RRSe ) / Max( RCSe,RMSe ) ) ) ) ,Max( ( ( ( MUR + MUR ) / ( RCSe - RMSe ) ) + Min( Min( RMSe ,MLU ) ,( RMSe - DS ) ) ),Min( Max( ( RMSe - MUR ),( RRSe - MUM ) ) ,( ( MUM / RCSe ) + Max( RCSe,MUC ) ) ) ) ) * Min( Max( ( ( ( MLU - MUM ) - ( MLU + RCSe ) ) / ( Max( CS,CS ) + Max( RCSe,RRSe ) ) ),Max( Min( ( RMSe - MUR ) ,Min( RMSe ,CS ) ),( Max( MUM,RCSe ) / ( RCSe + RRSe ) ) ) ) ,( ( ( Max( RMSe,MUC ) * Min( RCSe ,RCSe ) ) + ( ( CS / RCSe ) / ( RRSe + RRSe ) ) ) + ( ( ( DS / DS ) + ( RCSe - RRSe ) ) * ( Max( MUC,MUC ) + Min( DS ,CS ) ) ) ) ) ) ) / ( Max( ( ( ( ( ( RRSe + MUC ) / Min( RCSe ,DS ) ) - ( ( CS - CS ) * ( RCSe / RMSe ) ) ) - ( ( ( MLU * RCSe ) / Min( RCSe ,MUC ) ) + Max( ( RMSe + RRSe ),( MUM / MLU ) ) ) ) / ( Max( ( ( MUC - RMSe ) + ( RMSe / MUM ) ),( ( MUM / DS ) / ( MUR * MUR ) ) ) + Min( ( ( CS - MLU ) + Min( RMSe ,CS ) ) ,Max( ( RCSe + MUR ),Max( CS,MUR ) ) ) ) ),( ( ( ( Min( RCSe ,CS ) / Min( DS ,MUR ) ) - ( ( CS * RRSe ) - ( RCSe / CS ) ) ) - ( ( ( RMSe - RCSe ) / Min( RCSe ,MUM ) ) / Min( Max( MLU,MLU ) ,( RRSe * MUM ) ) ) ) * ( ( Min( ( DS * RCSe ) ,( MLU / MUR ) ) * ( ( MLU - CS ) - ( MUR + MUC ) ) ) * ( ( ( RMSe + MLU ) / ( RCSe - MLU ) ) * Min( ( DS / MUR ) ,Min( CS ,MUM ) ) ) ) ) ) - ( ( Max( ( ( ( RCSe + RMSe ) - ( RMSe / RMSe ) ) + ( ( MLU / MUR ) * Min( MUC ,MLU ) ) ),( Max( ( DS * MUM ),( MUC + RRSe ) ) + ( ( MLU - MUR ) - Min( RCSe ,MUR ) ) ) ) * ( ( Max( ( MUM + CS ),Min( CS ,MUR ) ) * Max( ( MUM + CS ),Min( CS ,DS ) ) ) * Min( ( Min( MLU ,DS ) / ( DS / RCSe ) ) ,( ( MUM * RRSe ) / Max( RCSe,DS ) ) ) ) ) - ( ( Max( Max( ( CS * MUR ),( DS + MUR ) ),( ( RCSe + MLU ) * Min( MUR ,CS ) ) ) * ( ( ( CS / MUM ) - ( MUM - MUR ) ) + Min( Max( MUR,DS ) ,Max( RMSe,RRSe ) ) ) ) + ( ( ( Min( RCSe ,MUM ) + ( MUR - RRSe ) ) / ( ( MLU / MUR ) * Min( MUM ,MUC ) ) ) * ( Min( ( MUR * MLU ) ,( MLU - MUC ) ) / ( ( DS * MUR ) - ( RCSe / DS ) ) ) ) ) ) ) )", "obj1": 0.34439834024896265, "obj2": 0.5419554161651339}, {"determining": "( ( MDR / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Min( ( RMSe - ( RRSe - DS ) ) ,RRSe ) - DS ) * DS ) ) - RRSe )", "obj1": 0.1991701244813278, "obj2": 0.6353160508612061}, {"determining": "( ACS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7565313179915834}, {"determining": "( ( ( ( ( ( ( ( DDR + ARS ) + Min( FirstVNF_RAM_Server ,Const ) ) * ( ( FirstVNF_RAM_Server + CRS ) - ( FirstVNF_RAM + AMS ) ) ) / Min( ( Min( CRS ,FirstVNF_RAM ) - ( FirstVNF_CPU * CRS ) ) ,( Min( MRS ,Const ) / Max( ARS,FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( FirstVNF_Mem_Server - CRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) + ( ( CRS - CRS ) + Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) ) - ( ( ( DDR / CRS ) - Max( FirstVNF_RAM,PN ) ) / ( ( BR + FirstVNF_Mem ) - Max( AMS,FirstVNF_RAM_Server ) ) ) ) ) + ( ( ( ( ( RRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server - ARS ) ) / ( ( DDR * BR ) + Max( FirstVNF_Mem,AMS ) ) ) * Min( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) + Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ,Max( ( FirstVNF_Mem + RRS ),( RRS + ARS ) ) ) ) - Max( ( ( Max( FirstVNF_Mem_Server,MRS ) - ( FirstVNF_RAM_Server * CRS ) ) + Max( Max( Const,FirstVNF_CPU_Server ),( CRS * DDR ) ) ),Min( Min( Max( DDR,MDR ) ,Max( AMS,PN ) ) ,( Min( MDR ,MRS ) / ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) ) ) * ( Min( Min( ( ( Min( ARS ,RRS ) * ( FirstVNF_Mem_Server * ARS ) ) * ( ( RRS * MDR ) / ( AMS / PN ) ) ) ,( Min( ( MRS * FirstVNF_Mem ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) - ( ( ACS - MDR ) - ( BR * DDR ) ) ) ) ,( Min( Max( ( FirstVNF_RAM * ACS ),( FirstVNF_CPU + MDR ) ) ,( ( FirstVNF_Mem / CRS ) * ( Const * ARS ) ) ) / Min( Max( Min( FirstVNF_Mem_Server ,Const ),Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ,Max( ( MRS * MRS ),Min( DDR ,RRS ) ) ) ) ) - ( Min( ( ( ( FirstVNF_Mem_Server + MRS ) / ( PN / CRS ) ) - ( ( ACS + FirstVNF_RAM_Server ) * ( Const / MDR ) ) ) ,( ( Min( Const ,FirstVNF_Mem_Server ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem ,Const ) * ( DDR / ACS ) ) ) ) + Min( ( ( Max( MDR,MRS ) / Max( ARS,MRS ) ) / ( ( BR - DDR ) * ( MRS - FirstVNF_CPU_Server ) ) ) ,( ( Min( Const ,BR ) - ( MDR + ACS ) ) - ( ( FirstVNF_RAM - DDR ) / ( PN + FirstVNF_RAM ) ) ) ) ) ) ) * ( ( ( ( ( Max( ( FirstVNF_CPU + Const ),( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) / ( ( MRS + ACS ) * Max( RRS,FirstVNF_Mem_Server ) ) ) / ( ( Max( DDR,MRS ) - ( MDR / ACS ) ) + ( Max( BR,FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server - CRS ) ) ) ) + ( ( Min( Min( DDR ,FirstVNF_Mem_Server ) ,( FirstVNF_CPU * FirstVNF_Mem ) ) + ( Max( CRS,FirstVNF_Mem_Server ) - ( Const + AMS ) ) ) - ( ( ( PN * FirstVNF_CPU ) + ( DDR + FirstVNF_Mem ) ) - ( ( Const + FirstVNF_Mem_Server ) - ( RRS + RRS ) ) ) ) ) / ( Min( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) + Max( PN,PN ) ) + ( Max( MDR,MRS ) - ( FirstVNF_Mem_Server + MDR ) ) ) ,( ( ( FirstVNF_CPU_Server * CRS ) + ( MRS - PN ) ) * Max( ( Const + FirstVNF_Mem_Server ),( ACS - FirstVNF_Mem ) ) ) ) / ( ( Max( Max( PN,MRS ),( ARS + Const ) ) / ( Max( MDR,FirstVNF_RAM ) - ( ARS * ARS ) ) ) / ( ( ( MRS - AMS ) - ( ACS / FirstVNF_CPU ) ) - ( Max( Const,MDR ) / Max( ARS,FirstVNF_CPU ) ) ) ) ) ) + ( ( ( ( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),Max( FirstVNF_Mem,ARS ) ) + ( Max( ACS,DDR ) - ( FirstVNF_Mem / MRS ) ) ) - Max( ( ( FirstVNF_RAM_Server - ACS ) / ( MDR + FirstVNF_Mem_Server ) ),( ( ARS * FirstVNF_RAM_Server ) * Max( FirstVNF_RAM,AMS ) ) ) ) + ( ( Max( ( AMS - FirstVNF_CPU ),( AMS / AMS ) ) - ( ( FirstVNF_RAM + FirstVNF_RAM ) + ( DDR - FirstVNF_Mem ) ) ) / ( ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) / ( BR - RRS ) ) - ( ( FirstVNF_Mem - DDR ) / Min( FirstVNF_CPU_Server ,Const ) ) ) ) ) - ( ( ( ( ( MRS * FirstVNF_RAM ) / Max( Const,PN ) ) - ( ( RRS - DDR ) / ( MRS - PN ) ) ) / Max( ( Min( MRS ,Const ) - Max( FirstVNF_CPU_Server,DDR ) ),Min( ( CRS + FirstVNF_CPU_Server ) ,( CRS + FirstVNF_RAM_Server ) ) ) ) / Max( ( ( Max( ARS,FirstVNF_RAM_Server ) - Min( BR ,CRS ) ) * ( ( FirstVNF_CPU_Server + CRS ) + ( MDR / Const ) ) ),( Max( ( DDR / RRS ),( FirstVNF_RAM_Server - Const ) ) + ( Max( PN,FirstVNF_Mem ) + Max( RRS,ARS ) ) ) ) ) ) ) )", "choosing": "( Max( ( Max( ( Min( ( ( RCSe / RMSe ) + Min( RCSe ,MUC ) ) ,( Min( MUM ,RCSe ) / Min( RMSe ,DS ) ) ) / ( ( ( MLU + DS ) / ( RRSe - MUR ) ) / Max( Max( MLU,RMSe ),Min( MLU ,RRSe ) ) ) ),( Min( ( ( MUM - MUM ) / Max( DS,MUM ) ) ,( ( CS + MUC ) - ( RMSe + MLU ) ) ) + ( ( ( MLU / MUR ) * ( RRSe * MUC ) ) + ( ( RMSe / RCSe ) / ( MUR / MUR ) ) ) ) ) * Min( ( Max( Min( ( RRSe * RCSe ) ,( RCSe + RCSe ) ),( ( DS + RRSe ) - ( CS / RMSe ) ) ) - ( Min( Min( RCSe ,MUR ) ,( MUR - MUC ) ) * ( Max( MLU,MLU ) + Min( RMSe ,DS ) ) ) ) ,Min( Max( Max( Max( MUC,RRSe ),Min( RRSe ,MLU ) ),( ( MUM - MUM ) / Max( RRSe,DS ) ) ) ,( ( ( RRSe / MUM ) * Min( RRSe ,DS ) ) / ( ( MUR / RRSe ) * Max( MLU,RMSe ) ) ) ) ) ),( Min( ( Max( Min( Max( RCSe,MUR ) ,Min( DS ,MUR ) ),( Max( RCSe,MUC ) / Min( MLU ,DS ) ) ) - Min( ( ( MUM - MUC ) - ( RRSe / MUC ) ) ,( Max( CS,RRSe ) / Max( RCSe,RMSe ) ) ) ) ,Max( ( ( ( MUR + MUR ) / ( RCSe - RMSe ) ) + Min( Min( RMSe ,MLU ) ,( RMSe - DS ) ) ),Min( Max( ( RMSe - MUR ),( RRSe - MUM ) ) ,( ( MUM / RCSe ) + Max( RCSe,MUC ) ) ) ) ) * Min( Max( ( ( ( MLU - MUM ) - ( MLU + RCSe ) ) / ( Max( CS,CS ) + Max( RCSe,RRSe ) ) ),Max( Min( ( RMSe - MUR ) ,Min( RMSe ,CS ) ),( Max( MUM,RCSe ) / ( RCSe + RRSe ) ) ) ) ,( ( ( Max( RMSe,MUC ) * Min( RCSe ,RCSe ) ) + ( ( CS / RCSe ) / ( RRSe + RRSe ) ) ) + ( ( ( DS / DS ) + ( RCSe - RRSe ) ) * ( Max( MUC,MUC ) + Min( DS ,CS ) ) ) ) ) ) ) / ( Max( ( ( ( ( ( RRSe + MUC ) / Min( RCSe ,DS ) ) - ( ( CS - CS ) * ( RRSe / RMSe ) ) ) - ( ( ( MLU * RCSe ) / Min( RCSe ,MUC ) ) + Max( ( RMSe + RRSe ),( MUM / MLU ) ) ) ) / ( Max( ( ( MUC - RMSe ) + ( RMSe / MUM ) ),( ( MUM / DS ) / ( MUR * MUR ) ) ) + Min( ( ( CS - MLU ) + Min( RMSe ,CS ) ) ,Max( ( RCSe + MUR ),Max( CS,MUR ) ) ) ) ),( ( ( ( Min( RCSe ,CS ) / Min( DS ,MUR ) ) - ( ( RRSe * RRSe ) - ( RCSe / CS ) ) ) - ( ( ( RMSe - RCSe ) / Min( RCSe ,MUM ) ) / Min( Max( MLU,MLU ) ,( RRSe * MUM ) ) ) ) * ( ( Min( ( DS * RCSe ) ,( MLU / MUR ) ) * ( ( MLU - CS ) - ( MUR + MUC ) ) ) * ( ( ( RMSe + MLU ) / ( RCSe - MLU ) ) * Min( ( DS / MUR ) ,Min( CS ,MUM ) ) ) ) ) ) - ( ( Max( ( ( ( RCSe + RMSe ) - ( RMSe / RMSe ) ) + ( ( MLU / MUR ) * Min( MUC ,MLU ) ) ),( Max( ( DS * MUM ),( MUC + RRSe ) ) + ( ( MLU - MUR ) - Min( RCSe ,MUR ) ) ) ) * ( ( Max( ( MUM + CS ),Min( CS ,MUR ) ) * Max( ( MUM + CS ),Min( CS ,DS ) ) ) * Min( ( Min( MLU ,DS ) / ( DS / RCSe ) ) ,( ( MUM * RRSe ) / Max( RCSe,DS ) ) ) ) ) - ( ( Max( Max( ( CS * MUR ),( DS + MUR ) ),( ( RCSe + MLU ) * Min( MUR ,CS ) ) ) * ( ( ( CS / MUM ) - ( MUM - MUR ) ) + Min( Max( MUR,DS ) ,Max( RMSe,RRSe ) ) ) ) + ( ( ( Min( RCSe ,MUM ) + ( MUR - RRSe ) ) / ( ( MLU / MUR ) * Min( MUM ,MUC ) ) ) * ( Min( ( MUR * MLU ) ,( MLU - MUC ) ) / ( ( DS * MUR ) - ( RCSe / DS ) ) ) ) ) ) ) )", "obj1": 0.3153526970954357, "obj2": 0.5699261131834018}, {"determining": "( ( ( ( ( ( ( ( CRS * FirstVNF_RAM_Server ) / ( BR + BR ) ) + ( ( RRS + DDR ) - ( AMS + FirstVNF_Mem_Server ) ) ) - Min( ( ( Const * AMS ) * ( FirstVNF_RAM_Server + BR ) ) ,Min( ( MDR + CRS ) ,( MRS + PN ) ) ) ) / ( ( ( ( FirstVNF_Mem / BR ) - ( FirstVNF_CPU_Server + RRS ) ) * Min( Min( MRS ,ACS ) ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) - ( ( Min( BR ,Const ) - ( MRS - ACS ) ) - ( Min( ARS ,ACS ) + ( FirstVNF_Mem * RRS ) ) ) ) ) - ( ( ( ( ( ACS - FirstVNF_RAM ) - ( FirstVNF_RAM_Server / AMS ) ) - ( ( CRS - AMS ) - Min( PN ,Const ) ) ) / Min( Max( ( Const / ARS ),( CRS * ARS ) ) ,( Min( AMS ,FirstVNF_RAM_Server ) - ( Const * RRS ) ) ) ) / Max( Max( ( ( DDR * FirstVNF_RAM ) / ( RRS * MDR ) ),( Min( FirstVNF_CPU ,PN ) * ( ACS + RRS ) ) ),Max( ( ( RRS * FirstVNF_RAM ) - Min( MRS ,ACS ) ),( ( RRS * PN ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) ) ) / Max( ( Min( Min( Max( Max( FirstVNF_Mem,FirstVNF_Mem ),Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ,Min( Max( ACS,FirstVNF_CPU ) ,( FirstVNF_Mem_Server - RRS ) ) ) ,( ( ( PN - DDR ) + Max( DDR,MDR ) ) * Max( ( Const + ACS ),( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) ) / ( ( Max( Max( FirstVNF_RAM,ARS ),Min( PN ,BR ) ) - Max( Max( FirstVNF_Mem,BR ),Max( BR,FirstVNF_CPU_Server ) ) ) * ( ( Min( MDR ,FirstVNF_Mem_Server ) * ( FirstVNF_RAM - MRS ) ) / Min( ( RRS * MRS ) ,Min( Const ,FirstVNF_RAM ) ) ) ) ),( ( ( ( ( FirstVNF_CPU - Const ) * Max( DDR,FirstVNF_Mem ) ) - Min( Max( MDR,CRS ) ,Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) * ( ( ( MDR + BR ) / ( MRS + MRS ) ) / ( Max( CRS,ARS ) * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) ) - ( ( ( ( MRS / BR ) / Max( CRS,CRS ) ) + Max( ( FirstVNF_CPU_Server * RRS ),( CRS / FirstVNF_CPU_Server ) ) ) - Min( ( ( FirstVNF_RAM_Server - RRS ) + ( Const * RRS ) ) ,( ( FirstVNF_CPU_Server * ARS ) / ( DDR - FirstVNF_Mem_Server ) ) ) ) ) ) ) + ( ( ( ( ( ( ( PN + RRS ) + ( FirstVNF_RAM / ACS ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) * ( AMS * FirstVNF_RAM_Server ) ) ) / Min( ( Max( MDR,ARS ) * Min( ACS ,MRS ) ) ,( Max( FirstVNF_CPU,FirstVNF_CPU ) / ( FirstVNF_CPU_Server * BR ) ) ) ) - ( Max( ( ( ARS * FirstVNF_RAM ) * Max( DDR,FirstVNF_Mem ) ),Max( ( BR + CRS ),( CRS + FirstVNF_CPU_Server ) ) ) * ( Max( ( ACS / ARS ),Min( FirstVNF_RAM_Server ,PN ) ) / ( ( BR + DDR ) / ( MDR - CRS ) ) ) ) ) - ( ( Min( Max( Max( FirstVNF_RAM,FirstVNF_RAM_Server ),Min( ARS ,PN ) ) ,Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,( MRS / DDR ) ) ) * ( ( Min( ARS ,FirstVNF_CPU_Server ) - ( FirstVNF_RAM * BR ) ) - Min( Max( FirstVNF_CPU_Server,DDR ) ,Min( ARS ,CRS ) ) ) ) + Max( ( Max( Min( DDR ,MRS ),( AMS - PN ) ) - ( ( AMS - MDR ) - Min( Const ,ARS ) ) ),Min( ( ( FirstVNF_RAM_Server + ARS ) + ( FirstVNF_CPU / FirstVNF_RAM ) ) ,( Min( FirstVNF_RAM ,Const ) / ( FirstVNF_CPU - AMS ) ) ) ) ) ) * ( ( Min( ( Max( ( FirstVNF_CPU_Server - PN ),Max( CRS,AMS ) ) / Max( ( FirstVNF_RAM_Server + BR ),( ACS / ACS ) ) ) ,Max( ( ( FirstVNF_CPU * MRS ) + ( FirstVNF_RAM_Server - FirstVNF_RAM ) ),( Min( CRS ,BR ) + Min( DDR ,DDR ) ) ) ) + Max( ( Min( ( MDR - AMS ) ,( PN + ARS ) ) + ( ( FirstVNF_Mem_Server - RRS ) + Min( AMS ,FirstVNF_CPU ) ) ),( ( Max( DDR,FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) - ( Max( MDR,PN ) - ( Const / FirstVNF_Mem ) ) ) ) ) / ( ( ( ( Max( FirstVNF_RAM_Server,AMS ) * ( AMS / CRS ) ) / Max( Max( FirstVNF_CPU,MRS ),( BR / FirstVNF_CPU_Server ) ) ) * ( Min( Max( ARS,MRS ) ,( Const + RRS ) ) / ( ( PN * RRS ) + ( DDR + PN ) ) ) ) / ( ( ( ( FirstVNF_RAM_Server + ACS ) * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) * ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) / Max( Const,DDR ) ) ) + ( ( ( PN - DDR ) + ( FirstVNF_Mem / FirstVNF_Mem ) ) * ( ( Const / BR ) / ( RRS + FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( MUR - MUM ) / Max( MLU,( CS / CS ) ) )", "obj1": 0.7946058091286307, "obj2": 0.1486065053258644}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ACS / DDR ) )", "choosing": "( Max( RRSe,( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * ( RRSe - DS ) ) * DS ) ) - RRSe )", "obj1": 0.4605809128630705, "obj2": 0.4369531568214959}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) - DS ) * DS ) ) - RRSe )", "obj1": 0.1991701244813278, "obj2": 0.6353160508612061}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( ACS,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( ( Max( ( RMSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08921161825726141, "obj2": 0.7507147017125314}, {"determining": "( ( Max( Max( ( ( Max( ( MRS / FirstVNF_CPU ),( FirstVNF_RAM_Server / FirstVNF_Mem ) ) - Min( ( BR + FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM,PN ) ) ) - ( ( ( DDR - FirstVNF_Mem_Server ) / ( FirstVNF_CPU_Server / AMS ) ) / ( ( ARS * FirstVNF_RAM_Server ) + ( FirstVNF_CPU + RRS ) ) ) ),Min( ( ( ( AMS - FirstVNF_Mem_Server ) * Min( PN ,FirstVNF_RAM_Server ) ) * ( ( FirstVNF_Mem * Const ) / ( DDR + Const ) ) ) ,( ( ( PN * FirstVNF_CPU ) + Max( BR,FirstVNF_CPU_Server ) ) - Min( ( ACS / ARS ) ,( MRS + BR ) ) ) ) ),( Min( ( ( ( FirstVNF_CPU_Server / FirstVNF_CPU ) - ( CRS - ARS ) ) * ( ( CRS * FirstVNF_RAM ) + ( ARS + PN ) ) ) ,( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,AMS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_CPU ) ,( MRS + BR ) ) ) ) + ( Min( Min( Max( FirstVNF_Mem,FirstVNF_RAM ) ,( MRS - FirstVNF_RAM ) ) ,( ( FirstVNF_CPU_Server - DDR ) / Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ) - Min( Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,Min( RRS ,MRS ) ) ,( Max( ACS,FirstVNF_RAM_Server ) * Min( Const ,FirstVNF_RAM ) ) ) ) ) ) * ( ( ( ( Max( Min( AMS ,BR ),( BR / FirstVNF_RAM_Server ) ) / Min( Max( FirstVNF_RAM_Server,DDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) / ( ( Min( BR ,FirstVNF_CPU ) + ( FirstVNF_CPU * BR ) ) / Min( ( CRS - FirstVNF_Mem ) ,( FirstVNF_RAM_Server * AMS ) ) ) ) * ( Max( Max( ( FirstVNF_CPU + ARS ),( ARS - FirstVNF_CPU_Server ) ),( Max( MRS,FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,RRS ) ) ) + ( ( Min( AMS ,MRS ) * ( PN / BR ) ) + ( ( FirstVNF_CPU_Server + RRS ) - Max( ARS,Const ) ) ) ) ) + ( ( ( Min( ( PN - FirstVNF_Mem_Server ) ,( Const / CRS ) ) * ( Min( ARS ,Const ) - ( PN * FirstVNF_Mem ) ) ) - Min( ( ( MDR / FirstVNF_Mem_Server ) * ( PN * BR ) ) ,( ( ARS * Const ) * Min( ACS ,AMS ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server - DDR ) / Min( FirstVNF_RAM ,AMS ) ) + Max( ( AMS - FirstVNF_Mem_Server ),( FirstVNF_Mem + AMS ) ) ) / ( ( ( BR / AMS ) + ( MRS / FirstVNF_RAM_Server ) ) - ( Max( FirstVNF_CPU,MRS ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ) ) ) ) ) + FirstVNF_CPU )", "choosing": "( ( MUC + RMSe ) + ( ( Max( ( RMSe - ( RRSe - DS ) ),( RMSe - ( RRSe - DS ) ) ) * DS ) * DS ) )", "obj1": 0.975103734439834, "obj2": 0.02594381466735437}, {"determining": "( ( Max( Max( ( ( Max( ( MRS / FirstVNF_CPU ),( FirstVNF_RAM_Server / FirstVNF_Mem ) ) - Min( ( BR + FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM,PN ) ) ) - ( ( ( DDR - FirstVNF_Mem_Server ) / ( FirstVNF_CPU_Server / AMS ) ) / ( ( ARS * FirstVNF_RAM_Server ) + ( FirstVNF_CPU + RRS ) ) ) ),Min( ( ( ( AMS - FirstVNF_Mem_Server ) * Min( PN ,FirstVNF_RAM_Server ) ) * ( ( FirstVNF_Mem * Const ) / ( DDR + Const ) ) ) ,( ( ( PN * FirstVNF_CPU ) + Max( BR,FirstVNF_CPU_Server ) ) - Min( ( ACS / ARS ) ,( MRS + BR ) ) ) ) ),( Min( ( ( ( FirstVNF_CPU_Server / FirstVNF_CPU ) - ( CRS - ARS ) ) * ( ( CRS * FirstVNF_RAM ) + ( ARS + PN ) ) ) ,( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,AMS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_CPU ) ,( MRS + BR ) ) ) ) + ( Min( Min( Max( FirstVNF_Mem,FirstVNF_RAM ) ,( MRS - FirstVNF_RAM ) ) ,( ( FirstVNF_CPU_Server - DDR ) / Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ) - Min( Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,Min( RRS ,MRS ) ) ,( Max( ACS,FirstVNF_RAM_Server ) * Min( Const ,FirstVNF_RAM ) ) ) ) ) ) * ( ( ( ( Max( Min( AMS ,BR ),( BR / FirstVNF_RAM_Server ) ) / Min( Max( FirstVNF_RAM_Server,DDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) / ( ( Min( BR ,FirstVNF_CPU ) + ( FirstVNF_CPU * BR ) ) / Min( ( CRS - FirstVNF_Mem ) ,( FirstVNF_RAM_Server * AMS ) ) ) ) * ( Max( Max( ( FirstVNF_CPU + ARS ),( ARS - FirstVNF_CPU_Server ) ),( Max( MRS,FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,RRS ) ) ) + ( ( Min( AMS ,MRS ) * ( PN / BR ) ) + ( ( FirstVNF_CPU_Server + RRS ) - Max( ARS,Const ) ) ) ) ) + ( ( ( Min( ( PN - FirstVNF_Mem_Server ) ,( Const / CRS ) ) * ( Min( ARS ,Const ) - ( PN * FirstVNF_Mem ) ) ) - Min( ( ( MDR / FirstVNF_Mem_Server ) * ( PN * BR ) ) ,( ( ARS * Const ) * Min( ACS ,AMS ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server - DDR ) / Min( FirstVNF_RAM ,AMS ) ) + Max( ( AMS - FirstVNF_Mem_Server ),( FirstVNF_Mem + AMS ) ) ) / ( ( ( BR / AMS ) + ( MRS / FirstVNF_RAM_Server ) ) - ( Max( FirstVNF_CPU,MRS ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ) ) ) ) ) + Min( ( ( ( Min( ( ( FirstVNF_CPU_Server - FirstVNF_Mem ) - ( AMS + FirstVNF_CPU_Server ) ) ,( Max( AMS,ACS ) - Max( MRS,DDR ) ) ) - ( ( ( ACS / AMS ) * ( BR / AMS ) ) - Min( ( ARS / MRS ) ,( MRS * Const ) ) ) ) * ( ( Min( ( FirstVNF_CPU + ARS ) ,Min( MRS ,FirstVNF_CPU ) ) + ( Max( ACS,FirstVNF_Mem ) - ( AMS / AMS ) ) ) - ( ( ( FirstVNF_RAM - FirstVNF_CPU ) * ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) - ( ( FirstVNF_RAM_Server + RRS ) - ( ARS - CRS ) ) ) ) ) + ( ( ( ( Max( Const,DDR ) * ( FirstVNF_CPU / FirstVNF_RAM ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) / ( RRS - PN ) ) ) * ( ( Max( FirstVNF_CPU,ACS ) + ( RRS - FirstVNF_Mem_Server ) ) - Min( ( RRS / Const ) ,( FirstVNF_RAM - BR ) ) ) ) + Min( ( ( Max( FirstVNF_Mem_Server,BR ) * ( Const * ACS ) ) / ( ( ARS / PN ) + Min( RRS ,ACS ) ) ) ,( ( ( RRS + FirstVNF_Mem_Server ) - Max( FirstVNF_Mem,MRS ) ) - ( ( CRS * FirstVNF_Mem_Server ) * ( CRS + PN ) ) ) ) ) ) ,Min( ( Max( ( Max( ( MRS * RRS ),Max( ARS,ACS ) ) / Max( Max( CRS,BR ),( FirstVNF_RAM + CRS ) ) ),( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) / Min( ( AMS - ACS ) ,( RRS + RRS ) ) ) ) * ( Min( Min( ( FirstVNF_CPU / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ,( Min( FirstVNF_RAM ,MDR ) / Min( RRS ,BR ) ) ) / ( ( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server * MRS ) ) + Max( ( DDR - FirstVNF_RAM_Server ),( BR / MDR ) ) ) ) ) ,( Max( ( ( ( MDR + FirstVNF_CPU ) + Max( RRS,FirstVNF_CPU_Server ) ) * ( ( MDR / BR ) + ( FirstVNF_Mem / FirstVNF_CPU ) ) ),( Min( ( AMS - ARS ) ,( ARS - FirstVNF_RAM_Server ) ) * Max( ( ACS * MDR ),Min( FirstVNF_Mem_Server ,PN ) ) ) ) - Min( Max( Max( Min( MDR ,FirstVNF_RAM_Server ),Min( PN ,Const ) ),Max( ( BR / FirstVNF_Mem_Server ),Max( BR,FirstVNF_CPU ) ) ) ,Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) + ( MRS + AMS ) ),( ( PN / PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),( RMSe - ( RRSe - DS ) ) ) * DS ) * DS ) ) - RRSe )", "obj1": 0.9336099585062241, "obj2": 0.06349292217926113}, {"determining": "( ( FirstVNF_CPU_Server + ( BR * AMS ) ) - ( ACS / FirstVNF_Mem_Server ) )", "choosing": "Max( Max( MLU,RMSe ),( MLU / Max( ( RMSe - ( RRSe - DS ) ),RRSe ) ) )", "obj1": 0.36099585062240663, "obj2": 0.5343236421231135}, {"determining": "( ( FirstVNF_RAM_Server * Max( ( FirstVNF_Mem_Server / ACS ),Max( Max( DDR,ACS ),ACS ) ) ) + ( ( ( ACS / FirstVNF_Mem_Server ) * FirstVNF_CPU ) + ( BR * AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( Max( RMSe,( RRSe - DS ) ),Max( ( MLU - ( RRSe - DS ) ),RRSe ) ) * DS ) * DS ) ) - RRSe )", "obj1": 0.1016597510373444, "obj2": 0.7466027537417932}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ACS / FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - ( ( Max( Max( RMSe,( RRSe - DS ) ),Max( ( RMSe - ( RRSe - DS ) ),RRSe ) ) * DS ) * DS ) ) - RRSe )", "obj1": 0.46680497925311204, "obj2": 0.421446534700155}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( FirstVNF_Mem_Server / ACS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - ( ( RRSe - DS ) - DS ) )", "obj1": 0.4149377593360996, "obj2": 0.5213507775501685}, {"determining": "( ( ( ( ( ( ( ( ARS - CRS ) * ( MDR * FirstVNF_Mem_Server ) ) - Max( Max( FirstVNF_Mem,FirstVNF_Mem_Server ),( FirstVNF_RAM_Server * CRS ) ) ) + ( ( Min( Const ,ARS ) * ( PN - Const ) ) * Max( ( MDR / FirstVNF_Mem_Server ),Min( Const ,RRS ) ) ) ) / ( ( ( Min( MRS ,FirstVNF_Mem ) + Min( BR ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_Mem - PN ) / ( RRS - PN ) ) ) / Min( Min( Max( BR,RRS ) ,( MDR * AMS ) ) ,( ( FirstVNF_CPU_Server * Const ) - ( MDR - MRS ) ) ) ) ) + Min( ( ( ( ( Const / ARS ) - ( MRS / FirstVNF_CPU ) ) * ( ( BR * ARS ) * ( ACS / AMS ) ) ) * ( Min( ( MRS + AMS ) ,( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( CRS - FirstVNF_CPU_Server ) ) ) ) ,( Min( ( ( FirstVNF_CPU + FirstVNF_RAM ) - Min( FirstVNF_RAM ,PN ) ) ,( ( ACS + FirstVNF_Mem_Server ) * Max( RRS,MRS ) ) ) + ( ( Min( FirstVNF_CPU_Server ,PN ) / ( RRS / ARS ) ) - ( ( FirstVNF_Mem_Server * RRS ) * ( BR / MRS ) ) ) ) ) ) + ( ( ( ( ( ( ACS / ARS ) + ( FirstVNF_Mem + ARS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_CPU ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) + Min( Max( ( ARS * CRS ),( CRS + CRS ) ) ,( ( MRS * BR ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) * ( ( ( ( ARS + MRS ) / ( DDR + CRS ) ) / ( ( PN / MRS ) / ( RRS / ARS ) ) ) + Max( ( Max( FirstVNF_Mem_Server,DDR ) * Min( Const ,FirstVNF_RAM ) ),Min( Max( FirstVNF_Mem,MDR ) ,( BR + PN ) ) ) ) ) / ( Min( Max( ( ( PN * FirstVNF_Mem ) / ( FirstVNF_RAM - MDR ) ),( Max( DDR,RRS ) * Max( ARS,RRS ) ) ) ,Min( ( ( PN * FirstVNF_CPU ) + ( Const - CRS ) ) ,Max( ( FirstVNF_RAM_Server * FirstVNF_CPU ),( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) ) + ( ( Min( ( BR + BR ) ,( RRS + FirstVNF_CPU_Server ) ) * Min( ( PN - FirstVNF_RAM ) ,( FirstVNF_CPU * FirstVNF_CPU ) ) ) + ( Min( ( BR * ACS ) ,( PN / ACS ) ) / ( Min( MDR ,FirstVNF_CPU_Server ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ) ) ) + ( ( ( ( ( ( Max( Const,BR ) + ( MRS - RRS ) ) + ( ( FirstVNF_CPU_Server / CRS ) * ( Const + FirstVNF_CPU ) ) ) + Min( Min( ( ACS + RRS ) ,( Const + ACS ) ) ,Max( ( BR * FirstVNF_RAM ),( MDR + FirstVNF_CPU ) ) ) ) / ( ( ( ( Const - FirstVNF_Mem ) * ( ACS + BR ) ) + ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * BR ) ) ) + Min( Min( ( ARS + DDR ) ,( PN * FirstVNF_Mem_Server ) ) ,Min( ( FirstVNF_CPU - FirstVNF_Mem_Server ) ,( FirstVNF_CPU + FirstVNF_RAM ) ) ) ) ) + Min( ( ( ( ( BR * MRS ) / ( DDR + MDR ) ) + Min( Min( ARS ,RRS ) ,( PN * PN ) ) ) * ( Min( ( AMS + MDR ) ,Max( RRS,MDR ) ) * ( ( FirstVNF_CPU_Server * PN ) - Min( FirstVNF_RAM_Server ,MDR ) ) ) ) ,( Max( ( ( BR + MRS ) + Min( AMS ,DDR ) ),Max( ( MDR + FirstVNF_RAM ),Min( FirstVNF_Mem ,ARS ) ) ) / ( ( ( CRS + FirstVNF_RAM ) / Max( FirstVNF_Mem_Server,PN ) ) * ( ( FirstVNF_Mem / MRS ) - Max( MDR,FirstVNF_CPU ) ) ) ) ) ) * Min( ( ( ( Max( Min( RRS ,ACS ),( Const / MRS ) ) / ( Min( MRS ,MRS ) - Min( AMS ,MDR ) ) ) / ( Max( Min( FirstVNF_Mem_Server ,MRS ),( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) + ( ( AMS - FirstVNF_RAM_Server ) - ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) ) / ( ( ( ( FirstVNF_CPU_Server - ACS ) / ( RRS - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM - AMS ) / ( PN + ACS ) ) ) * Min( ( ( FirstVNF_Mem / ARS ) / ( PN / RRS ) ) ,( ( MDR - MRS ) + Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) ) ) ,Min( Max( ( ( Min( FirstVNF_Mem ,Const ) - Min( Const ,FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) + ( ACS * DDR ) ) ),( Max( ( RRS / ACS ),( CRS / FirstVNF_Mem_Server ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) / ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ) ,Max( Min( Min( Min( MDR ,AMS ) ,( MDR / AMS ) ) ,( ( FirstVNF_Mem / AMS ) + Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ),( Max( Max( AMS,ARS ),Min( CRS ,FirstVNF_Mem ) ) + ( ( ACS * MDR ) * Min( FirstVNF_Mem ,ACS ) ) ) ) ) ) ) )", "choosing": "( Max( Max( ( ( ( ( Max( MUR,MUR ) + Max( DS,DS ) ) * ( ( RMSe * RRSe ) + Min( CS ,MUC ) ) ) * ( ( ( RMSe / MLU ) - ( MLU / RRSe ) ) + ( Max( RRSe,MUM ) * ( MUR - MUC ) ) ) ) * ( ( ( Max( MLU,RMSe ) + ( RMSe - RRSe ) ) - Max( ( MUM - MUM ),( RCSe / MUR ) ) ) * Min( ( ( RRSe * RMSe ) + Min( DS ,CS ) ) ,( Max( CS,MUM ) / ( MUM / MLU ) ) ) ) ),( ( Min( Min( ( MUR * RRSe ) ,Max( DS,DS ) ) ,Min( Max( RCSe,RMSe ) ,( MUM - RMSe ) ) ) / ( ( Min( CS ,MUM ) + ( MUC - CS ) ) * ( ( MLU + MUR ) / ( MUR * MUC ) ) ) ) + Min( ( Max( ( RRSe * RRSe ),( MUC / RRSe ) ) - ( ( MUM * MUM ) * Max( MLU,RCSe ) ) ) ,( ( ( MUR - RRSe ) - ( MUC + MUM ) ) * ( Max( DS,MUM ) * ( MLU + MLU ) ) ) ) ) ),Min( Min( Min( ( ( ( CS - MUM ) * ( DS - MUC ) ) + Min( Max( MUM,MUC ) ,( MLU / RCSe ) ) ) ,Max( Min( ( RCSe + RRSe ) ,( RMSe / MUC ) ),( ( MUM / RCSe ) * Min( RMSe ,MLU ) ) ) ) ,( ( Max( Min( MLU ,MUC ),( MUR + CS ) ) - Min( ( DS * MUR ) ,( MLU - RRSe ) ) ) - Max( ( Min( DS ,CS ) * ( DS - MUR ) ),( ( MUC - MLU ) / ( MUC / RRSe ) ) ) ) ) ,( ( ( ( ( MLU / MLU ) / ( MUR / DS ) ) / Min( ( MLU + MUM ) ,( RMSe - MUC ) ) ) * ( ( ( MUC * RCSe ) + Min( CS ,DS ) ) / ( Max( MUM,CS ) / ( MLU / RMSe ) ) ) ) * Min( ( Max( Min( RRSe ,RCSe ),( MLU - CS ) ) / ( Min( CS ,MUR ) * Min( RMSe ,MUR ) ) ) ,Min( ( Max( RRSe,CS ) / ( MUM + RRSe ) ) ,( ( RCSe - MUR ) - ( MLU * MUR ) ) ) ) ) ) ) * Min( Max( ( Min( Max( ( ( MUM / MUM ) - ( RMSe * CS ) ),( ( MUC + MUM ) / ( RRSe - RMSe ) ) ) ,( Max( Max( MLU,CS ),( DS - MUM ) ) / Min( ( RRSe - CS ) ,( RRSe + RRSe ) ) ) ) + Min( ( Max( ( MLU / RMSe ),( MUC - MUC ) ) * ( Max( MUR,RMSe ) * ( DS * RMSe ) ) ) ,Min( ( Min( MUC ,RCSe ) + ( RMSe * MUR ) ) ,( ( RCSe / DS ) - Max( RRSe,MLU ) ) ) ) ),Min( Max( Max( ( Max( CS,MUR ) - Max( CS,CS ) ),( ( CS / RCSe ) + Min( RRSe ,CS ) ) ),( ( ( MUC - RCSe ) / ( DS - MUC ) ) - ( Min( MUR ,MUR ) / Min( RRSe ,MUR ) ) ) ) ,Min( Max( Min( ( RMSe / CS ) ,( RRSe + MUR ) ),( Max( MLU,RRSe ) / Min( DS ,MUM ) ) ) ,Min( Min( ( MUM - MUR ) ,( MUM * MUM ) ) ,Min( ( DS - RCSe ) ,( DS + MUC ) ) ) ) ) ) ,( ( Min( ( Min( ( RMSe + RMSe ) ,Max( DS,MUM ) ) + ( ( MUC * RRSe ) / Min( RRSe ,CS ) ) ) ,Min( Max( Min( MUR ,MUM ),( MUR / MUR ) ) ,( ( MLU / RCSe ) * Max( RRSe,DS ) ) ) ) - ( ( ( Max( RRSe,MUC ) / ( MLU + MUR ) ) - Max( Max( MUC,MUM ),( DS - DS ) ) ) * ( ( ( DS / RMSe ) + ( CS - DS ) ) * ( ( RCSe * CS ) / ( CS + MUC ) ) ) ) ) * ( ( ( Min( ( MUM - MUC ) ,( RMSe / RCSe ) ) / Min( ( MLU * RMSe ) ,( MLU + MLU ) ) ) + Min( ( ( RRSe + MUR ) * ( RMSe + MUM ) ) ,( ( RCSe / RRSe ) * Min( RRSe ,MUM ) ) ) ) * Max( ( Min( Min( CS ,DS ) ,( CS + RCSe ) ) - ( ( MUR + DS ) - ( MUR * RRSe ) ) ),Max( ( ( RRSe + MUR ) - ( MUR * MLU ) ),Min( ( RRSe * MUC ) ,( RCSe + CS ) ) ) ) ) ) ) )", "obj1": 0.6203319502074689, "obj2": 0.3129346652330798}], "45": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) ) / MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1078838174273859, "obj2": 0.7008305597707503}, {"determining": "( ( ( ( ( ( ( ( DDR + ARS ) + Min( FirstVNF_RAM_Server ,Const ) ) * ( ( FirstVNF_RAM_Server + CRS ) - ( FirstVNF_RAM + AMS ) ) ) / Min( ( Min( CRS ,FirstVNF_RAM ) - ( FirstVNF_CPU * CRS ) ) ,( Min( MRS ,Const ) / Max( ARS,FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( FirstVNF_Mem_Server - CRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) + ( ( CRS - CRS ) + Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) ) - ( ( ( DDR / CRS ) - Max( FirstVNF_RAM,PN ) ) / ( ( BR + FirstVNF_Mem ) - Max( AMS,FirstVNF_RAM_Server ) ) ) ) ) + ( ( ( ( ( RRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server - ARS ) ) / ( ( DDR * BR ) + Max( FirstVNF_Mem,AMS ) ) ) * Min( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) + Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ,Max( ( FirstVNF_Mem + RRS ),( RRS + ARS ) ) ) ) - Max( ( ( Max( FirstVNF_Mem_Server,MRS ) - ( FirstVNF_RAM_Server * CRS ) ) + Max( Max( Const,FirstVNF_CPU_Server ),( CRS * DDR ) ) ),Min( Min( Max( DDR,MDR ) ,Max( AMS,PN ) ) ,( Min( MDR ,MRS ) / ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) ) ) * ( Min( Min( ( ( Min( ARS ,RRS ) * ( FirstVNF_Mem_Server * ARS ) ) * ( ( RRS * MDR ) / ( AMS / PN ) ) ) ,( Min( ( MRS * FirstVNF_Mem ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) - ( ( ACS - MDR ) - ( BR * DDR ) ) ) ) ,( Min( Max( ( FirstVNF_RAM * ACS ),( FirstVNF_CPU + MDR ) ) ,( ( FirstVNF_Mem / CRS ) * ( Const * ARS ) ) ) / Min( Max( Min( FirstVNF_Mem_Server ,Const ),Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ,Max( ( MRS * MRS ),Min( DDR ,RRS ) ) ) ) ) - ( Min( ( ( ( FirstVNF_Mem_Server + MRS ) / ( PN / CRS ) ) - ( ( ACS + FirstVNF_RAM_Server ) * ( Const / MDR ) ) ) ,( ( Min( Const ,FirstVNF_Mem_Server ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem ,Const ) * ( DDR / ACS ) ) ) ) + Min( ( ( Max( MDR,MRS ) / Max( ARS,MRS ) ) / ( ( BR - DDR ) * ( MRS - FirstVNF_CPU_Server ) ) ) ,( ( Min( Const ,BR ) - ( MDR + ACS ) ) - ( ( FirstVNF_RAM - DDR ) / ( PN + FirstVNF_RAM ) ) ) ) ) ) ) * ( ( ( ( ( Max( ( FirstVNF_CPU + Const ),( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) / ( ( MRS + ACS ) * Max( RRS,FirstVNF_Mem_Server ) ) ) / ( ( Max( DDR,MRS ) - ( MDR / ACS ) ) + ( Max( BR,FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server - CRS ) ) ) ) + ( ( Min( Min( DDR ,FirstVNF_Mem_Server ) ,( FirstVNF_CPU * FirstVNF_Mem ) ) + ( Max( CRS,FirstVNF_Mem_Server ) - ( Const + AMS ) ) ) - ( ( ( PN * FirstVNF_CPU ) + ( DDR + FirstVNF_Mem ) ) - ( ( Const + FirstVNF_Mem_Server ) - ( RRS + RRS ) ) ) ) ) / ( Min( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) + Max( PN,PN ) ) + ( Max( MDR,MRS ) - ( FirstVNF_Mem_Server + MDR ) ) ) ,( ( ( FirstVNF_CPU_Server * CRS ) + ( MRS - PN ) ) * Max( ( Const + FirstVNF_Mem_Server ),( ACS - FirstVNF_Mem ) ) ) ) * ( ( Max( Max( PN,MRS ),( ARS + Const ) ) / ( Max( MDR,FirstVNF_RAM ) - ( ARS * ARS ) ) ) / ( ( ( MRS - AMS ) - ( ACS / FirstVNF_CPU ) ) - ( Max( Const,MDR ) / Max( ARS,FirstVNF_CPU ) ) ) ) ) ) + ( ( ( ( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),Max( FirstVNF_Mem,ARS ) ) + ( Max( RRS,DDR ) - ( FirstVNF_Mem / MRS ) ) ) - Max( ( ( FirstVNF_RAM_Server - ACS ) / ( MDR + FirstVNF_Mem_Server ) ),( ( ARS * FirstVNF_RAM_Server ) * Max( FirstVNF_RAM,AMS ) ) ) ) + ( ( Max( ( AMS - FirstVNF_CPU ),( AMS / AMS ) ) - ( ( FirstVNF_RAM + FirstVNF_RAM ) + ( DDR - FirstVNF_Mem ) ) ) / ( ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) / ( BR - RRS ) ) - ( ( FirstVNF_Mem - DDR ) / Min( FirstVNF_CPU_Server ,Const ) ) ) ) ) - ( ( ( ( ( MRS * FirstVNF_RAM ) / Max( Const,PN ) ) - ( ( RRS - DDR ) / ( MRS - PN ) ) ) / Max( ( Min( MRS ,Const ) - Max( FirstVNF_CPU_Server,DDR ) ),Min( ( CRS + FirstVNF_CPU_Server ) ,( CRS + FirstVNF_RAM_Server ) ) ) ) / Max( ( ( Max( ARS,FirstVNF_RAM_Server ) - Min( BR ,CRS ) ) * ( ( FirstVNF_CPU_Server + CRS ) + ( MDR / Const ) ) ),( Max( ( DDR / RRS ),( FirstVNF_RAM_Server - Const ) ) + ( Max( PN,FirstVNF_Mem ) + Max( RRS,ARS ) ) ) ) ) ) ) )", "choosing": "( Max( ( Max( ( Min( ( ( RCSe / RMSe ) + Min( RCSe ,MUC ) ) ,( Min( MUM ,RCSe ) / Min( RMSe ,DS ) ) ) / ( ( ( MLU + DS ) / ( RRSe - MUR ) ) / Max( Max( MLU,RMSe ),Min( MLU ,RRSe ) ) ) ),( Min( ( ( MUM - MUM ) / Max( DS,MUM ) ) ,( ( CS + MUC ) - ( RMSe + MLU ) ) ) + ( ( ( MLU / MUR ) * ( RRSe * MUC ) ) + ( ( RMSe / RCSe ) / ( MUR / MUR ) ) ) ) ) * Min( ( Max( Min( ( RRSe * RCSe ) ,( RCSe + RCSe ) ),( ( DS + RRSe ) - ( CS / RMSe ) ) ) - ( Min( Min( RCSe ,MUR ) ,( MUR - MUC ) ) * ( Max( MLU,MLU ) / Min( RMSe ,DS ) ) ) ) ,Min( Max( Max( Max( MUC,RRSe ),Min( RRSe ,MLU ) ),( ( MUM - MUM ) / Max( RRSe,DS ) ) ) ,( ( ( RRSe / MUM ) * Min( RRSe ,DS ) ) / ( ( MUR / RRSe ) * Max( MLU,RMSe ) ) ) ) ) ),( Min( ( Max( Min( Max( RCSe,MUR ) ,Min( DS ,MUR ) ),( Max( RCSe,MUC ) / Min( MLU ,DS ) ) ) - Min( ( ( MUM - MUC ) - ( RRSe / MUC ) ) ,( Max( CS,RRSe ) / Max( RCSe,RMSe ) ) ) ) ,Max( ( ( ( MUR + MUR ) / ( RCSe - RMSe ) ) + Min( Min( RMSe ,MLU ) ,( RMSe - DS ) ) ),Min( Max( ( RMSe - MUR ),( RRSe - MUM ) ) ,( ( MUM / RCSe ) + Max( RCSe,MUC ) ) ) ) ) * Min( Max( ( ( ( MLU - MUM ) - ( MLU + RCSe ) ) / ( Max( CS,CS ) + Max( RCSe,RRSe ) ) ),Max( Min( ( RMSe - MUR ) ,Min( RMSe ,CS ) ),( Max( MUM,RCSe ) / ( RCSe + RRSe ) ) ) ) ,( ( ( Max( RMSe,MUC ) * Min( RCSe ,RCSe ) ) + ( ( CS / RCSe ) / ( RRSe + RRSe ) ) ) + ( ( ( DS / DS ) + ( RCSe - RRSe ) ) * ( Max( MUC,MUC ) + Min( DS ,CS ) ) ) ) ) ) ) / ( Max( ( ( ( ( ( RRSe + MUC ) / Min( RCSe ,DS ) ) - ( ( CS - CS ) * ( RRSe / RMSe ) ) ) - ( ( ( MLU * RCSe ) / Min( RCSe ,MUC ) ) + Max( ( RMSe + RRSe ),( MUM / MLU ) ) ) ) / ( Max( ( ( MUC - RMSe ) + ( RMSe / MUM ) ),( ( MUM / DS ) / ( MUR * MUR ) ) ) + Min( ( ( CS - MLU ) + Min( RMSe ,CS ) ) ,Max( ( RCSe + MUR ),Max( CS,MUR ) ) ) ) ),( ( ( ( Min( RCSe ,CS ) / Min( DS ,MUR ) ) - ( ( CS * RRSe ) - ( RCSe / CS ) ) ) - ( ( ( RMSe - RCSe ) / Min( RCSe ,MUM ) ) / Min( Max( MLU,MLU ) ,( RRSe * MUM ) ) ) ) * ( ( Min( ( DS * RCSe ) ,( MLU / MUR ) ) * ( ( MLU - CS ) - ( MUR + MUC ) ) ) * ( ( ( RMSe + MLU ) / ( RCSe - MLU ) ) * Min( ( DS / MUR ) ,Min( CS ,MUM ) ) ) ) ) ) - ( ( Max( ( ( ( RCSe + RMSe ) - ( RMSe / RMSe ) ) + ( ( MLU / MUR ) * Min( MUC ,MLU ) ) ),( Max( ( DS * MUM ),( MUC + RRSe ) ) + ( ( MLU - MUR ) - Min( RCSe ,MUR ) ) ) ) * ( ( Max( ( MUM + CS ),Min( CS ,MUR ) ) * Max( ( MUM + CS ),Min( CS ,DS ) ) ) * Min( ( Min( MLU ,DS ) / ( DS / RCSe ) ) ,( ( MUM * RRSe ) / Max( RCSe,DS ) ) ) ) ) - ( ( Max( Max( ( CS * MUR ),( DS + MUR ) ),( ( RCSe + MLU ) * Min( MUR ,CS ) ) ) * ( ( ( CS / MUM ) - ( MUM - MUR ) ) + Min( Max( MUR,DS ) ,Max( RMSe,RRSe ) ) ) ) + ( ( ( Min( RCSe ,MUM ) + ( MUR - RRSe ) ) / ( ( MLU / MUR ) * Min( MUM ,MUC ) ) ) * ( Min( ( MUR * MLU ) ,( MLU - MUC ) ) / ( ( DS * MUR ) - ( RCSe / DS ) ) ) ) ) ) ) )", "obj1": 0.34024896265560167, "obj2": 0.5517132881073181}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * ( RRSe - DS ) ) * DS ) ) - RRSe )", "obj1": 0.1908713692946058, "obj2": 0.6482698979824754}, {"determining": "( ( FirstVNF_RAM_Server * Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) - DS ) * DS ) ) - RRSe )", "obj1": 0.1991701244813278, "obj2": 0.6353160508612061}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( AMS / ACS ) / ( ( ACS / ACS ) * Max( AMS,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( MUC - ( ( Max( ( DS - ( RMSe - RMSe ) ),RRSe ) * MUM ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( ( BR / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( DDR * FirstVNF_CPU ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - MUR )", "obj1": 0.08091286307053942, "obj2": 0.7640380726413522}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( DDR,ACS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_Mem_Server,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) ) / MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * CS ) * ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) ) ) - RRSe )", "obj1": 0.17219917012448133, "obj2": 0.6523678112321003}, {"determining": "( ( FirstVNF_RAM_Server / Min( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ) ,Max( DDR,ACS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( ( RRSe - RRSe ) - ( ( Min( ( RMSe - ( RRSe - CS ) ) ,RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.2095435684647303, "obj2": 0.6257496496556124}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RMSe - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1078838174273859, "obj2": 0.7008305597707503}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( DDR / PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * CRS ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe * ( ( Max( ( RMSe - ( RRSe - DS ) ),MUM ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1078838174273859, "obj2": 0.7008305597707503}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( ( ( ( ( ( ( ( DDR + ARS ) + Min( FirstVNF_RAM_Server ,Const ) ) * ( ( FirstVNF_RAM_Server + CRS ) - ( FirstVNF_RAM + AMS ) ) ) / Min( ( Min( CRS ,FirstVNF_RAM ) - ( FirstVNF_CPU * CRS ) ) ,( Min( MRS ,Const ) / Max( ARS,FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( FirstVNF_Mem_Server - CRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) + ( ( CRS - CRS ) + Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) ) - ( ( ( DDR / CRS ) - Max( FirstVNF_RAM,PN ) ) / ( ( BR + FirstVNF_Mem ) - Max( AMS,FirstVNF_RAM_Server ) ) ) ) ) + ( ( ( ( ( RRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server - ARS ) ) / ( ( DDR * BR ) + Max( FirstVNF_Mem,AMS ) ) ) * Min( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) + Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ,Max( ( FirstVNF_Mem + RRS ),( RRS + ARS ) ) ) ) - Max( ( ( Max( FirstVNF_Mem_Server,MRS ) - ( FirstVNF_RAM_Server * CRS ) ) + Max( Max( Const,FirstVNF_CPU_Server ),( CRS * DDR ) ) ),Min( Min( Max( DDR,MDR ) ,Max( AMS,PN ) ) ,( Min( MDR ,MRS ) / ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) ) ) * ( Min( Min( ( ( Min( ARS ,RRS ) * ( FirstVNF_Mem_Server * ARS ) ) * ( ( RRS * MDR ) / ( AMS / PN ) ) ) ,( Min( ( MRS * FirstVNF_Mem ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) - ( ( ACS - MDR ) - ( BR * DDR ) ) ) ) ,( Min( Max( ( FirstVNF_RAM * ACS ),( FirstVNF_CPU + MDR ) ) ,( ( FirstVNF_Mem / CRS ) * ( Const * ARS ) ) ) / Min( Max( Min( FirstVNF_Mem_Server ,Const ),Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ,Max( ( MRS * MRS ),Min( DDR ,RRS ) ) ) ) ) - ( Min( ( ( ( FirstVNF_Mem_Server + MRS ) / ( PN / CRS ) ) - ( ( ACS + FirstVNF_RAM_Server ) * ( Const / MDR ) ) ) ,( ( Min( Const ,FirstVNF_Mem_Server ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem ,Const ) * ( DDR / ACS ) ) ) ) + Min( ( ( Max( MDR,MRS ) / Max( ARS,MRS ) ) / ( ( BR - DDR ) * ( MRS - FirstVNF_CPU_Server ) ) ) ,( ( Min( Const ,BR ) - ( MDR + ACS ) ) - ( ( FirstVNF_RAM - DDR ) / ( PN + FirstVNF_RAM ) ) ) ) ) ) ) * ( ( ( ( ( Max( ( FirstVNF_CPU + Const ),( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) / ( ( MRS + ACS ) * Max( RRS,FirstVNF_Mem_Server ) ) ) / ( ( Max( DDR,MRS ) - ( MDR / ACS ) ) + ( Max( BR,FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server - CRS ) ) ) ) + ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) ) / ( Min( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) + Max( PN,PN ) ) + ( Max( MDR,MRS ) - ( FirstVNF_Mem_Server + MDR ) ) ) ,( ( ( FirstVNF_CPU_Server * CRS ) + ( MRS - PN ) ) * Max( ( Const + FirstVNF_Mem_Server ),( ACS - FirstVNF_Mem ) ) ) ) / ( ( Max( Max( PN,MRS ),( ARS + Const ) ) / ( Max( MDR,FirstVNF_RAM ) - ( ARS * ARS ) ) ) / ( ( ( MRS - AMS ) - ( ACS / FirstVNF_CPU ) ) - ( Max( Const,MDR ) / Max( ARS,FirstVNF_CPU ) ) ) ) ) ) + ( ( ( ( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),Max( FirstVNF_Mem,ARS ) ) * ( Max( RRS,DDR ) - ( FirstVNF_Mem / MRS ) ) ) - Max( ( ( FirstVNF_RAM_Server - ACS ) / ( MDR + FirstVNF_Mem_Server ) ),( ( ARS * FirstVNF_RAM_Server ) * Max( FirstVNF_RAM,AMS ) ) ) ) + ( ( Max( ( AMS - FirstVNF_CPU ),( AMS / AMS ) ) - ( ( FirstVNF_RAM + FirstVNF_RAM ) + ( DDR - FirstVNF_Mem ) ) ) / ( ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) / ( BR - RRS ) ) - ( ( FirstVNF_Mem - DDR ) / Min( FirstVNF_CPU_Server ,Const ) ) ) ) ) - ( ( ( ( ( MRS * FirstVNF_RAM ) / Max( Const,PN ) ) - ( ( RRS - DDR ) / ( MRS - PN ) ) ) / Max( ( Min( MRS ,Const ) - Max( FirstVNF_CPU_Server,DDR ) ),Min( ( CRS + FirstVNF_CPU_Server ) ,( CRS + FirstVNF_RAM_Server ) ) ) ) / Max( ( ( Max( ARS,FirstVNF_RAM_Server ) - Min( BR ,CRS ) ) * ( ( FirstVNF_CPU_Server + CRS ) + ( MDR / Const ) ) ),( Max( ( DDR / RRS ),( FirstVNF_RAM_Server - Const ) ) + ( Max( PN,FirstVNF_Mem ) + Max( RRS,ARS ) ) ) ) ) ) ) )", "choosing": "( Max( ( Max( ( Min( ( ( RCSe / RMSe ) + Min( RCSe ,MUC ) ) ,( Min( MUM ,RCSe ) / Min( RMSe ,DS ) ) ) / ( ( ( MLU + DS ) / ( RRSe - MUR ) ) / Max( Max( MLU,RMSe ),Min( MLU ,RRSe ) ) ) ),( Min( ( ( MUM - MUM ) / Max( DS,MUM ) ) ,( ( CS + MUC ) - ( RMSe + MLU ) ) ) + ( ( ( MLU / MUR ) * ( RRSe * MUC ) ) + ( ( RMSe / RCSe ) / ( MUR / MUR ) ) ) ) ) * Min( ( Max( Min( ( RRSe * RCSe ) ,( RCSe + RCSe ) ),( ( DS + RRSe ) - ( CS / RMSe ) ) ) - ( Min( Min( RCSe ,MUR ) ,( MUR - MUC ) ) * ( Max( MLU,MLU ) + Min( RMSe ,DS ) ) ) ) ,Max( ( RMSe - ( RRSe - ( RRSe - DS ) ) ),RRSe ) ) ),( Min( ( Max( Min( Max( RCSe,MUR ) ,Min( DS ,MUR ) ),( Max( RCSe,MUC ) / Min( MLU ,DS ) ) ) - Min( ( ( MUM - MUC ) - ( RRSe / MUC ) ) ,( Max( CS,RRSe ) / Max( RCSe,RMSe ) ) ) ) ,Max( ( ( ( MUR + MUR ) / ( RCSe - RMSe ) ) + Min( Min( RMSe ,MLU ) ,( RMSe - DS ) ) ),Min( Max( ( RMSe - MUR ),( RRSe - MUM ) ) ,( ( MUM / RCSe ) + Max( RCSe,MUC ) ) ) ) ) * Min( Max( ( ( ( MLU - MUM ) - ( MLU + RCSe ) ) / ( Max( CS,CS ) + Max( RCSe,RRSe ) ) ),Max( Min( ( RMSe - MUR ) ,Min( RMSe ,CS ) ),( Max( MUM,RCSe ) / ( RCSe + RRSe ) ) ) ) ,( ( ( Max( RMSe,MUC ) * Min( RCSe ,RCSe ) ) + ( ( CS / RCSe ) / ( RRSe + RRSe ) ) ) + ( ( ( DS / DS ) + ( RCSe - RRSe ) ) * ( Max( MUC,MUC ) + Min( DS ,CS ) ) ) ) ) ) ) / ( Max( ( ( ( ( ( RRSe + MUC ) / Min( RCSe ,DS ) ) - ( ( CS - CS ) * ( RCSe / RMSe ) ) ) - ( ( ( MLU * RCSe ) / Min( RCSe ,MUC ) ) + Max( ( RMSe + RRSe ),( MUM / MLU ) ) ) ) / ( Max( ( ( MUC - RMSe ) + ( RMSe / MUM ) ),( ( MUM / DS ) / ( MUR * MUR ) ) ) + Min( ( ( CS - MLU ) + Min( RMSe ,CS ) ) ,Max( ( RCSe + MUR ),Max( CS,MUR ) ) ) ) ),( ( ( ( Min( RCSe ,CS ) / Min( DS ,MUR ) ) - ( ( CS * RRSe ) - ( RCSe / CS ) ) ) - ( ( ( RMSe - RCSe ) / Min( RCSe ,MUM ) ) / Min( Max( MLU,MLU ) ,( RRSe * MUM ) ) ) ) * ( ( Min( ( DS * RCSe ) ,( MLU / MUR ) ) * ( ( MLU - CS ) - ( MUR + MUC ) ) ) * ( ( ( RMSe + MLU ) / ( RCSe - MLU ) ) * Min( ( DS / MUR ) ,Min( CS ,MUM ) ) ) ) ) ) - ( ( Max( ( ( ( RCSe + RMSe ) - ( RMSe / RMSe ) ) + ( ( MLU / MUR ) * Min( MUC ,MLU ) ) ),( Max( ( DS * MUM ),( MUC + RRSe ) ) + ( ( MLU - MUR ) - Min( RCSe ,MUR ) ) ) ) * ( ( Max( ( MUM + CS ),Min( CS ,MUR ) ) * Max( ( MUM + CS ),Min( CS ,DS ) ) ) * Min( ( Min( MLU ,DS ) / ( DS / RCSe ) ) ,( ( MUM * RRSe ) / Max( RCSe,DS ) ) ) ) ) - ( ( Max( Max( ( CS * MUR ),( DS + MUR ) ),( ( RCSe + MLU ) * Min( MUR ,CS ) ) ) * ( ( ( CS / MUM ) - ( MUM - MUR ) ) + Min( Max( MUR,DS ) ,Max( RMSe,RRSe ) ) ) ) + ( ( ( Min( RCSe ,MUM ) + ( MUR - RRSe ) ) / ( ( MLU / MUR ) * Min( MUM ,MUC ) ) ) * ( Min( ( MUR * MLU ) ,( MLU - MUC ) ) / ( ( DS * MUR ) - ( RCSe / DS ) ) ) ) ) ) ) )", "obj1": 0.34439834024896265, "obj2": 0.5419554161651339}, {"determining": "( ( MDR / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Min( ( RMSe - ( RRSe - DS ) ) ,RRSe ) - DS ) * DS ) ) - RRSe )", "obj1": 0.1991701244813278, "obj2": 0.6353160508612061}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ACS / DDR ) )", "choosing": "( Max( RRSe,( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * ( RRSe - DS ) ) * DS ) ) - RRSe )", "obj1": 0.4605809128630705, "obj2": 0.4369531568214959}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) - DS ) * DS ) ) - RRSe )", "obj1": 0.1991701244813278, "obj2": 0.6353160508612061}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( ACS,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( ( Max( ( RMSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08921161825726141, "obj2": 0.7507147017125314}, {"determining": "( ( FirstVNF_CPU_Server + ( BR * AMS ) ) - ( ACS / FirstVNF_Mem_Server ) )", "choosing": "Max( Max( MLU,RMSe ),( MLU / Max( ( RMSe - ( RRSe - DS ) ),RRSe ) ) )", "obj1": 0.36099585062240663, "obj2": 0.5343236421231135}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ACS / FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - ( ( Max( Max( RMSe,( RRSe - DS ) ),Max( ( RMSe - ( RRSe - DS ) ),RRSe ) ) * DS ) * DS ) ) - RRSe )", "obj1": 0.46680497925311204, "obj2": 0.421446534700155}, {"determining": "( ( ( ( ( ( ( ( ARS - CRS ) * ( MDR * FirstVNF_Mem_Server ) ) - Max( Max( FirstVNF_Mem,FirstVNF_Mem_Server ),( FirstVNF_RAM_Server * CRS ) ) ) + ( ( Min( Const ,ARS ) * ( PN - Const ) ) * Max( ( MDR / FirstVNF_Mem_Server ),Min( Const ,RRS ) ) ) ) / ( ( ( Min( MRS ,FirstVNF_Mem ) + Min( BR ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_Mem - PN ) / ( RRS - PN ) ) ) / Min( Min( Max( BR,RRS ) ,( MDR * AMS ) ) ,( ( FirstVNF_CPU_Server * Const ) - ( MDR - MRS ) ) ) ) ) + Min( ( ( ( ( Const / ARS ) - ( MRS / FirstVNF_CPU ) ) * ( ( BR * ARS ) * ( ACS / AMS ) ) ) * ( Min( ( MRS + AMS ) ,( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( CRS - FirstVNF_CPU_Server ) ) ) ) ,( Min( ( ( FirstVNF_CPU + FirstVNF_RAM ) - Min( FirstVNF_RAM ,PN ) ) ,( ( ACS + FirstVNF_Mem_Server ) * Max( RRS,MRS ) ) ) + ( ( Min( FirstVNF_CPU_Server ,PN ) / ( RRS / ARS ) ) - ( ( FirstVNF_Mem_Server * RRS ) * ( BR / MRS ) ) ) ) ) ) + ( ( ( ( ( ( ACS / ARS ) + ( FirstVNF_Mem + ARS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_CPU ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) + Min( Max( ( ARS * CRS ),( CRS + CRS ) ) ,( ( MRS * BR ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) * ( ( ( ( ARS + MRS ) / ( DDR + CRS ) ) / ( ( PN / MRS ) / ( RRS / ARS ) ) ) + Max( ( Max( FirstVNF_Mem_Server,DDR ) * Min( Const ,FirstVNF_RAM ) ),Min( Max( FirstVNF_Mem,MDR ) ,( BR + PN ) ) ) ) ) / ( Min( Max( ( ( PN * FirstVNF_Mem ) / ( FirstVNF_RAM - MDR ) ),( Max( DDR,RRS ) * Max( ARS,RRS ) ) ) ,Min( ( ( PN * FirstVNF_CPU ) + ( Const - CRS ) ) ,Max( ( FirstVNF_RAM_Server * FirstVNF_CPU ),( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) ) + ( ( Min( ( BR + BR ) ,( RRS + FirstVNF_CPU_Server ) ) * Min( ( PN - FirstVNF_RAM ) ,( FirstVNF_CPU * FirstVNF_CPU ) ) ) + ( Min( ( BR * ACS ) ,( PN / ACS ) ) / ( Min( MDR ,FirstVNF_CPU_Server ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ) ) ) + ( ( ( ( ( ( Max( Const,BR ) + ( MRS - RRS ) ) + ( ( FirstVNF_CPU_Server / CRS ) * ( Const + FirstVNF_CPU ) ) ) + Min( Min( ( ACS + RRS ) ,( Const + ACS ) ) ,Max( ( BR * FirstVNF_RAM ),( MDR + FirstVNF_CPU ) ) ) ) / ( ( ( ( Const - FirstVNF_Mem ) * ( ACS + BR ) ) + ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * BR ) ) ) + Min( Min( ( ARS + DDR ) ,( PN * FirstVNF_Mem_Server ) ) ,Min( ( FirstVNF_CPU - FirstVNF_Mem_Server ) ,( FirstVNF_CPU + FirstVNF_RAM ) ) ) ) ) + Min( ( ( ( ( BR * MRS ) / ( DDR + MDR ) ) + Min( Min( ARS ,RRS ) ,( PN * PN ) ) ) * ( Min( ( AMS + MDR ) ,Max( RRS,MDR ) ) * ( ( FirstVNF_CPU_Server * PN ) - Min( FirstVNF_RAM_Server ,MDR ) ) ) ) ,( Max( ( ( BR + MRS ) + Min( AMS ,DDR ) ),Max( ( MDR + FirstVNF_RAM ),Min( FirstVNF_Mem ,ARS ) ) ) / ( ( ( CRS + FirstVNF_RAM ) / Max( FirstVNF_Mem_Server,PN ) ) * ( ( FirstVNF_Mem / MRS ) - Max( MDR,FirstVNF_CPU ) ) ) ) ) ) * Min( ( ( ( Max( Min( RRS ,ACS ),( Const / MRS ) ) / ( Min( MRS ,MRS ) - Min( AMS ,MDR ) ) ) / ( Max( Min( FirstVNF_Mem_Server ,MRS ),( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) + ( ( AMS - FirstVNF_RAM_Server ) - ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) ) / ( ( ( ( FirstVNF_CPU_Server - ACS ) / ( RRS - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM - AMS ) / ( PN + ACS ) ) ) * Min( ( ( FirstVNF_Mem / ARS ) / ( PN / RRS ) ) ,( ( MDR - MRS ) + Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) ) ) ,Min( Max( ( ( Min( FirstVNF_Mem ,Const ) - Min( Const ,FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) + ( ACS * DDR ) ) ),( Max( ( RRS / ACS ),( CRS / FirstVNF_Mem_Server ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) / ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ) ,Max( Min( Min( Min( MDR ,AMS ) ,( MDR / AMS ) ) ,( ( FirstVNF_Mem / AMS ) + Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ),( Max( Max( AMS,ARS ),Min( CRS ,FirstVNF_Mem ) ) + ( ( ACS * MDR ) * Min( FirstVNF_Mem ,ACS ) ) ) ) ) ) ) )", "choosing": "( Max( Max( ( ( ( ( Max( MUR,MUR ) + Max( DS,DS ) ) * ( ( RMSe * RRSe ) + Min( CS ,MUC ) ) ) * ( ( ( RMSe / MLU ) - ( MLU / RRSe ) ) + ( Max( RRSe,MUM ) * ( MUR - MUC ) ) ) ) * ( ( ( Max( MLU,RMSe ) + ( RMSe - RRSe ) ) - Max( ( MUM - MUM ),( RCSe / MUR ) ) ) * Min( ( ( RRSe * RMSe ) + Min( DS ,CS ) ) ,( Max( CS,MUM ) / ( MUM / MLU ) ) ) ) ),( ( Min( Min( ( MUR * RRSe ) ,Max( DS,DS ) ) ,Min( Max( RCSe,RMSe ) ,( MUM - RMSe ) ) ) / ( ( Min( CS ,MUM ) + ( MUC - CS ) ) * ( ( MLU + MUR ) / ( MUR * MUC ) ) ) ) + Min( ( Max( ( RRSe * RRSe ),( MUC / RRSe ) ) - ( ( MUM * MUM ) * Max( MLU,RCSe ) ) ) ,( ( ( MUR - RRSe ) - ( MUC + MUM ) ) * ( Max( DS,MUM ) * ( MLU + MLU ) ) ) ) ) ),Min( Min( Min( ( ( ( CS - MUM ) * ( DS - MUC ) ) + Min( Max( MUM,MUC ) ,( MLU / RCSe ) ) ) ,Max( Min( ( RCSe + RRSe ) ,( RMSe / MUC ) ),( ( MUM / RCSe ) * Min( RMSe ,MLU ) ) ) ) ,( ( Max( Min( MLU ,MUC ),( MUR + CS ) ) - Min( ( DS * MUR ) ,( MLU - RRSe ) ) ) - Max( ( Min( DS ,CS ) * ( DS - MUR ) ),( ( MUC - MLU ) / ( MUC / RRSe ) ) ) ) ) ,( ( ( ( ( MLU / MLU ) / ( MUR / DS ) ) / Min( ( MLU + MUM ) ,( RMSe - MUC ) ) ) * ( ( ( MUC * RCSe ) + Min( CS ,DS ) ) / ( Max( MUM,CS ) / ( MLU / RMSe ) ) ) ) * Min( ( Max( Min( RRSe ,RCSe ),( MLU - CS ) ) / ( Min( CS ,MUR ) * Min( RMSe ,MUR ) ) ) ,Min( ( Max( RRSe,CS ) / ( MUM + RRSe ) ) ,( ( RCSe - MUR ) - ( MLU * MUR ) ) ) ) ) ) ) * Min( Max( ( Min( Max( ( ( MUM / MUM ) - ( RMSe * CS ) ),( ( MUC + MUM ) / ( RRSe - RMSe ) ) ) ,( Max( Max( MLU,CS ),( DS - MUM ) ) / Min( ( RRSe - CS ) ,( RRSe + RRSe ) ) ) ) + Min( ( Max( ( MLU / RMSe ),( MUC - MUC ) ) * ( Max( MUR,RMSe ) * ( DS * RMSe ) ) ) ,Min( ( Min( MUC ,RCSe ) + ( RMSe * MUR ) ) ,( ( RCSe / DS ) - Max( RRSe,MLU ) ) ) ) ),Min( Max( Max( ( Max( CS,MUR ) - Max( CS,CS ) ),( ( CS / RCSe ) + Min( RRSe ,CS ) ) ),( ( ( MUC - RCSe ) / ( DS - MUC ) ) - ( Min( MUR ,MUR ) / Min( RRSe ,MUR ) ) ) ) ,Min( Max( Min( ( RMSe / CS ) ,( RRSe + MUR ) ),( Max( MLU,RRSe ) / Min( DS ,MUM ) ) ) ,Min( Min( ( MUM - MUR ) ,( MUM * MUM ) ) ,Min( ( DS - RCSe ) ,( DS + MUC ) ) ) ) ) ) ,( ( Min( ( Min( ( RMSe + RMSe ) ,Max( DS,MUM ) ) + ( ( MUC * RRSe ) / Min( RRSe ,CS ) ) ) ,Min( Max( Min( MUR ,MUM ),( MUR / MUR ) ) ,( ( MLU / RCSe ) * Max( RRSe,DS ) ) ) ) - ( ( ( Max( RRSe,MUC ) / ( MLU + MUR ) ) - Max( Max( MUC,MUM ),( DS - DS ) ) ) * ( ( ( DS / RMSe ) + ( CS - DS ) ) * ( ( RCSe * CS ) / ( CS + MUC ) ) ) ) ) * ( ( ( Min( ( MUM - MUC ) ,( RMSe / RCSe ) ) / Min( ( MLU * RMSe ) ,( MLU + MLU ) ) ) + Min( ( ( RRSe + MUR ) * ( RMSe + MUM ) ) ,( ( RCSe / RRSe ) * Min( RRSe ,MUM ) ) ) ) * Max( ( Min( Min( CS ,DS ) ,( CS + RCSe ) ) - ( ( MUR + DS ) - ( MUR * RRSe ) ) ),Max( ( ( RRSe + MUR ) - ( MUR * MLU ) ),Min( ( RRSe * MUC ) ,( RCSe + CS ) ) ) ) ) ) ) )", "obj1": 0.6203319502074689, "obj2": 0.3129346652330798}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( PN / PN ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / RRS ) ) ) ) ) + ( DDR - CRS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( MUM - ( RRSe - DS ) ),RRSe ) * CS ) / MUM ) ) - RRSe )", "obj1": 0.1078838174273859, "obj2": 0.7008305597707503}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( DDR * FirstVNF_CPU ),ACS ) ) ) + ( PN + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.11825726141078838, "obj2": 0.6952260016859347}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( PN + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RMSe - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1078838174273859, "obj2": 0.7008305597707503}, {"determining": "( ( ( ( ( ( ( ( DDR + ARS ) + Min( FirstVNF_RAM_Server ,Const ) ) * ( ( FirstVNF_RAM_Server + CRS ) - ( FirstVNF_RAM + AMS ) ) ) / Min( ( Min( CRS ,FirstVNF_RAM ) - ( FirstVNF_CPU * CRS ) ) ,( Min( MRS ,Const ) / Max( ARS,FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( FirstVNF_Mem_Server - CRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) + ( ( CRS - CRS ) + Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) ) - ( ( ( DDR / CRS ) - Max( FirstVNF_RAM,PN ) ) / ( ( BR + FirstVNF_Mem ) - Max( AMS,FirstVNF_RAM_Server ) ) ) ) ) + ( ( ( ( ( RRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server - ARS ) ) / ( ( DDR * BR ) + Max( FirstVNF_Mem,AMS ) ) ) * Min( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) + Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ,Max( ( FirstVNF_Mem + RRS ),( RRS + ARS ) ) ) ) - Max( ( ( Max( FirstVNF_Mem_Server,MRS ) - ( FirstVNF_RAM_Server * CRS ) ) + Max( Max( Const,FirstVNF_CPU_Server ),( CRS * DDR ) ) ),Min( Min( Max( DDR,MDR ) ,Max( AMS,PN ) ) ,( Min( MDR ,MRS ) / ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) ) ) * ( Min( Min( ( ( Min( ARS ,RRS ) * ( FirstVNF_Mem_Server * ARS ) ) * ( ( RRS * MDR ) / ( AMS / PN ) ) ) ,( Min( ( MRS * FirstVNF_Mem ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) - ( ( ACS - MDR ) - ( BR * DDR ) ) ) ) ,( Min( Max( ( FirstVNF_RAM * ACS ),( FirstVNF_CPU + MDR ) ) ,( ( FirstVNF_Mem / CRS ) * ( Const * ARS ) ) ) / Min( Max( Min( FirstVNF_Mem_Server ,Const ),Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ,Max( ( MRS * MRS ),Min( DDR ,RRS ) ) ) ) ) - ( Min( ( ( ( FirstVNF_Mem_Server + MRS ) / ( PN / CRS ) ) - ( ( ACS + FirstVNF_RAM_Server ) * ( Const / MDR ) ) ) ,( ( Min( Const ,FirstVNF_Mem_Server ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem ,Const ) * ( DDR / ACS ) ) ) ) + Min( ( ( Max( MDR,MRS ) / Max( ARS,MRS ) ) / ( ( BR - DDR ) * ( MRS - FirstVNF_CPU_Server ) ) ) ,( ( Min( Const ,BR ) - ( MDR + ACS ) ) - ( ( FirstVNF_RAM - DDR ) / ( PN + FirstVNF_RAM ) ) ) ) ) ) ) * ( ( ( ( ( Max( ( FirstVNF_CPU + Const ),( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) / ( ( MRS + ACS ) * Max( RRS,FirstVNF_Mem_Server ) ) ) / ( ( Max( DDR,MRS ) - ( MDR / ACS ) ) + ( Max( BR,FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server - CRS ) ) ) ) + ( ( Min( Min( DDR ,FirstVNF_Mem_Server ) ,( FirstVNF_CPU * FirstVNF_Mem ) ) + ( Max( CRS,FirstVNF_Mem_Server ) - ( Const + AMS ) ) ) - ( ( ( PN * FirstVNF_CPU ) + ( DDR + FirstVNF_Mem ) ) - ( ( Const + FirstVNF_Mem_Server ) - ( RRS + RRS ) ) ) ) ) / ( Min( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) + Max( PN,PN ) ) + ( Max( MDR,MRS ) - ( FirstVNF_Mem_Server + MDR ) ) ) ,( ( ( FirstVNF_CPU_Server * CRS ) + ( MRS - PN ) ) * Max( ( Const + FirstVNF_Mem_Server ),( ACS - FirstVNF_Mem ) ) ) ) / ( ( Max( Max( PN,MRS ),( ARS + Const ) ) / ( Max( MDR,FirstVNF_RAM ) - ( ARS * ARS ) ) ) / ( ( ( MRS - AMS ) - ( ACS / FirstVNF_CPU ) ) - ( Max( Const,MDR ) / Max( ARS,FirstVNF_CPU ) ) ) ) ) ) + ( ( ( ( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),Max( FirstVNF_Mem,ARS ) ) + ( Max( ACS,DDR ) - ( FirstVNF_Mem / MRS ) ) ) - Max( ( ( FirstVNF_RAM_Server - ACS ) / ( MDR + FirstVNF_Mem_Server ) ),( ( ARS * FirstVNF_RAM_Server ) * Max( FirstVNF_RAM,AMS ) ) ) ) + ( ( Max( ( AMS - FirstVNF_CPU ),( AMS / AMS ) ) - ( ( FirstVNF_RAM + FirstVNF_RAM ) + ( DDR - FirstVNF_Mem ) ) ) / ( ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) / ( BR - RRS ) ) - ( ( FirstVNF_Mem - DDR ) / Min( FirstVNF_CPU_Server ,Const ) ) ) ) ) - ( ( ( ( ( MRS * FirstVNF_RAM ) / Max( Const,PN ) ) - ( ( RRS - DDR ) / ( MRS - PN ) ) ) / Max( ( Min( MRS ,Const ) - Max( FirstVNF_CPU_Server,DDR ) ),Min( ( CRS + FirstVNF_CPU_Server ) ,( CRS + FirstVNF_RAM_Server ) ) ) ) / Max( ( ( Max( ARS,FirstVNF_RAM_Server ) - Min( BR ,CRS ) ) * ( ( FirstVNF_CPU_Server + CRS ) + ( MDR / Const ) ) ),( Max( ( DDR / RRS ),( FirstVNF_RAM_Server - Const ) ) + ( Max( PN,FirstVNF_Mem ) + Max( RRS,ARS ) ) ) ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) - DS ) * DS ) ) - RRSe )", "obj1": 0.2842323651452282, "obj2": 0.5782852441798961}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( DDR / ACS ),Max( DDR,ACS ) ) ) + ( PN + ( Const / AMS ) ) )", "choosing": "( ( RCSe - ( ( Max( ( Max( ( RMSe - RMSe ),RRSe ) - ( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.12863070539419086, "obj2": 0.681745510189349}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ACS / FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.5228215767634855, "obj2": 0.4070525219571838}, {"determining": "( Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / DDR ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / FirstVNF_Mem ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) / CS ) * DS ) ) - RRSe )", "obj1": 0.1078838174273859, "obj2": 0.7008305597707503}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) ) / MRS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ACS / FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * ( RRSe - DS ) ) * DS ) ) - RRSe )", "obj1": 0.4605809128630705, "obj2": 0.4369531568214959}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ACS / FirstVNF_Mem_Server ) )", "choosing": "Max( Max( MLU,RMSe ),( MLU / MLU ) )", "obj1": 0.3132780082987552, "obj2": 0.5581157511906953}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( Max( DDR,FirstVNF_CPU ) / FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * ( RRSe - DS ) ) * DS ) ) - RRSe )", "obj1": 0.3962655601659751, "obj2": 0.47320105621600494}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ),( DDR * FirstVNF_CPU ) ) ) + ( DDR / CRS ) )", "choosing": "( ( ( RRSe - RRSe ) - ( ( Min( ( RMSe - ( RRSe - RRSe ) ) ,RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.21161825726141079, "obj2": 0.6187518628417045}, {"determining": "( ( FirstVNF_RAM_Server / Min( ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ) ,Max( DDR,ACS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( ( RRSe - RRSe ) - ( ( Min( ( RMSe - ( RRSe - CS ) ) ,RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.2033195020746888, "obj2": 0.6259859168468778}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) ) + PN ) ) ) + ( Max( DDR,FirstVNF_CPU_Server ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( ( ( ( RMSe - Max( RRSe,RMSe ) ) + RRSe ) * DS ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7543891452864434}, {"determining": "( ( FirstVNF_RAM_Server / ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ) + ( FirstVNF_Mem_Server / CRS ) )", "choosing": "( ( RRSe - ( ( Min( ( RMSe - ( RRSe - DS ) ) ,( ( RMSe - ( RRSe - DS ) ) - RRSe ) ) * DS ) * ( RRSe - DS ) ) ) - RRSe )", "obj1": 0.35477178423236516, "obj2": 0.5394285821046347}, {"determining": "( ( FirstVNF_RAM_Server / ( ( DDR * FirstVNF_CPU ) + ( CRS / AMS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * CS ) * MUR ) ) - RRSe )", "obj1": 0.1078838174273859, "obj2": 0.7008305597707503}, {"determining": "( FirstVNF_RAM_Server + ( ( ( FirstVNF_Mem_Server * ACS ) / Max( ( FirstVNF_Mem_Server / Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RMSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.0995850622406639, "obj2": 0.7102008325866743}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ( DDR * FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe - ( ( Max( Min( RMSe ,( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.0995850622406639, "obj2": 0.7102008325866743}, {"determining": "( ( FirstVNF_CPU_Server + ( BR * AMS ) ) - ( ACS / FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - ( RRSe - DS ) ) ),RRSe ) + DS ) * DS ) ) - RRSe )", "obj1": 0.5414937759336099, "obj2": 0.3940268743761458}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( Min( RRSe ,( RRSe - RMSe ) ),RCSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / AMS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RMSe - ( RRSe - DS ) ) ),RRSe ) * CS ) * MUC ) ) - RRSe )", "obj1": 0.1078838174273859, "obj2": 0.7008305597707503}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( ( Max( ( RMSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08921161825726141, "obj2": 0.7507147017125314}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),( DDR * ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( ACS,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe * ( RMSe - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1078838174273859, "obj2": 0.7008305597707503}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( FirstVNF_CPU_Server + BR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - ( ( Max( Max( RMSe,( RRSe - DS ) ),Max( ( RMSe - ( RRSe - DS ) ),RRSe ) ) * DS ) * DS ) ) - RRSe )", "obj1": 0.516597510373444, "obj2": 0.4077765563895364}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ACS / FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - ( ( Max( Max( RMSe,( RRSe - DS ) ),Max( ( RMSe - ( RRSe - DS ) ),RRSe ) ) * DS ) * DS ) ) - RRSe )", "obj1": 0.46680497925311204, "obj2": 0.421446534700155}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ACS / FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - ( ( Max( Max( RMSe,( RRSe - DS ) ),Max( ( RMSe - ( RRSe - DS ) ),RRSe ) ) * DS ) * DS ) ) - RRSe )", "obj1": 0.46680497925311204, "obj2": 0.421446534700155}, {"determining": "( ( Max( ( ACS * MDR ),Min( FirstVNF_Mem_Server ,PN ) ) + ( ( ( ( ( ( ACS / ARS ) + ( FirstVNF_Mem + ARS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_CPU ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) + Min( Max( ( ARS * CRS ),( CRS + CRS ) ) ,( ( MRS * BR ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) * ( ( ( ( ARS + MRS ) / ( DDR + CRS ) ) / ( ( PN / MRS ) / ( RRS / ARS ) ) ) + Max( ( Max( FirstVNF_Mem_Server,DDR ) * Min( Const ,FirstVNF_RAM ) ),Min( Max( FirstVNF_Mem,MDR ) ,( BR + PN ) ) ) ) ) / ( Min( Max( ( ( PN * FirstVNF_Mem ) / ( FirstVNF_RAM - MDR ) ),( Max( DDR,RRS ) * Max( ARS,RRS ) ) ) ,Min( ( ( PN * FirstVNF_CPU ) + ( Const - CRS ) ) ,Max( ( FirstVNF_RAM_Server * FirstVNF_CPU ),( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) ) + ( ( Min( ( BR + BR ) ,( RRS + FirstVNF_CPU_Server ) ) * Min( ( PN - FirstVNF_RAM ) ,( FirstVNF_CPU * FirstVNF_CPU ) ) ) + ( Min( ( BR * ACS ) ,( PN / ACS ) ) / ( Min( MDR ,FirstVNF_CPU_Server ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ) ) ) + ( ( ( ( ( ( Max( Const,BR ) + ( MRS - RRS ) ) + ( ( FirstVNF_CPU_Server / CRS ) * ( Const + FirstVNF_CPU ) ) ) + Min( Min( ( ACS + RRS ) ,( Const + ACS ) ) ,Max( ( BR * FirstVNF_RAM ),( MDR + FirstVNF_CPU ) ) ) ) / ( ( ( ( Const - FirstVNF_Mem ) * ( ACS + BR ) ) + ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * BR ) ) ) + Min( Min( ( ARS + DDR ) ,( PN * FirstVNF_Mem_Server ) ) ,Min( ( FirstVNF_CPU - FirstVNF_Mem_Server ) ,( FirstVNF_CPU + FirstVNF_RAM ) ) ) ) ) + Min( ( ( ( ( BR * MRS ) / ( DDR + MDR ) ) + Min( Min( ARS ,RRS ) ,( PN * PN ) ) ) * ( Min( ( AMS + MDR ) ,Max( RRS,MDR ) ) * ( ( FirstVNF_CPU_Server * PN ) - Min( FirstVNF_RAM_Server ,MDR ) ) ) ) ,( Max( ( ( BR + MRS ) + Min( AMS ,DDR ) ),Max( ( MDR + FirstVNF_RAM ),Min( FirstVNF_Mem ,ARS ) ) ) / ( ( ( CRS + FirstVNF_RAM ) / Max( FirstVNF_Mem_Server,PN ) ) * ( ( FirstVNF_Mem / MRS ) - Max( MDR,FirstVNF_CPU ) ) ) ) ) ) * Min( ( ( ( Max( Min( RRS ,ACS ),( Const / MRS ) ) / ( Min( MRS ,MRS ) - Min( AMS ,MDR ) ) ) / ( Max( Min( FirstVNF_Mem_Server ,MRS ),( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) + ( ( AMS - FirstVNF_RAM_Server ) - ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) ) / ( ( ( ( FirstVNF_CPU_Server - ACS ) / ( RRS - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM - AMS ) / ( PN + ACS ) ) ) * Min( ( ( FirstVNF_Mem / ARS ) / ( PN / RRS ) ) ,( ( MDR - MRS ) + Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) ) ) ,Min( Max( ( ( Min( FirstVNF_Mem ,Const ) - Min( Const ,FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) + ( ACS * DDR ) ) ),( Max( ( RRS / ACS ),( CRS / FirstVNF_Mem_Server ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) / ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ) ,Max( Min( Min( Min( MDR ,AMS ) ,( MDR / AMS ) ) ,( ( FirstVNF_Mem / AMS ) + Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ),( Max( Max( AMS,ARS ),Min( CRS ,FirstVNF_Mem ) ) + ( ( ACS * MDR ) * Min( FirstVNF_Mem ,ACS ) ) ) ) ) ) ) )", "choosing": "( Max( Max( ( ( ( ( Max( MUR,MUR ) + Max( DS,DS ) ) * ( ( RMSe * RRSe ) + Min( CS ,MUC ) ) ) * ( ( ( RMSe / MLU ) - ( MLU / RRSe ) ) + ( Max( RRSe,MUM ) * ( MUR - MUC ) ) ) ) * ( ( ( Max( MLU,RMSe ) + ( RMSe - RRSe ) ) - Max( ( MUM - MUM ),( RCSe / MUR ) ) ) * Min( ( ( RRSe * RMSe ) + Min( DS ,CS ) ) ,( Max( CS,MUM ) / ( MUM / MLU ) ) ) ) ),( ( Min( Min( ( MUR * RRSe ) ,Max( DS,DS ) ) ,Min( Max( RCSe,RMSe ) ,( MUM - RMSe ) ) ) / ( ( Min( CS ,MUM ) + ( MUC - CS ) ) * ( ( MLU + MUR ) / ( MUR * MUC ) ) ) ) + Min( ( Max( ( RRSe * RRSe ),( MUC / RRSe ) ) - ( ( MUM * MUM ) * Max( MLU,RCSe ) ) ) ,( ( ( MUR - RRSe ) - ( MUC + MUM ) ) * ( Max( DS,MUM ) * ( MLU + MLU ) ) ) ) ) ),Min( Min( Min( ( ( ( CS - MUM ) * ( DS - MUC ) ) + Min( Max( MUM,MUC ) ,( MLU / RCSe ) ) ) ,Max( Min( ( RCSe + RRSe ) ,( RMSe / MUC ) ),( ( MUM / RCSe ) * Min( RMSe ,MLU ) ) ) ) ,( ( Max( Min( MLU ,MUC ),( MUR + CS ) ) - Min( ( DS * MUR ) ,( MLU - RRSe ) ) ) - Max( ( Min( DS ,CS ) * ( DS - MUR ) ),( ( MUC - MLU ) / ( MUC / RRSe ) ) ) ) ) ,( ( ( ( ( MLU / MLU ) / ( MUR / DS ) ) / Min( ( MLU + MUM ) ,( RMSe - MUC ) ) ) * ( ( ( MUC * RCSe ) + Min( CS ,DS ) ) / ( Max( MUM,CS ) / ( MLU / RMSe ) ) ) ) * Min( ( Max( Min( RRSe ,RCSe ),( MLU - CS ) ) / ( Min( CS ,MUR ) * Min( RMSe ,MUR ) ) ) ,Min( ( Max( RRSe,CS ) / ( MUM + RRSe ) ) ,( ( RCSe - MUR ) - ( MLU * MUR ) ) ) ) ) ) ) * Min( Max( ( Min( Max( ( ( MUM / MUM ) - ( RMSe * CS ) ),( ( MUC + MUM ) / ( RRSe - RMSe ) ) ) ,( Max( Max( MLU,CS ),( DS - MUM ) ) / Min( ( RRSe - CS ) ,( RRSe + RRSe ) ) ) ) + Min( ( Max( ( MLU / RMSe ),( MUC - MUC ) ) * ( Max( MUR,RMSe ) * ( DS * RMSe ) ) ) ,Min( ( Min( MUC ,RCSe ) + ( RMSe * MUR ) ) ,( ( RCSe / DS ) - Max( RRSe,MLU ) ) ) ) ),Min( Max( Max( ( Max( CS,MUR ) - Max( CS,CS ) ),( ( CS / RCSe ) + Min( RRSe ,CS ) ) ),( ( ( MUC - RCSe ) / ( DS - MUC ) ) - ( Min( MUR ,MUR ) / Min( RRSe ,MUR ) ) ) ) ,Min( Max( Min( ( RMSe / CS ) ,( RRSe + MUR ) ),( Max( MLU,RRSe ) / Min( DS ,MUM ) ) ) ,Min( Min( ( MUM - MUR ) ,( MUM * MUM ) ) ,Min( ( DS - RCSe ) ,( DS + MUC ) ) ) ) ) ) ,( ( Min( ( Min( ( RMSe + RMSe ) ,Max( DS,MUM ) ) + ( ( MUC * RRSe ) / Min( RRSe ,CS ) ) ) ,Min( Max( Min( MUR ,MUM ),( MUR / MUR ) ) ,( ( MLU / RCSe ) * Max( RRSe,DS ) ) ) ) - ( RRSe * CS ) ) * ( ( ( Min( ( MUM - MUC ) ,( RMSe / RCSe ) ) / Min( ( MLU * RMSe ) ,( MLU + MLU ) ) ) + Min( ( ( RRSe + MUR ) * ( RMSe + MUM ) ) ,( ( RCSe / RRSe ) * Min( RRSe ,MUM ) ) ) ) * Max( ( Min( Min( CS ,DS ) ,( CS + RCSe ) ) - ( ( MUR + DS ) - ( MUR * RRSe ) ) ),Max( ( ( RRSe + MUR ) - ( MUR * MLU ) ),Min( ( RRSe * MUC ) ,( RCSe + CS ) ) ) ) ) ) ) )", "obj1": 0.6099585062240664, "obj2": 0.3247221560402507}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( ( ( ( ( ( ( ( DDR + ARS ) + Min( FirstVNF_RAM_Server ,Const ) ) * ( ( FirstVNF_RAM_Server + CRS ) - ( FirstVNF_RAM + AMS ) ) ) / Min( ( Min( CRS ,FirstVNF_RAM ) - ( FirstVNF_CPU * CRS ) ) ,( Min( MRS ,Const ) / Max( ARS,FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( FirstVNF_Mem_Server - CRS ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) + ( ( CRS - CRS ) + Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) ) - ( ( ( DDR / CRS ) - Max( FirstVNF_RAM,PN ) ) / ( ( BR + FirstVNF_Mem ) - Max( AMS,FirstVNF_RAM_Server ) ) ) ) ) + ( ( ( ( ( RRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server - ARS ) ) / ( ( DDR * BR ) + Max( FirstVNF_Mem,AMS ) ) ) * Min( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) + Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ,Max( ( FirstVNF_Mem + RRS ),( RRS + ARS ) ) ) ) - Max( ( ( Max( FirstVNF_Mem_Server,MRS ) - ( FirstVNF_RAM_Server * CRS ) ) + Max( Max( Const,FirstVNF_CPU_Server ),( CRS * DDR ) ) ),Min( Min( Max( DDR,MDR ) ,Max( AMS,PN ) ) ,( Min( MDR ,MRS ) / ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) ) ) * ( Min( Min( ( ( Min( ARS ,RRS ) * ( FirstVNF_Mem_Server * ARS ) ) * ( ( RRS * MDR ) / ( AMS / PN ) ) ) ,( Min( ( MRS * FirstVNF_Mem ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) - ( ( ACS - MDR ) - ( BR * DDR ) ) ) ) ,( Min( Max( ( FirstVNF_RAM * ACS ),( FirstVNF_CPU + MDR ) ) ,( ( FirstVNF_Mem / CRS ) * ( Const * ARS ) ) ) / Min( Max( Min( FirstVNF_Mem_Server ,Const ),Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ,Max( ( MRS * MRS ),Min( DDR ,RRS ) ) ) ) ) - ( Min( ( ( ( FirstVNF_Mem_Server + MRS ) / ( PN / CRS ) ) - ( ( ACS + FirstVNF_RAM_Server ) * ( Const / MDR ) ) ) ,( ( Min( Const ,FirstVNF_Mem_Server ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem ,Const ) * ( DDR / ACS ) ) ) ) + Min( ( ( Max( MDR,MRS ) / Max( ARS,MRS ) ) / ( ( BR - DDR ) * ( MRS - FirstVNF_CPU_Server ) ) ) ,( ( Min( Const ,BR ) - ( MDR + ACS ) ) - ( ( FirstVNF_RAM - DDR ) / ( PN + FirstVNF_RAM ) ) ) ) ) ) ) * ( ( ( ( ( Max( ( FirstVNF_CPU + Const ),( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) / ( ( MRS + ACS ) * Max( RRS,FirstVNF_Mem_Server ) ) ) / ( ( Max( DDR,MRS ) - ( MDR / ACS ) ) + ( Max( BR,FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server - CRS ) ) ) ) + ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) ) / ( Min( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) + Max( PN,PN ) ) + ( Max( MDR,MRS ) - ( FirstVNF_Mem_Server + MDR ) ) ) ,( ( ( FirstVNF_CPU_Server * CRS ) + ( MRS - PN ) ) * Max( ( Const + FirstVNF_Mem_Server ),( ACS - FirstVNF_Mem ) ) ) ) / ( ( Max( Max( PN,MRS ),( ARS + Const ) ) / ( Max( MDR,FirstVNF_RAM ) - ( ARS * ARS ) ) ) / ( ( ( MRS - AMS ) - ( ACS / FirstVNF_CPU ) ) - ( Max( Const,MDR ) / Max( ARS,FirstVNF_CPU ) ) ) ) ) ) + DDR ) )", "choosing": "( Max( ( Max( ( Min( ( ( RCSe / RMSe ) + Min( RCSe ,MUC ) ) ,( Min( MUM ,RCSe ) / Min( RMSe ,DS ) ) ) / ( ( ( MLU + DS ) / ( RRSe - MUR ) ) / Max( Max( MLU,RMSe ),Min( MLU ,RRSe ) ) ) ),( Min( ( ( MUM - MUM ) / Max( DS,MUM ) ) ,( ( CS + MUC ) - ( RMSe + MLU ) ) ) + ( ( ( MLU / MUR ) * ( RRSe * MUC ) ) + ( ( RMSe / RCSe ) / ( MUR / MUR ) ) ) ) ) * Min( ( Max( Min( ( RRSe * RCSe ) ,( RCSe + RCSe ) ),( ( DS + RRSe ) - ( CS / RMSe ) ) ) - ( Min( Min( RCSe ,MUR ) ,( MUR - MUC ) ) * ( Max( MLU,MLU ) + Min( RMSe ,DS ) ) ) ) ,Max( ( RMSe - ( RRSe - ( RRSe - DS ) ) ),RRSe ) ) ),( Min( ( Max( Min( Max( RCSe,MUR ) ,Min( DS ,MUR ) ),( Max( RCSe,MUC ) / Min( MLU ,DS ) ) ) - Min( ( ( MUM - MUC ) - ( RRSe / MUC ) ) ,( Max( CS,RRSe ) / Max( RCSe,RMSe ) ) ) ) ,Max( ( ( ( MUR + MUR ) / ( RCSe - RMSe ) ) + Min( Min( RMSe ,MLU ) ,( RMSe - DS ) ) ),Min( Max( ( RMSe - MUR ),( RRSe - MUM ) ) ,( ( MUM / RCSe ) + Max( RCSe,MUC ) ) ) ) ) * Min( Max( ( ( ( MLU - MUM ) - ( MLU + RCSe ) ) / ( Max( CS,CS ) + Max( RCSe,RRSe ) ) ),Max( Min( ( RMSe - MUR ) ,Min( RMSe ,CS ) ),( Max( MUM,RCSe ) / ( RCSe + RRSe ) ) ) ) ,( ( ( Max( RMSe,MUC ) * Min( RCSe ,RCSe ) ) + ( ( CS / RCSe ) / ( RRSe + RRSe ) ) ) + ( ( ( DS / DS ) + ( RCSe - RRSe ) ) * ( Max( MUC,MUC ) + Min( DS ,CS ) ) ) ) ) ) ) / ( Max( ( ( ( ( ( RRSe + MUC ) / Min( RCSe ,DS ) ) - ( ( CS - CS ) * ( RCSe / RMSe ) ) ) - ( ( ( MLU * RCSe ) / Min( RCSe ,MUC ) ) + Max( ( RMSe + RRSe ),( MUM / MLU ) ) ) ) / ( Max( ( ( MUC - RMSe ) + ( RMSe / MUM ) ),( ( MUM / DS ) / ( MUR * MUR ) ) ) + Min( ( ( CS - MLU ) + Min( RMSe ,CS ) ) ,Max( ( RCSe + MUR ),Max( CS,MUR ) ) ) ) ),( ( ( ( Min( RCSe ,CS ) / Min( DS ,MUR ) ) - ( ( CS * RRSe ) - ( RCSe / CS ) ) ) - ( ( ( RMSe - RCSe ) / Min( RCSe ,MUM ) ) / Min( Max( MLU,MLU ) ,( RRSe * MUM ) ) ) ) * ( ( Min( ( DS * RCSe ) ,( MLU / MUR ) ) * ( ( MLU - CS ) - ( MUR + MUC ) ) ) * ( ( ( RMSe + MLU ) / ( RCSe - MLU ) ) * Min( ( DS / MUR ) ,Min( CS ,MUM ) ) ) ) ) ) - ( ( Max( ( ( ( RCSe + RMSe ) - ( RMSe / RMSe ) ) + ( ( MLU / MUR ) * Min( MUC ,MLU ) ) ),( Max( ( DS * MUM ),( MUC + RRSe ) ) + ( ( MLU - MUR ) - Min( RCSe ,MUR ) ) ) ) * RMSe ) - ( ( Max( Max( ( CS * MUR ),( DS + MUR ) ),( ( RCSe + MLU ) * Min( MUR ,CS ) ) ) * ( ( ( CS / MUM ) - ( MUM - MUR ) ) + Min( Max( MUR,DS ) ,Max( RMSe,RRSe ) ) ) ) + ( ( ( Min( RCSe ,MUM ) + ( MUR - RRSe ) ) / ( ( MLU / MUR ) * Min( MUM ,MUC ) ) ) * ( Min( ( MUR * MLU ) ,( MLU - MUC ) ) / ( ( DS * MUR ) - ( RCSe / DS ) ) ) ) ) ) ) )", "obj1": 0.491701244813278, "obj2": 0.4142914020998808}, {"determining": "( ( ( ( ( ( ( ( ARS - CRS ) * ( MDR * FirstVNF_Mem_Server ) ) - Max( Max( FirstVNF_Mem,FirstVNF_Mem_Server ),( FirstVNF_RAM_Server * CRS ) ) ) + ( ( Min( Const ,ARS ) * ( PN - Const ) ) * Max( ( MDR / FirstVNF_Mem_Server ),Min( Const ,RRS ) ) ) ) / ( ( ( Min( MRS ,FirstVNF_Mem ) + Min( BR ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_Mem - PN ) / ( RRS - PN ) ) ) / Min( Min( Max( BR,RRS ) ,( MDR * AMS ) ) ,( ( FirstVNF_CPU_Server * Const ) - ( MDR - MRS ) ) ) ) ) + Min( ( ( ( ( Const / ARS ) - ( MRS / FirstVNF_CPU ) ) * ( ( BR * ARS ) * ( ACS / AMS ) ) ) * ( Min( ( MRS + AMS ) ,( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( CRS - FirstVNF_CPU_Server ) ) ) ) ,( Min( ( ( FirstVNF_CPU + FirstVNF_RAM ) - Min( FirstVNF_RAM ,PN ) ) ,( ( ACS + FirstVNF_Mem_Server ) * Max( RRS,MRS ) ) ) + ( ( Min( FirstVNF_CPU_Server ,PN ) / ( RRS / ARS ) ) - ( ( FirstVNF_Mem_Server * RRS ) * ( BR / MRS ) ) ) ) ) ) + ( ( ( ( ( ( ACS / ARS ) + ( FirstVNF_Mem + ARS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_CPU ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ) + Min( Max( ( ARS * CRS ),( CRS + CRS ) ) ,( ( MRS * BR ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) * ( ( ( ( ARS + MRS ) / ( DDR + CRS ) ) / ( ( PN / MRS ) / ( RRS / ARS ) ) ) + Max( ( Max( FirstVNF_Mem_Server,DDR ) * Min( Const ,FirstVNF_RAM ) ),Min( Max( FirstVNF_Mem,MDR ) ,( BR + PN ) ) ) ) ) / ( Min( Max( ( ( PN * FirstVNF_Mem ) / ( FirstVNF_RAM - MDR ) ),( Max( DDR,RRS ) * Max( ARS,RRS ) ) ) ,Min( ( ( PN * FirstVNF_CPU ) + ( Const - CRS ) ) ,Max( ( FirstVNF_RAM_Server * FirstVNF_CPU ),( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) ) + ( ( Min( ( BR + BR ) ,( RRS + FirstVNF_CPU_Server ) ) * Min( ( PN - FirstVNF_RAM ) ,( FirstVNF_CPU * FirstVNF_CPU ) ) ) + ( Min( ( BR * ACS ) ,( PN / ACS ) ) / ( Min( MDR ,FirstVNF_CPU_Server ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ) ) ) + ( ( ( ( ( ( Max( Const,BR ) + ( MRS - RRS ) ) + ( ( FirstVNF_CPU_Server / CRS ) * ( Const + FirstVNF_CPU ) ) ) + Min( Min( ( ACS + RRS ) ,( Const + ACS ) ) ,Max( ( BR * FirstVNF_RAM ),( MDR + FirstVNF_CPU ) ) ) ) / ( ( ( ( Const - FirstVNF_Mem ) * ( ACS + BR ) ) + ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * BR ) ) ) + Min( Min( ( ARS + DDR ) ,( PN * FirstVNF_Mem_Server ) ) ,Min( ( FirstVNF_CPU - FirstVNF_Mem_Server ) ,( FirstVNF_CPU + FirstVNF_RAM ) ) ) ) ) + Min( ( ( ( ( BR * MRS ) / ( DDR + MDR ) ) + Min( Min( ARS ,RRS ) ,( PN * PN ) ) ) * ( Min( ( AMS + MDR ) ,Max( RRS,MDR ) ) * ( ( FirstVNF_CPU_Server * PN ) - Min( FirstVNF_RAM_Server ,MDR ) ) ) ) ,( Max( ( ( BR + MRS ) + Min( AMS ,DDR ) ),Max( ( MDR + FirstVNF_RAM ),Min( FirstVNF_Mem ,ARS ) ) ) / ( ( ( CRS + FirstVNF_RAM ) / Max( FirstVNF_Mem_Server,PN ) ) * ( ( FirstVNF_Mem / MRS ) - Max( MDR,FirstVNF_CPU ) ) ) ) ) ) * Min( ( ( ( Max( Min( RRS ,ACS ),( Const / MRS ) ) / ( Min( MRS ,MRS ) - Min( AMS ,MDR ) ) ) / ( Max( Min( FirstVNF_Mem_Server ,MRS ),( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) + ( ( AMS - FirstVNF_RAM_Server ) - ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) ) / ( ( ( ( FirstVNF_CPU_Server - ACS ) / ( RRS - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM - AMS ) / ( PN + ACS ) ) ) * Min( ( ( FirstVNF_Mem / ARS ) / ( PN / RRS ) ) ,( ( MDR - MRS ) + Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) ) ) ,Min( Max( ( ( Min( FirstVNF_Mem ,Const ) - Min( Const ,FirstVNF_RAM ) ) * ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) + ( ACS * DDR ) ) ),( Max( ( RRS / ACS ),( CRS / FirstVNF_Mem_Server ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) / ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ) ,Max( Min( Min( Min( MDR ,AMS ) ,( MDR / AMS ) ) ,( ( FirstVNF_Mem / AMS ) + Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ),( Max( Max( AMS,ARS ),Min( CRS ,FirstVNF_Mem ) ) + ( ( ACS * MDR ) * Min( FirstVNF_Mem ,ACS ) ) ) ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.6556016597510373, "obj2": 0.27421102271797854}], "46": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) ) / MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1078838174273859, "obj2": 0.7008305597707503}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / DDR ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * ( RRSe - DS ) ) * DS ) ) - RRSe )", "obj1": 0.1908713692946058, "obj2": 0.6482698979824754}, {"determining": "( ( FirstVNF_RAM_Server * Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) - DS ) * DS ) ) - RRSe )", "obj1": 0.1991701244813278, "obj2": 0.6353160508612061}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( AMS / ACS ) / ( ( ACS / ACS ) * Max( AMS,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( MUC - ( ( Max( ( DS - ( RMSe - RMSe ) ),RRSe ) * MUM ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( ( BR / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( DDR * FirstVNF_CPU ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - MUR )", "obj1": 0.08091286307053942, "obj2": 0.7640380726413522}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( DDR,ACS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_Mem_Server,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) ) / MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * CS ) * ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) ) ) - RRSe )", "obj1": 0.17219917012448133, "obj2": 0.6523678112321003}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RMSe - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1078838174273859, "obj2": 0.7008305597707503}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( DDR / PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * CRS ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe * ( ( Max( ( RMSe - ( RRSe - DS ) ),MUM ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1078838174273859, "obj2": 0.7008305597707503}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( ( MDR / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Min( ( RMSe - ( RRSe - DS ) ) ,RRSe ) - DS ) * DS ) ) - RRSe )", "obj1": 0.1991701244813278, "obj2": 0.6353160508612061}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) - DS ) * DS ) ) - RRSe )", "obj1": 0.1991701244813278, "obj2": 0.6353160508612061}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( PN / PN ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / RRS ) ) ) ) ) + ( DDR - CRS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( MUM - ( RRSe - DS ) ),RRSe ) * CS ) / MUM ) ) - RRSe )", "obj1": 0.1078838174273859, "obj2": 0.7008305597707503}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( DDR * FirstVNF_CPU ),ACS ) ) ) + ( PN + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.11825726141078838, "obj2": 0.6952260016859347}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( PN + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RMSe - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1078838174273859, "obj2": 0.7008305597707503}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( DDR / ACS ),Max( DDR,ACS ) ) ) + ( PN + ( Const / AMS ) ) )", "choosing": "( ( RCSe - ( ( Max( ( Max( ( RMSe - RMSe ),RRSe ) - ( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.12863070539419086, "obj2": 0.681745510189349}, {"determining": "( Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / DDR ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / FirstVNF_Mem ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) / CS ) * DS ) ) - RRSe )", "obj1": 0.1078838174273859, "obj2": 0.7008305597707503}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) ) / MRS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) ) + PN ) ) ) + ( Max( DDR,FirstVNF_CPU_Server ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( ( ( ( RMSe - Max( RRSe,RMSe ) ) + RRSe ) * DS ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7543891452864434}, {"determining": "( ( FirstVNF_RAM_Server / ( ( DDR * FirstVNF_CPU ) + ( CRS / AMS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * CS ) * MUR ) ) - RRSe )", "obj1": 0.1078838174273859, "obj2": 0.7008305597707503}, {"determining": "( FirstVNF_RAM_Server + ( ( ( FirstVNF_Mem_Server * ACS ) / Max( ( FirstVNF_Mem_Server / Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RMSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.0995850622406639, "obj2": 0.7102008325866743}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ( DDR * FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe - ( ( Max( Min( RMSe ,( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.0995850622406639, "obj2": 0.7102008325866743}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( Min( RRSe ,( RRSe - RMSe ) ),RCSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / AMS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RMSe - ( RRSe - DS ) ) ),RRSe ) * CS ) * MUC ) ) - RRSe )", "obj1": 0.1078838174273859, "obj2": 0.7008305597707503}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),( DDR * ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( ACS,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe * ( RMSe - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1078838174273859, "obj2": 0.7008305597707503}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( ACS,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RMSe - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1078838174273859, "obj2": 0.7008305597707503}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RMSe - ( RRSe - RRSe ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1078838174273859, "obj2": 0.7008305597707503}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RMSe - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1078838174273859, "obj2": 0.7008305597707503}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / Max( DDR,FirstVNF_CPU ) ),( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) ) ) + PN ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),( RRSe - DS ) ) * CS ) * DS ) ) - RRSe )", "obj1": 0.15352697095435686, "obj2": 0.661350733631433}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),CS ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1078838174273859, "obj2": 0.7008305597707503}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RMSe - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.0995850622406639, "obj2": 0.7102008325866743}, {"determining": "( Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.11203319502074689, "obj2": 0.6993204665933453}, {"determining": "( Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1078838174273859, "obj2": 0.7008305597707503}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) ) / MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1078838174273859, "obj2": 0.7008305597707503}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( ( RRSe - DS ) - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7408590379753148}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.11825726141078838, "obj2": 0.6952260016859347}, {"determining": "( AMS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.0954356846473029, "obj2": 0.7184713299766963}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) ) / MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - RMSe ) - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.09336099585062241, "obj2": 0.7387873356834989}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) ) / MRS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),( DDR + FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( Max( RMSe,( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1078838174273859, "obj2": 0.7008305597707503}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( Max( FirstVNF_Mem_Server,ACS ) / Max( Min( DDR ,ACS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) + ( ( FirstVNF_Mem_Server / FirstVNF_CPU ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) ) / MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RMSe - RMSe ) ),DS ) * DS ) * DS ) ) - RMSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( ( FirstVNF_RAM_Server / ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ) + ( FirstVNF_Mem_Server / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1078838174273859, "obj2": 0.7008305597707503}, {"determining": "( Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_RAM_Server ) ) ) + PN ) ) ) + ( ( PN * FirstVNF_CPU ) + ( FirstVNF_Mem_Server / AMS ) ) )", "choosing": "( ( RRSe + ( ( Max( ( MUM - ( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1078838174273859, "obj2": 0.7008305597707503}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( DDR * FirstVNF_CPU ),ACS ) ) ) + ( PN + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.11825726141078838, "obj2": 0.6952260016859347}, {"determining": "( Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1078838174273859, "obj2": 0.7008305597707503}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( ( PN / ACS ) / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( ACS,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( DS - DS ) ),RRSe ) * CS ) * DS ) ) - MLU )", "obj1": 0.1078838174273859, "obj2": 0.7008305597707503}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_Mem_Server,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) ) / MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * CS ) * ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) ) ) - RRSe )", "obj1": 0.12655601659751037, "obj2": 0.6908322363183916}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( DDR / ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( DDR * FirstVNF_CPU ),ACS ) ) ) ),Max( DDR,ACS ) ) ) + ( PN + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( Max( ( RMSe - RMSe ),RRSe ) - ( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * CS ) )", "obj1": 0.19294605809128632, "obj2": 0.635441210730466}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( DDR * FirstVNF_CPU ),ACS ) ) ) + ( PN + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.13070539419087138, "obj2": 0.6772607403564841}], "47": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) ) / MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1078838174273859, "obj2": 0.7008305597707503}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( AMS / ACS ) / ( ( ACS / ACS ) * Max( AMS,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( MUC - ( ( Max( ( DS - ( RMSe - RMSe ) ),RRSe ) * MUM ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( ( BR / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( DDR * FirstVNF_CPU ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * DS ) * DS ) ) - MUR )", "obj1": 0.08091286307053942, "obj2": 0.7640380726413522}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( DDR,ACS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RMSe - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1078838174273859, "obj2": 0.7008305597707503}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( DDR / PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * CRS ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe * ( ( Max( ( RMSe - ( RRSe - DS ) ),MUM ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1078838174273859, "obj2": 0.7008305597707503}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( PN / PN ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / RRS ) ) ) ) ) + ( DDR - CRS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( MUM - ( RRSe - DS ) ),RRSe ) * CS ) / MUM ) ) - RRSe )", "obj1": 0.1078838174273859, "obj2": 0.7008305597707503}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( PN + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RMSe - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1078838174273859, "obj2": 0.7008305597707503}, {"determining": "( Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / DDR ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / FirstVNF_Mem ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) / CS ) * DS ) ) - RRSe )", "obj1": 0.1078838174273859, "obj2": 0.7008305597707503}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) ) / MRS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) ) + PN ) ) ) + ( Max( DDR,FirstVNF_CPU_Server ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( ( ( ( RMSe - Max( RRSe,RMSe ) ) + RRSe ) * DS ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7543891452864434}, {"determining": "( ( FirstVNF_RAM_Server / ( ( DDR * FirstVNF_CPU ) + ( CRS / AMS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * CS ) * MUR ) ) - RRSe )", "obj1": 0.1078838174273859, "obj2": 0.7008305597707503}, {"determining": "( FirstVNF_RAM_Server + ( ( ( FirstVNF_Mem_Server * ACS ) / Max( ( FirstVNF_Mem_Server / Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RMSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.0995850622406639, "obj2": 0.7102008325866743}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ( DDR * FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe - ( ( Max( Min( RMSe ,( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.0995850622406639, "obj2": 0.7102008325866743}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( Min( RRSe ,( RRSe - RMSe ) ),RCSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / AMS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RMSe - ( RRSe - DS ) ) ),RRSe ) * CS ) * MUC ) ) - RRSe )", "obj1": 0.1078838174273859, "obj2": 0.7008305597707503}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),( DDR * ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( ACS,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe * ( RMSe - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1078838174273859, "obj2": 0.7008305597707503}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( ACS,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RMSe - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1078838174273859, "obj2": 0.7008305597707503}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RMSe - ( RRSe - RRSe ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1078838174273859, "obj2": 0.7008305597707503}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RMSe - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1078838174273859, "obj2": 0.7008305597707503}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),CS ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1078838174273859, "obj2": 0.7008305597707503}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RMSe - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.0995850622406639, "obj2": 0.7102008325866743}, {"determining": "( Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1078838174273859, "obj2": 0.7008305597707503}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) ) / MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1078838174273859, "obj2": 0.7008305597707503}, {"determining": "( AMS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.0954356846473029, "obj2": 0.7184713299766963}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) ) / MRS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),( DDR + FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( Max( RMSe,( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1078838174273859, "obj2": 0.7008305597707503}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( Max( FirstVNF_Mem_Server,ACS ) / Max( Min( DDR ,ACS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) + ( ( FirstVNF_Mem_Server / FirstVNF_CPU ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) ) / MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RMSe - RMSe ) ),DS ) * DS ) * DS ) ) - RMSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( ( FirstVNF_RAM_Server / ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ) + ( FirstVNF_Mem_Server / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1078838174273859, "obj2": 0.7008305597707503}, {"determining": "( Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_RAM_Server ) ) ) + PN ) ) ) + ( ( PN * FirstVNF_CPU ) + ( FirstVNF_Mem_Server / AMS ) ) )", "choosing": "( ( RRSe + ( ( Max( ( MUM - ( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1078838174273859, "obj2": 0.7008305597707503}, {"determining": "( Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1078838174273859, "obj2": 0.7008305597707503}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( PN / PN ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / RRS ) ) ) ) ) + ( DDR - CRS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( MUM - ( RRSe - DS ) ),RRSe ) * CS ) / MUM ) ) - RRSe )", "obj1": 0.1037344398340249, "obj2": 0.7033970571038207}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) ) / MRS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) ) / MRS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR - CRS ) )", "choosing": "( ( RMSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( MUM - ( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.0995850622406639, "obj2": 0.7102008325866743}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( DDR * FirstVNF_CPU ),ACS ) ) ) + ( PN + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( PN + ( BR / AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( DS - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.09336099585062241, "obj2": 0.7189357326953814}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / AMS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( ( BR / AMS ) / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1016597510373444, "obj2": 0.7086054767161386}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / AMS ) / Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1016597510373444, "obj2": 0.7086054767161386}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / Max( DDR,PN ) ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe / ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ( ( FirstVNF_RAM_Server * Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ) ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.0995850622406639, "obj2": 0.7102008325866743}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RMSe - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.0995850622406639, "obj2": 0.7102008325866743}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( DDR,ACS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RMSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7277779024456189}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * RMSe ) * DS ) ) - RRSe )", "obj1": 0.1037344398340249, "obj2": 0.7033970571038207}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}], "48": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( AMS / ACS ) / ( ( ACS / ACS ) * Max( AMS,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( MUC - ( ( Max( ( DS - ( RMSe - RMSe ) ),RRSe ) * MUM ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( DDR,ACS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) ) / MRS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) ) + PN ) ) ) + ( Max( DDR,FirstVNF_CPU_Server ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( ( ( ( RMSe - Max( RRSe,RMSe ) ) + RRSe ) * DS ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7543891452864434}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( Min( RRSe ,( RRSe - RMSe ) ),RCSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( Max( FirstVNF_Mem_Server,ACS ) / Max( Min( DDR ,ACS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) + ( ( FirstVNF_Mem_Server / FirstVNF_CPU ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) ) / MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RMSe - RMSe ) ),DS ) * DS ) * DS ) ) - RMSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( PN / PN ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / RRS ) ) ) ) ) + ( DDR - CRS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( MUM - ( RRSe - DS ) ),RRSe ) * CS ) / MUM ) ) - RRSe )", "obj1": 0.1037344398340249, "obj2": 0.7033970571038207}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) ) / MRS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) ) / MRS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR - CRS ) )", "choosing": "( ( RMSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / AMS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( ( BR / AMS ) / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1016597510373444, "obj2": 0.7086054767161386}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / AMS ) / Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1016597510373444, "obj2": 0.7086054767161386}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / Max( DDR,PN ) ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe / ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * RMSe ) * DS ) ) - RRSe )", "obj1": 0.1037344398340249, "obj2": 0.7033970571038207}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) ) / MRS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) ) / MRS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( ( Max( ( RMSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7543891452864434}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / AMS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / Const ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( MLU - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( AMS,ACS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( MUM - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7597213561384957}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( Min( FirstVNF_RAM_Server ,( ( FirstVNF_Mem_Server / ACS ) + ( DDR / ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / PN ) + ( Max( DDR,FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( MUM - Min( RRSe ,DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1037344398340249, "obj2": 0.7033970571038207}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / AMS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( ( BR / AMS ) / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1016597510373444, "obj2": 0.7086054767161386}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( PN + ( BR / AMS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( ( FirstVNF_RAM_Server / ( ( RRS / ACS ) + Max( FirstVNF_Mem_Server,ACS ) ) ) + ( ( FirstVNF_RAM_Server + ( ( FirstVNF_Mem_Server / ACS ) + ( ( DDR - FirstVNF_CPU ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( ( ( MUM - ( RRSe - DS ) ) + MUR ) * CS ) * RMSe ) ) - RRSe )", "obj1": 0.1037344398340249, "obj2": 0.7033970571038207}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server - ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server * ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server - Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe * DS ) - ( RCSe - DS ) ) ),RRSe ) * MUM ) * DS ) ) - MUR )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( DDR,ACS ) ) ) + Min( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / PN ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) ,( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RMSe - ( RRSe - DS ) ) ),RRSe ) * CS ) * RCSe ) ) - RRSe )", "obj1": 0.10580912863070539, "obj2": 0.702746708156179}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / AMS ),Max( DDR,ACS ) ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.10580912863070539, "obj2": 0.702746708156179}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / FirstVNF_Mem_Server ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * CS ) + DS ) ) - RRSe )", "obj1": 0.1037344398340249, "obj2": 0.7033970571038207}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) ) / MRS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( FirstVNF_RAM_Server + ( ( ( FirstVNF_Mem_Server * ACS ) / Max( ( FirstVNF_Mem_Server / Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( FirstVNF_Mem_Server ,ACS ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),CS ) * RCSe ) * DS ) ) - ( ( Max( ( RMSe - ( RMSe - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.09336099585062241, "obj2": 0.7089766000854774}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,AMS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) / ACS ),Max( ACS,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( ( RRSe - DS ) - ( RMSe * ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1078838174273859, "obj2": 0.7003607699905319}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( Max( DDR,ACS ) / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7573567463955581}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( AMS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ),ACS ) ) ) + ( PN + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( PN + ( BR / AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.0912863070539419, "obj2": 0.7195954074537133}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1037344398340249, "obj2": 0.7033970571038207}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / AMS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1016597510373444, "obj2": 0.7086054767161386}], "49": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( PN / PN ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / RRS ) ) ) ) ) + ( DDR - CRS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( MUM - ( RRSe - DS ) ),RRSe ) * CS ) / MUM ) ) - RRSe )", "obj1": 0.1037344398340249, "obj2": 0.7033970571038207}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * RMSe ) * DS ) ) - RRSe )", "obj1": 0.1037344398340249, "obj2": 0.7033970571038207}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( AMS,ACS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( MUM - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7597213561384957}, {"determining": "( Min( FirstVNF_RAM_Server ,( ( FirstVNF_Mem_Server / ACS ) + ( DDR / ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / PN ) + ( Max( DDR,FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( MUM - Min( RRSe ,DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1037344398340249, "obj2": 0.7033970571038207}, {"determining": "( ( FirstVNF_RAM_Server / ( ( RRS / ACS ) + Max( FirstVNF_Mem_Server,ACS ) ) ) + ( ( FirstVNF_RAM_Server + ( ( FirstVNF_Mem_Server / ACS ) + ( ( DDR - FirstVNF_CPU ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( ( ( MUM - ( RRSe - DS ) ) + MUR ) * CS ) * RMSe ) ) - RRSe )", "obj1": 0.1037344398340249, "obj2": 0.7033970571038207}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server - ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server * ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server - Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe * DS ) - ( RCSe - DS ) ) ),RRSe ) * MUM ) * DS ) ) - MUR )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( DDR,ACS ) ) ) + Min( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / PN ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) ,( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RMSe - ( RRSe - DS ) ) ),RRSe ) * CS ) * RCSe ) ) - RRSe )", "obj1": 0.10580912863070539, "obj2": 0.702746708156179}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / AMS ),Max( DDR,ACS ) ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.10580912863070539, "obj2": 0.702746708156179}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / FirstVNF_Mem_Server ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * CS ) + DS ) ) - RRSe )", "obj1": 0.1037344398340249, "obj2": 0.7033970571038207}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( FirstVNF_Mem_Server ,ACS ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),CS ) * RCSe ) * DS ) ) - ( ( Max( ( RMSe - ( RMSe - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.09336099585062241, "obj2": 0.7089766000854774}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,AMS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) / ACS ),Max( ACS,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( ( RRSe - DS ) - ( RMSe * ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1078838174273859, "obj2": 0.7003607699905319}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( AMS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ),ACS ) ) ) + ( PN + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( PN + ( BR / AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.0912863070539419, "obj2": 0.7195954074537133}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1037344398340249, "obj2": 0.7033970571038207}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / Const ),( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( ARS / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server + ( DDR - FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),CS ) * CS ) * DS ) ) - ( Max( Max( ( RMSe - ( RMSe - MUC ) ),RRSe ),CS ) * DS ) ) - MLU )", "obj1": 0.09336099585062241, "obj2": 0.7089766000854774}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),CS ) * CS ) * DS ) ) - ( ( Max( ( RMSe - ( RMSe - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.0954356846473029, "obj2": 0.7077621838759581}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( FirstVNF_Mem_Server / ACS ),ACS ) ) ) + ( PN + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( PN + ( BR / AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RMSe - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.12448132780082988, "obj2": 0.6851899595298102}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( ( ( FirstVNF_RAM_Server / PN ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( Max( ( RMSe - ( RMSe - ( RRSe - DS ) ) ),RRSe ) * CS ) ) - RRSe )", "obj1": 0.19294605809128632, "obj2": 0.635201691538245}, {"determining": "( ( ( Max( ( ( ( Min( Const ,RRS ) / Min( FirstVNF_RAM ,AMS ) ) - ( ( MRS / RRS ) + ( FirstVNF_RAM / PN ) ) ) * ( Min( ( Const / FirstVNF_Mem_Server ) ,( FirstVNF_CPU + Const ) ) - ( ( ARS * ACS ) - Max( ARS,MRS ) ) ) ),( Min( Min( Min( MDR ,BR ) ,Min( ARS ,FirstVNF_Mem ) ) ,( Min( Const ,Const ) - ( FirstVNF_CPU / MRS ) ) ) - ( ( Max( FirstVNF_Mem,PN ) / ( FirstVNF_Mem_Server - CRS ) ) * Min( Max( Const,FirstVNF_Mem_Server ) ,( ACS * FirstVNF_RAM ) ) ) ) ) + Min( ( Max( Min( Min( Const ,FirstVNF_CPU ) ,( MRS / FirstVNF_Mem_Server ) ),( ( FirstVNF_Mem_Server - RRS ) * ( Const * FirstVNF_Mem ) ) ) - ( ( Max( FirstVNF_RAM,MRS ) - ( FirstVNF_RAM * ARS ) ) / ( ( RRS / BR ) - ( DDR - BR ) ) ) ) ,( ( ( ( MDR * Const ) - Min( MDR ,Const ) ) * Min( ( PN + Const ) ,( FirstVNF_Mem + MRS ) ) ) - ( ( ( FirstVNF_Mem_Server / AMS ) / ( FirstVNF_Mem - FirstVNF_Mem ) ) - ( Max( BR,PN ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ) ) ) * ( ( Min( Min( Min( ( PN * ARS ) ,( FirstVNF_Mem * ACS ) ) ,Min( ( MRS - FirstVNF_RAM ) ,( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) ,( Min( Max( MDR,FirstVNF_Mem ) ,Max( MDR,BR ) ) + Max( Min( AMS ,Const ),Max( AMS,CRS ) ) ) ) - ( ( Min( ( MDR - FirstVNF_CPU_Server ) ,Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( FirstVNF_RAM_Server - ARS ) + Min( FirstVNF_CPU ,MDR ) ) ) + Min( ( ( FirstVNF_CPU / ARS ) / ( PN * PN ) ) ,( Max( FirstVNF_Mem_Server,ACS ) * ( CRS * RRS ) ) ) ) ) / ( ( ( ( Min( MRS ,FirstVNF_Mem_Server ) / Min( CRS ,FirstVNF_RAM_Server ) ) + ( Min( FirstVNF_CPU_Server ,BR ) - ( PN / FirstVNF_RAM_Server ) ) ) / Min( ( Max( FirstVNF_RAM,PN ) / Min( AMS ,MDR ) ) ,( Min( RRS ,AMS ) * ( FirstVNF_RAM_Server + MRS ) ) ) ) / ( ( ( ( FirstVNF_Mem / RRS ) / ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) - ( ( PN + FirstVNF_RAM ) + ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) / ( Min( ( Const - PN ) ,Max( DDR,ARS ) ) - ( Min( MDR ,FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server / Const ) ) ) ) ) ) ) * Max( ( ( Max( ( ( Max( ARS,BR ) + ( FirstVNF_Mem_Server - CRS ) ) * ( ( FirstVNF_RAM / MRS ) * Max( MDR,FirstVNF_RAM ) ) ),Min( Min( ( CRS - FirstVNF_Mem_Server ) ,( RRS - FirstVNF_RAM ) ) ,( ( FirstVNF_CPU * FirstVNF_CPU_Server ) / ( ACS / DDR ) ) ) ) - ( Min( ( ( DDR + CRS ) * ( FirstVNF_CPU * MRS ) ) ,Max( Min( FirstVNF_RAM ,RRS ),Min( Const ,PN ) ) ) / Max( ( ( MDR + AMS ) * ( CRS / BR ) ),Min( ( BR + FirstVNF_RAM ) ,( RRS * CRS ) ) ) ) ) + Min( Min( ( ( ( CRS / RRS ) * ( AMS - ARS ) ) + ( ( BR - BR ) * Min( Const ,FirstVNF_RAM_Server ) ) ) ,( ( Max( FirstVNF_CPU_Server,DDR ) - ( RRS - PN ) ) / ( ( MDR / MRS ) * ( ACS + FirstVNF_CPU ) ) ) ) ,( ( Max( ( PN - FirstVNF_RAM ),( PN + MDR ) ) / ( ( RRS / BR ) * ( FirstVNF_RAM + MDR ) ) ) + Max( Min( ( ARS + FirstVNF_CPU_Server ) ,( AMS + ACS ) ),Max( Min( RRS ,DDR ),( ACS + BR ) ) ) ) ) ),( Max( Max( ( ( Min( FirstVNF_RAM ,DDR ) + ( PN + Const ) ) / ( Max( MRS,Const ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ),( ( Max( MDR,RRS ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) / ( ( Const + MDR ) + ( AMS / FirstVNF_CPU_Server ) ) ) ),( ( ( ( AMS / ARS ) - Min( ACS ,BR ) ) / ( ( AMS + FirstVNF_CPU_Server ) * ( ARS * AMS ) ) ) - ( Max( ( FirstVNF_CPU * MRS ),Min( MRS ,FirstVNF_RAM_Server ) ) - ( Max( Const,FirstVNF_CPU ) + ( FirstVNF_RAM_Server / DDR ) ) ) ) ) * ( Max( Max( ( Min( PN ,RRS ) - ( CRS - ARS ) ),( ( MDR + FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ),( ( ( Const * FirstVNF_Mem_Server ) / Min( ACS ,Const ) ) - ( Max( FirstVNF_Mem,MDR ) * ( DDR - FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( CRS * BR ) * ( ACS + FirstVNF_RAM_Server ) ) * ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) / ( FirstVNF_CPU / CRS ) ) ) * ( ( ( FirstVNF_RAM * CRS ) / ( MRS * PN ) ) + ( Max( FirstVNF_Mem_Server,MRS ) / ( MRS - FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "Min( ( ( Min( Max( ( Min( Max( MLU,MUR ) ,( RMSe * MLU ) ) / ( ( MUM / RRSe ) / ( RCSe / RCSe ) ) ),( Min( ( MUC * MUM ) ,( MUC / RCSe ) ) - ( ( RCSe + CS ) * ( MLU - MUC ) ) ) ) ,( Max( ( Max( RCSe,MUC ) * ( CS - RCSe ) ),Max( ( MLU / DS ),Min( MUR ,RCSe ) ) ) * ( Max( Min( MUM ,MUC ),( MUM * DS ) ) - ( Max( CS,RCSe ) / ( RRSe + DS ) ) ) ) ) * Min( ( ( ( ( RCSe * MLU ) * ( MUC * DS ) ) + ( ( MLU / MLU ) - ( MLU / RMSe ) ) ) - ( Min( ( CS + CS ) ,Min( CS ,MUR ) ) * Min( ( RCSe + CS ) ,( RMSe / CS ) ) ) ) ,Max( ( Max( ( CS * MUM ),Min( CS ,RCSe ) ) - ( ( RMSe + MUC ) / ( RRSe / RRSe ) ) ),( Min( ( MUC * MLU ) ,Max( MLU,MUR ) ) / Max( ( MUR + RMSe ),Max( MUM,MUR ) ) ) ) ) ) + ( ( ( Max( Max( ( RMSe + RRSe ),( RCSe + RCSe ) ),( ( MUR - MUM ) - Min( MUC ,MLU ) ) ) * ( ( ( MUM / MUM ) + Min( RRSe ,MUR ) ) * Min( Max( DS,MUM ) ,Min( MUC ,MUR ) ) ) ) / ( Max( Min( ( RCSe + RRSe ) ,Min( DS ,CS ) ),Max( ( RRSe / DS ),( MUC * DS ) ) ) / ( ( ( RRSe / RCSe ) * Min( DS ,RMSe ) ) * Min( Min( RMSe ,DS ) ,( MUM - DS ) ) ) ) ) * ( ( ( ( ( DS / MLU ) * ( MLU / MUM ) ) - ( ( MUM / MUR ) - ( MUR + RMSe ) ) ) / Min( ( Max( RRSe,MUR ) - ( RMSe + MUM ) ) ,( Max( MUC,RMSe ) / Min( RMSe ,RCSe ) ) ) ) / ( Max( ( ( MUC + RRSe ) * ( MLU * CS ) ),( ( MUR - MUM ) + ( MLU - RCSe ) ) ) * ( Max( Max( MLU,RCSe ),( CS / RRSe ) ) * Max( Max( MUC,MLU ),( RMSe / CS ) ) ) ) ) ) ) ,Min( Min( ( Min( Min( ( Min( DS ,MUR ) - ( DS - MLU ) ) ,( ( CS - MUC ) * Min( CS ,RRSe ) ) ) ,( ( ( MUC + MUR ) + ( RRSe - RMSe ) ) / ( Max( MUC,MUR ) - ( RRSe * MUM ) ) ) ) - ( Min( ( ( MUR - RCSe ) - ( RMSe + RMSe ) ) ,( Max( RCSe,MUM ) * Min( MUC ,MUM ) ) ) + ( ( ( MUM / RMSe ) / ( RCSe - MUC ) ) + ( ( MUM + RCSe ) / ( MUR / CS ) ) ) ) ) ,( ( Max( Min( ( RRSe / DS ) ,Max( MUC,RMSe ) ),Min( ( MUM / CS ) ,Min( MLU ,RRSe ) ) ) + Max( ( ( MLU + MUR ) * ( CS - MUM ) ),Min( ( MUC + RMSe ) ,( MLU + MUC ) ) ) ) / ( ( ( ( RMSe * MUC ) - ( MLU - RMSe ) ) * Min( Min( MUC ,RRSe ) ,( RMSe / MUR ) ) ) / ( ( ( MUC + RCSe ) + ( RRSe / RMSe ) ) + ( ( MUR - DS ) + Min( MUM ,DS ) ) ) ) ) ) ,( ( ( ( Max( Max( MUR,MLU ),Max( MUR,RCSe ) ) + ( Min( CS ,CS ) / ( RCSe / CS ) ) ) + ( Max( ( DS - CS ),Min( RCSe ,RMSe ) ) * ( Min( RCSe ,MUR ) - Min( MUR ,DS ) ) ) ) - ( ( ( Max( RMSe,DS ) / ( MUC / RRSe ) ) * ( ( MUC + DS ) + Min( DS ,RRSe ) ) ) - Min( ( Max( RRSe,RMSe ) - ( RCSe + RRSe ) ) ,( ( DS + MUC ) - ( RMSe + MUR ) ) ) ) ) - Max( ( Min( Min( ( MUR / MLU ) ,( CS - CS ) ) ,( Min( MLU ,MUR ) * Max( MUR,CS ) ) ) - ( ( Min( RCSe ,MUR ) * ( RMSe - RCSe ) ) + Max( ( MLU * MLU ),( MUR + MUC ) ) ) ),Min( ( ( ( DS * RMSe ) * ( RCSe / MLU ) ) / ( Min( MUM ,MUR ) * ( MUR / MUC ) ) ) ,Min( Max( ( RRSe - MUM ),( MUR / MUM ) ) ,Max( ( DS * CS ),( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.45643153526970953, "obj2": 0.4534330965162141}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / ( ( ACS / ACS ) * Max( AMS,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( MUM - ( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1037344398340249, "obj2": 0.7033970571038207}, {"determining": "( ( FirstVNF_RAM_Server / CRS ) + ( Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( MUR - ( ( ( RRSe - DS ) * CS ) * DS ) ) - RRSe )", "obj1": 0.14730290456431536, "obj2": 0.6753083801368319}, {"determining": "( Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server / ACS ) - Max( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ),PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) ) )", "choosing": "( ( RRSe - ( ( ( ( ( RRSe - DS ) - ( RMSe - ( RRSe - DS ) ) ) + RRSe ) * CS ) * MUM ) ) - RRSe )", "obj1": 0.1078838174273859, "obj2": 0.7003607699905319}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / AMS ),Max( DDR,ACS ) ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.10580912863070539, "obj2": 0.702746708156179}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( Min( RRSe ,( RRSe - RMSe ) ),RCSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7550196644994858}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1037344398340249, "obj2": 0.7033970571038207}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ACS / FirstVNF_Mem_Server ) )", "choosing": "Max( Max( MLU,RMSe ),( MLU / MLU ) )", "obj1": 0.3112033195020747, "obj2": 0.5692542126719498}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( Max( DDR,ACS ) / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7597213561384957}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.10580912863070539, "obj2": 0.702746708156179}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / PN ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RMSe - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.10580912863070539, "obj2": 0.702746708156179}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( DDR,ACS ) ) ) + Min( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / PN ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) ,( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RMSe - ( RRSe - DS ) ) ),RRSe ) * CS ) * RCSe ) ) - RRSe )", "obj1": 0.2012448132780083, "obj2": 0.630588723948521}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) + Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / PN ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( MUM - ( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.18464730290456433, "obj2": 0.6556390887202821}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / AMS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( ( BR / AMS ) / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),AMS ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.11825726141078838, "obj2": 0.6939358909922063}, {"determining": "( ( ( Min( Min( ( ( ( BR - DDR ) * ( FirstVNF_RAM * PN ) ) / Max( Min( DDR ,AMS ),Min( MDR ,ACS ) ) ) ,Max( ( Max( AMS,FirstVNF_CPU_Server ) * ( Const / ARS ) ),Min( ( BR + FirstVNF_CPU_Server ) ,( AMS * DDR ) ) ) ) ,( ( ( ( FirstVNF_RAM_Server + RRS ) * Max( PN,ACS ) ) / ( ( MDR / AMS ) / ( DDR / ACS ) ) ) - ( ( ( BR + FirstVNF_Mem ) * ( PN - FirstVNF_CPU_Server ) ) + ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) / Min( MDR ,FirstVNF_CPU_Server ) ) ) ) ) + ( ( ( ( ( AMS * FirstVNF_CPU ) - ( MRS / FirstVNF_CPU ) ) / Min( ( AMS / PN ) ,Max( DDR,DDR ) ) ) / ( ( ( ARS * Const ) * ( MDR - ACS ) ) * Min( Min( Const ,MRS ) ,Min( DDR ,ACS ) ) ) ) / ( ( ( ( FirstVNF_RAM - CRS ) * ( BR * FirstVNF_Mem_Server ) ) / Min( Min( RRS ,ARS ) ,Min( CRS ,RRS ) ) ) + ( Max( ( BR / FirstVNF_Mem_Server ),Max( MDR,ACS ) ) / ( Min( PN ,FirstVNF_Mem ) + Min( RRS ,PN ) ) ) ) ) ) + ( ( Max( ( ( ( RRS - PN ) + ( PN / BR ) ) + ( Min( FirstVNF_CPU_Server ,DDR ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) ),Min( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) * Max( MRS,ARS ) ) ,Min( ( ACS - FirstVNF_Mem_Server ) ,( RRS + FirstVNF_CPU_Server ) ) ) ) + ( ( Min( ( PN - PN ) ,Min( CRS ,FirstVNF_CPU_Server ) ) * ( Min( ACS ,CRS ) - ( MDR / DDR ) ) ) / ( ( ( PN / FirstVNF_Mem_Server ) * ( BR - BR ) ) - ( Max( RRS,PN ) / ( ACS * CRS ) ) ) ) ) * ( ( ( ( Min( FirstVNF_Mem_Server ,BR ) * ( FirstVNF_RAM * AMS ) ) / ( ( FirstVNF_CPU_Server * ACS ) + ( ACS * BR ) ) ) / ( ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( Const / FirstVNF_Mem_Server ) ) * Max( ( FirstVNF_Mem + Const ),( ARS * FirstVNF_Mem_Server ) ) ) ) * ( ( ( Max( CRS,BR ) / Min( AMS ,FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) - Max( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) / ( RRS - MDR ) ),Max( Min( ACS ,DDR ),( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( ( ( Max( Min( ( Max( ARS,Const ) * ( FirstVNF_RAM + FirstVNF_Mem ) ) ,( ( FirstVNF_CPU - BR ) - ( PN - MDR ) ) ),( ( ( FirstVNF_CPU - MRS ) + ( FirstVNF_CPU * MDR ) ) + ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) - Max( AMS,MRS ) ) ) ) * ( ( Min( Min( FirstVNF_RAM_Server ,DDR ) ,( ARS - AMS ) ) + Max( Max( MDR,Const ),( DDR / ACS ) ) ) / Max( ( ( FirstVNF_RAM_Server - MDR ) / Min( BR ,FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM_Server * FirstVNF_Mem ) + ( CRS + RRS ) ) ) ) ) * ( Min( Min( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * ( FirstVNF_CPU - DDR ) ) ,Max( ( FirstVNF_Mem_Server / ARS ),( CRS / Const ) ) ) ,Max( ( Min( ARS ,Const ) - ( MRS * BR ) ),Max( Min( FirstVNF_CPU_Server ,ACS ),( DDR * FirstVNF_RAM_Server ) ) ) ) / Max( ( Max( ( ACS + MDR ),Max( MRS,FirstVNF_CPU_Server ) ) - Min( ( FirstVNF_CPU - MRS ) ,( FirstVNF_Mem / MRS ) ) ),( Min( Min( PN ,ACS ) ,Max( RRS,CRS ) ) + Max( Max( FirstVNF_CPU,FirstVNF_RAM ),( ARS * RRS ) ) ) ) ) ) / Min( Min( Max( ( ( ( FirstVNF_RAM * MRS ) / ( MRS - FirstVNF_RAM_Server ) ) * ( ( FirstVNF_CPU_Server * Const ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ),Min( ( Max( ARS,FirstVNF_Mem_Server ) - Min( BR ,FirstVNF_Mem ) ) ,( ( BR / ARS ) + ( MRS * BR ) ) ) ) ,( ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) * ( Min( ACS ,Const ) + ( DDR * FirstVNF_RAM_Server ) ) ) - ( ( Max( Const,AMS ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) / Min( ( AMS * FirstVNF_CPU ) ,( CRS - AMS ) ) ) ) ) ,( ( ( Max( ( FirstVNF_RAM_Server / FirstVNF_RAM ),( RRS + FirstVNF_CPU ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) * ( FirstVNF_RAM * CRS ) ) ) + Min( Min( Max( MRS,MRS ) ,Max( DDR,AMS ) ) ,( Min( MDR ,Const ) * ( PN + CRS ) ) ) ) - ( Max( ( ( DDR - FirstVNF_CPU_Server ) / ( MRS + ARS ) ),( ( FirstVNF_RAM / BR ) * ( ARS - BR ) ) ) + Max( Min( ( MRS - FirstVNF_RAM_Server ) ,Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ),( ( FirstVNF_CPU * MRS ) - Min( DDR ,FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( MUC / MUR ) + ( MUR * ( RRSe * Max( ( RCSe + RMSe ),MUC ) ) ) )", "obj1": 0.7427385892116183, "obj2": 0.24535833265364268}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / AMS ) / Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( AMS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( RRSe - CS ) - RRSe )", "obj1": 0.22614107883817428, "obj2": 0.5961368942239386}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( AMS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ),ACS ) ) ) + ( PN + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( PN + ( BR / AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}], "50": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( PN / PN ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / RRS ) ) ) ) ) + ( DDR - CRS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( MUM - ( RRSe - DS ) ),RRSe ) * CS ) / MUM ) ) - RRSe )", "obj1": 0.1037344398340249, "obj2": 0.7033970571038207}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * RMSe ) * DS ) ) - RRSe )", "obj1": 0.1037344398340249, "obj2": 0.7033970571038207}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( AMS,ACS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( MUM - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7597213561384957}, {"determining": "( Min( FirstVNF_RAM_Server ,( ( FirstVNF_Mem_Server / ACS ) + ( DDR / ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / PN ) + ( Max( DDR,FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( MUM - Min( RRSe ,DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1037344398340249, "obj2": 0.7033970571038207}, {"determining": "( ( FirstVNF_RAM_Server / ( ( RRS / ACS ) + Max( FirstVNF_Mem_Server,ACS ) ) ) + ( ( FirstVNF_RAM_Server + ( ( FirstVNF_Mem_Server / ACS ) + ( ( DDR - FirstVNF_CPU ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( ( ( MUM - ( RRSe - DS ) ) + MUR ) * CS ) * RMSe ) ) - RRSe )", "obj1": 0.1037344398340249, "obj2": 0.7033970571038207}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server - ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server * ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server - Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe * DS ) - ( RCSe - DS ) ) ),RRSe ) * MUM ) * DS ) ) - MUR )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / FirstVNF_Mem_Server ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * CS ) + DS ) ) - RRSe )", "obj1": 0.1037344398340249, "obj2": 0.7033970571038207}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( FirstVNF_Mem_Server ,ACS ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),CS ) * RCSe ) * DS ) ) - ( ( Max( ( RMSe - ( RMSe - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.09336099585062241, "obj2": 0.7089766000854774}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,AMS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) / ACS ),Max( ACS,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( ( RRSe - DS ) - ( RMSe * ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1078838174273859, "obj2": 0.7003607699905319}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( AMS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ),ACS ) ) ) + ( PN + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( PN + ( BR / AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.0912863070539419, "obj2": 0.7195954074537133}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1037344398340249, "obj2": 0.7033970571038207}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / Const ),( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( ARS / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server + ( DDR - FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),CS ) * CS ) * DS ) ) - ( Max( Max( ( RMSe - ( RMSe - MUC ) ),RRSe ),CS ) * DS ) ) - MLU )", "obj1": 0.09336099585062241, "obj2": 0.7089766000854774}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),CS ) * CS ) * DS ) ) - ( ( Max( ( RMSe - ( RMSe - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.0954356846473029, "obj2": 0.7077621838759581}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( FirstVNF_Mem_Server / ACS ),ACS ) ) ) + ( PN + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( PN + ( BR / AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RMSe - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.12448132780082988, "obj2": 0.6851899595298102}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( ( ( FirstVNF_RAM_Server / PN ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( Max( ( RMSe - ( RMSe - ( RRSe - DS ) ) ),RRSe ) * CS ) ) - RRSe )", "obj1": 0.19294605809128632, "obj2": 0.635201691538245}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / ( ( ACS / ACS ) * Max( AMS,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( MUM - ( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1037344398340249, "obj2": 0.7033970571038207}, {"determining": "( ( FirstVNF_RAM_Server / CRS ) + ( Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( MUR - ( ( ( RRSe - DS ) * CS ) * DS ) ) - RRSe )", "obj1": 0.14730290456431536, "obj2": 0.6753083801368319}, {"determining": "( Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server / ACS ) - Max( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ),PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) ) )", "choosing": "( ( RRSe - ( ( ( ( ( RRSe - DS ) - ( RMSe - ( RRSe - DS ) ) ) + RRSe ) * CS ) * MUM ) ) - RRSe )", "obj1": 0.1078838174273859, "obj2": 0.7003607699905319}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( Min( RRSe ,( RRSe - RMSe ) ),RCSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7550196644994858}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1037344398340249, "obj2": 0.7033970571038207}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( Max( DDR,ACS ) / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7597213561384957}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / AMS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( ( BR / AMS ) / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),AMS ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.11825726141078838, "obj2": 0.6939358909922063}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( AMS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ),ACS ) ) ) + ( PN + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( PN + ( BR / AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / ( ( ACS / ACS ) * Max( AMS,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( MUM - ( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1037344398340249, "obj2": 0.7033970571038207}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( BR / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) / CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,( MRS * PN ) ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1016597510373444, "obj2": 0.7050498956460697}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( AMS,ACS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( Max( ( RMSe - ( RMSe - ( RRSe - DS ) ) ),RRSe ) * CS ) ) - RRSe )", "obj1": 0.19294605809128632, "obj2": 0.635201691538245}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / AMS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.11825726141078838, "obj2": 0.6939358909922063}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( Max( DDR,ACS ) / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7597213561384957}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( DDR * FirstVNF_CPU ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1037344398340249, "obj2": 0.7033970571038207}, {"determining": "( ( FirstVNF_RAM_Server / ( ( RRS / ACS ) + Max( FirstVNF_Mem_Server,ACS ) ) ) + ( ( FirstVNF_RAM_Server + ( ( FirstVNF_Mem_Server / ACS ) + ( ( DDR - FirstVNF_CPU ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( ( ( MUM - ( RRSe - DS ) ) + MUR ) * CS ) * RMSe ) ) - RRSe )", "obj1": 0.1037344398340249, "obj2": 0.7033970571038207}, {"determining": "( ( FirstVNF_RAM_Server + ( ( FirstVNF_Mem_Server / AMS ) / Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),CS ) * CS ) * DS ) ) - ( ( Max( ( RMSe - ( RMSe - RRSe ) ),DS ) * CS ) * DS ) ) - RRSe )", "obj1": 0.09336099585062241, "obj2": 0.7089766000854774}, {"determining": "( Max( FirstVNF_RAM_Server,( ( ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) ) )", "choosing": "( ( Max( ( RMSe - ( RMSe - ( RRSe - DS ) ) ),RRSe ) - ( ( Max( ( ( RRSe - DS ) - ( RMSe - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1078838174273859, "obj2": 0.7003607699905319}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( AMS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ),ACS ) ) ) + ( PN + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Min( DDR ,ACS ) ) ) + ( PN + ( BR / AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( MUM - ( RRSe - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.0912863070539419, "obj2": 0.7195954074537133}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Min( DDR ,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( DDR,ACS ) ) ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( MUM - ( RRSe * DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1037344398340249, "obj2": 0.7033970571038207}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( AMS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ),Const ) ) ) + ( PN + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( PN + ( BR / AMS ) ) ) ) )", "choosing": "( ( RRSe / ( ( Max( ( RMSe - ( RRSe - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.0912863070539419, "obj2": 0.7195954074537133}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( ( Max( AMS,FirstVNF_CPU ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( Max( ( RMSe - ( RMSe - ( RRSe - ( RRSe - DS ) ) ) ),RRSe ) * CS ) ) - RRSe )", "obj1": 0.19294605809128632, "obj2": 0.635201691538245}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( ( ( FirstVNF_RAM_Server / PN ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( MUM - ( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1037344398340249, "obj2": 0.7033970571038207}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / ( ( ACS / ACS ) * Max( AMS,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( Max( ( RMSe - ( RMSe - ( RRSe - DS ) ) ),RRSe ) * CS ) ) - RRSe )", "obj1": 0.19294605809128632, "obj2": 0.635201691538245}, {"determining": "( ( FirstVNF_RAM_Server / ( AMS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ) ) + ( PN + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( PN + ( BR / AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - CS ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.11618257261410789, "obj2": 0.6993643833506378}, {"determining": "( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - CS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.0995850622406639, "obj2": 0.7075774714318295}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1037344398340249, "obj2": 0.7033970571038207}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) / ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ),Max( ACS,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( ( CS - DS ) - ( RMSe - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.17842323651452283, "obj2": 0.6472752041183149}, {"determining": "( ( FirstVNF_RAM_Server / CRS ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( ( RRSe - DS ) * CS ) * DS ) ) - RRSe )", "obj1": 0.14730290456431536, "obj2": 0.6753083801368319}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) / ACS ),Max( ACS,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( ( RRSe - DS ) - ( RMSe - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1078838174273859, "obj2": 0.7003607699905319}, {"determining": "( ( FirstVNF_RAM_Server / CRS ) + ( Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( MUR - ( ( ( RRSe - DS ) * CS ) * DS ) ) - RRSe )", "obj1": 0.14730290456431536, "obj2": 0.6753083801368319}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( ( ( FirstVNF_Mem / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) ) ) + ( ( FirstVNF_Mem_Server / ( ( ( BR / AMS ) / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RRSe - ( ( Max( Max( ( RRSe - MUC ),( RRSe - DS ) ),CS ) * CS ) * DS ) ) - ( ( Max( ( RMSe - ( RMSe - RRSe ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.09336099585062241, "obj2": 0.7089766000854774}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / AMS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( MUR - ( ( ( RRSe - DS ) * CS ) * DS ) ) - RRSe )", "obj1": 0.14730290456431536, "obj2": 0.6753083801368319}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server + Max( AMS,Max( ( FirstVNF_Mem_Server / AMS ),Max( DDR,ACS ) ) ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RRSe - ( ( Max( ( MUR - ( RRSe - DS ) ),CS ) * CS ) * DS ) ) - ( ( ( RRSe - DS ) * CS ) * DS ) ) - RRSe )", "obj1": 0.10580912863070539, "obj2": 0.7021857043963443}], "51": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( PN / PN ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / RRS ) ) ) ) ) + ( DDR - CRS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( MUM - ( RRSe - DS ) ),RRSe ) * CS ) / MUM ) ) - RRSe )", "obj1": 0.1037344398340249, "obj2": 0.7033970571038207}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * RMSe ) * DS ) ) - RRSe )", "obj1": 0.1037344398340249, "obj2": 0.7033970571038207}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( AMS,ACS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( MUM - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7597213561384957}, {"determining": "( Min( FirstVNF_RAM_Server ,( ( FirstVNF_Mem_Server / ACS ) + ( DDR / ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / PN ) + ( Max( DDR,FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( MUM - Min( RRSe ,DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1037344398340249, "obj2": 0.7033970571038207}, {"determining": "( ( FirstVNF_RAM_Server / ( ( RRS / ACS ) + Max( FirstVNF_Mem_Server,ACS ) ) ) + ( ( FirstVNF_RAM_Server + ( ( FirstVNF_Mem_Server / ACS ) + ( ( DDR - FirstVNF_CPU ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( ( ( MUM - ( RRSe - DS ) ) + MUR ) * CS ) * RMSe ) ) - RRSe )", "obj1": 0.1037344398340249, "obj2": 0.7033970571038207}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server - ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server * ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server - Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe * DS ) - ( RCSe - DS ) ) ),RRSe ) * MUM ) * DS ) ) - MUR )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / FirstVNF_Mem_Server ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * CS ) + DS ) ) - RRSe )", "obj1": 0.1037344398340249, "obj2": 0.7033970571038207}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( FirstVNF_Mem_Server ,ACS ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),CS ) * RCSe ) * DS ) ) - ( ( Max( ( RMSe - ( RMSe - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.09336099585062241, "obj2": 0.7089766000854774}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( AMS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ),ACS ) ) ) + ( PN + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( PN + ( BR / AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.0912863070539419, "obj2": 0.7195954074537133}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1037344398340249, "obj2": 0.7033970571038207}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / Const ),( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( ARS / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server + ( DDR - FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),CS ) * CS ) * DS ) ) - ( Max( Max( ( RMSe - ( RMSe - MUC ) ),RRSe ),CS ) * DS ) ) - MLU )", "obj1": 0.09336099585062241, "obj2": 0.7089766000854774}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),CS ) * CS ) * DS ) ) - ( ( Max( ( RMSe - ( RMSe - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.0954356846473029, "obj2": 0.7077621838759581}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / ( ( ACS / ACS ) * Max( AMS,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( MUM - ( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1037344398340249, "obj2": 0.7033970571038207}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( Min( RRSe ,( RRSe - RMSe ) ),RCSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7550196644994858}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1037344398340249, "obj2": 0.7033970571038207}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( Max( DDR,ACS ) / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7597213561384957}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( AMS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ),ACS ) ) ) + ( PN + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( PN + ( BR / AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / ( ( ACS / ACS ) * Max( AMS,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( MUM - ( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1037344398340249, "obj2": 0.7033970571038207}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( BR / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) / CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,( MRS * PN ) ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1016597510373444, "obj2": 0.7050498956460697}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( Max( DDR,ACS ) / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7597213561384957}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( DDR * FirstVNF_CPU ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1037344398340249, "obj2": 0.7033970571038207}, {"determining": "( ( FirstVNF_RAM_Server / ( ( RRS / ACS ) + Max( FirstVNF_Mem_Server,ACS ) ) ) + ( ( FirstVNF_RAM_Server + ( ( FirstVNF_Mem_Server / ACS ) + ( ( DDR - FirstVNF_CPU ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( ( ( MUM - ( RRSe - DS ) ) + MUR ) * CS ) * RMSe ) ) - RRSe )", "obj1": 0.1037344398340249, "obj2": 0.7033970571038207}, {"determining": "( ( FirstVNF_RAM_Server + ( ( FirstVNF_Mem_Server / AMS ) / Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),CS ) * CS ) * DS ) ) - ( ( Max( ( RMSe - ( RMSe - RRSe ) ),DS ) * CS ) * DS ) ) - RRSe )", "obj1": 0.09336099585062241, "obj2": 0.7089766000854774}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( AMS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ),ACS ) ) ) + ( PN + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Min( DDR ,ACS ) ) ) + ( PN + ( BR / AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( MUM - ( RRSe - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.0912863070539419, "obj2": 0.7195954074537133}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Min( DDR ,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( DDR,ACS ) ) ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( MUM - ( RRSe * DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1037344398340249, "obj2": 0.7033970571038207}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( AMS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ),Const ) ) ) + ( PN + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( PN + ( BR / AMS ) ) ) ) )", "choosing": "( ( RRSe / ( ( Max( ( RMSe - ( RRSe - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.0912863070539419, "obj2": 0.7195954074537133}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( ( ( FirstVNF_RAM_Server / PN ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( MUM - ( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1037344398340249, "obj2": 0.7033970571038207}, {"determining": "( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - CS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.0995850622406639, "obj2": 0.7075774714318295}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1037344398340249, "obj2": 0.7033970571038207}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( ( ( FirstVNF_Mem / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) ) ) + ( ( FirstVNF_Mem_Server / ( ( ( BR / AMS ) / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RRSe - ( ( Max( Max( ( RRSe - MUC ),( RRSe - DS ) ),CS ) * CS ) * DS ) ) - ( ( Max( ( RMSe - ( RMSe - RRSe ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.09336099585062241, "obj2": 0.7089766000854774}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( DDR - PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / FirstVNF_Mem_Server ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe / ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7550196644994858}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) / ACS ),Max( ACS,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.0912863070539419, "obj2": 0.7195954074537133}, {"determining": "( ( ( FirstVNF_CPU / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) - ( AMS / ARS ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe * CS ) ),RRSe ) / CS ) * DS ) ) - RRSe )", "obj1": 0.0995850622406639, "obj2": 0.7075774714318295}, {"determining": "( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - CS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.0995850622406639, "obj2": 0.7075774714318295}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1037344398340249, "obj2": 0.7033970571038207}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( Const,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( Max( RRSe,DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( Min( RRSe ,( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7550196644994858}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( ( ( FirstVNF_Mem_Server / DDR ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),CS ) * CS ) * DS ) ) - ( ( Max( ( RMSe - ( RMSe - RRSe ) ),MLU ) * CS ) * DS ) ) - RRSe )", "obj1": 0.09336099585062241, "obj2": 0.7089766000854774}, {"determining": "( ( FirstVNF_RAM_Server / ( ( RRS / ACS ) + Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( DDR * FirstVNF_CPU ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( MUM - ( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1037344398340249, "obj2": 0.7033970571038207}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( AMS,ACS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server * ACS ) + Max( DDR,ACS ) ) ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( MUC - ( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1037344398340249, "obj2": 0.7033970571038207}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( DDR * FirstVNF_CPU ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1037344398340249, "obj2": 0.7033970571038207}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7597213561384957}, {"determining": "( Max( FirstVNF_RAM_Server,( ( ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / Min( ( FirstVNF_Mem_Server / ACS ) ,Max( DDR,ACS ) ) ) ) )", "choosing": "( ( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),CS ) * RCSe ) * DS ) ) - ( ( Max( ( RMSe - ( RMSe - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.09336099585062241, "obj2": 0.7089766000854774}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.0912863070539419, "obj2": 0.7195954074537133}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( AMS,ACS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1016597510373444, "obj2": 0.7050498956460697}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),CS ) * CS ) * DS ) ) - ( ( Max( ( RMSe - ( RMSe - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.09336099585062241, "obj2": 0.7089766000854774}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),CS ) * CS ) * DS ) ) - ( ( Max( ( RMSe - ( RMSe - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.09336099585062241, "obj2": 0.7089766000854774}], "52": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( PN / PN ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / RRS ) ) ) ) ) + ( DDR - CRS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( MUM - ( RRSe - DS ) ),RRSe ) * CS ) / MUM ) ) - RRSe )", "obj1": 0.1037344398340249, "obj2": 0.7033970571038207}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),RRSe ) * RMSe ) * DS ) ) - RRSe )", "obj1": 0.1037344398340249, "obj2": 0.7033970571038207}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( AMS,ACS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( MUM - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7597213561384957}, {"determining": "( Min( FirstVNF_RAM_Server ,( ( FirstVNF_Mem_Server / ACS ) + ( DDR / ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / PN ) + ( Max( DDR,FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( MUM - Min( RRSe ,DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1037344398340249, "obj2": 0.7033970571038207}, {"determining": "( ( FirstVNF_RAM_Server / ( ( RRS / ACS ) + Max( FirstVNF_Mem_Server,ACS ) ) ) + ( ( FirstVNF_RAM_Server + ( ( FirstVNF_Mem_Server / ACS ) + ( ( DDR - FirstVNF_CPU ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( ( ( MUM - ( RRSe - DS ) ) + MUR ) * CS ) * RMSe ) ) - RRSe )", "obj1": 0.1037344398340249, "obj2": 0.7033970571038207}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server - ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server * ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server - Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe * DS ) - ( RCSe - DS ) ) ),RRSe ) * MUM ) * DS ) ) - MUR )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( FirstVNF_Mem_Server ,ACS ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),CS ) * RCSe ) * DS ) ) - ( ( Max( ( RMSe - ( RMSe - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.09336099585062241, "obj2": 0.7089766000854774}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / Const ),( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( ARS / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server + ( DDR - FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),CS ) * CS ) * DS ) ) - ( Max( Max( ( RMSe - ( RMSe - MUC ) ),RRSe ),CS ) * DS ) ) - MLU )", "obj1": 0.09336099585062241, "obj2": 0.7089766000854774}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( Min( RRSe ,( RRSe - RMSe ) ),RCSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7550196644994858}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( Max( DDR,ACS ) / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7597213561384957}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( AMS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ),ACS ) ) ) + ( PN + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( PN + ( BR / AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( BR / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) / CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( Max( DDR,ACS ) / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7597213561384957}, {"determining": "( ( FirstVNF_RAM_Server + ( ( FirstVNF_Mem_Server / AMS ) / Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),CS ) * CS ) * DS ) ) - ( ( Max( ( RMSe - ( RMSe - RRSe ) ),DS ) * CS ) * DS ) ) - RRSe )", "obj1": 0.09336099585062241, "obj2": 0.7089766000854774}, {"determining": "( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - CS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.0995850622406639, "obj2": 0.7075774714318295}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( ( ( FirstVNF_Mem / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) ) ) + ( ( FirstVNF_Mem_Server / ( ( ( BR / AMS ) / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RRSe - ( ( Max( Max( ( RRSe - MUC ),( RRSe - DS ) ),CS ) * CS ) * DS ) ) - ( ( Max( ( RMSe - ( RMSe - RRSe ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.09336099585062241, "obj2": 0.7089766000854774}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( DDR - PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / FirstVNF_Mem_Server ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe / ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7550196644994858}, {"determining": "( ( ( FirstVNF_CPU / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) - ( AMS / ARS ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe * CS ) ),RRSe ) / CS ) * DS ) ) - RRSe )", "obj1": 0.0995850622406639, "obj2": 0.7075774714318295}, {"determining": "( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - CS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.0995850622406639, "obj2": 0.7075774714318295}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( Const,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( Max( RRSe,DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( Min( RRSe ,( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7550196644994858}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( ( ( FirstVNF_Mem_Server / DDR ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),CS ) * CS ) * DS ) ) - ( ( Max( ( RMSe - ( RMSe - RRSe ) ),MLU ) * CS ) * DS ) ) - RRSe )", "obj1": 0.09336099585062241, "obj2": 0.7089766000854774}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( AMS,ACS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7597213561384957}, {"determining": "( Max( FirstVNF_RAM_Server,( ( ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) / ACS ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + PN ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( BR / Min( ( FirstVNF_Mem_Server / ACS ) ,Max( DDR,ACS ) ) ) ) )", "choosing": "( ( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),CS ) * RCSe ) * DS ) ) - ( ( Max( ( RMSe - ( RMSe - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.09336099585062241, "obj2": 0.7089766000854774}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),CS ) * CS ) * DS ) ) - ( ( Max( ( RMSe - ( RMSe - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.09336099585062241, "obj2": 0.7089766000854774}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),CS ) * CS ) * DS ) ) - ( ( Max( ( RMSe - ( RMSe - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.09336099585062241, "obj2": 0.7089766000854774}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ( ARS / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( CS - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7597213561384957}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( ( ( FirstVNF_Mem_Server / ACS ) / ( FirstVNF_RAM_Server / ( ( RRS / ACS ) + Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) + MRS ) ) ) + ( ( FirstVNF_Mem_Server / ( ( ( BR / AMS ) / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) / ( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ) - Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RRSe - Max( ( Max( ( RRSe - DS ),CS ) * CS ),DS ) ) - ( ( ( ( RMSe - ( RMSe - RRSe ) ) + RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.09336099585062241, "obj2": 0.7089766000854774}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( ( ( FirstVNF_Mem / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) ) ) + ( ( FirstVNF_Mem_Server / ( ( ( BR / AMS ) / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RRSe - ( ( Max( Max( ( RRSe - MUC ),( RRSe - DS ) ),CS ) * CS ) * DS ) ) - ( ( Max( ( RMSe - ( RMSe - RRSe ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.09336099585062241, "obj2": 0.7089766000854774}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - MUC )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - CS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08921161825726141, "obj2": 0.7158665280248339}, {"determining": "( ( FirstVNF_RAM_Server / ( ( RRS / ACS ) + Max( FirstVNF_Mem_Server,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( Min( FirstVNF_Mem_Server ,ACS ) + ( ( DDR - FirstVNF_CPU ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( Max( RRSe,( ( Max( Min( RRSe ,( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7550196644994858}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( AMS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ),ACS ) ) ) + ( PN + ( Min( FirstVNF_RAM_Server ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( PN + ( BR / AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),MLU ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / FirstVNF_Mem_Server ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( Min( RRSe ,( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7550196644994858}, {"determining": "( ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + Min( ( DDR * FirstVNF_CPU ) ,( AMS / ARS ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( MLU - ( RRSe - CS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.0995850622406639, "obj2": 0.7075774714318295}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( DDR,ACS ) ) ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),CS ) * CS ) * DS ) ) - ( ( Max( ( RMSe - ( RMSe - RRSe ) ),RRSe ) * CS ) * DS ) ) - ( RRSe - ( ( Max( ( MUM - ( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) )", "obj1": 0.0912863070539419, "obj2": 0.7122199389065808}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) )", "choosing": "( ( ( RRSe - ( ( Max( ( CS - ( RRSe - DS ) ),CS ) * CS ) * DS ) ) - ( ( Max( ( RRSe - ( RMSe - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.0954356846473029, "obj2": 0.7075841796071954}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + MRS ) )", "choosing": "( ( ( MLU - ( ( Max( ( RMSe - ( RRSe - DS ) ),CS ) * CS ) * DS ) ) - ( ( Max( ( RMSe - ( RMSe - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.09336099585062241, "obj2": 0.7089766000854774}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( ( ( FirstVNF_RAM_Server / PN ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7597213561384957}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) / ( ( FirstVNF_Mem_Server / ACS ) + Max( AMS,ACS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7661227915545369}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe * ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),CS ) * CS ) * DS ) ) - ( ( Max( ( RMSe - ( RMSe - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.09336099585062241, "obj2": 0.7089766000854774}, {"determining": "( Min( FirstVNF_RAM_Server ,( ( FirstVNF_Mem_Server / ACS ) + ( DDR / ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / PN ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( MUM - Min( MUR ,DS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.1016597510373444, "obj2": 0.705028014146837}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( AMS,ACS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( AMS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ),Const ) ) ) + ( PN + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( PN + ( BR / AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( Min( RRSe ,( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7550196644994858}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( ( ( FirstVNF_Mem_Server / DDR ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),CS ) * CS ) * DS ) ) - ( ( Max( ( RMSe - ( RMSe - RRSe ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.09336099585062241, "obj2": 0.7089766000854774}], "53": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( AMS,ACS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( MUM - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7597213561384957}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server - ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server * ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server - Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe * DS ) - ( RCSe - DS ) ) ),RRSe ) * MUM ) * DS ) ) - MUR )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( FirstVNF_Mem_Server ,ACS ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),CS ) * RCSe ) * DS ) ) - ( ( Max( ( RMSe - ( RMSe - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.09336099585062241, "obj2": 0.7089766000854774}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / Const ),( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( ARS / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server + ( DDR - FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),CS ) * CS ) * DS ) ) - ( Max( Max( ( RMSe - ( RMSe - MUC ) ),RRSe ),CS ) * DS ) ) - MLU )", "obj1": 0.09336099585062241, "obj2": 0.7089766000854774}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( Min( RRSe ,( RRSe - RMSe ) ),RCSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7550196644994858}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( Max( DDR,ACS ) / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7597213561384957}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( AMS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ),ACS ) ) ) + ( PN + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( PN + ( BR / AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( BR / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) / CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( Max( DDR,ACS ) / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7597213561384957}, {"determining": "( ( FirstVNF_RAM_Server + ( ( FirstVNF_Mem_Server / AMS ) / Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),CS ) * CS ) * DS ) ) - ( ( Max( ( RMSe - ( RMSe - RRSe ) ),DS ) * CS ) * DS ) ) - RRSe )", "obj1": 0.09336099585062241, "obj2": 0.7089766000854774}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( ( ( FirstVNF_Mem / ACS ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) ) ) + ( ( FirstVNF_Mem_Server / ( ( ( BR / AMS ) / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RRSe - ( ( Max( Max( ( RRSe - MUC ),( RRSe - DS ) ),CS ) * CS ) * DS ) ) - ( ( Max( ( RMSe - ( RMSe - RRSe ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.09336099585062241, "obj2": 0.7089766000854774}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( ( DDR - PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / FirstVNF_Mem_Server ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe / ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7550196644994858}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( Const,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( Max( RRSe,DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( Min( RRSe ,( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7550196644994858}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( AMS,ACS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7597213561384957}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ( ARS / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( CS - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7597213561384957}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - MUC )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - CS ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08921161825726141, "obj2": 0.7158665280248339}, {"determining": "( ( FirstVNF_RAM_Server / ( ( RRS / ACS ) + Max( FirstVNF_Mem_Server,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( Min( FirstVNF_Mem_Server ,ACS ) + ( ( DDR - FirstVNF_CPU ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( Max( RRSe,( ( Max( Min( RRSe ,( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7550196644994858}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( AMS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ),ACS ) ) ) + ( PN + ( Min( FirstVNF_RAM_Server ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( PN + ( BR / AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),MLU ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / FirstVNF_Mem_Server ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( Min( RRSe ,( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7550196644994858}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( DDR,ACS ) ) ) / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),CS ) * CS ) * DS ) ) - ( ( Max( ( RMSe - ( RMSe - RRSe ) ),RRSe ) * CS ) * DS ) ) - ( RRSe - ( ( Max( ( MUM - ( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) )", "obj1": 0.0912863070539419, "obj2": 0.7122199389065808}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( ( ( FirstVNF_RAM_Server / PN ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7597213561384957}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) / ( ( FirstVNF_Mem_Server / ACS ) + Max( AMS,ACS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7661227915545369}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe * ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( AMS,ACS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( AMS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ),Const ) ) ) + ( PN + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( PN + ( BR / AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( Min( RRSe ,( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7550196644994858}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / FirstVNF_Mem_Server ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( Min( RRSe ,( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7550196644994858}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( Max( DDR,ACS ) / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7597213561384957}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) * ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * RMSe ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( AMS,ACS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,FirstVNF_RAM_Server ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - CS )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( Max( DDR,ACS ) / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7597213561384957}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( Max( DDR,ACS ) / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7597213561384957}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,AMS ) ) ) + ( ( FirstVNF_Mem_Server / DDR ) / Max( ( FirstVNF_Mem_Server + ( DDR - FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe * Min( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) ,DS ) ) - MUM )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server - ACS ),Max( ACS,ACS ) ) ) + ( ( FirstVNF_RAM_Server * ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server - Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + Max( FirstVNF_RAM_Server,PN ) ) )", "choosing": "( ( RRSe / ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * RRSe ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( ( ( FirstVNF_RAM_Server / PN ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( AMS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ),ACS ) ) ) + ( PN + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( PN + ( BR / AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7597213561384957}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( DDR,ACS ) ) ) / Min( ( FirstVNF_Mem_Server / ACS ) ,Max( DDR,FirstVNF_CPU ) ) ) + MRS ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe - Min( ( Max( Min( RRSe ,( RRSe - RMSe ) ),RRSe ) * DS ) ,DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7550196644994858}, {"determining": "( ( FirstVNF_RAM_Server / ( ( RRS / ACS ) + Max( FirstVNF_Mem_Server,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( DDR - FirstVNF_CPU ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) ) )", "choosing": "( ( ( RRSe - ( ( Max( ( RMSe - ( RRSe - DS ) ),CS ) * CS ) * DS ) ) - ( ( Max( ( RMSe - ( RMSe - RRSe ) ),RRSe ) * CS ) * DS ) ) - ( RRSe - ( ( Max( ( MUM - ( RRSe - DS ) ),RRSe ) * CS ) * DS ) ) )", "obj1": 0.0912863070539419, "obj2": 0.7122199389065808}, {"determining": "( ( ( FirstVNF_CPU / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) - ( AMS / ARS ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * RRSe ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS - ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) + ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( AMS,ACS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( Max( DDR,ACS ) / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7597213561384957}], "54": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server - ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server * ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server - Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe * DS ) - ( RCSe - DS ) ) ),RRSe ) * MUM ) * DS ) ) - MUR )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( AMS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ),ACS ) ) ) + ( PN + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( PN + ( BR / AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( BR / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) / CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( Const,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( Max( RRSe,DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( AMS,ACS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - MUC )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( AMS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ),ACS ) ) ) + ( PN + ( Min( FirstVNF_RAM_Server ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( PN + ( BR / AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),MLU ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) / ( ( FirstVNF_Mem_Server / ACS ) + Max( AMS,ACS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7661227915545369}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe * ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( AMS,ACS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) * ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * RMSe ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( AMS,ACS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,FirstVNF_RAM_Server ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - CS )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,AMS ) ) ) + ( ( FirstVNF_Mem_Server / DDR ) / Max( ( FirstVNF_Mem_Server + ( DDR - FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe * Min( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) ,DS ) ) - MUM )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server - ACS ),Max( ACS,ACS ) ) ) + ( ( FirstVNF_RAM_Server * ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server - Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + Max( FirstVNF_RAM_Server,PN ) ) )", "choosing": "( ( RRSe / ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * RRSe ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( ( ( FirstVNF_RAM_Server / PN ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( ( FirstVNF_CPU / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) - ( AMS / ARS ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * RRSe ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS - ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) + ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( AMS,ACS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( ( AMS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ) / ACS ) ) ) + ( PN + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( PN + ( BR / AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MLU ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) / ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * RCSe ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Min( DDR ,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / FirstVNF_Mem_Server ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( AMS,ACS ) ) ) + ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / Min( ( FirstVNF_Mem_Server / ACS ) ,Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe - ( ( ( ( RMSe - ( MUC - MUC ) ) / RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - Max( RRSe,DS ) ) ),RRSe ) * CS ) * RRSe ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( AMS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ),ACS ) ) ) + ( PN + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( PN + ( BR / AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( AMS,ACS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( AMS,ACS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( Max( DDR,FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( Max( RMSe,( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( Max( AMS,( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ),ACS ) ) ) + ( PN + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( PN + ( BR / AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe * ( MUC - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( MDR / ( ( FirstVNF_Mem_Server / ACS ) + Max( AMS,ACS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( ( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ) - RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( ( FirstVNF_Mem_Server / ACS ) + Max( DDR,ACS ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( ( RRSe - ( RRSe - RMSe ) ) - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( AMS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ),Const ) ) ) + ( PN + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( PN + ( BR / AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( AMS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ),ACS ) ) ) + ( PN + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) * ( PN + ( BR / AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - RMSe ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) / ( ( FirstVNF_Mem_Server / ACS ) + Max( AMS,ACS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server - Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_Mem,ACS ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe + ( ( Max( Max( RRSe,( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7661227915545369}, {"determining": "( ( FirstVNF_RAM_Server - ( ( FirstVNF_Mem_Server / ACS ) + Max( AMS,ACS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) + CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( AMS,ACS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}], "55": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server - ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server * ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server - Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe * DS ) - ( RCSe - DS ) ) ),RRSe ) * MUM ) * DS ) ) - MUR )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( AMS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ),ACS ) ) ) + ( PN + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( PN + ( BR / AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( BR / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) / CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( Const,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( Max( RRSe,DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( AMS,ACS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - MUC )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( AMS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ),ACS ) ) ) + ( PN + ( Min( FirstVNF_RAM_Server ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( PN + ( BR / AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),MLU ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe * ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( AMS,ACS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) * ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * RMSe ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( AMS,ACS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,FirstVNF_RAM_Server ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - CS )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,AMS ) ) ) + ( ( FirstVNF_Mem_Server / DDR ) / Max( ( FirstVNF_Mem_Server + ( DDR - FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe * Min( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) ,DS ) ) - MUM )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server - ACS ),Max( ACS,ACS ) ) ) + ( ( FirstVNF_RAM_Server * ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server - Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + Max( FirstVNF_RAM_Server,PN ) ) )", "choosing": "( ( RRSe / ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * RRSe ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( ( ( FirstVNF_RAM_Server / PN ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( ( FirstVNF_CPU / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) - ( AMS / ARS ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * RRSe ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS - ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) + ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( AMS,ACS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),( ( AMS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ) / ACS ) ) ) + ( PN + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( PN + ( BR / AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MLU ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) / ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * RCSe ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Min( DDR ,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / FirstVNF_Mem_Server ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( AMS,ACS ) ) ) + ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / Min( ( FirstVNF_Mem_Server / ACS ) ,Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe - ( ( ( ( RMSe - ( MUC - MUC ) ) / RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - Max( RRSe,DS ) ) ),RRSe ) * CS ) * RRSe ) ) - RRSe )", "obj1": 0.08713692946058091, "obj2": 0.7219316039828922}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( AMS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ),ACS ) ) ) + ( PN + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( PN + ( BR / AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( Max( DDR,FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( Max( RMSe,( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( AMS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ),ACS ) ) ) + ( PN + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) * ( PN + ( BR / AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - RMSe ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) / ( ( FirstVNF_Mem_Server / ACS ) + Max( AMS,ACS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( AMS,ACS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( AMS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ),ACS ) ) ) + ( PN + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( PN + ( BR / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( RRSe - ( ( ( ( RMSe - ( MUC - MUC ) ) - RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( ARS,FirstVNF_CPU ) ) ) + MRS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - MUR ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( AMS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ),ACS ) ) ) + ( PN + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( PN + ( BR / AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( CRS / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RCSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( AMS,ACS ) ) ) + ( FirstVNF_RAM_Server / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - RMSe ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ),( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( ( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ) - RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( Max( FirstVNF_Mem_Server,ACS ) ,Max( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) - DS ) / DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}], "56": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( AMS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ),ACS ) ) ) + ( PN + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( PN + ( BR / AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( AMS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ),ACS ) ) ) + ( PN + ( Min( FirstVNF_RAM_Server ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( PN + ( BR / AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),MLU ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,AMS ) ) ) + ( ( FirstVNF_Mem_Server / DDR ) / Max( ( FirstVNF_Mem_Server + ( DDR - FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe * Min( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) ,DS ) ) - MUM )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( ( ( FirstVNF_RAM_Server / PN ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) / ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * RCSe ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Min( ( FirstVNF_Mem_Server / ACS ) ,Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe - ( ( ( ( RMSe - ( MUC - MUC ) ) / RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( AMS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ),ACS ) ) ) + ( PN + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( PN + ( BR / AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( Max( DDR,FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( Max( RMSe,( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( AMS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ),ACS ) ) ) + ( PN + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) * ( PN + ( BR / AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - RMSe ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) / ( ( FirstVNF_Mem_Server / ACS ) + Max( AMS,ACS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( AMS,ACS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( AMS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ),ACS ) ) ) + ( PN + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( PN + ( BR / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( RRSe - ( ( ( ( RMSe - ( MUC - MUC ) ) - RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( ARS,FirstVNF_CPU ) ) ) + MRS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - MUR ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( AMS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ),ACS ) ) ) + ( PN + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( PN + ( BR / AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( CRS / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RCSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( AMS,ACS ) ) ) + ( FirstVNF_RAM_Server / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - RMSe ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ),( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( ( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ) - RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( Max( FirstVNF_Mem_Server,ACS ) ,Max( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) - DS ) / DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( AMS,ACS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( AMS,ACS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_CPU / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) - DS ) * MLU ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( AMS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ),ACS ) ) ) + ( PN + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( PN - ( BR / AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),MUC ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( AMS,ACS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( MDR / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * RRSe ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_Mem / Max( ( FirstVNF_Mem_Server - ACS ),Max( ACS,ACS ) ) ) + ( ( FirstVNF_RAM_Server * ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server - Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + Max( FirstVNF_RAM_Server,PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( AMS,ACS ) ) ) + ( DDR * CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - MLU ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( AMS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ),ACS ) ) ) + ( PN + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( PN + ( BR / AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( CRS / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( MLU - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( ( ( FirstVNF_RAM_Server / PN ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Min( DDR ,RRS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * RCSe ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server * PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( CS - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( ( FirstVNF_CPU / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) - ( AMS / ARS ) ) ) ) + ( DDR / FirstVNF_Mem_Server ) )", "choosing": "( Max( RRSe,( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( AMS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ),ACS ) ) ) + ( PN + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( PN + ( BR / AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( Const / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / FirstVNF_Mem_Server ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}], "57": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( AMS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ),ACS ) ) ) + ( PN + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( PN + ( BR / AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( AMS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ),ACS ) ) ) + ( PN + ( Min( FirstVNF_RAM_Server ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( PN + ( BR / AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),MLU ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,AMS ) ) ) + ( ( FirstVNF_Mem_Server / DDR ) / Max( ( FirstVNF_Mem_Server + ( DDR - FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe * Min( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) ,DS ) ) - MUM )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( ( ( FirstVNF_RAM_Server / PN ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) / ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * RCSe ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Min( ( FirstVNF_Mem_Server / ACS ) ,Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe - ( ( ( ( RMSe - ( MUC - MUC ) ) / RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( AMS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ),ACS ) ) ) + ( PN + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( PN + ( BR / AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( Max( DDR,FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( Max( RMSe,( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( AMS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ),ACS ) ) ) + ( PN + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) * ( PN + ( BR / AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - RMSe ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) / ( ( FirstVNF_Mem_Server / ACS ) + Max( AMS,ACS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( AMS,ACS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( AMS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ),ACS ) ) ) + ( PN + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( PN + ( BR / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( RRSe - ( ( ( ( RMSe - ( MUC - MUC ) ) - RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( ARS,FirstVNF_CPU ) ) ) + MRS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - MUR ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( AMS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ),ACS ) ) ) + ( PN + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( PN + ( BR / AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( CRS / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RCSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( AMS,ACS ) ) ) + ( FirstVNF_RAM_Server / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - RMSe ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ),( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( ( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ) - RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( Max( FirstVNF_Mem_Server,ACS ) ,Max( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) - DS ) / DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( AMS,ACS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( AMS,ACS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_CPU / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) - DS ) * MLU ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( AMS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ),ACS ) ) ) + ( PN + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( PN - ( BR / AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),MUC ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( AMS,ACS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( MDR / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * RRSe ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_Mem / Max( ( FirstVNF_Mem_Server - ACS ),Max( ACS,ACS ) ) ) + ( ( FirstVNF_RAM_Server * ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server - Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + Max( FirstVNF_RAM_Server,PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( AMS,ACS ) ) ) + ( DDR * CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - MLU ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( AMS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ),ACS ) ) ) + ( PN + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( PN + ( BR / AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( CRS / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( MLU - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Min( DDR ,RRS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * RCSe ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server + Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) / ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server - ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),MUC ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( CRS / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server * ACS ),Max( DDR,ACS ) ) ) + Max( Min( ( FirstVNF_Mem_Server + ACS ) ,( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,DDR ) ) ) + MRS ) ),MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - Min( ( RRSe - DS ) ,( MUM - DS ) ) ),RRSe ) * DS ) * MUC ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ACS ) ) + MRS ) )", "choosing": "( ( RRSe + ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Min( DDR ,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / DDR ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / CRS ) ,( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) ) + MRS ) )", "choosing": "( ( MUM - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * RRSe ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}], "58": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( AMS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ),ACS ) ) ) + ( PN + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( PN + ( BR / AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( AMS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ),ACS ) ) ) + ( PN + ( Min( FirstVNF_RAM_Server ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( PN + ( BR / AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),MLU ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,AMS ) ) ) + ( ( FirstVNF_Mem_Server / DDR ) / Max( ( FirstVNF_Mem_Server + ( DDR - FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe * Min( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) ,DS ) ) - MUM )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) / Max( ( ( ( FirstVNF_RAM_Server / PN ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) / ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * RCSe ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Min( ( FirstVNF_Mem_Server / ACS ) ,Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe - ( ( ( ( RMSe - ( MUC - MUC ) ) / RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( AMS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ),ACS ) ) ) + ( PN + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( PN + ( BR / AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( Max( DDR,FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( Max( RMSe,( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( AMS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ),ACS ) ) ) + ( PN + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) * ( PN + ( BR / AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - RMSe ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) / ( ( FirstVNF_Mem_Server / ACS ) + Max( AMS,ACS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( AMS,ACS ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( MUC - MUC ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * CS ) * DS ) ) - RRSe )", "obj1": 0.08506224066390042, "obj2": 0.7241651072747285}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( ARS,FirstVNF_CPU ) ) ) + MRS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - MUR ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( CRS / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RCSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( Max( FirstVNF_Mem_Server,ACS ) ,Max( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) - DS ) / DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_CPU / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) - DS ) * MLU ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( CRS / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( MLU - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Min( DDR ,RRS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * RCSe ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server + Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) / ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server - ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),MUC ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( CRS / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server * ACS ),Max( DDR,ACS ) ) ) + Max( Min( ( FirstVNF_Mem_Server + ACS ) ,( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,DDR ) ) ) + MRS ) ),MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - Min( ( RRSe - DS ) ,( MUM - DS ) ) ),RRSe ) * DS ) * MUC ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ACS ) ) + MRS ) )", "choosing": "( ( RRSe + ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Min( DDR ,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / DDR ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / CRS ) ,( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) ) + MRS ) )", "choosing": "( ( MUM - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * RRSe ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( MDR / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem_Server / DDR ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe + DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( CRS / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( CRS / ACS ) ,Max( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ),ACS ) ) + FirstVNF_CPU ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe / RMSe ) ),RRSe ) * DS ) / DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( Max( RRSe,( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - MUC )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7527080095865034}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( Max( FirstVNF_Mem_Server,ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe + ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( AMS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ),ACS ) ) ) + ( PN + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_Mem_Server,ACS ) ) ) + ( PN + ( BR / AMS ) ) ) ) )", "choosing": "( ( RRSe - Max( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ),DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server - ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( CS - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Min( DDR ,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( AMS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ),ACS ) ) ) + ( PN + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) * ( PN + ( BR / AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08298755186721991, "obj2": 0.7527080095865034}], "59": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( ARS,FirstVNF_CPU ) ) ) + MRS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - MUR ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( CRS / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RCSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( Max( FirstVNF_Mem_Server,ACS ) ,Max( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) - DS ) / DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_CPU / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) - DS ) * MLU ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( CRS / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( MLU - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Min( DDR ,RRS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * RCSe ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server + Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) / ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server - ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),MUC ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( CRS / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server * ACS ),Max( DDR,ACS ) ) ) + Max( Min( ( FirstVNF_Mem_Server + ACS ) ,( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,DDR ) ) ) + MRS ) ),MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - Min( ( RRSe - DS ) ,( MUM - DS ) ) ),RRSe ) * DS ) * MUC ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ACS ) ) + MRS ) )", "choosing": "( ( RRSe + ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Min( DDR ,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / DDR ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / CRS ) ,( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) ) + MRS ) )", "choosing": "( ( MUM - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * RRSe ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( MDR / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem_Server / DDR ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe + DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( CRS / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( CRS / ACS ) ,Max( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ),ACS ) ) + FirstVNF_CPU ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe / RMSe ) ),RRSe ) * DS ) / DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( Max( RRSe,( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - MUC )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( Max( FirstVNF_Mem_Server,ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe + ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( AMS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ),ACS ) ) ) + ( PN + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_Mem_Server,ACS ) ) ) + ( PN + ( BR / AMS ) ) ) ) )", "choosing": "( ( RRSe - Max( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ),DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server - ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( CS - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Min( DDR ,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( MRS + ( Min( ( FirstVNF_Mem_Server / ACS ) ,( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( CRS / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,BR ) ) ) + ( Min( ( CRS / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( DS - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem_Server / DDR ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server - ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( Max( DDR,FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( AMS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ),ACS ) ) ) + ( PN + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,ACS ) ) ) + ( PN + ( BR / AMS ) ) ) ) )", "choosing": "( ( RRSe - ( ( Max( Max( ( RMSe - ( MUC - MUC ) ),RRSe ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Min( DDR ,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}], "60": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( ARS,FirstVNF_CPU ) ) ) + MRS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - MUR ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( CRS / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RCSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( Max( FirstVNF_Mem_Server,ACS ) ,Max( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) - DS ) / DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_CPU / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) - DS ) * MLU ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( CRS / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( MLU - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Min( DDR ,RRS ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * RCSe ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server + Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) / ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server - ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),MUC ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( CRS / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server * ACS ),Max( DDR,ACS ) ) ) + Max( Min( ( FirstVNF_Mem_Server + ACS ) ,( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,DDR ) ) ) + MRS ) ),MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - Min( ( RRSe - DS ) ,( MUM - DS ) ) ),RRSe ) * DS ) * MUC ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ACS ) ) + MRS ) )", "choosing": "( ( RRSe + ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Min( DDR ,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / DDR ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / CRS ) ,( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) ) + MRS ) )", "choosing": "( ( MUM - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * RRSe ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( MDR / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem_Server / DDR ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe + DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( CRS / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( CRS / ACS ) ,Max( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ),ACS ) ) + FirstVNF_CPU ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe / RMSe ) ),RRSe ) * DS ) / DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( Max( RRSe,( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - MUC )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( Max( FirstVNF_Mem_Server,ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe + ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( ( AMS + ( ( DDR * FirstVNF_CPU ) + ( BR / AMS ) ) ),ACS ) ) ) + ( PN + ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( FirstVNF_Mem_Server,ACS ) ) ) + ( PN + ( BR / AMS ) ) ) ) )", "choosing": "( ( RRSe - Max( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ),DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server - ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( CS - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem_Server / DDR ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( Max( DDR,FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Min( DDR ,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( MUM,RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) * Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( DDR,BR ) ) ) + ( Min( ( CRS / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),MUC ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem_Server / DDR ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Min( DDR ,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem_Server / DDR ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem_Server / DDR ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR + FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) + ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_RAM / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + FirstVNF_CPU ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}], "61": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( ARS,FirstVNF_CPU ) ) ) + MRS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - MUR ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.08091286307053942, "obj2": 0.7549282835497219}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( Max( FirstVNF_Mem_Server,ACS ) ,Max( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) - DS ) / DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( CRS / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( MLU - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( CRS / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( CRS / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( CRS / ACS ) ,Max( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ),ACS ) ) + FirstVNF_CPU ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe / RMSe ) ),RRSe ) * DS ) / DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( Max( FirstVNF_Mem_Server,ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe + ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem_Server / DDR ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( Max( DDR,FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Min( DDR ,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( MUM,RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) * Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( DDR,BR ) ) ) + ( Min( ( CRS / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),MUC ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem_Server / DDR ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Min( DDR ,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem_Server / DDR ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem_Server / DDR ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR + FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) + ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_RAM / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + FirstVNF_CPU ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( CRS / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),( DDR / BR ) ) ) + ( Min( ( CRS / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( MUM - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( CRS / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + FirstVNF_CPU ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),MUC ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem_Server / DDR ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) * ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( MUM,RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem_Server / DDR ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server + Max( FirstVNF_Mem,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( Max( RRSe,( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Min( DDR ,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Min( DDR ,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( CRS / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( MUM,RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem_Server / DDR ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem_Server / DDR ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,( Min( ( FirstVNF_Mem_Server / ACS ) ,( ( FirstVNF_Mem_Server / ACS ) / Max( DDR,FirstVNF_CPU ) ) ) + MRS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( ( MUM + RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}], "62": [{"determining": "( ( FirstVNF_CPU_Server + PN ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU + MUM ),( RCSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( Max( FirstVNF_Mem_Server,ACS ) ,Max( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) - DS ) / DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( CRS / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( MLU - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( CRS / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( CRS / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( CRS / ACS ) ,Max( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ),ACS ) ) + FirstVNF_CPU ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe / RMSe ) ),RRSe ) * DS ) / DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( Max( FirstVNF_Mem_Server,ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe + ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem_Server / DDR ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( Max( DDR,FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Min( DDR ,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( MUM,RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) * Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / ACS ) + Max( DDR,BR ) ) ) + ( Min( ( CRS / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),MUC ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem_Server / DDR ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Min( DDR ,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem_Server / DDR ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem_Server / DDR ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR + FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) + ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_RAM / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + FirstVNF_CPU ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RMSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( PN / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( CRS / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),( DDR / BR ) ) ) + ( Min( ( CRS / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( MUM - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( CRS / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + FirstVNF_CPU ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),MUC ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem_Server / DDR ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) + MRS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) * ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( MUM,RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem_Server / DDR ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server + Max( FirstVNF_Mem,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( Max( RRSe,( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Min( DDR ,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Min( DDR ,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( DDR / CRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,FirstVNF_CPU ) ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( CRS / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( MUM,RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem_Server / DDR ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem_Server / DDR ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_Mem_Server / ACS ) / Max( ( FirstVNF_Mem_Server + Max( DDR,FirstVNF_CPU ) ),Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RMSe - ( ( RRSe - DS ) - ( RRSe - DS ) ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,( Min( ( FirstVNF_Mem_Server / ACS ) ,( ( FirstVNF_Mem_Server / ACS ) / Max( DDR,FirstVNF_CPU ) ) ) + MRS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( ( MUM + RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( Min( ( FirstVNF_Mem_Server / ACS ) ,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),ACS ) ) + MRS ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem_Server / ACS ),Max( DDR,ACS ) ) ) + ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem_Server / ACS ) + ( ( FirstVNF_RAM_Server / Max( Max( DDR,PN ),Max( DDR,FirstVNF_CPU ) ) ) + ( ( DDR * FirstVNF_CPU ) + ( AMS / ARS ) ) ) ) ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( ( RRSe - ( ( Max( ( RRSe - ( RRSe - RMSe ) ),RRSe ) * DS ) * DS ) ) - RRSe )", "obj1": 0.07883817427385892, "obj2": 0.7577823246252376}]}