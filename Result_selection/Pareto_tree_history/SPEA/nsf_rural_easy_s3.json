{"1": [{"determining": "Min( ( RRS - DDR ) ,Min( FirstVNF_RAM_Server ,AMS ) )", "choosing": "( ( MLU + ( RCSe + MUM ) ) / ( CS * ( RCSe - ( RRSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - DDR ) / Max( AMS,FirstVNF_Mem ) )", "choosing": "( Max( MLU,CS ) - Max( RRSe,MUR ) )", "obj1": 0.14566929133858267, "obj2": 0.7607890337953788}, {"determining": "( ( MRS - FirstVNF_Mem_Server ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - RMSe ) / Max( RMSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,CRS ) ,Max( ARS,FirstVNF_CPU_Server ) )", "choosing": "( ( DS * MUC ) - ( CS / DS ) )", "obj1": 0.4330708661417323, "obj2": 0.4633440339544968}, {"determining": "( Max( MDR,CRS ) / ( MDR + MDR ) )", "choosing": "Min( Min( MLU ,RCSe ) ,( DS / MUM ) )", "obj1": 0.38188976377952755, "obj2": 0.5174921136150807}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) * ( FirstVNF_Mem - ARS ) )", "choosing": "( ( CS / MUC ) - Min( MUM ,CS ) )", "obj1": 0.9035433070866141, "obj2": 0.08186506538399123}, {"determining": "( ( MRS / ACS ) - ( ARS + PN ) )", "choosing": "Min( ( RCSe + RRSe ) ,Max( MUM,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / FirstVNF_CPU_Server ) - ( ACS + RRS ) )", "choosing": "( ( RRSe - MLU ) / ( RCSe * RMSe ) )", "obj1": 0.8877952755905512, "obj2": 0.10226287054413441}, {"determining": "( ( Const + MDR ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "Max( ( RMSe + MLU ),( DS + RCSe ) )", "obj1": 0.26968503937007876, "obj2": 0.643370582159957}, {"determining": "( ( AMS - MDR ) - Max( PN,FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( RMSe - DS ) * MUR ),Min( ( MUM + MLU ) ,Max( MUM,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - MRS ) - ( FirstVNF_CPU_Server / DDR ) ) - Min( ( ARS - MRS ) ,( PN * DDR ) ) )", "choosing": "( ( ( RCSe * MUM ) - MUM ) / Min( MUM ,( DS + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( BR,ACS ),( MDR / MRS ) ) + ( ( RRS + Const ) * ( PN / RRS ) ) )", "choosing": "Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.21456692913385828, "obj2": 0.6737935630349374}, {"determining": "( Max( Min( ACS ,FirstVNF_RAM ),AMS ) * Min( DDR ,( MDR - CRS ) ) )", "choosing": "( ( ( RMSe - CS ) / ( RRSe / RMSe ) ) * Max( ( RRSe - MUC ),( RRSe + CS ) ) )", "obj1": 0.3169291338582677, "obj2": 0.5637385851870318}, {"determining": "Max( ( CRS - ( MDR / PN ) ),( Const + FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU * MLU ) * Min( RMSe ,RCSe ) ) - Min( ( MLU - CS ) ,( DS / MLU ) ) )", "obj1": 0.19094488188976377, "obj2": 0.737039712423965}, {"determining": "( ( FirstVNF_CPU * CRS ) - ( ( MDR - Const ) - Const ) )", "choosing": "( Min( ( DS / MLU ) ,( MUC * RMSe ) ) * ( ( DS / DS ) * ( RMSe - MUM ) ) )", "obj1": 0.3720472440944882, "obj2": 0.5480855237413507}, {"determining": "( Max( ( ARS + BR ),( FirstVNF_RAM * FirstVNF_CPU ) ) - ( Min( FirstVNF_Mem_Server ,AMS ) - ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) )", "choosing": "Min( Min( Max( RCSe,RRSe ) ,( DS / MUM ) ) ,( ( MUR * RMSe ) * ( MLU * RRSe ) ) )", "obj1": 0.4094488188976378, "obj2": 0.48322715985885273}, {"determining": "Min( ( BR + FirstVNF_RAM ) ,( FirstVNF_RAM - Const ) )", "choosing": "Max( ( ( MUC * MUM ) * Max( RCSe,MUC ) ),( ( RCSe - MLU ) - Min( MUR ,MUC ) ) )", "obj1": 0.2677165354330709, "obj2": 0.6555933662502436}, {"determining": "Max( ( Const / FirstVNF_Mem_Server ),Min( AMS ,FirstVNF_CPU_Server ) )", "choosing": "Max( Max( ( MUR / MUC ),Min( RMSe ,CS ) ),Min( Max( CS,CS ) ,Max( MUR,RCSe ) ) )", "obj1": 0.23031496062992127, "obj2": 0.6567190004189101}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - ( Const * RRS ) ) ,( Max( FirstVNF_CPU,BR ) * ( FirstVNF_Mem / DDR ) ) )", "choosing": "( ( ( RRSe / CS ) + ( RRSe - CS ) ) * ( Max( MUM,RMSe ) / MUM ) )", "obj1": 0.3031496062992126, "obj2": 0.5807474262507303}, {"determining": "Max( ( FirstVNF_Mem_Server * Min( DDR ,PN ) ),( CRS / ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) )", "choosing": "Max( Max( Min( RCSe ,MLU ),( Min( MUR ,( MUC / CS ) ) / DS ) ),Max( Min( MUC ,MUR ),Max( RCSe,MLU ) ) )", "obj1": 0.09448818897637795, "obj2": 0.8662965307731502}, {"determining": "Min( ( ( BR * RRS ) - Max( RRS,ACS ) ) ,( Min( FirstVNF_Mem_Server ,BR ) + Min( RRS ,MRS ) ) )", "choosing": "Max( Max( MUC,CS ),Max( ( MUR * MUR ),( RRSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + MRS ) + ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MUM / MUM ) / ( Min( ( MLU * ( MUM + RMSe ) ) ,MUM ) - ( RRSe + RCSe ) ) )", "obj1": 0.1968503937007874, "obj2": 0.6803759393675692}, {"determining": "( ( Min( PN ,Const ) * ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) + ( ( DDR - ARS ) + BR ) )", "choosing": "( Max( MUM,RCSe ) / ( ( RCSe - MUM ) - ( RRSe - MUC ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6720063396089517}, {"determining": "( ( ( FirstVNF_Mem + MRS ) / ( BR + FirstVNF_CPU_Server ) ) - Max( ( FirstVNF_RAM * FirstVNF_RAM ),Min( MRS ,PN ) ) )", "choosing": "( ( Max( MUC,RCSe ) / ( MLU + MLU ) ) / ( ( RRSe - MUR ) / Min( CS ,MUC ) ) )", "obj1": 0.46653543307086615, "obj2": 0.44893669003065234}, {"determining": "Max( ( ( ( BR / MDR ) + Min( MRS ,ACS ) ) - ( Max( AMS,DDR ) / ( FirstVNF_CPU_Server - MRS ) ) ),( Min( ( CRS - FirstVNF_RAM ) ,Max( BR,FirstVNF_Mem_Server ) ) + ( Min( DDR ,RRS ) - ( ACS - CRS ) ) ) )", "choosing": "( Min( MUR ,MUM ) * ( DS / ( ( RCSe * CS ) - MUM ) ) )", "obj1": 0.9940944881889764, "obj2": 0.002571958291882612}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,CRS ) ,Max( FirstVNF_CPU_Server,AMS ) ) - Max( ( BR / FirstVNF_RAM_Server ),( FirstVNF_RAM - MDR ) ) ) - ( Max( ( ACS + FirstVNF_RAM ),Min( ACS ,FirstVNF_CPU ) ) / ( Min( MDR ,PN ) + Min( ACS ,Const ) ) ) )", "choosing": "( ( Min( ( MUC * MLU ) ,( RCSe + DS ) ) * Max( Min( MUM ,RCSe ),( DS - DS ) ) ) * ( ( ( RMSe - MUC ) - ( MUM - RRSe ) ) - ( Min( MUR ,MLU ) * Min( RMSe ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( Max( FirstVNF_RAM_Server,Const ) * ( ARS * BR ) ) ,( Max( Const,FirstVNF_RAM_Server ) - ( DDR * CRS ) ) ),Max( ( Max( FirstVNF_RAM_Server,PN ) - ( ARS / MDR ) ),Min( ( CRS + MRS ) ,Max( MDR,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Max( MLU,RCSe ) * ( MUC + DS ) ) + Min( ( CS + MUR ) ,( CS + RCSe ) ) ) / ( Max( ( RCSe / RRSe ),( DS + MUR ) ) / ( Max( MUM,MUC ) - ( RCSe * DS ) ) ) )", "obj1": 0.1732283464566929, "obj2": 0.7554645962223336}, {"determining": "Min( Min( Min( ( ARS + Const ) ,( FirstVNF_CPU + RRS ) ) ,( ( Const / FirstVNF_RAM_Server ) * ( MDR - AMS ) ) ) ,( ( Max( FirstVNF_CPU,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( FirstVNF_Mem * RRS ) ) ) )", "choosing": "( ( Max( Max( RCSe,MLU ),Max( RCSe,MUC ) ) - Max( ( DS * MLU ),( MUM + RRSe ) ) ) * ( ( ( RCSe - MLU ) - Min( RCSe ,DS ) ) / Min( Max( MLU,RRSe ) ,Max( MUM,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_CPU - RRS ) - ( MRS / FirstVNF_CPU_Server ) ) ,( ( FirstVNF_CPU / FirstVNF_CPU_Server ) - ( PN - ARS ) ) ) * ( Max( Min( FirstVNF_CPU ,Const ),( FirstVNF_Mem_Server / FirstVNF_Mem ) ) + ( ( FirstVNF_Mem + DDR ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( DS * MLU ) / ( MUR - CS ) ),Max( Min( MUR ,DS ),Min( MUC ,DS ) ) ) / ( Max( Max( RMSe,CS ),( RMSe / MUM ) ) / ( Min( DS ,MUM ) * ( MLU * RRSe ) ) ) )", "obj1": 0.33070866141732286, "obj2": 0.5592338755276612}, {"determining": "Min( Min( Max( Min( FirstVNF_Mem ,BR ),( AMS + FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM - Const ) * ( FirstVNF_CPU_Server + RRS ) ) ) ,( Min( ( DDR - CRS ) ,( FirstVNF_RAM_Server * CRS ) ) + ( Min( Const ,DDR ) * ( Const - RRS ) ) ) )", "choosing": "( Max( Min( ( RCSe + CS ) ,( MUR + MUR ) ),( ( MLU / DS ) / Min( MUR ,MUC ) ) ) + Max( ( ( MUC / MUR ) * Min( RRSe ,MUM ) ),( ( RMSe + MUR ) - ( RMSe - MUR ) ) ) )", "obj1": 0.11811023622047244, "obj2": 0.8188109877717252}, {"determining": "( ( ( Min( BR ,Const ) - DDR ) / Max( ACS,ARS ) ) - ( MRS - MRS ) )", "choosing": "Max( ( ( ( MUC + RMSe ) * ( RMSe - RMSe ) ) - Max( ( RRSe + MUM ),( RCSe * RCSe ) ) ),Min( ( Max( MUR,MUM ) - Max( DS,RMSe ) ) ,( ( CS - RCSe ) / ( RMSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + AMS ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) )", "choosing": "( Max( ( ( DS + RMSe ) * Max( MLU,DS ) ),( ( MUC + RMSe ) - ( CS * CS ) ) ) / Max( ( ( MUM + RRSe ) + ( RRSe * MUM ) ),( ( MUC * MUM ) + ( MUC + DS ) ) ) )", "obj1": 0.27165354330708663, "obj2": 0.5990466125472628}, {"determining": "Max( Max( Const,( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ),( ( ( DDR * ( PN * RRS ) ) - MRS ) - FirstVNF_Mem ) )", "choosing": "( ( CS + Max( RRSe,RCSe ) ) - ( CS * MLU ) )", "obj1": 0.4645669291338583, "obj2": 0.4512930556791101}, {"determining": "( ( PN - Const ) - ( FirstVNF_RAM * ( ( FirstVNF_CPU_Server / ACS ) / Min( PN ,ARS ) ) ) )", "choosing": "( ( RRSe * Min( MUC ,MLU ) ) - Min( Max( ( MUC / DS ),( MUR * RCSe ) ) ,Min( ( RMSe + MUC ) ,Max( MUM,( MUC - ( Max( MUM,MUR ) * ( MUC / MLU ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) * ( MDR / RRS ) ) / ( Min( MRS ,Const ) + ( FirstVNF_RAM - FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) - Max( PN,MDR ) ) - ( Min( MDR ,FirstVNF_Mem_Server ) * ( PN / MRS ) ) ) )", "choosing": "( ( ( ( CS + CS ) * Min( RMSe ,RCSe ) ) / ( ( MUM * MUC ) + Min( RRSe ,MLU ) ) ) / ( Min( ( RCSe / MUR ) ,Min( MUR ,CS ) ) * ( ( MUM / RCSe ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.5255905511811023, "obj2": 0.37068774343326283}, {"determining": "( ( ( ( AMS - FirstVNF_Mem ) * ( FirstVNF_Mem_Server - MRS ) ) / Max( Max( MDR,FirstVNF_RAM ),( FirstVNF_Mem_Server + BR ) ) ) - ( ( Min( FirstVNF_Mem_Server ,RRS ) - ( CRS + FirstVNF_Mem_Server ) ) + ( ( FirstVNF_RAM / Const ) / ( PN + ACS ) ) ) )", "choosing": "( Max( CS,RRSe ) / ( MUC + Min( MUC ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_RAM_Server * BR ),( RRS - AMS ) ) ,( ( AMS * Const ) + Min( FirstVNF_Mem ,BR ) ) ) + ( Max( Max( BR,FirstVNF_RAM ),( FirstVNF_Mem * FirstVNF_CPU ) ) + Min( Max( DDR,PN ) ,ACS ) ) )", "choosing": "Min( ( DS - ( MUC - ( RRSe - MUC ) ) ) ,( MUC / ( RMSe - MUM ) ) )", "obj1": 0.2874015748031496, "obj2": 0.5952601824439431}, {"determining": "Min( ( ( ( AMS - RRS ) * ( ACS / DDR ) ) + Min( ( PN * FirstVNF_Mem_Server ) ,( DDR * FirstVNF_CPU_Server ) ) ) ,( ( Max( DDR,FirstVNF_CPU ) * ( FirstVNF_Mem_Server - RRS ) ) / ( ( RRS * FirstVNF_RAM ) / ( DDR / AMS ) ) ) )", "choosing": "( ( MUC / DS ) - ( RMSe - Max( RMSe,( MUC * MLU ) ) ) )", "obj1": 0.1220472440944882, "obj2": 0.8138402519313431}, {"determining": "( ( Max( Min( ACS ,BR ),( MDR + FirstVNF_RAM ) ) * Min( Max( BR,PN ) ,( ACS * FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_CPU - CRS ) * ( FirstVNF_RAM_Server * AMS ) ) - Min( ( RRS - MRS ) ,( Const - MRS ) ) ) )", "choosing": "Min( ( MUR * ( RMSe * ( MUR * RCSe ) ) ) ,( DS - ( ( MUC + MUM ) + RRSe ) ) )", "obj1": 0.34448818897637795, "obj2": 0.549315885618421}, {"determining": "( ( FirstVNF_RAM_Server * MRS ) - ( DDR - PN ) )", "choosing": "( Min( Min( MUR ,Max( MUC,RRSe ) ) ,( CS * MUR ) ) - ( ( RMSe - ( CS + CS ) ) * ( MUC * RRSe ) ) )", "obj1": 0.9212598425196851, "obj2": 0.03951628633351609}, {"determining": "Max( Min( Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,( PN / FirstVNF_RAM_Server ) ) ,( Min( RRS ,CRS ) * ( FirstVNF_Mem - ARS ) ) ),Min( ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * ( DDR + MDR ) ) ,( ( AMS * MDR ) * Min( FirstVNF_RAM ,AMS ) ) ) )", "choosing": "( ( ( DS / RCSe ) + ( MUR * Max( MUR,( RRSe * RCSe ) ) ) ) / Min( ( MUM + MUM ) ,DS ) )", "obj1": 0.13188976377952755, "obj2": 0.79552197611227}], "2": [{"determining": "Min( ( RRS - DDR ) ,Min( FirstVNF_RAM_Server ,AMS ) )", "choosing": "( ( MLU + ( RCSe + MUM ) ) / ( CS * ( RCSe - ( RRSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem_Server ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - RMSe ) / Max( RMSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,CRS ) ,Max( ARS,FirstVNF_CPU_Server ) )", "choosing": "( ( DS * MUC ) - ( CS / DS ) )", "obj1": 0.4330708661417323, "obj2": 0.4633440339544968}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) * ( FirstVNF_Mem - ARS ) )", "choosing": "( ( CS / MUC ) - Min( MUM ,CS ) )", "obj1": 0.9035433070866141, "obj2": 0.08186506538399123}, {"determining": "( ( MRS / ACS ) - ( ARS + PN ) )", "choosing": "Min( ( RCSe + RRSe ) ,Max( MUM,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - MDR ) - Max( PN,FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( RMSe - DS ) * MUR ),Min( ( MUM + MLU ) ,Max( MUM,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - MRS ) - ( FirstVNF_CPU_Server / DDR ) ) - Min( ( ARS - MRS ) ,( PN * DDR ) ) )", "choosing": "( ( ( RCSe * MUM ) - MUM ) / Min( MUM ,( DS + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( BR,ACS ),( MDR / MRS ) ) + ( ( RRS + Const ) * ( PN / RRS ) ) )", "choosing": "Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.21456692913385828, "obj2": 0.6737935630349374}, {"determining": "Max( ( Const / FirstVNF_Mem_Server ),Min( AMS ,FirstVNF_CPU_Server ) )", "choosing": "Max( Max( ( MUR / MUC ),Min( RMSe ,CS ) ),Min( Max( CS,CS ) ,Max( MUR,RCSe ) ) )", "obj1": 0.23031496062992127, "obj2": 0.6567190004189101}, {"determining": "Max( ( FirstVNF_Mem_Server * Min( DDR ,PN ) ),( CRS / ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) )", "choosing": "Max( Max( Min( RCSe ,MLU ),( Min( MUR ,( MUC / CS ) ) / DS ) ),Max( Min( MUC ,MUR ),Max( RCSe,MLU ) ) )", "obj1": 0.09448818897637795, "obj2": 0.8662965307731502}, {"determining": "Min( ( ( BR * RRS ) - Max( RRS,ACS ) ) ,( Min( FirstVNF_Mem_Server ,BR ) + Min( RRS ,MRS ) ) )", "choosing": "Max( Max( MUC,CS ),Max( ( MUR * MUR ),( RRSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + MRS ) + ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MUM / MUM ) / ( Min( ( MLU * ( MUM + RMSe ) ) ,MUM ) - ( RRSe + RCSe ) ) )", "obj1": 0.1968503937007874, "obj2": 0.6803759393675692}, {"determining": "( ( ( FirstVNF_Mem + MRS ) / ( BR + FirstVNF_CPU_Server ) ) - Max( ( FirstVNF_RAM * FirstVNF_RAM ),Min( MRS ,PN ) ) )", "choosing": "( ( Max( MUC,RCSe ) / ( MLU + MLU ) ) / ( ( RRSe - MUR ) / Min( CS ,MUC ) ) )", "obj1": 0.46653543307086615, "obj2": 0.44893669003065234}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,CRS ) ,Max( FirstVNF_CPU_Server,AMS ) ) - Max( ( BR / FirstVNF_RAM_Server ),( FirstVNF_RAM - MDR ) ) ) - ( Max( ( ACS + FirstVNF_RAM ),Min( ACS ,FirstVNF_CPU ) ) / ( Min( MDR ,PN ) + Min( ACS ,Const ) ) ) )", "choosing": "( ( Min( ( MUC * MLU ) ,( RCSe + DS ) ) * Max( Min( MUM ,RCSe ),( DS - DS ) ) ) * ( ( ( RMSe - MUC ) - ( MUM - RRSe ) ) - ( Min( MUR ,MLU ) * Min( RMSe ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( ( ARS + Const ) ,( FirstVNF_CPU + RRS ) ) ,( ( Const / FirstVNF_RAM_Server ) * ( MDR - AMS ) ) ) ,( ( Max( FirstVNF_CPU,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( FirstVNF_Mem * RRS ) ) ) )", "choosing": "( ( Max( Max( RCSe,MLU ),Max( RCSe,MUC ) ) - Max( ( DS * MLU ),( MUM + RRSe ) ) ) * ( ( ( RCSe - MLU ) - Min( RCSe ,DS ) ) / Min( Max( MLU,RRSe ) ,Max( MUM,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( Min( FirstVNF_Mem ,BR ),( AMS + FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM - Const ) * ( FirstVNF_CPU_Server + RRS ) ) ) ,( Min( ( DDR - CRS ) ,( FirstVNF_RAM_Server * CRS ) ) + ( Min( Const ,DDR ) * ( Const - RRS ) ) ) )", "choosing": "( Max( Min( ( RCSe + CS ) ,( MUR + MUR ) ),( ( MLU / DS ) / Min( MUR ,MUC ) ) ) + Max( ( ( MUC / MUR ) * Min( RRSe ,MUM ) ),( ( RMSe + MUR ) - ( RMSe - MUR ) ) ) )", "obj1": 0.11811023622047244, "obj2": 0.8188109877717252}, {"determining": "( ( ( Min( BR ,Const ) - DDR ) / Max( ACS,ARS ) ) - ( MRS - MRS ) )", "choosing": "Max( ( ( ( MUC + RMSe ) * ( RMSe - RMSe ) ) - Max( ( RRSe + MUM ),( RCSe * RCSe ) ) ),Min( ( Max( MUR,MUM ) - Max( DS,RMSe ) ) ,( ( CS - RCSe ) / ( RMSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + AMS ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) )", "choosing": "( Max( ( ( DS + RMSe ) * Max( MLU,DS ) ),( ( MUC + RMSe ) - ( CS * CS ) ) ) / Max( ( ( MUM + RRSe ) + ( RRSe * MUM ) ),( ( MUC * MUM ) + ( MUC + DS ) ) ) )", "obj1": 0.27165354330708663, "obj2": 0.5990466125472628}, {"determining": "Max( Max( Const,( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ),( ( ( DDR * ( PN * RRS ) ) - MRS ) - FirstVNF_Mem ) )", "choosing": "( ( CS + Max( RRSe,RCSe ) ) - ( CS * MLU ) )", "obj1": 0.4645669291338583, "obj2": 0.4512930556791101}, {"determining": "( ( PN - Const ) - ( FirstVNF_RAM * ( ( FirstVNF_CPU_Server / ACS ) / Min( PN ,ARS ) ) ) )", "choosing": "( ( RRSe * Min( MUC ,MLU ) ) - Min( Max( ( MUC / DS ),( MUR * RCSe ) ) ,Min( ( RMSe + MUC ) ,Max( MUM,( MUC - ( Max( MUM,MUR ) * ( MUC / MLU ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) * ( MDR / RRS ) ) / ( Min( MRS ,Const ) + ( FirstVNF_RAM - FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) - Max( PN,MDR ) ) - ( Min( MDR ,FirstVNF_Mem_Server ) * ( PN / MRS ) ) ) )", "choosing": "( ( ( ( CS + CS ) * Min( RMSe ,RCSe ) ) / ( ( MUM * MUC ) + Min( RRSe ,MLU ) ) ) / ( Min( ( RCSe / MUR ) ,Min( MUR ,CS ) ) * ( ( MUM / RCSe ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.5255905511811023, "obj2": 0.37068774343326283}, {"determining": "( ( ( ( AMS - FirstVNF_Mem ) * ( FirstVNF_Mem_Server - MRS ) ) / Max( Max( MDR,FirstVNF_RAM ),( FirstVNF_Mem_Server + BR ) ) ) - ( ( Min( FirstVNF_Mem_Server ,RRS ) - ( CRS + FirstVNF_Mem_Server ) ) + ( ( FirstVNF_RAM / Const ) / ( PN + ACS ) ) ) )", "choosing": "( Max( CS,RRSe ) / ( MUC + Min( MUC ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_RAM_Server * BR ),( RRS - AMS ) ) ,( ( AMS * Const ) + Min( FirstVNF_Mem ,BR ) ) ) + ( Max( Max( BR,FirstVNF_RAM ),( FirstVNF_Mem * FirstVNF_CPU ) ) + Min( Max( DDR,PN ) ,ACS ) ) )", "choosing": "Min( ( DS - ( MUC - ( RRSe - MUC ) ) ) ,( MUC / ( RMSe - MUM ) ) )", "obj1": 0.2874015748031496, "obj2": 0.5952601824439431}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,CRS ) ,Max( Max( Min( ACS ,FirstVNF_RAM ),AMS ),AMS ) ) - Max( ( BR / FirstVNF_RAM_Server ),( FirstVNF_RAM - MDR ) ) ) - ( Max( ( ACS + FirstVNF_RAM ),Min( ACS ,FirstVNF_CPU ) ) / ( Min( MDR ,PN ) + Min( ACS ,Const ) ) ) )", "choosing": "( ( Min( ( MUC * MLU ) ,( RCSe + DS ) ) * Max( Min( MUM ,RCSe ),( DS - DS ) ) ) * ( ( ( RMSe - MUC ) - ( MUM - RRSe ) ) - ( Min( MUR ,( RRSe - MUC ) ) * Min( RMSe ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,CRS ) ,Max( FirstVNF_CPU_Server,AMS ) ) - Max( ( BR / FirstVNF_RAM_Server ),( FirstVNF_RAM - MDR ) ) ) - ( Max( ( ACS + FirstVNF_RAM ),Min( ACS ,FirstVNF_CPU ) ) / ( Min( MDR ,PN ) + Min( ACS ,Const ) ) ) )", "choosing": "( ( ( RMSe - CS ) / ( RRSe / RMSe ) ) * Max( ( RRSe - MUC ),( RRSe + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Const / FirstVNF_Mem_Server ),Min( AMS ,FirstVNF_CPU_Server ) )", "choosing": "Max( Max( ( MUR / MUC ),Min( RMSe ,CS ) ),Min( Max( CS,CS ) ,Max( MUR,RCSe ) ) )", "obj1": 0.23031496062992127, "obj2": 0.6567190004189101}, {"determining": "( ( ACS + AMS ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) )", "choosing": "( Max( ( ( DS + RMSe ) * Max( MLU,DS ) ),( ( MUC + RMSe ) - ( CS * CS ) ) ) / Max( ( ( MUM + RRSe ) + ( RRSe * MUM ) ),( ( MUC * MUM ) + ( MUC + DS ) ) ) )", "obj1": 0.27165354330708663, "obj2": 0.5990466125472628}, {"determining": "Max( ( Const - PN ),Max( ( ( BR / FirstVNF_RAM ) - ( Const * ( ( FirstVNF_CPU_Server + ACS ) / FirstVNF_Mem ) ) ),BR ) )", "choosing": "( ( MLU / CS ) * ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) )", "obj1": 0.234251968503937, "obj2": 0.6182571273735992}, {"determining": "( ( BR / FirstVNF_RAM ) - ( Const * ( ( FirstVNF_CPU_Server + ACS ) / FirstVNF_Mem ) ) )", "choosing": "( Min( Max( Max( RCSe,MLU ),( RCSe * MUM ) ) ,Min( ( RMSe + MUC ) ,Max( MUM,DS ) ) ) - ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - Const ) - ( FirstVNF_RAM * ( ( FirstVNF_CPU_Server / ACS ) / Min( PN ,ARS ) ) ) )", "choosing": "( ( RRSe * Min( MUC ,MLU ) ) - Min( Max( ( MUC / DS ),( MUR * RCSe ) ) ,Min( ( RMSe + MUC ) ,Max( MUM,( MUC - ( Max( MUM,MUR ) * ( MUC / MLU ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - Const ) - ( FirstVNF_RAM * ( ( FirstVNF_CPU_Server / ACS ) / Min( PN ,ARS ) ) ) )", "choosing": "( ( RRSe * Min( MUC ,MLU ) ) - Min( Max( ( MUC / DS ),( MUR * RCSe ) ) ,Min( ( RMSe + MUC ) ,Max( MUM,( MUC - ( Max( MUM,MUR ) * ( MUC / MLU ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - Const ) - ( FirstVNF_RAM * ( ( FirstVNF_CPU_Server / ACS ) / Min( PN ,ARS ) ) ) )", "choosing": "( ( RRSe * Min( MUC ,MLU ) ) - Min( Max( ( MUC / DS ),( MUR * RCSe ) ) ,Min( ( RMSe + MUC ) ,Max( MUM,( MUC - ( Max( MUM,MUR ) * ( MUC / MLU ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / Max( ACS,MDR ) ) - ( FirstVNF_RAM * ( ( FirstVNF_CPU_Server + ACS ) / FirstVNF_Mem ) ) )", "choosing": "( Min( Max( Max( RCSe,MLU ),( RCSe * MUM ) ) ,Min( ( RMSe + MUC ) ,Max( MUM,CS ) ) ) - ( RRSe * Min( MUC ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - ( BR + FirstVNF_Mem_Server ) ) * ( RRS + MRS ) )", "choosing": "Max( ( CS / MUR ),( ( CS / MUR ) - Max( MUC,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + AMS ) - ( Min( ( FirstVNF_Mem_Server / DDR ) ,( ( CRS + Min( FirstVNF_CPU ,Const ) ) - ( FirstVNF_CPU_Server / AMS ) ) ) - DDR ) )", "choosing": "( ( ( ( DS + RMSe ) * Max( Min( ( DS - MUM ) ,( ( ( RMSe * RRSe ) / RRSe ) + ( ( CS * MUC ) + Max( MUM,MUC ) ) ) ),DS ) ) + ( ( MUC + RMSe ) - ( CS * CS ) ) ) / Max( ( MUM - RRSe ),( ( MUC * MUM ) + ( DS + MUC ) ) ) )", "obj1": 0.2421259842519685, "obj2": 0.6181858933088605}, {"determining": "( ( ( Min( BR ,Const ) - DDR ) / Max( ACS,ARS ) ) - ( MRS - MRS ) )", "choosing": "( Max( ( ( DS + RMSe ) * Max( MLU,DS ) ),( ( MUC + RMSe ) - ( CS * CS ) ) ) / Max( ( ( MUM + RRSe ) + ( RRSe * MUM ) ),( ( MUC * MUM ) + ( MUC + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Max( Min( Max( FirstVNF_Mem,RRS ) ,MDR ),FirstVNF_RAM_Server ) ,( FirstVNF_CPU + RRS ) ) ,( ( Const / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem_Server - MDR ) - AMS ) ) ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( RRS * FirstVNF_Mem ) ) ) )", "choosing": "( ( Max( Max( RCSe,MLU ),Max( RCSe,RRSe ) ) - Max( ( MUR * MLU ),( MUM + RRSe ) ) ) * ( RMSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( ( ARS + Const ) ,( FirstVNF_CPU + RRS ) ) ,( ( Const / FirstVNF_RAM_Server ) * ( MDR - AMS ) ) ) ,( ( Max( FirstVNF_CPU,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( FirstVNF_Mem * RRS ) ) ) )", "choosing": "( ( MUR * MLU ) + ( DS - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ARS ) * ( Max( FirstVNF_CPU_Server,ARS ) - FirstVNF_RAM ) )", "choosing": "( ( DS * MUM ) - ( ( RRSe / ( MUR + RMSe ) ) / DS ) )", "obj1": 0.3405511811023622, "obj2": 0.5322869125170111}, {"determining": "( ( FirstVNF_RAM / ( AMS / DDR ) ) - ( ACS + RRS ) )", "choosing": "( ( ( ( RRSe * RMSe ) * ( RMSe / MUR ) ) * ( ( MUC + CS ) * ( MUC * MLU ) ) ) / ( RCSe * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + FirstVNF_Mem ) * ( BR / FirstVNF_Mem ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( MUR,RMSe ) ) ) / Min( ( MUM + MUM ) ,DS ) )", "obj1": 0.12401574803149606, "obj2": 0.7984738673483776}, {"determining": "( ( MRS / ACS ) - ( ARS + PN ) )", "choosing": "Min( ( RCSe + RRSe ) ,Max( MUM,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( BR,ACS ),( MDR / MRS ) ) + ( Min( AMS ,FirstVNF_RAM ) * ( PN / RRS ) ) )", "choosing": "Max( ( MLU - MUM ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.22244094488188976, "obj2": 0.6666444372396284}, {"determining": "( Max( Max( BR,ACS ),( MDR / MRS ) ) + ( ( RRS + Const ) * ( PN / RRS ) ) )", "choosing": "Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.21456692913385828, "obj2": 0.6737935630349374}, {"determining": "Min( Min( Max( Min( FirstVNF_Mem ,BR ),( AMS + FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM - Const ) * ( AMS + RRS ) ) ) ,( Min( ( DDR - CRS ) ,( FirstVNF_RAM_Server * CRS ) ) + ( ( ( Max( FirstVNF_CPU_Server,BR ) + ACS ) - FirstVNF_RAM ) * ( Const - RRS ) ) ) )", "choosing": "( Max( Min( ( RCSe + CS ) ,Min( MUR ,MUR ) ),( Min( MUR ,MUC ) / ( MLU / DS ) ) ) + Max( ( ( MUC / MUR ) * Min( RRSe ,MUM ) ),( ( RMSe + MUR ) - ( Min( DS ,( DS * ( RMSe - MUC ) ) ) - MUR ) ) ) )", "obj1": 0.11811023622047244, "obj2": 0.8188109877717252}, {"determining": "( ( ACS + AMS ) - ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) * ( FirstVNF_Mem - ARS ) ) )", "choosing": "( Max( ( ( DS + RMSe ) * Max( MLU,DS ) ),( ( MUC + MUC ) - ( CS * CS ) ) ) / Max( ( ( MUM + RRSe ) + ( RRSe * MUM ) ),( ( MUC * MUM ) + ( MUC + DS ) ) ) )", "obj1": 0.2618110236220472, "obj2": 0.6062673318642386}, {"determining": "( ( ACS + AMS ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) )", "choosing": "( Max( ( ( DS + RMSe ) * Max( MLU,DS ) ),( ( MUC + RMSe ) - ( CS * CS ) ) ) / Max( ( ( MUM + RRSe ) + ( RRSe * MUM ) ),( ( MUC * MUM ) + ( MUC + DS ) ) ) )", "obj1": 0.27165354330708663, "obj2": 0.5990466125472628}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) * ( FirstVNF_Mem - ARS ) )", "choosing": "( ( CS / MUC ) - Min( MUM ,CS ) )", "obj1": 0.9035433070866141, "obj2": 0.08186506538399123}, {"determining": "( ( Min( PN ,Const ) * ( Const - FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM - ARS ) + Max( ( RRS + PN ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( MLU / MLU ) + Max( RCSe,RCSe ) ) - ( DS * MLU ) ) / ( ( MUM - RCSe ) - ( RRSe - MUC ) ) )", "obj1": 0.297244094488189, "obj2": 0.5793040066925176}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) + ( MRS * RRS ) )", "choosing": "( ( MUM / MUM ) / Max( ( MLU * Min( DS ,( Max( ( MUR / MUM ),MUC ) / ( ( ( MLU + MUR ) / MUM ) - RMSe ) ) ) ),( ( ( ( DS * Max( DS,( RRSe / CS ) ) ) - MUC ) + RCSe ) + DS ) ) )", "obj1": 0.1968503937007874, "obj2": 0.6803759393675692}, {"determining": "Max( Min( AMS ,FirstVNF_CPU_Server ),( RRS / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Max( ( RMSe / DS ),Min( Max( MUR,RCSe ) ,Max( CS,CS ) ) )", "obj1": 0.23031496062992127, "obj2": 0.6567190004189101}, {"determining": "( ( ( CRS - FirstVNF_Mem ) * CRS ) - ( ( MDR - Const ) - Const ) )", "choosing": "( Min( ( DS / MLU ) ,( MUC * RMSe ) ) * ( Min( CS ,DS ) - ( CS * MLU ) ) )", "obj1": 0.36023622047244097, "obj2": 0.5272763514704734}, {"determining": "Max( ( Const - PN ),( CRS - FirstVNF_Mem ) )", "choosing": "( Min( CS ,DS ) - ( CS * MLU ) )", "obj1": 0.4645669291338583, "obj2": 0.4512930556791101}, {"determining": "( ( FirstVNF_RAM / FirstVNF_CPU_Server ) - ( DDR / FirstVNF_CPU ) )", "choosing": "( ( RRSe - MLU ) / ( RCSe * ( Max( RCSe,MUC ) * ( RMSe - MUR ) ) ) )", "obj1": 0.5846456692913385, "obj2": 0.3579078107008298}, {"determining": "( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) * ( MDR / RRS ) ) / ( Min( MRS ,Const ) + ( FirstVNF_RAM - FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) - Max( PN,MDR ) ) - Max( ( CRS - ( MDR / PN ) ),( Const + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( CS + CS ) * Min( RMSe ,RCSe ) ) / ( ( MUM * MUC ) + Min( RRSe ,MLU ) ) ) / ( Min( ( RCSe / ( ( ( MLU * MLU ) * Min( RMSe ,RCSe ) ) - Min( ( MLU - CS ) ,( DS / MLU ) ) ) ) ,Min( MUR ,CS ) ) * ( ( MUM / RCSe ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.5177165354330708, "obj2": 0.3734627726897602}, {"determining": "( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) * ( MDR / RRS ) ) / ( Min( MRS ,Const ) + ( FirstVNF_RAM - FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) - Max( PN,MDR ) ) - ( Min( MDR ,FirstVNF_Mem_Server ) * ( PN / MRS ) ) ) )", "choosing": "( ( ( ( CS + CS ) * Min( RMSe ,RCSe ) ) / ( ( MUM * MUC ) + Min( RRSe ,MLU ) ) ) / ( Min( ( RCSe / MUR ) ,Min( MUR ,CS ) ) * ( ( MUM / RCSe ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.5137795275590551, "obj2": 0.3750978082544897}, {"determining": "( ( Min( BR ,MDR ) * Max( Max( FirstVNF_Mem_Server,CRS ),Min( ARS ,DDR ) ) ) + ( ( MRS / ACS ) / ( MDR - Const ) ) )", "choosing": "( RMSe / ( ( MUM - MUM ) + ( RRSe + CS ) ) )", "obj1": 0.5098425196850394, "obj2": 0.4488304873757064}, {"determining": "Max( Max( Const,( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ),( ( ( DDR * ( PN * RRS ) ) - MRS ) - FirstVNF_Mem ) )", "choosing": "( ( CS + Max( RRSe,RCSe ) ) - ( CS * MLU ) )", "obj1": 0.265748031496063, "obj2": 0.6014394538430629}, {"determining": "Max( Max( Const,( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ),( ( ( DDR * ( PN * RRS ) ) - MRS ) - FirstVNF_Mem ) )", "choosing": "( ( CS + Max( RRSe,RCSe ) ) - ( CS * MLU ) )", "obj1": 0.265748031496063, "obj2": 0.6014394538430629}, {"determining": "Max( Max( Const,( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ),( ( ( DDR * ( PN * RRS ) ) - MRS ) - FirstVNF_Mem ) )", "choosing": "( ( CS + Max( RRSe,RCSe ) ) - ( CS * MLU ) )", "obj1": 0.265748031496063, "obj2": 0.6014394538430629}, {"determining": "Max( Min( ACS ,( ( CRS * PN ) * Min( ( ( ACS * FirstVNF_CPU ) * BR ) ,BR ) ) ),( FirstVNF_Mem - ACS ) )", "choosing": "( ( DS / ( ( Min( ( CS * ( DS * ( RCSe + CS ) ) ) ,DS ) / MUM ) / ( MUR - RRSe ) ) ) - ( ( MUM * RRSe ) / CS ) )", "obj1": 0.265748031496063, "obj2": 0.6014394538430629}, {"determining": "( Max( Min( ACS ,FirstVNF_RAM ),AMS ) * Min( ( Max( FirstVNF_Mem_Server,Const ) + FirstVNF_CPU ) ,( MDR - CRS ) ) )", "choosing": "( ( ( RMSe - CS ) / ( RRSe / RMSe ) ) * RMSe )", "obj1": 0.3031496062992126, "obj2": 0.5776000731909737}, {"determining": "Max( ( Const / FirstVNF_Mem_Server ),Min( AMS ,FirstVNF_CPU_Server ) )", "choosing": "Max( Max( ( MUR / MUC ),Min( RMSe ,CS ) ),Min( Max( CS,CS ) ,Max( MUR,RCSe ) ) )", "obj1": 0.23031496062992127, "obj2": 0.6567190004189101}, {"determining": "( ( FirstVNF_RAM / MDR ) - ( ACS + RRS ) )", "choosing": "( ( RRSe - ( ( ( MLU * MLU ) * Min( RMSe ,RCSe ) ) - Min( ( MLU - CS ) ,( DS / MLU ) ) ) ) / ( RCSe * RMSe ) )", "obj1": 0.3110236220472441, "obj2": 0.5500857971336799}, {"determining": "Min( ( ACS + AMS ) ,Max( ARS,FirstVNF_CPU_Server ) )", "choosing": "( ( DS * MUC ) - ( CS / ( ( MUM + RRSe ) + ( RRSe * MUM ) ) ) )", "obj1": 0.3799212598425197, "obj2": 0.5148643911047905}, {"determining": "( ( ACS + AMS ) - Min( Min( ( ARS / BR ) ,CRS ) ,Max( ARS,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( ( DS + RMSe ) * Max( MLU,DS ) ),( Max( MUC,RMSe ) - ( CS * CS ) ) ) / Max( ( ( MUM + RRSe ) + ( RRSe * ( ( CS / DS ) - ( DS * ( RRSe + RRSe ) ) ) ) ),( ( MUC * MUM ) + ( MUC + DS ) ) ) )", "obj1": 0.2421259842519685, "obj2": 0.6181858933088605}, {"determining": "( ( ACS + AMS ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) )", "choosing": "( Max( ( ( DS + RMSe ) * Max( MLU,DS ) ),( ( MUC + RMSe ) - ( CS * CS ) ) ) / Max( ( ( MUM + RRSe ) + ( RRSe * MUM ) ),( ( MUC * MUM ) + ( MUC + DS ) ) ) )", "obj1": 0.27165354330708663, "obj2": 0.5990466125472628}, {"determining": "Min( Max( ARS,FirstVNF_CPU_Server ) ,( ( MDR / ( FirstVNF_RAM_Server - AMS ) ) * CRS ) )", "choosing": "( ( DS * ( ( Min( ( MUC + RCSe ) ,RRSe ) / RMSe ) - Max( MUR,Max( RRSe,( MUC / DS ) ) ) ) ) - ( CS / DS ) )", "obj1": 0.4330708661417323, "obj2": 0.4633440339544968}, {"determining": "Min( Min( ACS ,CRS ) ,Max( ARS,( RRS + MRS ) ) )", "choosing": "( RRSe - ( CS / DS ) )", "obj1": 0.4094488188976378, "obj2": 0.4760199870674658}, {"determining": "Min( Max( ARS,FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server - FirstVNF_RAM ) )", "choosing": "( Max( DS,MUC ) - ( DS / ( MUR + MUC ) ) )", "obj1": 0.4330708661417323, "obj2": 0.4633440339544968}, {"determining": "Max( Min( Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,( PN / ( MDR - Const ) ) ) ,( Min( RRS ,CRS ) * ( ARS - MDR ) ) ),Min( ( ( AMS * MDR ) * ( ACS * ACS ) ) ,( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * ( ( ( Const - Const ) - Const ) + MDR ) ) ) )", "choosing": "( ( ( CS / RCSe ) + ( MUR * ( Min( ( DS / MLU ) ,( MUC * ( ( DS + MLU ) / DS ) ) ) * RMSe ) ) ) / Min( ( MUM + MUM ) ,DS ) )", "obj1": 0.12992125984251968, "obj2": 0.7911201448876596}, {"determining": "Max( ( RRS * ( FirstVNF_CPU_Server * DDR ) ),Min( Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,( PN / FirstVNF_RAM_Server ) ) ,( Min( RRS ,RRS ) * ( MDR - ARS ) ) ) )", "choosing": "( ( ( ( Max( RCSe,( ( Max( CS,RCSe ) - RRSe ) / RMSe ) ) - CS ) * RMSe ) / MUR ) / Min( ( MUM + MUM ) ,DS ) )", "obj1": 0.1220472440944882, "obj2": 0.7994313298776837}, {"determining": "( Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,( PN / FirstVNF_RAM_Server ) ) + ( RRS - DDR ) )", "choosing": "( ( ( ( RCSe / CS ) + ( MUR * Max( MUR,RMSe ) ) ) / Min( ( MUM + MUM ) ,DS ) ) + Min( MUM ,MUC ) )", "obj1": 0.9133858267716536, "obj2": 0.038278769841165856}, {"determining": "( ( AMS + FirstVNF_Mem ) + ( RRS - DDR ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( MUR,RMSe ) ) ) / Min( ( MUM + MUM ) ,DS ) )", "obj1": 0.13385826771653545, "obj2": 0.7901854471358855}, {"determining": "Max( ( Min( ( FirstVNF_CPU - FirstVNF_Mem_Server ) ,PN ) * AMS ),( CRS / ( MRS + FirstVNF_RAM_Server ) ) )", "choosing": "Max( Max( ( RRSe - Max( MLU,Max( MUR,RRSe ) ) ),Min( Max( ( MUC + ( MUM * ( MUR - MUM ) ) ),( CS / Min( CS ,DS ) ) ) ,RCSe ) ),Min( MLU ,CS ) )", "obj1": 0.09448818897637795, "obj2": 0.8662965307731502}, {"determining": "Min( ( PN - MDR ) ,( ( Max( FirstVNF_CPU,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( FirstVNF_Mem * RRS ) ) ) )", "choosing": "( Min( DS ,MUM ) * ( ( ( RCSe - MLU ) - Min( RCSe ,DS ) ) / Min( Max( MLU,RRSe ) ,Max( MUM,RCSe ) ) ) )", "obj1": 0.7716535433070866, "obj2": 0.09916660710003479}, {"determining": "( ( ACS - DDR ) / ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) / CRS ) )", "choosing": "( Max( ( MUM - DS ),MUC ) - Max( RRSe,MUR ) )", "obj1": 0.19488188976377951, "obj2": 0.6955408841233635}, {"determining": "Max( ( ( CRS / ( FirstVNF_Mem_Server * ( AMS * ARS ) ) ) / CRS ),( RRS + CRS ) )", "choosing": "( Max( MLU,CS ) - Max( ( Min( RMSe ,( RCSe / MUM ) ) + ( RCSe - MUR ) ),MUR ) )", "obj1": 0.14566929133858267, "obj2": 0.754991873079845}, {"determining": "( ( ( ( AMS - FirstVNF_Mem ) * ( FirstVNF_Mem_Server - MRS ) ) / Max( Max( MDR,FirstVNF_RAM ),( FirstVNF_Mem_Server + BR ) ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + Min( MUC ,DS ) ),RRSe ) / ( MUC + Min( MUC ,DS ) ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "Max( ( ( ( Min( FirstVNF_RAM_Server ,Const ) / FirstVNF_RAM_Server ) * ( AMS + FirstVNF_CPU ) ) - ( ( FirstVNF_RAM_Server * CRS ) * Max( MDR,FirstVNF_Mem ) ) ),( Min( ( RRS - FirstVNF_Mem_Server ) ,( PN * AMS ) ) / Max( Min( ARS ,FirstVNF_CPU ),( FirstVNF_Mem_Server + MRS ) ) ) )", "choosing": "( ( ( ( MUR * MUC ) / ( MUR + MLU ) ) * ( ( RRSe * MLU ) / ( Min( ( Min( ( MLU * RRSe ) ,MUR ) / MLU ) ,DS ) - ( MUR + DS ) ) ) ) - Min( ( ( RMSe + MUM ) + ( DS - MUC ) ) ,Max( ( RRSe - MUM ),Max( CS,MUR ) ) ) )", "obj1": 0.18503937007874016, "obj2": 0.6977055645302325}, {"determining": "( Max( Max( BR,ACS ),( MDR / MRS ) ) + ( ( Max( Min( ACS ,BR ),( MDR + FirstVNF_RAM ) ) * Min( Max( BR,PN ) ,( ACS * FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_CPU - CRS ) * ( FirstVNF_RAM_Server * AMS ) ) - Min( ( RRS - MRS ) ,( Const - MRS ) ) ) ) )", "choosing": "Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.20669291338582677, "obj2": 0.6770275769405837}, {"determining": "( ( Max( Min( ACS ,BR ),( MDR + FirstVNF_RAM ) ) * ( Max( Max( BR,ACS ),( MDR / MRS ) ) + ( ( RRS + Const ) * ( PN / RRS ) ) ) ) + ( ( ( FirstVNF_CPU - CRS ) * ( FirstVNF_RAM_Server * AMS ) ) - Min( ( RRS - MRS ) ,( Const - MRS ) ) ) )", "choosing": "Min( ( MUR * ( RMSe * ( MUR * RCSe ) ) ) ,( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) - ( ( MUC + MUM ) + RRSe ) ) )", "obj1": 0.20078740157480315, "obj2": 0.6797339982268684}, {"determining": "( ( Max( Min( ACS ,BR ),( MDR + FirstVNF_RAM ) ) * Min( Max( BR,PN ) ,( ACS * FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_CPU - CRS ) * ( FirstVNF_RAM_Server * AMS ) ) - Min( ( RRS - MRS ) ,( Const - MRS ) ) ) )", "choosing": "Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6706124989042019}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( Min( ( RRS + ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ,Const ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( DS,MUR ) ,( ( ( RCSe - RMSe ) + Max( ( ( RCSe / RMSe ) * CS ),( MUC * MUM ) ) ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.10236220472440945, "obj2": 0.8294456479889214}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( Min( ( RRS + ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ,Const ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( DS,MUR ) ,( ( ( RCSe - RMSe ) + Max( ( ( RCSe / RMSe ) * CS ),( MUC * MUM ) ) ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.10236220472440945, "obj2": 0.8294456479889214}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( Min( ( RRS + ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ,Const ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( DS,MUR ) ,( ( ( RCSe - RMSe ) + Max( ( ( RCSe / RMSe ) * CS ),( MUC * MUM ) ) ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.10236220472440945, "obj2": 0.8294456479889214}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( DS,MUR ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.10236220472440945, "obj2": 0.8294456479889214}, {"determining": "( ( Min( BR ,MDR ) * ( FirstVNF_CPU_Server * BR ) ) + ( ( ( Min( AMS ,FirstVNF_RAM ) - Max( ( DDR - ACS ),FirstVNF_RAM ) ) / ACS ) / ( MDR - Const ) ) )", "choosing": "( Min( MLU ,CS ) / ( MUR - MLU ) )", "obj1": 0.39763779527559057, "obj2": 0.505887724836721}, {"determining": "( ( ( BR + FirstVNF_CPU_Server ) + MDR ) - ( ACS + AMS ) )", "choosing": "( Max( ( ( DS + RMSe ) * Max( MLU,DS ) ),( ( MUC + RMSe ) - ( CS * CS ) ) ) / Max( Max( ( MLU - RMSe ),MLU ),( MUC - MUR ) ) )", "obj1": 0.30708661417322836, "obj2": 0.5699782943118343}, {"determining": "( ( ACS + AMS ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) )", "choosing": "( Max( ( ( DS + RMSe ) * Max( MLU,DS ) ),( ( MUC + RMSe ) - ( CS * CS ) ) ) / Max( ( ( MUM + RRSe ) + ( RRSe * MUM ) ),( ( MUC * MUM ) + ( MUC + DS ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5970953387362697}, {"determining": "( ( ( Min( PN ,MDR ) * ( Const / FirstVNF_Mem_Server ) ) / ( ( BR * MDR ) + Max( FirstVNF_CPU,BR ) ) ) / ( ( ( ACS / FirstVNF_CPU ) + ( AMS * BR ) ) + Min( Max( FirstVNF_RAM_Server,BR ) ,( FirstVNF_Mem_Server - Max( Max( ( FirstVNF_RAM / ARS ),FirstVNF_CPU ),( Const / ( BR - Const ) ) ) ) ) ) )", "choosing": "( Min( ( ( DS - RRSe ) / ( MLU - DS ) ) ,Max( ( MLU + MLU ),( DS / MUR ) ) ) + ( ( ( MLU + CS ) + Min( MUR ,MUC ) ) / Max( ( MUR + Max( DS,CS ) ),Max( RMSe,MUM ) ) ) )", "obj1": 0.19291338582677164, "obj2": 0.6975472757797397}, {"determining": "( ( ( Min( PN ,MDR ) * ( Const / FirstVNF_Mem_Server ) ) / ( ( BR * MDR ) + Max( FirstVNF_CPU,BR ) ) ) / ( ( ( ACS / FirstVNF_CPU ) + ( AMS * BR ) ) + Min( Max( FirstVNF_RAM_Server,BR ) ,( FirstVNF_Mem_Server - Max( Max( ( FirstVNF_RAM / ARS ),FirstVNF_CPU ),( Const / ( BR - Const ) ) ) ) ) ) )", "choosing": "( Min( ( ( DS - RRSe ) / ( MLU - DS ) ) ,Max( ( MLU + MLU ),( DS / MUR ) ) ) + ( ( ( MLU + CS ) + Min( MUR ,MUC ) ) / Max( ( MUR + Max( DS,CS ) ),Max( RMSe,MUM ) ) ) )", "obj1": 0.19291338582677164, "obj2": 0.6975472757797397}, {"determining": "( ( ( Min( PN ,MDR ) * ( Const / FirstVNF_Mem_Server ) ) / ( ( BR * MDR ) + Max( FirstVNF_CPU,BR ) ) ) / ( ( ( ACS / FirstVNF_CPU ) + ( AMS * BR ) ) + Min( Max( FirstVNF_RAM_Server,BR ) ,( FirstVNF_Mem_Server - Max( Max( ( FirstVNF_RAM / ARS ),FirstVNF_CPU ),( Const / ( BR - Const ) ) ) ) ) ) )", "choosing": "( Min( ( ( DS - RRSe ) / ( MLU - DS ) ) ,Max( ( MLU + MLU ),( DS / MUR ) ) ) + ( ( ( MLU + CS ) + Min( MUR ,MUC ) ) / Max( ( MUR + Max( DS,CS ) ),Max( RMSe,MUM ) ) ) )", "obj1": 0.19291338582677164, "obj2": 0.6975472757797397}, {"determining": "( ( ( Min( PN ,MDR ) * ( Const / FirstVNF_Mem_Server ) ) / ( ( BR * MDR ) + Max( FirstVNF_CPU,BR ) ) ) / ( ( ( ACS / FirstVNF_CPU ) + ( AMS * BR ) ) + Min( Max( FirstVNF_RAM_Server,BR ) ,( FirstVNF_Mem_Server - Max( Max( ( FirstVNF_RAM / ARS ),FirstVNF_CPU ),( Const / ( BR - Const ) ) ) ) ) ) )", "choosing": "( Min( ( ( DS - RRSe ) / ( MLU - DS ) ) ,Max( ( MLU + MLU ),( DS / MUR ) ) ) + ( ( ( MLU + CS ) + Min( MUR ,MUC ) ) / Max( ( MUR + Max( DS,CS ) ),Max( RMSe,MUM ) ) ) )", "obj1": 0.19291338582677164, "obj2": 0.6975472757797397}, {"determining": "Max( ( ( ( BR / MDR ) + Min( MRS ,ACS ) ) - ( Max( AMS,DDR ) / ( FirstVNF_CPU_Server - MRS ) ) ),( Min( ( CRS - FirstVNF_RAM ) ,Min( MRS ,ACS ) ) + ( Min( DDR ,RRS ) - ( ACS - CRS ) ) ) )", "choosing": "( Min( MUR ,MUM ) * ( DS / ( ( RCSe * CS ) - ( ( RCSe * CS ) - MUM ) ) ) )", "obj1": 0.9940944881889764, "obj2": 0.0020826421474278373}, {"determining": "( ( Const - FirstVNF_RAM ) + ( ( MRS / ACS ) / ( Const - MDR ) ) )", "choosing": "( ( ( MUM - MUM ) + ( DS / RCSe ) ) / Min( MLU ,CS ) )", "obj1": 0.9625984251968503, "obj2": 0.030510786820124366}, {"determining": "( ( Const - FirstVNF_RAM ) + ( ( MRS / ACS ) / ( Const - MDR ) ) )", "choosing": "( ( ( MUM - MUM ) + ( DS / RCSe ) ) / Min( MLU ,CS ) )", "obj1": 0.9625984251968503, "obj2": 0.030510786820124366}, {"determining": "( Min( Const ,FirstVNF_RAM ) + ( ( RRS * DDR ) / ( Const - MDR ) ) )", "choosing": "( ( ( MUM - MUM ) + ( DS / RCSe ) ) / Min( MUR ,( MUR * ( MUC * CS ) ) ) )", "obj1": 0.9625984251968503, "obj2": 0.030510786820124366}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( Const - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( DS,MUR ) ,MLU ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.10433070866141732, "obj2": 0.8254385202663036}, {"determining": "Max( ( PN * FirstVNF_RAM ),Max( MRS,Max( CRS,( Const + DDR ) ) ) )", "choosing": "( ( ( MUM - MUM ) + ( DS / ( RCSe + RRSe ) ) ) / ( MLU / CS ) )", "obj1": 0.3700787401574803, "obj2": 0.5208042383431979}], "3": [{"determining": "Min( ( RRS - DDR ) ,Min( FirstVNF_RAM_Server ,AMS ) )", "choosing": "( ( MLU + ( RCSe + MUM ) ) / ( CS * ( RCSe - ( RRSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,CRS ) ,Max( ARS,FirstVNF_CPU_Server ) )", "choosing": "( ( DS * MUC ) - ( CS / DS ) )", "obj1": 0.4330708661417323, "obj2": 0.4633440339544968}, {"determining": "Max( ( FirstVNF_Mem_Server * Min( DDR ,PN ) ),( CRS / ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) )", "choosing": "Max( Max( Min( RCSe ,MLU ),( Min( MUR ,( MUC / CS ) ) / DS ) ),Max( Min( MUC ,MUR ),Max( RCSe,MLU ) ) )", "obj1": 0.09448818897637795, "obj2": 0.8662965307731502}, {"determining": "Max( ( Const - PN ),Max( ( ( BR / FirstVNF_RAM ) - ( Const * ( ( FirstVNF_CPU_Server + ACS ) / FirstVNF_Mem ) ) ),BR ) )", "choosing": "( ( MLU / CS ) * ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) )", "obj1": 0.234251968503937, "obj2": 0.6182571273735992}, {"determining": "( ( FirstVNF_CPU_Server + AMS ) - ( Min( ( FirstVNF_Mem_Server / DDR ) ,( ( CRS + Min( FirstVNF_CPU ,Const ) ) - ( FirstVNF_CPU_Server / AMS ) ) ) - DDR ) )", "choosing": "( ( ( ( DS + RMSe ) * Max( Min( ( DS - MUM ) ,( ( ( RMSe * RRSe ) / RRSe ) + ( ( CS * MUC ) + Max( MUM,MUC ) ) ) ),DS ) ) + ( ( MUC + RMSe ) - ( CS * CS ) ) ) / Max( ( MUM - RRSe ),( ( MUC * MUM ) + ( DS + MUC ) ) ) )", "obj1": 0.2421259842519685, "obj2": 0.6181858933088605}, {"determining": "( ( ( CRS - FirstVNF_Mem ) * CRS ) - ( ( MDR - Const ) - Const ) )", "choosing": "( Min( ( DS / MLU ) ,( MUC * RMSe ) ) * ( Min( CS ,DS ) - ( CS * MLU ) ) )", "obj1": 0.36023622047244097, "obj2": 0.5272763514704734}, {"determining": "( Max( Min( ACS ,FirstVNF_RAM ),AMS ) * Min( ( Max( FirstVNF_Mem_Server,Const ) + FirstVNF_CPU ) ,( MDR - CRS ) ) )", "choosing": "( ( ( RMSe - CS ) / ( RRSe / RMSe ) ) * RMSe )", "obj1": 0.3031496062992126, "obj2": 0.5776000731909737}, {"determining": "( ( FirstVNF_RAM / MDR ) - ( ACS + RRS ) )", "choosing": "( ( RRSe - ( ( ( MLU * MLU ) * Min( RMSe ,RCSe ) ) - Min( ( MLU - CS ) ,( DS / MLU ) ) ) ) / ( RCSe * RMSe ) )", "obj1": 0.3110236220472441, "obj2": 0.5500857971336799}, {"determining": "Min( ( ACS + AMS ) ,Max( ARS,FirstVNF_CPU_Server ) )", "choosing": "( ( DS * MUC ) - ( CS / ( ( MUM + RRSe ) + ( RRSe * MUM ) ) ) )", "obj1": 0.3799212598425197, "obj2": 0.5148643911047905}, {"determining": "( ( ACS + AMS ) - Min( Min( ( ARS / BR ) ,CRS ) ,Max( ARS,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( ( DS + RMSe ) * Max( MLU,DS ) ),( Max( MUC,RMSe ) - ( CS * CS ) ) ) / Max( ( ( MUM + RRSe ) + ( RRSe * ( ( CS / DS ) - ( DS * ( RRSe + RRSe ) ) ) ) ),( ( MUC * MUM ) + ( MUC + DS ) ) ) )", "obj1": 0.2421259842519685, "obj2": 0.6181858933088605}, {"determining": "Min( Max( ARS,FirstVNF_CPU_Server ) ,( ( MDR / ( FirstVNF_RAM_Server - AMS ) ) * CRS ) )", "choosing": "( ( DS * ( ( Min( ( MUC + RCSe ) ,RRSe ) / RMSe ) - Max( MUR,Max( RRSe,( MUC / DS ) ) ) ) ) - ( CS / DS ) )", "obj1": 0.4330708661417323, "obj2": 0.4633440339544968}, {"determining": "Min( Min( ACS ,CRS ) ,Max( ARS,( RRS + MRS ) ) )", "choosing": "( RRSe - ( CS / DS ) )", "obj1": 0.4094488188976378, "obj2": 0.4760199870674658}, {"determining": "Min( Max( ARS,FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server - FirstVNF_RAM ) )", "choosing": "( Max( DS,MUC ) - ( DS / ( MUR + MUC ) ) )", "obj1": 0.4330708661417323, "obj2": 0.4633440339544968}, {"determining": "Max( Min( Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,( PN / ( MDR - Const ) ) ) ,( Min( RRS ,CRS ) * ( ARS - MDR ) ) ),Min( ( ( AMS * MDR ) * ( ACS * ACS ) ) ,( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * ( ( ( Const - Const ) - Const ) + MDR ) ) ) )", "choosing": "( ( ( CS / RCSe ) + ( MUR * ( Min( ( DS / MLU ) ,( MUC * ( ( DS + MLU ) / DS ) ) ) * RMSe ) ) ) / Min( ( MUM + MUM ) ,DS ) )", "obj1": 0.12992125984251968, "obj2": 0.7911201448876596}, {"determining": "( ( AMS + FirstVNF_Mem ) + ( RRS - DDR ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( MUR,RMSe ) ) ) / Min( ( MUM + MUM ) ,DS ) )", "obj1": 0.13385826771653545, "obj2": 0.7901854471358855}, {"determining": "Max( ( Min( ( FirstVNF_CPU - FirstVNF_Mem_Server ) ,PN ) * AMS ),( CRS / ( MRS + FirstVNF_RAM_Server ) ) )", "choosing": "Max( Max( ( RRSe - Max( MLU,Max( MUR,RRSe ) ) ),Min( Max( ( MUC + ( MUM * ( MUR - MUM ) ) ),( CS / Min( CS ,DS ) ) ) ,RCSe ) ),Min( MLU ,CS ) )", "obj1": 0.09448818897637795, "obj2": 0.8662965307731502}, {"determining": "Max( ( ( CRS / ( FirstVNF_Mem_Server * ( AMS * ARS ) ) ) / CRS ),( RRS + CRS ) )", "choosing": "( Max( MLU,CS ) - Max( ( Min( RMSe ,( RCSe / MUM ) ) + ( RCSe - MUR ) ),MUR ) )", "obj1": 0.14566929133858267, "obj2": 0.754991873079845}, {"determining": "( ( ( ( AMS - FirstVNF_Mem ) * ( FirstVNF_Mem_Server - MRS ) ) / Max( Max( MDR,FirstVNF_RAM ),( FirstVNF_Mem_Server + BR ) ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + Min( MUC ,DS ) ),RRSe ) / ( MUC + Min( MUC ,DS ) ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "Max( ( ( ( Min( FirstVNF_RAM_Server ,Const ) / FirstVNF_RAM_Server ) * ( AMS + FirstVNF_CPU ) ) - ( ( FirstVNF_RAM_Server * CRS ) * Max( MDR,FirstVNF_Mem ) ) ),( Min( ( RRS - FirstVNF_Mem_Server ) ,( PN * AMS ) ) / Max( Min( ARS ,FirstVNF_CPU ),( FirstVNF_Mem_Server + MRS ) ) ) )", "choosing": "( ( ( ( MUR * MUC ) / ( MUR + MLU ) ) * ( ( RRSe * MLU ) / ( Min( ( Min( ( MLU * RRSe ) ,MUR ) / MLU ) ,DS ) - ( MUR + DS ) ) ) ) - Min( ( ( RMSe + MUM ) + ( DS - MUC ) ) ,Max( ( RRSe - MUM ),Max( CS,MUR ) ) ) )", "obj1": 0.18503937007874016, "obj2": 0.6977055645302325}, {"determining": "( Max( Max( BR,ACS ),( MDR / MRS ) ) + ( ( Max( Min( ACS ,BR ),( MDR + FirstVNF_RAM ) ) * Min( Max( BR,PN ) ,( ACS * FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_CPU - CRS ) * ( FirstVNF_RAM_Server * AMS ) ) - Min( ( RRS - MRS ) ,( Const - MRS ) ) ) ) )", "choosing": "Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.20669291338582677, "obj2": 0.6770275769405837}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( Min( ( RRS + ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ,Const ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( DS,MUR ) ,( ( ( RCSe - RMSe ) + Max( ( ( RCSe / RMSe ) * CS ),( MUC * MUM ) ) ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.10236220472440945, "obj2": 0.8294456479889214}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( Min( ( RRS + ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ,Const ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( DS,MUR ) ,( ( ( RCSe - RMSe ) + Max( ( ( RCSe / RMSe ) * CS ),( MUC * MUM ) ) ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.10236220472440945, "obj2": 0.8294456479889214}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( Min( ( RRS + ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ,Const ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( DS,MUR ) ,( ( ( RCSe - RMSe ) + Max( ( ( RCSe / RMSe ) * CS ),( MUC * MUM ) ) ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.10236220472440945, "obj2": 0.8294456479889214}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( DS,MUR ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.10236220472440945, "obj2": 0.8294456479889214}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( Const - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( DS,MUR ) ,MLU ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.10433070866141732, "obj2": 0.8254385202663036}, {"determining": "Max( ( PN * FirstVNF_RAM ),Max( MRS,Max( CRS,( Const + DDR ) ) ) )", "choosing": "( ( ( MUM - MUM ) + ( DS / ( RCSe + RRSe ) ) ) / ( MLU / CS ) )", "obj1": 0.3700787401574803, "obj2": 0.5208042383431979}, {"determining": "Min( Min( ACS ,CRS ) ,Max( ARS,( RRS + MRS ) ) )", "choosing": "( RRSe - ( CS / DS ) )", "obj1": 0.4094488188976378, "obj2": 0.4760199870674658}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( Const - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MUC ) - ( CS / DS ) )", "obj1": 0.4330708661417323, "obj2": 0.4633440339544968}, {"determining": "Min( ( CRS * BR ) ,Min( ( BR + FirstVNF_RAM_Server ) ,CRS ) )", "choosing": "( ( RMSe + ( MUR / ( Max( MLU,Min( DS ,MUC ) ) + RMSe ) ) ) / Min( Min( CS ,DS ) ,( DS * ( RCSe - MLU ) ) ) )", "obj1": 0.10433070866141732, "obj2": 0.8254385202663036}, {"determining": "Max( Max( Const,( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ),( CRS - FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR - RRSe ) / ( Min( ( CS * MLU ) ,DS ) - RCSe ) ) / DS ) - ( CS * MLU ) )", "obj1": 0.24803149606299213, "obj2": 0.6137029829975535}, {"determining": "( ( ACS + AMS ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) )", "choosing": "( ( DS * MUC ) - ( CS / DS ) )", "obj1": 0.4330708661417323, "obj2": 0.4633440339544968}, {"determining": "Max( Max( Const,( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ),( CRS - FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR - RRSe ) / ( Min( ( CS * MLU ) ,DS ) - RCSe ) ) / DS ) - ( CS * MLU ) )", "obj1": 0.24803149606299213, "obj2": 0.6137029829975535}, {"determining": "Max( Min( ACS ,( ( CRS * PN ) * Min( ( ( ACS * FirstVNF_CPU ) * BR ) ,BR ) ) ),( FirstVNF_Mem - ACS ) )", "choosing": "( ( DS / ( ( Min( ( CS * ( DS * ( RCSe + CS ) ) ) ,DS ) / MUM ) / ( MUR - RRSe ) ) ) - ( ( MUM * RRSe ) / CS ) )", "obj1": 0.2755905511811024, "obj2": 0.5865393006746252}, {"determining": "Max( Min( ACS ,( ( CRS * PN ) * Min( ( ( ACS * FirstVNF_CPU ) * BR ) ,BR ) ) ),( FirstVNF_Mem - ACS ) )", "choosing": "( ( DS / ( ( Min( ( CS * ( DS * ( RCSe + CS ) ) ) ,DS ) / MUM ) / ( MUR - RRSe ) ) ) - ( ( MUM * RRSe ) / CS ) )", "obj1": 0.2755905511811024, "obj2": 0.5865393006746252}, {"determining": "Max( Min( ACS ,( ( CRS * PN ) * Min( ( ( ACS * FirstVNF_CPU ) * BR ) ,BR ) ) ),( FirstVNF_Mem - ACS ) )", "choosing": "( ( DS / ( ( Min( ( CS * ( DS * ( RCSe + CS ) ) ) ,DS ) / MUM ) / ( MUR - RRSe ) ) ) - ( ( MUM * RRSe ) / CS ) )", "obj1": 0.2755905511811024, "obj2": 0.5865393006746252}, {"determining": "Max( Min( ACS ,( ( CRS * PN ) * PN ) ),( CRS - FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR - RRSe ) / ( Min( ( CS / ( DS * Max( DS,MUC ) ) ) ,DS ) / RCSe ) ) / DS ) - ( CS * MLU ) )", "obj1": 0.2755905511811024, "obj2": 0.5865393006746252}, {"determining": "( ( ACS + AMS ) - AMS )", "choosing": "( Max( ( Max( ( ( DS + RMSe ) * Max( MLU,DS ) ),( ( MUC + MUC ) - ( CS * CS ) ) ) / Max( ( ( MUM + RRSe ) + ( RRSe * MUM ) ),( ( MUC * MUM ) + ( MUC + DS ) ) ) ),( ( MUC + RMSe ) - ( CS * CS ) ) ) / Max( ( ( MUM + RRSe ) + ( RRSe * MUM ) ),( ( MUC * MUM ) + ( MUC + DS ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6160804855034928}, {"determining": "( ( ACS + AMS ) - Min( ( ACS * ( ( FirstVNF_Mem_Server / DDR ) - Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Const ) ) ) ,Max( FirstVNF_CPU_Server,ARS ) ) )", "choosing": "( Max( ( Min( DS ,RMSe ) * Max( DS,MLU ) ),( MUC * DS ) ) / Max( ( ( MUM + RRSe ) + ( RRSe * ( ( DS * MUC ) - ( CS / DS ) ) ) ),( ( MUC * MUM ) + ( MUC + DS ) ) ) )", "obj1": 0.2421259842519685, "obj2": 0.6181858933088605}, {"determining": "( ( ACS + ( MDR + FirstVNF_CPU_Server ) ) - ( FirstVNF_RAM * DDR ) )", "choosing": "( Max( ( RRSe + RRSe ),( RMSe * CS ) ) / Max( ( ( DS + RMSe ) * Max( ( MUR / ( ( ( MUR + CS ) - MUM ) / ( MUM / ( MUM - CS ) ) ) ),DS ) ),Max( ( MUC + RMSe ),( CS * CS ) ) ) )", "obj1": 0.28346456692913385, "obj2": 0.5790389635250217}, {"determining": "( ( ( FirstVNF_Mem + MRS ) / FirstVNF_RAM ) - Max( ( FirstVNF_RAM * FirstVNF_RAM ),Min( MRS ,PN ) ) )", "choosing": "( ( Max( MUC,RCSe ) / ( RRSe + MLU ) ) / ( ( RRSe - MUR ) / Min( CS ,MUC ) ) )", "obj1": 0.4763779527559055, "obj2": 0.44158778397068593}, {"determining": "( ( ( FirstVNF_Mem + MRS ) / ( BR + FirstVNF_CPU_Server ) ) - Max( ( FirstVNF_RAM * FirstVNF_RAM ),Min( MRS ,PN ) ) )", "choosing": "( ( Max( MUC,RCSe ) / ( MLU + MLU ) ) / ( ( RRSe - MUR ) / Min( CS ,MUC ) ) )", "obj1": 0.48031496062992124, "obj2": 0.43758675572607647}, {"determining": "Min( Min( ACS ,CRS ) ,Max( ARS,FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( DS + RMSe ) * Max( MLU,DS ) ),( ( MUC + RMSe ) - ( CS * CS ) ) ) / Max( ( ( MUC + RMSe ) * ( RMSe - RMSe ) ),( ( MUC * MUM ) + ( MUC + DS ) ) ) )", "obj1": 0.2421259842519685, "obj2": 0.6181858933088605}, {"determining": "( ( ACS + AMS ) - ( Min( BR ,Const ) - DDR ) )", "choosing": "( ( DS * MUC ) - ( CS / DS ) )", "obj1": 0.4330708661417323, "obj2": 0.4633440339544968}, {"determining": "( ( FirstVNF_CPU_Server + AMS ) - ( Min( ( FirstVNF_Mem_Server / DDR ) ,( ( CRS + Min( FirstVNF_CPU ,Const ) ) - ( FirstVNF_CPU_Server / AMS ) ) ) - DDR ) )", "choosing": "( ( ( ( DS + RMSe ) * Max( Min( ( DS - MUM ) ,( ( ( RMSe * RRSe ) / RRSe ) + ( ( CS * MUC ) + Max( MUM,MUC ) ) ) ),DS ) ) + ( ( MUC + RMSe ) - ( CS * CS ) ) ) / Max( ( MUM - RRSe ),( ( MUC * MUM ) + ( DS + MUC ) ) ) )", "obj1": 0.33267716535433073, "obj2": 0.5328640703020475}, {"determining": "( ( FirstVNF_CPU_Server + AMS ) - ( Min( ( FirstVNF_Mem_Server / DDR ) ,( ( CRS + Min( FirstVNF_CPU ,Const ) ) - ( FirstVNF_CPU_Server / AMS ) ) ) - DDR ) )", "choosing": "( ( ( ( DS + RMSe ) * Max( Min( ( DS - MUM ) ,( ( ( RMSe * RRSe ) / RRSe ) + ( ( CS * MUC ) + Max( MUM,MUC ) ) ) ),DS ) ) + ( ( MUC + RMSe ) - ( CS * CS ) ) ) / Max( ( MUM - RRSe ),( ( MUC * MUM ) + ( DS + MUC ) ) ) )", "obj1": 0.33267716535433073, "obj2": 0.5328640703020475}, {"determining": "( ( FirstVNF_CPU_Server + AMS ) - ( Min( ( FirstVNF_Mem_Server / DDR ) ,( ( CRS + Min( FirstVNF_CPU ,Const ) ) - ( FirstVNF_CPU_Server / AMS ) ) ) - DDR ) )", "choosing": "( ( ( ( DS + RMSe ) * Max( Min( ( DS - MUM ) ,( ( ( RMSe * RRSe ) / RRSe ) + ( ( CS * MUC ) + Max( MUM,MUC ) ) ) ),DS ) ) + ( ( MUC + RMSe ) - ( CS * CS ) ) ) / Max( ( MUM - RRSe ),( ( MUC * MUM ) + ( DS + MUC ) ) ) )", "obj1": 0.33267716535433073, "obj2": 0.5328640703020475}, {"determining": "( ( FirstVNF_CPU_Server + AMS ) - ( Min( ( FirstVNF_Mem_Server / DDR ) ,Const ) - DDR ) )", "choosing": "( ( ( ( DS + RMSe ) * Max( Min( ( DS - MUM ) ,( ( ( RMSe * RRSe ) / RRSe ) + ( ( CS * MUC ) + Max( MUM,MUC ) ) ) ),DS ) ) + ( ( MUC + RMSe ) - ( CS * CS ) ) ) / Max( ( ( MUC + RMSe ) * ( RMSe - RMSe ) ),( ( MUC * MUM ) + ( MUC + DS ) ) ) )", "obj1": 0.33267716535433073, "obj2": 0.5328640703020475}, {"determining": "( ( ( ( AMS - FirstVNF_Mem ) * ( FirstVNF_Mem_Server - MRS ) ) / Max( Max( MDR,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + BR ) ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) - ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server + BR ) ) ) )", "choosing": "( Max( RRSe,( MUC + Min( MUC ,DS ) ) ) / ( MLU + Min( MUC ,( ( RMSe / DS ) - ( MUR / Max( MUR,DS ) ) ) ) ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( DS,MUR ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.10236220472440945, "obj2": 0.8294456479889214}, {"determining": "( ( PN + AMS ) * ( BR / FirstVNF_Mem ) )", "choosing": "( ( DS * ( Max( ( ( DS + RMSe ) * Max( MLU,DS ) ),( ( MUC + RMSe ) - ( CS * CS ) ) ) / Max( ( ( MUM + RRSe ) + ( RRSe * ( ( DS * MUC ) - ( CS / DS ) ) ) ),( ( MUC * MUM ) + ( MUC + DS ) ) ) ) ) - CS )", "obj1": 0.30708661417322836, "obj2": 0.5510930034066386}, {"determining": "( ( PN + ARS ) * ( BR / FirstVNF_Mem ) )", "choosing": "( Max( ( ( DS + RMSe ) * Max( MLU,DS ) ),( ( MUC + RMSe ) - ( CS * CS ) ) ) / Max( ( ( MUM + RRSe ) + ( RRSe * ( ( DS * MUC ) - ( CS / DS ) ) ) ),( ( MUC * MUM ) + ( MUC + DS ) ) ) )", "obj1": 0.2421259842519685, "obj2": 0.6181858933088605}, {"determining": "( ( PN * ARS ) * ( Max( FirstVNF_CPU_Server,ARS ) - FirstVNF_RAM ) )", "choosing": "( ( DS * MUM ) - ( ( RRSe / ( MUR + RMSe ) ) / DS ) )", "obj1": 0.4645669291338583, "obj2": 0.44444003309980057}, {"determining": "( ( PN * ARS ) * ( Max( FirstVNF_CPU_Server,ARS ) - FirstVNF_RAM ) )", "choosing": "( ( DS * MUM ) - ( ( RRSe / ( MUR + RMSe ) ) / DS ) )", "obj1": 0.4645669291338583, "obj2": 0.44444003309980057}, {"determining": "( ( PN * ARS ) * ( Max( FirstVNF_CPU_Server,ARS ) - FirstVNF_RAM ) )", "choosing": "( ( DS * MUM ) - ( ( RRSe / ( MUR + RMSe ) ) / DS ) )", "obj1": 0.4645669291338583, "obj2": 0.44444003309980057}, {"determining": "( ( PN * ARS ) * ( Max( FirstVNF_CPU_Server,ARS ) - FirstVNF_RAM ) )", "choosing": "( ( DS * MUM ) - ( ( RRSe / ( MUR + RMSe ) ) / DS ) )", "obj1": 0.4645669291338583, "obj2": 0.44444003309980057}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( ( ( CRS * PN ) * PN ) - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( DS,MUR ) ,( ( ( MUC - ( CS / ( DS * Max( DS,MUC ) ) ) ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.38779527559055116, "obj2": 0.5023790680020663}, {"determining": "Max( Min( ( DDR - CRS ) ,AMS ),( Min( FirstVNF_RAM_Server ,( DDR / ( ( FirstVNF_RAM_Server * Max( Min( BR ,FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) ) + Max( Min( FirstVNF_RAM_Server ,( ACS - FirstVNF_RAM ) ),Min( ARS ,RRS ) ) ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( ( CS / ( MUC * DS ) ) ,DS ) / RCSe ) / ( MUR - RRSe ) ) / ( MUM + Max( ( RRSe + CS ),DS ) ) ) - ( CS * MLU ) )", "obj1": 0.2559055118110236, "obj2": 0.5959279318728518}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUR - RRSe ) / ( Min( ( CS / ( DS * Max( DS,MUC ) ) ) ,DS ) / RCSe ) ) / DS ) - ( CS * MLU ) )", "obj1": 0.25, "obj2": 0.609702496736688}, {"determining": "Max( ( Min( ( RRS - FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM_Server ,PN ) ) / Max( Min( Min( Max( FirstVNF_CPU_Server,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ,( FirstVNF_CPU * ACS ) ) ,FirstVNF_CPU ),( ARS + MRS ) ) ),( ( Min( ( PN + ( Max( DDR,AMS ) * ( ( ARS / PN ) + FirstVNF_Mem ) ) ) ,( Min( ( MDR - FirstVNF_CPU ) ,FirstVNF_CPU_Server ) + PN ) ) - FirstVNF_RAM ) * ( BR - PN ) ) )", "choosing": "( ( ( ( MLU * RRSe ) * ( MUC + MUC ) ) * ( ( MUM * DS ) + ( ( ( RCSe * ( MLU / RRSe ) ) * Min( DS ,( RRSe - RMSe ) ) ) * ( MLU - ( ( MUC * ( RRSe - MUM ) ) / RRSe ) ) ) ) ) - Max( MUC,RCSe ) )", "obj1": 0.19488188976377951, "obj2": 0.6914581489484503}, {"determining": "Max( ( ( ( Min( FirstVNF_RAM_Server ,Const ) / FirstVNF_RAM_Server ) * ( AMS + FirstVNF_CPU ) ) - ( ( FirstVNF_RAM_Server * CRS ) * Max( MDR,FirstVNF_Mem ) ) ),( Min( ( RRS - FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM_Server ,PN ) ) / Max( Min( ARS ,FirstVNF_CPU ),( FirstVNF_Mem_Server + MRS ) ) ) )", "choosing": "( ( ( ( MUR * MUC ) / ( MUR + MLU ) ) * ( ( MLU * RRSe ) / ( MUC + MUC ) ) ) - Min( ( ( RMSe + MUM ) + ( DS - MUC ) ) ,Max( ( RRSe - MUM ),Max( CS,MUR ) ) ) )", "obj1": 0.18503937007874016, "obj2": 0.6977055645302325}, {"determining": "Max( ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) / FirstVNF_RAM ),( ( RRS * ( CRS / MDR ) ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( MUC ,MUM ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8785165234946758}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( DS,MUR ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.10236220472440945, "obj2": 0.8294456479889214}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( RRS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( DS,MUR ) ,( ( ( Max( ( MUR * MLU ),( MUM + RRSe ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.10039370078740158, "obj2": 0.8297989177046731}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( DS,MUR ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.10236220472440945, "obj2": 0.8294456479889214}, {"determining": "Min( Max( ( Const / FirstVNF_Mem_Server ),Min( AMS ,FirstVNF_CPU_Server ) ) ,Max( ARS,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( ( MUR / MUC ),Min( RMSe ,CS ) ),Min( Max( CS,CS ) ,Max( MUR,RCSe ) ) ) - ( CS / DS ) )", "obj1": 0.41929133858267714, "obj2": 0.47078415333206025}, {"determining": "Max( ( Const / FirstVNF_Mem_Server ),Min( AMS ,FirstVNF_CPU_Server ) )", "choosing": "( ( DS * MUC ) - ( CS / DS ) )", "obj1": 0.4074803149606299, "obj2": 0.4836405034898849}, {"determining": "Max( Min( Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,( PN / Min( FirstVNF_Mem_Server ,MRS ) ) ) ,( Min( RRS ,CRS ) * ( MDR - ARS ) ) ),Min( ( ( AMS * MDR ) * ( FirstVNF_CPU * ACS ) ) ,( Min( RRS ,( PN / RRS ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( Max( Min( ( RMSe * Min( MUM ,CS ) ) ,Min( MUR ,Min( RMSe ,RMSe ) ) ),( Max( ( CS - MUM ),RRSe ) / RCSe ) ) - CS ) * RMSe ) / MUR ) / Min( ( MUM + MUM ) ,DS ) )", "obj1": 0.21653543307086615, "obj2": 0.6384429953523763}, {"determining": "Max( Min( Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,( PN / FirstVNF_RAM_Server ) ) ,( Min( RRS ,CRS ) * ( MDR - ARS ) ) ),Min( ( ( AMS * MDR ) * ( ACS * ACS ) ) ,( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * ( ( ( MDR - ( MRS / ACS ) ) - Const ) + MDR ) ) ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( ( MUM - MUM ) / MLU ) ,( MUC * RMSe ) ),RMSe ) ) ) / Min( ( MUM + MUM ) ,DS ) )", "obj1": 0.12992125984251968, "obj2": 0.7911201448876596}, {"determining": "Max( Min( Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,( PN / FirstVNF_RAM_Server ) ) ,( Min( RRS ,CRS ) * ( MDR - ARS ) ) ),Min( ( ( AMS * MDR ) * ( ACS * ACS ) ) ,( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * ( ( ( MDR - Const ) - Const ) + MDR ) ) ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),RMSe ) ) ) / Min( ( MUM + MUM ) ,DS ) )", "obj1": 0.12598425196850394, "obj2": 0.7913590933290028}, {"determining": "Max( Min( Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,( PN / FirstVNF_RAM_Server ) ) ,( Min( RRS ,CRS ) * ( MDR - ARS ) ) ),Min( ( PN / RRS ) ,( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * ( ( ( MDR - Const ) - Const ) + MDR ) ) ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),RMSe ) ) ) / Min( CS ,DS ) )", "obj1": 0.12992125984251968, "obj2": 0.7911201448876596}, {"determining": "Max( Min( Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,( PN / FirstVNF_RAM_Server ) ) ,( Min( RRS ,CRS ) * ( MDR - ARS ) ) ),Min( ( ( AMS * MDR ) * ( ACS * ACS ) ) ,( Min( RRS ,( PN / RRS ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),RMSe ) ) ) / Min( ( MUM + MUM ) ,DS ) )", "obj1": 0.12007874015748031, "obj2": 0.7947774878063568}, {"determining": "( ( PN / RRS ) + ( RRS - DDR ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( MUR,( ( MUR * MUC ) - MUM ) ) ) ) / Min( ( MUM + MUM ) ,DS ) )", "obj1": 0.14173228346456693, "obj2": 0.7886886995911392}, {"determining": "( ( MDR - ACS ) / ( ( ( Max( ( MRS * FirstVNF_CPU_Server ),( MDR - ( AMS + FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM_Server ) * ( FirstVNF_Mem + RRS ) ) / CRS ) )", "choosing": "( Min( RCSe ,( ( ( CS - MUC ) - MUM ) * CS ) ) - Max( RRSe,CS ) )", "obj1": 0.22440944881889763, "obj2": 0.6224125000713557}, {"determining": "( Max( Min( ACS ,FirstVNF_RAM ),AMS ) * Min( ( Max( FirstVNF_Mem_Server,Const ) + FirstVNF_CPU ) ,( MDR - CRS ) ) )", "choosing": "( ( ( RMSe - CS ) / ( RRSe / RMSe ) ) * RMSe )", "obj1": 0.3031496062992126, "obj2": 0.5776000731909737}, {"determining": "( Min( MDR ,( ( FirstVNF_CPU_Server * ( RRS * MDR ) ) + AMS ) ) * ( ( Max( ARS,FirstVNF_Mem ) / ( RRS / ( FirstVNF_CPU_Server / ARS ) ) ) / ARS ) )", "choosing": "Max( Min( MUM ,Max( MLU,RCSe ) ),( RRSe / Min( ( ( Max( RCSe,( ( MUR - MUC ) + CS ) ) * Min( ( ( RCSe * MUC ) - MUM ) ,( RMSe * DS ) ) ) / Max( ( MUR * RMSe ),MLU ) ) ,RMSe ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6931507238565344}, {"determining": "Min( Min( Max( Min( FirstVNF_Mem ,BR ),( AMS + FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM - Const ) * ( FirstVNF_CPU_Server + RRS ) ) ) ,( Min( ( DDR - CRS ) ,( FirstVNF_RAM_Server * CRS ) ) + ( Min( Const ,DDR ) * ( Const - RRS ) ) ) )", "choosing": "( Min( ( ( DS - RRSe ) / ( MLU - DS ) ) ,Max( ( MLU + MLU ),( DS / MUR ) ) ) + ( ( ( MLU + CS ) + Min( MUR ,MUC ) ) / Max( ( MUR + Max( DS,CS ) ),Max( RMSe,MUM ) ) ) )", "obj1": 0.2125984251968504, "obj2": 0.6613372712105986}, {"determining": "Min( Max( ( FirstVNF_CPU / ( RRS + FirstVNF_Mem_Server ) ),AMS ) ,Max( ARS,FirstVNF_CPU_Server ) )", "choosing": "( ( DS * MUC ) - ( CS / Min( ( Max( Max( MLU,( MUR + ( RCSe + RRSe ) ) ),MLU ) / ( RRSe + ( ( Min( RRSe ,MUR ) - ( MUR / MUC ) ) + Max( Min( MLU ,CS ),( MUC + MLU ) ) ) ) ) ,( ( ( CS - RRSe ) + MLU ) - Min( MUC ,CS ) ) ) ) )", "obj1": 0.4330708661417323, "obj2": 0.4633440339544968}, {"determining": "( ( FirstVNF_CPU_Server / AMS ) - ( Min( Const ,( AMS / ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) + RRS ) ) ) - ACS ) )", "choosing": "( ( ( ( DS + ( Min( Max( CS,( RMSe * MUR ) ) ,MLU ) - MUC ) ) * Max( Min( ( DS - MUM ) ,( ( MLU * ( CS + RMSe ) ) + ( ( CS * MUC ) + Max( RMSe,MUC ) ) ) ),DS ) ) + ( ( MUC + RMSe ) - ( CS * CS ) ) ) / Max( ( RRSe - CS ),DS ) )", "obj1": 0.33661417322834647, "obj2": 0.5274353591009502}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( DS,MUR ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.10236220472440945, "obj2": 0.8294456479889214}, {"determining": "( ( FirstVNF_CPU_Server + AMS ) - ( Min( ( FirstVNF_Mem_Server / DDR ) ,Const ) - DDR ) )", "choosing": "( ( ( ( DS + RMSe ) * Max( Min( ( DS - MUM ) ,( ( ( RMSe * RRSe ) / RRSe ) + ( ( CS * MUC ) + Max( MUM,MUC ) ) ) ),DS ) ) + ( ( MUC + RMSe ) - ( CS * CS ) ) ) / Max( ( ( MUC + RMSe ) * ( RMSe - RMSe ) ),( ( MUC * MUM ) + ( MUC + DS ) ) ) )", "obj1": 0.33267716535433073, "obj2": 0.5328640703020475}, {"determining": "Max( ( ( ( ( MRS * FirstVNF_Mem ) * FirstVNF_Mem ) / CRS ) / CRS ),( RRS + CRS ) )", "choosing": "( ( ( MUM / MUM ) / ( Min( MUM ,MUM ) + ( RRSe + RCSe ) ) ) - Max( RRSe,MUR ) )", "obj1": 0.1515748031496063, "obj2": 0.7452533103381737}, {"determining": "Max( ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) / CRS ) / CRS ),( RRS + CRS ) )", "choosing": "( Max( MLU,CS ) - Max( RRSe,MUR ) )", "obj1": 0.14566929133858267, "obj2": 0.754991873079845}, {"determining": "( ( FirstVNF_CPU_Server + AMS ) - ( Min( ( ( RRS + Const ) * ( PN / RRS ) ) ,Const ) - DDR ) )", "choosing": "( ( ( MUR * Max( Min( ( DS - MUM ) ,( ( ( RMSe * RRSe ) / RRSe ) + ( ( CS * MUC ) + Max( MUM,MUC ) ) ) ),DS ) ) + ( ( MUC + RMSe ) - ( CS * CS ) ) ) / Max( ( ( MUC + RMSe ) * ( RMSe - RMSe ) ),( ( MUC * MUM ) + ( MUC + DS ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.5495226519269462}, {"determining": "( Max( ( ARS + ( DDR / MDR ) ),( MDR / MRS ) ) + ( ( RRS + Const ) * ( PN / RRS ) ) )", "choosing": "Max( ( ( MUR * MUC ) - MUM ),( Min( RCSe ,CS ) / ( MUR - MUR ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6715201842962937}, {"determining": "( ( FirstVNF_CPU_Server + AMS ) - ( Min( ( FirstVNF_Mem_Server / DDR ) ,Const ) - DDR ) )", "choosing": "( ( ( ( DS + RMSe ) * Max( Min( ( DS - MUM ) ,( ( ( RMSe * RRSe ) / RRSe ) + ( ( CS * MUC ) + Max( MUM,MUC ) ) ) ),DS ) ) + ( ( MUC + RMSe ) - ( CS * CS ) ) ) / Max( ( ( MUC + RMSe ) * ( RMSe - RMSe ) ),( ( MUC * MUM ) + ( MUC + DS ) ) ) )", "obj1": 0.33070866141732286, "obj2": 0.5424222045573693}, {"determining": "Max( ( Const - PN ),Max( ( ( BR / FirstVNF_RAM ) - ( Const * ( Max( ( FirstVNF_Mem_Server / ( RRS * FirstVNF_CPU ) ),FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) ),BR ) )", "choosing": "( ( MLU / CS ) * ( ( ( MUC / MUM ) / ( ( ( MUR / MUC ) - MUM ) * ( CS - MUM ) ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6216884786248261}, {"determining": "Max( Min( ACS ,( ( CRS * PN ) * PN ) ),( CRS - FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR - RRSe ) / ( Min( ( CS / ( DS * Max( DS,MUC ) ) ) ,DS ) / RCSe ) ) / DS ) - ( CS * MLU ) )", "obj1": 0.2755905511811024, "obj2": 0.5865393006746252}, {"determining": "Min( DDR ,( ( Max( FirstVNF_CPU,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( FirstVNF_Mem * RRS ) ) ) )", "choosing": "( Min( DS ,MUM ) * RRSe )", "obj1": 0.3858267716535433, "obj2": 0.5147411145952203}, {"determining": "Max( ( FirstVNF_RAM / PN ),( Const / Min( PN ,Const ) ) )", "choosing": "( Min( ( MLU + CS ) ,Min( ( RRSe * CS ) ,DS ) ) / Min( Max( DS,MUR ) ,( ( ( MUC - MUC ) + RRSe ) + RCSe ) ) )", "obj1": 0.0984251968503937, "obj2": 0.830687276460355}, {"determining": "Max( Min( ACS ,( Min( Min( ( FirstVNF_Mem / FirstVNF_CPU_Server ) ,FirstVNF_CPU ) ,ACS ) * PN ) ),( CRS - BR ) )", "choosing": "( ( ( ( MUR - MUM ) / ( Min( Max( MUM,( Min( CS ,MLU ) + MLU ) ) ,DS ) / RCSe ) ) / DS ) - ( CS * MLU ) )", "obj1": 0.2736220472440945, "obj2": 0.5922047881347143}, {"determining": "( Min( Max( ( FirstVNF_RAM_Server * BR ),( RRS - AMS ) ) ,( ( AMS * Const ) + Min( FirstVNF_Mem ,BR ) ) ) + ( Max( Max( BR,FirstVNF_RAM ),( FirstVNF_Mem * FirstVNF_CPU ) ) + Min( Max( DDR,PN ) ,ACS ) ) )", "choosing": "( ( ( ( MUR - RRSe ) / ( Min( ( CS / ( DS * Max( DS,MUC ) ) ) ,DS ) / RCSe ) ) / DS ) - ( CS * MLU ) )", "obj1": 0.2755905511811024, "obj2": 0.5865393006746252}, {"determining": "( ( ACS + AMS ) - Min( Min( ( ARS / BR ) ,CRS ) ,Max( ARS,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( ( DS + RMSe ) * Max( MLU,DS ) ),( Max( MUC,RMSe ) - ( CS * CS ) ) ) / Max( ( ( MUM + RRSe ) + ( RRSe * ( ( CS / DS ) - ( DS * ( RRSe + RRSe ) ) ) ) ),( ( MUC * MUM ) + ( MUC + DS ) ) ) )", "obj1": 0.4035433070866142, "obj2": 0.49094683347860385}, {"determining": "( ( AMS / PN ) - ( Min( FirstVNF_Mem_Server ,RRS ) - Min( CRS ,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUC ,Min( MUC ,DS ) ) / Max( MUC,MUR ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "Max( Max( Const,( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ),( ( ( DDR * ( PN * RRS ) ) - MRS ) - FirstVNF_Mem ) )", "choosing": "( Min( ( DS / MLU ) ,( MUC * RMSe ) ) * ( Min( CS ,DS ) - ( CS * MLU ) ) )", "obj1": 0.15748031496062992, "obj2": 0.7450521505679848}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RCSe / CS ) + ( MUR * Max( MUR,RMSe ) ) ) / Min( ( MUM + MUM ) ,DS ) ) + Min( MUM ,MUC ) )", "obj1": 0.10826771653543307, "obj2": 0.8084533782969471}, {"determining": "( ( AMS + FirstVNF_Mem ) + ( DDR - DDR ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( ( ( Max( CS,RCSe ) - RRSe ) / RMSe ),RMSe ) ) ) / Min( ( MUM + MUM ) ,DS ) )", "obj1": 0.13582677165354332, "obj2": 0.7888738516548378}, {"determining": "( ( AMS + FirstVNF_Mem ) + ( RRS - DDR ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( MUR,RMSe ) ) ) / Min( ( MUM + MUM ) ,DS ) )", "obj1": 0.11614173228346457, "obj2": 0.8049950644677517}, {"determining": "( ( ACS + AMS ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) )", "choosing": "( ( CS / MUC ) - Min( MUM ,CS ) )", "obj1": 0.1968503937007874, "obj2": 0.6778622959272498}, {"determining": "( ( ACS + AMS ) - Min( Min( ( ARS / BR ) ,CRS ) ,Max( ARS,( ( ACS + AMS ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( DS + RMSe ) * Max( MLU,DS ) ),( Max( MUC,RMSe ) - ( CS * CS ) ) ) / Max( ( ( MUM + RRSe ) + ( RRSe * ( ( CS / DS ) - ( DS * ( MUC + RRSe ) ) ) ) ),( ( MUC * MUM ) + ( MUC + DS ) ) ) )", "obj1": 0.39173228346456695, "obj2": 0.49855619077478674}, {"determining": "( ( ( ( ( ( AMS - FirstVNF_Mem ) * ( FirstVNF_Mem_Server - MRS ) ) / Max( Max( MDR,FirstVNF_RAM ),( FirstVNF_Mem_Server + BR ) ) ) - ( ( Min( FirstVNF_Mem_Server ,RRS ) - ( CRS + FirstVNF_Mem_Server ) ) + ( ( FirstVNF_RAM / Const ) / ( PN + ACS ) ) ) ) * CRS ) - ( ( MDR - Const ) - Const ) )", "choosing": "( Min( ( DS / MLU ) ,( MUC * RMSe ) ) * ( Min( CS ,( Max( CS,RRSe ) / ( MUC + Min( MUC ,DS ) ) ) ) - ( CS * MLU ) ) )", "obj1": 0.4822834645669291, "obj2": 0.37906501447862984}], "4": [{"determining": "Min( ( RRS - DDR ) ,Min( FirstVNF_RAM_Server ,AMS ) )", "choosing": "( ( MLU + ( RCSe + MUM ) ) / ( CS * ( RCSe - ( RRSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Const - PN ),Max( ( ( BR / FirstVNF_RAM ) - ( Const * ( ( FirstVNF_CPU_Server + ACS ) / FirstVNF_Mem ) ) ),BR ) )", "choosing": "( ( MLU / CS ) * ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) )", "obj1": 0.234251968503937, "obj2": 0.6182571273735992}, {"determining": "Max( ( ( CRS / ( FirstVNF_Mem_Server * ( AMS * ARS ) ) ) / CRS ),( RRS + CRS ) )", "choosing": "( Max( MLU,CS ) - Max( ( Min( RMSe ,( RCSe / MUM ) ) + ( RCSe - MUR ) ),MUR ) )", "obj1": 0.14566929133858267, "obj2": 0.754991873079845}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( Min( ( RRS + ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ,Const ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( DS,MUR ) ,( ( ( RCSe - RMSe ) + Max( ( ( RCSe / RMSe ) * CS ),( MUC * MUM ) ) ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.10236220472440945, "obj2": 0.8294456479889214}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( Min( ( RRS + ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ,Const ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( DS,MUR ) ,( ( ( RCSe - RMSe ) + Max( ( ( RCSe / RMSe ) * CS ),( MUC * MUM ) ) ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.10236220472440945, "obj2": 0.8294456479889214}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( Min( ( RRS + ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ,Const ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( DS,MUR ) ,( ( ( RCSe - RMSe ) + Max( ( ( RCSe / RMSe ) * CS ),( MUC * MUM ) ) ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.10236220472440945, "obj2": 0.8294456479889214}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( DS,MUR ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.10236220472440945, "obj2": 0.8294456479889214}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( Const - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( DS,MUR ) ,MLU ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.10433070866141732, "obj2": 0.8254385202663036}, {"determining": "Min( ( CRS * BR ) ,Min( ( BR + FirstVNF_RAM_Server ) ,CRS ) )", "choosing": "( ( RMSe + ( MUR / ( Max( MLU,Min( DS ,MUC ) ) + RMSe ) ) ) / Min( Min( CS ,DS ) ,( DS * ( RCSe - MLU ) ) ) )", "obj1": 0.10433070866141732, "obj2": 0.8254385202663036}, {"determining": "Max( Min( ACS ,( ( CRS * PN ) * Min( ( ( ACS * FirstVNF_CPU ) * BR ) ,BR ) ) ),( FirstVNF_Mem - ACS ) )", "choosing": "( ( DS / ( ( Min( ( CS * ( DS * ( RCSe + CS ) ) ) ,DS ) / MUM ) / ( MUR - RRSe ) ) ) - ( ( MUM * RRSe ) / CS ) )", "obj1": 0.2755905511811024, "obj2": 0.5865393006746252}, {"determining": "Max( Min( ACS ,( ( CRS * PN ) * Min( ( ( ACS * FirstVNF_CPU ) * BR ) ,BR ) ) ),( FirstVNF_Mem - ACS ) )", "choosing": "( ( DS / ( ( Min( ( CS * ( DS * ( RCSe + CS ) ) ) ,DS ) / MUM ) / ( MUR - RRSe ) ) ) - ( ( MUM * RRSe ) / CS ) )", "obj1": 0.2755905511811024, "obj2": 0.5865393006746252}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( DS,MUR ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.10236220472440945, "obj2": 0.8294456479889214}, {"determining": "Max( Min( ( DDR - CRS ) ,AMS ),( Min( FirstVNF_RAM_Server ,( DDR / ( ( FirstVNF_RAM_Server * Max( Min( BR ,FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) ) + Max( Min( FirstVNF_RAM_Server ,( ACS - FirstVNF_RAM ) ),Min( ARS ,RRS ) ) ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( ( CS / ( MUC * DS ) ) ,DS ) / RCSe ) / ( MUR - RRSe ) ) / ( MUM + Max( ( RRSe + CS ),DS ) ) ) - ( CS * MLU ) )", "obj1": 0.2559055118110236, "obj2": 0.5959279318728518}, {"determining": "Max( ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) / FirstVNF_RAM ),( ( RRS * ( CRS / MDR ) ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( MUC ,MUM ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8785165234946758}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( DS,MUR ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.10236220472440945, "obj2": 0.8294456479889214}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( RRS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( DS,MUR ) ,( ( ( Max( ( MUR * MLU ),( MUM + RRSe ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.10039370078740158, "obj2": 0.8297989177046731}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( DS,MUR ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.10236220472440945, "obj2": 0.8294456479889214}, {"determining": "Max( Min( Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,( PN / Min( FirstVNF_Mem_Server ,MRS ) ) ) ,( Min( RRS ,CRS ) * ( MDR - ARS ) ) ),Min( ( ( AMS * MDR ) * ( FirstVNF_CPU * ACS ) ) ,( Min( RRS ,( PN / RRS ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( Max( Min( ( RMSe * Min( MUM ,CS ) ) ,Min( MUR ,Min( RMSe ,RMSe ) ) ),( Max( ( CS - MUM ),RRSe ) / RCSe ) ) - CS ) * RMSe ) / MUR ) / Min( ( MUM + MUM ) ,DS ) )", "obj1": 0.21653543307086615, "obj2": 0.6384429953523763}, {"determining": "Max( Min( Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,( PN / FirstVNF_RAM_Server ) ) ,( Min( RRS ,CRS ) * ( MDR - ARS ) ) ),Min( ( ( AMS * MDR ) * ( ACS * ACS ) ) ,( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * ( ( ( MDR - Const ) - Const ) + MDR ) ) ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),RMSe ) ) ) / Min( ( MUM + MUM ) ,DS ) )", "obj1": 0.12598425196850394, "obj2": 0.7913590933290028}, {"determining": "( ( MDR - ACS ) / ( ( ( Max( ( MRS * FirstVNF_CPU_Server ),( MDR - ( AMS + FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM_Server ) * ( FirstVNF_Mem + RRS ) ) / CRS ) )", "choosing": "( Min( RCSe ,( ( ( CS - MUC ) - MUM ) * CS ) ) - Max( RRSe,CS ) )", "obj1": 0.22440944881889763, "obj2": 0.6224125000713557}, {"determining": "( Min( MDR ,( ( FirstVNF_CPU_Server * ( RRS * MDR ) ) + AMS ) ) * ( ( Max( ARS,FirstVNF_Mem ) / ( RRS / ( FirstVNF_CPU_Server / ARS ) ) ) / ARS ) )", "choosing": "Max( Min( MUM ,Max( MLU,RCSe ) ),( RRSe / Min( ( ( Max( RCSe,( ( MUR - MUC ) + CS ) ) * Min( ( ( RCSe * MUC ) - MUM ) ,( RMSe * DS ) ) ) / Max( ( MUR * RMSe ),MLU ) ) ,RMSe ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6931507238565344}, {"determining": "Min( Min( Max( Min( FirstVNF_Mem ,BR ),( AMS + FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM - Const ) * ( FirstVNF_CPU_Server + RRS ) ) ) ,( Min( ( DDR - CRS ) ,( FirstVNF_RAM_Server * CRS ) ) + ( Min( Const ,DDR ) * ( Const - RRS ) ) ) )", "choosing": "( Min( ( ( DS - RRSe ) / ( MLU - DS ) ) ,Max( ( MLU + MLU ),( DS / MUR ) ) ) + ( ( ( MLU + CS ) + Min( MUR ,MUC ) ) / Max( ( MUR + Max( DS,CS ) ),Max( RMSe,MUM ) ) ) )", "obj1": 0.2125984251968504, "obj2": 0.6613372712105986}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( DS,MUR ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.10236220472440945, "obj2": 0.8294456479889214}, {"determining": "Max( ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) / CRS ) / CRS ),( RRS + CRS ) )", "choosing": "( Max( MLU,CS ) - Max( RRSe,MUR ) )", "obj1": 0.14566929133858267, "obj2": 0.754991873079845}, {"determining": "( Max( ( ARS + ( DDR / MDR ) ),( MDR / MRS ) ) + ( ( RRS + Const ) * ( PN / RRS ) ) )", "choosing": "Max( ( ( MUR * MUC ) - MUM ),( Min( RCSe ,CS ) / ( MUR - MUR ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6715201842962937}, {"determining": "Max( ( Const - PN ),Max( ( ( BR / FirstVNF_RAM ) - ( Const * ( Max( ( FirstVNF_Mem_Server / ( RRS * FirstVNF_CPU ) ),FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) ),BR ) )", "choosing": "( ( MLU / CS ) * ( ( ( MUC / MUM ) / ( ( ( MUR / MUC ) - MUM ) * ( CS - MUM ) ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6216884786248261}, {"determining": "Max( ( FirstVNF_RAM / PN ),( Const / Min( PN ,Const ) ) )", "choosing": "( Min( ( MLU + CS ) ,Min( ( RRSe * CS ) ,DS ) ) / Min( Max( DS,MUR ) ,( ( ( MUC - MUC ) + RRSe ) + RCSe ) ) )", "obj1": 0.0984251968503937, "obj2": 0.830687276460355}, {"determining": "Max( Min( ACS ,( Min( Min( ( FirstVNF_Mem / FirstVNF_CPU_Server ) ,FirstVNF_CPU ) ,ACS ) * PN ) ),( CRS - BR ) )", "choosing": "( ( ( ( MUR - MUM ) / ( Min( Max( MUM,( Min( CS ,MLU ) + MLU ) ) ,DS ) / RCSe ) ) / DS ) - ( CS * MLU ) )", "obj1": 0.2736220472440945, "obj2": 0.5922047881347143}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RCSe / CS ) + ( MUR * Max( MUR,RMSe ) ) ) / Min( ( MUM + MUM ) ,DS ) ) + Min( MUM ,MUC ) )", "obj1": 0.10826771653543307, "obj2": 0.8084533782969471}, {"determining": "( ( AMS + FirstVNF_Mem ) + ( RRS - DDR ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( MUR,RMSe ) ) ) / Min( ( MUM + MUM ) ,DS ) )", "obj1": 0.11614173228346457, "obj2": 0.8049950644677517}, {"determining": "( ( ACS + AMS ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) )", "choosing": "( ( CS / MUC ) - Min( MUM ,CS ) )", "obj1": 0.1968503937007874, "obj2": 0.6778622959272498}, {"determining": "( ( ACS + AMS ) - Min( Min( ( ARS / BR ) ,CRS ) ,Max( ARS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU / CS ) * ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6216884786248261}, {"determining": "Max( ( PN / FirstVNF_RAM ),( FirstVNF_Mem_Server / DDR ) )", "choosing": "( ( ( MUC * MUM ) + ( MUC + DS ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.11023622047244094, "obj2": 0.8083904833175725}, {"determining": "Min( Min( ACS ,CRS ) ,Max( ARS,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RCSe / CS ) + ( MUR * Max( MUR,RMSe ) ) ) / Min( ( MUM + MUM ) ,DS ) ) + Min( MUM ,MUC ) )", "obj1": 0.10826771653543307, "obj2": 0.8084533782969471}, {"determining": "Max( Min( Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,( PN / FirstVNF_RAM_Server ) ) ,( Min( RRS ,CRS ) * ( MDR - ARS ) ) ),Min( ( ( AMS * MDR ) * ( ACS * ACS ) ) ,( Min( RRS ,( PN / RRS ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Max( DS,MUR ) ,( ( ( Max( ( MUR * MLU ),( MUM + RRSe ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.10039370078740158, "obj2": 0.8297989177046731}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( Const ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( DS,MUR ) ,( ( ( MUR - RRSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.10236220472440945, "obj2": 0.8294456479889214}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( DS,MUR ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.10236220472440945, "obj2": 0.8294456479889214}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( DS,MUR ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.10236220472440945, "obj2": 0.8294456479889214}, {"determining": "Max( Max( Const,( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ),( CRS - FirstVNF_Mem ) )", "choosing": "( Min( Max( DS,MUR ) ,( ( ( Max( ( MUR * MLU ),( MUM + RRSe ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.10039370078740158, "obj2": 0.8297989177046731}, {"determining": "( ( ( ( AMS - FirstVNF_Mem ) * ( FirstVNF_Mem_Server - MRS ) ) / Max( Max( MDR,FirstVNF_RAM ),( FirstVNF_Mem_Server + BR ) ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + Min( MUC ,DS ) ),RRSe ) / ( MUC + Min( MUC ,DS ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6931507238565344}, {"determining": "Max( Min( Min( Max( CRS,( FirstVNF_RAM * MDR ) ) ,Min( DDR ,BR ) ) ,( FirstVNF_Mem_Server + ( ( DDR - FirstVNF_RAM ) + ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) ) ),( CRS + FirstVNF_Mem ) )", "choosing": "( ( DS / ( ( MUM - MUC ) / ( ( Min( MUC ,DS ) * MLU ) / DS ) ) ) - ( CS * MLU ) )", "obj1": 0.27165354330708663, "obj2": 0.5948989052395265}, {"determining": "Max( ( ( ( ACS + ( MDR + FirstVNF_CPU_Server ) ) - ( FirstVNF_RAM * DDR ) ) / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( DS,MUR ) ,( ( MUR + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.10236220472440945, "obj2": 0.8294456479889214}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( DS,MUR ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.10236220472440945, "obj2": 0.8294456479889214}, {"determining": "( Max( Min( ACS ,FirstVNF_RAM ),AMS ) * Min( ( Max( FirstVNF_Mem_Server,Const ) + FirstVNF_CPU ) ,( MDR - CRS ) ) )", "choosing": "( Max( ( MUC + Min( MUC ,DS ) ),RRSe ) / ( MUC + Min( MUC ,DS ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6931507238565344}, {"determining": "( Min( MDR ,( ( FirstVNF_CPU_Server * ( RRS * MDR ) ) + AMS ) ) * ( ( Max( ARS,FirstVNF_Mem ) / ( RRS / ( FirstVNF_CPU_Server / ARS ) ) ) / ARS ) )", "choosing": "Max( Min( MUM ,Max( MLU,RCSe ) ),( RRSe / Min( ( ( Max( RCSe,( ( MUR - MUC ) + CS ) ) * Min( ( ( RCSe * MUC ) - MUM ) ,( RMSe * DS ) ) ) / Max( ( MUR * RMSe ),MLU ) ) ,RMSe ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7916308660511866}, {"determining": "( Min( MDR ,( ( FirstVNF_CPU_Server * ( RRS * MDR ) ) + AMS ) ) * ( ( Max( ARS,FirstVNF_Mem ) / ( RRS / ( FirstVNF_CPU_Server / ARS ) ) ) / ARS ) )", "choosing": "Max( Min( MUM ,Max( MLU,RCSe ) ),( RRSe / Min( ( ( Max( RCSe,( ( MUR - MUC ) + CS ) ) * Min( ( ( RCSe * MUC ) - MUM ) ,( RMSe * DS ) ) ) / Max( ( MUR * RMSe ),MLU ) ) ,RMSe ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7916308660511866}, {"determining": "( Min( MDR ,( ( FirstVNF_CPU_Server * ( RRS * MDR ) ) + AMS ) ) * ( ( Max( ARS,FirstVNF_Mem ) / ( RRS / ( FirstVNF_CPU_Server / ARS ) ) ) / ARS ) )", "choosing": "Max( Min( MUM ,Max( MLU,RCSe ) ),( RRSe / Min( ( ( Max( RCSe,( ( MUR - MUC ) + CS ) ) * Min( ( ( RCSe * MUC ) - MUM ) ,( RMSe * DS ) ) ) / Max( ( MUR * RMSe ),MLU ) ) ,RMSe ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7916308660511866}, {"determining": "( Min( MDR ,( ( FirstVNF_CPU_Server * ( RRS * MDR ) ) + AMS ) ) * ( ( Max( ARS,FirstVNF_Mem ) / ( RRS / ( FirstVNF_CPU_Server / ARS ) ) ) / ARS ) )", "choosing": "Max( Min( MUM ,Max( MLU,RCSe ) ),( RRSe / Min( ( ( Max( RCSe,( ( MUR - MUC ) + CS ) ) * Min( ( ( RCSe * MUC ) - MUM ) ,( RMSe * DS ) ) ) / Max( ( MUR * RMSe ),MLU ) ) ,RMSe ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7916308660511866}, {"determining": "( Min( MDR ,( ( FirstVNF_CPU_Server * ( RRS * MDR ) ) + AMS ) ) * ( ( Max( ARS,FirstVNF_Mem ) / ( RRS / ( FirstVNF_CPU_Server / ARS ) ) ) / ARS ) )", "choosing": "Max( Min( MUM ,Max( MLU,RCSe ) ),( RRSe / Min( ( ( Max( RCSe,( ( MUR - MUC ) + CS ) ) * Min( ( ( RCSe * MUC ) - MUM ) ,( RMSe * DS ) ) ) / Max( ( MUR * RMSe ),MLU ) ) ,RMSe ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7916308660511866}, {"determining": "( Min( MDR ,( ( FirstVNF_CPU_Server * ( RRS * MDR ) ) + AMS ) ) * ( ( Max( ARS,FirstVNF_Mem ) / ( RRS / ( FirstVNF_CPU_Server / ARS ) ) ) / ARS ) )", "choosing": "Max( Min( MUM ,Max( MLU,RCSe ) ),( RRSe / Min( ( ( Max( RCSe,( ( MUR - MUC ) + CS ) ) * Min( ( ( RCSe * MUC ) - MUM ) ,( RMSe * DS ) ) ) / Max( ( MUR * RMSe ),MLU ) ) ,RMSe ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7916308660511866}, {"determining": "( Min( MDR ,( ( Const + Const ) * PN ) ) * Min( ( FirstVNF_RAM + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ,( MDR - CRS ) ) )", "choosing": "Max( ( Min( MUR ,MUC ) - MUM ),( ( RRSe - MUM ) / ( DS - RMSe ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7916308660511866}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( DS,MUR ) ,( ( ( MUC - RMSe ) + RRSe ) + ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),RMSe ) ) ) ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.10236220472440945, "obj2": 0.8294456479889214}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),RMSe ) ) ) / Min( ( MUM + MUM ) ,DS ) )", "obj1": 0.12598425196850394, "obj2": 0.7913590933290028}, {"determining": "Max( Min( Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,( PN / FirstVNF_RAM_Server ) ) ,( Min( RRS ,CRS ) * ( MDR - ARS ) ) ),Min( ( ( AMS * MDR ) * ( ACS * ACS ) ) ,( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * ( ( ( MDR - Const ) - Const ) + MDR ) ) ) )", "choosing": "( Min( Max( DS,MUR ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.10236220472440945, "obj2": 0.8294456479889214}, {"determining": "Max( ( CRS - FirstVNF_Mem ),Min( ACS ,Max( Max( FirstVNF_CPU,Max( FirstVNF_CPU,DDR ) ),( AMS / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( RCSe ,RCSe ) + CS ) / DS ) - ( CS * RRSe ) )", "obj1": 0.2421259842519685, "obj2": 0.6132086742708522}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) + ( ( RRS + Const ) + ( PN / RRS ) ) )", "choosing": "Max( ( ( ( ( ( MUC / RMSe ) / ( MUM / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) * MUC ) - MUM ),Min( ( MUR * MUM ) ,RCSe ) )", "obj1": 0.20866141732283464, "obj2": 0.6715201842962937}, {"determining": "Max( ( PN - PN ),Max( ( Max( Max( ( Min( ( PN - ACS ) ,AMS ) / RRS ),FirstVNF_RAM_Server ),DDR ) - ( Const * ( ( FirstVNF_CPU_Server + ACS ) / FirstVNF_Mem ) ) ),MRS ) )", "choosing": "Max( ( RRSe - Max( RCSe,( Max( ( Min( CS ,MUC ) / CS ),MLU ) + MUM ) ) ),( MUC / ( MUR - ( ( MUR - MUC ) * ( ( MUR * ( RCSe - MUC ) ) + MLU ) ) ) ) )", "obj1": 0.16929133858267717, "obj2": 0.7009678214051934}, {"determining": "( Max( Max( BR,ACS ),( MDR / MRS ) ) + ( ( RRS + Const ) * ( PN / RRS ) ) )", "choosing": "( ( MLU / CS ) * ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) )", "obj1": 0.24803149606299213, "obj2": 0.6091361752620947}, {"determining": "( ( FirstVNF_RAM + Max( AMS,FirstVNF_RAM ) ) - ( ( PN + MRS ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( DS + ( Min( MUM ,( ( CS * RCSe ) + MUM ) ) / MUR ) ),RRSe ) / ( MUC + Min( MUC ,DS ) ) )", "obj1": 0.1515748031496063, "obj2": 0.7337359951150401}, {"determining": "( Min( MDR ,( ( Const + Const ) * PN ) ) * Min( ( FirstVNF_RAM + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ,( MDR - CRS ) ) )", "choosing": "( Max( ( MUC + Min( MUC ,DS ) ),RRSe ) / ( MUC + Min( MUC ,DS ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6870390277183631}, {"determining": "Max( ( PN + ( FirstVNF_RAM_Server / FirstVNF_RAM ) ),AMS )", "choosing": "( Min( Max( DS,MUR ) ,( Min( MUR ,RMSe ) + MUM ) ) / Min( ( MLU + CS ) ,Min( MUM ,DS ) ) )", "obj1": 0.09448818897637795, "obj2": 0.839514871971465}, {"determining": "( ( ACS + AMS ) - Min( Min( ( ARS / BR ) ,CRS ) ,Max( ARS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),RMSe ) ) ) / Min( ( MUM + MUM ) ,DS ) )", "obj1": 0.12598425196850394, "obj2": 0.7913590933290028}, {"determining": "Max( ( ( FirstVNF_RAM_Server * AMS ) / FirstVNF_RAM ),( Min( ( DDR - ( ( ACS + AMS ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.8800601998201105}, {"determining": "( Min( DDR ,FirstVNF_CPU ) - ( ( AMS * MRS ) + AMS ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( ( CS * ( RCSe - ( RRSe + RCSe ) ) ) * RCSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8785165234946758}, {"determining": "Max( ( FirstVNF_RAM / ( Max( ACS,Const ) * AMS ) ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( ( CS + MUC ) - ( RCSe + MUR ) )", "obj1": 0.1968503937007874, "obj2": 0.6778622959272498}, {"determining": "Max( ( ( Min( ( PN + ( Max( DDR,AMS ) * ( ( ARS / PN ) + FirstVNF_Mem ) ) ) ,FirstVNF_Mem ) * AMS ) / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8785165234946758}, {"determining": "Max( ( Const - PN ),Max( ( ( BR / FirstVNF_RAM ) - ( Const * ( ( FirstVNF_CPU_Server + ACS ) / FirstVNF_Mem ) ) ),BR ) )", "choosing": "( Min( Max( DS,MUR ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.10236220472440945, "obj2": 0.8294456479889214}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( ( MLU / CS ) * ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6216884786248261}, {"determining": "Max( Min( Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,( PN / FirstVNF_RAM_Server ) ) ,( Min( RRS ,CRS ) * ( MDR - ARS ) ) ),Min( ( ( AMS * MDR ) * ( ACS * ACS ) ) ,( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * ( ( ( MDR - Const ) - Const ) + MDR ) ) ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( MUR,RMSe ) ) ) / Min( ( MUM + MUM ) ,DS ) )", "obj1": 0.11614173228346457, "obj2": 0.8049950644677517}, {"determining": "( ( AMS + FirstVNF_Mem ) + ( RRS - DDR ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),RMSe ) ) ) / Min( ( MUM + MUM ) ,DS ) )", "obj1": 0.12598425196850394, "obj2": 0.7913590933290028}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( ( ( CRS * PN ) * PN ) - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( MUR,RMSe ) ) ) / Min( ( MUM + MUM ) ,DS ) )", "obj1": 0.11614173228346457, "obj2": 0.8049950644677517}, {"determining": "( ( ACS + AMS ) - Min( Min( ( ARS / BR ) ,CRS ) ,Max( ARS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( MUR - RRSe ) / ( Min( ( CS / ( MUC - ( RRSe - MUC ) ) ) ,DS ) / RCSe ) ) / DS ) - ( CS * MLU ) )", "obj1": 0.2736220472440945, "obj2": 0.5922047881347143}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( DS,MUR ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.10236220472440945, "obj2": 0.8294456479889214}, {"determining": "( ( FirstVNF_CPU_Server / AMS ) - ( Min( Const ,( AMS / ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) + RRS ) ) ) - ACS ) )", "choosing": "( ( ( ( DS + ( Min( Max( CS,( RMSe * MUR ) ) ,MLU ) - MUC ) ) * Max( Min( ( DS - MUM ) ,( ( MLU * ( CS + RMSe ) ) + ( ( CS * MUC ) + Max( RMSe,MUC ) ) ) ),DS ) ) + ( ( MUC + RMSe ) - ( CS * CS ) ) ) / Max( ( RRSe - CS ),DS ) )", "obj1": 0.13188976377952755, "obj2": 0.7726455082334093}, {"determining": "( ( FirstVNF_CPU_Server / AMS ) - ( Min( Const ,( AMS / ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) + RRS ) ) ) - ACS ) )", "choosing": "( ( ( ( DS + ( Min( Max( CS,( RMSe * MUR ) ) ,MLU ) - MUC ) ) * Max( Min( ( DS - MUM ) ,( ( MLU * ( CS + RMSe ) ) + ( ( CS * MUC ) + Max( RMSe,MUC ) ) ) ),DS ) ) + ( ( MUC + RMSe ) - ( CS * CS ) ) ) / Max( ( RRSe - CS ),DS ) )", "obj1": 0.13188976377952755, "obj2": 0.7726455082334093}, {"determining": "( ( FirstVNF_CPU_Server / AMS ) - ( Min( Const ,( AMS / ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) + RRS ) ) ) - ACS ) )", "choosing": "( ( ( ( DS + ( Min( Max( CS,( RMSe * MUR ) ) ,MLU ) - MUC ) ) * Max( Min( ( DS - MUM ) ,( ( MLU * ( CS + RMSe ) ) + ( ( CS * MUC ) + Max( RMSe,MUC ) ) ) ),DS ) ) + ( ( MUC + RMSe ) - ( CS * CS ) ) ) / Max( ( RRSe - CS ),DS ) )", "obj1": 0.13188976377952755, "obj2": 0.7726455082334093}, {"determining": "Max( Min( Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,( PN / FirstVNF_RAM_Server ) ) ,( Min( RRS ,CRS ) * ( MDR - ARS ) ) ),Min( ( PN / RRS ) ,( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * ( ( ( MDR - Const ) - Const ) + MDR ) ) ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),RMSe ) ) ) / Min( CS ,DS ) )", "obj1": 0.12992125984251968, "obj2": 0.7905206499590638}, {"determining": "( ( FirstVNF_CPU_Server + DDR ) - ( Min( ( FirstVNF_Mem_Server / DDR ) ,( ( CRS + Min( FirstVNF_CPU ,Const ) ) - ( FirstVNF_CPU_Server / AMS ) ) ) - DDR ) )", "choosing": "( ( RMSe - RMSe ) / Max( ( MUM - RRSe ),( ( MUC * MUM ) + ( DS + MUC ) ) ) )", "obj1": 0.18110236220472442, "obj2": 0.696846805682676}, {"determining": "Min( Min( ACS ,CRS ) ,Max( ARS,FirstVNF_CPU_Server ) )", "choosing": "( Min( Max( DS,MUR ) ,MLU ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.10433070866141732, "obj2": 0.8254385202663036}, {"determining": "Min( ( CRS * BR ) ,Min( ( BR + FirstVNF_RAM_Server ) ,CRS ) )", "choosing": "( ( RMSe + ( MUR / ( Max( MLU,Min( DS ,MUC ) ) + RMSe ) ) ) / Min( Min( CS ,DS ) ,( DS * ( RCSe - MLU ) ) ) )", "obj1": 0.08267716535433071, "obj2": 0.8598190875541755}, {"determining": "Min( ( CRS * BR ) ,Min( ( BR + FirstVNF_RAM_Server ) ,CRS ) )", "choosing": "( ( RMSe + ( MUR / ( Max( MLU,Min( DS ,MUC ) ) + RMSe ) ) ) / Min( Min( CS ,DS ) ,( DS * ( RCSe - MLU ) ) ) )", "obj1": 0.08267716535433071, "obj2": 0.8598190875541755}, {"determining": "Min( ( CRS * BR ) ,Min( ( BR + FirstVNF_RAM_Server ) ,CRS ) )", "choosing": "( ( RMSe + ( MUR / ( Max( MLU,Min( DS ,MUC ) ) + RMSe ) ) ) / Min( Min( CS ,DS ) ,( DS * ( RCSe - MLU ) ) ) )", "obj1": 0.08267716535433071, "obj2": 0.8598190875541755}, {"determining": "Min( Min( ( PN / FirstVNF_Mem ) ,CRS ) ,Max( ARS,RRS ) )", "choosing": "( ( MUM + CS ) / Min( Min( CS ,DS ) ,( MLU + CS ) ) )", "obj1": 0.08267716535433071, "obj2": 0.8598190875541755}, {"determining": "( ( FirstVNF_CPU_Server + AMS ) - ( Min( ( FirstVNF_Mem_Server / DDR ) ,( ( CRS + Min( FirstVNF_CPU ,Const ) ) - ( FirstVNF_CPU_Server / AMS ) ) ) - DDR ) )", "choosing": "( Max( MLU,CS ) - Max( RRSe,MUR ) )", "obj1": 0.14173228346456693, "obj2": 0.760953773511761}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( DS,MUR ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.10236220472440945, "obj2": 0.8294456479889214}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),RMSe ) ) ) / Min( ( MUM + MUM ) ,DS ) )", "obj1": 0.12598425196850394, "obj2": 0.7913590933290028}, {"determining": "Max( Min( Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,( PN / FirstVNF_RAM_Server ) ) ,( Min( RRS ,CRS ) * ( MDR - ARS ) ) ),Min( ( ( AMS * MDR ) * ( ACS * ACS ) ) ,( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * ( ( ( MDR - Const ) - Const ) + MDR ) ) ) )", "choosing": "( Min( Max( DS,MUR ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.10236220472440945, "obj2": 0.8294456479889214}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( Const - ( MDR - ARS ) ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),RMSe ) ) ) / Min( ( MUM + MUM ) ,DS ) ) - ( CS / DS ) )", "obj1": 0.14763779527559054, "obj2": 0.7514412692275074}, {"determining": "( ( FirstVNF_CPU_Server / AMS ) - ( Min( Const ,( AMS / ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) + RRS ) ) ) - ACS ) )", "choosing": "( ( ( ( DS + ( Min( Max( CS,( RMSe * MUR ) ) ,MLU ) - MUC ) ) * Max( Min( ( DS - MUM ) ,( ( MLU * ( CS + RMSe ) ) + ( ( CS * MUC ) + Max( RMSe,MUC ) ) ) ),DS ) ) + ( ( MUC + RMSe ) - ( CS * CS ) ) ) / Max( ( RRSe - CS ),DS ) )", "obj1": 0.13188976377952755, "obj2": 0.7726455082334093}, {"determining": "( ( FirstVNF_CPU_Server / AMS ) - ( Min( Const ,( AMS / ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) + RRS ) ) ) - ACS ) )", "choosing": "( ( ( ( DS + ( Min( Max( CS,( RMSe * MUR ) ) ,MLU ) - MUC ) ) * Max( Min( ( DS - MUM ) ,( ( MLU * ( CS + RMSe ) ) + ( ( CS * MUC ) + Max( RMSe,MUC ) ) ) ),DS ) ) + ( ( MUC + RMSe ) - ( CS * CS ) ) ) / Max( ( RRSe - CS ),DS ) )", "obj1": 0.13188976377952755, "obj2": 0.7726455082334093}, {"determining": "( ( FirstVNF_CPU_Server / AMS ) - ( Min( Const ,( AMS / ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) + RRS ) ) ) - ACS ) )", "choosing": "( ( ( ( DS + ( Min( Max( CS,( RMSe * MUR ) ) ,MLU ) - MUC ) ) * Max( Min( ( DS - MUM ) ,( ( MLU * ( CS + RMSe ) ) + ( ( CS * MUC ) + Max( RMSe,MUC ) ) ) ),DS ) ) + ( ( MUC + RMSe ) - ( CS * CS ) ) ) / Max( ( RRSe - CS ),DS ) )", "obj1": 0.13188976377952755, "obj2": 0.7726455082334093}, {"determining": "( ( FirstVNF_CPU_Server / AMS ) - ( Min( ( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ,Const ) - DDR ) )", "choosing": "( ( ( ( DS + ( Min( Max( CS,( RMSe * MUR ) ) ,MLU ) - MUC ) ) * Max( Min( ( DS - MUM ) ,( ( ( MUC - RMSe ) + RRSe ) + ( ( CS * MUC ) + Max( MUM,MUC ) ) ) ),DS ) ) + ( ( MUC + RMSe ) - ( CS * CS ) ) ) / Max( ( RRSe - CS ),DS ) )", "obj1": 0.13188976377952755, "obj2": 0.7726455082334093}, {"determining": "Max( ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) / FirstVNF_RAM ),( ( RRS * ( CRS / MDR ) ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( DS,MUR ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.10236220472440945, "obj2": 0.8294456479889214}, {"determining": "Max( ( Min( Min( Max( FirstVNF_CPU_Server,( RRS + FirstVNF_Mem_Server ) ) ,( FirstVNF_CPU * ACS ) ) ,FirstVNF_CPU ) / FirstVNF_RAM ),( ACS + AMS ) )", "choosing": "( Min( Max( DS,MUR ) ,( ( ( MUC - MUC ) + ( MUC * ( RRSe - MUM ) ) ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.09645669291338582, "obj2": 0.837813426236503}, {"determining": "( ( RRS / MDR ) / ( ( ARS * ( FirstVNF_Mem + RRS ) ) / Const ) )", "choosing": "( ( CS + MUC ) - Min( ( ( RMSe * CS ) * DS ) ,CS ) )", "obj1": 0.1968503937007874, "obj2": 0.6778622959272498}, {"determining": "( Min( ( RRS + ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ,Const ) * Min( ( Max( FirstVNF_Mem_Server,Const ) + FirstVNF_CPU ) ,( MDR - CRS ) ) )", "choosing": "( ( ( Min( MUC ,DS ) - CS ) / ( RRSe / RMSe ) ) * RMSe )", "obj1": 0.23818897637795275, "obj2": 0.6171267565610072}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( PN / RRS ) ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( DS,MUR ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,Min( MUC ,DS ) ) )", "obj1": 0.10236220472440945, "obj2": 0.8294456479889214}, {"determining": "( Max( Max( BR,ACS ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) ) + ( ( RRS + Const ) * ( PN / RRS ) ) )", "choosing": "Max( ( ( MUR * MUC ) - ( ( MUC - RMSe ) + RRSe ) ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.20669291338582677, "obj2": 0.6722671817933589}, {"determining": "( Max( Max( BR,ACS ),( MDR / MRS ) ) + ( ( RRS + Const ) * ( PN / RRS ) ) )", "choosing": "Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.16929133858267717, "obj2": 0.7009678214051934}, {"determining": "Min( DDR ,( ( Max( FirstVNF_CPU,PN ) - ( CRS + PN ) ) + Min( Const ,( FirstVNF_Mem * RRS ) ) ) )", "choosing": "( ( Min( ( DS / MLU ) ,( MUC * RMSe ) ) * ( Min( CS ,DS ) - ( CS * MLU ) ) ) * RRSe )", "obj1": 0.19094488188976377, "obj2": 0.6927128443585118}], "5": [{"determining": "Min( ( RRS - DDR ) ,Min( FirstVNF_RAM_Server ,AMS ) )", "choosing": "( ( MLU + ( RCSe + MUM ) ) / ( CS * ( RCSe - ( RRSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Const - PN ),Max( ( ( BR / FirstVNF_RAM ) - ( Const * ( ( FirstVNF_CPU_Server + ACS ) / FirstVNF_Mem ) ) ),BR ) )", "choosing": "( ( MLU / CS ) * ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) )", "obj1": 0.234251968503937, "obj2": 0.6182571273735992}, {"determining": "Max( ( ( CRS / ( FirstVNF_Mem_Server * ( AMS * ARS ) ) ) / CRS ),( RRS + CRS ) )", "choosing": "( Max( MLU,CS ) - Max( ( Min( RMSe ,( RCSe / MUM ) ) + ( RCSe - MUR ) ),MUR ) )", "obj1": 0.14566929133858267, "obj2": 0.754991873079845}, {"determining": "Max( Min( ( DDR - CRS ) ,AMS ),( Min( FirstVNF_RAM_Server ,( DDR / ( ( FirstVNF_RAM_Server * Max( Min( BR ,FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) ) + Max( Min( FirstVNF_RAM_Server ,( ACS - FirstVNF_RAM ) ),Min( ARS ,RRS ) ) ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( ( CS / ( MUC * DS ) ) ,DS ) / RCSe ) / ( MUR - RRSe ) ) / ( MUM + Max( ( RRSe + CS ),DS ) ) ) - ( CS * MLU ) )", "obj1": 0.2559055118110236, "obj2": 0.5959279318728518}, {"determining": "Max( ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) / FirstVNF_RAM ),( ( RRS * ( CRS / MDR ) ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( MUC ,MUM ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8785165234946758}, {"determining": "( ( MDR - ACS ) / ( ( ( Max( ( MRS * FirstVNF_CPU_Server ),( MDR - ( AMS + FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM_Server ) * ( FirstVNF_Mem + RRS ) ) / CRS ) )", "choosing": "( Min( RCSe ,( ( ( CS - MUC ) - MUM ) * CS ) ) - Max( RRSe,CS ) )", "obj1": 0.22440944881889763, "obj2": 0.6224125000713557}, {"determining": "Min( Min( Max( Min( FirstVNF_Mem ,BR ),( AMS + FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM - Const ) * ( FirstVNF_CPU_Server + RRS ) ) ) ,( Min( ( DDR - CRS ) ,( FirstVNF_RAM_Server * CRS ) ) + ( Min( Const ,DDR ) * ( Const - RRS ) ) ) )", "choosing": "( Min( ( ( DS - RRSe ) / ( MLU - DS ) ) ,Max( ( MLU + MLU ),( DS / MUR ) ) ) + ( ( ( MLU + CS ) + Min( MUR ,MUC ) ) / Max( ( MUR + Max( DS,CS ) ),Max( RMSe,MUM ) ) ) )", "obj1": 0.2125984251968504, "obj2": 0.6613372712105986}, {"determining": "Max( ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) / CRS ) / CRS ),( RRS + CRS ) )", "choosing": "( Max( MLU,CS ) - Max( RRSe,MUR ) )", "obj1": 0.14566929133858267, "obj2": 0.754991873079845}, {"determining": "( Max( ( ARS + ( DDR / MDR ) ),( MDR / MRS ) ) + ( ( RRS + Const ) * ( PN / RRS ) ) )", "choosing": "Max( ( ( MUR * MUC ) - MUM ),( Min( RCSe ,CS ) / ( MUR - MUR ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6715201842962937}, {"determining": "Max( ( Const - PN ),Max( ( ( BR / FirstVNF_RAM ) - ( Const * ( Max( ( FirstVNF_Mem_Server / ( RRS * FirstVNF_CPU ) ),FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) ),BR ) )", "choosing": "( ( MLU / CS ) * ( ( ( MUC / MUM ) / ( ( ( MUR / MUC ) - MUM ) * ( CS - MUM ) ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6216884786248261}, {"determining": "( ( ACS + AMS ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) )", "choosing": "( ( CS / MUC ) - Min( MUM ,CS ) )", "obj1": 0.1968503937007874, "obj2": 0.6778622959272498}, {"determining": "( ( ACS + AMS ) - Min( Min( ( ARS / BR ) ,CRS ) ,Max( ARS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU / CS ) * ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6216884786248261}, {"determining": "Max( Min( Min( Max( CRS,( FirstVNF_RAM * MDR ) ) ,Min( DDR ,BR ) ) ,( FirstVNF_Mem_Server + ( ( DDR - FirstVNF_RAM ) + ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) ) ),( CRS + FirstVNF_Mem ) )", "choosing": "( ( DS / ( ( MUM - MUC ) / ( ( Min( MUC ,DS ) * MLU ) / DS ) ) ) - ( CS * MLU ) )", "obj1": 0.27165354330708663, "obj2": 0.5948989052395265}, {"determining": "( Min( MDR ,( ( FirstVNF_CPU_Server * ( RRS * MDR ) ) + AMS ) ) * ( ( Max( ARS,FirstVNF_Mem ) / ( RRS / ( FirstVNF_CPU_Server / ARS ) ) ) / ARS ) )", "choosing": "Max( Min( MUM ,Max( MLU,RCSe ) ),( RRSe / Min( ( ( Max( RCSe,( ( MUR - MUC ) + CS ) ) * Min( ( ( RCSe * MUC ) - MUM ) ,( RMSe * DS ) ) ) / Max( ( MUR * RMSe ),MLU ) ) ,RMSe ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7916308660511866}, {"determining": "( Min( MDR ,( ( FirstVNF_CPU_Server * ( RRS * MDR ) ) + AMS ) ) * ( ( Max( ARS,FirstVNF_Mem ) / ( RRS / ( FirstVNF_CPU_Server / ARS ) ) ) / ARS ) )", "choosing": "Max( Min( MUM ,Max( MLU,RCSe ) ),( RRSe / Min( ( ( Max( RCSe,( ( MUR - MUC ) + CS ) ) * Min( ( ( RCSe * MUC ) - MUM ) ,( RMSe * DS ) ) ) / Max( ( MUR * RMSe ),MLU ) ) ,RMSe ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7916308660511866}, {"determining": "( Min( MDR ,( ( FirstVNF_CPU_Server * ( RRS * MDR ) ) + AMS ) ) * ( ( Max( ARS,FirstVNF_Mem ) / ( RRS / ( FirstVNF_CPU_Server / ARS ) ) ) / ARS ) )", "choosing": "Max( Min( MUM ,Max( MLU,RCSe ) ),( RRSe / Min( ( ( Max( RCSe,( ( MUR - MUC ) + CS ) ) * Min( ( ( RCSe * MUC ) - MUM ) ,( RMSe * DS ) ) ) / Max( ( MUR * RMSe ),MLU ) ) ,RMSe ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7916308660511866}, {"determining": "( Min( MDR ,( ( FirstVNF_CPU_Server * ( RRS * MDR ) ) + AMS ) ) * ( ( Max( ARS,FirstVNF_Mem ) / ( RRS / ( FirstVNF_CPU_Server / ARS ) ) ) / ARS ) )", "choosing": "Max( Min( MUM ,Max( MLU,RCSe ) ),( RRSe / Min( ( ( Max( RCSe,( ( MUR - MUC ) + CS ) ) * Min( ( ( RCSe * MUC ) - MUM ) ,( RMSe * DS ) ) ) / Max( ( MUR * RMSe ),MLU ) ) ,RMSe ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7916308660511866}, {"determining": "( Min( MDR ,( ( FirstVNF_CPU_Server * ( RRS * MDR ) ) + AMS ) ) * ( ( Max( ARS,FirstVNF_Mem ) / ( RRS / ( FirstVNF_CPU_Server / ARS ) ) ) / ARS ) )", "choosing": "Max( Min( MUM ,Max( MLU,RCSe ) ),( RRSe / Min( ( ( Max( RCSe,( ( MUR - MUC ) + CS ) ) * Min( ( ( RCSe * MUC ) - MUM ) ,( RMSe * DS ) ) ) / Max( ( MUR * RMSe ),MLU ) ) ,RMSe ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7916308660511866}, {"determining": "( Min( MDR ,( ( FirstVNF_CPU_Server * ( RRS * MDR ) ) + AMS ) ) * ( ( Max( ARS,FirstVNF_Mem ) / ( RRS / ( FirstVNF_CPU_Server / ARS ) ) ) / ARS ) )", "choosing": "Max( Min( MUM ,Max( MLU,RCSe ) ),( RRSe / Min( ( ( Max( RCSe,( ( MUR - MUC ) + CS ) ) * Min( ( ( RCSe * MUC ) - MUM ) ,( RMSe * DS ) ) ) / Max( ( MUR * RMSe ),MLU ) ) ,RMSe ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7916308660511866}, {"determining": "( Min( MDR ,( ( Const + Const ) * PN ) ) * Min( ( FirstVNF_RAM + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ,( MDR - CRS ) ) )", "choosing": "Max( ( Min( MUR ,MUC ) - MUM ),( ( RRSe - MUM ) / ( DS - RMSe ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7916308660511866}, {"determining": "Max( ( CRS - FirstVNF_Mem ),Min( ACS ,Max( Max( FirstVNF_CPU,Max( FirstVNF_CPU,DDR ) ),( AMS / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( RCSe ,RCSe ) + CS ) / DS ) - ( CS * RRSe ) )", "obj1": 0.2421259842519685, "obj2": 0.6132086742708522}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) + ( ( RRS + Const ) + ( PN / RRS ) ) )", "choosing": "Max( ( ( ( ( ( MUC / RMSe ) / ( MUM / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) * MUC ) - MUM ),Min( ( MUR * MUM ) ,RCSe ) )", "obj1": 0.20866141732283464, "obj2": 0.6715201842962937}, {"determining": "Max( ( PN - PN ),Max( ( Max( Max( ( Min( ( PN - ACS ) ,AMS ) / RRS ),FirstVNF_RAM_Server ),DDR ) - ( Const * ( ( FirstVNF_CPU_Server + ACS ) / FirstVNF_Mem ) ) ),MRS ) )", "choosing": "Max( ( RRSe - Max( RCSe,( Max( ( Min( CS ,MUC ) / CS ),MLU ) + MUM ) ) ),( MUC / ( MUR - ( ( MUR - MUC ) * ( ( MUR * ( RCSe - MUC ) ) + MLU ) ) ) ) )", "obj1": 0.16929133858267717, "obj2": 0.7009678214051934}, {"determining": "( Max( Max( BR,ACS ),( MDR / MRS ) ) + ( ( RRS + Const ) * ( PN / RRS ) ) )", "choosing": "( ( MLU / CS ) * ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) )", "obj1": 0.24803149606299213, "obj2": 0.6091361752620947}, {"determining": "( ( FirstVNF_RAM + Max( AMS,FirstVNF_RAM ) ) - ( ( PN + MRS ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( DS + ( Min( MUM ,( ( CS * RCSe ) + MUM ) ) / MUR ) ),RRSe ) / ( MUC + Min( MUC ,DS ) ) )", "obj1": 0.1515748031496063, "obj2": 0.7337359951150401}, {"determining": "Max( ( ( FirstVNF_RAM_Server * AMS ) / FirstVNF_RAM ),( Min( ( DDR - ( ( ACS + AMS ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.8800601998201105}, {"determining": "( Min( DDR ,FirstVNF_CPU ) - ( ( AMS * MRS ) + AMS ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( ( CS * ( RCSe - ( RRSe + RCSe ) ) ) * RCSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8785165234946758}, {"determining": "Max( ( FirstVNF_RAM / ( Max( ACS,Const ) * AMS ) ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( ( CS + MUC ) - ( RCSe + MUR ) )", "obj1": 0.1968503937007874, "obj2": 0.6778622959272498}, {"determining": "Max( ( ( Min( ( PN + ( Max( DDR,AMS ) * ( ( ARS / PN ) + FirstVNF_Mem ) ) ) ,FirstVNF_Mem ) * AMS ) / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8785165234946758}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( ( MLU / CS ) * ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6216884786248261}, {"determining": "( ( FirstVNF_CPU_Server / AMS ) - ( Min( Const ,( AMS / ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) + RRS ) ) ) - ACS ) )", "choosing": "( ( ( ( DS + ( Min( Max( CS,( RMSe * MUR ) ) ,MLU ) - MUC ) ) * Max( Min( ( DS - MUM ) ,( ( MLU * ( CS + RMSe ) ) + ( ( CS * MUC ) + Max( RMSe,MUC ) ) ) ),DS ) ) + ( ( MUC + RMSe ) - ( CS * CS ) ) ) / Max( ( RRSe - CS ),DS ) )", "obj1": 0.13188976377952755, "obj2": 0.7726455082334093}, {"determining": "( ( FirstVNF_CPU_Server / AMS ) - ( Min( Const ,( AMS / ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) + RRS ) ) ) - ACS ) )", "choosing": "( ( ( ( DS + ( Min( Max( CS,( RMSe * MUR ) ) ,MLU ) - MUC ) ) * Max( Min( ( DS - MUM ) ,( ( MLU * ( CS + RMSe ) ) + ( ( CS * MUC ) + Max( RMSe,MUC ) ) ) ),DS ) ) + ( ( MUC + RMSe ) - ( CS * CS ) ) ) / Max( ( RRSe - CS ),DS ) )", "obj1": 0.13188976377952755, "obj2": 0.7726455082334093}, {"determining": "( ( FirstVNF_CPU_Server / AMS ) - ( Min( Const ,( AMS / ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) + RRS ) ) ) - ACS ) )", "choosing": "( ( ( ( DS + ( Min( Max( CS,( RMSe * MUR ) ) ,MLU ) - MUC ) ) * Max( Min( ( DS - MUM ) ,( ( MLU * ( CS + RMSe ) ) + ( ( CS * MUC ) + Max( RMSe,MUC ) ) ) ),DS ) ) + ( ( MUC + RMSe ) - ( CS * CS ) ) ) / Max( ( RRSe - CS ),DS ) )", "obj1": 0.13188976377952755, "obj2": 0.7726455082334093}, {"determining": "( ( FirstVNF_CPU_Server + DDR ) - ( Min( ( FirstVNF_Mem_Server / DDR ) ,( ( CRS + Min( FirstVNF_CPU ,Const ) ) - ( FirstVNF_CPU_Server / AMS ) ) ) - DDR ) )", "choosing": "( ( RMSe - RMSe ) / Max( ( MUM - RRSe ),( ( MUC * MUM ) + ( DS + MUC ) ) ) )", "obj1": 0.18110236220472442, "obj2": 0.696846805682676}, {"determining": "( ( FirstVNF_CPU_Server + AMS ) - ( Min( ( FirstVNF_Mem_Server / DDR ) ,( ( CRS + Min( FirstVNF_CPU ,Const ) ) - ( FirstVNF_CPU_Server / AMS ) ) ) - DDR ) )", "choosing": "( Max( MLU,CS ) - Max( RRSe,MUR ) )", "obj1": 0.14173228346456693, "obj2": 0.760953773511761}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( Const - ( MDR - ARS ) ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),RMSe ) ) ) / Min( ( MUM + MUM ) ,DS ) ) - ( CS / DS ) )", "obj1": 0.14763779527559054, "obj2": 0.7514412692275074}, {"determining": "( ( FirstVNF_CPU_Server / AMS ) - ( Min( Const ,( AMS / ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) + RRS ) ) ) - ACS ) )", "choosing": "( ( ( ( DS + ( Min( Max( CS,( RMSe * MUR ) ) ,MLU ) - MUC ) ) * Max( Min( ( DS - MUM ) ,( ( MLU * ( CS + RMSe ) ) + ( ( CS * MUC ) + Max( RMSe,MUC ) ) ) ),DS ) ) + ( ( MUC + RMSe ) - ( CS * CS ) ) ) / Max( ( RRSe - CS ),DS ) )", "obj1": 0.13188976377952755, "obj2": 0.7726455082334093}, {"determining": "( ( FirstVNF_CPU_Server / AMS ) - ( Min( Const ,( AMS / ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) + RRS ) ) ) - ACS ) )", "choosing": "( ( ( ( DS + ( Min( Max( CS,( RMSe * MUR ) ) ,MLU ) - MUC ) ) * Max( Min( ( DS - MUM ) ,( ( MLU * ( CS + RMSe ) ) + ( ( CS * MUC ) + Max( RMSe,MUC ) ) ) ),DS ) ) + ( ( MUC + RMSe ) - ( CS * CS ) ) ) / Max( ( RRSe - CS ),DS ) )", "obj1": 0.13188976377952755, "obj2": 0.7726455082334093}, {"determining": "( ( FirstVNF_CPU_Server / AMS ) - ( Min( Const ,( AMS / ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) + RRS ) ) ) - ACS ) )", "choosing": "( ( ( ( DS + ( Min( Max( CS,( RMSe * MUR ) ) ,MLU ) - MUC ) ) * Max( Min( ( DS - MUM ) ,( ( MLU * ( CS + RMSe ) ) + ( ( CS * MUC ) + Max( RMSe,MUC ) ) ) ),DS ) ) + ( ( MUC + RMSe ) - ( CS * CS ) ) ) / Max( ( RRSe - CS ),DS ) )", "obj1": 0.13188976377952755, "obj2": 0.7726455082334093}, {"determining": "( ( FirstVNF_CPU_Server / AMS ) - ( Min( ( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ,Const ) - DDR ) )", "choosing": "( ( ( ( DS + ( Min( Max( CS,( RMSe * MUR ) ) ,MLU ) - MUC ) ) * Max( Min( ( DS - MUM ) ,( ( ( MUC - RMSe ) + RRSe ) + ( ( CS * MUC ) + Max( MUM,MUC ) ) ) ),DS ) ) + ( ( MUC + RMSe ) - ( CS * CS ) ) ) / Max( ( RRSe - CS ),DS ) )", "obj1": 0.13188976377952755, "obj2": 0.7726455082334093}, {"determining": "( ( RRS / MDR ) / ( ( ARS * ( FirstVNF_Mem + RRS ) ) / Const ) )", "choosing": "( ( CS + MUC ) - Min( ( ( RMSe * CS ) * DS ) ,CS ) )", "obj1": 0.1968503937007874, "obj2": 0.6778622959272498}, {"determining": "( Max( Max( BR,ACS ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) ) + ( ( RRS + Const ) * ( PN / RRS ) ) )", "choosing": "Max( ( ( MUR * MUC ) - ( ( MUC - RMSe ) + RRSe ) ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.20669291338582677, "obj2": 0.6722671817933589}, {"determining": "( Max( Max( BR,ACS ),( MDR / MRS ) ) + ( ( RRS + Const ) * ( PN / RRS ) ) )", "choosing": "Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.16929133858267717, "obj2": 0.7009678214051934}, {"determining": "( ( FirstVNF_CPU_Server / AMS ) - ( Min( ( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ,Max( FirstVNF_CPU_Server,( RRS + FirstVNF_Mem_Server ) ) ) - DDR ) )", "choosing": "( ( ( ( DS + ( Min( Max( CS,( RMSe * MUR ) ) ,MLU ) - MUC ) ) * Max( Min( ( DS - MUM ) ,( ( ( MUC - RMSe ) + RRSe ) + ( ( CS * MUC ) + Min( MUC ,DS ) ) ) ),DS ) ) + ( ( MUC + RMSe ) - ( CS * CS ) ) ) / Max( ( RRSe - CS ),DS ) )", "obj1": 0.13188976377952755, "obj2": 0.7726455082334093}, {"determining": "Min( Min( ( PN / FirstVNF_Mem ) ,CRS ) ,Max( ( ACS * ACS ),RRS ) )", "choosing": "( ( MUM + CS ) / Min( Min( CS ,DS ) ,( MLU + RMSe ) ) )", "obj1": 0.08661417322834646, "obj2": 0.8568282699141999}, {"determining": "Min( Min( ( FirstVNF_CPU_Server / FirstVNF_Mem ) ,CRS ) ,( FirstVNF_Mem / FirstVNF_RAM ) )", "choosing": "( ( MUM + MUR ) / Min( Min( CS ,DS ) ,( MUM - Min( DS ,RCSe ) ) ) )", "obj1": 0.08858267716535433, "obj2": 0.8564289432227219}, {"determining": "Max( Min( ACS ,( ( CRS * PN ) * PN ) ),( CRS - FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR - RRSe ) / ( Min( ( CS / ( DS * Max( DS,MUC ) ) ) ,DS ) / RCSe ) ) / DS ) - ( CS * MLU ) )", "obj1": 0.2421259842519685, "obj2": 0.6132086742708522}, {"determining": "( ( FirstVNF_CPU_Server / AMS ) - ( Min( ( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ,Const ) - DDR ) )", "choosing": "( ( ( ( DS + ( Min( Max( CS,( RMSe * MUR ) ) ,MLU ) - MUC ) ) * Max( Min( ( DS - MUM ) ,( ( ( MUC - RMSe ) + RRSe ) + ( ( CS * MUC ) + Max( MUM,MUC ) ) ) ),DS ) ) + ( ( MUC + RMSe ) - ( CS * CS ) ) ) / Max( ( RRSe - CS ),DS ) )", "obj1": 0.13188976377952755, "obj2": 0.7726455082334093}, {"determining": "Max( ( ( ( ACS + ( MDR + FirstVNF_CPU_Server ) ) - ( FirstVNF_RAM * DDR ) ) / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6715201842962937}, {"determining": "( Min( MDR ,( ( ( FirstVNF_RAM + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) + Const ) * PN ) ) * Min( ( FirstVNF_RAM + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ,( MDR - CRS ) ) )", "choosing": "Max( ( Min( MUR ,MUC ) - MUM ),( ( RRSe - MUM ) / ( DS - RMSe ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7916308660511866}, {"determining": "( Min( MDR ,( ( Const + Const ) * PN ) ) * Min( ( FirstVNF_RAM + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ,( MDR - CRS ) ) )", "choosing": "Max( ( Min( MUR ,MUC ) - MUM ),( ( RRSe - MUM ) / ( DS - RMSe ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7916308660511866}, {"determining": "Min( Min( ( ( ( FirstVNF_RAM_Server * AMS ) / FirstVNF_RAM ) / FirstVNF_Mem ) ,CRS ) ,Max( ARS,RRS ) )", "choosing": "( ( MUM + MUC ) / Min( Min( CS ,DS ) ,( MLU + CS ) ) )", "obj1": 0.09448818897637795, "obj2": 0.8242489478834862}, {"determining": "Max( ( ( FirstVNF_RAM_Server * AMS ) / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( ( CS / MUC ) - Min( MUM ,CS ) )", "obj1": 0.1968503937007874, "obj2": 0.6778622959272498}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( Const - ( MDR - ARS ) ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),RMSe ) ) ) / Min( ( MUM + MUM ) ,DS ) ) - ( CS / DS ) )", "obj1": 0.14763779527559054, "obj2": 0.7514412692275074}, {"determining": "( ( ACS + AMS ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8785165234946758}, {"determining": "( ( FirstVNF_CPU_Server / AMS ) - ( Min( ( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + ( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) ) ) ,Const ) - DDR ) )", "choosing": "( ( ( ( DS + ( Min( Max( CS,( RMSe * MUR ) ) ,MLU ) - MUC ) ) * Max( DS,DS ) ) + ( ( MUC + RMSe ) - ( CS * CS ) ) ) / Max( ( RRSe - CS ),DS ) )", "obj1": 0.13188976377952755, "obj2": 0.7726455082334093}, {"determining": "( ( FirstVNF_CPU_Server / AMS ) - ( Min( ( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ,Const ) - DDR ) )", "choosing": "( ( ( ( DS + ( Min( Max( CS,( RMSe * MUR ) ) ,MLU ) - MUC ) ) * Max( Min( ( DS - MUM ) ,( ( ( MUC - RMSe ) + RRSe ) + ( ( CS * MUC ) + Max( MUM,MUC ) ) ) ),DS ) ) + ( ( MUC + RMSe ) - ( CS * CS ) ) ) / Max( ( RRSe - CS ),DS ) )", "obj1": 0.13188976377952755, "obj2": 0.7726455082334093}, {"determining": "( Min( ( RRS + ( FirstVNF_RAM_Server * ACS ) ) ,Const ) * Min( ( ( Min( FirstVNF_CPU_Server ,ACS ) * Const ) + FirstVNF_CPU ) ,( CRS - MDR ) ) )", "choosing": "( ( ( Min( MUC ,DS ) - CS ) / Min( Max( ( CS - MUR ),( MUC / ( MUR - MUR ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) ) * RRSe )", "obj1": 0.23622047244094488, "obj2": 0.6133651770629421}, {"determining": "( ( ACS + AMS ) - Min( FirstVNF_CPU ,Min( RRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( MUC ,Max( RCSe,RMSe ) ) - CS ) / ( RCSe / RMSe ) ) * RMSe )", "obj1": 0.21456692913385828, "obj2": 0.6282639664811203}, {"determining": "Max( ( Const - PN ),Max( ( ( BR / FirstVNF_RAM ) - ( Const * ( ( FirstVNF_CPU_Server + ACS ) / FirstVNF_Mem ) ) ),BR ) )", "choosing": "( ( MLU / CS ) * ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6216884786248261}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Max( MLU,CS ) - Max( RRSe,MUR ) )", "obj1": 0.14566929133858267, "obj2": 0.754991873079845}, {"determining": "Min( Min( Max( ( FirstVNF_RAM / PN ),Min( PN ,MDR ) ) ,CRS ) ,Max( ARS,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RCSe / CS ) + ( MUR * Max( MUR,RMSe ) ) ) / Min( RCSe ,( Min( RCSe ,MLU ) - Min( MLU ,( DS - ( MUR * RMSe ) ) ) ) ) ) + MUR )", "obj1": 0.10826771653543307, "obj2": 0.8068688656585846}, {"determining": "( ( FirstVNF_Mem_Server + AMS ) - Min( Min( ( ARS / BR ) ,BR ) ,Max( ARS,FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Max( MUR,MUC ) - MUM ),( ( ( ( MLU - RMSe ) / CS ) - DS ) / ( DS - RMSe ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7916308660511866}, {"determining": "Max( Min( ( DDR - CRS ) ,AMS ),( CRS - FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR - RRSe ) / ( Min( ( CS / ( DS * DS ) ) ,DS ) / RCSe ) ) / DS ) - ( CS * MLU ) )", "obj1": 0.2559055118110236, "obj2": 0.5959279318728518}, {"determining": "Max( Min( ACS ,( ( CRS * PN ) * PN ) ),( CRS - FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR - RRSe ) / ( Min( ( CS / ( DS * Max( DS,MUC ) ) ) ,DS ) / RCSe ) ) / DS ) - ( CS * MLU ) )", "obj1": 0.27165354330708663, "obj2": 0.5948989052395265}, {"determining": "Max( ( ( Min( ( PN + ( Max( Min( FirstVNF_Mem_Server ,CRS ),AMS ) * ( ( ARS / PN ) + FirstVNF_Mem ) ) ) ,FirstVNF_Mem ) * AMS ) - FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( ( ( ( MUC - MUC ) + RRSe ) + RRSe ) ,Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ) / Max( DS,DS ) )", "obj1": 0.08070866141732283, "obj2": 0.8785165234946758}, {"determining": "Max( Min( Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,( PN / FirstVNF_RAM_Server ) ) ,( Min( RRS ,CRS ) * ( MDR - ARS ) ) ),Min( ( PN / RRS ) ,( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * ( ( ( MDR - Const ) - Const ) + MDR ) ) ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),RMSe ) ) ) / Min( CS ,DS ) )", "obj1": 0.11023622047244094, "obj2": 0.8045960462728812}, {"determining": "Max( ( PN / FirstVNF_RAM ),Min( ( Max( FirstVNF_Mem_Server,Const ) + FirstVNF_CPU ) ,( MDR - CRS ) ) )", "choosing": "( Min( Max( DS,MUR ) ,( ( ( Min( MUC ,DS ) - CS ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.11220472440944881, "obj2": 0.8042482485252596}, {"determining": "Max( ( Const - FirstVNF_CPU_Server ),( ( ( Const * ( ( ACS / ARS ) / FirstVNF_Mem ) ) - Min( CRS ,CRS ) ) / BR ) )", "choosing": "Max( ( ( Min( DS ,( Min( Min( MLU ,( MUR / CS ) ) ,( MUC + MLU ) ) / RCSe ) ) * ( RCSe - MLU ) ) * RCSe ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6856896241089451}, {"determining": "Max( ( Const - PN ),Max( ( ( BR / FirstVNF_RAM ) - ( Const * ( ( FirstVNF_CPU_Server + ACS ) / FirstVNF_Mem ) ) ),BR ) )", "choosing": "( ( MLU / CS ) * ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6216884786248261}, {"determining": "Min( Min( ( Min( FirstVNF_Mem ,BR ) * ( DDR + FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM - Const ) * Min( ( MDR / MRS ) ,( Max( FirstVNF_RAM,PN ) - ACS ) ) ) ) ,( Min( ( DDR - CRS ) ,( FirstVNF_RAM_Server * CRS ) ) + ( Min( Const ,DDR ) * ( Const - RRS ) ) ) )", "choosing": "( Min( ( ( RRSe - DS ) / ( MUC - DS ) ) ,Max( ( MLU + MLU ),( DS / MUR ) ) ) + ( ( ( MLU + CS ) + Min( MUR ,MUC ) ) / Max( ( MUR + Max( ( MUM - MUC ),Min( MLU ,( ( MUC + DS ) + Max( RCSe,RMSe ) ) ) ) ),Max( RMSe,MUM ) ) ) )", "obj1": 0.2125984251968504, "obj2": 0.6613372712105986}, {"determining": "Max( ( AMS + RRS ),( RRS / BR ) )", "choosing": "( Min( CS ,Max( MUR,( MLU + RCSe ) ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8785165234946758}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6715201842962937}, {"determining": "( Const - ( Min( ( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ,Const ) - DDR ) )", "choosing": "( ( ( ( DS + ( MUC - MUC ) ) * Max( Min( ( DS - MUM ) ,( ( ( MUC - RMSe ) + RRSe ) + ( ( CS * MUC ) + Max( MUM,MUC ) ) ) ),DS ) ) + ( ( MUC + RMSe ) - ( CS * CS ) ) ) / Max( ( RRSe - CS ),DS ) )", "obj1": 0.13385826771653545, "obj2": 0.7722113839141076}, {"determining": "( Max( Max( BR,ACS ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) ) + ( ( RRS + Const ) * ( PN / RRS ) ) )", "choosing": "Max( ( ( MUR * MUC ) - ( ( MUC - RMSe ) + RRSe ) ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.20669291338582677, "obj2": 0.6722671817933589}, {"determining": "Max( ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) / FirstVNF_RAM ),( ( RRS * ( CRS / MDR ) ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( MUC ,MUM ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.10236220472440945, "obj2": 0.8179051466513801}, {"determining": "( Max( Max( BR,ACS ),( MDR / MRS ) ) + ( ( RRS + Const ) * ( PN / RRS ) ) )", "choosing": "Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6715201842962937}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( RRS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( MUR * MUC ) - ( ( MUC - RMSe ) + RRSe ) ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.16535433070866143, "obj2": 0.7050304142721138}, {"determining": "( ( FirstVNF_CPU_Server / AMS ) - ( Min( ( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ,Const ) - DDR ) )", "choosing": "( ( ( ( DS + ( Min( Max( CS,( RMSe * MUR ) ) ,MLU ) - MUC ) ) * Max( Min( ( DS - MUM ) ,( ( ( MUC - RMSe ) + RRSe ) + ( ( CS * MUC ) + Max( MUM,MUC ) ) ) ),DS ) ) + ( ( MUC + RMSe ) - ( CS * CS ) ) ) / Max( ( RRSe - CS ),DS ) )", "obj1": 0.12598425196850394, "obj2": 0.7736130921907629}, {"determining": "( ( FirstVNF_CPU_Server / AMS ) - Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( RRS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( DS + ( Min( Max( CS,( RMSe * MUR ) ) ,MLU ) - MUC ) ) * Max( Min( ( DS - MUM ) ,( ( ( MUC - RMSe ) + RRSe ) + ( ( CS * MUC ) + Max( MUM,MUC ) ) ) ),DS ) ) + ( ( MUC + RMSe ) - ( CS * CS ) ) ) / Max( ( RRSe - ( Max( ( MUR * MLU ),( MUM + RRSe ) ) - RMSe ) ),DS ) )", "obj1": 0.13582677165354332, "obj2": 0.7625833317065238}, {"determining": "( ( FirstVNF_CPU_Server / AMS ) - ( Min( ( AMS / Max( ( ACS + ( RRS / FirstVNF_Mem_Server ) ),( Max( ARS,ARS ) - Max( PN,Const ) ) ) ) ,Const ) - DDR ) )", "choosing": "( ( ( ( DS + ( Min( Max( CS,( RMSe * MUR ) ) ,MLU ) - MUC ) ) * Max( Min( ( DS - MUM ) ,( ( ( RMSe - MUC ) + RCSe ) + ( ( CS * MUC ) + Max( MUM,MUC ) ) ) ),DS ) ) + ( Max( MLU,RRSe ) + CS ) ) / Max( ( RRSe - CS ),DS ) )", "obj1": 0.12598425196850394, "obj2": 0.7736130921907629}, {"determining": "( Min( MDR ,( Max( ( CRS / Const ),RRS ) * PN ) ) * Min( ( FirstVNF_RAM + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ,( MDR - CRS ) ) )", "choosing": "( ( MLU / CS ) * Max( ( CS - ( MUM + ( RMSe * MUR ) ) ),DS ) )", "obj1": 0.234251968503937, "obj2": 0.6182571273735992}, {"determining": "Max( ( Const - PN ),Max( ( ( BR / FirstVNF_RAM ) - ( Const * ( ( FirstVNF_CPU_Server + ACS ) / FirstVNF_Mem ) ) ),BR ) )", "choosing": "Max( ( Min( MUR ,MUC ) - MUM ),( ( RRSe - MUM ) / ( DS - RMSe ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7916308660511866}, {"determining": "Max( Min( Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,( PN / FirstVNF_RAM_Server ) ) ,( Min( RRS ,CRS ) * ( MDR - ARS ) ) ),Min( ( ( AMS * MDR ) * ( ACS * ACS ) ) ,( Min( RRS ,( PN / RRS ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU / CS ) * ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6216884786248261}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( DS + ( Min( Max( CS,( RMSe * MUR ) ) ,MLU ) - MUC ) ) * Max( Min( ( DS - MUM ) ,( ( ( MUC - RMSe ) + RRSe ) + ( ( CS * MUC ) + Max( MUM,MUC ) ) ) ),DS ) ) + ( ( MUC + RMSe ) - ( CS * CS ) ) ) / Max( ( RRSe - CS ),DS ) )", "obj1": 0.13188976377952755, "obj2": 0.7726455082334093}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( ( FirstVNF_Mem / Min( FirstVNF_Mem_Server ,PN ) ) - CRS ) ,AMS ) - FirstVNF_CPU ) )", "choosing": "( ( ( Min( RRSe ,( RCSe * RMSe ) ) + ( ( ( MLU * ( RMSe * MUM ) ) + MLU ) / Max( CS,MLU ) ) ) + ( RCSe / CS ) ) / Min( ( MUM - MUM ) ,DS ) )", "obj1": 0.11023622047244094, "obj2": 0.8045960462728812}, {"determining": "( Max( ( Const * ( ( FirstVNF_CPU_Server + ACS ) / FirstVNF_Mem ) ),( MDR / MRS ) ) + ( ( RRS + Const ) * ( PN / RRS ) ) )", "choosing": "Max( ( ( ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.16929133858267717, "obj2": 0.7009678214051934}, {"determining": "( Max( ( Const * ( ( FirstVNF_CPU_Server + ACS ) / FirstVNF_Mem ) ),( ( Const - PN ) / MRS ) ) + ( ( RRS + Const ) * ( PN / RRS ) ) )", "choosing": "Max( ( ( ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ) ) * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6715201842962937}, {"determining": "Max( ( Const - PN ),Max( ( ( BR / FirstVNF_RAM ) - ( Const * ( ( FirstVNF_CPU_Server + ACS ) / FirstVNF_Mem ) ) ),BR ) )", "choosing": "Max( ( ( ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6715201842962937}, {"determining": "( Max( ( Const * ( ( FirstVNF_CPU_Server + ACS ) / FirstVNF_Mem ) ),( MDR / MRS ) ) + ( ( RRS + Const ) * ( PN / RRS ) ) )", "choosing": "Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.16929133858267717, "obj2": 0.7009678214051934}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUR - RRSe ) / ( Min( ( CS / ( DS * DS ) ) ,DS ) / RCSe ) ) / DS ) - ( CS * MLU ) )", "obj1": 0.2559055118110236, "obj2": 0.5959279318728518}, {"determining": "Max( Max( Min( PN ,DDR ),Const ),( FirstVNF_Mem_Server / AMS ) )", "choosing": "( ( ( MUC * MUM ) + ( ( ( RMSe / Min( ( ( MUR + MLU ) * ( RMSe / RRSe ) ) ,MUR ) ) - MUR ) - RCSe ) ) / Min( Max( MUR,MLU ) ,Min( MUC ,DS ) ) )", "obj1": 0.1062992125984252, "obj2": 0.8120546728744672}, {"determining": "Max( Min( ACS ,( Min( Max( Max( FirstVNF_Mem,Const ),PN ) ,ACS ) * PN ) ),( CRS - FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR - RRSe ) / ( Min( ( CS / ( MUC - ( RRSe - MUC ) ) ) ,( Min( RMSe ,MLU ) / MUC ) ) / RRSe ) ) / DS ) - ( CS * MLU ) )", "obj1": 0.2421259842519685, "obj2": 0.6132086742708522}, {"determining": "Max( ( ( Const * Max( FirstVNF_Mem_Server,MDR ) ) + ( FirstVNF_RAM_Server / FirstVNF_RAM ) ),AMS )", "choosing": "( Min( ( Min( MUR ,RMSe ) + MUM ) ,( ( MUC - RMSe ) + RRSe ) ) / Max( MUC,MUM ) )", "obj1": 0.08267716535433071, "obj2": 0.8593441314243215}, {"determining": "Max( Min( ACS ,( ( CRS * PN ) * Min( MDR ,( ( Const + Const ) * PN ) ) ) ),( CRS - FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR - RRSe ) / ( Min( ( CS / ( DS * Max( DS,MUC ) ) ) ,DS ) / RCSe ) ) / DS ) - MUM )", "obj1": 0.2047244094488189, "obj2": 0.6774608489205872}, {"determining": "( ( FirstVNF_CPU_Server / AMS ) - ( Min( ( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ,Const ) - DDR ) )", "choosing": "( ( ( ( DS + ( Min( Max( CS,( RMSe * MUR ) ) ,MLU ) - MUC ) ) * Max( Min( ( DS - MUM ) ,( ( ( MUC - RMSe ) + RRSe ) + ( ( CS * MUC ) + Max( MUM,MUC ) ) ) ),DS ) ) + ( ( MUC + RMSe ) - ( CS * CS ) ) ) / Max( ( RRSe - CS ),DS ) )", "obj1": 0.13188976377952755, "obj2": 0.7726455082334093}, {"determining": "( ( FirstVNF_CPU_Server / AMS ) - ( Min( ( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ,Const ) - DDR ) )", "choosing": "( ( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),RMSe ) ) ) / Min( ( MUM + MUM ) ,DS ) ) - ( CS / DS ) )", "obj1": 0.14763779527559054, "obj2": 0.7514412692275074}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( Const - ( MDR - ARS ) ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( DS + ( Min( Max( CS,( RMSe * MUR ) ) ,MLU ) - MUC ) ) * Max( Min( ( DS - MUM ) ,( ( ( MUC - RMSe ) + RRSe ) + ( ( CS * MUC ) + Max( MUM,MUC ) ) ) ),DS ) ) + ( ( MUC + RMSe ) - ( CS * CS ) ) ) / Max( ( RRSe - CS ),DS ) )", "obj1": 0.13188976377952755, "obj2": 0.7726455082334093}, {"determining": "( ( FirstVNF_CPU_Server / AMS ) - ( Min( ( AMS / ( ( ACS + ( FirstVNF_Mem_Server / ( ACS * ACS ) ) ) + RRS ) ) ,Const ) - DDR ) )", "choosing": "( ( ( ( DS + ( Min( Max( CS,( RMSe * MUR ) ) ,MLU ) - MUC ) ) * Max( Min( ( DS - MUM ) ,( ( ( MUC - RMSe ) + RRSe ) + ( ( CS * MUR ) + Max( MUM,MUC ) ) ) ),DS ) ) + ( ( MUC + RMSe ) - ( CS * CS ) ) ) / Max( ( RRSe - CS ),DS ) )", "obj1": 0.13188976377952755, "obj2": 0.7726455082334093}, {"determining": "( ( FirstVNF_CPU_Server / AMS ) - ( Min( ( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ,Const ) - DDR ) )", "choosing": "( ( ( ( DS + ( Min( Max( CS,( RMSe * MUR ) ) ,MLU ) - MUC ) ) * Max( Min( ( DS - MUM ) ,( ( ( MUC - RMSe ) + RRSe ) + ( ( CS * MUC ) + Max( MUM,MUC ) ) ) ),DS ) ) + ( ( MUC + RMSe ) - ( CS * CS ) ) ) / Max( ( RRSe - CS ),DS ) )", "obj1": 0.13188976377952755, "obj2": 0.7726455082334093}], "6": [{"determining": "Min( ( RRS - DDR ) ,Min( FirstVNF_RAM_Server ,AMS ) )", "choosing": "( ( MLU + ( RCSe + MUM ) ) / ( CS * ( RCSe - ( RRSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Const - PN ),Max( ( ( BR / FirstVNF_RAM ) - ( Const * ( ( FirstVNF_CPU_Server + ACS ) / FirstVNF_Mem ) ) ),BR ) )", "choosing": "( ( MLU / CS ) * ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) )", "obj1": 0.234251968503937, "obj2": 0.6182571273735992}, {"determining": "Max( Min( ( DDR - CRS ) ,AMS ),( Min( FirstVNF_RAM_Server ,( DDR / ( ( FirstVNF_RAM_Server * Max( Min( BR ,FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) ) + Max( Min( FirstVNF_RAM_Server ,( ACS - FirstVNF_RAM ) ),Min( ARS ,RRS ) ) ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( ( CS / ( MUC * DS ) ) ,DS ) / RCSe ) / ( MUR - RRSe ) ) / ( MUM + Max( ( RRSe + CS ),DS ) ) ) - ( CS * MLU ) )", "obj1": 0.2559055118110236, "obj2": 0.5959279318728518}, {"determining": "( ( MDR - ACS ) / ( ( ( Max( ( MRS * FirstVNF_CPU_Server ),( MDR - ( AMS + FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM_Server ) * ( FirstVNF_Mem + RRS ) ) / CRS ) )", "choosing": "( Min( RCSe ,( ( ( CS - MUC ) - MUM ) * CS ) ) - Max( RRSe,CS ) )", "obj1": 0.22440944881889763, "obj2": 0.6224125000713557}, {"determining": "Max( ( Const - PN ),Max( ( ( BR / FirstVNF_RAM ) - ( Const * ( Max( ( FirstVNF_Mem_Server / ( RRS * FirstVNF_CPU ) ),FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) ),BR ) )", "choosing": "( ( MLU / CS ) * ( ( ( MUC / MUM ) / ( ( ( MUR / MUC ) - MUM ) * ( CS - MUM ) ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6216884786248261}, {"determining": "( ( ACS + AMS ) - Min( Min( ( ARS / BR ) ,CRS ) ,Max( ARS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU / CS ) * ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6216884786248261}, {"determining": "( Min( MDR ,( ( FirstVNF_CPU_Server * ( RRS * MDR ) ) + AMS ) ) * ( ( Max( ARS,FirstVNF_Mem ) / ( RRS / ( FirstVNF_CPU_Server / ARS ) ) ) / ARS ) )", "choosing": "Max( Min( MUM ,Max( MLU,RCSe ) ),( RRSe / Min( ( ( Max( RCSe,( ( MUR - MUC ) + CS ) ) * Min( ( ( RCSe * MUC ) - MUM ) ,( RMSe * DS ) ) ) / Max( ( MUR * RMSe ),MLU ) ) ,RMSe ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7916308660511866}, {"determining": "( Min( MDR ,( ( FirstVNF_CPU_Server * ( RRS * MDR ) ) + AMS ) ) * ( ( Max( ARS,FirstVNF_Mem ) / ( RRS / ( FirstVNF_CPU_Server / ARS ) ) ) / ARS ) )", "choosing": "Max( Min( MUM ,Max( MLU,RCSe ) ),( RRSe / Min( ( ( Max( RCSe,( ( MUR - MUC ) + CS ) ) * Min( ( ( RCSe * MUC ) - MUM ) ,( RMSe * DS ) ) ) / Max( ( MUR * RMSe ),MLU ) ) ,RMSe ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7916308660511866}, {"determining": "( Min( MDR ,( ( FirstVNF_CPU_Server * ( RRS * MDR ) ) + AMS ) ) * ( ( Max( ARS,FirstVNF_Mem ) / ( RRS / ( FirstVNF_CPU_Server / ARS ) ) ) / ARS ) )", "choosing": "Max( Min( MUM ,Max( MLU,RCSe ) ),( RRSe / Min( ( ( Max( RCSe,( ( MUR - MUC ) + CS ) ) * Min( ( ( RCSe * MUC ) - MUM ) ,( RMSe * DS ) ) ) / Max( ( MUR * RMSe ),MLU ) ) ,RMSe ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7916308660511866}, {"determining": "( Min( MDR ,( ( FirstVNF_CPU_Server * ( RRS * MDR ) ) + AMS ) ) * ( ( Max( ARS,FirstVNF_Mem ) / ( RRS / ( FirstVNF_CPU_Server / ARS ) ) ) / ARS ) )", "choosing": "Max( Min( MUM ,Max( MLU,RCSe ) ),( RRSe / Min( ( ( Max( RCSe,( ( MUR - MUC ) + CS ) ) * Min( ( ( RCSe * MUC ) - MUM ) ,( RMSe * DS ) ) ) / Max( ( MUR * RMSe ),MLU ) ) ,RMSe ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7916308660511866}, {"determining": "( Min( MDR ,( ( FirstVNF_CPU_Server * ( RRS * MDR ) ) + AMS ) ) * ( ( Max( ARS,FirstVNF_Mem ) / ( RRS / ( FirstVNF_CPU_Server / ARS ) ) ) / ARS ) )", "choosing": "Max( Min( MUM ,Max( MLU,RCSe ) ),( RRSe / Min( ( ( Max( RCSe,( ( MUR - MUC ) + CS ) ) * Min( ( ( RCSe * MUC ) - MUM ) ,( RMSe * DS ) ) ) / Max( ( MUR * RMSe ),MLU ) ) ,RMSe ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7916308660511866}, {"determining": "( Min( MDR ,( ( FirstVNF_CPU_Server * ( RRS * MDR ) ) + AMS ) ) * ( ( Max( ARS,FirstVNF_Mem ) / ( RRS / ( FirstVNF_CPU_Server / ARS ) ) ) / ARS ) )", "choosing": "Max( Min( MUM ,Max( MLU,RCSe ) ),( RRSe / Min( ( ( Max( RCSe,( ( MUR - MUC ) + CS ) ) * Min( ( ( RCSe * MUC ) - MUM ) ,( RMSe * DS ) ) ) / Max( ( MUR * RMSe ),MLU ) ) ,RMSe ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7916308660511866}, {"determining": "( Min( MDR ,( ( Const + Const ) * PN ) ) * Min( ( FirstVNF_RAM + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ,( MDR - CRS ) ) )", "choosing": "Max( ( Min( MUR ,MUC ) - MUM ),( ( RRSe - MUM ) / ( DS - RMSe ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7916308660511866}, {"determining": "Max( ( CRS - FirstVNF_Mem ),Min( ACS ,Max( Max( FirstVNF_CPU,Max( FirstVNF_CPU,DDR ) ),( AMS / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( RCSe ,RCSe ) + CS ) / DS ) - ( CS * RRSe ) )", "obj1": 0.2421259842519685, "obj2": 0.6132086742708522}, {"determining": "Max( ( PN - PN ),Max( ( Max( Max( ( Min( ( PN - ACS ) ,AMS ) / RRS ),FirstVNF_RAM_Server ),DDR ) - ( Const * ( ( FirstVNF_CPU_Server + ACS ) / FirstVNF_Mem ) ) ),MRS ) )", "choosing": "Max( ( RRSe - Max( RCSe,( Max( ( Min( CS ,MUC ) / CS ),MLU ) + MUM ) ) ),( MUC / ( MUR - ( ( MUR - MUC ) * ( ( MUR * ( RCSe - MUC ) ) + MLU ) ) ) ) )", "obj1": 0.16929133858267717, "obj2": 0.7009678214051934}, {"determining": "( ( FirstVNF_RAM + Max( AMS,FirstVNF_RAM ) ) - ( ( PN + MRS ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( DS + ( Min( MUM ,( ( CS * RCSe ) + MUM ) ) / MUR ) ),RRSe ) / ( MUC + Min( MUC ,DS ) ) )", "obj1": 0.1515748031496063, "obj2": 0.7337359951150401}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( ( MLU / CS ) * ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6216884786248261}, {"determining": "( Max( Max( BR,ACS ),( MDR / MRS ) ) + ( ( RRS + Const ) * ( PN / RRS ) ) )", "choosing": "Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.16929133858267717, "obj2": 0.7009678214051934}, {"determining": "Min( Min( ( PN / FirstVNF_Mem ) ,CRS ) ,Max( ( ACS * ACS ),RRS ) )", "choosing": "( ( MUM + CS ) / Min( Min( CS ,DS ) ,( MLU + RMSe ) ) )", "obj1": 0.08661417322834646, "obj2": 0.8568282699141999}, {"determining": "Min( Min( ( FirstVNF_CPU_Server / FirstVNF_Mem ) ,CRS ) ,( FirstVNF_Mem / FirstVNF_RAM ) )", "choosing": "( ( MUM + MUR ) / Min( Min( CS ,DS ) ,( MUM - Min( DS ,RCSe ) ) ) )", "obj1": 0.08858267716535433, "obj2": 0.8564289432227219}, {"determining": "Max( Min( ACS ,( ( CRS * PN ) * PN ) ),( CRS - FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR - RRSe ) / ( Min( ( CS / ( DS * Max( DS,MUC ) ) ) ,DS ) / RCSe ) ) / DS ) - ( CS * MLU ) )", "obj1": 0.2421259842519685, "obj2": 0.6132086742708522}, {"determining": "( Min( MDR ,( ( ( FirstVNF_RAM + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) + Const ) * PN ) ) * Min( ( FirstVNF_RAM + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ,( MDR - CRS ) ) )", "choosing": "Max( ( Min( MUR ,MUC ) - MUM ),( ( RRSe - MUM ) / ( DS - RMSe ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7916308660511866}, {"determining": "( Min( MDR ,( ( Const + Const ) * PN ) ) * Min( ( FirstVNF_RAM + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ,( MDR - CRS ) ) )", "choosing": "Max( ( Min( MUR ,MUC ) - MUM ),( ( RRSe - MUM ) / ( DS - RMSe ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7916308660511866}, {"determining": "Min( Min( ( ( ( FirstVNF_RAM_Server * AMS ) / FirstVNF_RAM ) / FirstVNF_Mem ) ,CRS ) ,Max( ARS,RRS ) )", "choosing": "( ( MUM + MUC ) / Min( Min( CS ,DS ) ,( MLU + CS ) ) )", "obj1": 0.09448818897637795, "obj2": 0.8242489478834862}, {"determining": "( Min( ( RRS + ( FirstVNF_RAM_Server * ACS ) ) ,Const ) * Min( ( ( Min( FirstVNF_CPU_Server ,ACS ) * Const ) + FirstVNF_CPU ) ,( CRS - MDR ) ) )", "choosing": "( ( ( Min( MUC ,DS ) - CS ) / Min( Max( ( CS - MUR ),( MUC / ( MUR - MUR ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) ) * RRSe )", "obj1": 0.23622047244094488, "obj2": 0.6133651770629421}, {"determining": "Max( ( Const - PN ),Max( ( ( BR / FirstVNF_RAM ) - ( Const * ( ( FirstVNF_CPU_Server + ACS ) / FirstVNF_Mem ) ) ),BR ) )", "choosing": "( ( MLU / CS ) * ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6216884786248261}, {"determining": "Min( Min( Max( ( FirstVNF_RAM / PN ),Min( PN ,MDR ) ) ,CRS ) ,Max( ARS,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RCSe / CS ) + ( MUR * Max( MUR,RMSe ) ) ) / Min( RCSe ,( Min( RCSe ,MLU ) - Min( MLU ,( DS - ( MUR * RMSe ) ) ) ) ) ) + MUR )", "obj1": 0.10826771653543307, "obj2": 0.8068688656585846}, {"determining": "( ( FirstVNF_Mem_Server + AMS ) - Min( Min( ( ARS / BR ) ,BR ) ,Max( ARS,FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Max( MUR,MUC ) - MUM ),( ( ( ( MLU - RMSe ) / CS ) - DS ) / ( DS - RMSe ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7916308660511866}, {"determining": "Max( Min( Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,( PN / FirstVNF_RAM_Server ) ) ,( Min( RRS ,CRS ) * ( MDR - ARS ) ) ),Min( ( PN / RRS ) ,( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * ( ( ( MDR - Const ) - Const ) + MDR ) ) ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),RMSe ) ) ) / Min( CS ,DS ) )", "obj1": 0.11023622047244094, "obj2": 0.8045960462728812}, {"determining": "Max( ( Const - FirstVNF_CPU_Server ),( ( ( Const * ( ( ACS / ARS ) / FirstVNF_Mem ) ) - Min( CRS ,CRS ) ) / BR ) )", "choosing": "Max( ( ( Min( DS ,( Min( Min( MLU ,( MUR / CS ) ) ,( MUC + MLU ) ) / RCSe ) ) * ( RCSe - MLU ) ) * RCSe ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6856896241089451}, {"determining": "Max( ( Const - PN ),Max( ( ( BR / FirstVNF_RAM ) - ( Const * ( ( FirstVNF_CPU_Server + ACS ) / FirstVNF_Mem ) ) ),BR ) )", "choosing": "( ( MLU / CS ) * ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6216884786248261}, {"determining": "Max( ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) / FirstVNF_RAM ),( ( RRS * ( CRS / MDR ) ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( MUC ,MUM ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.10236220472440945, "obj2": 0.8179051466513801}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( RRS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( MUR * MUC ) - ( ( MUC - RMSe ) + RRSe ) ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.16535433070866143, "obj2": 0.7050304142721138}, {"determining": "( Min( MDR ,( Max( ( CRS / Const ),RRS ) * PN ) ) * Min( ( FirstVNF_RAM + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ,( MDR - CRS ) ) )", "choosing": "( ( MLU / CS ) * Max( ( CS - ( MUM + ( RMSe * MUR ) ) ),DS ) )", "obj1": 0.234251968503937, "obj2": 0.6182571273735992}, {"determining": "Max( ( Const - PN ),Max( ( ( BR / FirstVNF_RAM ) - ( Const * ( ( FirstVNF_CPU_Server + ACS ) / FirstVNF_Mem ) ) ),BR ) )", "choosing": "Max( ( Min( MUR ,MUC ) - MUM ),( ( RRSe - MUM ) / ( DS - RMSe ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7916308660511866}, {"determining": "Max( Min( Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,( PN / FirstVNF_RAM_Server ) ) ,( Min( RRS ,CRS ) * ( MDR - ARS ) ) ),Min( ( ( AMS * MDR ) * ( ACS * ACS ) ) ,( Min( RRS ,( PN / RRS ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU / CS ) * ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6216884786248261}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( ( FirstVNF_Mem / Min( FirstVNF_Mem_Server ,PN ) ) - CRS ) ,AMS ) - FirstVNF_CPU ) )", "choosing": "( ( ( Min( RRSe ,( RCSe * RMSe ) ) + ( ( ( MLU * ( RMSe * MUM ) ) + MLU ) / Max( CS,MLU ) ) ) + ( RCSe / CS ) ) / Min( ( MUM - MUM ) ,DS ) )", "obj1": 0.11023622047244094, "obj2": 0.8045960462728812}, {"determining": "( Max( ( Const * ( ( FirstVNF_CPU_Server + ACS ) / FirstVNF_Mem ) ),( MDR / MRS ) ) + ( ( RRS + Const ) * ( PN / RRS ) ) )", "choosing": "Max( ( ( ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.16929133858267717, "obj2": 0.7009678214051934}, {"determining": "( Max( ( Const * ( ( FirstVNF_CPU_Server + ACS ) / FirstVNF_Mem ) ),( MDR / MRS ) ) + ( ( RRS + Const ) * ( PN / RRS ) ) )", "choosing": "Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.16929133858267717, "obj2": 0.7009678214051934}, {"determining": "Max( Max( Min( PN ,DDR ),Const ),( FirstVNF_Mem_Server / AMS ) )", "choosing": "( ( ( MUC * MUM ) + ( ( ( RMSe / Min( ( ( MUR + MLU ) * ( RMSe / RRSe ) ) ,MUR ) ) - MUR ) - RCSe ) ) / Min( Max( MUR,MLU ) ,Min( MUC ,DS ) ) )", "obj1": 0.1062992125984252, "obj2": 0.8120546728744672}, {"determining": "Max( Min( ACS ,( Min( Max( Max( FirstVNF_Mem,Const ),PN ) ,ACS ) * PN ) ),( CRS - FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR - RRSe ) / ( Min( ( CS / ( MUC - ( RRSe - MUC ) ) ) ,( Min( RMSe ,MLU ) / MUC ) ) / RRSe ) ) / DS ) - ( CS * MLU ) )", "obj1": 0.2421259842519685, "obj2": 0.6132086742708522}, {"determining": "Max( ( ( Const * Max( FirstVNF_Mem_Server,MDR ) ) + ( FirstVNF_RAM_Server / FirstVNF_RAM ) ),AMS )", "choosing": "( Min( ( Min( MUR ,RMSe ) + MUM ) ,( ( MUC - RMSe ) + RRSe ) ) / Max( MUC,MUM ) )", "obj1": 0.08267716535433071, "obj2": 0.8593441314243215}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),RMSe ) ) ) / Min( ( MUM + MUM ) ,DS ) )", "obj1": 0.11023622047244094, "obj2": 0.8045960462728812}, {"determining": "( Max( PN,( Const / FirstVNF_Mem_Server ) ) * Min( ( Max( FirstVNF_Mem_Server,Const ) + FirstVNF_RAM ) ,( MDR - CRS ) ) )", "choosing": "( ( ( Min( MUC ,DS ) - CS ) / Max( Min( ( MUR - ( DS + Max( Max( MLU,RRSe ),( MUR / RMSe ) ) ) ) ,RRSe ),RCSe ) ) * RMSe )", "obj1": 0.23622047244094488, "obj2": 0.6133651770629421}, {"determining": "( Min( ( RRS + ( FirstVNF_RAM_Server * ACS ) ) ,Const ) * Min( ( Max( FirstVNF_Mem_Server,Const ) + FirstVNF_CPU ) ,( MDR - CRS ) ) )", "choosing": "( ( ( Min( MUC ,DS ) - CS ) / Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) ) * RMSe )", "obj1": 0.23622047244094488, "obj2": 0.6133651770629421}, {"determining": "( Max( Max( BR,ACS ),( MDR / MRS ) ) + ( ( RRS + Const ) * ( PN / RRS ) ) )", "choosing": "Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.16929133858267717, "obj2": 0.7009678214051934}, {"determining": "( ( ACS + ( ACS + ( FirstVNF_Mem_Server / RRS ) ) ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.12401574803149606, "obj2": 0.7629829892627714}, {"determining": "( ( Min( ( AMS / ( ( ACS + ( ACS * ( FirstVNF_RAM - ACS ) ) ) + RRS ) ) ,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( ( MUC - RMSe ) + RRSe ) + ( ( CS * MUC ) + Max( ( Min( Max( MLU,CS ) ,CS ) + MUC ),MUC ) ) ) + ( MUC / DS ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6542981229753645}, {"determining": "( ( FirstVNF_RAM + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( MUC + Min( MUC ,DS ) ) )", "obj1": 0.14173228346456693, "obj2": 0.7399312925274939}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.16929133858267717, "obj2": 0.7009678214051934}, {"determining": "( Max( Max( BR,ACS ),( MDR / MRS ) ) + ( ( RRS + ( Max( Const,( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( ( AMS / MDR ) / PN ) ) ) - ( PN + CRS ) ) ) * ( PN / RRS ) ) )", "choosing": "Max( ( ( MUC / MUC ) - MUC ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7098523390358968}, {"determining": "( Max( Min( ( MDR * ( ( MDR * FirstVNF_RAM ) + FirstVNF_RAM_Server ) ) ,( ( ( BR * FirstVNF_CPU ) * ARS ) * ARS ) ),Max( BR,ACS ) ) + ( ( RRS + Const ) * ( PN / RRS ) ) )", "choosing": "Max( ( ( MUR * MUC ) - Max( RRSe,MUC ) ),Min( MLU ,( ( ( MUR + ( MUC - Max( RRSe,Min( RRSe ,RMSe ) ) ) ) - ( ( MUR * MUM ) / ( Max( DS,( MUR + MUM ) ) / MLU ) ) ) * MUR ) ) )", "obj1": 0.16929133858267717, "obj2": 0.7009678214051934}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( ( MRS - Min( FirstVNF_Mem ,ACS ) ) + FirstVNF_RAM ) ,( RRS * FirstVNF_Mem ) ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( Min( ( ( MUR * ( ( RMSe / CS ) / ( MUC + RMSe ) ) ) + CS ) ,Max( ( MLU / MUC ),RRSe ) ) ,Max( ( MUR - ( MUC * MLU ) ),Max( ( RRSe * ( DS * MUM ) ),CS ) ) ) - CS ),( ( MUR * MUC ) - MUM ) )", "obj1": 0.16535433070866143, "obj2": 0.7050304142721138}, {"determining": "( ( ( Const * ( ( FirstVNF_CPU_Server + ( FirstVNF_CPU - AMS ) ) / FirstVNF_Mem ) ) / ( MDR / MRS ) ) + ( ( RRS + Const ) * ( PN / RRS ) ) )", "choosing": "Max( ( ( ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( ( Min( ( MUC - RMSe ) ,RRSe ) + MUR ) ,MUM ) ) * MUC ) + MUM ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.17716535433070865, "obj2": 0.6935412291530012}, {"determining": "Max( ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) / FirstVNF_RAM ),( ( RRS * ( CRS / MDR ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.16929133858267717, "obj2": 0.7009678214051934}, {"determining": "( ( FirstVNF_CPU_Server / AMS ) - Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( RRS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( MUR - RRSe ) / ( Min( ( CS / ( DS * Max( DS,MUC ) ) ) ,DS ) / RCSe ) ) / DS ) - ( CS * MLU ) )", "obj1": 0.2421259842519685, "obj2": 0.6132086742708522}, {"determining": "( Const - ( Min( ( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ,Const ) - DDR ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( MUC + Min( MUC ,DS ) ) )", "obj1": 0.1515748031496063, "obj2": 0.7337359951150401}, {"determining": "( Max( Max( BR,ACS ),( MDR / MRS ) ) + ( ( RRS + Const ) * ( PN / RRS ) ) )", "choosing": "( ( MUM + CS ) / Min( Min( CS ,DS ) ,( MLU + CS ) ) )", "obj1": 0.08858267716535433, "obj2": 0.8564289432227219}, {"determining": "( ( FirstVNF_CPU_Server + AMS ) - ( Min( ( FirstVNF_Mem_Server / DDR ) ,( ( CRS + Min( FirstVNF_CPU ,Const ) ) - ( FirstVNF_CPU_Server / AMS ) ) ) - DDR ) )", "choosing": "Max( ( RRSe - Max( RRSe,DS ) ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.18110236220472442, "obj2": 0.6926538339779507}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),RMSe ) ) ) / Min( CS ,DS ) )", "obj1": 0.11023622047244094, "obj2": 0.8045960462728812}, {"determining": "( ( ACS + AMS ) - Min( Min( ( ARS / BR ) ,CRS ) ,Max( ARS,( Min( ( DDR - ( ( ACS + AMS ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ,AMS ) - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MLU / CS ) * ( ( ( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) )", "obj1": 0.20669291338582677, "obj2": 0.6423100891223898}, {"determining": "( ( ACS + AMS ) - Min( Min( ( ARS / BR ) ,CRS ) ,Max( ARS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU / CS ) * ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) )", "obj1": 0.2047244094488189, "obj2": 0.6498046536786874}, {"determining": "Max( Min( ( DDR - CRS ) ,AMS ),( CRS - FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR - RRSe ) / ( Min( ( CS / ( DS * DS ) ) ,DS ) / RCSe ) ) / DS ) - ( CS * MLU ) )", "obj1": 0.25196850393700787, "obj2": 0.6032539937669388}, {"determining": "Max( Min( Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,( PN / FirstVNF_RAM_Server ) ) ,( Min( RRS ,CRS ) * ( MDR - ARS ) ) ),Min( ( PN / RRS ) ,( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * Max( Max( BR,ACS ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),RMSe ) ) ) / ( MUR * MUC ) )", "obj1": 0.21456692913385828, "obj2": 0.627808780237427}, {"determining": "Max( Min( Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,( PN / FirstVNF_RAM_Server ) ) ,( Min( RRS ,CRS ) * ( MDR - ARS ) ) ),Min( ( PN / RRS ) ,( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * ( ( ( MDR - Const ) - Const ) + MDR ) ) ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),RMSe ) ) ) / Min( CS ,DS ) )", "obj1": 0.11023622047244094, "obj2": 0.8045960462728812}, {"determining": "( Max( ( Const * ( ( FirstVNF_CPU_Server + ACS ) / FirstVNF_Mem ) ),( MDR / ( RRS / ( FirstVNF_CPU_Server / ARS ) ) ) ) + ( ( RRS + Const ) * ( PN / RRS ) ) )", "choosing": "Max( ( Min( Max( MUM,( MUR + MLU ) ) ,DS ) - MUM ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.16929133858267717, "obj2": 0.7009678214051934}, {"determining": "( Max( ( Const * ( ( FirstVNF_CPU_Server + ACS ) / FirstVNF_Mem ) ),( MDR / MRS ) ) + ( ( RRS + Const ) * ( PN / RRS ) ) )", "choosing": "Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.16929133858267717, "obj2": 0.7009678214051934}, {"determining": "Max( Min( ( DDR - CRS ) ,( Min( RRS ,CRS ) * ( MDR - ARS ) ) ),Min( ( ( AMS * MDR ) * ( ACS * ACS ) ) ,( Min( RRS ,( PN / RRS ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU / CS ) * ( ( ( MUC / ( Min( ( CS / ( DS * DS ) ) ,DS ) / RCSe ) ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) )", "obj1": 0.13582677165354332, "obj2": 0.758968678232944}, {"determining": "Max( Min( ( DDR - CRS ) ,AMS ),( CRS - FirstVNF_Mem ) )", "choosing": "( ( MLU / CS ) * ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6216884786248261}, {"determining": "Max( ( Const - PN ),Max( ( ( BR / FirstVNF_RAM ) - ( Const * ( ( FirstVNF_CPU_Server + ACS ) / FirstVNF_Mem ) ) ),BR ) )", "choosing": "( ( MLU / CS ) * ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6216884786248261}, {"determining": "( Min( MDR ,( ( Const + Const ) * PN ) ) * Min( ( FirstVNF_RAM + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ,( MDR - CRS ) ) )", "choosing": "Max( ( Min( MUR ,MUC ) - MUM ),( ( RRSe - MUM ) / ( DS - RMSe ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7916308660511866}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,DDR ) ,CRS ) ,Max( ARS,RRS ) )", "choosing": "( MUM / Min( Min( CS ,( DS - RRSe ) ) ,( MLU + CS ) ) )", "obj1": 0.10039370078740158, "obj2": 0.818334760948769}, {"determining": "Min( Min( ( ( ( FirstVNF_RAM_Server * AMS ) / FirstVNF_RAM ) / FirstVNF_Mem ) ,CRS ) ,Max( ARS,RRS ) )", "choosing": "Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6856896241089451}, {"determining": "Max( ( Const - PN ),Max( ( ( FirstVNF_CPU_Server * ( ( Min( Min( MDR ,Const ) ,( PN / FirstVNF_Mem ) ) + MDR ) / FirstVNF_Mem ) ) - ( BR / FirstVNF_RAM ) ),BR ) )", "choosing": "( ( MUM + MUC ) / Min( Min( CS ,DS ) ,( MLU * Min( RRSe ,( Min( ( ( RCSe / MLU ) - DS ) ,( DS - ( RCSe - MUC ) ) ) * MUC ) ) ) ) )", "obj1": 0.09448818897637795, "obj2": 0.8242489478834862}, {"determining": "Max( ( PN / Max( Const,MDR ) ),( Min( ( ( AMS + ( AMS * MRS ) ) - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + ( ARS + RRS ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( Max( MUR,MUC ) ,( ( Min( Min( RRSe ,( Min( MUM ,MUR ) + ( DS / MUR ) ) ) ,( MLU + Max( ( MUR * CS ),Min( CS ,RRSe ) ) ) ) - RMSe ) + RRSe ) ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7098523390358968}, {"determining": "( Min( MDR ,( ( Const + Const ) * PN ) ) * Min( ( FirstVNF_RAM + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ,( MDR - CRS ) ) )", "choosing": "Max( ( Min( MUR ,MUC ) - MUM ),( ( RRSe - MUM ) / ( DS - RMSe ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7916308660511866}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),RMSe ) ) ) / Min( ( MUM + MUM ) ,DS ) )", "obj1": 0.11023622047244094, "obj2": 0.8045960462728812}, {"determining": "( Min( MDR ,( ( ( FirstVNF_RAM + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) + Const ) * PN ) ) * Min( ( FirstVNF_RAM + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ,( MDR - CRS ) ) )", "choosing": "Max( ( Min( MUR ,MUC ) - MUM ),( ( RRSe - MUM ) / ( DS - RMSe ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7916308660511866}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( RRS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( MUR * MUC ) - ( ( MUC - RMSe ) + RRSe ) ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.16535433070866143, "obj2": 0.7050304142721138}, {"determining": "( ( ACS + AMS ) - Min( Min( ( ARS / BR ) ,CRS ) ,Max( ARS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU / CS ) * ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6216884786248261}, {"determining": "Max( ( ( Min( ( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ,Max( FirstVNF_CPU_Server,( RRS + FirstVNF_Mem_Server ) ) ) * AMS ) / FirstVNF_RAM ),( Min( ( DDR - ( ( ACS + AMS ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),DS ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.1673228346456693, "obj2": 0.7034177727530666}, {"determining": "Max( ( ( Min( ( PN + ( FirstVNF_RAM * ( ( ARS / PN ) + FirstVNF_Mem ) ) ) ,FirstVNF_Mem ) * AMS ) / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,RMSe ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8764243750912434}, {"determining": "Max( Min( ACS ,( Min( Max( DDR,PN ) ,ACS ) * PN ) ),( CRS - FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR - RRSe ) / ( Min( ( CS / ( MUC - ( RRSe - MUC ) ) ) ,DS ) / RCSe ) ) / DS ) - ( CS * MLU ) )", "obj1": 0.2421259842519685, "obj2": 0.6132086742708522}, {"determining": "Max( Min( ACS ,( Min( Max( Max( FirstVNF_Mem,Const ),PN ) ,ACS ) * PN ) ),( CRS - FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR - RRSe ) / ( Min( ( CS / ( MUC - ( RRSe - MUC ) ) ) ,( Min( RMSe ,MLU ) / MUC ) ) / RRSe ) ) / DS ) - ( CS * MLU ) )", "obj1": 0.24803149606299213, "obj2": 0.6035553425063057}, {"determining": "Max( Min( ACS ,( Min( Max( Max( FirstVNF_Mem,Const ),PN ) ,ACS ) * PN ) ),( CRS - FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR - RRSe ) / ( Min( ( CS / ( MUC - ( RRSe - MUC ) ) ) ,( Min( RMSe ,MLU ) / MUC ) ) / RRSe ) ) / DS ) - ( CS * MLU ) )", "obj1": 0.24803149606299213, "obj2": 0.6035553425063057}, {"determining": "Max( Min( ACS ,( Min( Max( Max( FirstVNF_Mem,Const ),PN ) ,ACS ) * PN ) ),( CRS - FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR - RRSe ) / ( Min( ( CS / ( MUC - ( RRSe - MUC ) ) ) ,( Min( RMSe ,MLU ) / MUC ) ) / RRSe ) ) / DS ) - ( CS * MLU ) )", "obj1": 0.24803149606299213, "obj2": 0.6035553425063057}, {"determining": "( Max( ( Const * ( ( FirstVNF_CPU_Server + ACS ) / FirstVNF_Mem ) ),Min( Const ,AMS ) ) + ( ( RRS - Const ) * ( PN / RRS ) ) )", "choosing": "Max( Min( ( ( MUM * ( ( MUR + RMSe ) * RRSe ) ) * MUM ) ,( ( ( Max( ( ( RMSe / RCSe ) / CS ),RRSe ) - RCSe ) + RRSe ) + MUC ) ),( ( MUR * CS ) - MUM ) )", "obj1": 0.16929133858267717, "obj2": 0.7009678214051934}, {"determining": "Max( Min( ( FirstVNF_Mem_Server + DDR ) ,Const ),( FirstVNF_RAM / PN ) )", "choosing": "Max( ( ( MUR * MUC ) - ( ( MUC - RMSe ) + ( ( RMSe + ( CS / RMSe ) ) / ( Min( Min( MLU ,( DS + RMSe ) ) ,CS ) * Max( ( RRSe * RMSe ),Min( ( CS / MUM ) ,RMSe ) ) ) ) ) ),Min( Max( DS,Max( ( CS + Min( RMSe ,Min( ( RRSe + RMSe ) ,RCSe ) ) ),DS ) ) ,Min( MLU ,( ( RCSe + MUC ) - MLU ) ) ) )", "obj1": 0.16535433070866143, "obj2": 0.7050304142721138}, {"determining": "( Max( ( Const * ( ( FirstVNF_CPU_Server + ACS ) / FirstVNF_Mem ) ),( ( Const - PN ) / MRS ) ) + ( ( RRS + Const ) * ( PN / RRS ) ) )", "choosing": "Max( ( ( ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ) ) * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.19291338582677164, "obj2": 0.6796928754041465}, {"determining": "Max( ( ( FirstVNF_RAM_Server * AMS ) / FirstVNF_RAM ),( Min( ( DDR - ( ( ACS + AMS ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ,( AMS / ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) + RRS ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( RMSe,MUC ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.8792625357489905}, {"determining": "( ( FirstVNF_CPU_Server / AMS ) - ( Min( ( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ,Const ) - DDR ) )", "choosing": "Max( ( ( MUR * MUC ) - ( ( MUC - RMSe ) + RRSe ) ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.16535433070866143, "obj2": 0.7050304142721138}, {"determining": "Max( ( Const - PN ),Max( ( ( BR / ( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ) - ( Const * ( ( FirstVNF_CPU_Server + ACS ) / FirstVNF_Mem ) ) ),BR ) )", "choosing": "Max( ( ( MUR * MUC ) - MUM ),( ( ( MUC - RMSe ) + RRSe ) / ( MUR - MUR ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6856896241089451}, {"determining": "Max( ARS,Min( ( PN / RRS ) ,( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * ( ( ( MDR - Const ) - Const ) + MDR ) ) ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) ) ) ) / Min( CS ,DS ) )", "obj1": 0.11220472440944881, "obj2": 0.7952031652215169}, {"determining": "( ( ACS + AMS ) - Min( Min( ( ARS / BR ) ,CRS ) ,Max( ARS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU / CS ) * ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6216884786248261}, {"determining": "Max( Min( Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,( PN / FirstVNF_RAM_Server ) ) ,( Min( RRS ,CRS ) * ( MDR - ARS ) ) ),Min( ( PN / RRS ) ,( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * ( ( ( MDR - Const ) - Const ) + MDR ) ) ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),RMSe ) ) ) / Min( CS ,DS ) )", "obj1": 0.11023622047244094, "obj2": 0.8045960462728812}, {"determining": "Min( Min( Max( Min( FirstVNF_Mem ,BR ),( AMS + FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM - Const ) * ( FirstVNF_CPU_Server + RRS ) ) ) ,( Min( ( DDR - CRS ) ,( FirstVNF_RAM_Server * CRS ) ) + ( Min( Const ,DDR ) * ( Const - RRS ) ) ) )", "choosing": "( ( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),RMSe ) ) ) / Min( ( MUM + MUM ) ,DS ) ) - ( CS / DS ) )", "obj1": 0.13385826771653545, "obj2": 0.7610224563793645}, {"determining": "( Max( ( ARS + ( DDR / ( ( MRS + BR ) * CRS ) ) ),( MDR / MRS ) ) + ( ( RRS + Const ) * ( AMS / RRS ) ) )", "choosing": "Max( ( Min( MUR ,MUC ) - MUM ),( ( Max( DS,Max( RCSe,MUC ) ) - CS ) / ( DS - RMSe ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7916308660511866}, {"determining": "( FirstVNF_CPU_Server + ( ( RRS + Const ) * ( PN / RRS ) ) )", "choosing": "Max( ( ( MUR * MUC ) - MUM ),( Min( ( Min( MUC ,DS ) * MLU ) ,CS ) / ( MUR - MUR ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6821675089752433}, {"determining": "Max( Min( ( DDR - CRS ) ,AMS ),( CRS - FirstVNF_Mem ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),RMSe ) ) ) / Min( ( MUM + MUM ) ,DS ) )", "obj1": 0.11811023622047244, "obj2": 0.7951388694491515}, {"determining": "Max( Min( ( DDR - CRS ) ,AMS ),( CRS - Min( Const ,( AMS / ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) + RRS ) ) ) ) )", "choosing": "( ( ( ( MUR - RRSe ) / ( Min( ( CS / RMSe ) ,DS ) / RCSe ) ) / DS ) - ( CS * MLU ) )", "obj1": 0.25393700787401574, "obj2": 0.6029751219688131}], "7": [{"determining": "Min( ( RRS - DDR ) ,Min( FirstVNF_RAM_Server ,AMS ) )", "choosing": "( ( MLU + ( RCSe + MUM ) ) / ( CS * ( RCSe - ( RRSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Const - PN ),Max( ( ( BR / FirstVNF_RAM ) - ( Const * ( ( FirstVNF_CPU_Server + ACS ) / FirstVNF_Mem ) ) ),BR ) )", "choosing": "( ( MLU / CS ) * ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) )", "obj1": 0.234251968503937, "obj2": 0.6182571273735992}, {"determining": "( ( MDR - ACS ) / ( ( ( Max( ( MRS * FirstVNF_CPU_Server ),( MDR - ( AMS + FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM_Server ) * ( FirstVNF_Mem + RRS ) ) / CRS ) )", "choosing": "( Min( RCSe ,( ( ( CS - MUC ) - MUM ) * CS ) ) - Max( RRSe,CS ) )", "obj1": 0.22440944881889763, "obj2": 0.6224125000713557}, {"determining": "Max( ( Const - PN ),Max( ( ( BR / FirstVNF_RAM ) - ( Const * ( Max( ( FirstVNF_Mem_Server / ( RRS * FirstVNF_CPU ) ),FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) ),BR ) )", "choosing": "( ( MLU / CS ) * ( ( ( MUC / MUM ) / ( ( ( MUR / MUC ) - MUM ) * ( CS - MUM ) ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6216884786248261}, {"determining": "( ( ACS + AMS ) - Min( Min( ( ARS / BR ) ,CRS ) ,Max( ARS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU / CS ) * ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6216884786248261}, {"determining": "( ( FirstVNF_RAM + Max( AMS,FirstVNF_RAM ) ) - ( ( PN + MRS ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( DS + ( Min( MUM ,( ( CS * RCSe ) + MUM ) ) / MUR ) ),RRSe ) / ( MUC + Min( MUC ,DS ) ) )", "obj1": 0.1515748031496063, "obj2": 0.7337359951150401}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( ( MLU / CS ) * ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6216884786248261}, {"determining": "Min( Min( ( PN / FirstVNF_Mem ) ,CRS ) ,Max( ( ACS * ACS ),RRS ) )", "choosing": "( ( MUM + CS ) / Min( Min( CS ,DS ) ,( MLU + RMSe ) ) )", "obj1": 0.08661417322834646, "obj2": 0.8568282699141999}, {"determining": "Min( Min( ( FirstVNF_CPU_Server / FirstVNF_Mem ) ,CRS ) ,( FirstVNF_Mem / FirstVNF_RAM ) )", "choosing": "( ( MUM + MUR ) / Min( Min( CS ,DS ) ,( MUM - Min( DS ,RCSe ) ) ) )", "obj1": 0.08858267716535433, "obj2": 0.8564289432227219}, {"determining": "Min( Min( ( ( ( FirstVNF_RAM_Server * AMS ) / FirstVNF_RAM ) / FirstVNF_Mem ) ,CRS ) ,Max( ARS,RRS ) )", "choosing": "( ( MUM + MUC ) / Min( Min( CS ,DS ) ,( MLU + CS ) ) )", "obj1": 0.09448818897637795, "obj2": 0.8242489478834862}, {"determining": "( Min( ( RRS + ( FirstVNF_RAM_Server * ACS ) ) ,Const ) * Min( ( ( Min( FirstVNF_CPU_Server ,ACS ) * Const ) + FirstVNF_CPU ) ,( CRS - MDR ) ) )", "choosing": "( ( ( Min( MUC ,DS ) - CS ) / Min( Max( ( CS - MUR ),( MUC / ( MUR - MUR ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) ) * RRSe )", "obj1": 0.23622047244094488, "obj2": 0.6133651770629421}, {"determining": "Max( ( Const - PN ),Max( ( ( BR / FirstVNF_RAM ) - ( Const * ( ( FirstVNF_CPU_Server + ACS ) / FirstVNF_Mem ) ) ),BR ) )", "choosing": "( ( MLU / CS ) * ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6216884786248261}, {"determining": "Min( Min( Max( ( FirstVNF_RAM / PN ),Min( PN ,MDR ) ) ,CRS ) ,Max( ARS,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RCSe / CS ) + ( MUR * Max( MUR,RMSe ) ) ) / Min( RCSe ,( Min( RCSe ,MLU ) - Min( MLU ,( DS - ( MUR * RMSe ) ) ) ) ) ) + MUR )", "obj1": 0.10826771653543307, "obj2": 0.8068688656585846}, {"determining": "Max( ( Const - FirstVNF_CPU_Server ),( ( ( Const * ( ( ACS / ARS ) / FirstVNF_Mem ) ) - Min( CRS ,CRS ) ) / BR ) )", "choosing": "Max( ( ( Min( DS ,( Min( Min( MLU ,( MUR / CS ) ) ,( MUC + MLU ) ) / RCSe ) ) * ( RCSe - MLU ) ) * RCSe ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6856896241089451}, {"determining": "Max( ( Const - PN ),Max( ( ( BR / FirstVNF_RAM ) - ( Const * ( ( FirstVNF_CPU_Server + ACS ) / FirstVNF_Mem ) ) ),BR ) )", "choosing": "( ( MLU / CS ) * ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6216884786248261}, {"determining": "Max( ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) / FirstVNF_RAM ),( ( RRS * ( CRS / MDR ) ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( MUC ,MUM ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.10236220472440945, "obj2": 0.8179051466513801}, {"determining": "( Min( MDR ,( Max( ( CRS / Const ),RRS ) * PN ) ) * Min( ( FirstVNF_RAM + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ,( MDR - CRS ) ) )", "choosing": "( ( MLU / CS ) * Max( ( CS - ( MUM + ( RMSe * MUR ) ) ),DS ) )", "obj1": 0.234251968503937, "obj2": 0.6182571273735992}, {"determining": "Max( Min( Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,( PN / FirstVNF_RAM_Server ) ) ,( Min( RRS ,CRS ) * ( MDR - ARS ) ) ),Min( ( ( AMS * MDR ) * ( ACS * ACS ) ) ,( Min( RRS ,( PN / RRS ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU / CS ) * ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6216884786248261}, {"determining": "Max( Max( Min( PN ,DDR ),Const ),( FirstVNF_Mem_Server / AMS ) )", "choosing": "( ( ( MUC * MUM ) + ( ( ( RMSe / Min( ( ( MUR + MLU ) * ( RMSe / RRSe ) ) ,MUR ) ) - MUR ) - RCSe ) ) / Min( Max( MUR,MLU ) ,Min( MUC ,DS ) ) )", "obj1": 0.1062992125984252, "obj2": 0.8120546728744672}, {"determining": "Max( ( ( Const * Max( FirstVNF_Mem_Server,MDR ) ) + ( FirstVNF_RAM_Server / FirstVNF_RAM ) ),AMS )", "choosing": "( Min( ( Min( MUR ,RMSe ) + MUM ) ,( ( MUC - RMSe ) + RRSe ) ) / Max( MUC,MUM ) )", "obj1": 0.08267716535433071, "obj2": 0.8593441314243215}, {"determining": "( Max( PN,( Const / FirstVNF_Mem_Server ) ) * Min( ( Max( FirstVNF_Mem_Server,Const ) + FirstVNF_RAM ) ,( MDR - CRS ) ) )", "choosing": "( ( ( Min( MUC ,DS ) - CS ) / Max( Min( ( MUR - ( DS + Max( Max( MLU,RRSe ),( MUR / RMSe ) ) ) ) ,RRSe ),RCSe ) ) * RMSe )", "obj1": 0.23622047244094488, "obj2": 0.6133651770629421}, {"determining": "( Min( ( RRS + ( FirstVNF_RAM_Server * ACS ) ) ,Const ) * Min( ( Max( FirstVNF_Mem_Server,Const ) + FirstVNF_CPU ) ,( MDR - CRS ) ) )", "choosing": "( ( ( Min( MUC ,DS ) - CS ) / Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) ) * RMSe )", "obj1": 0.23622047244094488, "obj2": 0.6133651770629421}, {"determining": "( ( Min( ( AMS / ( ( ACS + ( ACS * ( FirstVNF_RAM - ACS ) ) ) + RRS ) ) ,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( ( MUC - RMSe ) + RRSe ) + ( ( CS * MUC ) + Max( ( Min( Max( MLU,CS ) ,CS ) + MUC ),MUC ) ) ) + ( MUC / DS ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6542981229753645}, {"determining": "( Max( Max( BR,ACS ),( MDR / MRS ) ) + ( ( RRS + ( Max( Const,( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( ( AMS / MDR ) / PN ) ) ) - ( PN + CRS ) ) ) * ( PN / RRS ) ) )", "choosing": "Max( ( ( MUC / MUC ) - MUC ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7098523390358968}, {"determining": "( ( ( Const * ( ( FirstVNF_CPU_Server + ( FirstVNF_CPU - AMS ) ) / FirstVNF_Mem ) ) / ( MDR / MRS ) ) + ( ( RRS + Const ) * ( PN / RRS ) ) )", "choosing": "Max( ( ( ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( ( Min( ( MUC - RMSe ) ,RRSe ) + MUR ) ,MUM ) ) * MUC ) + MUM ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.17716535433070865, "obj2": 0.6935412291530012}, {"determining": "( Const - ( Min( ( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ,Const ) - DDR ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( MUC + Min( MUC ,DS ) ) )", "obj1": 0.1515748031496063, "obj2": 0.7337359951150401}, {"determining": "( Max( Max( BR,ACS ),( MDR / MRS ) ) + ( ( RRS + Const ) * ( PN / RRS ) ) )", "choosing": "( ( MUM + CS ) / Min( Min( CS ,DS ) ,( MLU + CS ) ) )", "obj1": 0.08858267716535433, "obj2": 0.8564289432227219}, {"determining": "( ( FirstVNF_CPU_Server + AMS ) - ( Min( ( FirstVNF_Mem_Server / DDR ) ,( ( CRS + Min( FirstVNF_CPU ,Const ) ) - ( FirstVNF_CPU_Server / AMS ) ) ) - DDR ) )", "choosing": "Max( ( RRSe - Max( RRSe,DS ) ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.18110236220472442, "obj2": 0.6926538339779507}, {"determining": "( ( ACS + AMS ) - Min( Min( ( ARS / BR ) ,CRS ) ,Max( ARS,( Min( ( DDR - ( ( ACS + AMS ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ,AMS ) - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MLU / CS ) * ( ( ( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) )", "obj1": 0.20669291338582677, "obj2": 0.6423100891223898}, {"determining": "( ( ACS + AMS ) - Min( Min( ( ARS / BR ) ,CRS ) ,Max( ARS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU / CS ) * ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) )", "obj1": 0.2047244094488189, "obj2": 0.6498046536786874}, {"determining": "Max( Min( Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,( PN / FirstVNF_RAM_Server ) ) ,( Min( RRS ,CRS ) * ( MDR - ARS ) ) ),Min( ( PN / RRS ) ,( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * Max( Max( BR,ACS ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),RMSe ) ) ) / ( MUR * MUC ) )", "obj1": 0.21456692913385828, "obj2": 0.627808780237427}, {"determining": "Max( Min( ( DDR - CRS ) ,AMS ),( CRS - FirstVNF_Mem ) )", "choosing": "( ( MLU / CS ) * ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6216884786248261}, {"determining": "Max( ( Const - PN ),Max( ( ( BR / FirstVNF_RAM ) - ( Const * ( ( FirstVNF_CPU_Server + ACS ) / FirstVNF_Mem ) ) ),BR ) )", "choosing": "( ( MLU / CS ) * ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6216884786248261}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,DDR ) ,CRS ) ,Max( ARS,RRS ) )", "choosing": "( MUM / Min( Min( CS ,( DS - RRSe ) ) ,( MLU + CS ) ) )", "obj1": 0.10039370078740158, "obj2": 0.818334760948769}, {"determining": "Min( Min( ( ( ( FirstVNF_RAM_Server * AMS ) / FirstVNF_RAM ) / FirstVNF_Mem ) ,CRS ) ,Max( ARS,RRS ) )", "choosing": "Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6856896241089451}, {"determining": "Max( ( Const - PN ),Max( ( ( FirstVNF_CPU_Server * ( ( Min( Min( MDR ,Const ) ,( PN / FirstVNF_Mem ) ) + MDR ) / FirstVNF_Mem ) ) - ( BR / FirstVNF_RAM ) ),BR ) )", "choosing": "( ( MUM + MUC ) / Min( Min( CS ,DS ) ,( MLU * Min( RRSe ,( Min( ( ( RCSe / MLU ) - DS ) ,( DS - ( RCSe - MUC ) ) ) * MUC ) ) ) ) )", "obj1": 0.09448818897637795, "obj2": 0.8242489478834862}, {"determining": "Max( ( PN / Max( Const,MDR ) ),( Min( ( ( AMS + ( AMS * MRS ) ) - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + ( ARS + RRS ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( Max( MUR,MUC ) ,( ( Min( Min( RRSe ,( Min( MUM ,MUR ) + ( DS / MUR ) ) ) ,( MLU + Max( ( MUR * CS ),Min( CS ,RRSe ) ) ) ) - RMSe ) + RRSe ) ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7098523390358968}, {"determining": "( ( ACS + AMS ) - Min( Min( ( ARS / BR ) ,CRS ) ,Max( ARS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU / CS ) * ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6216884786248261}, {"determining": "Max( ( ( Min( ( PN + ( FirstVNF_RAM * ( ( ARS / PN ) + FirstVNF_Mem ) ) ) ,FirstVNF_Mem ) * AMS ) / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,RMSe ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8764243750912434}, {"determining": "( Max( ( Const * ( ( FirstVNF_CPU_Server + ACS ) / FirstVNF_Mem ) ),( ( Const - PN ) / MRS ) ) + ( ( RRS + Const ) * ( PN / RRS ) ) )", "choosing": "Max( ( ( ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ) ) * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.19291338582677164, "obj2": 0.6796928754041465}, {"determining": "Max( ( ( FirstVNF_RAM_Server * AMS ) / FirstVNF_RAM ),( Min( ( DDR - ( ( ACS + AMS ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ,( AMS / ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) + RRS ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( RMSe,MUC ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.8792625357489905}, {"determining": "Max( ( Const - PN ),Max( ( ( BR / ( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ) - ( Const * ( ( FirstVNF_CPU_Server + ACS ) / FirstVNF_Mem ) ) ),BR ) )", "choosing": "Max( ( ( MUR * MUC ) - MUM ),( ( ( MUC - RMSe ) + RRSe ) / ( MUR - MUR ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6856896241089451}, {"determining": "( ( ACS + AMS ) - Min( Min( ( ARS / BR ) ,CRS ) ,Max( ARS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU / CS ) * ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6216884786248261}, {"determining": "( FirstVNF_CPU_Server + ( ( RRS + Const ) * ( PN / RRS ) ) )", "choosing": "Max( ( ( MUR * MUC ) - MUM ),( Min( ( Min( MUC ,DS ) * MLU ) ,CS ) / ( MUR - MUR ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6821675089752433}, {"determining": "( Max( ( Const * ( ( FirstVNF_CPU_Server + ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) / FirstVNF_RAM ) ) / ( AMS * MDR ) ) ),( MDR / MRS ) ) + ( ( RRS + Const ) * ( PN / RRS ) ) )", "choosing": "Max( ( ( ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) ,MUM ) ) * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.16929133858267717, "obj2": 0.7005045557600293}, {"determining": "Max( Min( Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,( PN / FirstVNF_RAM_Server ) ) ,( Min( RRS ,CRS ) * ( MDR - ARS ) ) ),Min( ( ( AMS * MDR ) * ( ACS * ACS ) ) ,( Min( RRS ,( PN / RRS ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( MUC ,MUM ) ) * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.17716535433070865, "obj2": 0.6935412291530012}, {"determining": "( Max( ( Const * ( ( FirstVNF_CPU_Server + ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) / FirstVNF_RAM ) ) / FirstVNF_Mem ) ),( MDR / MRS ) ) + ( ( RRS + Const ) * ( PN / RRS ) ) )", "choosing": "( ( MLU / CS ) * ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6216884786248261}, {"determining": "( Max( ( Const * ( ( FirstVNF_CPU_Server + ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) / FirstVNF_RAM ) ) / FirstVNF_Mem ) ),( MDR / Min( ( DDR - CRS ) ,AMS ) ) ) + ( ( RRS + Const ) * ( PN / RRS ) ) )", "choosing": "Max( ( ( ( ( ( MUC / RMSe ) / ( ( DS * DS ) / RCSe ) ) - Min( MUC ,MUM ) ) * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8486879451279368}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( Max( PN,CRS ) - ( CRS + ( FirstVNF_CPU_Server * ACS ) ) ) + ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + ( RRS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( MUC ,DS ) - CS ) / Min( Max( ( ( RCSe + DS ) * CS ),( MUC - ( MUR - MUR ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) ) * RMSe )", "obj1": 0.23622047244094488, "obj2": 0.6133651770629421}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( ( MLU / CS ) * ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6216884786248261}, {"determining": "Max( ( Const - PN ),Min( ( DDR - CRS ) ,AMS ) )", "choosing": "Max( ( ( MUR * MUC ) - MUM ),( ( MUR - RRSe ) / ( MUR - MUR ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6856896241089451}, {"determining": "( Min( ( RRS + ( FirstVNF_RAM_Server * ACS ) ) ,Const ) * Min( ( Max( FirstVNF_Mem_Server,Const ) + FirstVNF_CPU ) ,( MDR - CRS ) ) )", "choosing": "( ( ( Min( MUC ,DS ) - CS ) / Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) ) * RMSe )", "obj1": 0.23622047244094488, "obj2": 0.6133651770629421}, {"determining": "( ( Max( Max( BR,FirstVNF_CPU ),ARS ) * ( FirstVNF_CPU_Server * ( RRS * FirstVNF_CPU ) ) ) - ( ( MRS - AMS ) - FirstVNF_RAM_Server ) )", "choosing": "( ( MUC + Min( ( ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) / Min( DS ,RCSe ) ) + RRSe ) + ( Max( DS,RRSe ) + ( RMSe * RRSe ) ) ) ,DS ) ) / ( RRSe + RMSe ) )", "obj1": 0.15354330708661418, "obj2": 0.7295682927431609}, {"determining": "Max( Min( RRS ,( ACS + CRS ) ),( FirstVNF_Mem_Server / AMS ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( MUC * Min( MUC ,Max( Max( DS,MUR ),Min( ( DS - MUM ) ,( RMSe + CS ) ) ) ) ) - RCSe ) + Min( MUC ,DS ) ) )", "obj1": 0.13976377952755906, "obj2": 0.7385074333789732}, {"determining": "( Min( ( RRS + ( FirstVNF_RAM_Server * ACS ) ) ,Const ) * Min( ( Max( FirstVNF_Mem_Server,Const ) + FirstVNF_CPU ) ,( MDR - CRS ) ) )", "choosing": "( ( ( Min( MUC ,DS ) - CS ) / Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) ) * RMSe )", "obj1": 0.23622047244094488, "obj2": 0.6133651770629421}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( ( ( AMS * MRS ) + AMS ) - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + Max( ( MRS / FirstVNF_CPU ),ACS ) ) ,( RRS * FirstVNF_Mem ) ) ) ) - DDR ) )", "choosing": "Max( ( ( MUC * MUR ) - ( ( ( MLU + CS ) - ( MUM / CS ) ) + RRSe ) ),( MUC / ( MUR - CS ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7098523390358968}, {"determining": "( ( FirstVNF_CPU_Server + AMS ) - Min( Min( ( FirstVNF_Mem_Server / DDR ) ,( ( CRS + Min( FirstVNF_CPU ,( FirstVNF_Mem - ( FirstVNF_Mem_Server / MDR ) ) ) ) - ( FirstVNF_CPU_Server / AMS ) ) ) ,DDR ) )", "choosing": "Max( ( RRSe - Max( RRSe,DS ) ),( MUC * ( ( MUR / MUM ) - MUR ) ) )", "obj1": 0.18110236220472442, "obj2": 0.6926538339779507}, {"determining": "( ( ACS + AMS ) - Min( Min( ( ARS / BR ) ,CRS ) ,Max( ARS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU / CS ) * ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6216884786248261}, {"determining": "( Min( ( RRS + ( FirstVNF_RAM_Server * ACS ) ) ,Const ) * Min( ( Max( FirstVNF_Mem_Server,Const ) + FirstVNF_CPU ) ,( MDR - CRS ) ) )", "choosing": "( ( ( Min( MUC ,DS ) - CS ) / Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) ) * RMSe )", "obj1": 0.23622047244094488, "obj2": 0.6133651770629421}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( Const * ( ( FirstVNF_CPU_Server + ACS ) / FirstVNF_Mem ) ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( RRS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( MUR,( MUC / ( MUR - MUR ) ) )", "obj1": 0.16535433070866143, "obj2": 0.7037799206772251}, {"determining": "Max( Min( ( FirstVNF_Mem_Server + DDR ) ,Const ),( FirstVNF_RAM / PN ) )", "choosing": "Max( ( ( MUR * MUC ) - ( ( MUC - RMSe ) + ( ( RMSe + ( CS / RMSe ) ) / ( Min( Min( MLU ,( DS + RMSe ) ) ,CS ) * Max( ( RRSe * RMSe ),Min( ( CS / MUM ) ,RMSe ) ) ) ) ) ),Min( Max( DS,Max( ( CS + Min( RMSe ,Min( ( RRSe + RMSe ) ,RCSe ) ) ),DS ) ) ,Min( MLU ,( ( RCSe + MUC ) - MLU ) ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6883904065478764}, {"determining": "Max( Min( ( FirstVNF_Mem_Server + DDR ) ,Const ),( FirstVNF_RAM / PN ) )", "choosing": "Max( ( ( MUR * MUC ) - ( ( MUC - RMSe ) + ( ( RMSe + ( CS / RMSe ) ) / ( Min( Min( MLU ,( DS + RMSe ) ) ,CS ) * Max( ( RRSe * RMSe ),Min( ( CS / MUM ) ,RMSe ) ) ) ) ) ),Min( Max( DS,Max( ( CS + Min( RMSe ,Min( ( RRSe + RMSe ) ,RCSe ) ) ),DS ) ) ,Min( MLU ,( ( RCSe + MUC ) - MLU ) ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6883904065478764}, {"determining": "Max( ( FirstVNF_RAM / PN ),( Min( Min( FirstVNF_RAM_Server ,PN ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( RRS + FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( MUR * MUC ) - ( ( MUC - RMSe ) + ( MUC / ( Min( Min( ( DS + RMSe ) ,MLU ) ,CS ) * Max( ( RRSe * RMSe ),Min( ( CS * MUM ) ,RMSe ) ) ) ) ) ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6883904065478764}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( RRS + ( FirstVNF_RAM_Server * ACS ) ) ,( ( CRS - ( ACS / AMS ) ) * ( FirstVNF_CPU_Server / Const ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( MUR * MUC ) - ( RRSe + ( MUC - ( MUC - MLU ) ) ) ),( MUC / ( ( CS / MUM ) - MUR ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7098523390358968}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,Max( FirstVNF_Mem,AMS ) ) - RRS ) )", "choosing": "( ( ( Min( MUC ,DS ) - CS ) / ( MUC * Min( ( ( RCSe / CS ) / CS ) ,MUM ) ) ) * RMSe )", "obj1": 0.2106299212598425, "obj2": 0.6346499634655285}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( Min( Const ,AMS ) ,AMS ) - PN ) )", "choosing": "( ( ( Min( Max( MLU,Max( CS,RRSe ) ) ,MUM ) - RRSe ) + ( RCSe - Min( ( DS * ( MUR * MUM ) ) ,( Max( DS,RMSe ) + ( CS - Max( MLU,MUC ) ) ) ) ) ) / Min( ( MLU + CS ) ,Min( RCSe ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.8792625357489905}, {"determining": "Max( ( Const - FirstVNF_CPU_Server ),( ( ( Const * ( ( ACS / ARS ) / FirstVNF_Mem ) ) - Min( CRS ,CRS ) ) / BR ) )", "choosing": "Max( ( ( Min( DS ,( Min( Min( MLU ,( MUR / CS ) ) ,( MUC + MLU ) ) / RCSe ) ) * ( RCSe - MLU ) ) * RCSe ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6856896241089451}, {"determining": "Max( ( Const - FirstVNF_CPU_Server ),( ( ( Const * ( ( ACS / ARS ) / FirstVNF_Mem ) ) - Min( CRS ,CRS ) ) / BR ) )", "choosing": "Max( ( ( Min( DS ,( Min( Min( MLU ,( MUR / CS ) ) ,( MUC + MLU ) ) / RCSe ) ) * ( RCSe - MLU ) ) * RCSe ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6856896241089451}, {"determining": "Max( ( Const - FirstVNF_CPU_Server ),( ( ( Const * ( ( ACS / ARS ) / FirstVNF_Mem ) ) - Min( CRS ,CRS ) ) / BR ) )", "choosing": "Max( ( ( Min( DS ,( Min( Min( MLU ,( MUR / CS ) ) ,( MUC + MLU ) ) / RCSe ) ) * ( RCSe - MLU ) ) * RCSe ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6856896241089451}, {"determining": "Max( ( Const - PN ),( ( ( Const * ( ( ACS / ARS ) / FirstVNF_Mem ) ) - ( BR / FirstVNF_RAM ) ) / BR ) )", "choosing": "Max( ( ( Min( ( Min( Min( MLU ,( MUR + CS ) ) ,Min( CS ,MUR ) ) / RCSe ) ,DS ) * ( RCSe - MLU ) ) * RCSe ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6856896241089451}, {"determining": "Max( ( Min( ( ( FirstVNF_Mem / ( FirstVNF_Mem_Server / MDR ) ) - CRS ) ,( ( Max( CRS,PN ) - ( Max( MDR,Max( FirstVNF_CPU,FirstVNF_CPU ) ) + PN ) ) + Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,( RRS * Const ) ) ) ) - FirstVNF_Mem_Server ),( PN / FirstVNF_RAM ) )", "choosing": "Max( ( MUC / ( MUR - MUR ) ),( ( ( ( DS + MLU ) + RMSe ) * MUR ) - ( ( ( MLU + CS ) - RMSe ) + RRSe ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7098523390358968}, {"determining": "Max( ( PN / FirstVNF_RAM ),( ( Max( FirstVNF_Mem,MDR ) / AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( ( MLU / ( CS - MUR ) ) * ( ( ( MUC / RMSe ) / ( CS / DS ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6216884786248261}, {"determining": "( ( ACS + AMS ) - Min( Min( ( ARS / BR ) ,CRS ) ,Max( ARS,( Min( ( DDR - ( ( ACS + AMS ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ,AMS ) - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MLU / CS ) * ( ( ( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) )", "obj1": 0.2204724409448819, "obj2": 0.623293419924461}, {"determining": "( ( Min( ( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( ( MUC - RMSe ) + RRSe ) + ( ( CS * MUC ) + Max( MUM,MUC ) ) ) + Min( MUC ,DS ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6542981229753645}, {"determining": "Max( Min( ( DDR - CRS ) ,AMS ),( CRS - FirstVNF_Mem ) )", "choosing": "( ( MLU / CS ) * ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) )", "obj1": 0.234251968503937, "obj2": 0.6182571273735992}, {"determining": "Max( ( Const - PN ),Max( ( ( BR / FirstVNF_RAM ) - ( Const * ( ( FirstVNF_CPU_Server + ACS ) / FirstVNF_Mem ) ) ),BR ) )", "choosing": "( ( MLU / CS ) * ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6216884786248261}, {"determining": "( Max( Max( BR,ACS ),( MDR / MRS ) ) + ( Min( Min( ( ARS / BR ) ,BR ) ,Max( ARS,FirstVNF_CPU_Server ) ) * ( PN / RRS ) ) )", "choosing": "( ( MUM + Max( MUR,MUC ) ) / Min( Min( CS ,DS ) ,( MLU + CS ) ) )", "obj1": 0.0984251968503937, "obj2": 0.8216130011701535}, {"determining": "( Const - ( Min( ( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ,Const ) - DDR ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( MUC + Min( MUC ,DS ) ) )", "obj1": 0.15748031496062992, "obj2": 0.7281113480639537}, {"determining": "( ( ACS + ( ACS + ( FirstVNF_Mem_Server + RRS ) ) ) - Min( Min( FirstVNF_CPU ,Max( FirstVNF_RAM,FirstVNF_CPU ) ) ,FirstVNF_CPU ) )", "choosing": "( Min( ( DS / RMSe ) ,Min( DS ,MUC ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.16338582677165353, "obj2": 0.7080872545735126}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) - ( ( ( FirstVNF_Mem_Server * ( RRS + RRS ) ) - ( FirstVNF_RAM + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + ( Min( ( ( RRSe + ( MLU * DS ) ) - CS ) ,( ( ( RCSe - CS ) * MLU ) / ( MUR - ( MUR - DS ) ) ) ) * ( RCSe - MUC ) ) ),RRSe ) / ( MUC + ( MUC + DS ) ) )", "obj1": 0.14566929133858267, "obj2": 0.7349876896211709}, {"determining": "( Max( ACS,( ( ( ARS / FirstVNF_RAM_Server ) / ARS ) + ( AMS + ARS ) ) ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) )", "choosing": "( ( Min( RMSe ,RRSe ) + Min( MUC ,DS ) ) / Max( MUM,RMSe ) )", "obj1": 0.12401574803149606, "obj2": 0.7598433606365617}, {"determining": "Max( ARS,Min( ( PN / RRS ) ,( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * ( ( ( MDR - Const ) - ( Const * ( ( FirstVNF_CPU_Server + ACS ) / FirstVNF_Mem ) ) ) + MDR ) ) ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( MUR * MLU ) ) ) ) ) ) / Min( CS ,DS ) )", "obj1": 0.1141732283464567, "obj2": 0.786442242664406}, {"determining": "( Max( ( Const * ( ( FirstVNF_CPU_Server + ACS ) / FirstVNF_Mem ) ),( MRS / MDR ) ) + Min( CRS ,ARS ) )", "choosing": "( ( RCSe - Min( RRSe ,MUC ) ) / ( DS + CS ) )", "obj1": 0.11023622047244094, "obj2": 0.794336258805485}, {"determining": "( Max( ( Const * ( ( FirstVNF_CPU_Server + ACS ) / Min( ( Const / FirstVNF_CPU_Server ) ,Min( MDR ,AMS ) ) ) ),( MDR / MRS ) ) + ( ( RRS - Const ) * ( PN / RRS ) ) )", "choosing": "Max( ( ( MLU / CS ) * Max( ( ( MUC / RMSe ) / ( CS / RCSe ) ),Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) ),( MUC / DS ) )", "obj1": 0.1673228346456693, "obj2": 0.7026867082163184}, {"determining": "( Max( ( Const * ( ( FirstVNF_CPU_Server + ACS ) / FirstVNF_Mem ) ),( MDR / MRS ) ) + ( ( RRS + Const ) * ( PN / RRS ) ) )", "choosing": "Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6856896241089451}, {"determining": "( ( MDR * ( ( Const + ( Max( CRS,Const ) * FirstVNF_CPU_Server ) ) * PN ) ) * Min( ( FirstVNF_RAM + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ,( MDR - CRS ) ) )", "choosing": "( ( ( ( MLU * RMSe ) / ( CS / RCSe ) ) - Max( Min( MUC ,RMSe ),( RMSe * MLU ) ) ) * ( MLU / CS ) )", "obj1": 0.2263779527559055, "obj2": 0.6216884786248261}, {"determining": "( Min( MDR ,( ( ( FirstVNF_RAM + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) + Const ) * PN ) ) * Min( ( FirstVNF_RAM + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ,( MDR - CRS ) ) )", "choosing": "( MUM / Min( Min( CS ,DS ) ,( MLU + CS ) ) )", "obj1": 0.10039370078740158, "obj2": 0.818334760948769}, {"determining": "Min( Min( ( ( ( FirstVNF_RAM_Server * AMS ) / FirstVNF_RAM ) / FirstVNF_Mem ) ,CRS ) ,Max( ARS,RRS ) )", "choosing": "( ( MUM + MUC ) / Min( Min( CS ,DS ) ,( MLU + CS ) ) )", "obj1": 0.09448818897637795, "obj2": 0.8242489478834862}, {"determining": "Min( Min( Max( FirstVNF_RAM,Max( PN,PN ) ) ,Min( Min( Const ,PN ) ,CRS ) ) ,Min( FirstVNF_RAM_Server ,Const ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),RMSe ) ) ) / ( MUR * MUC ) )", "obj1": 0.21456692913385828, "obj2": 0.627808780237427}, {"determining": "( ( AMS + MDR ) - ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( ( MLU / CS ) * ( ( ( MUC / Min( ( ( ( RCSe * MUC ) + CS ) + ( MUC - ( RMSe - RMSe ) ) ) ,( ( ( DS + MUR ) - Min( RMSe ,MLU ) ) + ( RCSe * Min( MUR ,RMSe ) ) ) ) ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) )", "obj1": 0.13582677165354332, "obj2": 0.755069885206998}, {"determining": "Max( ARS,Min( ( PN / RRS ) ,( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * ( ( FirstVNF_CPU_Server + Max( DDR,AMS ) ) + MDR ) ) ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( ( ( DS / MLU ) + ( MUC * RMSe ) ),( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) ) ) ) / Min( CS ,Min( Min( RRSe ,( RMSe / CS ) ) ,MUM ) ) )", "obj1": 0.11023622047244094, "obj2": 0.794336258805485}, {"determining": "( Min( ( RRS + ( FirstVNF_RAM_Server * ACS ) ) ,Const ) * Min( ( Max( Min( ( DDR - CRS ) ,AMS ),Const ) + FirstVNF_CPU ) ,( MDR - CRS ) ) )", "choosing": "( ( ( Min( MUC ,DS ) - CS ) / Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( MUC / RMSe ) + RRSe ) ) ) * RMSe )", "obj1": 0.2421259842519685, "obj2": 0.6103338826779446}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( ( MLU / CS ) * ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6216884786248261}, {"determining": "( Min( ( RRS + ( FirstVNF_RAM_Server * ACS ) ) ,Const ) * Min( ( Max( FirstVNF_Mem_Server,Const ) + FirstVNF_CPU ) ,( MDR - CRS ) ) )", "choosing": "( ( ( Min( MUC ,DS ) - CS ) / Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) ) * RMSe )", "obj1": 0.23622047244094488, "obj2": 0.6133651770629421}, {"determining": "( Min( MDR ,( ( Const + Const ) * PN ) ) * Min( ( FirstVNF_RAM + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ,( MDR - CRS ) ) )", "choosing": "( ( MLU / CS ) * ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6216884786248261}, {"determining": "Min( Min( ( ( ( FirstVNF_RAM_Server * AMS ) / ( ACS + ( FirstVNF_Mem_Server / RRS ) ) ) / FirstVNF_Mem ) ,CRS ) ,Max( ARS,RRS ) )", "choosing": "( ( MUM + MUC ) / Min( Min( CS ,DS ) ,( MLU + MUR ) ) )", "obj1": 0.09448818897637795, "obj2": 0.8242489478834862}, {"determining": "Max( ( ( Const * Max( FirstVNF_Mem_Server,MDR ) ) + ( FirstVNF_RAM_Server / FirstVNF_RAM ) ),AMS )", "choosing": "Max( ( RRSe - Max( RRSe,DS ) ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.18110236220472442, "obj2": 0.6926538339779507}, {"determining": "Max( ( Const - PN ),( Min( ( FirstVNF_RAM + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ,( MDR - CRS ) ) / BR ) )", "choosing": "Max( ( ( Min( ( Min( ( Min( MUR ,MUC ) - MUM ) ,Min( CS ,MUR ) ) / RCSe ) ,DS ) * ( RCSe - MLU ) ) * RCSe ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6856896241089451}, {"determining": "Min( Min( ( ( ( FirstVNF_RAM_Server * AMS ) / FirstVNF_RAM ) / FirstVNF_Mem ) ,CRS ) ,Max( ARS,RRS ) )", "choosing": "( ( MLU / CS ) * ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) )", "obj1": 0.234251968503937, "obj2": 0.6182571273735992}, {"determining": "Max( ( Min( ( DDR - Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ,AMS ) - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( ( MUC * MUM ) + Max( ( MUR + ( MUM + ( ( MUR * RMSe ) - CS ) ) ),MLU ) ) / Min( Max( MUR,MLU ) ,Min( MUC ,DS ) ) )", "obj1": 0.1062992125984252, "obj2": 0.8120546728744672}], "8": [{"determining": "Min( ( RRS - DDR ) ,Min( FirstVNF_RAM_Server ,AMS ) )", "choosing": "( ( MLU + ( RCSe + MUM ) ) / ( CS * ( RCSe - ( RRSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS + ( FirstVNF_RAM_Server * ACS ) ) ,Const ) * Min( ( ( Min( FirstVNF_CPU_Server ,ACS ) * Const ) + FirstVNF_CPU ) ,( CRS - MDR ) ) )", "choosing": "( ( ( Min( MUC ,DS ) - CS ) / Min( Max( ( CS - MUR ),( MUC / ( MUR - MUR ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) ) * RRSe )", "obj1": 0.23622047244094488, "obj2": 0.6133651770629421}, {"determining": "Max( ( ( Const * Max( FirstVNF_Mem_Server,MDR ) ) + ( FirstVNF_RAM_Server / FirstVNF_RAM ) ),AMS )", "choosing": "( Min( ( Min( MUR ,RMSe ) + MUM ) ,( ( MUC - RMSe ) + RRSe ) ) / Max( MUC,MUM ) )", "obj1": 0.08267716535433071, "obj2": 0.8593441314243215}, {"determining": "( Max( PN,( Const / FirstVNF_Mem_Server ) ) * Min( ( Max( FirstVNF_Mem_Server,Const ) + FirstVNF_RAM ) ,( MDR - CRS ) ) )", "choosing": "( ( ( Min( MUC ,DS ) - CS ) / Max( Min( ( MUR - ( DS + Max( Max( MLU,RRSe ),( MUR / RMSe ) ) ) ) ,RRSe ),RCSe ) ) * RMSe )", "obj1": 0.23622047244094488, "obj2": 0.6133651770629421}, {"determining": "( Min( ( RRS + ( FirstVNF_RAM_Server * ACS ) ) ,Const ) * Min( ( Max( FirstVNF_Mem_Server,Const ) + FirstVNF_CPU ) ,( MDR - CRS ) ) )", "choosing": "( ( ( Min( MUC ,DS ) - CS ) / Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) ) * RMSe )", "obj1": 0.23622047244094488, "obj2": 0.6133651770629421}, {"determining": "( ( Min( ( AMS / ( ( ACS + ( ACS * ( FirstVNF_RAM - ACS ) ) ) + RRS ) ) ,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( ( MUC - RMSe ) + RRSe ) + ( ( CS * MUC ) + Max( ( Min( Max( MLU,CS ) ,CS ) + MUC ),MUC ) ) ) + ( MUC / DS ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6542981229753645}, {"determining": "( Max( Max( BR,ACS ),( MDR / MRS ) ) + ( ( RRS + ( Max( Const,( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( ( AMS / MDR ) / PN ) ) ) - ( PN + CRS ) ) ) * ( PN / RRS ) ) )", "choosing": "Max( ( ( MUC / MUC ) - MUC ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7098523390358968}, {"determining": "( ( ACS + AMS ) - Min( Min( ( ARS / BR ) ,CRS ) ,Max( ARS,( Min( ( DDR - ( ( ACS + AMS ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ,AMS ) - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MLU / CS ) * ( ( ( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) )", "obj1": 0.20669291338582677, "obj2": 0.6423100891223898}, {"determining": "Max( Min( Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,( PN / FirstVNF_RAM_Server ) ) ,( Min( RRS ,CRS ) * ( MDR - ARS ) ) ),Min( ( PN / RRS ) ,( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * Max( Max( BR,ACS ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),RMSe ) ) ) / ( MUR * MUC ) )", "obj1": 0.21456692913385828, "obj2": 0.627808780237427}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,DDR ) ,CRS ) ,Max( ARS,RRS ) )", "choosing": "( MUM / Min( Min( CS ,( DS - RRSe ) ) ,( MLU + CS ) ) )", "obj1": 0.10039370078740158, "obj2": 0.818334760948769}, {"determining": "Max( ( PN / Max( Const,MDR ) ),( Min( ( ( AMS + ( AMS * MRS ) ) - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + ( ARS + RRS ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( Max( MUR,MUC ) ,( ( Min( Min( RRSe ,( Min( MUM ,MUR ) + ( DS / MUR ) ) ) ,( MLU + Max( ( MUR * CS ),Min( CS ,RRSe ) ) ) ) - RMSe ) + RRSe ) ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7098523390358968}, {"determining": "Max( ( ( Min( ( PN + ( FirstVNF_RAM * ( ( ARS / PN ) + FirstVNF_Mem ) ) ) ,FirstVNF_Mem ) * AMS ) / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,RMSe ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8764243750912434}, {"determining": "Max( ( ( FirstVNF_RAM_Server * AMS ) / FirstVNF_RAM ),( Min( ( DDR - ( ( ACS + AMS ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ,( AMS / ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) + RRS ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( RMSe,MUC ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.8792625357489905}, {"determining": "( Max( ( Const * ( ( FirstVNF_CPU_Server + ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) / FirstVNF_RAM ) ) / ( AMS * MDR ) ) ),( MDR / MRS ) ) + ( ( RRS + Const ) * ( PN / RRS ) ) )", "choosing": "Max( ( ( ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) ,MUM ) ) * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.16929133858267717, "obj2": 0.7005045557600293}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( Max( PN,CRS ) - ( CRS + ( FirstVNF_CPU_Server * ACS ) ) ) + ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + ( RRS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( MUC ,DS ) - CS ) / Min( Max( ( ( RCSe + DS ) * CS ),( MUC - ( MUR - MUR ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) ) * RMSe )", "obj1": 0.23622047244094488, "obj2": 0.6133651770629421}, {"determining": "( Min( ( RRS + ( FirstVNF_RAM_Server * ACS ) ) ,Const ) * Min( ( Max( FirstVNF_Mem_Server,Const ) + FirstVNF_CPU ) ,( MDR - CRS ) ) )", "choosing": "( ( ( Min( MUC ,DS ) - CS ) / Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) ) * RMSe )", "obj1": 0.23622047244094488, "obj2": 0.6133651770629421}, {"determining": "Max( Min( RRS ,( ACS + CRS ) ),( FirstVNF_Mem_Server / AMS ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( MUC * Min( MUC ,Max( Max( DS,MUR ),Min( ( DS - MUM ) ,( RMSe + CS ) ) ) ) ) - RCSe ) + Min( MUC ,DS ) ) )", "obj1": 0.13976377952755906, "obj2": 0.7385074333789732}, {"determining": "( Min( ( RRS + ( FirstVNF_RAM_Server * ACS ) ) ,Const ) * Min( ( Max( FirstVNF_Mem_Server,Const ) + FirstVNF_CPU ) ,( MDR - CRS ) ) )", "choosing": "( ( ( Min( MUC ,DS ) - CS ) / Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) ) * RMSe )", "obj1": 0.23622047244094488, "obj2": 0.6133651770629421}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( ( ( AMS * MRS ) + AMS ) - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + Max( ( MRS / FirstVNF_CPU ),ACS ) ) ,( RRS * FirstVNF_Mem ) ) ) ) - DDR ) )", "choosing": "Max( ( ( MUC * MUR ) - ( ( ( MLU + CS ) - ( MUM / CS ) ) + RRSe ) ),( MUC / ( MUR - CS ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7098523390358968}, {"determining": "( Min( ( RRS + ( FirstVNF_RAM_Server * ACS ) ) ,Const ) * Min( ( Max( FirstVNF_Mem_Server,Const ) + FirstVNF_CPU ) ,( MDR - CRS ) ) )", "choosing": "( ( ( Min( MUC ,DS ) - CS ) / Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) ) * RMSe )", "obj1": 0.23622047244094488, "obj2": 0.6133651770629421}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( Const * ( ( FirstVNF_CPU_Server + ACS ) / FirstVNF_Mem ) ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( RRS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( MUR,( MUC / ( MUR - MUR ) ) )", "obj1": 0.16535433070866143, "obj2": 0.7037799206772251}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( RRS + ( FirstVNF_RAM_Server * ACS ) ) ,( ( CRS - ( ACS / AMS ) ) * ( FirstVNF_CPU_Server / Const ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( MUR * MUC ) - ( RRSe + ( MUC - ( MUC - MLU ) ) ) ),( MUC / ( ( CS / MUM ) - MUR ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7098523390358968}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,Max( FirstVNF_Mem,AMS ) ) - RRS ) )", "choosing": "( ( ( Min( MUC ,DS ) - CS ) / ( MUC * Min( ( ( RCSe / CS ) / CS ) ,MUM ) ) ) * RMSe )", "obj1": 0.2106299212598425, "obj2": 0.6346499634655285}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( Min( Const ,AMS ) ,AMS ) - PN ) )", "choosing": "( ( ( Min( Max( MLU,Max( CS,RRSe ) ) ,MUM ) - RRSe ) + ( RCSe - Min( ( DS * ( MUR * MUM ) ) ,( Max( DS,RMSe ) + ( CS - Max( MLU,MUC ) ) ) ) ) ) / Min( ( MLU + CS ) ,Min( RCSe ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.8792625357489905}, {"determining": "Max( ( Min( ( ( FirstVNF_Mem / ( FirstVNF_Mem_Server / MDR ) ) - CRS ) ,( ( Max( CRS,PN ) - ( Max( MDR,Max( FirstVNF_CPU,FirstVNF_CPU ) ) + PN ) ) + Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,( RRS * Const ) ) ) ) - FirstVNF_Mem_Server ),( PN / FirstVNF_RAM ) )", "choosing": "Max( ( MUC / ( MUR - MUR ) ),( ( ( ( DS + MLU ) + RMSe ) * MUR ) - ( ( ( MLU + CS ) - RMSe ) + RRSe ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7098523390358968}, {"determining": "( ( ACS + AMS ) - Min( Min( ( ARS / BR ) ,CRS ) ,Max( ARS,( Min( ( DDR - ( ( ACS + AMS ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ,AMS ) - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MLU / CS ) * ( ( ( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) )", "obj1": 0.2204724409448819, "obj2": 0.623293419924461}, {"determining": "( ( Min( ( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( ( MUC - RMSe ) + RRSe ) + ( ( CS * MUC ) + Max( MUM,MUC ) ) ) + Min( MUC ,DS ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6542981229753645}, {"determining": "( ( ACS + ( ACS + ( FirstVNF_Mem_Server + RRS ) ) ) - Min( Min( FirstVNF_CPU ,Max( FirstVNF_RAM,FirstVNF_CPU ) ) ,FirstVNF_CPU ) )", "choosing": "( Min( ( DS / RMSe ) ,Min( DS ,MUC ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.16338582677165353, "obj2": 0.7080872545735126}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) - ( ( ( FirstVNF_Mem_Server * ( RRS + RRS ) ) - ( FirstVNF_RAM + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + ( Min( ( ( RRSe + ( MLU * DS ) ) - CS ) ,( ( ( RCSe - CS ) * MLU ) / ( MUR - ( MUR - DS ) ) ) ) * ( RCSe - MUC ) ) ),RRSe ) / ( MUC + ( MUC + DS ) ) )", "obj1": 0.14566929133858267, "obj2": 0.7349876896211709}, {"determining": "( Max( ACS,( ( ( ARS / FirstVNF_RAM_Server ) / ARS ) + ( AMS + ARS ) ) ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) )", "choosing": "( ( Min( RMSe ,RRSe ) + Min( MUC ,DS ) ) / Max( MUM,RMSe ) )", "obj1": 0.12401574803149606, "obj2": 0.7598433606365617}, {"determining": "( Max( ( Const * ( ( FirstVNF_CPU_Server + ACS ) / FirstVNF_Mem ) ),( MRS / MDR ) ) + Min( CRS ,ARS ) )", "choosing": "( ( RCSe - Min( RRSe ,MUC ) ) / ( DS + CS ) )", "obj1": 0.11023622047244094, "obj2": 0.794336258805485}, {"determining": "( Max( ( Const * ( ( FirstVNF_CPU_Server + ACS ) / Min( ( Const / FirstVNF_CPU_Server ) ,Min( MDR ,AMS ) ) ) ),( MDR / MRS ) ) + ( ( RRS - Const ) * ( PN / RRS ) ) )", "choosing": "Max( ( ( MLU / CS ) * Max( ( ( MUC / RMSe ) / ( CS / RCSe ) ),Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) ),( MUC / DS ) )", "obj1": 0.1673228346456693, "obj2": 0.7026867082163184}, {"determining": "( Min( MDR ,( ( ( FirstVNF_RAM + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) + Const ) * PN ) ) * Min( ( FirstVNF_RAM + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ,( MDR - CRS ) ) )", "choosing": "( MUM / Min( Min( CS ,DS ) ,( MLU + CS ) ) )", "obj1": 0.10039370078740158, "obj2": 0.818334760948769}, {"determining": "Min( Min( Max( FirstVNF_RAM,Max( PN,PN ) ) ,Min( Min( Const ,PN ) ,CRS ) ) ,Min( FirstVNF_RAM_Server ,Const ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),RMSe ) ) ) / ( MUR * MUC ) )", "obj1": 0.21456692913385828, "obj2": 0.627808780237427}, {"determining": "Max( ARS,Min( ( PN / RRS ) ,( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * ( ( FirstVNF_CPU_Server + Max( DDR,AMS ) ) + MDR ) ) ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( ( ( DS / MLU ) + ( MUC * RMSe ) ),( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) ) ) ) / Min( CS ,Min( Min( RRSe ,( RMSe / CS ) ) ,MUM ) ) )", "obj1": 0.11023622047244094, "obj2": 0.794336258805485}, {"determining": "( Min( ( RRS + ( FirstVNF_RAM_Server * ACS ) ) ,Const ) * Min( ( Max( Min( ( DDR - CRS ) ,AMS ),Const ) + FirstVNF_CPU ) ,( MDR - CRS ) ) )", "choosing": "( ( ( Min( MUC ,DS ) - CS ) / Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( MUC / RMSe ) + RRSe ) ) ) * RMSe )", "obj1": 0.2421259842519685, "obj2": 0.6103338826779446}, {"determining": "( Min( ( RRS + ( FirstVNF_RAM_Server * ACS ) ) ,Const ) * Min( ( Max( FirstVNF_Mem_Server,Const ) + FirstVNF_CPU ) ,( MDR - CRS ) ) )", "choosing": "( ( ( Min( MUC ,DS ) - CS ) / Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) ) * RMSe )", "obj1": 0.23622047244094488, "obj2": 0.6133651770629421}, {"determining": "( ( Min( Const ,( ( BR * FirstVNF_Mem_Server ) - Min( MDR ,FirstVNF_RAM ) ) ) - ( CRS * MDR ) ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + MUM ),Max( ( RMSe - Max( Min( ( CS - RCSe ) ,CS ),RRSe ) ),RCSe ) ) / ( ( ( ( MUC - RRSe ) + RMSe ) + ( ( CS * MUC ) + Max( MUM,MUC ) ) ) + Min( Max( CS,RCSe ) ,DS ) ) )", "obj1": 0.17716535433070865, "obj2": 0.6686947769402188}, {"determining": "Max( Max( BR,DDR ),Max( ( ( BR / FirstVNF_RAM ) - ( RRS * ACS ) ),BR ) )", "choosing": "( ( DS / MUC ) / Min( Max( MLU,CS ) ,Min( CS ,DS ) ) )", "obj1": 0.08858267716535433, "obj2": 0.8358780584707017}, {"determining": "( Min( ( RRS + ( FirstVNF_RAM_Server * ACS ) ) ,Const ) * Min( ( Max( FirstVNF_Mem_Server,Const ) + FirstVNF_CPU ) ,( MDR - CRS ) ) )", "choosing": "( ( ( Min( MUC ,DS ) - CS ) / Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) ) * RMSe )", "obj1": 0.2440944881889764, "obj2": 0.6080622038251116}, {"determining": "( ( CRS + RRS ) + ( ( RRS + Const ) * ( PN / DDR ) ) )", "choosing": "Max( ( ( ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Max( RRSe,Min( RCSe ,MUC ) ) ,MUM ) ) * MUC ) - DS ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.16929133858267717, "obj2": 0.7005045557600293}, {"determining": "Max( ( ( FirstVNF_RAM_Server * AMS ) / FirstVNF_RAM ),( ( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( ( ( ( MUC - RMSe ) + RRSe ) + RRSe ),MUC ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8199728047683}, {"determining": "Max( Min( CRS ,FirstVNF_Mem ),( RRS - AMS ) )", "choosing": "( Max( Max( RCSe,CS ),MUM ) / ( ( MLU + CS ) / ( MUC + DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.8792625357489905}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - ( FirstVNF_RAM - Min( DDR ,DDR ) ) ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( CS / ( RMSe / MUM ) ),( MUC / Max( RMSe,MUC ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( DS ,MUC ) ) )", "obj1": 0.07874015748031496, "obj2": 0.8792625357489905}, {"determining": "( Min( ( RRS + ( FirstVNF_RAM_Server * ACS ) ) ,Const ) + ( ( RRS + Const ) * ( PN / RRS ) ) )", "choosing": "( ( ( RCSe / CS ) + ( ( ( Min( MUC ,DS ) - CS ) / Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( MUC / RMSe ) + RRSe ) ) ) * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) ) ) ) / Min( CS ,DS ) )", "obj1": 0.12007874015748031, "obj2": 0.779266930509394}, {"determining": "( ( ARS * FirstVNF_RAM ) + ( ( RRS + Const ) * ( RRS / PN ) ) )", "choosing": "( ( ( Min( MUC ,DS ) - CS ) / Min( ( ( RRSe / RMSe ) + RRSe ) ,Max( ( CS / MUR ),( MUC / ( MUR - MUR ) ) ) ) ) * RMSe )", "obj1": 0.2421259842519685, "obj2": 0.6103338826779446}, {"determining": "( Min( ( RRS + ( FirstVNF_RAM_Server * ACS ) ) ,Const ) * Min( ( Max( Min( ( DDR - CRS ) ,AMS ),Const ) + FirstVNF_CPU ) ,( MDR - CRS ) ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) ) ) ) / Min( CS ,DS ) )", "obj1": 0.11023622047244094, "obj2": 0.794336258805485}, {"determining": "Max( ( FirstVNF_RAM / PN ),( Min( Min( FirstVNF_RAM_Server ,PN ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( RRS + FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( MUR * MUC ) - ( ( MUC - RMSe ) + ( MUC / ( Min( Min( ( DS + RMSe ) ,MLU ) ,CS ) * Max( ( RRSe * RMSe ),Min( ( CS * MUM ) ,RMSe ) ) ) ) ) ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7098523390358968}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( ( BR / FirstVNF_Mem ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( RRS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( MUR * MUC ) - ( ( ( MLU + CS ) - DS ) + RRSe ) ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7098523390358968}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( RRS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( MUM / Min( Min( CS ,DS ) ,( MLU + CS ) ) )", "obj1": 0.10433070866141732, "obj2": 0.8119751999653095}, {"determining": "Max( ( Const - PN ),( ( ( Const * ( ( ACS / ARS ) / ( FirstVNF_RAM_Server - ARS ) ) ) - ( FirstVNF_RAM / BR ) ) - BR ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( RRSe + Max( RCSe,MUM ) ) ) / Min( ( MLU + CS ) ,( MUC / DS ) ) )", "obj1": 0.1279527559055118, "obj2": 0.7549119010512064}, {"determining": "Min( Min( Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) ) ,CRS ) ,Max( ARS,FirstVNF_CPU_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,RMSe ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8764243750912434}, {"determining": "( Min( ( ( FirstVNF_RAM_Server * ACS ) + RRS ) ,Const ) * Min( ( Max( Const,( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) ,( MDR - CRS ) ) )", "choosing": "( ( ( Min( MUC ,DS ) - CS ) / Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS - MUR ) ) ) ,( ( MUM + ( MUC * ( ( MUC - DS ) + CS ) ) ) + RRSe ) ) ) * RMSe )", "obj1": 0.23622047244094488, "obj2": 0.6133651770629421}, {"determining": "( ( ACS + ( ACS + ( FirstVNF_Mem_Server / RRS ) ) ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.12401574803149606, "obj2": 0.7598433606365617}, {"determining": "( Min( ( RRS + ( FirstVNF_RAM_Server * ACS ) ) ,Const ) * Min( ( Max( FirstVNF_Mem_Server,Const ) + FirstVNF_CPU ) ,( MDR - CRS ) ) )", "choosing": "( ( ( Min( MUC ,DS ) - CS ) / Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) ) * RMSe )", "obj1": 0.23622047244094488, "obj2": 0.6133651770629421}, {"determining": "( Min( ( RRS + ( FirstVNF_RAM_Server * ACS ) ) ,Const ) * Min( ( Max( FirstVNF_Mem_Server,Const ) + FirstVNF_CPU ) ,( MDR - CRS ) ) )", "choosing": "( ( ( Min( MUC ,DS ) - CS ) / Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) ) * RMSe )", "obj1": 0.23622047244094488, "obj2": 0.6133651770629421}, {"determining": "( Min( ( RRS + ( FirstVNF_RAM_Server * ACS ) ) ,FirstVNF_RAM_Server ) * Min( ( Max( FirstVNF_Mem_Server,Const ) + FirstVNF_CPU ) ,( ( ( FirstVNF_RAM / FirstVNF_Mem ) / ACS ) - MDR ) ) )", "choosing": "( ( ( Min( Max( ( Min( MLU ,RCSe ) * Max( RRSe,Max( MUR,MLU ) ) ),Min( MUM ,RRSe ) ) ,DS ) - CS ) / Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( RRSe + ( MUC - RMSe ) ) + RRSe ) ) ) * RMSe )", "obj1": 0.23622047244094488, "obj2": 0.6133651770629421}, {"determining": "( Min( MDR ,Max( Max( ( CRS * Max( BR,FirstVNF_Mem_Server ) ),RRS ),PN ) ) * ( ( AMS + AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - ( MUM - Max( MUM,DS ) ) ) / Max( CS,DS ) )", "obj1": 0.11220472440944881, "obj2": 0.7872347768508486}, {"determining": "Max( ( ( ( RRS + Const ) * ( PN / RRS ) ) / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( RRS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( MUC ,DS ) - CS ) / Min( ( MUM + CS ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) ) * RMSe )", "obj1": 0.27165354330708663, "obj2": 0.5937122144113276}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( RRS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( MUC ,DS ) - CS ) / Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) ) * RMSe )", "obj1": 0.2106299212598425, "obj2": 0.6346499634655285}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( RRS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.12401574803149606, "obj2": 0.7598433606365617}, {"determining": "( ( ACS + ( ACS + ( FirstVNF_Mem_Server / RRS ) ) ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) )", "choosing": "( ( ( Min( MUC ,DS ) - CS ) / Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) ) * RMSe )", "obj1": 0.23622047244094488, "obj2": 0.6133651770629421}, {"determining": "( Min( ( RRS + ( FirstVNF_RAM_Server * ACS ) ) ,( FirstVNF_Mem / DDR ) ) * Min( ( Min( FirstVNF_Mem_Server ,Const ) + FirstVNF_CPU ) ,( MDR - CRS ) ) )", "choosing": "( ( ( Min( MUC ,DS ) - CS ) / Min( Max( ( ( MUR * MUC ) - MUM ),( Max( RRSe,( Max( RMSe,RRSe ) / CS ) ) / ( MUR - MUR ) ) ) ,( ( ( MUC - RMSe ) + RCSe ) + RRSe ) ) ) * RMSe )", "obj1": 0.22440944881889763, "obj2": 0.620786900585539}, {"determining": "( Min( ( RRS + ( FirstVNF_RAM_Server * ACS ) ) ,Const ) * Min( ( Max( FirstVNF_Mem_Server,Const ) + FirstVNF_CPU ) ,( MDR - CRS ) ) )", "choosing": "( ( MLU / CS ) * ( ( ( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) )", "obj1": 0.20669291338582677, "obj2": 0.6423100891223898}, {"determining": "( ( ACS + AMS ) - Min( Min( ( ARS / BR ) ,CRS ) ,Max( ARS,( Min( ( DDR - ( ( ACS + AMS ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ,AMS ) - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Min( MUC ,DS ) - CS ) / Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) ) * RMSe )", "obj1": 0.23622047244094488, "obj2": 0.6133651770629421}, {"determining": "Max( ( PN / FirstVNF_RAM ),( MDR / Min( CRS ,FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( RRSe / DS ) - ( ( ( MLU + CS ) - RRSe ) + RRSe ) ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7098523390358968}, {"determining": "( ( FirstVNF_CPU_Server + Min( BR ,BR ) ) + ( Min( Min( ( ARS / BR ) ,BR ) ,Max( ARS,FirstVNF_CPU ) ) * ( RRS / PN ) ) )", "choosing": "( ( Max( MUC,RMSe ) / ( CS / RCSe ) ) / Max( MUR,MLU ) )", "obj1": 0.1062992125984252, "obj2": 0.8024435858028063}, {"determining": "Min( Min( Max( FirstVNF_RAM,Max( PN,PN ) ) ,Min( Min( Const ,PN ) ,CRS ) ) ,Min( FirstVNF_RAM_Server ,Const ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),RMSe ) ) ) / ( MUR * MUC ) )", "obj1": 0.21456692913385828, "obj2": 0.627808780237427}, {"determining": "Max( ARS,Min( ( ( BR / FirstVNF_RAM ) / RRS ) ,( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * ( ( ( MDR - Const ) - ( Const * ( ( FirstVNF_CPU_Server + ACS ) / FirstVNF_Mem ) ) ) + MDR ) ) ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( MUR * MLU ) ) ) ) ) ) / Min( ( Min( Min( MLU ,( MUR + CS ) ) ,Min( CS ,MUR ) ) / RCSe ) ,DS ) )", "obj1": 0.11811023622047244, "obj2": 0.7827092963230321}, {"determining": "Min( Min( ( FirstVNF_Mem / Max( FirstVNF_RAM,ACS ) ) ,Const ) ,Max( ( ACS * ACS ),RRS ) )", "choosing": "( ( MLU / CS ) * ( ( ( MUR / RMSe ) / ( ( MUR * ( Min( ( MUR / MUR ) ,DS ) * Max( MLU,DS ) ) ) - ( RCSe / ( MLU - ( Min( DS ,MUM ) * ( RCSe * RRSe ) ) ) ) ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * Min( RCSe ,RMSe ) ) ) ) )", "obj1": 0.20078740157480315, "obj2": 0.6470817405670292}, {"determining": "( ( ACS + AMS ) - Min( Min( ( ARS / BR ) ,CRS ) ,Max( ARS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( MUC ,DS ) - CS ) / Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) ) * RMSe )", "obj1": 0.23228346456692914, "obj2": 0.6144620822033436}, {"determining": "Max( ( ( Min( ( PN + ( FirstVNF_RAM * ( ( ARS / PN ) + FirstVNF_Mem ) ) ) ,FirstVNF_Mem ) * AMS ) / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,RMSe ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8764243750912434}, {"determining": "( Max( ( Const * ( ( FirstVNF_CPU_Server + ACS ) / FirstVNF_Mem ) ),( MDR / MRS ) ) + ( ( RRS + Const ) * ( PN / RRS ) ) )", "choosing": "Max( ( ( MLU / CS ) * ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.1673228346456693, "obj2": 0.7026867082163184}, {"determining": "( Min( ( ( FirstVNF_RAM_Server * ACS ) + RRS ) ,Const ) * Min( ( Min( ( ( ( RRS * ACS ) - ACS ) - CRS ) ,AMS ) + FirstVNF_CPU ) ,( MDR - CRS ) ) )", "choosing": "( ( ( Min( MUC ,DS ) - CS ) / Min( Max( ( ( ( MUC / RMSe ) / ( ( MLU / DS ) / RCSe ) ) - Min( Min( MLU ,RMSe ) ,( RMSe * MLU ) ) ),( MUC / ( MUR - MUR ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) ) * RMSe )", "obj1": 0.25, "obj2": 0.6051767354714429}, {"determining": "( Min( ( RRS + ( FirstVNF_RAM_Server * ACS ) ) ,Const ) * Min( ( Max( FirstVNF_Mem_Server,Const ) + FirstVNF_CPU ) ,( MDR - CRS ) ) )", "choosing": "( ( ( Min( MUC ,DS ) - CS ) / Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) ) * RMSe )", "obj1": 0.23228346456692914, "obj2": 0.6144620822033436}, {"determining": "Max( ARS,Min( ( PN / RRS ) ,( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * ( ( ( FirstVNF_CPU - Const ) - ( Const * ( ( FirstVNF_CPU_Server + ACS ) / ( RRS + Const ) ) ) ) + Min( ACS ,BR ) ) ) ) )", "choosing": "( ( ( DS * ( RRSe + RCSe ) ) + ( CS * ( CS / RCSe ) ) ) / Min( CS ,DS ) )", "obj1": 0.08464566929133858, "obj2": 0.8540751768398266}, {"determining": "( Max( ( Const * ( ( FirstVNF_CPU_Server + ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) / FirstVNF_RAM ) ) / ( AMS * MDR ) ) ),( MDR / MRS ) ) + ( ( RRS + Const ) * ( PN / RRS ) ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( MUR * MLU ) ) ) ) ) ) / Min( CS ,DS ) )", "obj1": 0.11614173228346457, "obj2": 0.7828916036938575}, {"determining": "Max( ARS,Min( ( PN / RRS ) ,( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * ( ( ( MDR - Const ) - ( Const * ( ( FirstVNF_CPU_Server + ACS ) / FirstVNF_Mem ) ) ) + MDR ) ) ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( MUR * MLU ) ) ) ) ) ) / Min( CS ,DS ) )", "obj1": 0.1141732283464567, "obj2": 0.785177572792596}, {"determining": "( ( ACS + AMS ) - Min( Min( ( ARS / BR ) ,CRS ) ,Max( ARS,( Min( ( DDR - ( ( ACS + AMS ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ,AMS ) - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MLU / CS ) * ( ( ( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6188051156716671}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( MUM / Min( Min( CS ,DS ) ,( MLU + CS ) ) )", "obj1": 0.10236220472440945, "obj2": 0.8159659991262345}, {"determining": "Max( ( Const - PN ),Max( ( ( BR / FirstVNF_RAM ) - ( Const * ( Max( ( FirstVNF_Mem_Server / ( RRS * FirstVNF_CPU ) ),FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) ),BR ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) ) ) ) / Min( CS ,DS ) )", "obj1": 0.10826771653543307, "obj2": 0.8001446426705824}, {"determining": "Max( ARS,Min( ( ( FirstVNF_CPU_Server + ARS ) * ( ( ( MDR - Const ) - ( MRS * ( ( FirstVNF_CPU_Server + ACS ) / Max( DDR,FirstVNF_CPU ) ) ) ) + MDR ) ) ,( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - ( ( MRS - Const ) / Const ) ) / RRS ) ) )", "choosing": "( ( Min( Min( ( RCSe / ( Max( MLU,RRSe ) * MUR ) ) ,MUM ) ,Max( ( RRSe + MUR ),RCSe ) ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( ( ( MUR - MUR ) / MUC ) ,( MUR * MLU ) ) ) ) ) ) / Min( CS ,DS ) )", "obj1": 0.1220472440944882, "obj2": 0.7757993827987344}, {"determining": "Max( ( MRS / AMS ),( DDR - MRS ) )", "choosing": "( Max( ( MUC - RRSe ),RRSe ) / ( ( DS + Min( ( DS - ( MLU - Max( ( RRSe / MUM ),CS ) ) ) ,Min( ( RRSe + MUM ) ,CS ) ) ) * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7385074333789732}, {"determining": "( ( Max( Max( BR,FirstVNF_CPU ),ARS ) * ( FirstVNF_CPU_Server * ( RRS * FirstVNF_CPU ) ) ) - ( ( MRS - AMS ) - FirstVNF_RAM_Server ) )", "choosing": "( ( MUC + Min( ( ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) / Min( DS ,RCSe ) ) + RRSe ) + ( Max( DS,RRSe ) + ( RMSe * RRSe ) ) ) ,DS ) ) / ( RRSe + RMSe ) )", "obj1": 0.14960629921259844, "obj2": 0.7276091839209987}, {"determining": "( ( Max( Max( BR,FirstVNF_CPU ),ARS ) * ( FirstVNF_CPU_Server * ( RRS * FirstVNF_CPU ) ) ) - ( ( MRS - AMS ) - FirstVNF_RAM_Server ) )", "choosing": "( ( MUC + Min( ( ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) / Min( DS ,RCSe ) ) + RRSe ) + ( Max( DS,RRSe ) + ( RMSe * RRSe ) ) ) ,DS ) ) / ( RRSe + RMSe ) )", "obj1": 0.14960629921259844, "obj2": 0.7276091839209987}, {"determining": "( ( Max( Max( BR,FirstVNF_CPU ),ARS ) * ( FirstVNF_CPU_Server * ( RRS * FirstVNF_CPU ) ) ) - ( ( MRS - AMS ) - FirstVNF_RAM_Server ) )", "choosing": "( ( MUC + Min( ( ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) / Min( DS ,RCSe ) ) + RRSe ) + ( Max( DS,RRSe ) + ( RMSe * RRSe ) ) ) ,DS ) ) / ( RRSe + RMSe ) )", "obj1": 0.14960629921259844, "obj2": 0.7276091839209987}, {"determining": "( ( ( FirstVNF_CPU_Server * ( RRS * DDR ) ) * Max( Max( BR,FirstVNF_CPU ),ARS ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUM + MUC ),MUC ) / ( MUC + Min( ( MUC + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) - Min( DS ,RCSe ) ) + RRSe ) ) ,DS ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7276091839209987}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( RRS + ( FirstVNF_RAM_Server * ACS ) ) ,( RRS * FirstVNF_Mem ) ) ) ) - Min( ( PN + ( FirstVNF_RAM * ( ( ARS / PN ) + FirstVNF_Mem ) ) ) ,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( MUM * MUC ) - ( ( MUC - ( MUC - RMSe ) ) + RRSe ) ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7098523390358968}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( RRS + ( FirstVNF_RAM_Server * ACS ) ) ,( RRS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( MUR * MUC ) - ( ( MUC - ( MUC - RMSe ) ) + RRSe ) ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7098523390358968}, {"determining": "Max( ( ( Min( ( PN + ( FirstVNF_RAM * ( ( ARS / PN ) + FirstVNF_Mem ) ) ) ,FirstVNF_Mem ) * AMS ) / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,RMSe ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8764243750912434}, {"determining": "( Min( ( RRS + ( FirstVNF_RAM_Server * ACS ) ) ,Const ) * Min( ( Max( FirstVNF_Mem_Server,( ( RRS + Const ) * ( PN / RRS ) ) ) + FirstVNF_CPU ) ,( MDR - CRS ) ) )", "choosing": "( ( ( Min( MUC ,DS ) - CS ) / Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( MUC - RMSe ) + ( MUR - MUR ) ) + RRSe ) ) ) * RMSe )", "obj1": 0.25984251968503935, "obj2": 0.5942392125764074}, {"determining": "( Min( ( RRS + ( FirstVNF_RAM_Server * ACS ) ) ,Const ) * Min( ( Max( FirstVNF_Mem_Server,Const ) + FirstVNF_CPU ) ,( MDR - CRS ) ) )", "choosing": "( ( ( Min( MUC ,DS ) - CS ) / Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) ) * RMSe )", "obj1": 0.23622047244094488, "obj2": 0.6133651770629421}, {"determining": "( Max( Max( BR,ACS ),( MDR / MRS ) ) + ( Min( Min( ( ARS / BR ) ,BR ) ,Max( ARS,FirstVNF_CPU_Server ) ) * ( PN / RRS ) ) )", "choosing": "( ( MLU / CS ) * ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) )", "obj1": 0.1968503937007874, "obj2": 0.6512533696572458}, {"determining": "Max( Min( Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,( PN / FirstVNF_RAM_Server ) ) ,( Min( RRS ,CRS ) * ( MDR - ARS ) ) ),Min( ( ( AMS * MDR ) * ( ACS * ACS ) ) ,( Min( RRS ,( PN / ( PN / FirstVNF_RAM ) ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - ( Max( DS,RMSe ) + ( CS - Max( MLU,MUC ) ) ) ) * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.17125984251968504, "obj2": 0.6994332358577677}, {"determining": "( Max( ( Const * ( ( Min( MDR ,( ( Const + Const ) * PN ) ) + ACS ) / FirstVNF_Mem ) ),( MDR / MRS ) ) + ( ( RRS + Const ) * ( PN / RRS ) ) )", "choosing": "Max( ( ( MLU / CS ) * ( ( ( MUC / ( MLU / CS ) ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.17519685039370078, "obj2": 0.6934120405405844}, {"determining": "( Max( ( ( ( FirstVNF_CPU_Server + ACS ) / ( BR - FirstVNF_CPU_Server ) ) * Const ),( MDR / MRS ) ) + ( ( RRS + PN ) * ( PN / RRS ) ) )", "choosing": "Max( ( ( MLU / CS ) * ( ( ( MLU - MUC ) / ( CS / RCSe ) ) - Min( Min( DS ,RMSe ) ,( RMSe * MLU ) ) ) ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.1673228346456693, "obj2": 0.7026867082163184}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( RRS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( MUC ,DS ) - CS ) / Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) ) * RMSe )", "obj1": 0.23622047244094488, "obj2": 0.6133651770629421}, {"determining": "Max( ( ( Const * Max( FirstVNF_Mem_Server,MDR ) ) + ( FirstVNF_RAM_Server / FirstVNF_RAM ) ),AMS )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) ) ) ) / Min( CS ,DS ) )", "obj1": 0.11023622047244094, "obj2": 0.794336258805485}, {"determining": "Max( ( FirstVNF_RAM / PN ),( Min( Min( FirstVNF_RAM_Server ,PN ) ,Max( ( Max( CRS,PN ) - ( ( FirstVNF_CPU - BR ) + PN ) ),Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( FirstVNF_Mem + RRS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( MUC ,DS ) - CS ) / Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) ) * RMSe )", "obj1": 0.23622047244094488, "obj2": 0.6133651770629421}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( RRS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( Min( ( Min( Min( MLU ,( MUR + CS ) ) ,Min( CS ,MUR ) ) / RCSe ) ,DS ) * ( RCSe - MLU ) ) * RCSe ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7098523390358968}], "9": [{"determining": "Min( ( RRS - DDR ) ,Min( FirstVNF_RAM_Server ,AMS ) )", "choosing": "( ( MLU + ( RCSe + MUM ) ) / ( CS * ( RCSe - ( RRSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( Const * Max( FirstVNF_Mem_Server,MDR ) ) + ( FirstVNF_RAM_Server / FirstVNF_RAM ) ),AMS )", "choosing": "( Min( ( Min( MUR ,RMSe ) + MUM ) ,( ( MUC - RMSe ) + RRSe ) ) / Max( MUC,MUM ) )", "obj1": 0.08267716535433071, "obj2": 0.8593441314243215}, {"determining": "( Max( Max( BR,ACS ),( MDR / MRS ) ) + ( ( RRS + ( Max( Const,( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - ( ( AMS / MDR ) / PN ) ) ) - ( PN + CRS ) ) ) * ( PN / RRS ) ) )", "choosing": "Max( ( ( MUC / MUC ) - MUC ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7098523390358968}, {"determining": "Max( ( PN / Max( Const,MDR ) ),( Min( ( ( AMS + ( AMS * MRS ) ) - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + ( ARS + RRS ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( Max( MUR,MUC ) ,( ( Min( Min( RRSe ,( Min( MUM ,MUR ) + ( DS / MUR ) ) ) ,( MLU + Max( ( MUR * CS ),Min( CS ,RRSe ) ) ) ) - RMSe ) + RRSe ) ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7098523390358968}, {"determining": "Max( ( ( Min( ( PN + ( FirstVNF_RAM * ( ( ARS / PN ) + FirstVNF_Mem ) ) ) ,FirstVNF_Mem ) * AMS ) / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,RMSe ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8764243750912434}, {"determining": "Max( ( ( FirstVNF_RAM_Server * AMS ) / FirstVNF_RAM ),( Min( ( DDR - ( ( ACS + AMS ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ,( AMS / ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) + RRS ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( RMSe,MUC ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.8792625357489905}, {"determining": "( Max( ( Const * ( ( FirstVNF_CPU_Server + ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) / FirstVNF_RAM ) ) / ( AMS * MDR ) ) ),( MDR / MRS ) ) + ( ( RRS + Const ) * ( PN / RRS ) ) )", "choosing": "Max( ( ( ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) ,MUM ) ) * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.16929133858267717, "obj2": 0.7005045557600293}, {"determining": "Max( Min( RRS ,( ACS + CRS ) ),( FirstVNF_Mem_Server / AMS ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( MUC * Min( MUC ,Max( Max( DS,MUR ),Min( ( DS - MUM ) ,( RMSe + CS ) ) ) ) ) - RCSe ) + Min( MUC ,DS ) ) )", "obj1": 0.13976377952755906, "obj2": 0.7385074333789732}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( ( ( AMS * MRS ) + AMS ) - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + Max( ( MRS / FirstVNF_CPU ),ACS ) ) ,( RRS * FirstVNF_Mem ) ) ) ) - DDR ) )", "choosing": "Max( ( ( MUC * MUR ) - ( ( ( MLU + CS ) - ( MUM / CS ) ) + RRSe ) ),( MUC / ( MUR - CS ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7098523390358968}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( Const * ( ( FirstVNF_CPU_Server + ACS ) / FirstVNF_Mem ) ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( RRS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( MUR,( MUC / ( MUR - MUR ) ) )", "obj1": 0.16535433070866143, "obj2": 0.7037799206772251}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( RRS + ( FirstVNF_RAM_Server * ACS ) ) ,( ( CRS - ( ACS / AMS ) ) * ( FirstVNF_CPU_Server / Const ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( MUR * MUC ) - ( RRSe + ( MUC - ( MUC - MLU ) ) ) ),( MUC / ( ( CS / MUM ) - MUR ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7098523390358968}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( Min( Const ,AMS ) ,AMS ) - PN ) )", "choosing": "( ( ( Min( Max( MLU,Max( CS,RRSe ) ) ,MUM ) - RRSe ) + ( RCSe - Min( ( DS * ( MUR * MUM ) ) ,( Max( DS,RMSe ) + ( CS - Max( MLU,MUC ) ) ) ) ) ) / Min( ( MLU + CS ) ,Min( RCSe ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.8792625357489905}, {"determining": "Max( ( Min( ( ( FirstVNF_Mem / ( FirstVNF_Mem_Server / MDR ) ) - CRS ) ,( ( Max( CRS,PN ) - ( Max( MDR,Max( FirstVNF_CPU,FirstVNF_CPU ) ) + PN ) ) + Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,( RRS * Const ) ) ) ) - FirstVNF_Mem_Server ),( PN / FirstVNF_RAM ) )", "choosing": "Max( ( MUC / ( MUR - MUR ) ),( ( ( ( DS + MLU ) + RMSe ) * MUR ) - ( ( ( MLU + CS ) - RMSe ) + RRSe ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7098523390358968}, {"determining": "( ( ACS + ( ACS + ( FirstVNF_Mem_Server + RRS ) ) ) - Min( Min( FirstVNF_CPU ,Max( FirstVNF_RAM,FirstVNF_CPU ) ) ,FirstVNF_CPU ) )", "choosing": "( Min( ( DS / RMSe ) ,Min( DS ,MUC ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.16338582677165353, "obj2": 0.7080872545735126}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) - ( ( ( FirstVNF_Mem_Server * ( RRS + RRS ) ) - ( FirstVNF_RAM + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + ( Min( ( ( RRSe + ( MLU * DS ) ) - CS ) ,( ( ( RCSe - CS ) * MLU ) / ( MUR - ( MUR - DS ) ) ) ) * ( RCSe - MUC ) ) ),RRSe ) / ( MUC + ( MUC + DS ) ) )", "obj1": 0.14566929133858267, "obj2": 0.7349876896211709}, {"determining": "( Max( ACS,( ( ( ARS / FirstVNF_RAM_Server ) / ARS ) + ( AMS + ARS ) ) ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) )", "choosing": "( ( Min( RMSe ,RRSe ) + Min( MUC ,DS ) ) / Max( MUM,RMSe ) )", "obj1": 0.12401574803149606, "obj2": 0.7598433606365617}, {"determining": "( Max( ( Const * ( ( FirstVNF_CPU_Server + ACS ) / FirstVNF_Mem ) ),( MRS / MDR ) ) + Min( CRS ,ARS ) )", "choosing": "( ( RCSe - Min( RRSe ,MUC ) ) / ( DS + CS ) )", "obj1": 0.11023622047244094, "obj2": 0.794336258805485}, {"determining": "( Max( ( Const * ( ( FirstVNF_CPU_Server + ACS ) / Min( ( Const / FirstVNF_CPU_Server ) ,Min( MDR ,AMS ) ) ) ),( MDR / MRS ) ) + ( ( RRS - Const ) * ( PN / RRS ) ) )", "choosing": "Max( ( ( MLU / CS ) * Max( ( ( MUC / RMSe ) / ( CS / RCSe ) ),Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) ),( MUC / DS ) )", "obj1": 0.1673228346456693, "obj2": 0.7026867082163184}, {"determining": "Max( ARS,Min( ( PN / RRS ) ,( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * ( ( FirstVNF_CPU_Server + Max( DDR,AMS ) ) + MDR ) ) ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( ( ( DS / MLU ) + ( MUC * RMSe ) ),( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) ) ) ) / Min( CS ,Min( Min( RRSe ,( RMSe / CS ) ) ,MUM ) ) )", "obj1": 0.11023622047244094, "obj2": 0.794336258805485}, {"determining": "( ( Min( Const ,( ( BR * FirstVNF_Mem_Server ) - Min( MDR ,FirstVNF_RAM ) ) ) - ( CRS * MDR ) ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + MUM ),Max( ( RMSe - Max( Min( ( CS - RCSe ) ,CS ),RRSe ) ),RCSe ) ) / ( ( ( ( MUC - RRSe ) + RMSe ) + ( ( CS * MUC ) + Max( MUM,MUC ) ) ) + Min( Max( CS,RCSe ) ,DS ) ) )", "obj1": 0.17716535433070865, "obj2": 0.6686947769402188}, {"determining": "Max( Max( BR,DDR ),Max( ( ( BR / FirstVNF_RAM ) - ( RRS * ACS ) ),BR ) )", "choosing": "( ( DS / MUC ) / Min( Max( MLU,CS ) ,Min( CS ,DS ) ) )", "obj1": 0.08858267716535433, "obj2": 0.8358780584707017}, {"determining": "( ( CRS + RRS ) + ( ( RRS + Const ) * ( PN / DDR ) ) )", "choosing": "Max( ( ( ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Max( RRSe,Min( RCSe ,MUC ) ) ,MUM ) ) * MUC ) - DS ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.16929133858267717, "obj2": 0.7005045557600293}, {"determining": "Max( ( ( FirstVNF_RAM_Server * AMS ) / FirstVNF_RAM ),( ( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( ( ( ( MUC - RMSe ) + RRSe ) + RRSe ),MUC ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8199728047683}, {"determining": "Max( Min( CRS ,FirstVNF_Mem ),( RRS - AMS ) )", "choosing": "( Max( Max( RCSe,CS ),MUM ) / ( ( MLU + CS ) / ( MUC + DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.8792625357489905}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - ( FirstVNF_RAM - Min( DDR ,DDR ) ) ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( CS / ( RMSe / MUM ) ),( MUC / Max( RMSe,MUC ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( DS ,MUC ) ) )", "obj1": 0.07874015748031496, "obj2": 0.8792625357489905}, {"determining": "( Min( ( RRS + ( FirstVNF_RAM_Server * ACS ) ) ,Const ) * Min( ( Max( Min( ( DDR - CRS ) ,AMS ),Const ) + FirstVNF_CPU ) ,( MDR - CRS ) ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) ) ) ) / Min( CS ,DS ) )", "obj1": 0.11023622047244094, "obj2": 0.794336258805485}, {"determining": "Max( ( FirstVNF_RAM / PN ),( Min( Min( FirstVNF_RAM_Server ,PN ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( RRS + FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( MUR * MUC ) - ( ( MUC - RMSe ) + ( MUC / ( Min( Min( ( DS + RMSe ) ,MLU ) ,CS ) * Max( ( RRSe * RMSe ),Min( ( CS * MUM ) ,RMSe ) ) ) ) ) ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7098523390358968}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( ( BR / FirstVNF_Mem ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( RRS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( MUR * MUC ) - ( ( ( MLU + CS ) - DS ) + RRSe ) ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7098523390358968}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( RRS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( MUM / Min( Min( CS ,DS ) ,( MLU + CS ) ) )", "obj1": 0.10433070866141732, "obj2": 0.8119751999653095}, {"determining": "Max( ( Const - PN ),( ( ( Const * ( ( ACS / ARS ) / ( FirstVNF_RAM_Server - ARS ) ) ) - ( FirstVNF_RAM / BR ) ) - BR ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( RRSe + Max( RCSe,MUM ) ) ) / Min( ( MLU + CS ) ,( MUC / DS ) ) )", "obj1": 0.1279527559055118, "obj2": 0.7549119010512064}, {"determining": "Min( Min( Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) ) ,CRS ) ,Max( ARS,FirstVNF_CPU_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,RMSe ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8764243750912434}, {"determining": "( ( ACS + ( ACS + ( FirstVNF_Mem_Server / RRS ) ) ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.12401574803149606, "obj2": 0.7598433606365617}, {"determining": "( Min( MDR ,Max( Max( ( CRS * Max( BR,FirstVNF_Mem_Server ) ),RRS ),PN ) ) * ( ( AMS + AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - ( MUM - Max( MUM,DS ) ) ) / Max( CS,DS ) )", "obj1": 0.11220472440944881, "obj2": 0.7872347768508486}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( RRS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.12401574803149606, "obj2": 0.7598433606365617}, {"determining": "Max( ( PN / FirstVNF_RAM ),( MDR / Min( CRS ,FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( RRSe / DS ) - ( ( ( MLU + CS ) - RRSe ) + RRSe ) ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7098523390358968}, {"determining": "( ( FirstVNF_CPU_Server + Min( BR ,BR ) ) + ( Min( Min( ( ARS / BR ) ,BR ) ,Max( ARS,FirstVNF_CPU ) ) * ( RRS / PN ) ) )", "choosing": "( ( Max( MUC,RMSe ) / ( CS / RCSe ) ) / Max( MUR,MLU ) )", "obj1": 0.1062992125984252, "obj2": 0.8024435858028063}, {"determining": "Max( ( ( Min( ( PN + ( FirstVNF_RAM * ( ( ARS / PN ) + FirstVNF_Mem ) ) ) ,FirstVNF_Mem ) * AMS ) / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,RMSe ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8764243750912434}, {"determining": "( Max( ( Const * ( ( FirstVNF_CPU_Server + ACS ) / FirstVNF_Mem ) ),( MDR / MRS ) ) + ( ( RRS + Const ) * ( PN / RRS ) ) )", "choosing": "Max( ( ( MLU / CS ) * ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.1673228346456693, "obj2": 0.7026867082163184}, {"determining": "Max( ARS,Min( ( PN / RRS ) ,( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * ( ( ( FirstVNF_CPU - Const ) - ( Const * ( ( FirstVNF_CPU_Server + ACS ) / ( RRS + Const ) ) ) ) + Min( ACS ,BR ) ) ) ) )", "choosing": "( ( ( DS * ( RRSe + RCSe ) ) + ( CS * ( CS / RCSe ) ) ) / Min( CS ,DS ) )", "obj1": 0.08464566929133858, "obj2": 0.8540751768398266}, {"determining": "Max( ( MRS / AMS ),( DDR - MRS ) )", "choosing": "( Max( ( MUC - RRSe ),RRSe ) / ( ( DS + Min( ( DS - ( MLU - Max( ( RRSe / MUM ),CS ) ) ) ,Min( ( RRSe + MUM ) ,CS ) ) ) * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7385074333789732}, {"determining": "( ( Max( Max( BR,FirstVNF_CPU ),ARS ) * ( FirstVNF_CPU_Server * ( RRS * FirstVNF_CPU ) ) ) - ( ( MRS - AMS ) - FirstVNF_RAM_Server ) )", "choosing": "( ( MUC + Min( ( ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) / Min( DS ,RCSe ) ) + RRSe ) + ( Max( DS,RRSe ) + ( RMSe * RRSe ) ) ) ,DS ) ) / ( RRSe + RMSe ) )", "obj1": 0.14960629921259844, "obj2": 0.7276091839209987}, {"determining": "( ( Max( Max( BR,FirstVNF_CPU ),ARS ) * ( FirstVNF_CPU_Server * ( RRS * FirstVNF_CPU ) ) ) - ( ( MRS - AMS ) - FirstVNF_RAM_Server ) )", "choosing": "( ( MUC + Min( ( ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) / Min( DS ,RCSe ) ) + RRSe ) + ( Max( DS,RRSe ) + ( RMSe * RRSe ) ) ) ,DS ) ) / ( RRSe + RMSe ) )", "obj1": 0.14960629921259844, "obj2": 0.7276091839209987}, {"determining": "( ( Max( Max( BR,FirstVNF_CPU ),ARS ) * ( FirstVNF_CPU_Server * ( RRS * FirstVNF_CPU ) ) ) - ( ( MRS - AMS ) - FirstVNF_RAM_Server ) )", "choosing": "( ( MUC + Min( ( ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) / Min( DS ,RCSe ) ) + RRSe ) + ( Max( DS,RRSe ) + ( RMSe * RRSe ) ) ) ,DS ) ) / ( RRSe + RMSe ) )", "obj1": 0.14960629921259844, "obj2": 0.7276091839209987}, {"determining": "( ( ( FirstVNF_CPU_Server * ( RRS * DDR ) ) * Max( Max( BR,FirstVNF_CPU ),ARS ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUM + MUC ),MUC ) / ( MUC + Min( ( MUC + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) - Min( DS ,RCSe ) ) + RRSe ) ) ,DS ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7276091839209987}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( RRS + ( FirstVNF_RAM_Server * ACS ) ) ,( RRS * FirstVNF_Mem ) ) ) ) - Min( ( PN + ( FirstVNF_RAM * ( ( ARS / PN ) + FirstVNF_Mem ) ) ) ,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( MUM * MUC ) - ( ( MUC - ( MUC - RMSe ) ) + RRSe ) ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7098523390358968}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( RRS + ( FirstVNF_RAM_Server * ACS ) ) ,( RRS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( MUR * MUC ) - ( ( MUC - ( MUC - RMSe ) ) + RRSe ) ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7098523390358968}, {"determining": "Max( ( ( Min( ( PN + ( FirstVNF_RAM * ( ( ARS / PN ) + FirstVNF_Mem ) ) ) ,FirstVNF_Mem ) * AMS ) / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,RMSe ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8764243750912434}, {"determining": "Max( Min( Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,( PN / FirstVNF_RAM_Server ) ) ,( Min( RRS ,CRS ) * ( MDR - ARS ) ) ),Min( ( ( AMS * MDR ) * ( ACS * ACS ) ) ,( Min( RRS ,( PN / ( PN / FirstVNF_RAM ) ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - ( Max( DS,RMSe ) + ( CS - Max( MLU,MUC ) ) ) ) * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.17125984251968504, "obj2": 0.6994332358577677}, {"determining": "( Max( ( Const * ( ( Min( MDR ,( ( Const + Const ) * PN ) ) + ACS ) / FirstVNF_Mem ) ),( MDR / MRS ) ) + ( ( RRS + Const ) * ( PN / RRS ) ) )", "choosing": "Max( ( ( MLU / CS ) * ( ( ( MUC / ( MLU / CS ) ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.17519685039370078, "obj2": 0.6934120405405844}, {"determining": "( Max( ( ( ( FirstVNF_CPU_Server + ACS ) / ( BR - FirstVNF_CPU_Server ) ) * Const ),( MDR / MRS ) ) + ( ( RRS + PN ) * ( PN / RRS ) ) )", "choosing": "Max( ( ( MLU / CS ) * ( ( ( MLU - MUC ) / ( CS / RCSe ) ) - Min( Min( DS ,RMSe ) ,( RMSe * MLU ) ) ) ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.1673228346456693, "obj2": 0.7026867082163184}, {"determining": "Max( ( ( Const * Max( FirstVNF_Mem_Server,MDR ) ) + ( FirstVNF_RAM_Server / FirstVNF_RAM ) ),AMS )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) ) ) ) / Min( CS ,DS ) )", "obj1": 0.11023622047244094, "obj2": 0.794336258805485}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( RRS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( Min( ( Min( Min( MLU ,( MUR + CS ) ) ,Min( CS ,MUR ) ) / RCSe ) ,DS ) * ( RCSe - MLU ) ) * RCSe ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7098523390358968}, {"determining": "( ( Min( Const ,( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( ( AMS * PN ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( ( ( ( MUC + ( RRSe * RCSe ) ) / MLU ) * Min( MUR ,DS ) ) + RRSe ) + ( ( CS * MUM ) + Max( MUM,MUC ) ) ) + Min( MUC ,DS ) ) )", "obj1": 0.19291338582677164, "obj2": 0.6562439548808973}, {"determining": "Max( ARS,Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( ( MUC / ( MUR - MUR ) ) ,( MUR * MUC ) ) ) ) ) ) / Min( CS ,DS ) )", "obj1": 0.1141732283464567, "obj2": 0.7811608212115361}, {"determining": "Max( ( ( FirstVNF_RAM_Server * AMS ) / FirstVNF_RAM ),( ( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( ( ( ( MUC - RMSe ) + RRSe ) + RRSe ),MUC ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8199728047683}, {"determining": "( Min( ( RRS + ( FirstVNF_RAM_Server * ACS ) ) ,Const ) * Min( ( Max( FirstVNF_Mem_Server,Const ) + FirstVNF_CPU ) ,( MDR - CRS ) ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.1279527559055118, "obj2": 0.7549119010512064}, {"determining": "( Min( ( RRS + ( FirstVNF_RAM_Server * ACS ) ) ,Const ) * Min( ( Max( FirstVNF_Mem_Server,Const ) + FirstVNF_CPU ) ,( MDR - CRS ) ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.13582677165354332, "obj2": 0.7545774375069927}, {"determining": "( ( ACS / ARS ) - ( Min( FirstVNF_Mem_Server ,RRS ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUM + MUC ),MUC ) / ( MUC + Min( ( MUC + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) - Min( DS ,RCSe ) ) + RRSe ) ) ,DS ) ) )", "obj1": 0.1377952755905512, "obj2": 0.7444448462139566}, {"determining": "Max( ( Const - PN ),( ( ( Const * ( ( ACS / ARS ) / FirstVNF_Mem ) ) - ( BR / FirstVNF_RAM ) ) / BR ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.1279527559055118, "obj2": 0.7549119010512064}, {"determining": "( ( ( FirstVNF_CPU_Server * ( RRS * DDR ) ) + Max( ARS,Max( BR,FirstVNF_CPU ) ) ) - ( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "( Max( ( MLU + MUM ),MUC ) / ( MUC + Min( ( MUR + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) - Min( DS ,RCSe ) ) + RRSe ) ) ,DS ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7276091839209987}, {"determining": "( ( ACS + AMS ) - Min( Min( ( ARS / BR ) ,CRS ) ,Max( ARS,( Min( ( DDR - ( ( ACS + AMS ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ,AMS ) - FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( ( ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) ,MUM ) ) * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.16929133858267717, "obj2": 0.7005045557600293}, {"determining": "Max( ( RRS - FirstVNF_RAM_Server ),( FirstVNF_Mem_Server / DDR ) )", "choosing": "( ( ( MUC / RMSe ) / ( CS / RCSe ) ) / ( MUC + Min( ( MUC + DS ) ,DS ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6509029392315767}, {"determining": "Max( ( Max( BR,Min( Min( PN ,( FirstVNF_Mem - FirstVNF_CPU ) ) ,ARS ) ) * ( PN - FirstVNF_RAM ) ),( CRS / Const ) )", "choosing": "( ( ( Min( MUM ,MUC ) / ( ( Max( MUC,( MUR + Min( MUM ,RCSe ) ) ) + DS ) * MUR ) ) / RMSe ) / Min( CS ,RCSe ) )", "obj1": 0.08464566929133858, "obj2": 0.8540751768398266}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( ( MDR - CRS ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( RRS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( MUR * MUC ) - ( ( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) - RMSe ) + RRSe ) ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7098523390358968}, {"determining": "( Min( ( RRS + ( FirstVNF_RAM_Server * ACS ) ) ,Const ) * Min( ( Max( FirstVNF_Mem_Server,Const ) + FirstVNF_CPU ) ,( MDR - CRS ) ) )", "choosing": "Max( ( ( MUR * MUC ) - ( ( ( MLU + CS ) - RMSe ) + RRSe ) ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7098523390358968}, {"determining": "Max( ( MDR - BR ),( FirstVNF_Mem_Server - Min( ( FirstVNF_RAM_Server - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( RRS * FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Min( ( MLU + CS ) ,Min( MUC ,DS ) ) / Min( Max( ( ( DS * MUC ) - Max( MUR,RRSe ) ),( MUC / ( CS * CS ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7644607415248521}, {"determining": "Max( ( Const - PN ),Max( ( ( Const * ( Max( ( FirstVNF_Mem_Server / ( DDR / FirstVNF_CPU ) ),FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) - ( ( BR * CRS ) - PN ) ),BR ) )", "choosing": "( Min( ( Min( MUC ,DS ) - CS ) ,( CS - ( MUC * RMSe ) ) ) * RMSe )", "obj1": 0.19881889763779528, "obj2": 0.6443441900250597}, {"determining": "Max( Min( Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,( PN / FirstVNF_RAM_Server ) ) ,( Min( RRS ,CRS ) * ( MDR - ARS ) ) ),Min( ( ( AMS * MDR ) * ( ACS * ACS ) ) ,( Min( RRS ,( PN / ( PN / FirstVNF_RAM ) ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( MUR * MUC ) - ( ( MUC - RMSe ) + ( MUC / ( Min( Min( ( DS + RMSe ) ,MLU ) ,CS ) * Max( ( RRSe * RMSe ),Min( ( CS * MUM ) ,RMSe ) ) ) ) ) ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7098523390358968}, {"determining": "Max( ( FirstVNF_RAM / PN ),( Min( Min( FirstVNF_RAM_Server ,PN ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( RRS + FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - ( Max( DS,RMSe ) + ( CS - Max( MLU,MUC ) ) ) ) * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.17125984251968504, "obj2": 0.6994332358577677}, {"determining": "Max( Min( Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,( PN / FirstVNF_RAM_Server ) ) ,( Min( RRS ,CRS ) * ( MDR - ARS ) ) ),Min( ( ( MDR * AMS ) * ( ACS * ACS ) ) ,( Min( RRS ,( PN / ( PN / ( BR + ( FirstVNF_CPU_Server - Const ) ) ) ) ) - ARS ) ) )", "choosing": "Max( ( MUM - ( ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - ( Max( DS,RMSe ) + ( CS - Max( MLU,MUC ) ) ) ) * MUC ) ),( MUC / ( Min( ( ( ( ( RCSe / DS ) * CS ) / ( RRSe * MUC ) ) * RCSe ) ,RRSe ) - MUR ) ) )", "obj1": 0.17125984251968504, "obj2": 0.6994332358577677}, {"determining": "( Min( ( RRS + ( FirstVNF_CPU / MRS ) ) ,RRS ) * Min( ( MDR - CRS ) ,( Max( FirstVNF_Mem_Server,Const ) + FirstVNF_CPU ) ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( ( MUC - RRSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( Min( MUM ,RMSe ) ,DS ) ) )", "obj1": 0.13582677165354332, "obj2": 0.7545774375069927}, {"determining": "( Min( ( RRS + ( FirstVNF_RAM_Server * ACS ) ) ,Const ) * Min( ( Min( ( DDR - CRS ) ,AMS ) + FirstVNF_CPU ) ,( MDR - CRS ) ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.12401574803149606, "obj2": 0.7598433606365617}, {"determining": "Max( ( ( Const * Max( FirstVNF_Mem_Server,MDR ) ) + ( FirstVNF_RAM_Server / FirstVNF_RAM ) ),AMS )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) ) ) ) / Min( CS ,DS ) )", "obj1": 0.10826771653543307, "obj2": 0.7978532818284213}, {"determining": "Min( Min( Max( Max( ARS,AMS ),Max( PN,PN ) ) ,Min( Min( Const ,PN ) ,CRS ) ) ,Min( ( ( ( Const - ( FirstVNF_Mem * AMS ) ) / MRS ) / ( BR * ( Const / FirstVNF_Mem_Server ) ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( Min( Max( MUR,DS ) ,( ( MUR - MUM ) - RMSe ) ) ,Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ),RMSe ) ) ) / ( MUR * RMSe ) )", "obj1": 0.20078740157480315, "obj2": 0.6391437014340974}, {"determining": "( ( Min( ( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( MLU / CS ) * ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.1673228346456693, "obj2": 0.7026867082163184}, {"determining": "( ( ACS + AMS ) - Min( Min( ( ARS / BR ) ,CRS ) ,Max( ARS,( Min( ( DDR - ( ( ACS + AMS ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ,AMS ) - FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( ( MUR * MUC ) - ( ( MUC - RMSe ) + ( MUC / ( Min( Min( ( DS + RMSe ) ,MLU ) ,CS ) * Max( ( RRSe * RMSe ),Min( ( CS * MUM ) ,RMSe ) ) ) ) ) ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7098523390358968}, {"determining": "Max( ( ACS * Min( FirstVNF_RAM_Server ,AMS ) ),( Min( Min( Const ,FirstVNF_Mem ) ,AMS ) - PN ) )", "choosing": "( ( ( Min( Max( MLU,Max( CS,RRSe ) ) ,MUM ) - RRSe ) + ( RCSe - Min( ( DS * ( MUR * MUM ) ) ,( Max( DS,RMSe ) + ( ( MLU / ( RMSe + MLU ) ) - Max( MLU,MUC ) ) ) ) ) ) / ( ( MLU + CS ) - Min( RCSe ,DS ) ) )", "obj1": 0.09448818897637795, "obj2": 0.8152509991496872}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( RMSe,MUC ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.8792625357489905}, {"determining": "Max( ( Const - FirstVNF_RAM_Server ),( FirstVNF_Mem_Server / DDR ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( MUC + Min( ( MUC + DS ) ,DS ) ) )", "obj1": 0.13976377952755906, "obj2": 0.7385074333789732}, {"determining": "( ( FirstVNF_RAM - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( ( CRS + FirstVNF_Mem_Server ) - ( DDR / MDR ) ) )", "choosing": "( ( RRSe / MLU ) / Max( ( MUC * MUM ),RRSe ) )", "obj1": 0.14566929133858267, "obj2": 0.7349876896211709}, {"determining": "Max( ( ( Min( ( PN + ( FirstVNF_RAM * ( ( ARS / PN ) + FirstVNF_Mem ) ) ) ,FirstVNF_Mem ) * AMS ) / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,RMSe ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8764243750912434}, {"determining": "Max( Min( Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,( PN / FirstVNF_RAM_Server ) ) ,( Min( RRS ,CRS ) * Min( ( RRS + ( FirstVNF_RAM_Server * ACS ) ) ,( RRS * FirstVNF_Mem ) ) ) ),Min( ( ( AMS * MDR ) * ( ACS * ACS ) ) ,( Min( RRS ,( PN / ( PN / FirstVNF_RAM ) ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - ( MUC - ( MUC - RMSe ) ) ) * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.17125984251968504, "obj2": 0.6994332358577677}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( RRS + ( FirstVNF_RAM_Server * ACS ) ) ,( RRS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( MUR * MUC ) - ( ( MUC - ( MUC - RMSe ) ) + RRSe ) ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7098523390358968}, {"determining": "Max( Min( Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,( PN / FirstVNF_RAM_Server ) ) ,( Min( RRS ,CRS ) * ( MDR - ARS ) ) ),Min( ( ( AMS * MDR ) * ( ACS * ACS ) ) ,( Min( RRS ,( PN / ( PN / FirstVNF_RAM ) ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - ( Max( DS,RMSe ) + ( CS - Max( MLU,MUC ) ) ) ) * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.17125984251968504, "obj2": 0.6994332358577677}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( Max( FirstVNF_Mem_Server,ARS ) ,( RRS * FirstVNF_Mem ) ) ) ) - Const ) )", "choosing": "( Min( Min( CS ,DS ) ,( ( RMSe + ( CS + RCSe ) ) + CS ) ) / MUM )", "obj1": 0.10433070866141732, "obj2": 0.8119751999653095}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( Max( CRS,PN ) - ( CRS + Min( ( CRS * AMS ) ,FirstVNF_RAM_Server ) ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( AMS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( MUR * MUC ) - ( ( ( MLU + CS ) - ( Min( ( CS + Min( RCSe ,MLU ) ) ,RRSe ) + RCSe ) ) + MUM ) ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7098523390358968}, {"determining": "Max( ( ( Min( ( PN + ( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * PN ) / ( ( ARS / PN ) + FirstVNF_Mem ) ) ) ,FirstVNF_Mem ) * AMS ) / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + MUC ),DS ) ) - MLU ) + RRSe ) + RRSe ) ) / Min( ( Max( ( MUM - RRSe ),Max( Min( MUC ,MUM ),MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8764243750912434}, {"determining": "( Min( FirstVNF_RAM ,Max( ( PN / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + FirstVNF_RAM ) ),FirstVNF_RAM ) ) - ( Min( RRS ,FirstVNF_Mem_Server ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( MUC ,MUM ),RRSe ) / ( ( Max( Max( MUC,Max( RRSe,( RMSe + MUM ) ) ),Min( ( Min( RCSe ,Max( CS,MUM ) ) + Max( Max( CS,CS ),Max( MLU,MUR ) ) ) ,Max( ( RRSe * ( MUM * RMSe ) ),MUR ) ) ) - MUC ) * ( ( RRSe * Min( MLU ,MUR ) ) + ( RCSe - Min( Min( Max( CS,( MUR / RMSe ) ) ,RMSe ) ,RCSe ) ) ) ) )", "obj1": 0.14566929133858267, "obj2": 0.7349876896211709}, {"determining": "Max( ( PN / ( MDR * ACS ) ),( Min( ( DDR - CRS ) ,( ( Max( ARS,PN ) - ( Min( MDR ,Max( FirstVNF_CPU,FirstVNF_CPU ) ) + PN ) ) + Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,( RRS * Const ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( ( MUC / ( MUR * Max( RCSe,RRSe ) ) ),( ( ( MLU / ( Max( RRSe,MUC ) + MUR ) ) * MUC ) - ( ( ( MLU + CS ) - RMSe ) + RRSe ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7098523390358968}, {"determining": "( Max( ( Const * ( ( ACS + CRS ) / FirstVNF_Mem ) ),( MDR / MRS ) ) + ( ( RRS + ( FirstVNF_RAM_Server / DDR ) ) * ( PN / RRS ) ) )", "choosing": "Max( ( ( MUM + DS ) * ( ( ( MUC / RMSe ) * ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.1673228346456693, "obj2": 0.7026867082163184}, {"determining": "( Min( ( RRS + ( FirstVNF_RAM_Server * ACS ) ) ,Const ) * Min( ( Max( FirstVNF_Mem_Server,Const ) + FirstVNF_CPU ) ,( MDR - CRS ) ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) ) ) ) / Min( CS ,DS ) )", "obj1": 0.11023622047244094, "obj2": 0.794336258805485}, {"determining": "Max( ( ( Min( ( PN + ( FirstVNF_RAM * ( ( ARS / PN ) + FirstVNF_Mem ) ) ) ,FirstVNF_Mem ) * AMS ) / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,RMSe ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8764243750912434}, {"determining": "Max( ( ( ( RRS + Const ) * ( PN / RRS ) ) / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( RRS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) ) ) ) / Min( CS ,DS ) )", "obj1": 0.11023622047244094, "obj2": 0.794336258805485}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( RRS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.13582677165354332, "obj2": 0.7545774375069927}, {"determining": "Min( Min( Max( ( PN / FirstVNF_RAM ),( RRS - FirstVNF_Mem_Server ) ) ,CRS ) ,Max( ARS,FirstVNF_CPU_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUR - MUR ) ) ,( ( ( Max( RCSe,RMSe ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.1594488188976378, "obj2": 0.7130937799793058}, {"determining": "Max( ( ( ( ( FirstVNF_Mem + Const ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) + Max( RRS,MRS ) ) / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( ( CRS - PN ) - ( CRS + PN ) ) + Min( ( RRS + ( FirstVNF_RAM_Server * ACS ) ) ,( RRS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( MUR * MUC ) - ( Max( MUR,CS ) + RRSe ) ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7098523390358968}, {"determining": "Max( ( ( Min( ( PN + ( FirstVNF_RAM * ( ( ARS / PN ) + FirstVNF_Mem ) ) ) ,FirstVNF_Mem ) * AMS ) / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,RMSe ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8764243750912434}, {"determining": "( ( ( FirstVNF_CPU_Server * ( RRS * DDR ) ) * Max( Max( ( RRS * FirstVNF_Mem ),FirstVNF_CPU ),ARS ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUM + MUC ),Min( Min( CS ,DS ) ,( MLU + CS ) ) ) / ( MUC + Min( ( MUC + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) - Min( DS ,RCSe ) ) + RRSe ) ) ,DS ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7276091839209987}, {"determining": "( Min( ( FirstVNF_CPU_Server * ( RRS * DDR ) ) ,Max( Max( BR,FirstVNF_CPU ),ARS ) ) - ( ( MDR * Const ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUM + CS ),MUC ) / ( MUC + Min( ( MUC + ( MUM + CS ) ) ,DS ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7276091839209987}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( RRS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( MUM / Min( Min( CS ,DS ) ,( MLU + CS ) ) )", "obj1": 0.10433070866141732, "obj2": 0.8119751999653095}], "10": [{"determining": "Min( ( RRS - DDR ) ,Min( FirstVNF_RAM_Server ,AMS ) )", "choosing": "( ( MLU + ( RCSe + MUM ) ) / ( CS * ( RCSe - ( RRSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( Const * Max( FirstVNF_Mem_Server,MDR ) ) + ( FirstVNF_RAM_Server / FirstVNF_RAM ) ),AMS )", "choosing": "( Min( ( Min( MUR ,RMSe ) + MUM ) ,( ( MUC - RMSe ) + RRSe ) ) / Max( MUC,MUM ) )", "obj1": 0.08267716535433071, "obj2": 0.8593441314243215}, {"determining": "Max( Min( RRS ,( ACS + CRS ) ),( FirstVNF_Mem_Server / AMS ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( MUC * Min( MUC ,Max( Max( DS,MUR ),Min( ( DS - MUM ) ,( RMSe + CS ) ) ) ) ) - RCSe ) + Min( MUC ,DS ) ) )", "obj1": 0.13976377952755906, "obj2": 0.7385074333789732}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( Const * ( ( FirstVNF_CPU_Server + ACS ) / FirstVNF_Mem ) ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( RRS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( MUR,( MUC / ( MUR - MUR ) ) )", "obj1": 0.16535433070866143, "obj2": 0.7037799206772251}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) - ( ( ( FirstVNF_Mem_Server * ( RRS + RRS ) ) - ( FirstVNF_RAM + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + ( Min( ( ( RRSe + ( MLU * DS ) ) - CS ) ,( ( ( RCSe - CS ) * MLU ) / ( MUR - ( MUR - DS ) ) ) ) * ( RCSe - MUC ) ) ),RRSe ) / ( MUC + ( MUC + DS ) ) )", "obj1": 0.14566929133858267, "obj2": 0.7349876896211709}, {"determining": "( ( Min( Const ,( ( BR * FirstVNF_Mem_Server ) - Min( MDR ,FirstVNF_RAM ) ) ) - ( CRS * MDR ) ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + MUM ),Max( ( RMSe - Max( Min( ( CS - RCSe ) ,CS ),RRSe ) ),RCSe ) ) / ( ( ( ( MUC - RRSe ) + RMSe ) + ( ( CS * MUC ) + Max( MUM,MUC ) ) ) + Min( Max( CS,RCSe ) ,DS ) ) )", "obj1": 0.17716535433070865, "obj2": 0.6686947769402188}, {"determining": "Max( ( ( FirstVNF_RAM_Server * AMS ) / FirstVNF_RAM ),( ( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( ( ( ( MUC - RMSe ) + RRSe ) + RRSe ),MUC ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8199728047683}, {"determining": "Max( ARS,Min( ( PN / RRS ) ,( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * ( ( ( FirstVNF_CPU - Const ) - ( Const * ( ( FirstVNF_CPU_Server + ACS ) / ( RRS + Const ) ) ) ) + Min( ACS ,BR ) ) ) ) )", "choosing": "( ( ( DS * ( RRSe + RCSe ) ) + ( CS * ( CS / RCSe ) ) ) / Min( CS ,DS ) )", "obj1": 0.08464566929133858, "obj2": 0.8540751768398266}, {"determining": "Max( ( MRS / AMS ),( DDR - MRS ) )", "choosing": "( Max( ( MUC - RRSe ),RRSe ) / ( ( DS + Min( ( DS - ( MLU - Max( ( RRSe / MUM ),CS ) ) ) ,Min( ( RRSe + MUM ) ,CS ) ) ) * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7385074333789732}, {"determining": "( ( Max( Max( BR,FirstVNF_CPU ),ARS ) * ( FirstVNF_CPU_Server * ( RRS * FirstVNF_CPU ) ) ) - ( ( MRS - AMS ) - FirstVNF_RAM_Server ) )", "choosing": "( ( MUC + Min( ( ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) / Min( DS ,RCSe ) ) + RRSe ) + ( Max( DS,RRSe ) + ( RMSe * RRSe ) ) ) ,DS ) ) / ( RRSe + RMSe ) )", "obj1": 0.14960629921259844, "obj2": 0.7276091839209987}, {"determining": "( ( Max( Max( BR,FirstVNF_CPU ),ARS ) * ( FirstVNF_CPU_Server * ( RRS * FirstVNF_CPU ) ) ) - ( ( MRS - AMS ) - FirstVNF_RAM_Server ) )", "choosing": "( ( MUC + Min( ( ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) / Min( DS ,RCSe ) ) + RRSe ) + ( Max( DS,RRSe ) + ( RMSe * RRSe ) ) ) ,DS ) ) / ( RRSe + RMSe ) )", "obj1": 0.14960629921259844, "obj2": 0.7276091839209987}, {"determining": "( ( Max( Max( BR,FirstVNF_CPU ),ARS ) * ( FirstVNF_CPU_Server * ( RRS * FirstVNF_CPU ) ) ) - ( ( MRS - AMS ) - FirstVNF_RAM_Server ) )", "choosing": "( ( MUC + Min( ( ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) / Min( DS ,RCSe ) ) + RRSe ) + ( Max( DS,RRSe ) + ( RMSe * RRSe ) ) ) ,DS ) ) / ( RRSe + RMSe ) )", "obj1": 0.14960629921259844, "obj2": 0.7276091839209987}, {"determining": "( ( ( FirstVNF_CPU_Server * ( RRS * DDR ) ) * Max( Max( BR,FirstVNF_CPU ),ARS ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUM + MUC ),MUC ) / ( MUC + Min( ( MUC + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) - Min( DS ,RCSe ) ) + RRSe ) ) ,DS ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7276091839209987}, {"determining": "( ( Min( Const ,( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( ( AMS * PN ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( ( ( ( MUC + ( RRSe * RCSe ) ) / MLU ) * Min( MUR ,DS ) ) + RRSe ) + ( ( CS * MUM ) + Max( MUM,MUC ) ) ) + Min( MUC ,DS ) ) )", "obj1": 0.19291338582677164, "obj2": 0.6562439548808973}, {"determining": "Max( ( ( FirstVNF_RAM_Server * AMS ) / FirstVNF_RAM ),( ( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( ( ( ( MUC - RMSe ) + RRSe ) + RRSe ),MUC ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8199728047683}, {"determining": "( ( ACS / ARS ) - ( Min( FirstVNF_Mem_Server ,RRS ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUM + MUC ),MUC ) / ( MUC + Min( ( MUC + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) - Min( DS ,RCSe ) ) + RRSe ) ) ,DS ) ) )", "obj1": 0.1377952755905512, "obj2": 0.7444448462139566}, {"determining": "( ( ( FirstVNF_CPU_Server * ( RRS * DDR ) ) + Max( ARS,Max( BR,FirstVNF_CPU ) ) ) - ( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "( Max( ( MLU + MUM ),MUC ) / ( MUC + Min( ( MUR + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) - Min( DS ,RCSe ) ) + RRSe ) ) ,DS ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7276091839209987}, {"determining": "Max( ( RRS - FirstVNF_RAM_Server ),( FirstVNF_Mem_Server / DDR ) )", "choosing": "( ( ( MUC / RMSe ) / ( CS / RCSe ) ) / ( MUC + Min( ( MUC + DS ) ,DS ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6509029392315767}, {"determining": "Max( ( Max( BR,Min( Min( PN ,( FirstVNF_Mem - FirstVNF_CPU ) ) ,ARS ) ) * ( PN - FirstVNF_RAM ) ),( CRS / Const ) )", "choosing": "( ( ( Min( MUM ,MUC ) / ( ( Max( MUC,( MUR + Min( MUM ,RCSe ) ) ) + DS ) * MUR ) ) / RMSe ) / Min( CS ,RCSe ) )", "obj1": 0.08464566929133858, "obj2": 0.8540751768398266}, {"determining": "Max( ( MDR - BR ),( FirstVNF_Mem_Server - Min( ( FirstVNF_RAM_Server - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( RRS * FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Min( ( MLU + CS ) ,Min( MUC ,DS ) ) / Min( Max( ( ( DS * MUC ) - Max( MUR,RRSe ) ),( MUC / ( CS * CS ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7644607415248521}, {"determining": "Max( ( Const - PN ),Max( ( ( Const * ( Max( ( FirstVNF_Mem_Server / ( DDR / FirstVNF_CPU ) ),FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) - ( ( BR * CRS ) - PN ) ),BR ) )", "choosing": "( Min( ( Min( MUC ,DS ) - CS ) ,( CS - ( MUC * RMSe ) ) ) * RMSe )", "obj1": 0.19881889763779528, "obj2": 0.6443441900250597}, {"determining": "Min( Min( Max( Max( ARS,AMS ),Max( PN,PN ) ) ,Min( Min( Const ,PN ) ,CRS ) ) ,Min( ( ( ( Const - ( FirstVNF_Mem * AMS ) ) / MRS ) / ( BR * ( Const / FirstVNF_Mem_Server ) ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( Min( Max( MUR,DS ) ,( ( MUR - MUM ) - RMSe ) ) ,Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ),RMSe ) ) ) / ( MUR * RMSe ) )", "obj1": 0.20078740157480315, "obj2": 0.6391437014340974}, {"determining": "Max( ( Const - FirstVNF_RAM_Server ),( FirstVNF_Mem_Server / DDR ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( MUC + Min( ( MUC + DS ) ,DS ) ) )", "obj1": 0.13976377952755906, "obj2": 0.7385074333789732}, {"determining": "( ( FirstVNF_RAM - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( ( CRS + FirstVNF_Mem_Server ) - ( DDR / MDR ) ) )", "choosing": "( ( RRSe / MLU ) / Max( ( MUC * MUM ),RRSe ) )", "obj1": 0.14566929133858267, "obj2": 0.7349876896211709}, {"determining": "( Min( FirstVNF_RAM ,Max( ( PN / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + FirstVNF_RAM ) ),FirstVNF_RAM ) ) - ( Min( RRS ,FirstVNF_Mem_Server ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( MUC ,MUM ),RRSe ) / ( ( Max( Max( MUC,Max( RRSe,( RMSe + MUM ) ) ),Min( ( Min( RCSe ,Max( CS,MUM ) ) + Max( Max( CS,CS ),Max( MLU,MUR ) ) ) ,Max( ( RRSe * ( MUM * RMSe ) ),MUR ) ) ) - MUC ) * ( ( RRSe * Min( MLU ,MUR ) ) + ( RCSe - Min( Min( Max( CS,( MUR / RMSe ) ) ,RMSe ) ,RCSe ) ) ) ) )", "obj1": 0.14566929133858267, "obj2": 0.7349876896211709}, {"determining": "( ( ( FirstVNF_CPU_Server * ( RRS * DDR ) ) * Max( Max( ( RRS * FirstVNF_Mem ),FirstVNF_CPU ),ARS ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUM + MUC ),Min( Min( CS ,DS ) ,( MLU + CS ) ) ) / ( MUC + Min( ( MUC + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) - Min( DS ,RCSe ) ) + RRSe ) ) ,DS ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7276091839209987}, {"determining": "( Min( ( FirstVNF_CPU_Server * ( RRS * DDR ) ) ,Max( Max( BR,FirstVNF_CPU ),ARS ) ) - ( ( MDR * Const ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUM + CS ),MUC ) / ( MUC + Min( ( MUC + ( MUM + CS ) ) ,DS ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7276091839209987}, {"determining": "Max( ARS,Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( ( MUC / ( MUR - MUR ) ) ,( MUR * MUC ) ) ) ) ) ) / Min( CS ,DS ) )", "obj1": 0.11023622047244094, "obj2": 0.7794742988899616}, {"determining": "( Min( ( RRS + ( FirstVNF_RAM_Server * ACS ) ) ,Const ) * Min( ( Max( FirstVNF_Mem_Server,Const ) + FirstVNF_CPU ) ,( MDR - CRS ) ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( MUC + Min( MUC ,DS ) ) )", "obj1": 0.14566929133858267, "obj2": 0.7349876896211709}, {"determining": "Max( ( ( Const * Max( ( FirstVNF_RAM_Server + FirstVNF_RAM ),MDR ) ) + ( FirstVNF_RAM_Server / FirstVNF_RAM ) ),AMS )", "choosing": "( ( DS + ( ( MUC * Min( RRSe ,MUR ) ) - RMSe ) ) / ( MUR * MUC ) )", "obj1": 0.20078740157480315, "obj2": 0.6391437014340974}, {"determining": "( Min( ( ( ( ARS / PN ) + FirstVNF_Mem ) + ( FirstVNF_RAM_Server * ACS ) ) ,Const ) * Min( ( Max( FirstVNF_Mem_Server,Const ) + FirstVNF_CPU ) ,( MDR - CRS ) ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,RMSe ) - RMSe ) + RRSe ) + RRSe ) ) ) )", "obj1": 0.30118110236220474, "obj2": 0.5724616275424793}, {"determining": "Max( ( ( Max( CRS,PN ) - ( CRS + PN ) ) / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( RRS + ( FirstVNF_RAM_Server * ACS ) ) ,( RRS * FirstVNF_Mem ) ) ) ) - Min( ( PN + ( FirstVNF_RAM * ( ( ARS / PN ) + FirstVNF_Mem ) ) ) ,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( MUM * MUC ) - ( ( MUC - ( MUC - MUC ) ) + RRSe ) ),( MUC / ( MUR - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Const - PN ),Max( ( ( BR / FirstVNF_RAM ) - ( Const * ACS ) ),BR ) ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) )", "choosing": "( Max( MUM,RMSe ) / Min( ( MUC + DS ) ,Min( MUC ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server * ( RRS * FirstVNF_CPU ) ) * Max( ( ( BR / FirstVNF_CPU_Server ) * AMS ),ARS ) ) - ( Max( Max( FirstVNF_RAM_Server,( FirstVNF_CPU + FirstVNF_RAM_Server ) ),Max( FirstVNF_RAM,( PN - Min( PN ,CRS ) ) ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe + RMSe ) / ( MUC + Min( ( ( ( ( MUR - ( RMSe + DS ) ) / Min( DS ,RCSe ) ) + RRSe ) + MUC ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server * ( RRS * FirstVNF_CPU ) ) * ( Max( BR,FirstVNF_CPU ) + ARS ) ) - ( Max( Max( FirstVNF_RAM,( PN - Min( PN ,( ( FirstVNF_RAM * MRS ) * AMS ) ) ) ),Max( FirstVNF_RAM_Server,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) - FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( Max( Max( RCSe,RMSe ),RMSe ) + RRSe ) + RRSe ) ) / ( RMSe + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( Max( CRS,PN ) - ( Min( MDR ,Max( FirstVNF_CPU,FirstVNF_CPU ) ) + PN ) ) + Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,( RRS * Const ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( ( MUC - RMSe ) + RRSe ) + ( ( CS * MUC ) + Max( MUM,MUC ) ) ) + Min( MUC ,DS ) ) )", "obj1": 0.21850393700787402, "obj2": 0.6364720814664997}, {"determining": "( ( Min( ( RRS + ( FirstVNF_RAM_Server * ACS ) ) ,Const ) * Min( ( Max( FirstVNF_Mem_Server,Const ) + FirstVNF_CPU ) ,( MDR - CRS ) ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( MUC + Min( MUC ,DS ) ) )", "obj1": 0.1437007874015748, "obj2": 0.7379268589903057}, {"determining": "Max( ( Const - PN ),Max( ( ( BR / FirstVNF_RAM ) - ( Const * ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) * Min( ( MDR / FirstVNF_RAM_Server ) ,BR ) ) ) ),CRS ) )", "choosing": "( ( ( CS - ( Max( RRSe,Max( DS,MUM ) ) - DS ) ) / Min( Max( ( Min( MUR ,MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) ) * RMSe )", "obj1": 0.23228346456692914, "obj2": 0.6144620822033436}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( RRS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUM + MUC ),Min( Min( CS ,DS ) ,( MLU + CS ) ) ) / ( MUC + Min( ( MUC + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) - Min( DS ,RCSe ) ) + RRSe ) ) ,DS ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7276091839209987}, {"determining": "( Min( ( RRS + ( FirstVNF_RAM_Server * ACS ) ) ,Const ) * Min( ( Max( FirstVNF_Mem_Server,Const ) + FirstVNF_CPU ) ,( MDR - CRS ) ) )", "choosing": "Max( ( ( MUR * MUC ) - ( ( ( MLU + CS ) - RMSe ) + RRSe ) ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.16535433070866143, "obj2": 0.7037799206772251}, {"determining": "( Min( ( RRS + ( FirstVNF_RAM_Server * ACS ) ) ,Const ) * Min( ( Min( ( DDR - CRS ) ,AMS ) + FirstVNF_CPU ) ,( Min( ( RRS + ( FirstVNF_RAM_Server * ACS ) ) ,( RRS * FirstVNF_Mem ) ) - CRS ) ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( ( ( MUR * MUC ) - ( ( MUC - ( MUC - RMSe ) ) + RRSe ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,Max( Max( ( CRS * Max( BR,FirstVNF_Mem_Server ) ),( MDR - Const ) ),PN ) ) * ( ( AMS + AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - ( MUM - ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) ) ) / Max( CS,DS ) )", "obj1": 0.25984251968503935, "obj2": 0.6100270877697165}, {"determining": "Max( ( PN / FirstVNF_RAM ),( FirstVNF_Mem_Server - Min( ( DDR - CRS ) ,( ACS + FirstVNF_Mem ) ) ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( ( ( ( DS - RMSe ) + RRSe ) / MUC ) + ( MUR + ( Max( MLU,MUC ) / MUM ) ) ) ) ) ,( Max( CS,RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MLU ,DS ) ) )", "obj1": 0.12401574803149606, "obj2": 0.7568161665683725}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( RRS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7644607415248521}, {"determining": "( ( ACS + ( ACS + ( FirstVNF_Mem_Server + RRS ) ) ) - Min( Min( FirstVNF_CPU ,Max( FirstVNF_RAM,FirstVNF_CPU ) ) ,FirstVNF_CPU ) )", "choosing": "Max( Min( ( DS / RMSe ) ,Min( MUC ,DS ) ),Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.43700787401574803, "obj2": 0.46633557773439405}, {"determining": "Max( ( ( Min( ( Max( CRS,PN ) - ( CRS + PN ) ) ,FirstVNF_Mem ) * AMS ) / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,RMSe ) - RMSe ) + ( MUM / Min( Min( CS ,DS ) ,( MLU + CS ) ) ) ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( FirstVNF_Mem_Server,( Min( ( DDR - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( Max( FirstVNF_Mem_Server,ARS ) ,( RRS * FirstVNF_Mem ) ) ) ) - Const ) )", "choosing": "( Min( Min( CS ,DS ) ,( ( RMSe + ( CS + RCSe ) ) + CS ) ) / ( MUC / ( MUR - MUR ) ) )", "obj1": 0.42322834645669294, "obj2": 0.4752172731398857}, {"determining": "Max( ( ( Min( ( PN + ( ( ( DDR - CRS ) - AMS ) - FirstVNF_Mem_Server ) ) ,FirstVNF_Mem ) * AMS ) / FirstVNF_RAM ),( Min( ( CRS - DDR ) ,AMS ) - Min( FirstVNF_RAM ,Const ) ) )", "choosing": "( Min( ( ( ( RMSe - MUC ) + RRSe ) + RRSe ) ,( ( ( Max( RCSe,RMSe ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( RCSe,Min( RMSe ,MUR ) ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( Min( ( PN + ( ( ( ARS / FirstVNF_Mem_Server ) - Const ) * Min( ( FirstVNF_Mem + ACS ) ,( MDR / FirstVNF_Mem ) ) ) ) ,FirstVNF_Mem ) * AMS ) / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - CRS ) )", "choosing": "( Min( Max( ( MUC / ( MUR - MUR ) ),Max( ( MUR * MUC ),MUM ) ) ,( ( ( Max( MUC,Max( ( RCSe + MUC ),DS ) ) - RRSe ) + RRSe ) + RRSe ) ) / Max( ( Min( RRSe ,MUC ) * ( DS - RCSe ) ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server * ( RRS * FirstVNF_CPU ) ) * Max( FirstVNF_Mem,ARS ) ) - ( Max( Max( FirstVNF_RAM_Server,( FirstVNF_CPU + FirstVNF_RAM_Server ) ),Max( FirstVNF_RAM,( PN - Min( PN ,CRS ) ) ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe + RMSe ) / ( MUC + Min( ( ( ( ( MLU + CS ) - DS ) + RRSe ) + MUC ) ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server * ( RRS * FirstVNF_CPU ) ) * Max( Max( BR,FirstVNF_CPU ),ARS ) ) - ( Max( Max( FirstVNF_RAM_Server,( FirstVNF_CPU + FirstVNF_RAM_Server ) ),Max( FirstVNF_RAM,( PN - Min( PN ,CRS ) ) ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe + RMSe ) / ( MUC + Min( ( ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) / Min( DS ,RCSe ) ) + RRSe ) + MUC ) ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ARS,( BR * AMS ) )", "choosing": "( ( ( ( RCSe / ( RCSe + RMSe ) ) - CS ) + ( MUR * ( RCSe / DS ) ) ) / Min( CS ,DS ) )", "obj1": 0.08661417322834646, "obj2": 0.8510562734453461}, {"determining": "Max( ( Max( CRS,PN ) - ( CRS + PN ) ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,( CS * CS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / Max( Const,MDR ) ) * ( Min( ( ( AMS + ( AMS * MRS ) ) - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + ( ARS + RRS ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( Max( MUR,MUC ) ,( ( Min( Min( RRSe ,( Min( MUM ,MUR ) + ( DS / MUR ) ) ) ,( MLU + Max( ( MUR * CS ),Min( CS ,RRSe ) ) ) ) - RMSe ) + RRSe ) ),( MUC / ( MUR - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server * ( RRS * FirstVNF_CPU ) ) * Max( ( PN / FirstVNF_RAM ),( MDR / Min( CRS ,FirstVNF_CPU_Server ) ) ) ) - ( Max( Max( FirstVNF_RAM_Server,( FirstVNF_CPU + FirstVNF_RAM_Server ) ),Max( FirstVNF_RAM,( PN - Min( PN ,CRS ) ) ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe + RMSe ) / ( MUC + Min( ( MLU + CS ) ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server * ( RRS * FirstVNF_CPU ) ) * Max( Max( BR,FirstVNF_CPU ),ARS ) ) - ( Max( Max( FirstVNF_RAM_Server,( FirstVNF_CPU + FirstVNF_RAM_Server ) ),Max( FirstVNF_RAM,( PN - Min( PN ,CRS ) ) ) ) - FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( RRSe / DS ) - ( ( ( MLU + CS ) - RRSe ) + RRSe ) ),( MUC / ( MUR - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - Max( ( Const * ( ( FirstVNF_CPU_Server + ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) / FirstVNF_RAM ) ) / ( AMS * MDR ) ) ),Min( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ,Max( ACS,Const ) ) ) )", "choosing": "( Max( ( ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ) ,MUM ) ) * MUC ),RRSe ) / ( MUC + Min( MUC ,( MUM / Max( ( Min( Max( RCSe,MUC ) ,CS ) - RCSe ),DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + AMS ) - Min( Min( ( ARS / BR ) ,CRS ) ,Max( ARS,( Min( ( DDR - ( ( ACS + AMS ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ,AMS ) - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Min( Max( MLU,Max( CS,RRSe ) ) ,MUM ) - RRSe ) + ( RCSe - Min( ( DS * ( MUR * MUM ) ) ,( Max( DS,RMSe ) + ( CS - Max( MLU,MUC ) ) ) ) ) ) / Min( ( MLU + CS ) ,Min( RCSe ,DS ) ) )", "obj1": 0.09645669291338582, "obj2": 0.8140297389497665}, {"determining": "Max( ( Const - PN ),Max( ( ( FirstVNF_RAM * ( ( ARS / PN ) + FirstVNF_Mem ) ) - ( Const * ( Max( ( FirstVNF_Mem_Server / ( RRS * FirstVNF_CPU ) ),FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) ),BR ) )", "choosing": "( ( ( Min( MUC ,DS ) - CS ) / Min( Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) ) * RMSe )", "obj1": 0.39173228346456695, "obj2": 0.5040874348640071}, {"determining": "( Min( ( RRS + ( FirstVNF_CPU / MRS ) ) ,RRS ) * Min( ( MDR - CRS ) ,( Max( FirstVNF_Mem_Server,Const ) + FirstVNF_CPU ) ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( ( MUC - RRSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( Min( MUM ,RMSe ) ,DS ) ) )", "obj1": 0.1279527559055118, "obj2": 0.7537671025958835}, {"determining": "( Min( MDR ,Max( Max( ( CRS * Max( BR,FirstVNF_Mem_Server ) ),RRS ),PN ) ) * ( Min( ( DDR - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( RRS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( MUR - MUR ) / Max( CS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,Max( Max( ( CRS * Max( BR,FirstVNF_Mem_Server ) ),RRS ),PN ) ) * ( ( AMS + AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - ( MUM - Max( MUM,DS ) ) ) / Max( CS,DS ) )", "obj1": 0.297244094488189, "obj2": 0.5844468335485916}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) - ( ( Min( ( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) - ( CRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( MUC + ( Min( ( ( RRSe + Max( MUM,MUC ) ) / CS ) ,( ( ( MUR / MUM ) * MLU ) / ( MUR - ( MUR - DS ) ) ) ) * ( RCSe - MUC ) ) ),RRSe ) / ( MUC + ( MUC + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( ( MUC - RMSe ) + RRSe ) + ( ( CS * MUC ) + Max( MUM,MUC ) ) ) + Min( MUC ,DS ) ) )", "obj1": 0.19291338582677164, "obj2": 0.6562439548808973}, {"determining": "( ( Min( Const ,( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( ( AMS * PN ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( ( ( ( MUC + ( RRSe * RCSe ) ) / MLU ) * Min( MUR ,DS ) ) + RRSe ) + ( ( CS * MUM ) + Max( MUM,MUC ) ) ) + Min( MUC ,DS ) ) )", "obj1": 0.1673228346456693, "obj2": 0.6885630159295548}, {"determining": "( ( Min( ( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) + ( ( AMS * PN ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( ( ( ( MUC + ( RRSe * RCSe ) ) / MLU ) * Min( MUR ,DS ) ) + RRSe ) + ( ( CS * MUM ) + Max( MUM,MUC ) ) ) + Min( MUC ,DS ) ) )", "obj1": 0.1673228346456693, "obj2": 0.6885630159295548}, {"determining": "( ( Min( Const ,( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( ( AMS * PN ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( ( ( ( MUC + ( RRSe * RCSe ) ) / MLU ) * Min( MUR ,DS ) ) + RRSe ) + ( ( CS * MUM ) + Max( MUM,MUC ) ) ) + Min( MUC ,DS ) ) )", "obj1": 0.1673228346456693, "obj2": 0.6885630159295548}, {"determining": "( ( ( ARS - DDR ) + Max( FirstVNF_CPU,FirstVNF_RAM ) ) - ( ( AMS * PN ) - ( FirstVNF_Mem_Server + CRS ) ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( ( ( ( MUC + ( RRSe * CS ) ) / MLU ) * Min( MUR ,DS ) ) + RRSe ) + ( ( CS * MUM ) + Max( MUM,MUC ) ) ) + Min( DS ,MUC ) ) )", "obj1": 0.1673228346456693, "obj2": 0.6885630159295548}, {"determining": "Max( ARS,Min( ( PN / RRS ) ,( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * ( ( Min( PN ,Min( FirstVNF_CPU_Server ,( RRS - FirstVNF_RAM_Server ) ) ) - Min( FirstVNF_CPU_Server ,Max( MDR,( MRS - MDR ) ) ) ) + MDR ) ) ) )", "choosing": "( Max( RMSe,( ( ( ( RRSe + ( ( RMSe + RRSe ) / ( MUM + DS ) ) ) * DS ) * ( RCSe * MLU ) ) / MLU ) ) / Min( DS ,CS ) )", "obj1": 0.08464566929133858, "obj2": 0.8540751768398266}, {"determining": "( Min( ( RRS + ( FirstVNF_RAM_Server * ACS ) ) ,Const ) * Min( ( Min( ( DDR - CRS ) ,AMS ) + FirstVNF_CPU ) ,( MDR - CRS ) ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( ( ( ( MUC - RMSe ) + RRSe ) + RRSe ),MUC ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8199728047683}, {"determining": "Max( ( Const - PN ),Max( ( ( BR / FirstVNF_RAM ) - ( Const * ( Min( FirstVNF_RAM ,Max( ( PN / CRS ),FirstVNF_RAM ) ) / FirstVNF_Mem ) ) ),BR ) )", "choosing": "( ( ( Min( MUC ,DS ) - CS ) / Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,Min( Max( CS,( MUR / RMSe ) ) ,RMSe ) ) ) * RMSe )", "obj1": 0.3051181102362205, "obj2": 0.5539866322664782}, {"determining": "Max( ( Const - PN ),Max( ( ( BR / FirstVNF_RAM ) - ( Const * ( Max( ( FirstVNF_Mem_Server / ( RRS * FirstVNF_CPU ) ),FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) ),BR ) )", "choosing": "( ( ( Min( MUC ,DS ) - CS ) / Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) ) * RMSe )", "obj1": 0.25196850393700787, "obj2": 0.6100607327161479}, {"determining": "Max( ( Const - PN ),Max( ( ( Const * ( Max( ( FirstVNF_Mem_Server / ( DDR / FirstVNF_CPU ) ),FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) - ( ( BR * CRS ) - PN ) ),BR ) )", "choosing": "( Min( ( Min( MUC ,DS ) - CS ) ,( CS - ( MUC * RMSe ) ) ) * RMSe )", "obj1": 0.2677165354330709, "obj2": 0.5918306967306346}, {"determining": "Max( ( Const - PN ),Max( ( ( Const * ( Max( ( FirstVNF_Mem_Server / ( DDR / FirstVNF_CPU ) ),FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) - ( ( BR * CRS ) - PN ) ),BR ) )", "choosing": "( Min( ( Min( MUC ,DS ) - CS ) ,( CS - ( MUC * RMSe ) ) ) * RMSe )", "obj1": 0.2677165354330709, "obj2": 0.5918306967306346}, {"determining": "Max( ( Const - PN ),Max( ( ( Const * ( Max( ( FirstVNF_Mem_Server / ( DDR / FirstVNF_CPU ) ),FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) - ( ( BR * CRS ) - PN ) ),BR ) )", "choosing": "( Min( ( Min( MUC ,DS ) - CS ) ,( CS - ( MUC * RMSe ) ) ) * RMSe )", "obj1": 0.2677165354330709, "obj2": 0.5918306967306346}, {"determining": "Max( ( Const - PN ),Max( ( ( ( BR * CRS ) - PN ) - ( Const * ( Max( ( FirstVNF_Mem_Server / ( RRS * FirstVNF_CPU ) ),FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) ),BR ) )", "choosing": "( ( ( Min( MUC ,DS ) - CS ) / Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( RRSe + ( DS - RMSe ) ) + ( ( RMSe / DS ) * DS ) ) ) ) * RMSe )", "obj1": 0.2677165354330709, "obj2": 0.5918306967306346}, {"determining": "( ( ( ( AMS * MDR ) * ( ACS * ACS ) ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( ( CRS + FirstVNF_Mem_Server ) - ( DDR / MDR ) ) )", "choosing": "( ( RRSe / MLU ) / Max( ( ( ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - ( MUC - ( MUC - RMSe ) ) ) * MUC ) * MUM ),RRSe ) )", "obj1": 0.5669291338582677, "obj2": 0.3308817135763162}, {"determining": "Max( ( Max( FirstVNF_Mem_Server,Max( ( FirstVNF_CPU + MDR ),FirstVNF_RAM_Server ) ) + MDR ),Min( ( ( AMS * MDR ) * ( FirstVNF_Mem * ACS ) ) ,( Min( RRS ,( PN / ( PN / FirstVNF_RAM ) ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MUM - ( ( ( ( RRSe / MLU ) / Max( ( MUC * MUM ),RRSe ) ) - ( MUC - ( MUC - ( ( RRSe + MLU ) / ( MUC * DS ) ) ) ) ) * MUC ) ),( MUC / ( MUR - MUR ) ) )", "obj1": 0.3405511811023622, "obj2": 0.5295953352418417}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( Min( Const ,AMS ) ,AMS ) - PN ) )", "choosing": "( ( ( Min( Max( MLU,Max( CS,RRSe ) ) ,MUM ) - RRSe ) + ( RCSe - Min( ( DS * ( MUR * MUM ) ) ,( Max( DS,RMSe ) + ( CS - Max( MLU,MUC ) ) ) ) ) ) / Min( ( MLU + CS ) ,Min( RCSe ,DS ) ) )", "obj1": 0.09448818897637795, "obj2": 0.8151279698460013}, {"determining": "( ( ( FirstVNF_CPU_Server * ( Min( ( DDR - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( RRS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ) ) * Max( Max( BR,FirstVNF_CPU ),ARS ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUM + MUC ),MUC ) / ( MUC + ( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server * ( RRS * DDR ) ) * Max( ( BR * Max( MRS,Min( CRS ,RRS ) ) ),ARS ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUC + Max( CS,Min( RCSe ,MLU ) ) ),MUC ) / ( MUC + Min( ( MUC + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) + Min( DS ,RCSe ) ) + RRSe ) ) ,DS ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7276091839209987}, {"determining": "Max( ( ( Max( CRS,PN ) - ( Max( MDR,Max( FirstVNF_CPU,FirstVNF_CPU ) ) + PN ) ) + Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,( RRS * Const ) ) ),( Min( ( DDR - CRS ) ,( ( ( BR / FirstVNF_Mem ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( RRS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( MUR * MUC ) - ( ( ( ( ( MLU + CS ) - RMSe ) + RRSe ) - DS ) + RRSe ) ),( MUC / ( MUR - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server * ( RRS * FirstVNF_CPU ) ) * Max( Max( BR,FirstVNF_CPU ),ARS ) ) - ( Max( Max( FirstVNF_RAM_Server,( FirstVNF_CPU + FirstVNF_RAM_Server ) ),Max( FirstVNF_RAM,( PN - Min( PN ,CRS ) ) ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe - ( MUM - Max( MUM,DS ) ) ) / Max( CS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,( ( ( ARS / FirstVNF_RAM_Server ) / ARS ) + ( AMS + ARS ) ) ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) )", "choosing": "( ( Min( RMSe ,RRSe ) + Min( MUC ,DS ) ) / Max( MUM,RMSe ) )", "obj1": 0.3562992125984252, "obj2": 0.5281686407604488}, {"determining": "( Min( ( RRS + ( FirstVNF_RAM_Server * ACS ) ) ,Const ) * Min( ( Max( FirstVNF_Mem_Server,Const ) + FirstVNF_CPU ) ,( MDR - Max( Max( FirstVNF_RAM_Server,( FirstVNF_CPU + FirstVNF_RAM_Server ) ),Max( FirstVNF_RAM,( PN - Min( PN ,CRS ) ) ) ) ) ) )", "choosing": "( Min( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) / Min( DS ,RCSe ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( Min( ( PN + ( FirstVNF_RAM * ( ( ARS / PN ) + FirstVNF_Mem ) ) ) ,FirstVNF_Mem ) * AMS ) / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUR - MUR ) ) ,( ( ( Max( RCSe,RMSe ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.16338582677165353, "obj2": 0.7078917116090685}, {"determining": "Max( ARS,Min( ( PN / FirstVNF_RAM_Server ) ,( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * ( ( ( FirstVNF_CPU - Const ) - ( Const * ( ( FirstVNF_CPU_Server + ACS ) / ( RRS + Const ) ) ) ) + Min( ACS ,BR ) ) ) ) )", "choosing": "( ( ( MUC / RMSe ) / ( CS / RCSe ) ) / Min( CS ,DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8135700928066624}, {"determining": "Max( ( Min( ( ( ARS - ( FirstVNF_Mem / FirstVNF_CPU ) ) - CRS ) ,AMS ) - AMS ),( ( Min( ( PN / ( FirstVNF_RAM * ( ( PN / ARS ) + FirstVNF_Mem ) ) ) ,FirstVNF_Mem ) * AMS ) / ( BR * ( Min( PN ,FirstVNF_Mem ) + CRS ) ) ) )", "choosing": "( Min( Max( ( Max( MUC,RMSe ) - MUM ),( MUC - ( ( Min( MLU ,( RCSe / CS ) ) / RRSe ) * CS ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + MUC ) ,Min( MUC ,DS ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7622036226174012}, {"determining": "( Min( ( RRS + ( FirstVNF_RAM_Server * ACS ) ) ,Const ) * Min( ( Max( FirstVNF_Mem_Server,Const ) + FirstVNF_CPU ) ,( MDR - CRS ) ) )", "choosing": "( ( ( MUC / RMSe ) / ( CS / RCSe ) ) / ( MUC + Min( ( MUC + DS ) ,DS ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6509029392315767}, {"determining": "Max( ( RRS - FirstVNF_RAM_Server ),( FirstVNF_Mem_Server / DDR ) )", "choosing": "( ( ( MUC / RMSe ) / ( CS / RCSe ) ) / ( MUC + Min( ( MUC + DS ) ,DS ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6509029392315767}, {"determining": "Max( ( ( BR * Min( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem * ( ( FirstVNF_RAM / BR ) * FirstVNF_Mem_Server ) ) ) ,Max( ( BR + ( Const * ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) ),PN ) ) ) / FirstVNF_RAM ),( ( FirstVNF_RAM_Server + Min( AMS ,CRS ) ) * AMS ) )", "choosing": "( Min( Max( ( Min( MUR ,MUR ) - MUM ),( MUC / Max( ( ( ( MUC - RMSe ) + RRSe ) + RRSe ),MUC ) ) ) ,( ( MUR - MLU ) + MUR ) ) / Min( ( MLU * MUM ) ,Min( MUC ,DS ) ) )", "obj1": 0.08858267716535433, "obj2": 0.8336026875470121}, {"determining": "Max( ( ( FirstVNF_RAM_Server * AMS ) / FirstVNF_RAM ),( ( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( ( ( ( MUC - RMSe ) + RRSe ) + RRSe ),MUC ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8199728047683}, {"determining": "( Max( ( Const * ( ( ACS + CRS ) / FirstVNF_Mem ) ),( MDR / MRS ) ) + ( ( RRS + ( FirstVNF_RAM_Server / DDR ) ) * ( PN / RRS ) ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * ( CS / RCSe ) ) ) / Min( CS ,DS ) )", "obj1": 0.08464566929133858, "obj2": 0.8540751768398266}, {"determining": "Max( ( ( Min( ( PN + ( FirstVNF_RAM * ( ( ARS / PN ) + FirstVNF_Mem ) ) ) ,FirstVNF_Mem ) * AMS ) / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - Max( ( ( Const * Max( FirstVNF_Mem_Server,MDR ) ) + ( FirstVNF_RAM_Server / FirstVNF_RAM ) ),AMS ) ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ),RMSe ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.08070866141732283, "obj2": 0.873483138462418}, {"determining": "Min( Min( Max( ( PN / FirstVNF_RAM ),( Const * ( ( FirstVNF_CPU_Server + ACS ) / Min( ( Const / FirstVNF_CPU_Server ) ,Min( MDR ,AMS ) ) ) ) ) ,CRS ) ,Max( ARS,FirstVNF_CPU_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUR - MUR ) ) ,( ( ( Max( RCSe,RMSe ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( Max( ( ( MUC / RMSe ) / ( CS / RCSe ) ),Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.1594488188976378, "obj2": 0.7086608973347112}, {"determining": "( ( FirstVNF_CPU_Server + Min( BR ,( MRS - FirstVNF_CPU ) ) ) + ( Min( Min( Min( ( DDR - ( ( ACS + AMS ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ,( AMS / ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) + RRS ) ) ) ,BR ) ,Max( ARS,FirstVNF_CPU ) ) * ( RRS / PN ) ) )", "choosing": "( ( Max( MUC,RMSe ) / ( CS / RCSe ) ) / ( ( CS + CS ) + RRSe ) )", "obj1": 0.2933070866141732, "obj2": 0.5859354614795371}, {"determining": "Max( ( ( FirstVNF_RAM_Server * AMS ) / FirstVNF_RAM ),( Min( ( DDR - ( ( Max( FirstVNF_Mem,( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) + FirstVNF_RAM ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ,( AMS / ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) + RRS ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / MUC ) / Max( MUR,MLU ) )", "obj1": 0.2854330708661417, "obj2": 0.5892914652199428}, {"determining": "Max( ARS,Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( ( MUC / ( MUR - MUR ) ) ,( MUR * MUC ) ) ) ) ) ) / Min( CS ,DS ) )", "obj1": 0.10236220472440945, "obj2": 0.7907585552070807}, {"determining": "Max( ( ( Min( ( Min( ( ACS / PN ) ,FirstVNF_CPU ) + ( BR / FirstVNF_RAM ) ) ,FirstVNF_Mem ) * AMS ) / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Min( Max( ( ( MUR * MUC ) / MUM ),( MUC / ( CS * ( ( MUM - MUC ) * MUR ) ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) ,( ( ( Max( RCSe,Max( ( CS + MUC ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7622036226174012}, {"determining": "Max( ( Const - PN ),( BR / ( ( Const * ( ( RRS - MDR ) - BR ) ) - ( BR / ( Const * FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( MUM / ( MUR * ( ( RRSe / MUM ) * MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + MUC ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( Max( RRSe,MUM ),Max( CS,MUR ) ) + CS ) ,Min( DS ,MUC ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}], "11": [{"determining": "Min( ( RRS - DDR ) ,Min( FirstVNF_RAM_Server ,AMS ) )", "choosing": "( ( MLU + ( RCSe + MUM ) ) / ( CS * ( RCSe - ( RRSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( RRS ,( ACS + CRS ) ),( FirstVNF_Mem_Server / AMS ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( MUC * Min( MUC ,Max( Max( DS,MUR ),Min( ( DS - MUM ) ,( RMSe + CS ) ) ) ) ) - RCSe ) + Min( MUC ,DS ) ) )", "obj1": 0.13976377952755906, "obj2": 0.7385074333789732}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) - ( ( ( FirstVNF_Mem_Server * ( RRS + RRS ) ) - ( FirstVNF_RAM + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + ( Min( ( ( RRSe + ( MLU * DS ) ) - CS ) ,( ( ( RCSe - CS ) * MLU ) / ( MUR - ( MUR - DS ) ) ) ) * ( RCSe - MUC ) ) ),RRSe ) / ( MUC + ( MUC + DS ) ) )", "obj1": 0.14566929133858267, "obj2": 0.7349876896211709}, {"determining": "( ( Min( Const ,( ( BR * FirstVNF_Mem_Server ) - Min( MDR ,FirstVNF_RAM ) ) ) - ( CRS * MDR ) ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + MUM ),Max( ( RMSe - Max( Min( ( CS - RCSe ) ,CS ),RRSe ) ),RCSe ) ) / ( ( ( ( MUC - RRSe ) + RMSe ) + ( ( CS * MUC ) + Max( MUM,MUC ) ) ) + Min( Max( CS,RCSe ) ,DS ) ) )", "obj1": 0.17716535433070865, "obj2": 0.6686947769402188}, {"determining": "Max( ARS,Min( ( PN / RRS ) ,( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * ( ( ( FirstVNF_CPU - Const ) - ( Const * ( ( FirstVNF_CPU_Server + ACS ) / ( RRS + Const ) ) ) ) + Min( ACS ,BR ) ) ) ) )", "choosing": "( ( ( DS * ( RRSe + RCSe ) ) + ( CS * ( CS / RCSe ) ) ) / Min( CS ,DS ) )", "obj1": 0.08464566929133858, "obj2": 0.8540751768398266}, {"determining": "Max( ( MRS / AMS ),( DDR - MRS ) )", "choosing": "( Max( ( MUC - RRSe ),RRSe ) / ( ( DS + Min( ( DS - ( MLU - Max( ( RRSe / MUM ),CS ) ) ) ,Min( ( RRSe + MUM ) ,CS ) ) ) * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7385074333789732}, {"determining": "( ( Max( Max( BR,FirstVNF_CPU ),ARS ) * ( FirstVNF_CPU_Server * ( RRS * FirstVNF_CPU ) ) ) - ( ( MRS - AMS ) - FirstVNF_RAM_Server ) )", "choosing": "( ( MUC + Min( ( ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) / Min( DS ,RCSe ) ) + RRSe ) + ( Max( DS,RRSe ) + ( RMSe * RRSe ) ) ) ,DS ) ) / ( RRSe + RMSe ) )", "obj1": 0.14960629921259844, "obj2": 0.7276091839209987}, {"determining": "( ( Max( Max( BR,FirstVNF_CPU ),ARS ) * ( FirstVNF_CPU_Server * ( RRS * FirstVNF_CPU ) ) ) - ( ( MRS - AMS ) - FirstVNF_RAM_Server ) )", "choosing": "( ( MUC + Min( ( ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) / Min( DS ,RCSe ) ) + RRSe ) + ( Max( DS,RRSe ) + ( RMSe * RRSe ) ) ) ,DS ) ) / ( RRSe + RMSe ) )", "obj1": 0.14960629921259844, "obj2": 0.7276091839209987}, {"determining": "( ( Max( Max( BR,FirstVNF_CPU ),ARS ) * ( FirstVNF_CPU_Server * ( RRS * FirstVNF_CPU ) ) ) - ( ( MRS - AMS ) - FirstVNF_RAM_Server ) )", "choosing": "( ( MUC + Min( ( ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) / Min( DS ,RCSe ) ) + RRSe ) + ( Max( DS,RRSe ) + ( RMSe * RRSe ) ) ) ,DS ) ) / ( RRSe + RMSe ) )", "obj1": 0.14960629921259844, "obj2": 0.7276091839209987}, {"determining": "( ( ( FirstVNF_CPU_Server * ( RRS * DDR ) ) * Max( Max( BR,FirstVNF_CPU ),ARS ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUM + MUC ),MUC ) / ( MUC + Min( ( MUC + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) - Min( DS ,RCSe ) ) + RRSe ) ) ,DS ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7276091839209987}, {"determining": "( ( Min( Const ,( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( ( AMS * PN ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( ( ( ( MUC + ( RRSe * RCSe ) ) / MLU ) * Min( MUR ,DS ) ) + RRSe ) + ( ( CS * MUM ) + Max( MUM,MUC ) ) ) + Min( MUC ,DS ) ) )", "obj1": 0.19291338582677164, "obj2": 0.6562439548808973}, {"determining": "( ( ( FirstVNF_CPU_Server * ( RRS * DDR ) ) + Max( ARS,Max( BR,FirstVNF_CPU ) ) ) - ( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "( Max( ( MLU + MUM ),MUC ) / ( MUC + Min( ( MUR + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) - Min( DS ,RCSe ) ) + RRSe ) ) ,DS ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7276091839209987}, {"determining": "Max( ( RRS - FirstVNF_RAM_Server ),( FirstVNF_Mem_Server / DDR ) )", "choosing": "( ( ( MUC / RMSe ) / ( CS / RCSe ) ) / ( MUC + Min( ( MUC + DS ) ,DS ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6509029392315767}, {"determining": "Max( ( Max( BR,Min( Min( PN ,( FirstVNF_Mem - FirstVNF_CPU ) ) ,ARS ) ) * ( PN - FirstVNF_RAM ) ),( CRS / Const ) )", "choosing": "( ( ( Min( MUM ,MUC ) / ( ( Max( MUC,( MUR + Min( MUM ,RCSe ) ) ) + DS ) * MUR ) ) / RMSe ) / Min( CS ,RCSe ) )", "obj1": 0.08464566929133858, "obj2": 0.8540751768398266}, {"determining": "Max( ( MDR - BR ),( FirstVNF_Mem_Server - Min( ( FirstVNF_RAM_Server - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( RRS * FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Min( ( MLU + CS ) ,Min( MUC ,DS ) ) / Min( Max( ( ( DS * MUC ) - Max( MUR,RRSe ) ),( MUC / ( CS * CS ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7644607415248521}, {"determining": "Max( ( Const - PN ),Max( ( ( Const * ( Max( ( FirstVNF_Mem_Server / ( DDR / FirstVNF_CPU ) ),FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) - ( ( BR * CRS ) - PN ) ),BR ) )", "choosing": "( Min( ( Min( MUC ,DS ) - CS ) ,( CS - ( MUC * RMSe ) ) ) * RMSe )", "obj1": 0.19881889763779528, "obj2": 0.6443441900250597}, {"determining": "Min( Min( Max( Max( ARS,AMS ),Max( PN,PN ) ) ,Min( Min( Const ,PN ) ,CRS ) ) ,Min( ( ( ( Const - ( FirstVNF_Mem * AMS ) ) / MRS ) / ( BR * ( Const / FirstVNF_Mem_Server ) ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( Min( Max( MUR,DS ) ,( ( MUR - MUM ) - RMSe ) ) ,Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ),RMSe ) ) ) / ( MUR * RMSe ) )", "obj1": 0.20078740157480315, "obj2": 0.6391437014340974}, {"determining": "Max( ( Const - FirstVNF_RAM_Server ),( FirstVNF_Mem_Server / DDR ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( MUC + Min( ( MUC + DS ) ,DS ) ) )", "obj1": 0.13976377952755906, "obj2": 0.7385074333789732}, {"determining": "( ( FirstVNF_RAM - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( ( CRS + FirstVNF_Mem_Server ) - ( DDR / MDR ) ) )", "choosing": "( ( RRSe / MLU ) / Max( ( MUC * MUM ),RRSe ) )", "obj1": 0.14566929133858267, "obj2": 0.7349876896211709}, {"determining": "( Min( FirstVNF_RAM ,Max( ( PN / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + FirstVNF_RAM ) ),FirstVNF_RAM ) ) - ( Min( RRS ,FirstVNF_Mem_Server ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( MUC ,MUM ),RRSe ) / ( ( Max( Max( MUC,Max( RRSe,( RMSe + MUM ) ) ),Min( ( Min( RCSe ,Max( CS,MUM ) ) + Max( Max( CS,CS ),Max( MLU,MUR ) ) ) ,Max( ( RRSe * ( MUM * RMSe ) ),MUR ) ) ) - MUC ) * ( ( RRSe * Min( MLU ,MUR ) ) + ( RCSe - Min( Min( Max( CS,( MUR / RMSe ) ) ,RMSe ) ,RCSe ) ) ) ) )", "obj1": 0.14566929133858267, "obj2": 0.7349876896211709}, {"determining": "( ( ( FirstVNF_CPU_Server * ( RRS * DDR ) ) * Max( Max( ( RRS * FirstVNF_Mem ),FirstVNF_CPU ),ARS ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUM + MUC ),Min( Min( CS ,DS ) ,( MLU + CS ) ) ) / ( MUC + Min( ( MUC + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) - Min( DS ,RCSe ) ) + RRSe ) ) ,DS ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7276091839209987}, {"determining": "( Min( ( FirstVNF_CPU_Server * ( RRS * DDR ) ) ,Max( Max( BR,FirstVNF_CPU ),ARS ) ) - ( ( MDR * Const ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUM + CS ),MUC ) / ( MUC + Min( ( MUC + ( MUM + CS ) ) ,DS ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7276091839209987}, {"determining": "Max( ARS,Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( ( MUC / ( MUR - MUR ) ) ,( MUR * MUC ) ) ) ) ) ) / Min( CS ,DS ) )", "obj1": 0.11023622047244094, "obj2": 0.7794742988899616}, {"determining": "( Min( ( RRS + ( FirstVNF_RAM_Server * ACS ) ) ,Const ) * Min( ( Max( FirstVNF_Mem_Server,Const ) + FirstVNF_CPU ) ,( MDR - CRS ) ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( MUC + Min( MUC ,DS ) ) )", "obj1": 0.14566929133858267, "obj2": 0.7349876896211709}, {"determining": "Max( ( ( Const * Max( ( FirstVNF_RAM_Server + FirstVNF_RAM ),MDR ) ) + ( FirstVNF_RAM_Server / FirstVNF_RAM ) ),AMS )", "choosing": "( ( DS + ( ( MUC * Min( RRSe ,MUR ) ) - RMSe ) ) / ( MUR * MUC ) )", "obj1": 0.20078740157480315, "obj2": 0.6391437014340974}, {"determining": "( ( Min( ( RRS + ( FirstVNF_RAM_Server * ACS ) ) ,Const ) * Min( ( Max( FirstVNF_Mem_Server,Const ) + FirstVNF_CPU ) ,( MDR - CRS ) ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( MUC + Min( MUC ,DS ) ) )", "obj1": 0.1437007874015748, "obj2": 0.7379268589903057}, {"determining": "Max( ( Const - PN ),Max( ( ( BR / FirstVNF_RAM ) - ( Const * ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) * Min( ( MDR / FirstVNF_RAM_Server ) ,BR ) ) ) ),CRS ) )", "choosing": "( ( ( CS - ( Max( RRSe,Max( DS,MUM ) ) - DS ) ) / Min( Max( ( Min( MUR ,MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) ) * RMSe )", "obj1": 0.23228346456692914, "obj2": 0.6144620822033436}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( RRS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUM + MUC ),Min( Min( CS ,DS ) ,( MLU + CS ) ) ) / ( MUC + Min( ( MUC + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) - Min( DS ,RCSe ) ) + RRSe ) ) ,DS ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7276091839209987}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( RRS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7644607415248521}, {"determining": "Max( ARS,( BR * AMS ) )", "choosing": "( ( ( ( RCSe / ( RCSe + RMSe ) ) - CS ) + ( MUR * ( RCSe / DS ) ) ) / Min( CS ,DS ) )", "obj1": 0.08661417322834646, "obj2": 0.8510562734453461}, {"determining": "( ( Min( ( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( ( MUC - RMSe ) + RRSe ) + ( ( CS * MUC ) + Max( MUM,MUC ) ) ) + Min( MUC ,DS ) ) )", "obj1": 0.19291338582677164, "obj2": 0.6562439548808973}, {"determining": "( ( Min( Const ,( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( ( AMS * PN ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( ( ( ( MUC + ( RRSe * RCSe ) ) / MLU ) * Min( MUR ,DS ) ) + RRSe ) + ( ( CS * MUM ) + Max( MUM,MUC ) ) ) + Min( MUC ,DS ) ) )", "obj1": 0.1673228346456693, "obj2": 0.6885630159295548}, {"determining": "( ( Min( ( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) + ( ( AMS * PN ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( ( ( ( MUC + ( RRSe * RCSe ) ) / MLU ) * Min( MUR ,DS ) ) + RRSe ) + ( ( CS * MUM ) + Max( MUM,MUC ) ) ) + Min( MUC ,DS ) ) )", "obj1": 0.1673228346456693, "obj2": 0.6885630159295548}, {"determining": "( ( Min( Const ,( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( ( AMS * PN ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( ( ( ( MUC + ( RRSe * RCSe ) ) / MLU ) * Min( MUR ,DS ) ) + RRSe ) + ( ( CS * MUM ) + Max( MUM,MUC ) ) ) + Min( MUC ,DS ) ) )", "obj1": 0.1673228346456693, "obj2": 0.6885630159295548}, {"determining": "( ( ( ARS - DDR ) + Max( FirstVNF_CPU,FirstVNF_RAM ) ) - ( ( AMS * PN ) - ( FirstVNF_Mem_Server + CRS ) ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( ( ( ( MUC + ( RRSe * CS ) ) / MLU ) * Min( MUR ,DS ) ) + RRSe ) + ( ( CS * MUM ) + Max( MUM,MUC ) ) ) + Min( DS ,MUC ) ) )", "obj1": 0.1673228346456693, "obj2": 0.6885630159295548}, {"determining": "Max( ARS,Min( ( PN / RRS ) ,( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * ( ( Min( PN ,Min( FirstVNF_CPU_Server ,( RRS - FirstVNF_RAM_Server ) ) ) - Min( FirstVNF_CPU_Server ,Max( MDR,( MRS - MDR ) ) ) ) + MDR ) ) ) )", "choosing": "( Max( RMSe,( ( ( ( RRSe + ( ( RMSe + RRSe ) / ( MUM + DS ) ) ) * DS ) * ( RCSe * MLU ) ) / MLU ) ) / Min( DS ,CS ) )", "obj1": 0.08464566929133858, "obj2": 0.8540751768398266}, {"determining": "Max( ( Const - PN ),Max( ( ( Const * ( Max( ( FirstVNF_Mem_Server / ( DDR / FirstVNF_CPU ) ),FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) - ( ( BR * CRS ) - PN ) ),BR ) )", "choosing": "( Min( ( Min( MUC ,DS ) - CS ) ,( CS - ( MUC * RMSe ) ) ) * RMSe )", "obj1": 0.2677165354330709, "obj2": 0.5918306967306346}, {"determining": "Max( ( Const - PN ),Max( ( ( Const * ( Max( ( FirstVNF_Mem_Server / ( DDR / FirstVNF_CPU ) ),FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) - ( ( BR * CRS ) - PN ) ),BR ) )", "choosing": "( Min( ( Min( MUC ,DS ) - CS ) ,( CS - ( MUC * RMSe ) ) ) * RMSe )", "obj1": 0.2677165354330709, "obj2": 0.5918306967306346}, {"determining": "Max( ( Const - PN ),Max( ( ( Const * ( Max( ( FirstVNF_Mem_Server / ( DDR / FirstVNF_CPU ) ),FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) - ( ( BR * CRS ) - PN ) ),BR ) )", "choosing": "( Min( ( Min( MUC ,DS ) - CS ) ,( CS - ( MUC * RMSe ) ) ) * RMSe )", "obj1": 0.2677165354330709, "obj2": 0.5918306967306346}, {"determining": "( ( ( FirstVNF_CPU_Server * ( RRS * DDR ) ) * Max( ( BR * Max( MRS,Min( CRS ,RRS ) ) ),ARS ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUC + Max( CS,Min( RCSe ,MLU ) ) ),MUC ) / ( MUC + Min( ( MUC + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) + Min( DS ,RCSe ) ) + RRSe ) ) ,DS ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7276091839209987}, {"determining": "Max( ( Min( ( ( ARS - ( FirstVNF_Mem / FirstVNF_CPU ) ) - CRS ) ,AMS ) - AMS ),( ( Min( ( PN / ( FirstVNF_RAM * ( ( PN / ARS ) + FirstVNF_Mem ) ) ) ,FirstVNF_Mem ) * AMS ) / ( BR * ( Min( PN ,FirstVNF_Mem ) + CRS ) ) ) )", "choosing": "( Min( Max( ( Max( MUC,RMSe ) - MUM ),( MUC - ( ( Min( MLU ,( RCSe / CS ) ) / RRSe ) * CS ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + MUC ) ,Min( MUC ,DS ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7622036226174012}, {"determining": "( Min( ( RRS + ( FirstVNF_RAM_Server * ACS ) ) ,Const ) * Min( ( Max( FirstVNF_Mem_Server,Const ) + FirstVNF_CPU ) ,( MDR - CRS ) ) )", "choosing": "( ( ( MUC / RMSe ) / ( CS / RCSe ) ) / ( MUC + Min( ( MUC + DS ) ,DS ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6509029392315767}, {"determining": "Max( ( RRS - FirstVNF_RAM_Server ),( FirstVNF_Mem_Server / DDR ) )", "choosing": "( ( ( MUC / RMSe ) / ( CS / RCSe ) ) / ( MUC + Min( ( MUC + DS ) ,DS ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6509029392315767}, {"determining": "Max( ( ( BR * Min( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem * ( ( FirstVNF_RAM / BR ) * FirstVNF_Mem_Server ) ) ) ,Max( ( BR + ( Const * ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) ),PN ) ) ) / FirstVNF_RAM ),( ( FirstVNF_RAM_Server + Min( AMS ,CRS ) ) * AMS ) )", "choosing": "( Min( Max( ( Min( MUR ,MUR ) - MUM ),( MUC / Max( ( ( ( MUC - RMSe ) + RRSe ) + RRSe ),MUC ) ) ) ,( ( MUR - MLU ) + MUR ) ) / Min( ( MLU * MUM ) ,Min( MUC ,DS ) ) )", "obj1": 0.08858267716535433, "obj2": 0.8336026875470121}, {"determining": "( Max( ( Const * ( ( ACS + CRS ) / FirstVNF_Mem ) ),( MDR / MRS ) ) + ( ( RRS + ( FirstVNF_RAM_Server / DDR ) ) * ( PN / RRS ) ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * ( CS / RCSe ) ) ) / Min( CS ,DS ) )", "obj1": 0.08464566929133858, "obj2": 0.8540751768398266}, {"determining": "Max( ( ( Min( ( Min( ( ACS / PN ) ,FirstVNF_CPU ) + ( BR / FirstVNF_RAM ) ) ,FirstVNF_Mem ) * AMS ) / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Min( Max( ( ( MUR * MUC ) / MUM ),( MUC / ( CS * ( ( MUM - MUC ) * MUR ) ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) ,( ( ( Max( RCSe,Max( ( CS + MUC ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7622036226174012}, {"determining": "Max( ( Const - PN ),( BR / ( ( Const * ( ( RRS - MDR ) - BR ) ) - ( BR / ( Const * FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( MUM / ( MUR * ( ( RRSe / MUM ) * MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + MUC ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( Max( RRSe,MUM ),Max( CS,MUR ) ) + CS ) ,Min( DS ,MUC ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "( ( Min( Const ,( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( ( AMS * PN ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( ( ( ( MUC + ( RRSe * RCSe ) ) / MLU ) * Min( MUR ,DS ) ) + RRSe ) + ( ( CS * MUM ) + Max( MUM,MUC ) ) ) + Min( MUC ,DS ) ) )", "obj1": 0.1673228346456693, "obj2": 0.6885630159295548}, {"determining": "Max( ( ( Const * Max( FirstVNF_Mem_Server,MDR ) ) + ( FirstVNF_RAM_Server / FirstVNF_RAM ) ),AMS )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ),RMSe ) ) ) / ( MUR * MUC ) )", "obj1": 0.20078740157480315, "obj2": 0.6391437014340974}, {"determining": "( ( ( FirstVNF_CPU_Server * ( RRS * DDR ) ) * Max( PN,AMS ) ) - ( Min( PN ,FirstVNF_Mem_Server ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUM + MUC ),MUC ) / ( DS - MUC ) )", "obj1": 0.14960629921259844, "obj2": 0.7276091839209987}, {"determining": "Max( ( Const - PN ),Max( ( ( BR / FirstVNF_RAM ) - ( Const * ( Max( ( FirstVNF_Mem_Server / ( FirstVNF_CPU * FirstVNF_CPU ) ),FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) ),Min( FirstVNF_Mem_Server ,RRS ) ) )", "choosing": "( ( ( Min( MUC ,DS ) - CS ) / ( MUC + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) - Min( DS ,RCSe ) ) + RRSe ) ) ) * RMSe )", "obj1": 0.21653543307086615, "obj2": 0.6332972149632166}, {"determining": "Max( ( Const - PN ),Max( ( ( BR / FirstVNF_RAM ) - ( Const * ( Max( ( FirstVNF_Mem_Server / ( FirstVNF_CPU * FirstVNF_CPU ) ),FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) ),BR ) )", "choosing": "( Max( ( MUM + MUC ),MUC ) / ( MUC + Min( ( MUC + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) - Min( DS ,RCSe ) ) + RRSe ) ) ,DS ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7276091839209987}, {"determining": "( ( ( FirstVNF_CPU_Server * ( RRS * DDR ) ) * Max( Max( BR,FirstVNF_CPU ),ARS ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( MUC ,DS ) - CS ) / Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) ) * RMSe )", "obj1": 0.23228346456692914, "obj2": 0.6144620822033436}, {"determining": "Max( ( ( Min( ( PN + ( FirstVNF_RAM * Max( ( FirstVNF_CPU + Const ),FirstVNF_Mem ) ) ) ,FirstVNF_Mem ) * AMS ) / FirstVNF_RAM ),( Min( ( CRS - DDR ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MLU * CS ) ) ) ,( ( ( MUC - ( DS / ( MUC - DS ) ) ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7644607415248521}, {"determining": "Max( ( ( Min( ( PN + ( Min( FirstVNF_CPU_Server ,MRS ) + FirstVNF_RAM ) ) ,FirstVNF_Mem ) * AMS ) / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Min( Max( ( ( MUC * MUR ) - MUM ),( MUC / ( CS * RMSe ) ) ) ,( ( Min( MUR ,MUM ) * RCSe ) + RRSe ) ) ,( ( ( Max( RCSe,Max( ( CS + MUC ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7622036226174012}, {"determining": "Max( ( Const - PN ),( ( ( Const * ( ( ACS / ( RRS / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) / FirstVNF_Mem ) ) - ( BR / FirstVNF_RAM ) ) / Max( ( ( ACS * ( FirstVNF_Mem_Server + ARS ) ) / RRS ),Max( DDR,Max( ( ARS + CRS ),ARS ) ) ) ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( RRSe / ( MUR - MUR ) ) ) ,( ( ( Max( ( RRSe - MLU ),Max( ( MUC + MUR ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( MUM - RRSe ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "Max( ( Const - PN ),Max( ( ( ( BR * CRS ) - ( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( RRS * FirstVNF_Mem ) ) ) ) - ( Const * ( Max( ( FirstVNF_Mem_Server / ( RRS * FirstVNF_CPU ) ),FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) ),BR ) )", "choosing": "( ( ( Min( MUR ,DS ) - CS ) / Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( RRSe + ( DS - RMSe ) ) + ( ( RMSe / DS ) * DS ) ) ) ) * RMSe )", "obj1": 0.2559055118110236, "obj2": 0.5981279158795128}, {"determining": "Max( ( ( Min( ( PN + ( FirstVNF_RAM * ( ( ARS / PN ) + FirstVNF_Mem ) ) ) ,FirstVNF_Mem ) * AMS ) / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7622036226174012}, {"determining": "( Min( ACS ,ARS ) - ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU / MDR ) ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUM + DS ),MUC ) / ( MUC + Min( Max( ( RCSe / RCSe ),RMSe ) ,DS ) ) )", "obj1": 0.13976377952755906, "obj2": 0.7385074333789732}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( RRS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( ( ( ( MUC - RMSe ) + RRSe ) + RRSe ),MUC ) ) ) ,( ( ( MUC - RMSe ) + Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.08858267716535433, "obj2": 0.8336026875470121}, {"determining": "Max( ( ( FirstVNF_RAM_Server * AMS ) / FirstVNF_RAM ),( Min( ( PN + ( FirstVNF_RAM * ( ( ARS / PN ) + FirstVNF_Mem ) ) ) ,FirstVNF_Mem ) * AMS ) )", "choosing": "( Max( ( MUM + MUC ),Min( Min( CS ,DS ) ,( MLU + CS ) ) ) / ( MUC + Min( ( MUC + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) - Min( DS ,RCSe ) ) + RRSe ) ) ,DS ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7276091839209987}, {"determining": "Max( ARS,Min( ( PN / RRS ) ,( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * ( ( ( MDR - Const ) - ( Const * ( ( FirstVNF_CPU_Server + ACS ) / ( RRS + Const ) ) ) ) + MDR ) ) ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * ( CS / RCSe ) ) ) / Min( CS ,DS ) )", "obj1": 0.08661417322834646, "obj2": 0.8510562734453461}, {"determining": "( ( Min( Const ,( AMS / ( ( ( ( AMS * PN ) - ( CRS + FirstVNF_Mem_Server ) ) + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( ( AMS * PN ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( ( ( ( MUC + ( RRSe * RCSe ) ) / MLU ) * Min( RRSe ,DS ) ) + RRSe ) + ( ( CS * MUM ) + Max( MUM,MUC ) ) ) + Min( MUC ,DS ) ) )", "obj1": 0.16338582677165353, "obj2": 0.6911330297334624}, {"determining": "( ( Min( Const ,( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( ( AMS * PN ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( ( ( ( MUC + ( RRSe * RCSe ) ) / MLU ) * Min( MUR ,DS ) ) + RRSe ) + ( ( CS * MUM ) + Max( MUM,MUC ) ) ) + Min( MUC ,DS ) ) )", "obj1": 0.1673228346456693, "obj2": 0.6885630159295548}, {"determining": "( ( Min( Const ,( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( ( AMS * PN ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( ( ( ( MUC + ( RRSe * RCSe ) ) / MLU ) * Min( MUR ,DS ) ) + RRSe ) + ( ( CS * MUM ) + Max( MUM,MUC ) ) ) + Min( MUC ,DS ) ) )", "obj1": 0.1673228346456693, "obj2": 0.6885630159295548}, {"determining": "Max( ( ( Min( ( PN + ( BR / ( CRS + PN ) ) ) ,FirstVNF_Mem ) * AMS ) / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( ( MUC - ( RRSe - MUM ) ) + RRSe ) + RRSe ) ) ,( ( ( Max( RCSe,Max( ( CS + MUC ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7549304841270637}, {"determining": "Max( ( ( FirstVNF_CPU_Server * ( RRS * DDR ) ) * Max( Max( BR,FirstVNF_CPU ),ARS ) ),( ( ( Const * ( ( ACS / ARS ) / FirstVNF_Mem ) ) - ( BR / FirstVNF_RAM ) ) / BR ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + RRSe ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "( ( ( FirstVNF_CPU_Server * ( RRS * DDR ) ) * Max( Max( BR,FirstVNF_CPU ),ARS ) ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( DS - MUC ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe / MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "Max( ( Const - PN ),( ( ( Const * ( ( ACS / ARS ) / FirstVNF_Mem ) ) - ( BR / FirstVNF_RAM ) ) / BR ) )", "choosing": "( Max( ( MUM + MUC ),MUC ) / ( MUC + Min( ( MUC + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) - Min( DS ,RCSe ) ) + RRSe ) ) ,DS ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7276091839209987}, {"determining": "Max( FirstVNF_RAM_Server,Min( ( PN / RRS ) ,( ( PN * AMS ) * ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Min( Min( ( Min( ( RCSe + MUC ) ,RMSe ) * MLU ) ,( RCSe / MUM ) ) ,Max( ( RRSe / MUR ),MUC ) ) ) ) / Min( MUR ,DS ) )", "obj1": 0.08464566929133858, "obj2": 0.8540751768398266}, {"determining": "Max( ( ( Min( ( PN + ( ( ( ARS / FirstVNF_Mem_Server ) - Const ) * Min( ( FirstVNF_Mem + MRS ) ,FirstVNF_CPU_Server ) ) ) ,FirstVNF_Mem ) * AMS ) / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - CRS ) )", "choosing": "( Min( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) ,( ( ( Max( RCSe,Max( ( CS + MUC ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7622036226174012}, {"determining": "( ( Min( ( RRS + ( FirstVNF_RAM_Server * ACS ) ) ,Const ) * Min( ( Max( FirstVNF_Mem_Server,Const ) + FirstVNF_CPU ) ,( MDR - CRS ) ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( MUC + Min( MUC ,DS ) ) )", "obj1": 0.1437007874015748, "obj2": 0.7379268589903057}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( FirstVNF_CPU - Const ) - ( Const * ( ( FirstVNF_CPU_Server + ACS ) / ( RRS + Const ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUM + MUC ),Min( Min( CS ,DS ) ,( MLU + CS ) ) ) / ( MUC + Min( ( MUC + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) - Min( DS ,( CS / RCSe ) ) ) + RRSe ) ) ,DS ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7250312522193971}, {"determining": "( ( Min( ( AMS / ( FirstVNF_CPU + ACS ) ) ,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) + ( ( AMS * PN ) - ( ARS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( RCSe - DS ) * RRSe ) / ( CS * ( Max( MUM,( DS / DS ) ) + MUM ) ) ) + MUM ),RRSe ) / ( ( ( ( ( ( MUC + ( RRSe * RCSe ) ) / MLU ) * Min( MUR ,DS ) ) + RRSe ) + ( ( CS * MUM ) + Max( MUM,( MUC / ( MUR - MUR ) ) ) ) ) + Min( MUC ,RMSe ) ) )", "obj1": 0.1279527559055118, "obj2": 0.7464478523929874}, {"determining": "Max( ARS,Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( ( ( ( MUC + ( RRSe * RCSe ) ) / MLU ) * Min( MUR ,DS ) ) + RRSe ) + ( ( CS * MUM ) + Max( MUM,MUC ) ) ) + Min( MUC ,DS ) ) )", "obj1": 0.1673228346456693, "obj2": 0.6885630159295548}, {"determining": "( ( Min( ( ( DDR * FirstVNF_Mem ) / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) + ( ( AMS * PN ) - ( FirstVNF_Mem_Server + CRS ) ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( MUM ,( DS - MUM ) ),( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( ( MUC / ( MUR + MUR ) ) ,( MUR * MUC ) ) ) ) ) ) / Min( CS ,DS ) )", "obj1": 0.11023622047244094, "obj2": 0.7794742988899616}, {"determining": "( ( Min( Const ,( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ) + Max( ( ( ( FirstVNF_Mem + ACS ) / ( RRS + Const ) ) * Const ),FirstVNF_RAM ) ) - ( ( AMS * PN ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + MUM ),CS ) / ( ( ( ( ( ( MUC + ( RRSe * RCSe ) ) / MLU ) * Min( MUR ,DS ) ) + RRSe ) + ( ( CS * MUM ) + Max( MUM,MUC ) ) ) + Min( MUC ,DS ) ) )", "obj1": 0.1594488188976378, "obj2": 0.695273872336323}, {"determining": "Max( ( ( FirstVNF_RAM_Server * AMS ) / FirstVNF_RAM ),( ( Min( ( PN - Min( PN ,( Const - FirstVNF_CPU_Server ) ) ) ,AMS ) - FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( ( ( ( CS - RMSe ) + RRSe ) + RRSe ),MUC ) ) ) ,( ( ( MUC - RMSe ) + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) / Min( DS ,RCSe ) ) + RRSe ) ) + RRSe ) ) / Min( ( MLU + ( Max( CS,RCSe ) - Max( RRSe,( Max( DS,RCSe ) + RCSe ) ) ) ) ,Min( MUC ,DS ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8137151835735544}, {"determining": "( Min( ( RRS + ( FirstVNF_RAM_Server * ACS ) ) ,Const ) * Min( ( Min( ( DDR - CRS ) ,AMS ) + FirstVNF_CPU ) ,( MDR - CRS ) ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( ( MUC / ( MUR - MUR ) ) ,( MUR * MUC ) ) ) ) ) ) / Min( CS ,DS ) )", "obj1": 0.10236220472440945, "obj2": 0.7901794010764629}, {"determining": "( Max( BR,Const ) - Min( Max( ARS,( Min( ( DDR - ( ( ACS + AMS ) - ( FirstVNF_RAM / FirstVNF_CPU ) ) ) ,AMS ) - FirstVNF_Mem_Server ) ) ,Min( ( Min( PN ,MDR ) / FirstVNF_CPU_Server ) ,CRS ) ) )", "choosing": "( ( ( ( ( MUC / ( Min( DS ,Min( RRSe ,MUR ) ) / MUM ) ) + RRSe ) + ( ( CS * MUM ) + Max( MUM,MUC ) ) ) + Min( MUC ,DS ) ) / Max( ( MUC + MUM ),RRSe ) )", "obj1": 0.1673228346456693, "obj2": 0.6885630159295548}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( Min( Const ,AMS ) ,( ( Max( CRS,PN ) - ( Min( MDR ,Max( FirstVNF_CPU,FirstVNF_CPU ) ) + PN ) ) + Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,( RRS * Const ) ) ) ) - PN ) )", "choosing": "( ( ( Min( Max( MLU,Max( CS,RRSe ) ) ,MUM ) - RRSe ) + ( RCSe - Min( ( DS * ( MUR * MUM ) ) ,( Max( DS,RMSe ) + ( CS - Max( MLU,MUC ) ) ) ) ) ) / ( ( ( MUC - RMSe ) + RRSe ) + ( ( CS * MUC ) + Max( MUM,MUC ) ) ) )", "obj1": 0.15748031496062992, "obj2": 0.7117395685931186}, {"determining": "( ( Min( Const ,( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( ( AMS * PN ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( ( ( ( MUC + ( RRSe * RCSe ) ) / MLU ) * Min( MUR ,DS ) ) + RRSe ) + ( ( CS * MUM ) + Max( MUM,MUC ) ) ) + Min( MUC ,DS ) ) )", "obj1": 0.1673228346456693, "obj2": 0.6885630159295548}, {"determining": "Max( ( FirstVNF_CPU - Max( ( RRS - CRS ),Const ) ),( ( PN / RRS ) * ( AMS + ACS ) ) )", "choosing": "( ( ( ( RRSe - CS ) * ( MUC / RCSe ) ) + ( RCSe / CS ) ) / Min( CS ,DS ) )", "obj1": 0.08267716535433071, "obj2": 0.8562230139930868}, {"determining": "Max( ARS,Min( ( PN / RRS ) ,( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * ( ( ( MDR - Const ) - ( Const * ( ( FirstVNF_CPU_Server + ACS ) / ( RRS + Const ) ) ) ) + MDR ) ) ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * ( CS / RCSe ) ) ) / Min( CS ,DS ) )", "obj1": 0.08661417322834646, "obj2": 0.8510562734453461}, {"determining": "Max( ( ( Min( ( PN + ( FirstVNF_RAM * ( ( ARS / PN ) + FirstVNF_Mem ) ) ) ,FirstVNF_Mem ) * AMS ) / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7622036226174012}, {"determining": "Max( ( ( AMS * FirstVNF_RAM_Server ) / FirstVNF_RAM ),( ( Min( ( DDR - CRS ) ,( BR + FirstVNF_Mem_Server ) ) - RRS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( ( ( ( MUR * MUC ) - MUM ) - ( MLU - ( ( ( DS + CS ) + Max( MUR,RCSe ) ) + Min( RCSe ,( DS - ( MUC - MLU ) ) ) ) ) ) ,Max( ( MUM + MUC ),MUC ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.0984251968503937, "obj2": 0.8082963299208445}, {"determining": "Max( ( Min( BR ,ACS ) / FirstVNF_RAM ),( ( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUM + MUC ),MUC ) / ( MUC + Min( ( MUC + ( ( ( MLU + ( MUC + RRSe ) ) - Min( DS ,RCSe ) ) - RRSe ) ) ,DS ) ) )", "obj1": 0.13385826771653545, "obj2": 0.7440026758859773}, {"determining": "Max( ( ( ACS + ( ( MDR * ARS ) / PN ) ) - Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ),Min( ( RRS / FirstVNF_CPU ) ,( ( ( Const - Const ) + FirstVNF_RAM_Server ) * ( MDR + ( ( MDR - Const ) - ( ( ( FirstVNF_Mem + ACS ) / ( RRS + Const ) ) * Const ) ) ) ) ) )", "choosing": "( ( ( MUR / ( ( Max( MUC,( ( MUR + MUC ) / Max( MUR,MLU ) ) ) + DS ) * Max( MUC,DS ) ) ) / RMSe ) / Min( CS ,RCSe ) )", "obj1": 0.1968503937007874, "obj2": 0.6499428925074958}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( RRS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( ( MUC - RMSe ) + RRSe ) + ( ( CS * MUC ) + Max( MUM,MUC ) ) ) + Min( MUC ,DS ) ) )", "obj1": 0.19291338582677164, "obj2": 0.6562439548808973}, {"determining": "( ( Min( ( AMS / ( ( ACS + ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) / RRS ) ) + RRS ) ) ,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( Max( FirstVNF_Mem_Server,RRS ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( ( Max( RCSe,MUC ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + MUC ) ,Min( MUC ,DS ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7644607415248521}, {"determining": "Max( ( ( Const * Max( FirstVNF_Mem_Server,MDR ) ) + ( FirstVNF_RAM_Server / FirstVNF_RAM ) ),ACS )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,Min( MUM ,( RMSe * MLU ) ) ),RMSe ) ) ) / ( MUR * MUC ) )", "obj1": 0.20275590551181102, "obj2": 0.6385648666362993}, {"determining": "Max( ( Max( FirstVNF_Mem_Server,Max( ( FirstVNF_CPU + MDR ),FirstVNF_RAM_Server ) ) + MDR ),Min( ( ( AMS * MDR ) * ( FirstVNF_Mem * ACS ) ) ,( Min( RRS ,( PN / ( PN / FirstVNF_RAM ) ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ),RMSe ) ) ) / ( MUR * MUC ) )", "obj1": 0.24606299212598426, "obj2": 0.605973461853058}, {"determining": "Max( ( RRS - FirstVNF_RAM_Server ),( FirstVNF_Mem_Server / DDR ) )", "choosing": "( ( ( MUC / RMSe ) / ( CS / RCSe ) ) / ( MUC + Min( ( MUC + DS ) ,DS ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6509029392315767}, {"determining": "( Min( Max( FirstVNF_Mem_Server,MDR ) ,RRS ) * Min( ( MDR - CRS ) ,( Max( FirstVNF_Mem_Server,Const ) + FirstVNF_CPU ) ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( CS + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( Min( MUM ,RMSe ) ,DS ) ) )", "obj1": 0.1220472440944882, "obj2": 0.7567053871595312}, {"determining": "Max( ( ( Const * Max( FirstVNF_Mem_Server,MDR ) ) + ( FirstVNF_RAM_Server / FirstVNF_RAM ) ),AMS )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ),RMSe ) ) ) / ( MUR * MUC ) )", "obj1": 0.20078740157480315, "obj2": 0.6391437014340974}, {"determining": "Max( ( ( FirstVNF_RAM_Server * AMS ) / FirstVNF_RAM ),( ( Min( ( DDR - CRS ) ,( ( Const * Max( FirstVNF_Mem_Server,MDR ) ) + ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) - FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( ( ( ( MUC - RMSe ) + Max( MUC,MUM ) ) + RRSe ),MUC ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.08070866141732283, "obj2": 0.860146533328348}, {"determining": "Max( ( FirstVNF_RAM_Server - Const ),( ( FirstVNF_CPU * MDR ) / DDR ) )", "choosing": "( Max( ( MUC + MUM ),Min( ( RMSe + MUM ) ,RCSe ) ) / ( MUC + Min( ( MUC + DS ) ,DS ) ) )", "obj1": 0.13976377952755906, "obj2": 0.7385074333789732}, {"determining": "Max( ( ( FirstVNF_RAM_Server * AMS ) / FirstVNF_RAM ),( ( Min( Max( FirstVNF_Mem_Server,MDR ) ,AMS ) - FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( ( ( ( MUC - RMSe ) + RRSe ) + RRSe ),MUC ) ) ) ,( ( ( MUC / ( MUR - MUR ) ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.09645669291338582, "obj2": 0.8091991788850409}, {"determining": "( ( Min( Const ,( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( DDR - CRS ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( ( ( ( MUC + ( MUR * RCSe ) ) / MLU ) * Min( MUR ,DS ) ) + RRSe ) + ( ( CS * MUM ) + Max( MUM,MUC ) ) ) + Min( MUC ,DS ) ) )", "obj1": 0.1673228346456693, "obj2": 0.6885630159295548}, {"determining": "( ( Min( Const ,( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( ( AMS * PN ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( ( ( ( MUC + ( RRSe * RCSe ) ) / MLU ) * Min( MUR ,DS ) ) + RRSe ) + ( ( CS * MUM ) + Max( MUM,MUC ) ) ) + Min( MUC ,DS ) ) )", "obj1": 0.1673228346456693, "obj2": 0.6885630159295548}], "12": [{"determining": "Min( ( RRS - DDR ) ,Min( FirstVNF_RAM_Server ,AMS ) )", "choosing": "( ( MLU + ( RCSe + MUM ) ) / ( CS * ( RCSe - ( RRSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,( ( BR * FirstVNF_Mem_Server ) - Min( MDR ,FirstVNF_RAM ) ) ) - ( CRS * MDR ) ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + MUM ),Max( ( RMSe - Max( Min( ( CS - RCSe ) ,CS ),RRSe ) ),RCSe ) ) / ( ( ( ( MUC - RRSe ) + RMSe ) + ( ( CS * MUC ) + Max( MUM,MUC ) ) ) + Min( Max( CS,RCSe ) ,DS ) ) )", "obj1": 0.17716535433070865, "obj2": 0.6686947769402188}, {"determining": "( ( Max( Max( BR,FirstVNF_CPU ),ARS ) * ( FirstVNF_CPU_Server * ( RRS * FirstVNF_CPU ) ) ) - ( ( MRS - AMS ) - FirstVNF_RAM_Server ) )", "choosing": "( ( MUC + Min( ( ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) / Min( DS ,RCSe ) ) + RRSe ) + ( Max( DS,RRSe ) + ( RMSe * RRSe ) ) ) ,DS ) ) / ( RRSe + RMSe ) )", "obj1": 0.14960629921259844, "obj2": 0.7276091839209987}, {"determining": "( ( Max( Max( BR,FirstVNF_CPU ),ARS ) * ( FirstVNF_CPU_Server * ( RRS * FirstVNF_CPU ) ) ) - ( ( MRS - AMS ) - FirstVNF_RAM_Server ) )", "choosing": "( ( MUC + Min( ( ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) / Min( DS ,RCSe ) ) + RRSe ) + ( Max( DS,RRSe ) + ( RMSe * RRSe ) ) ) ,DS ) ) / ( RRSe + RMSe ) )", "obj1": 0.14960629921259844, "obj2": 0.7276091839209987}, {"determining": "( ( Max( Max( BR,FirstVNF_CPU ),ARS ) * ( FirstVNF_CPU_Server * ( RRS * FirstVNF_CPU ) ) ) - ( ( MRS - AMS ) - FirstVNF_RAM_Server ) )", "choosing": "( ( MUC + Min( ( ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) / Min( DS ,RCSe ) ) + RRSe ) + ( Max( DS,RRSe ) + ( RMSe * RRSe ) ) ) ,DS ) ) / ( RRSe + RMSe ) )", "obj1": 0.14960629921259844, "obj2": 0.7276091839209987}, {"determining": "( ( ( FirstVNF_CPU_Server * ( RRS * DDR ) ) * Max( Max( BR,FirstVNF_CPU ),ARS ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUM + MUC ),MUC ) / ( MUC + Min( ( MUC + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) - Min( DS ,RCSe ) ) + RRSe ) ) ,DS ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7276091839209987}, {"determining": "( ( ( FirstVNF_CPU_Server * ( RRS * DDR ) ) + Max( ARS,Max( BR,FirstVNF_CPU ) ) ) - ( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "( Max( ( MLU + MUM ),MUC ) / ( MUC + Min( ( MUR + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) - Min( DS ,RCSe ) ) + RRSe ) ) ,DS ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7276091839209987}, {"determining": "Max( ( MDR - BR ),( FirstVNF_Mem_Server - Min( ( FirstVNF_RAM_Server - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( RRS * FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Min( ( MLU + CS ) ,Min( MUC ,DS ) ) / Min( Max( ( ( DS * MUC ) - Max( MUR,RRSe ) ),( MUC / ( CS * CS ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7644607415248521}, {"determining": "Max( ( Const - PN ),Max( ( ( Const * ( Max( ( FirstVNF_Mem_Server / ( DDR / FirstVNF_CPU ) ),FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) - ( ( BR * CRS ) - PN ) ),BR ) )", "choosing": "( Min( ( Min( MUC ,DS ) - CS ) ,( CS - ( MUC * RMSe ) ) ) * RMSe )", "obj1": 0.19881889763779528, "obj2": 0.6443441900250597}, {"determining": "Min( Min( Max( Max( ARS,AMS ),Max( PN,PN ) ) ,Min( Min( Const ,PN ) ,CRS ) ) ,Min( ( ( ( Const - ( FirstVNF_Mem * AMS ) ) / MRS ) / ( BR * ( Const / FirstVNF_Mem_Server ) ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( Min( Max( MUR,DS ) ,( ( MUR - MUM ) - RMSe ) ) ,Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ),RMSe ) ) ) / ( MUR * RMSe ) )", "obj1": 0.20078740157480315, "obj2": 0.6391437014340974}, {"determining": "( ( ( FirstVNF_CPU_Server * ( RRS * DDR ) ) * Max( Max( ( RRS * FirstVNF_Mem ),FirstVNF_CPU ),ARS ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUM + MUC ),Min( Min( CS ,DS ) ,( MLU + CS ) ) ) / ( MUC + Min( ( MUC + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) - Min( DS ,RCSe ) ) + RRSe ) ) ,DS ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7276091839209987}, {"determining": "( Min( ( FirstVNF_CPU_Server * ( RRS * DDR ) ) ,Max( Max( BR,FirstVNF_CPU ),ARS ) ) - ( ( MDR * Const ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUM + CS ),MUC ) / ( MUC + Min( ( MUC + ( MUM + CS ) ) ,DS ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7276091839209987}, {"determining": "Max( ARS,Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( ( MUC / ( MUR - MUR ) ) ,( MUR * MUC ) ) ) ) ) ) / Min( CS ,DS ) )", "obj1": 0.11023622047244094, "obj2": 0.7794742988899616}, {"determining": "Max( ( ( Const * Max( ( FirstVNF_RAM_Server + FirstVNF_RAM ),MDR ) ) + ( FirstVNF_RAM_Server / FirstVNF_RAM ) ),AMS )", "choosing": "( ( DS + ( ( MUC * Min( RRSe ,MUR ) ) - RMSe ) ) / ( MUR * MUC ) )", "obj1": 0.20078740157480315, "obj2": 0.6391437014340974}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( RRS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUM + MUC ),Min( Min( CS ,DS ) ,( MLU + CS ) ) ) / ( MUC + Min( ( MUC + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) - Min( DS ,RCSe ) ) + RRSe ) ) ,DS ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7276091839209987}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( RRS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7644607415248521}, {"determining": "( ( ( FirstVNF_CPU_Server * ( RRS * DDR ) ) * Max( ( BR * Max( MRS,Min( CRS ,RRS ) ) ),ARS ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUC + Max( CS,Min( RCSe ,MLU ) ) ),MUC ) / ( MUC + Min( ( MUC + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) + Min( DS ,RCSe ) ) + RRSe ) ) ,DS ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7276091839209987}, {"determining": "Max( ( Min( ( ( ARS - ( FirstVNF_Mem / FirstVNF_CPU ) ) - CRS ) ,AMS ) - AMS ),( ( Min( ( PN / ( FirstVNF_RAM * ( ( PN / ARS ) + FirstVNF_Mem ) ) ) ,FirstVNF_Mem ) * AMS ) / ( BR * ( Min( PN ,FirstVNF_Mem ) + CRS ) ) ) )", "choosing": "( Min( Max( ( Max( MUC,RMSe ) - MUM ),( MUC - ( ( Min( MLU ,( RCSe / CS ) ) / RRSe ) * CS ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + MUC ) ,Min( MUC ,DS ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7622036226174012}, {"determining": "Max( ( ( Min( ( Min( ( ACS / PN ) ,FirstVNF_CPU ) + ( BR / FirstVNF_RAM ) ) ,FirstVNF_Mem ) * AMS ) / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Min( Max( ( ( MUR * MUC ) / MUM ),( MUC / ( CS * ( ( MUM - MUC ) * MUR ) ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) ,( ( ( Max( RCSe,Max( ( CS + MUC ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7622036226174012}, {"determining": "Max( ( Const - PN ),( BR / ( ( Const * ( ( RRS - MDR ) - BR ) ) - ( BR / ( Const * FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( MUM / ( MUR * ( ( RRSe / MUM ) * MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + MUC ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( Max( RRSe,MUM ),Max( CS,MUR ) ) + CS ) ,Min( DS ,MUC ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "( ( ( FirstVNF_CPU_Server * ( RRS * DDR ) ) * Max( PN,AMS ) ) - ( Min( PN ,FirstVNF_Mem_Server ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUM + MUC ),MUC ) / ( DS - MUC ) )", "obj1": 0.14960629921259844, "obj2": 0.7276091839209987}, {"determining": "Max( ( Const - PN ),Max( ( ( BR / FirstVNF_RAM ) - ( Const * ( Max( ( FirstVNF_Mem_Server / ( FirstVNF_CPU * FirstVNF_CPU ) ),FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) ),BR ) )", "choosing": "( Max( ( MUM + MUC ),MUC ) / ( MUC + Min( ( MUC + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) - Min( DS ,RCSe ) ) + RRSe ) ) ,DS ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7276091839209987}, {"determining": "Max( ( ( Min( ( PN + ( FirstVNF_RAM * Max( ( FirstVNF_CPU + Const ),FirstVNF_Mem ) ) ) ,FirstVNF_Mem ) * AMS ) / FirstVNF_RAM ),( Min( ( CRS - DDR ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( MLU * CS ) ) ) ,( ( ( MUC - ( DS / ( MUC - DS ) ) ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7644607415248521}, {"determining": "Max( ( ( Min( ( PN + ( Min( FirstVNF_CPU_Server ,MRS ) + FirstVNF_RAM ) ) ,FirstVNF_Mem ) * AMS ) / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Min( Max( ( ( MUC * MUR ) - MUM ),( MUC / ( CS * RMSe ) ) ) ,( ( Min( MUR ,MUM ) * RCSe ) + RRSe ) ) ,( ( ( Max( RCSe,Max( ( CS + MUC ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7622036226174012}, {"determining": "Max( ( Const - PN ),( ( ( Const * ( ( ACS / ( RRS / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) / FirstVNF_Mem ) ) - ( BR / FirstVNF_RAM ) ) / Max( ( ( ACS * ( FirstVNF_Mem_Server + ARS ) ) / RRS ),Max( DDR,Max( ( ARS + CRS ),ARS ) ) ) ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( RRSe / ( MUR - MUR ) ) ) ,( ( ( Max( ( RRSe - MLU ),Max( ( MUC + MUR ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( MUM - RRSe ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "Max( ( ( Min( ( PN + ( FirstVNF_RAM * ( ( ARS / PN ) + FirstVNF_Mem ) ) ) ,FirstVNF_Mem ) * AMS ) / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7622036226174012}, {"determining": "Max( ( ( FirstVNF_RAM_Server * AMS ) / FirstVNF_RAM ),( Min( ( PN + ( FirstVNF_RAM * ( ( ARS / PN ) + FirstVNF_Mem ) ) ) ,FirstVNF_Mem ) * AMS ) )", "choosing": "( Max( ( MUM + MUC ),Min( Min( CS ,DS ) ,( MLU + CS ) ) ) / ( MUC + Min( ( MUC + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) - Min( DS ,RCSe ) ) + RRSe ) ) ,DS ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7276091839209987}, {"determining": "( ( Min( Const ,( AMS / ( ( ( ( AMS * PN ) - ( CRS + FirstVNF_Mem_Server ) ) + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( ( AMS * PN ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( ( ( ( MUC + ( RRSe * RCSe ) ) / MLU ) * Min( RRSe ,DS ) ) + RRSe ) + ( ( CS * MUM ) + Max( MUM,MUC ) ) ) + Min( MUC ,DS ) ) )", "obj1": 0.16338582677165353, "obj2": 0.6911330297334624}, {"determining": "Max( ( ( Min( ( PN + ( BR / ( CRS + PN ) ) ) ,FirstVNF_Mem ) * AMS ) / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( ( MUC - ( RRSe - MUM ) ) + RRSe ) + RRSe ) ) ,( ( ( Max( RCSe,Max( ( CS + MUC ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7549304841270637}, {"determining": "Max( ( ( FirstVNF_CPU_Server * ( RRS * DDR ) ) * Max( Max( BR,FirstVNF_CPU ),ARS ) ),( ( ( Const * ( ( ACS / ARS ) / FirstVNF_Mem ) ) - ( BR / FirstVNF_RAM ) ) / BR ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + RRSe ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "( ( ( FirstVNF_CPU_Server * ( RRS * DDR ) ) * Max( Max( BR,FirstVNF_CPU ),ARS ) ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( DS - MUC ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe / MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "Max( ( Const - PN ),( ( ( Const * ( ( ACS / ARS ) / FirstVNF_Mem ) ) - ( BR / FirstVNF_RAM ) ) / BR ) )", "choosing": "( Max( ( MUM + MUC ),MUC ) / ( MUC + Min( ( MUC + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) - Min( DS ,RCSe ) ) + RRSe ) ) ,DS ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7276091839209987}, {"determining": "Max( ( ( Min( ( PN + ( ( ( ARS / FirstVNF_Mem_Server ) - Const ) * Min( ( FirstVNF_Mem + MRS ) ,FirstVNF_CPU_Server ) ) ) ,FirstVNF_Mem ) * AMS ) / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - CRS ) )", "choosing": "( Min( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) ,( ( ( Max( RCSe,Max( ( CS + MUC ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7622036226174012}, {"determining": "( ( Min( ( AMS / ( FirstVNF_CPU + ACS ) ) ,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) + ( ( AMS * PN ) - ( ARS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( RCSe - DS ) * RRSe ) / ( CS * ( Max( MUM,( DS / DS ) ) + MUM ) ) ) + MUM ),RRSe ) / ( ( ( ( ( ( MUC + ( RRSe * RCSe ) ) / MLU ) * Min( MUR ,DS ) ) + RRSe ) + ( ( CS * MUM ) + Max( MUM,( MUC / ( MUR - MUR ) ) ) ) ) + Min( MUC ,RMSe ) ) )", "obj1": 0.1279527559055118, "obj2": 0.7464478523929874}, {"determining": "( ( Min( ( ( DDR * FirstVNF_Mem ) / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) + ( ( AMS * PN ) - ( FirstVNF_Mem_Server + CRS ) ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( MUM ,( DS - MUM ) ),( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( ( MUC / ( MUR + MUR ) ) ,( MUR * MUC ) ) ) ) ) ) / Min( CS ,DS ) )", "obj1": 0.11023622047244094, "obj2": 0.7794742988899616}, {"determining": "Max( ( ( FirstVNF_RAM_Server * AMS ) / FirstVNF_RAM ),( ( Min( ( PN - Min( PN ,( Const - FirstVNF_CPU_Server ) ) ) ,AMS ) - FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( ( ( ( CS - RMSe ) + RRSe ) + RRSe ),MUC ) ) ) ,( ( ( MUC - RMSe ) + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) / Min( DS ,RCSe ) ) + RRSe ) ) + RRSe ) ) / Min( ( MLU + ( Max( CS,RCSe ) - Max( RRSe,( Max( DS,RCSe ) + RCSe ) ) ) ) ,Min( MUC ,DS ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8137151835735544}, {"determining": "Max( ( FirstVNF_CPU - Max( ( RRS - CRS ),Const ) ),( ( PN / RRS ) * ( AMS + ACS ) ) )", "choosing": "( ( ( ( RRSe - CS ) * ( MUC / RCSe ) ) + ( RCSe / CS ) ) / Min( CS ,DS ) )", "obj1": 0.08267716535433071, "obj2": 0.8562230139930868}, {"determining": "Max( ( ( Min( ( PN + ( FirstVNF_RAM * ( ( ARS / PN ) + FirstVNF_Mem ) ) ) ,FirstVNF_Mem ) * AMS ) / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7622036226174012}, {"determining": "Max( ( ( AMS * FirstVNF_RAM_Server ) / FirstVNF_RAM ),( ( Min( ( DDR - CRS ) ,( BR + FirstVNF_Mem_Server ) ) - RRS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( ( ( ( MUR * MUC ) - MUM ) - ( MLU - ( ( ( DS + CS ) + Max( MUR,RCSe ) ) + Min( RCSe ,( DS - ( MUC - MLU ) ) ) ) ) ) ,Max( ( MUM + MUC ),MUC ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.0984251968503937, "obj2": 0.8082963299208445}, {"determining": "Max( ( Min( BR ,ACS ) / FirstVNF_RAM ),( ( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUM + MUC ),MUC ) / ( MUC + Min( ( MUC + ( ( ( MLU + ( MUC + RRSe ) ) - Min( DS ,RCSe ) ) - RRSe ) ) ,DS ) ) )", "obj1": 0.13385826771653545, "obj2": 0.7440026758859773}, {"determining": "( ( Min( ( AMS / ( ( ACS + ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) / RRS ) ) + RRS ) ) ,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( Max( FirstVNF_Mem_Server,RRS ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( ( Max( RCSe,MUC ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + MUC ) ,Min( MUC ,DS ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7644607415248521}, {"determining": "( Min( Max( FirstVNF_Mem_Server,MDR ) ,RRS ) * Min( ( MDR - CRS ) ,( Max( FirstVNF_Mem_Server,Const ) + FirstVNF_CPU ) ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( CS + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( Min( MUM ,RMSe ) ,DS ) ) )", "obj1": 0.1220472440944882, "obj2": 0.7567053871595312}, {"determining": "Max( ( ( FirstVNF_RAM_Server * AMS ) / FirstVNF_RAM ),( ( Min( Max( FirstVNF_Mem_Server,MDR ) ,AMS ) - FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( ( ( ( MUC - RMSe ) + RRSe ) + RRSe ),MUC ) ) ) ,( ( ( MUC / ( MUR - MUR ) ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.09645669291338582, "obj2": 0.8091991788850409}, {"determining": "Max( ( ( ACS + ( ( MDR * ARS ) / PN ) ) - Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ),Min( ( RRS / FirstVNF_CPU ) ,( ( ( Const - Const ) + FirstVNF_RAM_Server ) * ( MDR + ( ( MDR - Const ) - ( ( ( FirstVNF_Mem + ACS ) / ( RRS + Const ) ) * Const ) ) ) ) ) )", "choosing": "( ( ( MUR / ( ( Max( MUC,( ( MUR + MUC ) / Max( MUR,MLU ) ) ) + DS ) * Max( MUC,DS ) ) ) / RMSe ) / Min( CS ,RCSe ) )", "obj1": 0.1830708661417323, "obj2": 0.6555677041221689}, {"determining": "Max( ( ( ACS + ( ( MDR * ARS ) / PN ) ) - Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ),Min( ( RRS / FirstVNF_CPU ) ,( ( ( Const - Const ) + FirstVNF_RAM_Server ) * ( MDR + ( ( MDR - Const ) - ( ( ( FirstVNF_Mem + ACS ) / ( RRS + Const ) ) * Const ) ) ) ) ) )", "choosing": "( ( ( MUR / ( ( Max( MUC,( ( MUR + MUC ) / Max( MUR,MLU ) ) ) + DS ) * Max( MUC,DS ) ) ) / RMSe ) / Min( CS ,RCSe ) )", "obj1": 0.1830708661417323, "obj2": 0.6555677041221689}, {"determining": "Max( ( ( ACS + ( ( MDR * ARS ) / PN ) ) - Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ),Min( ( RRS / FirstVNF_CPU ) ,( ( ( Const - Const ) + FirstVNF_RAM_Server ) * ( MDR + ( ( MDR - Const ) - ( ( ( FirstVNF_Mem + ACS ) / ( RRS + Const ) ) * Const ) ) ) ) ) )", "choosing": "( ( ( MUR / ( ( Max( MUC,( ( MUR + MUC ) / Max( MUR,MLU ) ) ) + DS ) * Max( MUC,DS ) ) ) / RMSe ) / Min( CS ,RCSe ) )", "obj1": 0.1830708661417323, "obj2": 0.6555677041221689}, {"determining": "Max( ( Min( FirstVNF_RAM ,DDR ) - ( RRS / Max( DDR,MRS ) ) ),Min( ( RRS / FirstVNF_CPU ) ,( ( ( Const - Const ) + FirstVNF_RAM_Server ) * ( MDR + ( ( MDR - Const ) - ( ( ( FirstVNF_Mem + ACS ) / ( RRS + Const ) ) * Const ) ) ) ) ) )", "choosing": "( ( ( MUR / ( ( Max( MUC,( ( MUR - MUR ) + ( MUR + MUC ) ) ) + DS ) * Max( MUC,DS ) ) ) / RMSe ) / Min( CS ,RCSe ) )", "obj1": 0.1830708661417323, "obj2": 0.6555677041221689}, {"determining": "Max( ( ( FirstVNF_RAM_Server * AMS ) / FirstVNF_RAM ),( ( Min( ( DDR - CRS ) ,( ( Const * Max( FirstVNF_Mem_Server,BR ) ) + ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) - FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( ( ( ( MUC - RMSe ) + Max( MUC,MUM ) ) + RRSe ),MUC ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Min( DS ,RCSe ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8596744722857146}, {"determining": "Max( ( Const - PN ),( ( ( Const * ( ( ACS / ARS ) / FirstVNF_Mem ) ) - ( BR / FirstVNF_RAM ) ) / BR ) )", "choosing": "( Max( ( MUM + MUC ),MUC ) / ( MUC + Min( ( MUC + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) - Min( DS ,RCSe ) ) + RRSe ) ) ,DS ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7276091839209987}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( RRS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + MUC ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "Max( ( Const - FirstVNF_RAM_Server ),( FirstVNF_Mem_Server / DDR ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( ( ( ( MUC + ( RRSe * RCSe ) ) / MLU ) * Min( MUR ,DS ) ) + RRSe ) + ( ( CS * MUM ) + Max( MUM,( MUC / ( MUR - MUR ) ) ) ) ) + Min( MUC ,DS ) ) )", "obj1": 0.13582677165354332, "obj2": 0.7376260419142033}, {"determining": "( ( ( CRS * MDR ) - Min( Const ,CRS ) ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + MUC ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "Max( ( ( Min( ( PN + ( FirstVNF_RAM * ( ( ARS / PN ) + FirstVNF_Mem ) ) ) ,FirstVNF_Mem ) * AMS ) / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7644607415248521}, {"determining": "( ( Min( ( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7622036226174012}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( RRS * ( ACS + ( FirstVNF_Mem_Server / RRS ) ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( ( ( ( MUC - RMSe ) + RRSe ) + RRSe ),MUC ) ) ) ,( ( ( MUC - RMSe ) + Min( ( Max( ( RRSe - MUM ),Min( MUR ,DS ) ) + CS ) ,Min( MUC ,DS ) ) ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.08858267716535433, "obj2": 0.8315809670104248}, {"determining": "Max( ( ( BR * Min( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem * ( ( FirstVNF_RAM / BR ) * FirstVNF_Mem_Server ) ) ) ,Max( ( BR + ( Const * ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) ),PN ) ) ) / FirstVNF_RAM ),( ( FirstVNF_RAM_Server + Min( AMS ,CRS ) ) * AMS ) )", "choosing": "( Min( Max( ( Min( MUR ,MUR ) - MUM ),( MUC / Max( ( ( ( MUC - RMSe ) + RRSe ) + RRSe ),MUC ) ) ) ,( ( MUR - MLU ) + MUR ) ) / Min( ( MLU * MUM ) ,Min( MUC ,DS ) ) )", "obj1": 0.08464566929133858, "obj2": 0.8477447492113149}, {"determining": "Max( ( ( BR * Min( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem * ( ( FirstVNF_RAM / BR ) * FirstVNF_Mem_Server ) ) ) ,Max( ( BR + ( Const * ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) ),PN ) ) ) / FirstVNF_RAM ),( ( FirstVNF_RAM_Server + Min( AMS ,CRS ) ) * AMS ) )", "choosing": "( Min( Max( ( Min( MUR ,MUR ) - MUM ),( MUC / Max( ( ( ( MUC - RMSe ) + RRSe ) + RRSe ),MUC ) ) ) ,( ( MUR - MLU ) + MUR ) ) / Min( ( MLU * MUM ) ,Min( MUC ,DS ) ) )", "obj1": 0.08464566929133858, "obj2": 0.8477447492113149}, {"determining": "Max( ( ( BR * Min( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem * ( ( FirstVNF_RAM / BR ) * FirstVNF_Mem_Server ) ) ) ,Max( ( BR + ( Const * ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) ),PN ) ) ) / FirstVNF_RAM ),( ( FirstVNF_RAM_Server + Min( AMS ,CRS ) ) * AMS ) )", "choosing": "( Min( Max( ( Min( MUR ,MUR ) - MUM ),( MUC / Max( ( ( ( MUC - RMSe ) + RRSe ) + RRSe ),MUC ) ) ) ,( ( MUR - MLU ) + MUR ) ) / Min( ( MLU * MUM ) ,Min( MUC ,DS ) ) )", "obj1": 0.08464566929133858, "obj2": 0.8477447492113149}, {"determining": "Max( ( ( BR * Min( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem * ( ( FirstVNF_RAM / BR ) * FirstVNF_Mem_Server ) ) ) ,Max( PN,( BR + ARS ) ) ) ) / FirstVNF_RAM ),( Min( ( PN + ( FirstVNF_RAM * ( ( ARS / PN ) + FirstVNF_Mem ) ) ) ,FirstVNF_Mem ) * AMS ) )", "choosing": "( Min( Max( ( ( MUR * MUR ) - MUM ),( MUC / Max( ( ( ( MUC - RMSe ) + RRSe ) + RRSe ),MUC ) ) ) ,( ( MUR - MLU ) + MUR ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.08464566929133858, "obj2": 0.8477447492113149}, {"determining": "Max( ( ( FirstVNF_RAM + FirstVNF_RAM ) - PN ),( ( ( Const * ( ( ACS + ARS ) / FirstVNF_Mem ) ) - ( BR / FirstVNF_RAM ) ) / BR ) )", "choosing": "( Max( ( MUM + MUC ),MUC ) / ( MUC + Min( ( MUC + ( ( Min( ( MUC + MUC ) ,( RRSe + RRSe ) ) - Min( DS ,RCSe ) ) + Max( ( MLU * RMSe ),MUC ) ) ) ,DS ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7276091839209987}, {"determining": "Max( ( ( Min( ( PN + ( BR / FirstVNF_RAM ) ) ,FirstVNF_Mem ) * AMS ) / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - ( RRSe - MUM ) ),( MUC / ( CS * CS ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7644607415248521}, {"determining": "Max( ( ( Min( ( PN + ( BR / FirstVNF_RAM ) ) ,FirstVNF_Mem ) * AMS ) / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) ,( ( ( Max( RCSe,Max( ( CS + MUC ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7622036226174012}, {"determining": "Max( ( ( Min( ( PN + ( FirstVNF_RAM * ( ( ARS / PN ) + ( CRS - FirstVNF_RAM_Server ) ) ) ) ,FirstVNF_Mem ) * AMS ) * FirstVNF_RAM ),( Min( AMS ,( DDR - CRS ) ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS / CS ) ) ) ,( ( ( MUC - RMSe ) + ( ( MUM - CS ) + DS ) ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7644607415248521}, {"determining": "( ( Min( Const ,( AMS / ( ( ACS + ( AMS / RRS ) ) + RRS ) ) ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( ( AMS * PN ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( ( ( ( MUC + ( RRSe * RCSe ) ) / MLU ) * Min( MUR ,DS ) ) + Min( MUC ,Max( Max( DS,MUR ),Min( ( DS - MUM ) ,( RMSe + CS ) ) ) ) ) + ( ( CS * MUM ) + Max( MUM,MUC ) ) ) + Min( MUC ,DS ) ) )", "obj1": 0.15748031496062992, "obj2": 0.6930167205017211}, {"determining": "( ( Min( Const ,( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ) + Max( ( ( ( FirstVNF_Mem + ACS ) / ( RRS + Const ) ) * Const ),FirstVNF_RAM ) ) - ( ( AMS * PN ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + MUC ),Min( Min( CS ,DS ) ,( MLU + CS ) ) ) / ( MUC + Min( ( MUC + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) - Min( DS ,RCSe ) ) + RRSe ) ) ,DS ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7276091839209987}, {"determining": "( ( ( ( FirstVNF_RAM - RRS ) / MRS ) / RRS ) * Min( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) + FirstVNF_CPU ) ,( MDR - CRS ) ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( CS + Max( MUR,RRSe ) ) + RRSe ) ) / ( Min( CS ,RCSe ) + RRSe ) )", "obj1": 0.1220472440944882, "obj2": 0.7567053871595312}, {"determining": "( ( Min( ( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) + ( ( AMS * PN ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( ( MUC / ( MUR - MUR ) ) ,( MUR * MUC ) ) ) ) ) ) / Min( CS ,DS ) )", "obj1": 0.11023622047244094, "obj2": 0.7794742988899616}, {"determining": "( ( ( FirstVNF_CPU_Server * ( RRS * DDR ) ) * Max( Max( BR,FirstVNF_CPU ),ARS ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUM + MUC ),MUC ) / ( MUC + Min( ( MUC + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) - Min( DS ,RCSe ) ) + RRSe ) ) ,DS ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7276091839209987}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( RRS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7644607415248521}, {"determining": "Max( ( ( Min( ( FirstVNF_Mem + ( FirstVNF_RAM * ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) + FirstVNF_Mem ) ) ) ,FirstVNF_Mem ) * AMS ) / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS / CS ) ) ) ,( ( ( ( MUC - MUM ) + Min( RRSe ,RCSe ) ) / ( CS / RCSe ) ) / ( MUC + Min( ( MUC + DS ) ,DS ) ) ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7898236536834559}, {"determining": "Max( ( ( ( Const * ( ( RRS - MDR ) - BR ) ) - ( BR / FirstVNF_RAM ) ) / BR ),AMS )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ),( MUR / Min( ( RCSe * MLU ) ,MUR ) ) ) ) ) / ( MUR * MUC ) )", "obj1": 0.18503937007874016, "obj2": 0.6547046254764682}, {"determining": "( ( Min( Const ,( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( ( ( Const * ( ( RRS - MDR ) - BR ) ) - ( BR / FirstVNF_RAM ) ) / BR ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( ( ( ( MUC + ( RRSe * RCSe ) ) / MLU ) * Min( Max( ( CS + MUC ),DS ) ,DS ) ) + RRSe ) + ( ( CS * MUM ) + Max( MUM,MUC ) ) ) + Min( MUC ,DS ) ) )", "obj1": 0.15354330708661418, "obj2": 0.7114367936177695}, {"determining": "( ( Min( Const ,( Const / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + Max( Max( RRS,Const ),FirstVNF_Mem_Server ) ) ) ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( ( AMS * PN ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( ( ( ( MUC + ( RRSe * RCSe ) ) / MLU ) * Min( MUR ,DS ) ) + RRSe ) + ( ( CS * MUM ) + ( ( CS * ( ( RCSe / MLU ) + RRSe ) ) + ( ( ( MUR / RRSe ) - ( CS * MLU ) ) * MLU ) ) ) ) + Min( DS ,DS ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7106646552611309}, {"determining": "( ( Min( Const ,( AMS / Min( MDR ,Max( ( MDR * ARS ),ACS ) ) ) ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( RCSe,( RMSe - ( Max( ( RCSe + MUM ),DS ) - MUM ) ) ) + ( RMSe / Min( ( Min( Max( RCSe,MLU ) ,CS ) + CS ) ,CS ) ) ) - Min( RMSe ,Max( CS,RCSe ) ) ) / ( ( ( ( MUC * Min( MUR ,DS ) ) / RRSe ) + ( ( CS * MUM ) + Max( MUM,MUC ) ) ) + Min( MUC ,DS ) ) )", "obj1": 0.1732283464566929, "obj2": 0.6813589143934243}, {"determining": "Max( ( ( ACS + ( ( MDR * ARS ) / PN ) ) - Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ),Min( ( RRS / FirstVNF_CPU ) ,( ( ( Const - Const ) + FirstVNF_RAM_Server ) * ( MDR + ( ( MDR - Const ) - ( ( ( FirstVNF_Mem + ACS ) / ( RRS + Const ) ) * Const ) ) ) ) ) )", "choosing": "( ( ( MUR / ( ( Max( MUC,( ( MUR + MUC ) / Max( MUR,MLU ) ) ) + DS ) * Max( MUC,DS ) ) ) / RMSe ) / Min( CS ,RCSe ) )", "obj1": 0.1830708661417323, "obj2": 0.6555677041221689}, {"determining": "Max( ( Const - PN ),Max( ( ( BR / FirstVNF_RAM ) - ( Const * ( Max( ( FirstVNF_Mem_Server / ( FirstVNF_CPU * FirstVNF_CPU ) ),FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) ),BR ) )", "choosing": "( Max( ( MUM + MUC ),MUC ) / ( MUC + Min( ( MUC + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) - Min( DS ,RCSe ) ) + RRSe ) ) ,DS ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7276091839209987}, {"determining": "Max( ( ( Const * Max( FirstVNF_Mem_Server,MDR ) ) + ( FirstVNF_RAM_Server / FirstVNF_RAM ) ),Max( ( Const - PN ),( ( ( Const * ( ( ACS / ARS ) / FirstVNF_Mem ) ) - ( BR / FirstVNF_RAM ) ) / BR ) ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / Max( CS,MUR ) ) ,Min( MUM ,( RMSe * MLU ) ) ),RMSe ) ) ) / ( MUR * MUC ) )", "obj1": 0.19094488188976377, "obj2": 0.6507262572333945}, {"determining": "Max( ( PN - Const ),( ( ( Min( RRS ,( ( MDR * RRS ) * FirstVNF_CPU_Server ) ) * ( ( ( ACS / Const ) / ARS ) - FirstVNF_Mem ) ) - ( CRS + MRS ) ) / BR ) )", "choosing": "( Min( Max( Max( ( MUC * MUR ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + CS ),Min( RMSe ,MUR ) ) ) - RMSe ) + ( Min( RRSe ,MLU ) * CS ) ) + RRSe ) ) / Min( ( ( ( RRSe - MUM ) / Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "Max( ( ( ACS + ( ( MDR * ARS ) / PN ) ) - Min( FirstVNF_RAM ,MDR ) ),( RRS * FirstVNF_RAM ) )", "choosing": "( ( ( MUR / ( ( Max( MUC,( ( MUM - RMSe ) / Max( MUR,MLU ) ) ) + DS ) * Max( DS,MUC ) ) ) / RMSe ) / Min( MUM ,RCSe ) )", "obj1": 0.1830708661417323, "obj2": 0.6555677041221689}, {"determining": "( ( Max( Max( BR,DDR ),ARS ) * ( FirstVNF_CPU_Server * ( Min( FirstVNF_CPU ,MDR ) * DDR ) ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) - FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( DS,( CS + MUC ) ) ) - RMSe ) + RRSe ) + MUM ) ) / Min( Min( MLU ,CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "( ( Min( Const ,( AMS / ( ( ( ( AMS * PN ) - ( CRS + FirstVNF_Mem_Server ) ) + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( ( AMS * PN ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( ( ( ( MUC + ( RRSe * RCSe ) ) / MLU ) * Min( RRSe ,DS ) ) + RRSe ) + ( ( CS * MUM ) + Max( MUM,MUC ) ) ) + Min( MUC ,DS ) ) )", "obj1": 0.16338582677165353, "obj2": 0.6911330297334624}, {"determining": "Max( ARS,Min( ( ( ( PN + FirstVNF_Mem ) - BR ) - FirstVNF_RAM_Server ) ,RRS ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),Max( ( CS / MUR ),Max( RMSe,CS ) ) ) ) ) / Min( CS ,DS ) )", "obj1": 0.11023622047244094, "obj2": 0.7794742988899616}, {"determining": "Max( ( ( FirstVNF_CPU_Server * ( RRS * DDR ) ) * Max( Max( BR,FirstVNF_CPU ),ARS ) ),( ( ( Const * ( ( ACS / ARS ) / FirstVNF_Mem ) ) - ( BR / FirstVNF_RAM ) ) / BR ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ),RMSe ) ) ) / ( MUR * MUC ) )", "obj1": 0.19291338582677164, "obj2": 0.6494403064677481}, {"determining": "Max( ( ( FirstVNF_RAM_Server - AMS ) / FirstVNF_RAM ),( ( Max( FirstVNF_RAM_Server,( RRS / Max( MRS,( Max( FirstVNF_RAM_Server,RRS ) + Const ) ) ) ) - FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( ( RRSe + ( ( MUC - RMSe ) + RRSe ) ),MUC ) ) ) ,( ( ( MUC - RMSe ) + Min( ( ( MUM / ( RMSe * MUC ) ) * Min( RCSe ,( MUM / MUC ) ) ) ,( MUM - MUC ) ) ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8137151835735544}, {"determining": "( ( Min( Const ,( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ) + Max( ( ( ( FirstVNF_Mem + ACS ) / ( RRS + Const ) ) * Const ),FirstVNF_RAM ) ) - ( ( AMS * PN ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + MUM ),CS ) / ( ( ( ( ( ( MUC + ( RRSe * RCSe ) ) / MLU ) * Min( MUR ,DS ) ) + RRSe ) + ( ( CS * MUM ) + Max( MUM,MUC ) ) ) + Min( MUC ,DS ) ) )", "obj1": 0.16535433070866143, "obj2": 0.6874211889351611}, {"determining": "Max( ( Const - PN ),( ( ( Const * ( ( ACS / ARS ) / FirstVNF_Mem ) ) - ( BR / FirstVNF_RAM ) ) / BR ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + MUC ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "Max( ( ( Const * Max( FirstVNF_Mem_Server,MDR ) ) + ( FirstVNF_RAM_Server / ( PN / RRS ) ) ),ACS )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUR * ( CS / RCSe ) ) ),RMSe ) ) ) / ( MUR * MUC ) )", "obj1": 0.19488188976377951, "obj2": 0.6468325866119642}, {"determining": "Max( ( Min( AMS ,( FirstVNF_CPU_Server / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) + ( FirstVNF_RAM_Server / FirstVNF_RAM ) ),AMS )", "choosing": "( ( MUR + MUC ) / ( ( RCSe / CS ) + ( MUR * Max( RRSe,CS ) ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6535108597076144}, {"determining": "Max( ( ( Min( ( PN + ( BR / ( BR + PN ) ) ) ,FirstVNF_Mem ) * AMS ) / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( ( MUC - ( RRSe - MUM ) ) + RRSe ) + RRSe ) ) ,( ( ( Max( RCSe,Max( ( CS + MUC ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + ( ( RRSe + ( DS - RMSe ) ) + ( ( RMSe / DS ) * DS ) ) ) ,Min( MUC ,DS ) ) )", "obj1": 0.12401574803149606, "obj2": 0.7559134435260119}, {"determining": "Max( Max( ( ( Max( BR,CRS ) - PN ) - ( Const * ( Max( ( FirstVNF_Mem_Server / ( FirstVNF_Mem_Server * ARS ) ),FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) ),BR ),( Const - PN ) )", "choosing": "( Min( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( ( MUC - ( RRSe - MUM ) ) + RRSe ) + RRSe ) ) ,( ( ( Max( RCSe,Max( ( CS + MUC ),DS ) ) - RMSe ) + RRSe ) + ( Min( ( ( ( CS * MUM ) / DS ) + MUM ) ,MUC ) - ( RCSe * ( ( MUM + RMSe ) - MLU ) ) ) ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7549304841270637}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( RRS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7644607415248521}, {"determining": "Max( ( Const - PN ),Max( ( ( BR / FirstVNF_RAM ) - ( Const * ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) * Min( ( MDR / FirstVNF_RAM_Server ) ,BR ) ) ) ),CRS ) )", "choosing": "( Max( ( MUM + MUC ),Min( Min( CS ,DS ) ,( MLU + CS ) ) ) / ( MUC + Min( ( MUC + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) - Min( DS ,RCSe ) ) + RRSe ) ) ,DS ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7276091839209987}, {"determining": "( ( Min( Const ,( AMS / ( ( MDR * FirstVNF_Mem_Server ) + RRS ) ) ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( ( AMS / PN ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + MUC ),Min( ( CS - DS ) ,( MLU + CS ) ) ) / ( MUC + Min( ( MUC + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) - Min( DS ,RCSe ) ) + Min( DS ,( CS - ( RRSe + CS ) ) ) ) ) ,DS ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7276091839209987}, {"determining": "( ( ACS + AMS ) - Min( Min( ( Min( PN ,MDR ) / FirstVNF_CPU_Server ) ,CRS ) ,Max( ARS,( Min( ( DDR - Max( ( PN - FirstVNF_CPU ),Min( BR ,MDR ) ) ) ,AMS ) - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) ,( ( ( Max( RCSe,Max( ( CS + MUC ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( Min( ( ( ( MLU + DS ) * MUC ) - Min( DS ,MUR ) ) ,DS ) ,( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + RMSe ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7622036226174012}, {"determining": "Max( ARS,Min( ( Const - Min( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - CRS ) ,FirstVNF_CPU ) ) ,( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * ( ( ( ( RRS - FirstVNF_RAM ) - Const ) - ( Const * ( ( BR + ACS ) / ( RRS + Const ) ) ) ) + MDR ) ) ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( MUC,( ( ( MUR / Min( MLU ,RCSe ) ) * MUR ) + RMSe ) ) ) ) / Min( ( ( ( CS * ( MUM + ( ( MLU / MUM ) + ( RMSe * MLU ) ) ) ) + RRSe ) - ( RRSe + Max( MUC,MLU ) ) ) ,DS ) )", "obj1": 0.08267716535433071, "obj2": 0.8562230139930868}, {"determining": "( ( Min( ( ( FirstVNF_CPU / MDR ) / MRS ) ,PN ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( ( AMS * FirstVNF_Mem ) - ( FirstVNF_Mem_Server + CRS ) ) )", "choosing": "( Max( ( MUC + MUC ),RRSe ) / ( ( ( ( ( ( MUC + ( RRSe * RCSe ) ) / MLU ) * Max( MUC,MUC ) ) + RRSe ) + ( Max( RCSe,Max( ( CS + MUC ),DS ) ) - RMSe ) ) + Min( MUC ,DS ) ) )", "obj1": 0.1437007874015748, "obj2": 0.7276184734422253}, {"determining": "( ( ACS / ARS ) - ( Min( FirstVNF_Mem_Server ,CRS ) - FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7644607415248521}, {"determining": "( ( Min( Const ,( AMS / ( ( ( ( AMS * PN ) - ( CRS + FirstVNF_Mem_Server ) ) + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( ( AMS * PN ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( ( ( ( MUC + ( RRSe * RCSe ) ) / MLU ) * Min( RRSe ,DS ) ) + RRSe ) + ( ( CS * MUM ) + Max( MUM,MUC ) ) ) + Min( MUC ,DS ) ) )", "obj1": 0.16338582677165353, "obj2": 0.6911330297334624}, {"determining": "( ( Min( Const ,( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( ( AMS * PN ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7622036226174012}, {"determining": "( Max( MDR,MDR ) - ( PN * RRS ) )", "choosing": "( Min( Max( ( Min( Min( Min( ( RRSe * MUR ) ,( RCSe + RCSe ) ) ,MUC ) ,MLU ) + Min( ( CS * MUM ) ,Max( RMSe,( ( RMSe - CS ) - MUR ) ) ) ),MUC ) ,Max( ( ( MUR * MUC ) + MUM ),( MUC / Max( ( ( ( MUC - RMSe ) + RRSe ) + RRSe ),MUC ) ) ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.0984251968503937, "obj2": 0.8082963299208445}], "13": [{"determining": "Min( ( RRS - DDR ) ,Min( FirstVNF_RAM_Server ,AMS ) )", "choosing": "( ( MLU + ( RCSe + MUM ) ) / ( CS * ( RCSe - ( RRSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,( ( BR * FirstVNF_Mem_Server ) - Min( MDR ,FirstVNF_RAM ) ) ) - ( CRS * MDR ) ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + MUM ),Max( ( RMSe - Max( Min( ( CS - RCSe ) ,CS ),RRSe ) ),RCSe ) ) / ( ( ( ( MUC - RRSe ) + RMSe ) + ( ( CS * MUC ) + Max( MUM,MUC ) ) ) + Min( Max( CS,RCSe ) ,DS ) ) )", "obj1": 0.17716535433070865, "obj2": 0.6686947769402188}, {"determining": "Min( Min( Max( Max( ARS,AMS ),Max( PN,PN ) ) ,Min( Min( Const ,PN ) ,CRS ) ) ,Min( ( ( ( Const - ( FirstVNF_Mem * AMS ) ) / MRS ) / ( BR * ( Const / FirstVNF_Mem_Server ) ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( Min( Max( MUR,DS ) ,( ( MUR - MUM ) - RMSe ) ) ,Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ),RMSe ) ) ) / ( MUR * RMSe ) )", "obj1": 0.20078740157480315, "obj2": 0.6391437014340974}, {"determining": "Max( ARS,Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( ( MUC / ( MUR - MUR ) ) ,( MUR * MUC ) ) ) ) ) ) / Min( CS ,DS ) )", "obj1": 0.11023622047244094, "obj2": 0.7794742988899616}, {"determining": "Max( ( ( Const * Max( ( FirstVNF_RAM_Server + FirstVNF_RAM ),MDR ) ) + ( FirstVNF_RAM_Server / FirstVNF_RAM ) ),AMS )", "choosing": "( ( DS + ( ( MUC * Min( RRSe ,MUR ) ) - RMSe ) ) / ( MUR * MUC ) )", "obj1": 0.20078740157480315, "obj2": 0.6391437014340974}, {"determining": "Max( ( Const - PN ),( BR / ( ( Const * ( ( RRS - MDR ) - BR ) ) - ( BR / ( Const * FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( MUM / ( MUR * ( ( RRSe / MUM ) * MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + MUC ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( Max( RRSe,MUM ),Max( CS,MUR ) ) + CS ) ,Min( DS ,MUC ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "Max( ( Const - PN ),( ( ( Const * ( ( ACS / ( RRS / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) / FirstVNF_Mem ) ) - ( BR / FirstVNF_RAM ) ) / Max( ( ( ACS * ( FirstVNF_Mem_Server + ARS ) ) / RRS ),Max( DDR,Max( ( ARS + CRS ),ARS ) ) ) ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( RRSe / ( MUR - MUR ) ) ) ,( ( ( Max( ( RRSe - MLU ),Max( ( MUC + MUR ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( MUM - RRSe ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "Max( ( ( FirstVNF_CPU_Server * ( RRS * DDR ) ) * Max( Max( BR,FirstVNF_CPU ),ARS ) ),( ( ( Const * ( ( ACS / ARS ) / FirstVNF_Mem ) ) - ( BR / FirstVNF_RAM ) ) / BR ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + RRSe ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "( ( ( FirstVNF_CPU_Server * ( RRS * DDR ) ) * Max( Max( BR,FirstVNF_CPU ),ARS ) ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( DS - MUC ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe / MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "( ( Min( ( AMS / ( FirstVNF_CPU + ACS ) ) ,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) + ( ( AMS * PN ) - ( ARS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( RCSe - DS ) * RRSe ) / ( CS * ( Max( MUM,( DS / DS ) ) + MUM ) ) ) + MUM ),RRSe ) / ( ( ( ( ( ( MUC + ( RRSe * RCSe ) ) / MLU ) * Min( MUR ,DS ) ) + RRSe ) + ( ( CS * MUM ) + Max( MUM,( MUC / ( MUR - MUR ) ) ) ) ) + Min( MUC ,RMSe ) ) )", "obj1": 0.1279527559055118, "obj2": 0.7464478523929874}, {"determining": "( ( Min( ( ( DDR * FirstVNF_Mem ) / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) + ( ( AMS * PN ) - ( FirstVNF_Mem_Server + CRS ) ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( MUM ,( DS - MUM ) ),( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( ( MUC / ( MUR + MUR ) ) ,( MUR * MUC ) ) ) ) ) ) / Min( CS ,DS ) )", "obj1": 0.11023622047244094, "obj2": 0.7794742988899616}, {"determining": "Max( ( ( FirstVNF_RAM_Server * AMS ) / FirstVNF_RAM ),( ( Min( ( PN - Min( PN ,( Const - FirstVNF_CPU_Server ) ) ) ,AMS ) - FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( ( ( ( CS - RMSe ) + RRSe ) + RRSe ),MUC ) ) ) ,( ( ( MUC - RMSe ) + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) / Min( DS ,RCSe ) ) + RRSe ) ) + RRSe ) ) / Min( ( MLU + ( Max( CS,RCSe ) - Max( RRSe,( Max( DS,RCSe ) + RCSe ) ) ) ) ,Min( MUC ,DS ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8137151835735544}, {"determining": "Max( ( FirstVNF_CPU - Max( ( RRS - CRS ),Const ) ),( ( PN / RRS ) * ( AMS + ACS ) ) )", "choosing": "( ( ( ( RRSe - CS ) * ( MUC / RCSe ) ) + ( RCSe / CS ) ) / Min( CS ,DS ) )", "obj1": 0.08267716535433071, "obj2": 0.8562230139930868}, {"determining": "Max( ( ( AMS * FirstVNF_RAM_Server ) / FirstVNF_RAM ),( ( Min( ( DDR - CRS ) ,( BR + FirstVNF_Mem_Server ) ) - RRS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( ( ( ( MUR * MUC ) - MUM ) - ( MLU - ( ( ( DS + CS ) + Max( MUR,RCSe ) ) + Min( RCSe ,( DS - ( MUC - MLU ) ) ) ) ) ) ,Max( ( MUM + MUC ),MUC ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.0984251968503937, "obj2": 0.8082963299208445}, {"determining": "Max( ( Min( BR ,ACS ) / FirstVNF_RAM ),( ( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUM + MUC ),MUC ) / ( MUC + Min( ( MUC + ( ( ( MLU + ( MUC + RRSe ) ) - Min( DS ,RCSe ) ) - RRSe ) ) ,DS ) ) )", "obj1": 0.13385826771653545, "obj2": 0.7440026758859773}, {"determining": "( Min( Max( FirstVNF_Mem_Server,MDR ) ,RRS ) * Min( ( MDR - CRS ) ,( Max( FirstVNF_Mem_Server,Const ) + FirstVNF_CPU ) ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( CS + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( Min( MUM ,RMSe ) ,DS ) ) )", "obj1": 0.1220472440944882, "obj2": 0.7567053871595312}, {"determining": "Max( ( ( FirstVNF_RAM_Server * AMS ) / FirstVNF_RAM ),( ( Min( Max( FirstVNF_Mem_Server,MDR ) ,AMS ) - FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( ( ( ( MUC - RMSe ) + RRSe ) + RRSe ),MUC ) ) ) ,( ( ( MUC / ( MUR - MUR ) ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.09645669291338582, "obj2": 0.8091991788850409}, {"determining": "Max( ( ( ACS + ( ( MDR * ARS ) / PN ) ) - Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ),Min( ( RRS / FirstVNF_CPU ) ,( ( ( Const - Const ) + FirstVNF_RAM_Server ) * ( MDR + ( ( MDR - Const ) - ( ( ( FirstVNF_Mem + ACS ) / ( RRS + Const ) ) * Const ) ) ) ) ) )", "choosing": "( ( ( MUR / ( ( Max( MUC,( ( MUR + MUC ) / Max( MUR,MLU ) ) ) + DS ) * Max( MUC,DS ) ) ) / RMSe ) / Min( CS ,RCSe ) )", "obj1": 0.1830708661417323, "obj2": 0.6555677041221689}, {"determining": "Max( ( ( ACS + ( ( MDR * ARS ) / PN ) ) - Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ),Min( ( RRS / FirstVNF_CPU ) ,( ( ( Const - Const ) + FirstVNF_RAM_Server ) * ( MDR + ( ( MDR - Const ) - ( ( ( FirstVNF_Mem + ACS ) / ( RRS + Const ) ) * Const ) ) ) ) ) )", "choosing": "( ( ( MUR / ( ( Max( MUC,( ( MUR + MUC ) / Max( MUR,MLU ) ) ) + DS ) * Max( MUC,DS ) ) ) / RMSe ) / Min( CS ,RCSe ) )", "obj1": 0.1830708661417323, "obj2": 0.6555677041221689}, {"determining": "Max( ( ( ACS + ( ( MDR * ARS ) / PN ) ) - Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ),Min( ( RRS / FirstVNF_CPU ) ,( ( ( Const - Const ) + FirstVNF_RAM_Server ) * ( MDR + ( ( MDR - Const ) - ( ( ( FirstVNF_Mem + ACS ) / ( RRS + Const ) ) * Const ) ) ) ) ) )", "choosing": "( ( ( MUR / ( ( Max( MUC,( ( MUR + MUC ) / Max( MUR,MLU ) ) ) + DS ) * Max( MUC,DS ) ) ) / RMSe ) / Min( CS ,RCSe ) )", "obj1": 0.1830708661417323, "obj2": 0.6555677041221689}, {"determining": "Max( ( Min( FirstVNF_RAM ,DDR ) - ( RRS / Max( DDR,MRS ) ) ),Min( ( RRS / FirstVNF_CPU ) ,( ( ( Const - Const ) + FirstVNF_RAM_Server ) * ( MDR + ( ( MDR - Const ) - ( ( ( FirstVNF_Mem + ACS ) / ( RRS + Const ) ) * Const ) ) ) ) ) )", "choosing": "( ( ( MUR / ( ( Max( MUC,( ( MUR - MUR ) + ( MUR + MUC ) ) ) + DS ) * Max( MUC,DS ) ) ) / RMSe ) / Min( CS ,RCSe ) )", "obj1": 0.1830708661417323, "obj2": 0.6555677041221689}, {"determining": "Max( ( ( FirstVNF_RAM_Server * AMS ) / FirstVNF_RAM ),( ( Min( ( DDR - CRS ) ,( ( Const * Max( FirstVNF_Mem_Server,BR ) ) + ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) - FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( ( ( ( MUC - RMSe ) + Max( MUC,MUM ) ) + RRSe ),MUC ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Min( DS ,RCSe ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8596744722857146}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( RRS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + MUC ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "Max( ( Const - FirstVNF_RAM_Server ),( FirstVNF_Mem_Server / DDR ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( ( ( ( MUC + ( RRSe * RCSe ) ) / MLU ) * Min( MUR ,DS ) ) + RRSe ) + ( ( CS * MUM ) + Max( MUM,( MUC / ( MUR - MUR ) ) ) ) ) + Min( MUC ,DS ) ) )", "obj1": 0.13582677165354332, "obj2": 0.7376260419142033}, {"determining": "( ( ( CRS * MDR ) - Min( Const ,CRS ) ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + MUC ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( RRS * ( ACS + ( FirstVNF_Mem_Server / RRS ) ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( ( ( ( MUC - RMSe ) + RRSe ) + RRSe ),MUC ) ) ) ,( ( ( MUC - RMSe ) + Min( ( Max( ( RRSe - MUM ),Min( MUR ,DS ) ) + CS ) ,Min( MUC ,DS ) ) ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.08858267716535433, "obj2": 0.8315809670104248}, {"determining": "Max( ( ( BR * Min( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem * ( ( FirstVNF_RAM / BR ) * FirstVNF_Mem_Server ) ) ) ,Max( ( BR + ( Const * ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) ),PN ) ) ) / FirstVNF_RAM ),( ( FirstVNF_RAM_Server + Min( AMS ,CRS ) ) * AMS ) )", "choosing": "( Min( Max( ( Min( MUR ,MUR ) - MUM ),( MUC / Max( ( ( ( MUC - RMSe ) + RRSe ) + RRSe ),MUC ) ) ) ,( ( MUR - MLU ) + MUR ) ) / Min( ( MLU * MUM ) ,Min( MUC ,DS ) ) )", "obj1": 0.08464566929133858, "obj2": 0.8477447492113149}, {"determining": "Max( ( ( BR * Min( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem * ( ( FirstVNF_RAM / BR ) * FirstVNF_Mem_Server ) ) ) ,Max( ( BR + ( Const * ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) ),PN ) ) ) / FirstVNF_RAM ),( ( FirstVNF_RAM_Server + Min( AMS ,CRS ) ) * AMS ) )", "choosing": "( Min( Max( ( Min( MUR ,MUR ) - MUM ),( MUC / Max( ( ( ( MUC - RMSe ) + RRSe ) + RRSe ),MUC ) ) ) ,( ( MUR - MLU ) + MUR ) ) / Min( ( MLU * MUM ) ,Min( MUC ,DS ) ) )", "obj1": 0.08464566929133858, "obj2": 0.8477447492113149}, {"determining": "Max( ( ( BR * Min( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem * ( ( FirstVNF_RAM / BR ) * FirstVNF_Mem_Server ) ) ) ,Max( ( BR + ( Const * ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) ),PN ) ) ) / FirstVNF_RAM ),( ( FirstVNF_RAM_Server + Min( AMS ,CRS ) ) * AMS ) )", "choosing": "( Min( Max( ( Min( MUR ,MUR ) - MUM ),( MUC / Max( ( ( ( MUC - RMSe ) + RRSe ) + RRSe ),MUC ) ) ) ,( ( MUR - MLU ) + MUR ) ) / Min( ( MLU * MUM ) ,Min( MUC ,DS ) ) )", "obj1": 0.08464566929133858, "obj2": 0.8477447492113149}, {"determining": "Max( ( ( BR * Min( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem * ( ( FirstVNF_RAM / BR ) * FirstVNF_Mem_Server ) ) ) ,Max( PN,( BR + ARS ) ) ) ) / FirstVNF_RAM ),( Min( ( PN + ( FirstVNF_RAM * ( ( ARS / PN ) + FirstVNF_Mem ) ) ) ,FirstVNF_Mem ) * AMS ) )", "choosing": "( Min( Max( ( ( MUR * MUR ) - MUM ),( MUC / Max( ( ( ( MUC - RMSe ) + RRSe ) + RRSe ),MUC ) ) ) ,( ( MUR - MLU ) + MUR ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.08464566929133858, "obj2": 0.8477447492113149}, {"determining": "( ( Min( Const ,( AMS / ( ( ACS + ( AMS / RRS ) ) + RRS ) ) ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( ( AMS * PN ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( ( ( ( MUC + ( RRSe * RCSe ) ) / MLU ) * Min( MUR ,DS ) ) + Min( MUC ,Max( Max( DS,MUR ),Min( ( DS - MUM ) ,( RMSe + CS ) ) ) ) ) + ( ( CS * MUM ) + Max( MUM,MUC ) ) ) + Min( MUC ,DS ) ) )", "obj1": 0.15748031496062992, "obj2": 0.6930167205017211}, {"determining": "( ( ( ( FirstVNF_RAM - RRS ) / MRS ) / RRS ) * Min( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) + FirstVNF_CPU ) ,( MDR - CRS ) ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( CS + Max( MUR,RRSe ) ) + RRSe ) ) / ( Min( CS ,RCSe ) + RRSe ) )", "obj1": 0.1220472440944882, "obj2": 0.7567053871595312}, {"determining": "( ( Min( ( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) + ( ( AMS * PN ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( ( MUC / ( MUR - MUR ) ) ,( MUR * MUC ) ) ) ) ) ) / Min( CS ,DS ) )", "obj1": 0.11023622047244094, "obj2": 0.7794742988899616}, {"determining": "Max( ( ( Min( ( FirstVNF_Mem + ( FirstVNF_RAM * ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) + FirstVNF_Mem ) ) ) ,FirstVNF_Mem ) * AMS ) / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS / CS ) ) ) ,( ( ( ( MUC - MUM ) + Min( RRSe ,RCSe ) ) / ( CS / RCSe ) ) / ( MUC + Min( ( MUC + DS ) ,DS ) ) ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7898236536834559}, {"determining": "Max( ( ( ( Const * ( ( RRS - MDR ) - BR ) ) - ( BR / FirstVNF_RAM ) ) / BR ),AMS )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ),( MUR / Min( ( RCSe * MLU ) ,MUR ) ) ) ) ) / ( MUR * MUC ) )", "obj1": 0.18503937007874016, "obj2": 0.6547046254764682}, {"determining": "( ( Min( Const ,( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( ( ( Const * ( ( RRS - MDR ) - BR ) ) - ( BR / FirstVNF_RAM ) ) / BR ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( ( ( ( MUC + ( RRSe * RCSe ) ) / MLU ) * Min( Max( ( CS + MUC ),DS ) ,DS ) ) + RRSe ) + ( ( CS * MUM ) + Max( MUM,MUC ) ) ) + Min( MUC ,DS ) ) )", "obj1": 0.15354330708661418, "obj2": 0.7114367936177695}, {"determining": "( ( Min( Const ,( AMS / Min( MDR ,Max( ( MDR * ARS ),ACS ) ) ) ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( RCSe,( RMSe - ( Max( ( RCSe + MUM ),DS ) - MUM ) ) ) + ( RMSe / Min( ( Min( Max( RCSe,MLU ) ,CS ) + CS ) ,CS ) ) ) - Min( RMSe ,Max( CS,RCSe ) ) ) / ( ( ( ( MUC * Min( MUR ,DS ) ) / RRSe ) + ( ( CS * MUM ) + Max( MUM,MUC ) ) ) + Min( MUC ,DS ) ) )", "obj1": 0.1732283464566929, "obj2": 0.6813589143934243}, {"determining": "Max( ( ( ACS + ( ( MDR * ARS ) / PN ) ) - Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ),Min( ( RRS / FirstVNF_CPU ) ,( ( ( Const - Const ) + FirstVNF_RAM_Server ) * ( MDR + ( ( MDR - Const ) - ( ( ( FirstVNF_Mem + ACS ) / ( RRS + Const ) ) * Const ) ) ) ) ) )", "choosing": "( ( ( MUR / ( ( Max( MUC,( ( MUR + MUC ) / Max( MUR,MLU ) ) ) + DS ) * Max( MUC,DS ) ) ) / RMSe ) / Min( CS ,RCSe ) )", "obj1": 0.1830708661417323, "obj2": 0.6555677041221689}, {"determining": "Max( ( PN - Const ),( ( ( Min( RRS ,( ( MDR * RRS ) * FirstVNF_CPU_Server ) ) * ( ( ( ACS / Const ) / ARS ) - FirstVNF_Mem ) ) - ( CRS + MRS ) ) / BR ) )", "choosing": "( Min( Max( Max( ( MUC * MUR ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + CS ),Min( RMSe ,MUR ) ) ) - RMSe ) + ( Min( RRSe ,MLU ) * CS ) ) + RRSe ) ) / Min( ( ( ( RRSe - MUM ) / Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "Max( ( ( ACS + ( ( MDR * ARS ) / PN ) ) - Min( FirstVNF_RAM ,MDR ) ),( RRS * FirstVNF_RAM ) )", "choosing": "( ( ( MUR / ( ( Max( MUC,( ( MUM - RMSe ) / Max( MUR,MLU ) ) ) + DS ) * Max( DS,MUC ) ) ) / RMSe ) / Min( MUM ,RCSe ) )", "obj1": 0.1830708661417323, "obj2": 0.6555677041221689}, {"determining": "( ( Max( Max( BR,DDR ),ARS ) * ( FirstVNF_CPU_Server * ( Min( FirstVNF_CPU ,MDR ) * DDR ) ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) - FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( DS,( CS + MUC ) ) ) - RMSe ) + RRSe ) + MUM ) ) / Min( Min( MLU ,CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "Max( ARS,Min( ( ( ( PN + FirstVNF_Mem ) - BR ) - FirstVNF_RAM_Server ) ,RRS ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),Max( ( CS / MUR ),Max( RMSe,CS ) ) ) ) ) / Min( CS ,DS ) )", "obj1": 0.11023622047244094, "obj2": 0.7794742988899616}, {"determining": "Max( ( ( FirstVNF_RAM_Server - AMS ) / FirstVNF_RAM ),( ( Max( FirstVNF_RAM_Server,( RRS / Max( MRS,( Max( FirstVNF_RAM_Server,RRS ) + Const ) ) ) ) - FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( ( RRSe + ( ( MUC - RMSe ) + RRSe ) ),MUC ) ) ) ,( ( ( MUC - RMSe ) + Min( ( ( MUM / ( RMSe * MUC ) ) * Min( RCSe ,( MUM / MUC ) ) ) ,( MUM - MUC ) ) ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8137151835735544}, {"determining": "( ( Min( Const ,( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ) + Max( ( ( ( FirstVNF_Mem + ACS ) / ( RRS + Const ) ) * Const ),FirstVNF_RAM ) ) - ( ( AMS * PN ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + MUM ),CS ) / ( ( ( ( ( ( MUC + ( RRSe * RCSe ) ) / MLU ) * Min( MUR ,DS ) ) + RRSe ) + ( ( CS * MUM ) + Max( MUM,MUC ) ) ) + Min( MUC ,DS ) ) )", "obj1": 0.16535433070866143, "obj2": 0.6874211889351611}, {"determining": "Max( ( Const - PN ),( ( ( Const * ( ( ACS / ARS ) / FirstVNF_Mem ) ) - ( BR / FirstVNF_RAM ) ) / BR ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + MUC ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "Max( ( ( Const * Max( FirstVNF_Mem_Server,MDR ) ) + ( FirstVNF_RAM_Server / ( PN / RRS ) ) ),ACS )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUR * ( CS / RCSe ) ) ),RMSe ) ) ) / ( MUR * MUC ) )", "obj1": 0.19488188976377951, "obj2": 0.6468325866119642}, {"determining": "Max( ( Min( AMS ,( FirstVNF_CPU_Server / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) + ( FirstVNF_RAM_Server / FirstVNF_RAM ) ),AMS )", "choosing": "( ( MUR + MUC ) / ( ( RCSe / CS ) + ( MUR * Max( RRSe,CS ) ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6535108597076144}, {"determining": "Max( ARS,Min( ( Const - Min( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - CRS ) ,FirstVNF_CPU ) ) ,( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * ( ( ( ( RRS - FirstVNF_RAM ) - Const ) - ( Const * ( ( BR + ACS ) / ( RRS + Const ) ) ) ) + MDR ) ) ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( MUC,( ( ( MUR / Min( MLU ,RCSe ) ) * MUR ) + RMSe ) ) ) ) / Min( ( ( ( CS * ( MUM + ( ( MLU / MUM ) + ( RMSe * MLU ) ) ) ) + RRSe ) - ( RRSe + Max( MUC,MLU ) ) ) ,DS ) )", "obj1": 0.08267716535433071, "obj2": 0.8562230139930868}, {"determining": "( ( Min( ( ( FirstVNF_CPU / MDR ) / MRS ) ,PN ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( ( AMS * FirstVNF_Mem ) - ( FirstVNF_Mem_Server + CRS ) ) )", "choosing": "( Max( ( MUC + MUC ),RRSe ) / ( ( ( ( ( ( MUC + ( RRSe * RCSe ) ) / MLU ) * Max( MUC,MUC ) ) + RRSe ) + ( Max( RCSe,Max( ( CS + MUC ),DS ) ) - RMSe ) ) + Min( MUC ,DS ) ) )", "obj1": 0.1437007874015748, "obj2": 0.7276184734422253}, {"determining": "( Max( MDR,MDR ) - ( PN * RRS ) )", "choosing": "( Min( Max( ( Min( Min( Min( ( RRSe * MUR ) ,( RCSe + RCSe ) ) ,MUC ) ,MLU ) + Min( ( CS * MUM ) ,Max( RMSe,( ( RMSe - CS ) - MUR ) ) ) ),MUC ) ,Max( ( ( MUR * MUC ) + MUM ),( MUC / Max( ( ( ( MUC - RMSe ) + RRSe ) + RRSe ),MUC ) ) ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.0984251968503937, "obj2": 0.8082963299208445}, {"determining": "Max( ( ( ACS + ( ( MDR * ARS ) / PN ) ) - Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ),Min( ( RRS / FirstVNF_CPU ) ,( ( ( Const - Const ) + FirstVNF_RAM_Server ) * ( MDR + ( ( MDR - Const ) - Max( CRS,PN ) ) ) ) ) )", "choosing": "( ( ( MUR / ( ( CS * CS ) * Max( MUC,DS ) ) ) / RMSe ) / Min( CS ,RCSe ) )", "obj1": 0.1889763779527559, "obj2": 0.6485690237472377}, {"determining": "Max( ( ( ACS + ( ( MDR * ARS ) / PN ) ) - Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ),Min( ( RRS / FirstVNF_CPU ) ,( ( ( Const - Const ) + FirstVNF_RAM_Server ) * ( MDR + ( ( MDR - Const ) - ( ( ( FirstVNF_Mem + ACS ) / ( RRS + Const ) ) * Const ) ) ) ) ) )", "choosing": "( ( ( MUR / ( ( Max( MUC,( ( MUR + MUC ) / Max( MUR,MLU ) ) ) + DS ) * Max( MUC,DS ) ) ) / RMSe ) / Min( CS ,RCSe ) )", "obj1": 0.1830708661417323, "obj2": 0.6555677041221689}, {"determining": "Max( ( ( FirstVNF_CPU_Server * ( RRS * DDR ) ) * Max( Max( BR,FirstVNF_CPU ),ARS ) ),( ( ( Const * ( ( ACS / ARS ) / FirstVNF_Mem ) ) - ( BR / FirstVNF_RAM ) ) / BR ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + RRSe ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "( ( Min( Const ,( AMS / Min( MDR ,Max( ( MDR * ARS ),ACS ) ) ) ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( RCSe,( RMSe - ( Max( ( RCSe + MUM ),DS ) - MUM ) ) ) + ( RMSe / Min( ( Min( Max( RCSe,MLU ) ,CS ) + CS ) ,CS ) ) ) - Min( RMSe ,Max( CS,RCSe ) ) ) / ( ( ( ( MUC * Min( MUR ,DS ) ) / RRSe ) + ( ( CS * MUM ) + Max( MUM,MUC ) ) ) + Min( MUC ,DS ) ) )", "obj1": 0.25196850393700787, "obj2": 0.6138964034344954}, {"determining": "( ( Min( Const ,( AMS / Min( MDR ,Max( ( MDR * ARS ),ACS ) ) ) ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) + ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( RCSe,( RMSe - ( Max( ( RCSe + MUM ),DS ) - MUM ) ) ) + ( RMSe / Min( ( Min( Max( RCSe,MLU ) ,CS ) + CS ) ,CS ) ) ) - Min( RMSe ,Max( CS,RCSe ) ) ) / ( ( ( ( MUC * Min( MUR ,DS ) ) / RRSe ) + ( ( CS * MUM ) + Max( MUM,MUC ) ) ) + Min( MUC ,DS ) ) )", "obj1": 0.25196850393700787, "obj2": 0.6138964034344954}, {"determining": "( ( Min( Const ,( AMS / Min( MDR ,Max( ( MDR * ARS ),ACS ) ) ) ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( RCSe,( RMSe - ( Max( ( RCSe + MUM ),DS ) - MUM ) ) ) + ( RMSe / Min( ( Min( Max( RCSe,MLU ) ,CS ) + CS ) ,CS ) ) ) - Min( RMSe ,Max( CS,RCSe ) ) ) / ( ( ( ( MUC * Min( MUR ,DS ) ) / RRSe ) + ( ( CS * MUM ) + Max( MUM,MUC ) ) ) + Min( MUC ,DS ) ) )", "obj1": 0.25196850393700787, "obj2": 0.6138964034344954}, {"determining": "( ( Min( Const ,( AMS / Min( MDR ,Max( ( MDR * ARS ),ACS ) ) ) ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( RCSe,( RMSe - ( Max( ( RCSe + MUM ),DS ) - MUM ) ) ) + ( RMSe / Min( ( Min( Max( RCSe,MLU ) ,CS ) + CS ) ,CS ) ) ) - Min( RMSe ,Max( CS,RCSe ) ) ) / ( ( ( ( MUC * Min( MUR ,DS ) ) / RRSe ) + ( ( CS * MUM ) + Max( MUM,MUC ) ) ) + Min( MUC ,DS ) ) )", "obj1": 0.25196850393700787, "obj2": 0.6138964034344954}, {"determining": "Max( ( ( BR * Min( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem * ( ( FirstVNF_RAM / BR ) * FirstVNF_Mem_Server ) ) ) ,Max( PN,( BR + ARS ) ) ) ) / FirstVNF_RAM ),( Min( ( PN + ( FirstVNF_RAM * ( ( ARS / PN ) + FirstVNF_Mem ) ) ) ,FirstVNF_Mem ) * AMS ) )", "choosing": "( Min( Max( ( ( MUR * MUR ) - MUM ),( MUC / Max( ( ( ( MUC - RMSe ) + RRSe ) + RRSe ),MUC ) ) ) ,( ( MUR - MLU ) + MUR ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.08464566929133858, "obj2": 0.8477447492113149}, {"determining": "( ( ( FirstVNF_CPU_Server * ( RRS * DDR ) ) * Max( Max( BR,FirstVNF_CPU ),ARS ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) - FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + MUC ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) * ( RRS * DDR ) ) * Max( Max( BR,FirstVNF_CPU ),ARS ) ) - ( Min( FirstVNF_Mem_Server ,ACS ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * ( CS / ( ( CS * Max( MUR,( MUR / RCSe ) ) ) - CS ) ) ) ) / Min( CS ,DS ) )", "obj1": 0.08267716535433071, "obj2": 0.8562230139930868}, {"determining": "( ( Min( Const ,( AMS / ( ( ( ( AMS * PN ) - ( CRS + FirstVNF_Mem_Server ) ) + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( ( AMS * PN ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + MUC ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "( ( ( FirstVNF_CPU_Server * ( RRS * DDR ) ) * Max( Max( BR,FirstVNF_CPU ),ARS ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUR / ( ( Max( MUC,( ( MUR + MUC ) / Max( MUR,MLU ) ) ) + DS ) * Max( MUC,DS ) ) ) / RMSe ) / Min( CS ,RCSe ) )", "obj1": 0.1830708661417323, "obj2": 0.6555677041221689}, {"determining": "Max( ( ( FirstVNF_CPU_Server * ( RRS * DDR ) ) * Max( Max( BR,FirstVNF_CPU ),ARS ) ),( ( ( Const * ( ( ACS / ARS ) / FirstVNF_Mem ) ) - ( BR / FirstVNF_RAM ) ) / BR ) )", "choosing": "( Min( Max( ( ( MUR * MUR ) - MUM ),( MUC / Max( ( ( ( MUC - RMSe ) + RRSe ) + RRSe ),MUC ) ) ) ,( ( MUR - MLU ) + MUR ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.08464566929133858, "obj2": 0.8477447492113149}, {"determining": "Max( ( ( BR * Min( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem * ( ( FirstVNF_RAM / BR ) * FirstVNF_Mem_Server ) ) ) ,Max( PN,( BR + ARS ) ) ) ) / FirstVNF_RAM ),( Min( ( PN + ( FirstVNF_RAM * ( ( ARS / PN ) + FirstVNF_Mem ) ) ) ,FirstVNF_Mem ) * AMS ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + RRSe ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "Max( ( ( Const * Max( FirstVNF_Mem_Server,MDR ) ) + ( FirstVNF_RAM_Server / ( PN / RRS ) ) ),MDR )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * ( CS / RCSe ) ) ),RMSe ) ) ) / ( MUR * MUC ) )", "obj1": 0.19488188976377951, "obj2": 0.6468325866119642}, {"determining": "( ( Min( Const ,( ( RRS * FirstVNF_Mem ) / ( ( ACS + ( CRS + PN ) ) + RRS ) ) ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( ( AMS * PN ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( ( ( ( MUC + ( RRSe * MUC ) ) / MLU ) * Min( MUR ,DS ) ) + RRSe ) + ( Max( RCSe,Max( ( CS + MUC ),DS ) ) - RMSe ) ) + Min( MUC ,DS ) ) )", "obj1": 0.1437007874015748, "obj2": 0.7276184734422253}, {"determining": "Max( ( AMS / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( DDR - CRS ) ,( RRS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( ( ( ( MUC + ( RRSe * RMSe ) ) / MLU ) * Min( MUR ,DS ) ) + RRSe ) / ( Max( RCSe,Max( ( CS + MUC ),DS ) ) - RMSe ) ) + Min( MUC ,DS ) ) )", "obj1": 0.1437007874015748, "obj2": 0.7276184734422253}, {"determining": "( ( Min( ( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( ( ( ( MUC - RMSe ) + RRSe ) + RRSe ),MUC ) ) ) ,( ( ( MUC - RMSe ) + Min( ( Max( ( RRSe - MUM ),Min( MUR ,DS ) ) + CS ) ,Min( MUC ,DS ) ) ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.08858267716535433, "obj2": 0.8315809670104248}, {"determining": "( ( Min( Const ,( AMS / Min( MDR ,Max( ( ( ARS / PN ) * ARS ),ACS ) ) ) ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( FirstVNF_RAM_Server * ACS ) )", "choosing": "( ( ( Max( RCSe,( RMSe - ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) - MUM ) ) ) + ( RMSe / Min( ( Min( Max( RCSe,MLU ) ,CS ) + CS ) ,CS ) ) ) - Min( RMSe ,Max( CS,RCSe ) ) ) / ( ( ( ( MUC * Min( MUR ,DS ) ) / RRSe ) + ( ( CS * MUM ) + Max( MUM,MUC ) ) ) + Min( MUC ,DS ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6381834348986314}, {"determining": "Max( ( Const - PN ),( ( ( Const * ( ( ACS / ARS ) / FirstVNF_Mem ) ) - ( BR / FirstVNF_RAM ) ) / BR ) )", "choosing": "( Max( ( MUM + MUC ),MUC ) / ( MUC + Min( ( MUC + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) - Min( DS ,RCSe ) ) + RRSe ) ) ,DS ) ) )", "obj1": 0.13976377952755906, "obj2": 0.7368546600262121}, {"determining": "Min( Min( Max( FirstVNF_RAM,Max( PN,PN ) ) ,Min( Min( Const ,PN ) ,CRS ) ) ,Min( FirstVNF_RAM_Server ,Const ) )", "choosing": "( ( ( MUR / ( ( Max( MUC,( ( MUR + MUC ) / Max( MUR,MLU ) ) ) + DS ) * Max( MUC,DS ) ) ) / RMSe ) / Min( CS ,RCSe ) )", "obj1": 0.1830708661417323, "obj2": 0.6555677041221689}, {"determining": "( Min( Max( FirstVNF_Mem_Server,MDR ) ,RRS ) * Min( ( MDR - CRS ) ,( Max( Min( FirstVNF_Mem_Server ,RRS ),Const ) + FirstVNF_CPU ) ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( CS + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( Min( MUM ,RMSe ) ,Min( ( MUC / ( MUR - MUR ) ) ,( MUR * MUC ) ) ) ) )", "obj1": 0.19881889763779528, "obj2": 0.643254545226981}, {"determining": "( ( Min( Const ,( AMS / ( ( ACS + ( RRS / RRS ) ) + RRS ) ) ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( ( ( Const * ( ( RRS - MDR ) - BR ) ) - ( BR / FirstVNF_RAM ) ) / BR ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( ( ( ( MUC + Max( MUC,DS ) ) / MLU ) * Min( Max( ( CS + MUC ),DS ) ,DS ) ) + RRSe ) + ( ( CS * MUM ) + Max( MUM,MUC ) ) ) + Min( MUC ,DS ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7020489312740666}, {"determining": "Max( ( Const - PN ),Max( ( ( ( BR * CRS ) - PN ) - ( Const * ( Max( ( FirstVNF_Mem_Server / ( RRS * FirstVNF_CPU ) ),FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) ),BR ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ),RMSe ) ) ) / ( MUR * MUC ) )", "obj1": 0.20078740157480315, "obj2": 0.6391437014340974}, {"determining": "Min( Min( Max( Max( ARS,FirstVNF_CPU_Server ),Max( PN,PN ) ) ,Min( Min( Const ,PN ) ,CRS ) ) ,Min( Max( FirstVNF_Mem_Server,MDR ) ,RRS ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,Min( Min( MUC ,RMSe ) ,( CS + RRSe ) ) ),RMSe ) ) ) / ( MUR * MUC ) )", "obj1": 0.20078740157480315, "obj2": 0.6391437014340974}, {"determining": "Min( Min( Max( Max( ARS,FirstVNF_CPU_Server ),Max( PN,PN ) ) ,Min( Min( Const ,PN ) ,CRS ) ) ,Min( FirstVNF_RAM_Server ,Const ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ),RMSe ) ) ) / ( MUR * MUC ) )", "obj1": 0.20078740157480315, "obj2": 0.6391437014340974}, {"determining": "( Min( Max( FirstVNF_Mem_Server,MDR ) ,RRS ) * ( Const * ( FirstVNF_Mem + ARS ) ) )", "choosing": "( Min( Max( ( ( CS + MUR ) - RCSe ),( MUC / ( CS * CS ) ) ) ,( ( CS + RRSe ) + RRSe ) ) / Min( Max( MLU,CS ) ,Min( Min( MUM ,RMSe ) ,DS ) ) )", "obj1": 0.1220472440944882, "obj2": 0.7567053871595312}, {"determining": "Max( ( ( Min( ( PN + ( FirstVNF_RAM * Max( ( FirstVNF_CPU + Const ),FirstVNF_Mem ) ) ) ,FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,MDR ) ) + ( FirstVNF_RAM_Server / FirstVNF_RAM ) ),AMS )", "choosing": "( ( ( RCSe / CS ) + ( MUR * ( DS / ( MUC - DS ) ) ) ) / ( MUR * MUC ) )", "obj1": 0.22244094488188976, "obj2": 0.6253105278798233}, {"determining": "Max( ( ( Const * Max( FirstVNF_Mem_Server,MDR ) ) + ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / ( DDR / ( ACS / FirstVNF_Mem_Server ) ) ) ),BR )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,Min( Min( MUC ,Max( MLU,MLU ) ) ,( RMSe * MLU ) ) ),RMSe ) ) ) / ( MUR * MUC ) )", "obj1": 0.23818897637795275, "obj2": 0.6221129467753969}, {"determining": "Max( ( ( ACS + ( ( MDR * ARS ) / PN ) ) - Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ),Min( ( RRS / FirstVNF_CPU ) ,( ( ( Const - Const ) + FirstVNF_RAM_Server ) * ( MDR + ( ( MDR - Const ) - ( ( ( FirstVNF_Mem + ACS ) / ( RRS + Const ) ) * Const ) ) ) ) ) )", "choosing": "( ( ( MUR / ( ( Max( MUC,( ( MUR + MUC ) / Max( MUR,MLU ) ) ) + DS ) * Max( MUC,DS ) ) ) / RMSe ) / Min( CS ,RCSe ) )", "obj1": 0.1830708661417323, "obj2": 0.6555677041221689}, {"determining": "Max( ARS,Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( ( MUC / ( MUR - MUR ) ) ,( MUR * MUC ) ) ) ) ) ) / Min( CS ,DS ) )", "obj1": 0.11023622047244094, "obj2": 0.7794742988899616}, {"determining": "( ( Min( Const ,( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( ( AMS * PN ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Max( ( ( MUR * MUR ) - MUM ),( MUC / Max( ( ( ( MUC - RMSe ) + RRSe ) + RRSe ),MUC ) ) ) ,( ( MUR - MLU ) + MUR ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.08464566929133858, "obj2": 0.8477447492113149}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( RRS * ( ACS + ( FirstVNF_Mem_Server / RRS ) ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( ( ( ( MUC + ( RRSe * RCSe ) ) / MLU ) * Min( MUR ,DS ) ) + Min( MUC ,Max( Max( DS,MUR ),Min( ( DS - MUM ) ,( RMSe + CS ) ) ) ) ) + ( ( CS * MUM ) + Max( MUM,MUC ) ) ) + Min( MUC ,DS ) ) )", "obj1": 0.17125984251968504, "obj2": 0.6855813558975219}, {"determining": "( ( Min( ( AMS / ( Max( ARS,FirstVNF_Mem_Server ) + RRS ) ) ,Const ) / Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) + ( ( CRS + FirstVNF_Mem_Server ) - ( AMS * PN ) ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( ( MUC / ( MUR - MUR ) ) ,( MUR * MUC ) ) ) ) ) ) / ( CS - ( ( ( ( ( Min( DS ,DS ) * RCSe ) * RCSe ) + MLU ) - MLU ) * ( MUM / DS ) ) ) )", "obj1": 0.1062992125984252, "obj2": 0.7848492321714099}, {"determining": "Max( ( Const - PN ),Max( ( ( BR / FirstVNF_RAM ) - ( Const * ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) * Min( ( MDR / FirstVNF_RAM_Server ) ,BR ) ) ) ),CRS ) )", "choosing": "( ( ( MUR / ( ( Max( MUC,( ( MUR + MUC ) / Max( MUR,MLU ) ) ) + DS ) * Max( MUC,DS ) ) ) / RMSe ) / Min( CS ,RCSe ) )", "obj1": 0.1968503937007874, "obj2": 0.6439147353047943}, {"determining": "( ( Min( Const ,( AMS / ( ( ( ( AMS * PN ) - ( CRS + FirstVNF_Mem_Server ) ) + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - Min( PN ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( ( ( ( MUC + Min( MUC ,DS ) ) / MLU ) * Min( RRSe ,DS ) ) + RRSe ) + ( ( CS * MUM ) + Max( MUM,MUC ) ) ) + Min( MUC ,DS ) ) )", "obj1": 0.16338582677165353, "obj2": 0.6887761931846377}, {"determining": "Max( ( Const - PN ),( ( ( Const * ( Min( ACS ,ARS ) / FirstVNF_CPU_Server ) ) - ( ( ACS + ( CRS / ( ( FirstVNF_CPU_Server / CRS ) / DDR ) ) ) + FirstVNF_CPU ) ) / BR ) )", "choosing": "( Min( ( MLU + CS ) ,Min( Min( MUM ,Min( ( MUR / Min( CS ,Min( MUC ,MUR ) ) ) ,RMSe ) ) ,DS ) ) / Min( ( RCSe / MUC ) ,( MUM / ( ( MUR * MLU ) - MUC ) ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7584708993567366}, {"determining": "Max( ( FirstVNF_RAM / ( FirstVNF_RAM_Server * AMS ) ),( ( Min( ( PN - Min( PN ,CRS ) ) ,( ( Const - RRS ) / Max( PN,MRS ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( ( RRSe + ( ( MUC - RMSe ) + RRSe ) ),MUC ) ) ) ,( ( ( MUC - RMSe ) + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) / Min( DS ,( MLU / MUR ) ) ) + RRSe ) ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8137151835735544}, {"determining": "Max( ( ( ACS + ( ( MDR * ARS ) * PN ) ) - Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ),Min( ( RRS / FirstVNF_CPU ) ,( ( ( Const - Const ) + FirstVNF_RAM_Server ) * ( PN + BR ) ) ) )", "choosing": "( ( ( MUC / ( MUM / RCSe ) ) / RMSe ) / Min( CS ,RCSe ) )", "obj1": 0.1830708661417323, "obj2": 0.6555677041221689}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( AMS - RRS ) ,( ( Max( CRS,PN ) - ( FirstVNF_Mem_Server + PN ) ) + Max( FirstVNF_RAM_Server,Max( BR,FirstVNF_Mem_Server ) ) ) ) / FirstVNF_Mem_Server ) )", "choosing": "( Min( ( Max( Min( CS ,MUR ),Max( CS,MUR ) ) * CS ) ,Min( MUC ,DS ) ) / Min( Max( Max( ( MUR * ( MUM / ( MUM / ( MUM * CS ) ) ) ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + MUM ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "( ( Min( Const ,Max( Const,Min( ARS ,Const ) ) ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( ( AMS * PN ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUR / ( ( Max( MUC,( ( MUR + MUM ) / Max( MUR,MLU ) ) ) - DS ) * Max( DS,MUC ) ) ) / RMSe ) / Min( CS ,RCSe ) )", "obj1": 0.1830708661417323, "obj2": 0.6555677041221689}, {"determining": "( Min( Max( FirstVNF_Mem_Server,MDR ) ,RRS ) * Min( ( MDR - CRS ) ,( Max( FirstVNF_Mem_Server,Const ) + FirstVNF_CPU ) ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( CS + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( Min( MUM ,RMSe ) ,DS ) ) )", "obj1": 0.1220472440944882, "obj2": 0.7567053871595312}, {"determining": "Max( ( Min( ( ( ARS - ( FirstVNF_Mem / FirstVNF_CPU ) ) - CRS ) ,AMS ) - AMS ),( ( Min( ( PN / ( FirstVNF_RAM * ( ( PN / ARS ) + FirstVNF_Mem ) ) ) ,FirstVNF_Mem ) * AMS ) / ( BR * ( Min( PN ,FirstVNF_Mem ) + CRS ) ) ) )", "choosing": "( ( ( MUR / ( ( Max( MUC,( ( MUR + MUC ) / Max( MUR,MLU ) ) ) + DS ) * Max( MUC,DS ) ) ) / RMSe ) / Min( CS ,RCSe ) )", "obj1": 0.1830708661417323, "obj2": 0.6555677041221689}, {"determining": "Max( ( ( Min( ( PN + ( Min( FirstVNF_CPU_Server ,MRS ) + FirstVNF_RAM ) ) ,FirstVNF_Mem ) * AMS ) / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( ( ( ( MUC - RMSe ) + Max( MUC,MUM ) ) + RRSe ),MUC ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Min( DS ,RCSe ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8596744722857146}, {"determining": "Max( ( ( Const * Max( FirstVNF_Mem_Server,MDR ) ) + ( FirstVNF_RAM_Server / FirstVNF_RAM ) ),AMS )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ),RMSe ) ) ) / ( MUR * MUC ) )", "obj1": 0.20078740157480315, "obj2": 0.6391437014340974}, {"determining": "Max( ( ( Const * Max( FirstVNF_Mem_Server,MDR ) ) + ( FirstVNF_RAM_Server / FirstVNF_RAM ) ),AMS )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,Min( Min( MUC ,RMSe ) ,( RMSe * MLU ) ) ),RMSe ) ) ) / ( MUR * MUC ) )", "obj1": 0.18700787401574803, "obj2": 0.6535108597076144}, {"determining": "Max( ( Const - PN ),( ( ( Const * ( ( ACS / ARS ) / FirstVNF_Mem ) ) - ( BR / FirstVNF_RAM ) ) / BR ) )", "choosing": "( Max( ( MUM + MUC ),MUC ) / ( MUC + Min( ( MUC + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) - Min( DS ,RCSe ) ) + RRSe ) ) ,DS ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7270587263534549}, {"determining": "( Min( Max( FirstVNF_Mem_Server,MDR ) ,RRS ) * Min( ( MDR - CRS ) ,( Max( ( ( ( MRS + FirstVNF_CPU ) - RRS ) + ACS ),Const ) + FirstVNF_CPU ) ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( ( MUC / ( DS + MUR ) ) ,( MUR / MUC ) ) ) ),( MUC / ( CS * CS ) ) ) ,( ( CS + RRSe ) + RRSe ) ) / Min( ( CS + MLU ) ,Min( Min( MUM ,RMSe ) ,DS ) ) )", "obj1": 0.12401574803149606, "obj2": 0.753347088554585}, {"determining": "( Min( Max( MDR,FirstVNF_Mem_Server ) ,RRS ) * Min( ( MDR - CRS ) ,( ( FirstVNF_CPU_Server / DDR ) / FirstVNF_CPU ) ) )", "choosing": "( ( CS / Max( MUM,RMSe ) ) / Min( ( MLU + CS ) ,Min( Min( RRSe ,RMSe ) ,DS ) ) )", "obj1": 0.12401574803149606, "obj2": 0.753347088554585}, {"determining": "Max( ( Const - PN ),( ( ( Const * ( ( ACS / ARS ) / FirstVNF_Mem ) ) - ( BR / FirstVNF_RAM ) ) / BR ) )", "choosing": "( ( ( MUR / ( ( Max( MUC,( ( MUR + MUC ) / Max( MUR,MLU ) ) ) + DS ) * Max( MUC,DS ) ) ) / RMSe ) / Min( CS ,RCSe ) )", "obj1": 0.1968503937007874, "obj2": 0.6439147353047943}], "14": [{"determining": "Min( ( RRS - DDR ) ,Min( FirstVNF_RAM_Server ,AMS ) )", "choosing": "( ( MLU + ( RCSe + MUM ) ) / ( CS * ( RCSe - ( RRSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ARS,Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( ( MUC / ( MUR - MUR ) ) ,( MUR * MUC ) ) ) ) ) ) / Min( CS ,DS ) )", "obj1": 0.11023622047244094, "obj2": 0.7794742988899616}, {"determining": "Max( ( Const - PN ),( BR / ( ( Const * ( ( RRS - MDR ) - BR ) ) - ( BR / ( Const * FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( MUM / ( MUR * ( ( RRSe / MUM ) * MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + MUC ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( Max( RRSe,MUM ),Max( CS,MUR ) ) + CS ) ,Min( DS ,MUC ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "Max( ( Const - PN ),( ( ( Const * ( ( ACS / ( RRS / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) / FirstVNF_Mem ) ) - ( BR / FirstVNF_RAM ) ) / Max( ( ( ACS * ( FirstVNF_Mem_Server + ARS ) ) / RRS ),Max( DDR,Max( ( ARS + CRS ),ARS ) ) ) ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( RRSe / ( MUR - MUR ) ) ) ,( ( ( Max( ( RRSe - MLU ),Max( ( MUC + MUR ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( MUM - RRSe ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "Max( ( ( FirstVNF_CPU_Server * ( RRS * DDR ) ) * Max( Max( BR,FirstVNF_CPU ),ARS ) ),( ( ( Const * ( ( ACS / ARS ) / FirstVNF_Mem ) ) - ( BR / FirstVNF_RAM ) ) / BR ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + RRSe ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "( ( ( FirstVNF_CPU_Server * ( RRS * DDR ) ) * Max( Max( BR,FirstVNF_CPU ),ARS ) ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( DS - MUC ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe / MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "( ( Min( ( AMS / ( FirstVNF_CPU + ACS ) ) ,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) + ( ( AMS * PN ) - ( ARS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( RCSe - DS ) * RRSe ) / ( CS * ( Max( MUM,( DS / DS ) ) + MUM ) ) ) + MUM ),RRSe ) / ( ( ( ( ( ( MUC + ( RRSe * RCSe ) ) / MLU ) * Min( MUR ,DS ) ) + RRSe ) + ( ( CS * MUM ) + Max( MUM,( MUC / ( MUR - MUR ) ) ) ) ) + Min( MUC ,RMSe ) ) )", "obj1": 0.1279527559055118, "obj2": 0.7464478523929874}, {"determining": "( ( Min( ( ( DDR * FirstVNF_Mem ) / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) + ( ( AMS * PN ) - ( FirstVNF_Mem_Server + CRS ) ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( MUM ,( DS - MUM ) ),( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( ( MUC / ( MUR + MUR ) ) ,( MUR * MUC ) ) ) ) ) ) / Min( CS ,DS ) )", "obj1": 0.11023622047244094, "obj2": 0.7794742988899616}, {"determining": "Max( ( ( FirstVNF_RAM_Server * AMS ) / FirstVNF_RAM ),( ( Min( ( PN - Min( PN ,( Const - FirstVNF_CPU_Server ) ) ) ,AMS ) - FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( ( ( ( CS - RMSe ) + RRSe ) + RRSe ),MUC ) ) ) ,( ( ( MUC - RMSe ) + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) / Min( DS ,RCSe ) ) + RRSe ) ) + RRSe ) ) / Min( ( MLU + ( Max( CS,RCSe ) - Max( RRSe,( Max( DS,RCSe ) + RCSe ) ) ) ) ,Min( MUC ,DS ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8137151835735544}, {"determining": "Max( ( FirstVNF_CPU - Max( ( RRS - CRS ),Const ) ),( ( PN / RRS ) * ( AMS + ACS ) ) )", "choosing": "( ( ( ( RRSe - CS ) * ( MUC / RCSe ) ) + ( RCSe / CS ) ) / Min( CS ,DS ) )", "obj1": 0.08267716535433071, "obj2": 0.8562230139930868}, {"determining": "Max( ( ( AMS * FirstVNF_RAM_Server ) / FirstVNF_RAM ),( ( Min( ( DDR - CRS ) ,( BR + FirstVNF_Mem_Server ) ) - RRS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( ( ( ( MUR * MUC ) - MUM ) - ( MLU - ( ( ( DS + CS ) + Max( MUR,RCSe ) ) + Min( RCSe ,( DS - ( MUC - MLU ) ) ) ) ) ) ,Max( ( MUM + MUC ),MUC ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.0984251968503937, "obj2": 0.8082963299208445}, {"determining": "Max( ( Min( BR ,ACS ) / FirstVNF_RAM ),( ( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUM + MUC ),MUC ) / ( MUC + Min( ( MUC + ( ( ( MLU + ( MUC + RRSe ) ) - Min( DS ,RCSe ) ) - RRSe ) ) ,DS ) ) )", "obj1": 0.13385826771653545, "obj2": 0.7440026758859773}, {"determining": "Max( ( ( FirstVNF_RAM_Server * AMS ) / FirstVNF_RAM ),( ( Min( Max( FirstVNF_Mem_Server,MDR ) ,AMS ) - FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( ( ( ( MUC - RMSe ) + RRSe ) + RRSe ),MUC ) ) ) ,( ( ( MUC / ( MUR - MUR ) ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.09645669291338582, "obj2": 0.8091991788850409}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( RRS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + MUC ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "Max( ( Const - FirstVNF_RAM_Server ),( FirstVNF_Mem_Server / DDR ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( ( ( ( MUC + ( RRSe * RCSe ) ) / MLU ) * Min( MUR ,DS ) ) + RRSe ) + ( ( CS * MUM ) + Max( MUM,( MUC / ( MUR - MUR ) ) ) ) ) + Min( MUC ,DS ) ) )", "obj1": 0.13582677165354332, "obj2": 0.7376260419142033}, {"determining": "( ( ( CRS * MDR ) - Min( Const ,CRS ) ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + MUC ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( RRS * ( ACS + ( FirstVNF_Mem_Server / RRS ) ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( ( ( ( MUC - RMSe ) + RRSe ) + RRSe ),MUC ) ) ) ,( ( ( MUC - RMSe ) + Min( ( Max( ( RRSe - MUM ),Min( MUR ,DS ) ) + CS ) ,Min( MUC ,DS ) ) ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.08858267716535433, "obj2": 0.8315809670104248}, {"determining": "Max( ( ( BR * Min( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem * ( ( FirstVNF_RAM / BR ) * FirstVNF_Mem_Server ) ) ) ,Max( ( BR + ( Const * ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) ),PN ) ) ) / FirstVNF_RAM ),( ( FirstVNF_RAM_Server + Min( AMS ,CRS ) ) * AMS ) )", "choosing": "( Min( Max( ( Min( MUR ,MUR ) - MUM ),( MUC / Max( ( ( ( MUC - RMSe ) + RRSe ) + RRSe ),MUC ) ) ) ,( ( MUR - MLU ) + MUR ) ) / Min( ( MLU * MUM ) ,Min( MUC ,DS ) ) )", "obj1": 0.08464566929133858, "obj2": 0.8477447492113149}, {"determining": "Max( ( ( BR * Min( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem * ( ( FirstVNF_RAM / BR ) * FirstVNF_Mem_Server ) ) ) ,Max( ( BR + ( Const * ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) ),PN ) ) ) / FirstVNF_RAM ),( ( FirstVNF_RAM_Server + Min( AMS ,CRS ) ) * AMS ) )", "choosing": "( Min( Max( ( Min( MUR ,MUR ) - MUM ),( MUC / Max( ( ( ( MUC - RMSe ) + RRSe ) + RRSe ),MUC ) ) ) ,( ( MUR - MLU ) + MUR ) ) / Min( ( MLU * MUM ) ,Min( MUC ,DS ) ) )", "obj1": 0.08464566929133858, "obj2": 0.8477447492113149}, {"determining": "Max( ( ( BR * Min( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem * ( ( FirstVNF_RAM / BR ) * FirstVNF_Mem_Server ) ) ) ,Max( ( BR + ( Const * ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) ),PN ) ) ) / FirstVNF_RAM ),( ( FirstVNF_RAM_Server + Min( AMS ,CRS ) ) * AMS ) )", "choosing": "( Min( Max( ( Min( MUR ,MUR ) - MUM ),( MUC / Max( ( ( ( MUC - RMSe ) + RRSe ) + RRSe ),MUC ) ) ) ,( ( MUR - MLU ) + MUR ) ) / Min( ( MLU * MUM ) ,Min( MUC ,DS ) ) )", "obj1": 0.08464566929133858, "obj2": 0.8477447492113149}, {"determining": "Max( ( ( BR * Min( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem * ( ( FirstVNF_RAM / BR ) * FirstVNF_Mem_Server ) ) ) ,Max( PN,( BR + ARS ) ) ) ) / FirstVNF_RAM ),( Min( ( PN + ( FirstVNF_RAM * ( ( ARS / PN ) + FirstVNF_Mem ) ) ) ,FirstVNF_Mem ) * AMS ) )", "choosing": "( Min( Max( ( ( MUR * MUR ) - MUM ),( MUC / Max( ( ( ( MUC - RMSe ) + RRSe ) + RRSe ),MUC ) ) ) ,( ( MUR - MLU ) + MUR ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.08464566929133858, "obj2": 0.8477447492113149}, {"determining": "( ( Min( ( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) + ( ( AMS * PN ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( ( MUC / ( MUR - MUR ) ) ,( MUR * MUC ) ) ) ) ) ) / Min( CS ,DS ) )", "obj1": 0.11023622047244094, "obj2": 0.7794742988899616}, {"determining": "Max( ( ( Min( ( FirstVNF_Mem + ( FirstVNF_RAM * ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) + FirstVNF_Mem ) ) ) ,FirstVNF_Mem ) * AMS ) / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS / CS ) ) ) ,( ( ( ( MUC - MUM ) + Min( RRSe ,RCSe ) ) / ( CS / RCSe ) ) / ( MUC + Min( ( MUC + DS ) ,DS ) ) ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7898236536834559}, {"determining": "( ( Min( Const ,( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( ( ( Const * ( ( RRS - MDR ) - BR ) ) - ( BR / FirstVNF_RAM ) ) / BR ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( ( ( ( MUC + ( RRSe * RCSe ) ) / MLU ) * Min( Max( ( CS + MUC ),DS ) ,DS ) ) + RRSe ) + ( ( CS * MUM ) + Max( MUM,MUC ) ) ) + Min( MUC ,DS ) ) )", "obj1": 0.15354330708661418, "obj2": 0.7114367936177695}, {"determining": "Max( ( PN - Const ),( ( ( Min( RRS ,( ( MDR * RRS ) * FirstVNF_CPU_Server ) ) * ( ( ( ACS / Const ) / ARS ) - FirstVNF_Mem ) ) - ( CRS + MRS ) ) / BR ) )", "choosing": "( Min( Max( Max( ( MUC * MUR ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + CS ),Min( RMSe ,MUR ) ) ) - RMSe ) + ( Min( RRSe ,MLU ) * CS ) ) + RRSe ) ) / Min( ( ( ( RRSe - MUM ) / Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "( ( Max( Max( BR,DDR ),ARS ) * ( FirstVNF_CPU_Server * ( Min( FirstVNF_CPU ,MDR ) * DDR ) ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) - FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( DS,( CS + MUC ) ) ) - RMSe ) + RRSe ) + MUM ) ) / Min( Min( MLU ,CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "Max( ARS,Min( ( ( ( PN + FirstVNF_Mem ) - BR ) - FirstVNF_RAM_Server ) ,RRS ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),Max( ( CS / MUR ),Max( RMSe,CS ) ) ) ) ) / Min( CS ,DS ) )", "obj1": 0.11023622047244094, "obj2": 0.7794742988899616}, {"determining": "Max( ( ( FirstVNF_RAM_Server - AMS ) / FirstVNF_RAM ),( ( Max( FirstVNF_RAM_Server,( RRS / Max( MRS,( Max( FirstVNF_RAM_Server,RRS ) + Const ) ) ) ) - FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( ( RRSe + ( ( MUC - RMSe ) + RRSe ) ),MUC ) ) ) ,( ( ( MUC - RMSe ) + Min( ( ( MUM / ( RMSe * MUC ) ) * Min( RCSe ,( MUM / MUC ) ) ) ,( MUM - MUC ) ) ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8137151835735544}, {"determining": "Max( ( Const - PN ),( ( ( Const * ( ( ACS / ARS ) / FirstVNF_Mem ) ) - ( BR / FirstVNF_RAM ) ) / BR ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + MUC ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "Max( ARS,Min( ( Const - Min( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - CRS ) ,FirstVNF_CPU ) ) ,( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * ( ( ( ( RRS - FirstVNF_RAM ) - Const ) - ( Const * ( ( BR + ACS ) / ( RRS + Const ) ) ) ) + MDR ) ) ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( MUC,( ( ( MUR / Min( MLU ,RCSe ) ) * MUR ) + RMSe ) ) ) ) / Min( ( ( ( CS * ( MUM + ( ( MLU / MUM ) + ( RMSe * MLU ) ) ) ) + RRSe ) - ( RRSe + Max( MUC,MLU ) ) ) ,DS ) )", "obj1": 0.08267716535433071, "obj2": 0.8562230139930868}, {"determining": "( ( Min( ( ( FirstVNF_CPU / MDR ) / MRS ) ,PN ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( ( AMS * FirstVNF_Mem ) - ( FirstVNF_Mem_Server + CRS ) ) )", "choosing": "( Max( ( MUC + MUC ),RRSe ) / ( ( ( ( ( ( MUC + ( RRSe * RCSe ) ) / MLU ) * Max( MUC,MUC ) ) + RRSe ) + ( Max( RCSe,Max( ( CS + MUC ),DS ) ) - RMSe ) ) + Min( MUC ,DS ) ) )", "obj1": 0.1437007874015748, "obj2": 0.7276184734422253}, {"determining": "( Max( MDR,MDR ) - ( PN * RRS ) )", "choosing": "( Min( Max( ( Min( Min( Min( ( RRSe * MUR ) ,( RCSe + RCSe ) ) ,MUC ) ,MLU ) + Min( ( CS * MUM ) ,Max( RMSe,( ( RMSe - CS ) - MUR ) ) ) ),MUC ) ,Max( ( ( MUR * MUC ) + MUM ),( MUC / Max( ( ( ( MUC - RMSe ) + RRSe ) + RRSe ),MUC ) ) ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.0984251968503937, "obj2": 0.8082963299208445}, {"determining": "Max( ( ( FirstVNF_CPU_Server * ( RRS * DDR ) ) * Max( Max( BR,FirstVNF_CPU ),ARS ) ),( ( ( Const * ( ( ACS / ARS ) / FirstVNF_Mem ) ) - ( BR / FirstVNF_RAM ) ) / BR ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + RRSe ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "Max( ( ( BR * Min( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem * ( ( FirstVNF_RAM / BR ) * FirstVNF_Mem_Server ) ) ) ,Max( PN,( BR + ARS ) ) ) ) / FirstVNF_RAM ),( Min( ( PN + ( FirstVNF_RAM * ( ( ARS / PN ) + FirstVNF_Mem ) ) ) ,FirstVNF_Mem ) * AMS ) )", "choosing": "( Min( Max( ( ( MUR * MUR ) - MUM ),( MUC / Max( ( ( ( MUC - RMSe ) + RRSe ) + RRSe ),MUC ) ) ) ,( ( MUR - MLU ) + MUR ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.08464566929133858, "obj2": 0.8477447492113149}, {"determining": "( ( ( FirstVNF_CPU_Server * ( RRS * DDR ) ) * Max( Max( BR,FirstVNF_CPU ),ARS ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) - FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + MUC ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) * ( RRS * DDR ) ) * Max( Max( BR,FirstVNF_CPU ),ARS ) ) - ( Min( FirstVNF_Mem_Server ,ACS ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * ( CS / ( ( CS * Max( MUR,( MUR / RCSe ) ) ) - CS ) ) ) ) / Min( CS ,DS ) )", "obj1": 0.08267716535433071, "obj2": 0.8562230139930868}, {"determining": "( ( Min( Const ,( AMS / ( ( ( ( AMS * PN ) - ( CRS + FirstVNF_Mem_Server ) ) + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( ( AMS * PN ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + MUC ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "Max( ( ( FirstVNF_CPU_Server * ( RRS * DDR ) ) * Max( Max( BR,FirstVNF_CPU ),ARS ) ),( ( ( Const * ( ( ACS / ARS ) / FirstVNF_Mem ) ) - ( BR / FirstVNF_RAM ) ) / BR ) )", "choosing": "( Min( Max( ( ( MUR * MUR ) - MUM ),( MUC / Max( ( ( ( MUC - RMSe ) + RRSe ) + RRSe ),MUC ) ) ) ,( ( MUR - MLU ) + MUR ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.08464566929133858, "obj2": 0.8477447492113149}, {"determining": "Max( ( ( BR * Min( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem * ( ( FirstVNF_RAM / BR ) * FirstVNF_Mem_Server ) ) ) ,Max( PN,( BR + ARS ) ) ) ) / FirstVNF_RAM ),( Min( ( PN + ( FirstVNF_RAM * ( ( ARS / PN ) + FirstVNF_Mem ) ) ) ,FirstVNF_Mem ) * AMS ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + RRSe ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "( ( Min( Const ,( ( RRS * FirstVNF_Mem ) / ( ( ACS + ( CRS + PN ) ) + RRS ) ) ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( ( AMS * PN ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( ( ( ( MUC + ( RRSe * MUC ) ) / MLU ) * Min( MUR ,DS ) ) + RRSe ) + ( Max( RCSe,Max( ( CS + MUC ),DS ) ) - RMSe ) ) + Min( MUC ,DS ) ) )", "obj1": 0.1437007874015748, "obj2": 0.7276184734422253}, {"determining": "Max( ( AMS / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( DDR - CRS ) ,( RRS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( ( ( ( MUC + ( RRSe * RMSe ) ) / MLU ) * Min( MUR ,DS ) ) + RRSe ) / ( Max( RCSe,Max( ( CS + MUC ),DS ) ) - RMSe ) ) + Min( MUC ,DS ) ) )", "obj1": 0.1437007874015748, "obj2": 0.7276184734422253}, {"determining": "( ( Min( ( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( ( ( ( MUC - RMSe ) + RRSe ) + RRSe ),MUC ) ) ) ,( ( ( MUC - RMSe ) + Min( ( Max( ( RRSe - MUM ),Min( MUR ,DS ) ) + CS ) ,Min( MUC ,DS ) ) ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.08858267716535433, "obj2": 0.8315809670104248}, {"determining": "Max( ( Const - PN ),( ( ( Const * ( ( ACS / ARS ) / FirstVNF_Mem ) ) - ( BR / FirstVNF_RAM ) ) / BR ) )", "choosing": "( Max( ( MUM + MUC ),MUC ) / ( MUC + Min( ( MUC + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) - Min( DS ,RCSe ) ) + RRSe ) ) ,DS ) ) )", "obj1": 0.13976377952755906, "obj2": 0.7368546600262121}, {"determining": "Max( ARS,Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( ( MUC / ( MUR - MUR ) ) ,( MUR * MUC ) ) ) ) ) ) / Min( CS ,DS ) )", "obj1": 0.11023622047244094, "obj2": 0.7794742988899616}, {"determining": "( ( Min( Const ,( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( ( AMS * PN ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Max( ( ( MUR * MUR ) - MUM ),( MUC / Max( ( ( ( MUC - RMSe ) + RRSe ) + RRSe ),MUC ) ) ) ,( ( MUR - MLU ) + MUR ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.08464566929133858, "obj2": 0.8477447492113149}, {"determining": "Max( ( Const - PN ),( ( ( Const * ( Min( ACS ,ARS ) / FirstVNF_CPU_Server ) ) - ( ( ACS + ( CRS / ( ( FirstVNF_CPU_Server / CRS ) / DDR ) ) ) + FirstVNF_CPU ) ) / BR ) )", "choosing": "( Min( ( MLU + CS ) ,Min( Min( MUM ,Min( ( MUR / Min( CS ,Min( MUC ,MUR ) ) ) ,RMSe ) ) ,DS ) ) / Min( ( RCSe / MUC ) ,( MUM / ( ( MUR * MLU ) - MUC ) ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7584708993567366}, {"determining": "Max( ( FirstVNF_RAM / ( FirstVNF_RAM_Server * AMS ) ),( ( Min( ( PN - Min( PN ,CRS ) ) ,( ( Const - RRS ) / Max( PN,MRS ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( ( RRSe + ( ( MUC - RMSe ) + RRSe ) ),MUC ) ) ) ,( ( ( MUC - RMSe ) + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) / Min( DS ,( MLU / MUR ) ) ) + RRSe ) ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8137151835735544}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( AMS - RRS ) ,( ( Max( CRS,PN ) - ( FirstVNF_Mem_Server + PN ) ) + Max( FirstVNF_RAM_Server,Max( BR,FirstVNF_Mem_Server ) ) ) ) / FirstVNF_Mem_Server ) )", "choosing": "( Min( ( Max( Min( CS ,MUR ),Max( CS,MUR ) ) * CS ) ,Min( MUC ,DS ) ) / Min( Max( Max( ( MUR * ( MUM / ( MUM / ( MUM * CS ) ) ) ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + MUM ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "Max( ( Const - PN ),( ( ( Const * ( ( ACS / ARS ) / FirstVNF_Mem ) ) - ( BR / FirstVNF_RAM ) ) / BR ) )", "choosing": "( Max( ( MUM + MUC ),MUC ) / ( MUC + Min( ( MUC + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) - Min( DS ,RCSe ) ) + RRSe ) ) ,DS ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7270587263534549}, {"determining": "( Min( Max( FirstVNF_Mem_Server,MDR ) ,RRS ) * Min( ( MDR - CRS ) ,( Max( ( ( ( MRS + FirstVNF_CPU ) - RRS ) + ACS ),Const ) + FirstVNF_CPU ) ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( ( MUC / ( DS + MUR ) ) ,( MUR / MUC ) ) ) ),( MUC / ( CS * CS ) ) ) ,( ( CS + RRSe ) + RRSe ) ) / Min( ( CS + MLU ) ,Min( Min( MUM ,RMSe ) ,DS ) ) )", "obj1": 0.12401574803149606, "obj2": 0.753347088554585}, {"determining": "( Min( Max( MDR,FirstVNF_Mem_Server ) ,RRS ) * Min( ( MDR - CRS ) ,( ( FirstVNF_CPU_Server / DDR ) / FirstVNF_CPU ) ) )", "choosing": "( ( CS / Max( MUM,RMSe ) ) / Min( ( MLU + CS ) ,Min( Min( RRSe ,RMSe ) ,DS ) ) )", "obj1": 0.12401574803149606, "obj2": 0.753347088554585}, {"determining": "Max( ( ( Const * Max( FirstVNF_Mem_Server,MDR ) ) + ( FirstVNF_RAM_Server / FirstVNF_RAM ) ),AMS )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( ( ( ( MUC + ( RRSe * RCSe ) ) / MLU ) * Min( MUR ,DS ) ) + RRSe ) + ( Max( RCSe,Max( ( CS + MUC ),DS ) ) - RMSe ) ) + Min( MUC ,DS ) ) )", "obj1": 0.1437007874015748, "obj2": 0.7276184734422253}, {"determining": "( Min( Max( FirstVNF_Mem_Server,MDR ) ,RRS ) * Min( ( MDR - CRS ) ,( Max( FirstVNF_Mem_Server,Const ) + FirstVNF_CPU ) ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( ( ( ( MUC + ( RRSe * RCSe ) ) / MLU ) * Min( MUR ,DS ) ) + RRSe ) + ( Max( RCSe,Max( ( CS + MUC ),DS ) ) - RMSe ) ) + Min( MUC ,DS ) ) )", "obj1": 0.1437007874015748, "obj2": 0.7276184734422253}, {"determining": "Max( ( Const - PN ),( ( ( Const * ( ( ACS / ARS ) / FirstVNF_Mem ) ) - ( BR / FirstVNF_RAM ) ) / BR ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( CS + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( Min( MUM ,RMSe ) ,DS ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7584708993567366}, {"determining": "Max( ( ( FirstVNF_CPU_Server * ( RRS * DDR ) ) * Max( Max( BR,FirstVNF_CPU ),ARS ) ),( ( ( Const * ( ( ACS / ARS ) / FirstVNF_Mem ) ) - ( BR / FirstVNF_RAM ) ) / BR ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + RRSe ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "Max( ( Const - PN ),( ( ( Const * ( ( ACS / ARS ) / FirstVNF_Mem ) ) - ( BR / FirstVNF_RAM ) ) / BR ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * ( CS / RCSe ) ) ) / Min( CS ,DS ) )", "obj1": 0.08267716535433071, "obj2": 0.8562230139930868}, {"determining": "( ( ( ( Max( Max( MDR,( DDR - DDR ) ),FirstVNF_Mem_Server ) / MDR ) * ( RRS * DDR ) ) * Max( Max( BR,FirstVNF_CPU ),ARS ) ) - ( ( FirstVNF_Mem_Server + RRS ) - FirstVNF_RAM_Server ) )", "choosing": "( Min( ( Max( Min( ( RRSe + ( DS + Min( RMSe ,RCSe ) ) ) ,RRSe ),RMSe ) / ( ( ( RCSe + MUC ) - MUR ) * Max( ( CS / ( Max( MLU,MLU ) * DS ) ),RMSe ) ) ) ,DS ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + MUR ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "Max( ( ( Min( ( PN + ( Min( FirstVNF_CPU_Server ,MRS ) + FirstVNF_RAM ) ) ,FirstVNF_Mem ) * AMS ) / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( ( ( ( MUC + ( RRSe * RCSe ) ) / MLU ) * Min( MUR ,DS ) ) + RRSe ) + ( Max( RCSe,Max( ( CS + MUC ),DS ) ) - RMSe ) ) + Min( MUC ,DS ) ) )", "obj1": 0.1437007874015748, "obj2": 0.7276184734422253}, {"determining": "Max( ARS,Min( ( PN / RRS ) ,( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * ( ( ( FirstVNF_RAM_Server * AMS ) - ( Const * ( ( FirstVNF_CPU_Server + ACS ) / ( RRS + Const ) ) ) ) + MDR ) ) ) )", "choosing": "( ( ( ( MUC + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) - Min( DS ,RCSe ) ) + RRSe ) ) / CS ) + ( MUR * ( CS / RCSe ) ) ) / Min( CS ,DS ) )", "obj1": 0.08661417322834646, "obj2": 0.8352242193439763}, {"determining": "Max( ARS,Min( ( PN / RRS ) ,( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * ( ( ( MDR - Const ) - ( Const * ( ( FirstVNF_CPU_Server + ACS ) / ( RRS + Const ) ) ) ) + MDR ) ) ) )", "choosing": "( Max( ( MUM + MUC ),MUC ) / ( MUC + Min( ( MUC + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) - Min( DS ,RCSe ) ) + RRSe ) ) ,DS ) ) )", "obj1": 0.13385826771653545, "obj2": 0.7440026758859773}, {"determining": "Max( ( ( FirstVNF_RAM_Server * AMS ) / FirstVNF_RAM ),( ( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * ( CS / RCSe ) ) ) / Min( CS ,DS ) )", "obj1": 0.08267716535433071, "obj2": 0.8562230139930868}, {"determining": "Max( ( ( ACS + ( ( MDR * ARS ) / PN ) ) - Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ),Min( ( RRS / FirstVNF_CPU ) ,( ( ( Const - Const ) + FirstVNF_RAM_Server ) * ( MDR + ( ( MDR - Const ) - ( ( ( FirstVNF_Mem + ACS ) / ( RRS + Const ) ) * Const ) ) ) ) ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( ( MUC / ( MUR - MUR ) ) ,( MUR * MUC ) ) ) ) ) ) / Min( CS ,DS ) )", "obj1": 0.1062992125984252, "obj2": 0.7831814252471792}, {"determining": "Max( Min( ( ( ( PN + FirstVNF_Mem ) - BR ) - ( CRS / MDR ) ) ,PN ),ARS )", "choosing": "( Min( Max( Max( ( MUC * MUR ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + MUC ),( RRSe - MUC ) ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe + MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "Max( ( ( BR * Min( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem * ( ( FirstVNF_RAM / BR ) * FirstVNF_Mem_Server ) ) ) ,Max( PN,( BR + ARS ) ) ) ) / FirstVNF_RAM ),( Min( ( PN + ( FirstVNF_RAM * ( ( ARS / PN ) + FirstVNF_Mem ) ) ) ,FirstVNF_Mem ) * AMS ) )", "choosing": "( Min( Max( ( ( MUR * MUR ) - MUM ),( MUC / Max( ( ( ( MUC - RMSe ) + RRSe ) + RRSe ),MUC ) ) ) ,( ( MUR - MLU ) + MUR ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.08464566929133858, "obj2": 0.8477447492113149}, {"determining": "( Min( Max( FirstVNF_Mem_Server,MDR ) ,RRS ) * Min( ( MDR - CRS ) ,( Max( FirstVNF_Mem_Server,Const ) + FirstVNF_CPU ) ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( CS + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( Min( MUM ,RMSe ) ,DS ) ) )", "obj1": 0.12401574803149606, "obj2": 0.753347088554585}, {"determining": "Max( Min( ( RRS / FirstVNF_CPU ) ,( ( ( Const - Const ) + FirstVNF_RAM_Server ) * ( MDR + ( ( MDR - Const ) - ( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( RRS + FirstVNF_RAM_Server ) ) * Const ) ) ) ) ),( ( ACS / ( ( MDR * ARS ) / PN ) ) - Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUC + MUR ),( RCSe / MUR ) ) / ( ( ( ( ( ( MUC + ( RRSe * RRSe ) ) / MLU ) * Min( Max( ( CS + MUC ),DS ) ,DS ) ) + RRSe ) + ( ( CS * RMSe ) + Max( MUM,MUC ) ) ) + Min( MUC ,DS ) ) )", "obj1": 0.15354330708661418, "obj2": 0.7114367936177695}, {"determining": "Max( ( ( Min( ( ( Max( FirstVNF_Mem_Server,Const ) + FirstVNF_CPU ) + ( FirstVNF_RAM * ( ( FirstVNF_RAM_Server / PN ) + FirstVNF_Mem ) ) ) ,FirstVNF_Mem ) * AMS ) / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( ( MUC / RMSe ) / ( CS / RCSe ) ) / ( MUC + Min( ( MUC + DS ) ,DS ) ) ) ) / Min( ( RRSe + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7898236536834559}, {"determining": "Max( ( ( Min( ( PN + ( FirstVNF_RAM * ( ( FirstVNF_RAM_Server / PN ) + FirstVNF_Mem ) ) ) ,FirstVNF_Mem ) * AMS ) / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( ( MUC / RMSe ) / ( CS / RCSe ) ) / ( MUC + Min( ( MUC + DS ) ,DS ) ) ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.11614173228346457, "obj2": 0.7794160985901053}, {"determining": "Max( ( ( FirstVNF_RAM_Server * AMS ) / FirstVNF_RAM ),( Min( Min( ( DDR - ( FirstVNF_Mem_Server / MRS ) ) ,AMS ) ,FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUM / MUC ),MUC ) / ( MUC + Min( ( ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) - Min( DS ,RCSe ) ) + RRSe ) + Min( RMSe ,RCSe ) ) ,DS ) ) )", "obj1": 0.13385826771653545, "obj2": 0.7440026758859773}, {"determining": "( ( ( FirstVNF_CPU_Server * ( RRS * DDR ) ) * Max( Max( BR,FirstVNF_CPU ),ARS ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * ( CS / RCSe ) ) ) / Min( CS ,DS ) )", "obj1": 0.08267716535433071, "obj2": 0.8562230139930868}, {"determining": "( ( Max( MDR,FirstVNF_Mem_Server ) - RRS ) * Min( ( ( FirstVNF_CPU_Server / ( FirstVNF_RAM - MDR ) ) / FirstVNF_CPU ) ,( MDR - CRS ) ) )", "choosing": "( Min( Max( ( ( ( MLU * MUR ) * MUC ) - MUM ),( CS / ( CS * CS ) ) ) ,( ( CS + RRSe ) + RRSe ) ) / Min( Min( Min( MUM ,RMSe ) ,DS ) ,( MLU + CS ) ) )", "obj1": 0.12401574803149606, "obj2": 0.753347088554585}, {"determining": "Max( ( ( Const * Max( FirstVNF_Mem_Server,MDR ) ) + ( FirstVNF_RAM_Server / FirstVNF_RAM ) ),AMS )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( ( MUC / ( MUR - MUR ) ) ,( MUR * MUC ) ) ) ) ) ) / Min( CS ,DS ) )", "obj1": 0.11023622047244094, "obj2": 0.7794742988899616}, {"determining": "Max( ARS,Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( ( MUC / ( MUR - MUR ) ) ,( MUR * MUC ) ) ) ) ) ) / Min( CS ,DS ) )", "obj1": 0.10433070866141732, "obj2": 0.7889634745386276}, {"determining": "Max( ( ( FirstVNF_CPU_Server * ( RRS * DDR ) ) * Max( Max( BR,FirstVNF_CPU ),ARS ) ),( ( ( Const * ( ( ACS / ARS ) / FirstVNF_Mem ) ) - ( BR / FirstVNF_RAM ) ) / BR ) )", "choosing": "( Min( Max( ( ( MUR * MUR ) - MUM ),( MUC / Max( ( ( ( MUC - RMSe ) + RRSe ) + RRSe ),MUC ) ) ) ,( ( MUR - MLU ) + MUR ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.08464566929133858, "obj2": 0.8477447492113149}, {"determining": "( ( Min( Const ,( AMS / ( RRS + ( ACS + ( FirstVNF_Mem_Server / RRS ) ) ) ) ) + Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - ( ( ACS * ( ( AMS - FirstVNF_RAM ) / ( Const * FirstVNF_Mem ) ) ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( MLU + ( Min( RMSe ,Min( MLU ,RMSe ) ) + RMSe ) ) ,Min( MUC ,DS ) ) / Min( Max( ( ( MUR * MUR ) - MUM ),( MUC / Max( ( ( ( MUC - RMSe ) + RRSe ) + RRSe ),RRSe ) ) ) ,( ( MUR - MLU ) + MUR ) ) )", "obj1": 0.08464566929133858, "obj2": 0.8477447492113149}, {"determining": "Min( Min( Max( Max( ARS,FirstVNF_CPU_Server ),Max( PN,PN ) ) ,Min( Min( Const ,PN ) ,CRS ) ) ,Min( FirstVNF_RAM_Server ,Const ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + MUC ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "Max( ( ( Min( ( PN + ( Min( FirstVNF_CPU_Server ,MRS ) + FirstVNF_RAM ) ) ,FirstVNF_Mem ) * AMS ) / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( ( ( ( MUC - RMSe ) + Max( MUC,MUM ) ) + RRSe ),MUC ) ) ) ,( ( ( MUC - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Min( DS ,RCSe ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8587079020390145}, {"determining": "Max( ARS,Min( ( PN / RRS ) ,( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * ( ( ( MDR - Const ) - ( Const * ( ( FirstVNF_CPU_Server + ACS ) / ( RRS + Const ) ) ) ) + MDR ) ) ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * ( CS / RCSe ) ) ) / Min( CS ,DS ) )", "obj1": 0.08267716535433071, "obj2": 0.8562230139930868}, {"determining": "( ( Min( ( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) + ( ( AMS * PN ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( ( MUC / ( MUR - MUR ) ) ,( MUR * MUC ) ) ) ) ) ) / Min( CS ,DS ) )", "obj1": 0.10826771653543307, "obj2": 0.782965388668698}, {"determining": "Max( ( FirstVNF_RAM / ( FirstVNF_RAM_Server * AMS ) ),( ( Min( ( PN - Min( PN ,CRS ) ) ,( ( Const - RRS ) / Max( PN,MRS ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( ( RRSe + ( ( MUC - RMSe ) + RRSe ) ),MUC ) ) ) ,( ( ( MUC - RMSe ) + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) / Min( DS ,( MLU / MUR ) ) ) + RRSe ) ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.09448818897637795, "obj2": 0.8113878346222425}, {"determining": "Max( ( FirstVNF_RAM / ( FirstVNF_RAM_Server * AMS ) ),( ( Min( ( PN - Min( PN ,CRS ) ) ,( ( Const - RRS ) / Max( PN,MRS ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( ( RRSe + ( ( MUC - RMSe ) + RRSe ) ),MUC ) ) ) ,( ( ( MUC - RMSe ) + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) / Min( DS ,( MLU / MUR ) ) ) + RRSe ) ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.09448818897637795, "obj2": 0.8113878346222425}, {"determining": "Max( ( FirstVNF_RAM / ( FirstVNF_RAM_Server * AMS ) ),( ( Min( ( PN - Min( PN ,CRS ) ) ,( ( Const - RRS ) / Max( PN,MRS ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( ( RRSe + ( ( MUC - RMSe ) + RRSe ) ),MUC ) ) ) ,( ( ( MUC - RMSe ) + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) / Min( DS ,( MLU / MUR ) ) ) + RRSe ) ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.09448818897637795, "obj2": 0.8113878346222425}, {"determining": "Max( ( FirstVNF_RAM / ( FirstVNF_RAM_Server * AMS ) ),( ( Min( ( PN - Min( PN ,CRS ) ) ,( ( Const - RRS ) / Max( PN,MRS ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( ( RRSe + ( ( MUC - RMSe ) + RRSe ) ),MUC ) ) ) ,( ( ( MUC - RMSe ) + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) / Min( DS ,( MLU / MUR ) ) ) + RRSe ) ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.09448818897637795, "obj2": 0.8113878346222425}, {"determining": "Max( ( Const - PN ),( ( ( Const * ( ( ACS / ARS ) / FirstVNF_Mem ) ) - ( BR / FirstVNF_RAM ) ) / BR ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( CS + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( Min( MUM ,RMSe ) ,DS ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7584708993567366}, {"determining": "Max( ( FirstVNF_RAM_Server / ( Min( AMS ,ACS ) * FirstVNF_RAM ) ),( ( ( BR * ( ( ACS / ARS ) / FirstVNF_Mem ) ) - ( BR / FirstVNF_RAM ) ) / BR ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( RRSe + CS ) + MUR ) ) / Min( ( MLU + CS ) ,( ( MLU * RCSe ) + RMSe ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7584708993567366}, {"determining": "Max( ( ( FirstVNF_CPU_Server * ( RRS * DDR ) ) * Max( Max( BR,FirstVNF_CPU ),ARS ) ),( ( ( Const * ( ( ACS / ARS ) / FirstVNF_Mem ) ) - ( BR / FirstVNF_RAM ) ) / BR ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + RRSe ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( RRS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + MUC ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "Max( Min( PN ,RRS ),( ( RRS / FirstVNF_CPU ) * ( ( ( Const - Const ) + FirstVNF_RAM_Server ) * ( MDR + ( ( MDR - Const ) - ( ( ( FirstVNF_Mem + ACS ) / ( RRS + Const ) ) * Const ) ) ) ) ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + RRSe ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + RMSe ) ,Min( RMSe ,CS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "( ( ( FirstVNF_CPU_Server * ( RRS * DDR ) ) * Max( Max( BR,FirstVNF_CPU ),ARS ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( ( ( ( MUC + ( RRSe * RCSe ) ) / MLU ) * Min( Max( ( CS + MUC ),DS ) ,DS ) ) + RRSe ) + ( ( CS * MUM ) + Max( MUM,MUC ) ) ) + Min( MUC ,DS ) ) )", "obj1": 0.15354330708661418, "obj2": 0.7114367936177695}, {"determining": "Max( ( ( ACS + ( ( MDR * ARS ) / PN ) ) - Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ),Min( ( RRS / FirstVNF_CPU ) ,( ( ( AMS + ( FirstVNF_Mem_Server - ( AMS * ( CRS + FirstVNF_CPU ) ) ) ) + FirstVNF_RAM_Server ) * ( FirstVNF_CPU / Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( MUR / RCSe ) ,( ( ( Max( RCSe,Max( DS,( CS + RRSe ) ) ) - CS ) + MUM ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,( MUC * RMSe ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "Max( ( ( Max( Min( BR ,FirstVNF_Mem ),MDR ) * Const ) + ( FirstVNF_RAM_Server / ( PN / RRS ) ) ),RRS )", "choosing": "( Min( ( MLU + CS ) ,Min( MUC ,Max( MUM,( Max( RCSe,( ( DS / MUR ) * MUR ) ) / Min( MLU ,MUC ) ) ) ) ) / Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( ( ( ( MUC - RMSe ) + RRSe ) + RRSe ),MUC ) ) ) ,( ( ( MUC - RMSe ) + ( ( ( ( RCSe + MUC ) - ( RRSe + RRSe ) ) / Min( DS ,RCSe ) ) + RRSe ) ) + RRSe ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8137151835735544}, {"determining": "( Max( ( Const * ( AMS / ( ( ( FirstVNF_Mem / BR ) + ( RRS / RRS ) ) + RRS ) ) ),Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( ( ( ( ACS + ( RRS / RRS ) ) * ( ( RRS - MDR ) - BR ) ) - ( BR / FirstVNF_RAM ) ) / ( MDR / DDR ) ) )", "choosing": "( Max( ( ( MUC - MUM ) + MUM ),RRSe ) / ( ( ( ( ( ( CS + MUC ) / MLU ) * Min( Max( ( CS + RMSe ),DS ) ,DS ) ) + RRSe ) + ( Max( MUM,MUC ) + ( CS * MUM ) ) ) + Min( MUC ,DS ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7015482666964469}, {"determining": "( Min( Max( FirstVNF_Mem_Server,MDR ) ,RRS ) * Min( ( MDR - CRS ) ,( Max( FirstVNF_Mem_Server,Const ) + FirstVNF_CPU ) ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( CS + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( Min( MUM ,RMSe ) ,DS ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7530576995889895}, {"determining": "( ( ( ( FirstVNF_RAM - RRS ) / MRS ) / RRS ) * Min( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) + FirstVNF_CPU ) ,( MDR - CRS ) ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( CS + Max( MUR,RRSe ) ) + RRSe ) ) / ( Min( CS ,RCSe ) + RRSe ) )", "obj1": 0.1220472440944882, "obj2": 0.755229323017348}, {"determining": "( ( ( ( FirstVNF_RAM - RRS ) / MRS ) / RRS ) * Min( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) + FirstVNF_CPU ) ,( MDR - CRS ) ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( CS + Max( MUR,RRSe ) ) + RRSe ) ) / ( Min( CS ,RCSe ) + RRSe ) )", "obj1": 0.1220472440944882, "obj2": 0.755229323017348}, {"determining": "( Min( ( MRS / ( FirstVNF_RAM - RRS ) ) ,RRS ) * Min( ( Max( FirstVNF_Mem_Server,Const ) + FirstVNF_CPU ) ,( MDR - CRS ) ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( CS + Max( MUR,RRSe ) ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( Min( MUM ,RMSe ) ,DS ) ) )", "obj1": 0.1220472440944882, "obj2": 0.755229323017348}, {"determining": "( ( Min( ( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( ( ( ( MUC - RMSe ) + RRSe ) + RRSe ),MUC ) ) ) ,( ( ( MUC - RMSe ) + Min( ( Max( ( RRSe - MUM ),Min( MUR ,DS ) ) + CS ) ,Min( MUC ,DS ) ) ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.08858267716535433, "obj2": 0.8315809670104248}, {"determining": "Max( ( FirstVNF_RAM / ( FirstVNF_RAM_Server * AMS ) ),( ( Min( ( PN - Min( PN ,CRS ) ) ,( ( Const - RRS ) / Max( PN,MRS ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( ( RRSe + ( ( MUC - RMSe ) + RRSe ) ),MUC ) ) ) ,( ( ( MUC - RMSe ) + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) / Min( DS ,( MLU / MUR ) ) ) + RRSe ) ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.09448818897637795, "obj2": 0.8113878346222425}, {"determining": "Max( ( Const - FirstVNF_RAM_Server ),( FirstVNF_Mem_Server / DDR ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( ( ( ( MUC + ( RRSe * RCSe ) ) / MLU ) * Min( MUR ,DS ) ) + RRSe ) + ( ( CS * MUM ) + Max( MUM,( MUC / ( MUR - MUR ) ) ) ) ) + Min( MUC ,DS ) ) )", "obj1": 0.13582677165354332, "obj2": 0.7376260419142033}, {"determining": "( ( Min( ( ( FirstVNF_CPU / MDR ) / MRS ) ,PN ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( ( AMS * FirstVNF_Mem ) - ( FirstVNF_Mem_Server + CRS ) ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( ( MUC / ( MUR - MUR ) ) ,( MUR * MUC ) ) ) ) ) ) / Min( CS ,DS ) )", "obj1": 0.11023622047244094, "obj2": 0.7794742988899616}], "15": [{"determining": "Min( ( RRS - DDR ) ,Min( FirstVNF_RAM_Server ,AMS ) )", "choosing": "( ( MLU + ( RCSe + MUM ) ) / ( CS * ( RCSe - ( RRSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Const - PN ),( BR / ( ( Const * ( ( RRS - MDR ) - BR ) ) - ( BR / ( Const * FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( MUM / ( MUR * ( ( RRSe / MUM ) * MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + MUC ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( Max( RRSe,MUM ),Max( CS,MUR ) ) + CS ) ,Min( DS ,MUC ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "Max( ( Const - PN ),( ( ( Const * ( ( ACS / ( RRS / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) / FirstVNF_Mem ) ) - ( BR / FirstVNF_RAM ) ) / Max( ( ( ACS * ( FirstVNF_Mem_Server + ARS ) ) / RRS ),Max( DDR,Max( ( ARS + CRS ),ARS ) ) ) ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( RRSe / ( MUR - MUR ) ) ) ,( ( ( Max( ( RRSe - MLU ),Max( ( MUC + MUR ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( MUM - RRSe ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "Max( ( ( FirstVNF_CPU_Server * ( RRS * DDR ) ) * Max( Max( BR,FirstVNF_CPU ),ARS ) ),( ( ( Const * ( ( ACS / ARS ) / FirstVNF_Mem ) ) - ( BR / FirstVNF_RAM ) ) / BR ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + RRSe ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "( ( ( FirstVNF_CPU_Server * ( RRS * DDR ) ) * Max( Max( BR,FirstVNF_CPU ),ARS ) ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( DS - MUC ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe / MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "( ( Min( ( AMS / ( FirstVNF_CPU + ACS ) ) ,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) + ( ( AMS * PN ) - ( ARS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( RCSe - DS ) * RRSe ) / ( CS * ( Max( MUM,( DS / DS ) ) + MUM ) ) ) + MUM ),RRSe ) / ( ( ( ( ( ( MUC + ( RRSe * RCSe ) ) / MLU ) * Min( MUR ,DS ) ) + RRSe ) + ( ( CS * MUM ) + Max( MUM,( MUC / ( MUR - MUR ) ) ) ) ) + Min( MUC ,RMSe ) ) )", "obj1": 0.1279527559055118, "obj2": 0.7464478523929874}, {"determining": "Max( ( ( FirstVNF_RAM_Server * AMS ) / FirstVNF_RAM ),( ( Min( ( PN - Min( PN ,( Const - FirstVNF_CPU_Server ) ) ) ,AMS ) - FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( ( ( ( CS - RMSe ) + RRSe ) + RRSe ),MUC ) ) ) ,( ( ( MUC - RMSe ) + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) / Min( DS ,RCSe ) ) + RRSe ) ) + RRSe ) ) / Min( ( MLU + ( Max( CS,RCSe ) - Max( RRSe,( Max( DS,RCSe ) + RCSe ) ) ) ) ,Min( MUC ,DS ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8137151835735544}, {"determining": "Max( ( ( FirstVNF_RAM_Server * AMS ) / FirstVNF_RAM ),( ( Min( Max( FirstVNF_Mem_Server,MDR ) ,AMS ) - FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( ( ( ( MUC - RMSe ) + RRSe ) + RRSe ),MUC ) ) ) ,( ( ( MUC / ( MUR - MUR ) ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.09645669291338582, "obj2": 0.8091991788850409}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( RRS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + MUC ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "( ( ( CRS * MDR ) - Min( Const ,CRS ) ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + MUC ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( RRS * ( ACS + ( FirstVNF_Mem_Server / RRS ) ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( ( ( ( MUC - RMSe ) + RRSe ) + RRSe ),MUC ) ) ) ,( ( ( MUC - RMSe ) + Min( ( Max( ( RRSe - MUM ),Min( MUR ,DS ) ) + CS ) ,Min( MUC ,DS ) ) ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.08858267716535433, "obj2": 0.8315809670104248}, {"determining": "Max( ( ( Min( ( FirstVNF_Mem + ( FirstVNF_RAM * ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) + FirstVNF_Mem ) ) ) ,FirstVNF_Mem ) * AMS ) / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS / CS ) ) ) ,( ( ( ( MUC - MUM ) + Min( RRSe ,RCSe ) ) / ( CS / RCSe ) ) / ( MUC + Min( ( MUC + DS ) ,DS ) ) ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7898236536834559}, {"determining": "Max( ( PN - Const ),( ( ( Min( RRS ,( ( MDR * RRS ) * FirstVNF_CPU_Server ) ) * ( ( ( ACS / Const ) / ARS ) - FirstVNF_Mem ) ) - ( CRS + MRS ) ) / BR ) )", "choosing": "( Min( Max( Max( ( MUC * MUR ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + CS ),Min( RMSe ,MUR ) ) ) - RMSe ) + ( Min( RRSe ,MLU ) * CS ) ) + RRSe ) ) / Min( ( ( ( RRSe - MUM ) / Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "( ( Max( Max( BR,DDR ),ARS ) * ( FirstVNF_CPU_Server * ( Min( FirstVNF_CPU ,MDR ) * DDR ) ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) - FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( DS,( CS + MUC ) ) ) - RMSe ) + RRSe ) + MUM ) ) / Min( Min( MLU ,CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "Max( ( ( FirstVNF_RAM_Server - AMS ) / FirstVNF_RAM ),( ( Max( FirstVNF_RAM_Server,( RRS / Max( MRS,( Max( FirstVNF_RAM_Server,RRS ) + Const ) ) ) ) - FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( ( RRSe + ( ( MUC - RMSe ) + RRSe ) ),MUC ) ) ) ,( ( ( MUC - RMSe ) + Min( ( ( MUM / ( RMSe * MUC ) ) * Min( RCSe ,( MUM / MUC ) ) ) ,( MUM - MUC ) ) ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8137151835735544}, {"determining": "Max( ( Const - PN ),( ( ( Const * ( ( ACS / ARS ) / FirstVNF_Mem ) ) - ( BR / FirstVNF_RAM ) ) / BR ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + MUC ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "Max( ( ( FirstVNF_CPU_Server * ( RRS * DDR ) ) * Max( Max( BR,FirstVNF_CPU ),ARS ) ),( ( ( Const * ( ( ACS / ARS ) / FirstVNF_Mem ) ) - ( BR / FirstVNF_RAM ) ) / BR ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + RRSe ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "( ( ( FirstVNF_CPU_Server * ( RRS * DDR ) ) * Max( Max( BR,FirstVNF_CPU ),ARS ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) - FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + MUC ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "( ( Min( Const ,( AMS / ( ( ( ( AMS * PN ) - ( CRS + FirstVNF_Mem_Server ) ) + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( ( AMS * PN ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + MUC ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "Max( ( ( BR * Min( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem * ( ( FirstVNF_RAM / BR ) * FirstVNF_Mem_Server ) ) ) ,Max( PN,( BR + ARS ) ) ) ) / FirstVNF_RAM ),( Min( ( PN + ( FirstVNF_RAM * ( ( ARS / PN ) + FirstVNF_Mem ) ) ) ,FirstVNF_Mem ) * AMS ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + RRSe ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "( ( Min( ( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( ( ( ( MUC - RMSe ) + RRSe ) + RRSe ),MUC ) ) ) ,( ( ( MUC - RMSe ) + Min( ( Max( ( RRSe - MUM ),Min( MUR ,DS ) ) + CS ) ,Min( MUC ,DS ) ) ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.08858267716535433, "obj2": 0.8315809670104248}, {"determining": "Max( ( Const - PN ),( ( ( Const * ( Min( ACS ,ARS ) / FirstVNF_CPU_Server ) ) - ( ( ACS + ( CRS / ( ( FirstVNF_CPU_Server / CRS ) / DDR ) ) ) + FirstVNF_CPU ) ) / BR ) )", "choosing": "( Min( ( MLU + CS ) ,Min( Min( MUM ,Min( ( MUR / Min( CS ,Min( MUC ,MUR ) ) ) ,RMSe ) ) ,DS ) ) / Min( ( RCSe / MUC ) ,( MUM / ( ( MUR * MLU ) - MUC ) ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7584708993567366}, {"determining": "Max( ( FirstVNF_RAM / ( FirstVNF_RAM_Server * AMS ) ),( ( Min( ( PN - Min( PN ,CRS ) ) ,( ( Const - RRS ) / Max( PN,MRS ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( ( RRSe + ( ( MUC - RMSe ) + RRSe ) ),MUC ) ) ) ,( ( ( MUC - RMSe ) + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) / Min( DS ,( MLU / MUR ) ) ) + RRSe ) ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8137151835735544}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( AMS - RRS ) ,( ( Max( CRS,PN ) - ( FirstVNF_Mem_Server + PN ) ) + Max( FirstVNF_RAM_Server,Max( BR,FirstVNF_Mem_Server ) ) ) ) / FirstVNF_Mem_Server ) )", "choosing": "( Min( ( Max( Min( CS ,MUR ),Max( CS,MUR ) ) * CS ) ,Min( MUC ,DS ) ) / Min( Max( Max( ( MUR * ( MUM / ( MUM / ( MUM * CS ) ) ) ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + MUM ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "( Min( Max( FirstVNF_Mem_Server,MDR ) ,RRS ) * Min( ( MDR - CRS ) ,( Max( ( ( ( MRS + FirstVNF_CPU ) - RRS ) + ACS ),Const ) + FirstVNF_CPU ) ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - ( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( ( MUC / ( DS + MUR ) ) ,( MUR / MUC ) ) ) ),( MUC / ( CS * CS ) ) ) ,( ( CS + RRSe ) + RRSe ) ) / Min( ( CS + MLU ) ,Min( Min( MUM ,RMSe ) ,DS ) ) )", "obj1": 0.12401574803149606, "obj2": 0.753347088554585}, {"determining": "( Min( Max( MDR,FirstVNF_Mem_Server ) ,RRS ) * Min( ( MDR - CRS ) ,( ( FirstVNF_CPU_Server / DDR ) / FirstVNF_CPU ) ) )", "choosing": "( ( CS / Max( MUM,RMSe ) ) / Min( ( MLU + CS ) ,Min( Min( RRSe ,RMSe ) ,DS ) ) )", "obj1": 0.12401574803149606, "obj2": 0.753347088554585}, {"determining": "Max( ( Const - PN ),( ( ( Const * ( ( ACS / ARS ) / FirstVNF_Mem ) ) - ( BR / FirstVNF_RAM ) ) / BR ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( CS + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( Min( MUM ,RMSe ) ,DS ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7584708993567366}, {"determining": "Max( ( ( FirstVNF_CPU_Server * ( RRS * DDR ) ) * Max( Max( BR,FirstVNF_CPU ),ARS ) ),( ( ( Const * ( ( ACS / ARS ) / FirstVNF_Mem ) ) - ( BR / FirstVNF_RAM ) ) / BR ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + RRSe ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "( ( ( ( Max( Max( MDR,( DDR - DDR ) ),FirstVNF_Mem_Server ) / MDR ) * ( RRS * DDR ) ) * Max( Max( BR,FirstVNF_CPU ),ARS ) ) - ( ( FirstVNF_Mem_Server + RRS ) - FirstVNF_RAM_Server ) )", "choosing": "( Min( ( Max( Min( ( RRSe + ( DS + Min( RMSe ,RCSe ) ) ) ,RRSe ),RMSe ) / ( ( ( RCSe + MUC ) - MUR ) * Max( ( CS / ( Max( MLU,MLU ) * DS ) ),RMSe ) ) ) ,DS ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + MUR ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "Max( ARS,Min( ( PN / RRS ) ,( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * ( ( ( FirstVNF_RAM_Server * AMS ) - ( Const * ( ( FirstVNF_CPU_Server + ACS ) / ( RRS + Const ) ) ) ) + MDR ) ) ) )", "choosing": "( ( ( ( MUC + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) - Min( DS ,RCSe ) ) + RRSe ) ) / CS ) + ( MUR * ( CS / RCSe ) ) ) / Min( CS ,DS ) )", "obj1": 0.08661417322834646, "obj2": 0.8352242193439763}, {"determining": "Max( Min( ( ( ( PN + FirstVNF_Mem ) - BR ) - ( CRS / MDR ) ) ,PN ),ARS )", "choosing": "( Min( Max( Max( ( MUC * MUR ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + MUC ),( RRSe - MUC ) ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe + MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "( Min( Max( FirstVNF_Mem_Server,MDR ) ,RRS ) * Min( ( MDR - CRS ) ,( Max( FirstVNF_Mem_Server,Const ) + FirstVNF_CPU ) ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( CS + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( Min( MUM ,RMSe ) ,DS ) ) )", "obj1": 0.12401574803149606, "obj2": 0.753347088554585}, {"determining": "Max( ( ( Min( ( ( Max( FirstVNF_Mem_Server,Const ) + FirstVNF_CPU ) + ( FirstVNF_RAM * ( ( FirstVNF_RAM_Server / PN ) + FirstVNF_Mem ) ) ) ,FirstVNF_Mem ) * AMS ) / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( ( MUC / RMSe ) / ( CS / RCSe ) ) / ( MUC + Min( ( MUC + DS ) ,DS ) ) ) ) / Min( ( RRSe + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.10236220472440945, "obj2": 0.7898236536834559}, {"determining": "( ( Max( MDR,FirstVNF_Mem_Server ) - RRS ) * Min( ( ( FirstVNF_CPU_Server / ( FirstVNF_RAM - MDR ) ) / FirstVNF_CPU ) ,( MDR - CRS ) ) )", "choosing": "( Min( Max( ( ( ( MLU * MUR ) * MUC ) - MUM ),( CS / ( CS * CS ) ) ) ,( ( CS + RRSe ) + RRSe ) ) / Min( Min( Min( MUM ,RMSe ) ,DS ) ,( MLU + CS ) ) )", "obj1": 0.12401574803149606, "obj2": 0.753347088554585}, {"determining": "Max( ARS,Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( ( MUC / ( MUR - MUR ) ) ,( MUR * MUC ) ) ) ) ) ) / Min( CS ,DS ) )", "obj1": 0.10433070866141732, "obj2": 0.7889634745386276}, {"determining": "Min( Min( Max( Max( ARS,FirstVNF_CPU_Server ),Max( PN,PN ) ) ,Min( Min( Const ,PN ) ,CRS ) ) ,Min( FirstVNF_RAM_Server ,Const ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + MUC ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "Max( ( FirstVNF_RAM / ( FirstVNF_RAM_Server * AMS ) ),( ( Min( ( PN - Min( PN ,CRS ) ) ,( ( Const - RRS ) / Max( PN,MRS ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( ( RRSe + ( ( MUC - RMSe ) + RRSe ) ),MUC ) ) ) ,( ( ( MUC - RMSe ) + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) / Min( DS ,( MLU / MUR ) ) ) + RRSe ) ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.09448818897637795, "obj2": 0.8113878346222425}, {"determining": "Max( ( FirstVNF_RAM / ( FirstVNF_RAM_Server * AMS ) ),( ( Min( ( PN - Min( PN ,CRS ) ) ,( ( Const - RRS ) / Max( PN,MRS ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( ( RRSe + ( ( MUC - RMSe ) + RRSe ) ),MUC ) ) ) ,( ( ( MUC - RMSe ) + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) / Min( DS ,( MLU / MUR ) ) ) + RRSe ) ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.09448818897637795, "obj2": 0.8113878346222425}, {"determining": "Max( ( FirstVNF_RAM / ( FirstVNF_RAM_Server * AMS ) ),( ( Min( ( PN - Min( PN ,CRS ) ) ,( ( Const - RRS ) / Max( PN,MRS ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( ( RRSe + ( ( MUC - RMSe ) + RRSe ) ),MUC ) ) ) ,( ( ( MUC - RMSe ) + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) / Min( DS ,( MLU / MUR ) ) ) + RRSe ) ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.09448818897637795, "obj2": 0.8113878346222425}, {"determining": "Max( ( FirstVNF_RAM / ( FirstVNF_RAM_Server * AMS ) ),( ( Min( ( PN - Min( PN ,CRS ) ) ,( ( Const - RRS ) / Max( PN,MRS ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( ( RRSe + ( ( MUC - RMSe ) + RRSe ) ),MUC ) ) ) ,( ( ( MUC - RMSe ) + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) / Min( DS ,( MLU / MUR ) ) ) + RRSe ) ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.09448818897637795, "obj2": 0.8113878346222425}, {"determining": "Max( ( Const - PN ),( ( ( Const * ( ( ACS / ARS ) / FirstVNF_Mem ) ) - ( BR / FirstVNF_RAM ) ) / BR ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( CS + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( Min( MUM ,RMSe ) ,DS ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7584708993567366}, {"determining": "Max( ( FirstVNF_RAM_Server / ( Min( AMS ,ACS ) * FirstVNF_RAM ) ),( ( ( BR * ( ( ACS / ARS ) / FirstVNF_Mem ) ) - ( BR / FirstVNF_RAM ) ) / BR ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( RRSe + CS ) + MUR ) ) / Min( ( MLU + CS ) ,( ( MLU * RCSe ) + RMSe ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7584708993567366}, {"determining": "Max( ( ( FirstVNF_CPU_Server * ( RRS * DDR ) ) * Max( Max( BR,FirstVNF_CPU ),ARS ) ),( ( ( Const * ( ( ACS / ARS ) / FirstVNF_Mem ) ) - ( BR / FirstVNF_RAM ) ) / BR ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + RRSe ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( RRS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + MUC ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "Max( Min( PN ,RRS ),( ( RRS / FirstVNF_CPU ) * ( ( ( Const - Const ) + FirstVNF_RAM_Server ) * ( MDR + ( ( MDR - Const ) - ( ( ( FirstVNF_Mem + ACS ) / ( RRS + Const ) ) * Const ) ) ) ) ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + RRSe ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + RMSe ) ,Min( RMSe ,CS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "Max( ( ( ACS + ( ( MDR * ARS ) / PN ) ) - Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ),Min( ( RRS / FirstVNF_CPU ) ,( ( ( AMS + ( FirstVNF_Mem_Server - ( AMS * ( CRS + FirstVNF_CPU ) ) ) ) + FirstVNF_RAM_Server ) * ( FirstVNF_CPU / Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( MUR / RCSe ) ,( ( ( Max( RCSe,Max( DS,( CS + RRSe ) ) ) - CS ) + MUM ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,( MUC * RMSe ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "Max( ( ( Max( Min( BR ,FirstVNF_Mem ),MDR ) * Const ) + ( FirstVNF_RAM_Server / ( PN / RRS ) ) ),RRS )", "choosing": "( Min( ( MLU + CS ) ,Min( MUC ,Max( MUM,( Max( RCSe,( ( DS / MUR ) * MUR ) ) / Min( MLU ,MUC ) ) ) ) ) / Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( ( ( ( MUC - RMSe ) + RRSe ) + RRSe ),MUC ) ) ) ,( ( ( MUC - RMSe ) + ( ( ( ( RCSe + MUC ) - ( RRSe + RRSe ) ) / Min( DS ,RCSe ) ) + RRSe ) ) + RRSe ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8137151835735544}, {"determining": "( Max( ( Const * ( AMS / ( ( ( FirstVNF_Mem / BR ) + ( RRS / RRS ) ) + RRS ) ) ),Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( ( ( ( ACS + ( RRS / RRS ) ) * ( ( RRS - MDR ) - BR ) ) - ( BR / FirstVNF_RAM ) ) / ( MDR / DDR ) ) )", "choosing": "( Max( ( ( MUC - MUM ) + MUM ),RRSe ) / ( ( ( ( ( ( CS + MUC ) / MLU ) * Min( Max( ( CS + RMSe ),DS ) ,DS ) ) + RRSe ) + ( Max( MUM,MUC ) + ( CS * MUM ) ) ) + Min( MUC ,DS ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7015482666964469}, {"determining": "( ( ( ( FirstVNF_RAM - RRS ) / MRS ) / RRS ) * Min( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) + FirstVNF_CPU ) ,( MDR - CRS ) ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( CS + Max( MUR,RRSe ) ) + RRSe ) ) / ( Min( CS ,RCSe ) + RRSe ) )", "obj1": 0.1220472440944882, "obj2": 0.755229323017348}, {"determining": "( ( ( ( FirstVNF_RAM - RRS ) / MRS ) / RRS ) * Min( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) + FirstVNF_CPU ) ,( MDR - CRS ) ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( CS + Max( MUR,RRSe ) ) + RRSe ) ) / ( Min( CS ,RCSe ) + RRSe ) )", "obj1": 0.1220472440944882, "obj2": 0.755229323017348}, {"determining": "( Min( ( MRS / ( FirstVNF_RAM - RRS ) ) ,RRS ) * Min( ( Max( FirstVNF_Mem_Server,Const ) + FirstVNF_CPU ) ,( MDR - CRS ) ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( CS + Max( MUR,RRSe ) ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( Min( MUM ,RMSe ) ,DS ) ) )", "obj1": 0.1220472440944882, "obj2": 0.755229323017348}, {"determining": "( ( Min( ( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( ( ( ( MUC - RMSe ) + RRSe ) + RRSe ),MUC ) ) ) ,( ( ( MUC - RMSe ) + Min( ( Max( ( RRSe - MUM ),Min( MUR ,DS ) ) + CS ) ,Min( MUC ,DS ) ) ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.08858267716535433, "obj2": 0.8315809670104248}, {"determining": "Max( ( FirstVNF_RAM / ( FirstVNF_RAM_Server * AMS ) ),( ( Min( ( PN - Min( PN ,CRS ) ) ,( ( Const - RRS ) / Max( PN,MRS ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( ( RRSe + ( ( MUC - RMSe ) + RRSe ) ),MUC ) ) ) ,( ( ( MUC - RMSe ) + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) / Min( DS ,( MLU / MUR ) ) ) + RRSe ) ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.09448818897637795, "obj2": 0.8113878346222425}, {"determining": "( Min( ( MRS / ( FirstVNF_RAM - RRS ) ) ,RRS ) * Min( ( Max( FirstVNF_Mem_Server,Const ) + FirstVNF_CPU ) ,( MDR - CRS ) ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( CS + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( Min( MUM ,RMSe ) ,DS ) ) )", "obj1": 0.1220472440944882, "obj2": 0.755229323017348}, {"determining": "Max( ( Const - PN ),( ( ( Const * ( ( ACS / ARS ) / FirstVNF_Mem ) ) - ( BR / FirstVNF_RAM ) ) / BR ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( CS + Max( MUR,RRSe ) ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( Min( MUM ,RMSe ) ,DS ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7584708993567366}, {"determining": "Max( ( ( Min( ( PN + ( Min( FirstVNF_CPU_Server ,( Const - PN ) ) + FirstVNF_RAM ) ) ,FirstVNF_Mem ) * AMS ) / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( ( ( ( MUC + ( RRSe * RCSe ) ) / MLU ) * Min( MUR ,DS ) ) + RRSe ) + ( Max( RCSe,Max( ( CS + Min( CS ,DS ) ),DS ) ) - RMSe ) ) + Min( MUC ,DS ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7529260450823776}, {"determining": "Max( ( Const - FirstVNF_RAM_Server ),( FirstVNF_Mem_Server / DDR ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( ( ( ( MUC + ( RRSe * RCSe ) ) / MLU ) * Min( MUR ,DS ) ) + RRSe ) + ( ( CS * MUM ) + Max( MUM,( MUC / ( MUR - MUR ) ) ) ) ) + Min( MUC ,DS ) ) )", "obj1": 0.13188976377952755, "obj2": 0.7371525976543624}, {"determining": "( ( Min( ( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) + ( ( AMS * PN ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * ( CS / RCSe ) ) ) / Min( CS ,DS ) )", "obj1": 0.08267716535433071, "obj2": 0.8536239039960277}, {"determining": "Max( ( ( FirstVNF_CPU_Server * ( RRS * DDR ) ) * Max( Max( BR,FirstVNF_CPU ),ARS ) ),( ( ( Const * ( ( ACS / ARS ) / FirstVNF_Mem ) ) - ( BR / FirstVNF_RAM ) ) / BR ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + RRSe ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "Max( ( ( FirstVNF_CPU_Server * ( RRS * DDR ) ) * Max( Max( BR,FirstVNF_CPU ),ARS ) ),( ( ( Const * ( ( ACS / ARS ) / FirstVNF_Mem ) ) - ( BR / FirstVNF_RAM ) ) / BR ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + RRSe ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "( ( Min( Const ,( ( RRS * FirstVNF_Mem ) / ( ( ACS + ( CRS + PN ) ) + RRS ) ) ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( ( AMS * PN ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( ( ( ( MUC + ( RRSe * MUC ) ) / MLU ) * Min( MUR ,DS ) ) + RRSe ) + ( Max( RCSe,Max( ( CS + MUC ),DS ) ) - RMSe ) ) + Min( MUC ,DS ) ) )", "obj1": 0.1377952755905512, "obj2": 0.727328375127893}, {"determining": "Max( ( FirstVNF_RAM / ( FirstVNF_RAM_Server * AMS ) ),Max( ( Const - PN ),( ( ( Const * ( ( ACS / ARS ) / FirstVNF_Mem ) ) - ( BR / FirstVNF_RAM ) ) / BR ) ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( ( RRSe + ( ( MUC - RMSe ) + RRSe ) ),MUC ) ) ) ,( ( ( MUC - RMSe ) + ( ( ( ( MUC + MUC ) - ( RRSe + CS ) ) / Min( DS ,( MLU / MUR ) ) ) + RRSe ) ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.1062992125984252, "obj2": 0.7742817900170565}, {"determining": "Max( ( FirstVNF_RAM / ( FirstVNF_RAM_Server * AMS ) ),( ( Min( ( PN - Min( PN ,CRS ) ) ,( ( Const - RRS ) / Max( PN,MRS ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( CS + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( Min( MUM ,RMSe ) ,DS ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7584708993567366}, {"determining": "Max( ( Const - PN ),( ( ( Const * ( ( ACS / ARS ) / FirstVNF_Mem ) ) - ( BR / FirstVNF_RAM ) ) / BR ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( ( RRSe + ( ( MUC - RMSe ) + RRSe ) ),MUC ) ) ) ,( ( ( MUC - RMSe ) + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) / Min( DS ,( MLU / MUR ) ) ) + RRSe ) ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.09448818897637795, "obj2": 0.8113878346222425}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,MUC ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "Max( ( PN / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,( ( Max( CRS,PN ) - ( CRS + PN ) ) + Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,( RRS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * Max( Min( ( DS / MLU ) ,( MUC * RMSe ) ),( ( ( MUC / RMSe ) / ( CS / RCSe ) ) - Min( ( MUC / ( MUR - MUR ) ) ,( MUR * MUC ) ) ) ) ) ) / Min( CS ,DS ) )", "obj1": 0.10433070866141732, "obj2": 0.7889634745386276}, {"determining": "Max( ( ( BR * Min( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem * ( ( FirstVNF_RAM / BR ) * FirstVNF_Mem_Server ) ) ) ,Max( PN,( BR + ARS ) ) ) ) / FirstVNF_RAM ),( Min( ( PN + ( FirstVNF_RAM * ( ( ARS / PN ) + FirstVNF_Mem ) ) ) ,FirstVNF_Mem ) * AMS ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( ( RRSe + ( ( MUC - RMSe ) + RRSe ) ),MUC ) ) ) ,( ( ( MUC - RMSe ) + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) / Min( DS ,( MLU / MUR ) ) ) + RRSe ) ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.09448818897637795, "obj2": 0.8113878346222425}, {"determining": "Max( ( ( ( FirstVNF_Mem + ARS ) * ( RRS * DDR ) ) * Max( Max( BR,FirstVNF_CPU ),ARS ) ),( ( Min( ( PN - Min( PN ,CRS ) ) ,( ( Const - RRS ) / Max( PN,MRS ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( MUR,( MUR / RCSe ) ) ) ) ,( ( ( MUC - RMSe ) + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) / Min( DS ,( MLU / MUR ) ) ) + RRSe ) ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.0984251968503937, "obj2": 0.7967144561716916}, {"determining": "( Max( ( FirstVNF_RAM / ( FirstVNF_RAM_Server * AMS ) ),( ( Min( ( PN - Min( PN ,CRS ) ) ,( ( Const - RRS ) / Max( PN,MRS ) ) ) - MDR ) - FirstVNF_Mem_Server ) ) - ( Min( FirstVNF_Mem_Server ,ACS ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RCSe / CS ) + ( MUR * ( CS / RRSe ) ) ) / Min( CS ,DS ) )", "obj1": 0.08070866141732283, "obj2": 0.8547122046743372}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) * ( RRS * DDR ) ) * Max( Max( BR,FirstVNF_CPU ),ARS ) ) - ( Min( FirstVNF_Mem_Server ,ACS ) - FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( ( RRSe + ( ( MUC - RMSe ) + RRSe ) ),MUC ) ) ) ,( ( ( MUC - RMSe ) + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) / Min( DS ,( MLU / MUR ) ) ) + RRSe ) ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.09448818897637795, "obj2": 0.8113878346222425}, {"determining": "Max( ( Const - PN ),( ( ( Const * ( ( ACS / ARS ) / FirstVNF_Mem ) ) - ( BR / FirstVNF_RAM ) ) / BR ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( CS + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( Min( MUM ,RMSe ) ,DS ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7584708993567366}, {"determining": "Max( ( Const - PN ),( ( ( Const * ( ( ACS / ARS ) / FirstVNF_Mem ) ) - ( BR / FirstVNF_RAM ) ) / BR ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + MUC ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "( ( Min( Const ,( AMS / ( ( ACS + ( RRS / RRS ) ) + RRS ) ) ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( ( ( ( ACS + ( RRS / RRS ) ) * ( ( RRS - MDR ) - BR ) ) - ( BR / FirstVNF_RAM ) ) / BR ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + RRSe ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "Max( ( FirstVNF_RAM / ( FirstVNF_RAM_Server * AMS ) ),( ( Min( ( PN - Min( PN ,CRS ) ) ,( ( Const - RRS ) / Max( PN,MRS ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( ( RRSe + ( ( MUC - RMSe ) + RRSe ) ),MUC ) ) ) ,( ( ( MUC - RMSe ) + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) / Min( DS ,( MLU / MUR ) ) ) + RRSe ) ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.09448818897637795, "obj2": 0.8113878346222425}, {"determining": "Max( ARS,Min( ( ( ( PN + FirstVNF_Mem ) - BR ) - FirstVNF_RAM_Server ) ,RRS ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( CS + Max( MUR,RRSe ) ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( Min( MUM ,RMSe ) ,DS ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7584708993567366}, {"determining": "( FirstVNF_Mem_Server * Min( ( MDR - CRS ) ,( ( FirstVNF_CPU_Server / DDR ) / FirstVNF_CPU ) ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( CS + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( ( ( ( RCSe / CS ) + ( MUR * ( CS / RCSe ) ) ) / Min( CS ,DS ) ) ,DS ) ) )", "obj1": 0.11614173228346457, "obj2": 0.7607890535053432}, {"determining": "( Min( Max( MDR,FirstVNF_Mem_Server ) ,RRS ) * Min( ( MDR - CRS ) ,( ( FirstVNF_CPU_Server / DDR ) / FirstVNF_CPU ) ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( CS + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( Min( MUM ,RMSe ) ,DS ) ) )", "obj1": 0.12401574803149606, "obj2": 0.753347088554585}, {"determining": "( ( Min( Const ,( ( ( Const * ( ( ACS / ARS ) / FirstVNF_Mem ) ) - ( BR / FirstVNF_RAM ) ) / BR ) ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( ( AMS * PN ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Max( ( ( MUR * MUR ) - MUM ),( MUC / Max( ( ( ( MUC - RMSe ) + RRSe ) + RRSe ),Min( MUC ,DS ) ) ) ) ,( ( MUR - MLU ) + MUR ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.08464566929133858, "obj2": 0.8473073817785297}, {"determining": "( ( Min( Const ,( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( ( AMS * PN ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + MUC ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "( ( Min( ( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( ( ( ( MUC - RMSe ) + RRSe ) + RRSe ),MUC ) ) ) ,( ( ( MUC - RMSe ) + Min( ( Max( ( RRSe - MUM ),Min( MUR ,DS ) ) + CS ) ,Min( MUC ,DS ) ) ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.08858267716535433, "obj2": 0.8315809670104248}, {"determining": "Max( ( ( FirstVNF_CPU_Server * ( RRS * DDR ) ) * Max( Max( BR,FirstVNF_CPU ),ARS ) ),( ( ( Const * ( ( ACS / ARS ) / FirstVNF_Mem ) ) - ( BR / FirstVNF_RAM ) ) / BR ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( ( ( ( MUC - RMSe ) + RRSe ) + RRSe ),MUC ) ) ) ,( ( ( MUC / ( MUR - MUR ) ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.09645669291338582, "obj2": 0.8091991788850409}, {"determining": "Max( ( Const - PN ),( ( ( Const * ( ( ACS / ARS ) / FirstVNF_Mem ) ) - ( BR / FirstVNF_RAM ) ) / BR ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( CS + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( Min( MUM ,RMSe ) ,DS ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7584708993567366}, {"determining": "Max( ( Const - PN ),( ( ( Const * ( ( ACS / ARS ) / FirstVNF_Mem ) ) - ( BR / FirstVNF_RAM ) ) / BR ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + MUC ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "( ( Min( ( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( ( ( ( MUC - RMSe ) + RRSe ) + RRSe ),MUC ) ) ) ,( ( ( MUC - RMSe ) + Min( ( Max( ( RRSe - MUM ),Min( MUR ,DS ) ) + CS ) ,Min( MUC ,DS ) ) ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.08858267716535433, "obj2": 0.8315809670104248}, {"determining": "( PN - ( ( ( ( ACS + ( RRS / RRS ) ) * ( ( RRS - MDR ) - BR ) ) - ( BR / FirstVNF_RAM ) ) / ( MDR / DDR ) ) )", "choosing": "( Max( ( ( MUC - DS ) + MUM ),RRSe ) / ( ( ( ( ( ( CS + MUC ) / MLU ) * Min( ( MUR - MUR ) ,DS ) ) + RRSe ) + ( ( CS * MUM ) + Max( MUM,MUC ) ) ) + Min( MUC ,DS ) ) )", "obj1": 0.1437007874015748, "obj2": 0.70720318238207}, {"determining": "( ( ( Const * ( AMS / ( ( ACS + ( RRS / RRS ) ) + RRS ) ) ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( ( ( ( ACS + ( RRS / RRS ) ) * ( ( RRS - MDR ) - BR ) ) - ( BR / FirstVNF_RAM ) ) / ( MDR / DDR ) ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + MUC ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "Max( ( Const - PN ),( ( ( Const * ( ( ACS / ARS ) / FirstVNF_Mem ) ) - ( BR / FirstVNF_RAM ) ) / BR ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( CS + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( Min( MUM ,RMSe ) ,DS ) ) )", "obj1": 0.12007874015748031, "obj2": 0.757304914372739}, {"determining": "( Min( Max( MDR,FirstVNF_Mem_Server ) ,RRS ) * Min( ( MDR - CRS ) ,( ( FirstVNF_CPU_Server / DDR ) / FirstVNF_CPU ) ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( CS + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( Min( MUM ,RMSe ) ,DS ) ) )", "obj1": 0.12401574803149606, "obj2": 0.753347088554585}, {"determining": "( ( ( FirstVNF_CPU_Server * ( RRS * DDR ) ) * Max( Max( BR,FirstVNF_CPU ),ARS ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) - FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + MUC ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "( ( Min( Const ,( AMS / ( ( ACS + ( FirstVNF_Mem_Server / RRS ) ) + RRS ) ) ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( ( AMS * PN ) - ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( ( ( ( MUC + ( RRSe * RCSe ) ) / MLU ) * Min( MUR ,DS ) ) + RRSe ) + ( ( CS * MUM ) + Max( MUM,( MUC / ( MUR - MUR ) ) ) ) ) + Min( MUC ,DS ) ) )", "obj1": 0.13582677165354332, "obj2": 0.7365593887606456}, {"determining": "Max( ( ( BR * Min( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem * ( ( FirstVNF_RAM / BR ) * FirstVNF_Mem_Server ) ) ) ,Max( PN,( BR + ARS ) ) ) ) / FirstVNF_RAM ),( Min( ( PN + ( FirstVNF_RAM * ( ( ARS / PN ) + FirstVNF_Mem ) ) ) ,FirstVNF_Mem ) * AMS ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( CS + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( Min( MUM ,RMSe ) ,DS ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7584708993567366}, {"determining": "Max( ( ( ACS + ( ( MDR * ARS ) / PN ) ) - Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ),Min( ( RRS / FirstVNF_CPU ) ,( ( ( Const - Const ) + FirstVNF_RAM_Server ) * ( MDR + ( ( MDR - Const ) - ( ( ( FirstVNF_Mem + ACS ) / ( RRS + Const ) ) * Const ) ) ) ) ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + RRSe ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "Max( ARS,Min( ( ( ( PN + FirstVNF_Mem ) - BR ) - FirstVNF_RAM_Server ) ,RRS ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + MUC ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "Max( ( ( FirstVNF_RAM_Server * AMS ) / FirstVNF_RAM ),( ( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / Max( ( ( ( MUC - RMSe ) + RRSe ) + RRSe ),MUC ) ) ) ,( ( ( MUC - RMSe ) + ( ( ( ( MUC + MUC ) - ( RRSe + RRSe ) ) / Min( DS ,RCSe ) ) + RRSe ) ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.09645669291338582, "obj2": 0.8091991788850409}, {"determining": "Max( ( ( Min( ( PN + ( Min( FirstVNF_CPU_Server ,MRS ) + FirstVNF_RAM ) ) ,FirstVNF_Mem ) * AMS ) / FirstVNF_RAM ),( Min( ( DDR - CRS ) ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUC + MUM ),RRSe ) / ( ( ( ( ( ( MUC + ( RRSe * RCSe ) ) / MLU ) * Min( MUR ,DS ) ) + RRSe ) + ( Max( RCSe,Max( ( CS + MUC ),DS ) ) - RMSe ) ) + Min( MUC ,DS ) ) )", "obj1": 0.14173228346456693, "obj2": 0.7264330691457439}, {"determining": "Max( ( ( FirstVNF_CPU_Server * ( RRS * DDR ) ) * Max( Max( BR,FirstVNF_CPU ),ARS ) ),( ( ( Const * ( ( ACS / ARS ) / FirstVNF_Mem ) ) - ( BR / FirstVNF_RAM ) ) / BR ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + RRSe ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "Max( ( ( ACS + ( ( MDR * ARS ) / PN ) ) - Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ),Min( ( RRS / FirstVNF_CPU ) ,( ( ( Const - Const ) + FirstVNF_RAM_Server ) * ( MDR + ( ( MDR - Const ) - ( ( ( FirstVNF_Mem + ACS ) / ( RRS + Const ) ) * Const ) ) ) ) ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + RRSe ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "Max( ( ( FirstVNF_RAM_Server * AMS ) / FirstVNF_RAM ),( ( Min( Max( FirstVNF_Mem_Server,MDR ) ,( RRS * DDR ) ) - FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( ( MUR * Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ) - MUM ),( MUC / Max( ( ( ( MUC - RMSe ) + RRSe ) + RRSe ),MUC ) ) ) ,( ( ( MUC / ( MUR - MUR ) ) + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.09645669291338582, "obj2": 0.8091991788850409}, {"determining": "( Min( Max( MDR,FirstVNF_Mem_Server ) ,RRS ) * Min( ( MDR - CRS ) ,( ( FirstVNF_CPU_Server / DDR ) / FirstVNF_CPU ) ) )", "choosing": "( Min( Max( Max( ( MUR * MUC ),MUM ),( MUC / ( MUR - MUR ) ) ) ,( ( ( Max( RCSe,Max( ( CS + MUC ),DS ) ) - RMSe ) + RRSe ) + RRSe ) ) / Min( ( Max( ( RRSe - MUM ),Max( CS,MUR ) ) + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.07874015748031496, "obj2": 0.878138049173635}, {"determining": "( ( ( FirstVNF_CPU_Server * ( RRS * DDR ) ) * Max( Max( BR,FirstVNF_CPU ),ARS ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) - FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( ( ( MUR * MUC ) - MUM ),( MUC / ( CS * CS ) ) ) ,( ( CS + RRSe ) + RRSe ) ) / Min( ( MLU + CS ) ,Min( Min( MUM ,RMSe ) ,DS ) ) )", "obj1": 0.12401574803149606, "obj2": 0.753347088554585}]}