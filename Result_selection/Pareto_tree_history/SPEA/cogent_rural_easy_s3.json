{"1": [{"determining": "Min( Max( FirstVNF_RAM_Server,DDR ) ,Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "( ( MLU + RMSe ) * ( RRSe - RCSe ) )", "obj1": 0.20342205323193915, "obj2": 0.6359040663046145}, {"determining": "Min( Max( Max( ARS,Max( MRS,PN ) ),ACS ) ,Max( FirstVNF_CPU,RRS ) )", "choosing": "Min( ( RRSe + MUM ) ,( RMSe + MUR ) )", "obj1": 0.38783269961977185, "obj2": 0.40974950638311264}, {"determining": "( ( FirstVNF_Mem_Server - Const ) * ( FirstVNF_CPU_Server - ( AMS / ( ( Const / RRS ) - FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR + ( MUC * RRSe ) ) + Min( DS ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server - ( MRS + ACS ) ) )", "choosing": "( Max( DS,RRSe ) - ( MLU * ( Min( MUM ,( MUR - MUC ) ) + DS ) ) )", "obj1": 0.20532319391634982, "obj2": 0.6163455720359576}, {"determining": "( ( RRS - RRS ) - Min( ACS ,MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / Const ) / ( ARS - AMS ) )", "choosing": "( Min( MUM ,RRSe ) / ( MUC - MUC ) )", "obj1": 0.7490494296577946, "obj2": 0.216987299938036}, {"determining": "Min( ( FirstVNF_Mem_Server / PN ) ,Max( Const,ARS ) )", "choosing": "( ( MLU / DS ) * ( MUC * MLU ) )", "obj1": 0.06463878326996197, "obj2": 0.7690431770830667}, {"determining": "Max( ( ARS / PN ),( FirstVNF_RAM + FirstVNF_Mem ) )", "choosing": "( ( MUC + MLU ) / ( MUM + DS ) )", "obj1": 0.11787072243346007, "obj2": 0.7090900269543777}, {"determining": "( ( Const * ( ( BR + FirstVNF_CPU ) / MRS ) ) / ( BR - PN ) )", "choosing": "( ( MUM - MLU ) + Min( ( RCSe - MUM ) ,( ( ( Min( MUM ,MUR ) - CS ) - Min( RCSe ,MUM ) ) - DS ) ) )", "obj1": 0.9980988593155894, "obj2": 0.0012126691837671432}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( PN ,DDR ) ) * Min( Min( MDR ,PN ) ,( AMS / BR ) ) )", "choosing": "( Min( ( MUM + RCSe ) ,( MLU + MUM ) ) / Max( Max( RCSe,MUM ),( CS + MUC ) ) )", "obj1": 0.3517110266159696, "obj2": 0.46835391715389396}, {"determining": "Min( Max( PN,AMS ) ,( FirstVNF_CPU - ( FirstVNF_RAM_Server - MRS ) ) )", "choosing": "Min( ( Min( CS ,CS ) / ( MUM * RRSe ) ) ,( ( DS - RCSe ) / Max( RRSe,MLU ) ) )", "obj1": 0.9296577946768061, "obj2": 0.06492634646358728}, {"determining": "( ( ( MRS * ARS ) + ( CRS + CRS ) ) + ( Max( FirstVNF_RAM_Server,MRS ) / ( ARS + FirstVNF_Mem ) ) )", "choosing": "( Min( ( RRSe * MLU ) ,Max( MUR,DS ) ) - ( ( CS - MLU ) + Min( MUC ,RCSe ) ) )", "obj1": 0.2224334600760456, "obj2": 0.5685836437516011}, {"determining": "( Min( Const ,( RRS * ( Min( PN ,CRS ) * Min( AMS ,ARS ) ) ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( RCSe,MLU ) / ( Min( MUR ,Min( RRSe ,( ( MUC + MUM ) / Min( Min( ( MUC * RCSe ) ,RCSe ) ,MUM ) ) ) ) / ( RMSe * ( Min( ( DS * MUM ) ,RCSe ) * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,FirstVNF_Mem ) - AMS ) - ( Min( Max( CRS,ACS ) ,Max( FirstVNF_RAM_Server,RRS ) ) + ( FirstVNF_RAM - ACS ) ) )", "choosing": "Max( Max( RMSe,( ( CS - ( MUR * CS ) ) / ( Max( MLU,( RMSe * ( ( MUC * DS ) * MUR ) ) ) + MUM ) ) ),( ( RMSe - CS ) * Min( MLU ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM_Server ,PN ) / Max( FirstVNF_CPU,BR ) ) + Max( ( FirstVNF_RAM_Server - DDR ),( PN + BR ) ) )", "choosing": "( ( ( MUR * DS ) + ( RMSe * DS ) ) + Max( MLU,CS ) )", "obj1": 0.6596958174904943, "obj2": 0.24795919283556372}, {"determining": "( ( FirstVNF_CPU_Server + ARS ) + ( ACS / FirstVNF_Mem ) )", "choosing": "( ( ( RCSe / CS ) * ( MLU * DS ) ) - ( ( DS * RRSe ) * MUM ) )", "obj1": 0.4467680608365019, "obj2": 0.3603327783727882}, {"determining": "( Max( Max( ( MDR - ACS ),( Const - FirstVNF_CPU_Server ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( MDR / PN ) ) ) * ( ( ( RRS - ( Const * ARS ) ) + Max( DDR,Const ) ) * Min( ( FirstVNF_RAM_Server * Const ) ,( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( Min( ( MUM / MUC ) ,( CS - DS ) ) ,( ( RRSe - MUC ) * ( RRSe + MUC ) ) ) * Min( MUM ,Min( RRSe ,Min( ( DS - DS ) ,( Max( DS,RRSe ) * MLU ) ) ) ) )", "obj1": 0.27566539923954375, "obj2": 0.5132854821888563}, {"determining": "( Min( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),Max( FirstVNF_CPU_Server,ACS ) ) ,Max( ( BR / CRS ),( FirstVNF_RAM_Server - PN ) ) ) * Min( ( ( FirstVNF_RAM_Server * AMS ) - Max( FirstVNF_CPU_Server,ACS ) ) ,Min( Min( MDR ,PN ) ,( FirstVNF_CPU * FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( Max( RCSe,DS ) - Min( RMSe ,RRSe ) ) - ( ( CS * MUC ) + Min( MUM ,DS ) ) ) ,Max( Max( ( DS / DS ),Max( MUC,MUM ) ),( ( MUM + RMSe ) * ( RRSe / CS ) ) ) )", "obj1": 0.3745247148288973, "obj2": 0.44125492582878423}, {"determining": "( ( ( Min( DDR ,CRS ) - ( ACS / Min( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / FirstVNF_Mem ) ) ,( ACS - PN ) ) ) ) + Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( CRS + FirstVNF_CPU ) / Min( Const ,( ( ( CRS - MDR ) + Const ) * BR ) ) ) ) )", "choosing": "Min( Min( Max( MLU,( Min( ( DS + MUC ) ,Max( ( MUR + MUM ),RRSe ) ) * MUC ) ) ,( RMSe * Max( CS,MUM ) ) ) ,Max( DS,( ( MUM + MUC ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + Max( PN,BR ) )", "choosing": "Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.11977186311787072, "obj2": 0.6372333136411811}, {"determining": "Min( ( ARS * AMS ) ,( FirstVNF_RAM * ARS ) )", "choosing": "Max( ( DS / MUR ),( ( CS * DS ) - Min( ( RCSe / RMSe ) ,Min( MUR ,MUC ) ) ) )", "obj1": 0.6368821292775665, "obj2": 0.2825722337838668}, {"determining": "Min( ( ( ( FirstVNF_CPU + MDR ) * ( DDR - FirstVNF_CPU ) ) * Max( Min( PN ,FirstVNF_Mem ),( MRS / FirstVNF_CPU_Server ) ) ) ,Min( Min( ( MDR * PN ) ,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ,Max( ( RRS - DDR ),Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Min( ( ( MUR * RCSe ) / MLU ) ,( MLU / RCSe ) ),Min( RCSe ,( MUM - ( RCSe * CS ) ) ) )", "obj1": 0.8231939163498099, "obj2": 0.14280437030831059}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_RAM ) - Min( BR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( Max( MLU,DS ) ,( RCSe * ( ( RCSe / RCSe ) / ( RCSe * Min( RCSe ,CS ) ) ) ) ) + ( ( DS + RRSe ) + Min( RMSe ,MUC ) ) ) ,( ( ( CS * MUR ) * Min( MUR ,CS ) ) - Min( Min( RCSe ,MUR ) ,( RMSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),Max( MDR,ARS ) ) ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + CS ) + ( ( Max( RMSe,RRSe ) + RMSe ) + ( Max( RRSe,MUC ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( DDR * FirstVNF_CPU_Server ) ,( MRS * PN ) ),( ( FirstVNF_CPU * CRS ) * ( AMS / PN ) ) ) + ( ( Min( AMS ,FirstVNF_Mem ) / ( FirstVNF_RAM_Server - PN ) ) - Max( Max( DDR,FirstVNF_RAM ),( DDR / ACS ) ) ) )", "choosing": "( ( DS * MUM ) / Max( DS,RRSe ) )", "obj1": 0.8536121673003803, "obj2": 0.11911139587479602}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) + Max( ( AMS - ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ),Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( MLU + MUC ) ) * ( ( DS + DS ) / Min( MUC ,CS ) ) ) + Min( Max( Max( MLU,MLU ),( CS * CS ) ) ,( ( MUR - CS ) - Max( MUM,RRSe ) ) ) )", "obj1": 0.07604562737642585, "obj2": 0.7159706074089407}, {"determining": "Max( ( FirstVNF_RAM_Server * MRS ),( ACS - ( MDR + MRS ) ) )", "choosing": "( Min( ( ( RMSe / MUC ) + Max( RRSe,RRSe ) ) ,( ( RMSe - MUM ) + Min( DS ,RRSe ) ) ) / ( Max( Min( MUC ,MUC ),Min( MUC ,MUC ) ) / ( Max( MUM,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.6425855513307985, "obj2": 0.2797447602726257}, {"determining": "Max( ( RRS - MRS ),( ARS * CRS ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( ( ( CS * RCSe ) / Max( MUC,MLU ) ) * ( ( MLU - MUM ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.2509505703422053, "obj2": 0.5258712481710074}, {"determining": "( ( CRS - FirstVNF_RAM ) * Min( ( Min( MRS ,FirstVNF_Mem_Server ) + ( Max( Max( FirstVNF_CPU,Min( RRS ,FirstVNF_Mem ) ),ACS ) * ( FirstVNF_Mem - Const ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "Max( Min( MLU ,Min( DS ,( ( DS / ( MUR - RRSe ) ) + MUR ) ) ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR - FirstVNF_RAM ) * ( MRS - MDR ) ) * ( ( FirstVNF_RAM / ACS ) + ( FirstVNF_Mem + AMS ) ) ) * ( ( Max( ARS,Const ) - ( RRS - FirstVNF_Mem ) ) - ( ( MRS / FirstVNF_CPU ) + ( FirstVNF_CPU_Server - CRS ) ) ) )", "choosing": "Max( ( ( ( DS * MUC ) * Min( MUR ,MUR ) ) + Max( ( MUC + CS ),( CS - RMSe ) ) ),( ( ( RCSe - RCSe ) * Max( CS,RCSe ) ) - Min( Max( MUC,RRSe ) ,( DS + RRSe ) ) ) )", "obj1": 0.5931558935361216, "obj2": 0.347911300402542}, {"determining": "( ( Max( ( AMS / MRS ),Max( FirstVNF_CPU,MRS ) ) + Min( ( ARS - FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ) * ( ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * Min( AMS ,AMS ) ) ) ) )", "choosing": "( ( ( DS / Min( RCSe ,RRSe ) ) - ( RMSe / CS ) ) / ( MUM / ( MLU * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}], "2": [{"determining": "Min( Max( Max( ARS,Max( MRS,PN ) ),ACS ) ,Max( FirstVNF_CPU,RRS ) )", "choosing": "Min( ( RRSe + MUM ) ,( RMSe + MUR ) )", "obj1": 0.38783269961977185, "obj2": 0.40974950638311264}, {"determining": "( ( FirstVNF_Mem_Server - Const ) * ( FirstVNF_CPU_Server - ( AMS / ( ( Const / RRS ) - FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR + ( MUC * RRSe ) ) + Min( DS ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - RRS ) - Min( ACS ,MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( PN,AMS ) ,( FirstVNF_CPU - ( FirstVNF_RAM_Server - MRS ) ) )", "choosing": "Min( ( Min( CS ,CS ) / ( MUM * RRSe ) ) ,( ( DS - RCSe ) / Max( RRSe,MLU ) ) )", "obj1": 0.9296577946768061, "obj2": 0.06492634646358728}, {"determining": "( Min( Const ,( RRS * ( Min( PN ,CRS ) * Min( AMS ,ARS ) ) ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( RCSe,MLU ) / ( Min( MUR ,Min( RRSe ,( ( MUC + MUM ) / Min( Min( ( MUC * RCSe ) ,RCSe ) ,MUM ) ) ) ) / ( RMSe * ( Min( ( DS * MUM ) ,RCSe ) * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,FirstVNF_Mem ) - AMS ) - ( Min( Max( CRS,ACS ) ,Max( FirstVNF_RAM_Server,RRS ) ) + ( FirstVNF_RAM - ACS ) ) )", "choosing": "Max( Max( RMSe,( ( CS - ( MUR * CS ) ) / ( Max( MLU,( RMSe * ( ( MUC * DS ) * MUR ) ) ) + MUM ) ) ),( ( RMSe - CS ) * Min( MLU ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM_Server ,PN ) / Max( FirstVNF_CPU,BR ) ) + Max( ( FirstVNF_RAM_Server - DDR ),( PN + BR ) ) )", "choosing": "( ( ( MUR * DS ) + ( RMSe * DS ) ) + Max( MLU,CS ) )", "obj1": 0.6596958174904943, "obj2": 0.24795919283556372}, {"determining": "( Max( Max( ( MDR - ACS ),( Const - FirstVNF_CPU_Server ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( MDR / PN ) ) ) * ( ( ( RRS - ( Const * ARS ) ) + Max( DDR,Const ) ) * Min( ( FirstVNF_RAM_Server * Const ) ,( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( Min( ( MUM / MUC ) ,( CS - DS ) ) ,( ( RRSe - MUC ) * ( RRSe + MUC ) ) ) * Min( MUM ,Min( RRSe ,Min( ( DS - DS ) ,( Max( DS,RRSe ) * MLU ) ) ) ) )", "obj1": 0.27566539923954375, "obj2": 0.5132854821888563}, {"determining": "( ( ( Min( DDR ,CRS ) - ( ACS / Min( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / FirstVNF_Mem ) ) ,( ACS - PN ) ) ) ) + Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( CRS + FirstVNF_CPU ) / Min( Const ,( ( ( CRS - MDR ) + Const ) * BR ) ) ) ) )", "choosing": "Min( Min( Max( MLU,( Min( ( DS + MUC ) ,Max( ( MUR + MUM ),RRSe ) ) * MUC ) ) ,( RMSe * Max( CS,MUM ) ) ) ,Max( DS,( ( MUM + MUC ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + Max( PN,BR ) )", "choosing": "Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.11977186311787072, "obj2": 0.6372333136411811}, {"determining": "Min( ( ARS * AMS ) ,( FirstVNF_RAM * ARS ) )", "choosing": "Max( ( DS / MUR ),( ( CS * DS ) - Min( ( RCSe / RMSe ) ,Min( MUR ,MUC ) ) ) )", "obj1": 0.6368821292775665, "obj2": 0.2825722337838668}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_RAM ) - Min( BR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( Max( MLU,DS ) ,( RCSe * ( ( RCSe / RCSe ) / ( RCSe * Min( RCSe ,CS ) ) ) ) ) + ( ( DS + RRSe ) + Min( RMSe ,MUC ) ) ) ,( ( ( CS * MUR ) * Min( MUR ,CS ) ) - Min( Min( RCSe ,MUR ) ,( RMSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),Max( MDR,ARS ) ) ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + CS ) + ( ( Max( RMSe,RRSe ) + RMSe ) + ( Max( RRSe,MUC ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( RRS - MRS ),( ARS * CRS ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( ( ( CS * RCSe ) / Max( MUC,MLU ) ) * ( ( MLU - MUM ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.2509505703422053, "obj2": 0.5258712481710074}, {"determining": "( ( CRS - FirstVNF_RAM ) * Min( ( Min( MRS ,FirstVNF_Mem_Server ) + ( Max( Max( FirstVNF_CPU,Min( RRS ,FirstVNF_Mem ) ),ACS ) * ( FirstVNF_Mem - Const ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "Max( Min( MLU ,Min( DS ,( ( DS / ( MUR - RRSe ) ) + MUR ) ) ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( AMS / MRS ),Max( FirstVNF_CPU,MRS ) ) + Min( ( ARS - FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ) * ( ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * Min( AMS ,AMS ) ) ) ) )", "choosing": "( ( ( DS / Min( RCSe ,RRSe ) ) - ( RMSe / CS ) ) / ( MUM / ( MLU * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem ,Max( FirstVNF_Mem,( ( FirstVNF_Mem_Server - MDR ) * PN ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( Min( MUR ,DS ) * MLU ) ,DS ) ,( Max( DS,Min( MUR ,RMSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( FirstVNF_CPU + CRS ) / Min( Const ,RRS ) ) ) - AMS ) + ( MRS - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( CS,DS ),Min( MUM ,DS ) ) / DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - FirstVNF_CPU ) + ( MRS - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / ( ( RRS * ( Min( CRS ,Const ) - Min( FirstVNF_CPU_Server ,ACS ) ) ) * ARS ) ) )", "choosing": "Min( Min( ( RMSe * RMSe ) ,RRSe ) ,( ( DS * Min( ( MLU + MLU ) ,Min( DS ,Min( RCSe ,Min( Min( RCSe ,RRSe ) ,RRSe ) ) ) ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * AMS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( CRS + Const ) ) )", "choosing": "( Max( ( CS * DS ),Min( ( ( RMSe / RCSe ) + DS ) ,DS ) ) / ( Min( MUR ,RMSe ) * ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ( FirstVNF_CPU - PN ) ) - ( PN * FirstVNF_Mem ) )", "choosing": "( ( RMSe - RRSe ) / Min( RMSe ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS / Const ) ,Min( ( ACS * ARS ) ,( ( MRS + DDR ) / ARS ) ) )", "choosing": "( Min( ( CS / ( CS - ( ( DS / Max( RCSe,MUC ) ) / Max( MUR,( MUR / DS ) ) ) ) ) ,Max( RRSe,RMSe ) ) - ( RMSe / DS ) )", "obj1": 0.6330798479087453, "obj2": 0.28269511136431796}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) + ( Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,( Const / FirstVNF_Mem_Server ) ) * ( ACS * Max( Const,MDR ) ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( MLU + MUC ) ) * ( ( DS + DS ) - ( ( ( RMSe * RRSe ) / MUR ) - Min( RRSe ,MUC ) ) ) ) + Min( Max( Max( MLU,MLU ),( CS * CS ) ) ,( ( MUR - CS ) - Max( MUM,RRSe ) ) ) )", "obj1": 0.7889733840304183, "obj2": 0.07287258543816282}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) + Max( ( AMS - ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ),Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( MLU + MUC ) ) * ( ( DS + DS ) / Min( MUC ,CS ) ) ) + Min( Max( Max( MLU,MLU ),( CS * CS ) ) ,( ( MUR - CS ) - Max( MUM,RRSe ) ) ) )", "obj1": 0.0741444866920152, "obj2": 0.7121310329737548}, {"determining": "Max( ( ( Const / Max( FirstVNF_CPU,( RRS * RRS ) ) ) / Min( FirstVNF_CPU ,Min( FirstVNF_RAM_Server ,RRS ) ) ),( ARS * CRS ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),Max( CS,( MUR * CS ) ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( ( ( CS * RCSe ) / Max( MUC,MLU ) ) * ( ( MLU - MUM ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.19771863117870722, "obj2": 0.5684235805718734}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU - ( BR - FirstVNF_Mem ) ) ) + ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( MUM,CS ) - ( MLU + MUC ) ) * ( ( DS + DS ) / ( ( MUM + CS ) + ( ( Max( RRSe,MUC ) + MUC ) + ( Max( MLU,MLU ) + RMSe ) ) ) ) ) + Min( Max( Max( MLU,MLU ),( CS * CS ) ) ,( ( MUR - CS ) - Max( MUM,RRSe ) ) ) )", "obj1": 0.13307984790874525, "obj2": 0.6239416674877816}, {"determining": "( ( AMS - ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( DS + ( ( Max( RMSe,RRSe ) + RMSe ) + ( Max( RRSe,MUC ) + MUC ) ) )", "obj1": 0.7433460076045627, "obj2": 0.19654484086459706}, {"determining": "( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),Max( MDR,ARS ) ) ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + CS ) + ( ( Max( RMSe,RRSe ) + RMSe ) + ( Max( RRSe,MUC ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( AMS / MRS ),Max( FirstVNF_CPU_Server,MRS ) ) + Min( ( ARS - ( Const / BR ) ) ,Min( MDR ,BR ) ) ) * ( DDR * RRS ) )", "choosing": "( ( ( DS / ( RRSe / RCSe ) ) - ( RMSe / CS ) ) / ( Min( ( Max( ( RCSe + ( MUM / ( MLU / MUM ) ) ),MLU ) * MLU ) ,( DS - ( ( Min( MUR ,RMSe ) / RMSe ) * ( ( MUC - CS ) + Min( Min( MLU ,DS ) ,MLU ) ) ) ) ) / Max( MLU,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( AMS / MRS ),Max( FirstVNF_CPU_Server,MRS ) ) + Min( ( ARS - FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( Min( MUM ,RRSe ) / ( MUC - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( FirstVNF_CPU ,ACS ) ,Min( DDR ,FirstVNF_RAM ) ) / ( ( PN - ACS ) * ( FirstVNF_CPU + AMS ) ) ) * Min( ( ( DDR / AMS ) + Min( MRS ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "( ( MLU / DS ) * ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + ( ARS / PN ) ) + Max( PN,BR ) )", "choosing": "Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( MUC + MLU ) / ( MUM + DS ) ) ) )", "obj1": 0.5513307984790875, "obj2": 0.3531631502272821}, {"determining": "Max( ( ARS / PN ),( FirstVNF_RAM + FirstVNF_Mem ) )", "choosing": "Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.11977186311787072, "obj2": 0.6372333136411811}, {"determining": "Min( ( ARS * AMS ) ,( Min( Max( CRS,ARS ) ,( FirstVNF_RAM_Server + ARS ) ) * ARS ) )", "choosing": "Max( ( DS / MUR ),( ( CS * DS ) - Min( ( RCSe / RMSe ) ,Min( ( RMSe * MLU ) ,MUC ) ) ) )", "obj1": 0.6425855513307985, "obj2": 0.275813728276144}, {"determining": "Min( Max( CRS,ARS ) ,( FirstVNF_RAM_Server + ARS ) )", "choosing": "Max( ( DS / MUR ),( ( CS * DS ) - Min( ( RCSe / RMSe ) ,Min( MUR ,MUC ) ) ) )", "obj1": 0.6406844106463878, "obj2": 0.27915848996174975}, {"determining": "Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) - RRS ),( ARS * AMS ) )", "choosing": "( ( DS - Max( ( MUM / MUR ),( CS / RCSe ) ) ) + ( Max( Max( RRSe,RMSe ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe + DS ) ) ) )", "obj1": 0.20722433460076045, "obj2": 0.5511089780337013}, {"determining": "Max( ( RRS - MRS ),( FirstVNF_Mem + ACS ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + Min( ( ( RCSe * CS ) / Max( MUC,MLU ) ) ,Max( ( MUM * RMSe ),MUR ) ) )", "obj1": 0.2509505703422053, "obj2": 0.5258712481710074}, {"determining": "( ( RRS - MRS ) * ( ( ( RRS - MRS ) + Max( DDR,Const ) ) * Min( ( FirstVNF_RAM_Server * Const ) ,( ACS / PN ) ) ) )", "choosing": "( MUM * Max( Max( Min( CS ,RCSe ),( DS / MLU ) ),Max( Max( RRSe,DS ),Min( MLU ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - MRS )", "choosing": "Min( ( Min( Max( MLU,DS ) ,( MUR * MLU ) ) + ( ( DS + RRSe ) + Min( RMSe ,MUC ) ) ) ,( MUM - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( FirstVNF_RAM_Server,( ARS + Const ) )", "choosing": "Max( ( MUM - MUR ),Min( DS ,MUR ) )", "obj1": 0.6825095057034221, "obj2": 0.24467879899560913}, {"determining": "( ( BR * ( Min( ( Min( RRS ,FirstVNF_CPU_Server ) / PN ) ,Min( MRS ,FirstVNF_CPU ) ) * BR ) ) - ( MDR * ( Const - AMS ) ) )", "choosing": "Min( ( Min( Max( MLU,DS ) ,( MUR * MLU ) ) + ( ( DS + RRSe ) + Min( Min( ( CS - RMSe ) ,CS ) ,MUC ) ) ) ,( ( ( CS * MUR ) * ( MLU / CS ) ) - Min( Min( RCSe ,MUR ) ,( RMSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU ) * ( PN - RRS ) )", "choosing": "( ( MUR + MUC ) + ( MUR + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - Const ) * ( FirstVNF_CPU_Server - ( AMS / ( ( Const / RRS ) - FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR + ( MUC * RRSe ) ) + Min( DS ,MUR ) )", "obj1": 0.7870722433460076, "obj2": 0.18936398316580713}, {"determining": "( ( FirstVNF_Mem_Server - Const ) * ( FirstVNF_CPU_Server - ( AMS / ( ( Const / RRS ) - FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR + ( MUC * RRSe ) ) + Min( DS ,MUR ) )", "obj1": 0.7870722433460076, "obj2": 0.18936398316580713}, {"determining": "( ( RRS - ARS ) * ( FirstVNF_CPU_Server - Max( ( ( Const / ( FirstVNF_Mem_Server / Min( ( ARS / CRS ) ,FirstVNF_RAM ) ) ) - FirstVNF_CPU ),MRS ) ) )", "choosing": "( ( DS * MUR ) + ( CS + ( MLU + ( Max( ( MUM + RCSe ),MUC ) / ( Min( MLU ,MLU ) * RMSe ) ) ) ) )", "obj1": 0.7870722433460076, "obj2": 0.18936398316580713}, {"determining": "( Min( Max( ( ARS - FirstVNF_RAM_Server ),( MDR * ARS ) ) ,( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ) * ( FirstVNF_CPU_Server + BR ) )", "choosing": "( ( CS + MUM ) + ( Max( ( ( MUR + MUM ) - ( CS + RMSe ) ),RCSe ) / ( ( DS - MUM ) - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server / MDR ) ,( ( ( FirstVNF_CPU - AMS ) + ( FirstVNF_Mem - MRS ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( CS ,CS ) / ( MUM * RRSe ) ) ,( Max( MUR,Max( RRSe,MLU ) ) / ( DS - Max( Max( CS,DS ),Min( MUM ,DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - AMS ) + ( AMS + CRS ) ) / MRS )", "choosing": "( Max( Max( CS,DS ),Min( ( Min( CS ,CS ) / ( MUM - RRSe ) ) ,MUM ) ) / ( Min( MUR ,RMSe ) * ( RCSe * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( AMS ,( BR + MDR ) ) ,( FirstVNF_CPU - ( FirstVNF_RAM_Server - MRS ) ) )", "choosing": "Min( ( RCSe + MUM ) ,( ( DS - RCSe ) / Max( DS,MLU ) ) )", "obj1": 0.9296577946768061, "obj2": 0.06492634646358728}, {"determining": "( ( ( FirstVNF_CPU - AMS ) + ( MRS - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( CS,DS ),Min( MUM ,DS ) ) / ( Min( MUR ,RMSe ) * ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Max( AMS,MRS ) * ( FirstVNF_CPU / BR ) ) * Max( ( ARS / Const ),( FirstVNF_Mem_Server - RRS ) ) ) + ( Max( Min( BR ,ACS ),Max( BR,PN ) ) * Max( ( Const - DDR ),( FirstVNF_CPU * RRS ) ) ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MUC / ( RRSe / RCSe ) ) - ( RMSe / CS ) ) / ( MUM / ( MLU * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( AMS / MRS ),Max( FirstVNF_CPU_Server,MRS ) ) + Min( ( ARS - FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / ( RRSe / RCSe ) ) - ( RMSe / CS ) ) / ( MUM / ( MLU * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * ARS ) + ( CRS + CRS ) ) + ( Max( FirstVNF_RAM_Server,MRS ) / ARS ) )", "choosing": "( ( ( MLU / DS ) * ( MUC * MLU ) ) - ( ( CS - MLU ) + Min( MUC ,RCSe ) ) )", "obj1": 0.06273764258555133, "obj2": 0.7643289287523345}, {"determining": "( ( PN - ACS ) / ( FirstVNF_CPU / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( MUR,RRSe ) / MUC ) * ( RMSe * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * ACS ) * Min( Min( ( DDR / AMS ) ,Min( MRS ,FirstVNF_Mem_Server ) ) ,( ( ACS / FirstVNF_RAM_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "Max( Max( CS,MUM ),Min( Max( ( ( ( ( MUR / RCSe ) / MLU ) - ( ( ( MUC * MUC ) / RRSe ) * ( MUC - CS ) ) ) * RMSe ),RMSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( FirstVNF_CPU ,ACS ) ,Min( DDR ,FirstVNF_RAM ) ) / ( ( PN - ACS ) * ( FirstVNF_CPU + AMS ) ) ) * Min( ( ( DDR / AMS ) + Min( MRS ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "Max( ( ( Max( MUR,RRSe ) / MUC ) / RMSe ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU + FirstVNF_Mem ) - ( ( AMS * FirstVNF_CPU ) / ARS ) ) * Max( ( FirstVNF_RAM_Server - PN ),Max( PN,ACS ) ) )", "choosing": "( ( RMSe + ( ( Max( RCSe,MUC ) + ( RMSe + CS ) ) * DS ) ) / Max( CS,MLU ) )", "obj1": 0.5570342205323194, "obj2": 0.34643501913717006}, {"determining": "( FirstVNF_RAM + ( ARS - ARS ) )", "choosing": "Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( ( ( MUM * CS ) + Max( MUC,DS ) ),( Min( RCSe ,RCSe ) + ( MUM / RCSe ) ) ) ) ) ,( ( Min( Min( MLU ,Max( MUR,DS ) ) ,Min( ( ( ( RCSe / RCSe ) + RCSe ) - MUM ) ,MLU ) ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.0817490494296578, "obj2": 0.6728430069716872}, {"determining": "( Max( FirstVNF_RAM,MDR ) - Max( MRS,ARS ) )", "choosing": "Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.9068441064638784, "obj2": 0.07279991606141589}, {"determining": "( ( Max( Const,FirstVNF_Mem ) - AMS ) - ( DDR + ( FirstVNF_RAM - ACS ) ) )", "choosing": "Max( Min( ( MUM * MUR ) ,Min( MUC ,MUR ) ),( ( RMSe - RMSe ) * Min( RMSe ,MLU ) ) )", "obj1": 0.9904942965779467, "obj2": 0.004742835845354403}, {"determining": "( ( Max( Const,( Min( ARS ,FirstVNF_RAM ) * ARS ) ) - ( FirstVNF_CPU * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM - ACS ) + FirstVNF_CPU ) )", "choosing": "Min( ( MUM + MUR ) ,( DS / ( DS * ( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),Max( MDR,ARS ) ) ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( AMS - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + CS ) + ( Min( ( MUM * MUR ) ,Min( MUC ,MUR ) ) + ( Max( RRSe,MUC ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),Max( MDR,ARS ) ) ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + CS ) + ( ( Max( RMSe,RRSe ) + RMSe ) + ( Max( RRSe,MUC ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,( MRS / FirstVNF_Mem ) ) ,( MDR - FirstVNF_CPU ) )", "choosing": "Max( ( ( ( ( MUM + MUM ) - MLU ) - DS ) * RCSe ),Max( MLU,MUR ) )", "obj1": 0.9771863117870723, "obj2": 0.02320986750708272}, {"determining": "Min( Min( BR ,( MRS / FirstVNF_Mem ) ) ,( MDR - FirstVNF_CPU ) )", "choosing": "Max( ( ( ( ( MUM + MUM ) - MLU ) - DS ) * RCSe ),Max( MLU,MUR ) )", "obj1": 0.9771863117870723, "obj2": 0.02320986750708272}, {"determining": "Min( Min( BR ,( MRS / FirstVNF_Mem ) ) ,( MDR - FirstVNF_CPU ) )", "choosing": "Max( ( ( ( ( MUM + MUM ) - MLU ) - DS ) * RCSe ),Max( MLU,MUR ) )", "obj1": 0.9771863117870723, "obj2": 0.02320986750708272}, {"determining": "Min( Min( BR ,( MRS / FirstVNF_Mem ) ) ,( MDR - FirstVNF_CPU ) )", "choosing": "Max( ( ( ( ( MUM + MUM ) - MLU ) - DS ) * RCSe ),Max( MLU,MUR ) )", "obj1": 0.9771863117870723, "obj2": 0.02320986750708272}, {"determining": "( ( Max( BR,MRS ) * ( FirstVNF_CPU_Server - ( ( BR / Min( ARS ,MDR ) ) + ( FirstVNF_Mem_Server / AMS ) ) ) ) * ( ( BR * FirstVNF_Mem ) + ( FirstVNF_Mem - BR ) ) )", "choosing": "Min( Max( Max( MUR,RCSe ),RMSe ) ,( MUC * ( ( Max( RCSe,MUR ) + ( CS / RMSe ) ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( RRS - MRS ),( ARS * CRS ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( ( ( CS * RCSe ) / Max( MUC,MLU ) ) * ( ( MLU - MUM ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.2509505703422053, "obj2": 0.5258712481710074}, {"determining": "( Min( Max( MRS,( ACS + ARS ) ) ,( MDR / Max( CRS,FirstVNF_CPU ) ) ) * Max( ( FirstVNF_RAM_Server - PN ),Max( PN,ACS ) ) )", "choosing": "( ( ( MLU * DS ) + ( MUC * DS ) ) / Max( CS,MLU ) )", "obj1": 0.7015209125475285, "obj2": 0.22093605976578473}, {"determining": "Max( ( FirstVNF_RAM_Server * Min( RRS ,( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + PN ) ) ),( Const * FirstVNF_CPU ) )", "choosing": "Min( RMSe ,Max( RCSe,Max( DS,MUC ) ) )", "obj1": 0.7167300380228137, "obj2": 0.21280979245917733}, {"determining": "( ( Const * FirstVNF_CPU ) / Max( AMS,Max( Max( Min( FirstVNF_Mem ,Const ),Max( FirstVNF_RAM,FirstVNF_Mem ) ),RRS ) ) )", "choosing": "( ( MUR + Max( RCSe,MLU ) ) - ( ( ( RRSe + RMSe ) + CS ) + DS ) )", "obj1": 0.16920152091254753, "obj2": 0.5968813574435998}, {"determining": "( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),Max( MDR,ARS ) ) ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + Min( ( FirstVNF_RAM_Server * Const ) ,( ACS / PN ) ) ) )", "choosing": "( ( MUM + CS ) + ( Max( Max( Min( CS ,RCSe ),( DS / MLU ) ),Max( Max( RRSe,DS ),Min( MLU ,MUR ) ) ) + ( Max( RRSe,MUC ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server / ( FirstVNF_RAM * MRS ) ) + RRS ) * Max( Max( ( FirstVNF_RAM - ACS ),MDR ),( Max( FirstVNF_CPU_Server,AMS ) / ( PN / MDR ) ) ) )", "choosing": "( ( MUR + MUC ) * RMSe )", "obj1": 0.24904942965779467, "obj2": 0.5355503238040287}, {"determining": "( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),Max( MDR,ARS ) ) ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + CS ) + ( ( Max( RMSe,RRSe ) + RMSe ) + ( Max( RRSe,MUC ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( FirstVNF_RAM - ACS ),( PN - Const ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( PN / MDR ) ) ) * ( ( ( RRS - MRS ) + Max( DDR,Const ) ) * Min( ( FirstVNF_RAM_Server * Const ) ,( ACS / PN ) ) ) )", "choosing": "( Min( Min( ( MUM / MUC ) ,( DS - CS ) ) ,( ( RRSe - MUC ) * ( RRSe + MUC ) ) ) * Max( Max( Min( CS ,RCSe ),( DS / MLU ) ),Max( Max( RRSe,DS ),Min( MLU ,MUR ) ) ) )", "obj1": 0.27566539923954375, "obj2": 0.5132854821888563}, {"determining": "Min( ( ( ( ( DDR - ACS ) / ( DDR / Const ) ) / ( ( ARS + ACS ) * ( ARS + FirstVNF_Mem_Server ) ) ) - ( ( ARS + FirstVNF_RAM ) / ( AMS + FirstVNF_CPU_Server ) ) ) ,( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) )", "choosing": "( ( Min( Min( CS ,RMSe ) ,MUC ) - DS ) * ( Max( ( RCSe - RMSe ),( MLU - RMSe ) ) * ( ( CS / MLU ) + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ( ACS * PN ) + ( RRS * FirstVNF_CPU_Server ) ) ,DDR ) * ( FirstVNF_CPU_Server - MRS ) ) * ( ( BR * FirstVNF_Mem ) + ( Min( Max( CRS,ARS ) ,RRS ) - BR ) ) )", "choosing": "Min( Max( ( ( RRSe * ( Max( MUM,RRSe ) * Max( Min( DS ,( MUR * MUR ) ),( ( CS * CS ) + RCSe ) ) ) ) + RCSe ),RMSe ) ,( MUC * MUR ) )", "obj1": 0.9980988593155894, "obj2": 0.0007126745451389819}, {"determining": "( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( ( FirstVNF_RAM - ACS ) * ( FirstVNF_Mem * PN ) ) + ( ( FirstVNF_CPU + CRS ) / Min( Const ,RRS ) ) ) )", "choosing": "Min( Min( RRSe ,Max( ( ( CS + RCSe ) / Max( MLU,RRSe ) ),Max( ( MLU - MUR ),( MUM - MUR ) ) ) ) ,( ( DS * Min( MUR ,RMSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( AMS ,Max( Max( ACS,( Max( ( PN + MDR ),( FirstVNF_RAM / FirstVNF_Mem ) ) - ( FirstVNF_RAM + ( FirstVNF_RAM_Server - PN ) ) ) ),( FirstVNF_Mem * ACS ) ) ) ,( ARS + ARS ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( FirstVNF_CPU + CRS ) / Min( Const ,RRS ) ) ) )", "choosing": "Min( Min( RRSe ,Min( RMSe ,Min( MLU ,( CS + MUM ) ) ) ) ,( ( DS * Min( MUR ,RMSe ) ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,CRS ) - ( ACS / Min( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / FirstVNF_Mem ) ) ,( ACS - PN ) ) ) ) + Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( CRS + FirstVNF_CPU ) / Min( Const ,( ( ( CRS - MDR ) + Const ) * BR ) ) ) ) )", "choosing": "Min( Min( Max( MLU,( Min( ( DS + MUC ) ,Max( ( MUR + MUM ),RRSe ) ) * MUC ) ) ,( RMSe * Max( CS,MUM ) ) ) ,Max( DS,( ( MUM + MUC ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,CRS ) - ( ACS / Min( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / FirstVNF_Mem ) ) ,( ACS - PN ) ) ) ) + Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( CRS + FirstVNF_CPU ) / Min( Const ,( ( ( CRS - MDR ) + Const ) * BR ) ) ) ) )", "choosing": "Min( Min( Max( MLU,( Min( ( DS + MUC ) ,Max( ( MUR + MUM ),RRSe ) ) * MUC ) ) ,( RMSe * Max( CS,MUM ) ) ) ,Max( DS,( ( MUM + MUC ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,CRS ) - ( ACS / Min( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / FirstVNF_Mem ) ) ,( ACS - PN ) ) ) ) + Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( CRS + FirstVNF_CPU ) / Min( Const ,( ( ( CRS - MDR ) + Const ) * BR ) ) ) ) )", "choosing": "Min( Min( Max( MLU,( Min( ( DS + MUC ) ,Max( ( MUR + MUM ),RRSe ) ) * MUC ) ) ,( RMSe * Max( CS,MUM ) ) ) ,Max( DS,( ( MUM + MUC ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( CRS + FirstVNF_CPU ) / Min( Const ,( FirstVNF_Mem_Server * BR ) ) ) ) )", "choosing": "Min( Min( RRSe ,( RMSe * MLU ) ) ,Max( DS,( Min( MUR ,MUM ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - AMS ) - AMS ) * ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - ( MDR * ( Const / AMS ) ) ) )", "choosing": "Min( Max( ( RRSe / MUM ),RMSe ) ,( MLU + Max( MUR,( CS - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_RAM_Server ) - ( MDR * ( Const / AMS ) ) )", "choosing": "Min( ( Min( Max( MLU,DS ) ,( MUR * MLU ) ) + ( ( DS + RRSe ) + Min( RMSe ,MUC ) ) ) ,Min( Max( Max( MUR,RCSe ),RMSe ) ,( MUC * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) - ( MDR * ( AMS / ( PN - Max( MDR,MDR ) ) ) ) )", "choosing": "Min( ( Max( ( Max( MUR,Max( RMSe,RRSe ) ) * MUR ),RCSe ) + RMSe ) ,( MUC * Max( RRSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( MDR - DDR ) - ( FirstVNF_CPU_Server * ACS ) ),Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,Min( AMS ,FirstVNF_RAM ) ) ) * Min( Min( MDR ,PN ) ,( AMS / BR ) ) )", "choosing": "( ( DS - ( Min( CS ,DS ) / ( MUR + DS ) ) ) / Max( Max( RCSe,MUM ),( CS + MUC ) ) )", "obj1": 0.5950570342205324, "obj2": 0.3094709807597643}, {"determining": "( Max( Max( ( FirstVNF_RAM + BR ),Min( CRS ,Const ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( PN / MDR ) ) ) * ( ( ( RRS - MRS ) + Max( DDR,Const ) ) * Min( ( FirstVNF_RAM_Server * Const ) ,( ACS / PN ) ) ) )", "choosing": "( Min( Min( ( MUM / MUC ) ,( DS - CS ) ) ,( ( RRSe - MUC ) * ( RRSe + MUC ) ) ) * Max( Max( Min( CS ,RCSe ),( DS / MLU ) ),( MLU * MUR ) ) )", "obj1": 0.2661596958174905, "obj2": 0.5185648924712042}, {"determining": "( ( Const * Const ) / ( Min( Max( MRS,( ACS + ARS ) ) ,( MDR / Max( CRS,FirstVNF_CPU ) ) ) - PN ) )", "choosing": "( Min( ( MLU * DS ) ,MUR ) + Min( MUC ,RCSe ) )", "obj1": 0.5817490494296578, "obj2": 0.33585190517381286}, {"determining": "Min( Max( FirstVNF_RAM_Server,DDR ) ,( RRS - MRS ) )", "choosing": "( ( Min( Min( ( MUM / MUC ) ,( DS - CS ) ) ,( ( RRSe - MUC ) * ( RRSe + MUC ) ) ) + RMSe ) * ( RRSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ARS - Const ) / ( Const + ( AMS + RRS ) ) ),FirstVNF_Mem_Server ) + Min( ( ARS - ( PN - ( ACS / FirstVNF_CPU_Server ) ) ) ,BR ) )", "choosing": "( ( MUC + ( MLU / MUR ) ) / ( MUR - ( RRSe / ( Min( Max( MUR,RCSe ) ,MUM ) / ( ( MUM / DS ) / RCSe ) ) ) ) )", "obj1": 0.26425855513307983, "obj2": 0.5229484420843944}, {"determining": "( Max( ( ( ARS - Const ) / ( Const + ( AMS + RRS ) ) ),FirstVNF_Mem_Server ) + Min( ( ARS - ( PN - ( ACS / FirstVNF_CPU_Server ) ) ) ,BR ) )", "choosing": "( ( MUC + ( MLU / MUR ) ) / ( MUR - ( RRSe / ( Min( Max( MUR,RCSe ) ,MUM ) / ( ( MUM / DS ) / RCSe ) ) ) ) )", "obj1": 0.26425855513307983, "obj2": 0.5229484420843944}, {"determining": "( Max( ( ( ARS - Const ) / ( Const + ( AMS + RRS ) ) ),FirstVNF_Mem_Server ) + Min( ( ARS - ( PN - ( ACS / FirstVNF_CPU_Server ) ) ) ,BR ) )", "choosing": "( ( MUC + ( MLU / MUR ) ) / ( MUR - ( RRSe / ( Min( Max( MUR,RCSe ) ,MUM ) / ( ( MUM / DS ) / RCSe ) ) ) ) )", "obj1": 0.26425855513307983, "obj2": 0.5229484420843944}, {"determining": "( ( Min( AMS ,( MRS / ARS ) ) / ( ARS - MDR ) ) + ( Max( MDR,Min( ARS ,FirstVNF_CPU ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( Max( Max( RCSe,MUR ),( CS / DS ) ) * MUR ) / Max( Min( Min( RCSe ,MUR ) ,( Max( MUR,DS ) / RMSe ) ),RRSe ) )", "obj1": 0.26425855513307983, "obj2": 0.5229484420843944}, {"determining": "Min( Max( CRS,ARS ) ,( FirstVNF_RAM_Server + ARS ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( ( ( CS * RCSe ) / Max( MUC,MLU ) ) * ( ( MLU - MUM ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.2262357414448669, "obj2": 0.5405614769807349}, {"determining": "( ( Const / CRS ) * Max( ARS,( ACS - ( MDR + MRS ) ) ) )", "choosing": "Min( Min( ( ( RMSe / MUC ) + Max( RRSe,RRSe ) ) ,( ( RMSe - MUM ) + Min( DS ,RRSe ) ) ) ,Max( ( RMSe * MUR ),( MUC - MUR ) ) )", "obj1": 0.720532319391635, "obj2": 0.20727781017748279}, {"determining": "Max( ( FirstVNF_RAM_Server * MRS ),( ACS - ( MDR + ( ( Const / CRS ) * Max( ARS,Max( ARS,CRS ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe / MUC ) + Max( RRSe,RRSe ) ) ,( ( RMSe - MUM ) + Min( DS ,RRSe ) ) ) / MUC )", "obj1": 0.6178707224334601, "obj2": 0.29290099628559607}, {"determining": "( ( Max( ( AMS / MRS ),Max( FirstVNF_CPU_Server,MRS ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) + BR ) ) * ( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / Max( ( RRSe * CS ),( MLU * MUR ) ) ) - ( RMSe / CS ) ) / ( ( Max( MUM,MUC ) + ( Max( DS,RCSe ) / CS ) ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( AMS / MRS ),Max( FirstVNF_CPU_Server,MRS ) ) + Min( ( ARS - FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "Max( ( RRSe * CS ),( MLU * MUR ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "Min( Max( Max( ARS,Max( MRS,PN ) ),ACS ) ,Max( FirstVNF_CPU,RRS ) )", "choosing": "Min( ( RRSe + MUM ) ,( RMSe + MUR ) )", "obj1": 0.38783269961977185, "obj2": 0.40974950638311264}, {"determining": "( ( FirstVNF_Mem_Server - Const ) * ( FirstVNF_CPU_Server - ( AMS / ( ( Const / RRS ) - FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR + ( MUC * RRSe ) ) + Min( DS ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - RRS ) - Min( ACS ,MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,( RRS * ( Min( PN ,CRS ) * Min( AMS ,ARS ) ) ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( RCSe,MLU ) / ( Min( MUR ,Min( RRSe ,( ( MUC + MUM ) / Min( Min( ( MUC * RCSe ) ,RCSe ) ,MUM ) ) ) ) / ( RMSe * ( Min( ( DS * MUM ) ,RCSe ) * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,FirstVNF_Mem ) - AMS ) - ( Min( Max( CRS,ACS ) ,Max( FirstVNF_RAM_Server,RRS ) ) + ( FirstVNF_RAM - ACS ) ) )", "choosing": "Max( Max( RMSe,( ( CS - ( MUR * CS ) ) / ( Max( MLU,( RMSe * ( ( MUC * DS ) * MUR ) ) ) + MUM ) ) ),( ( RMSe - CS ) * Min( MLU ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,CRS ) - ( ACS / Min( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / FirstVNF_Mem ) ) ,( ACS - PN ) ) ) ) + Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( CRS + FirstVNF_CPU ) / Min( Const ,( ( ( CRS - MDR ) + Const ) * BR ) ) ) ) )", "choosing": "Min( Min( Max( MLU,( Min( ( DS + MUC ) ,Max( ( MUR + MUM ),RRSe ) ) * MUC ) ) ,( RMSe * Max( CS,MUM ) ) ) ,Max( DS,( ( MUM + MUC ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_RAM ) - Min( BR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( Max( MLU,DS ) ,( RCSe * ( ( RCSe / RCSe ) / ( RCSe * Min( RCSe ,CS ) ) ) ) ) + ( ( DS + RRSe ) + Min( RMSe ,MUC ) ) ) ,( ( ( CS * MUR ) * Min( MUR ,CS ) ) - Min( Min( RCSe ,MUR ) ,( RMSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),Max( MDR,ARS ) ) ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + CS ) + ( ( Max( RMSe,RRSe ) + RMSe ) + ( Max( RRSe,MUC ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_RAM ) * Min( ( Min( MRS ,FirstVNF_Mem_Server ) + ( Max( Max( FirstVNF_CPU,Min( RRS ,FirstVNF_Mem ) ),ACS ) * ( FirstVNF_Mem - Const ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "Max( Min( MLU ,Min( DS ,( ( DS / ( MUR - RRSe ) ) + MUR ) ) ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( AMS / MRS ),Max( FirstVNF_CPU,MRS ) ) + Min( ( ARS - FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ) * ( ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * Min( AMS ,AMS ) ) ) ) )", "choosing": "( ( ( DS / Min( RCSe ,RRSe ) ) - ( RMSe / CS ) ) / ( MUM / ( MLU * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem ,Max( FirstVNF_Mem,( ( FirstVNF_Mem_Server - MDR ) * PN ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( Min( MUR ,DS ) * MLU ) ,DS ) ,( Max( DS,Min( MUR ,RMSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( FirstVNF_CPU + CRS ) / Min( Const ,RRS ) ) ) - AMS ) + ( MRS - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( CS,DS ),Min( MUM ,DS ) ) / DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - FirstVNF_CPU ) + ( MRS - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / ( ( RRS * ( Min( CRS ,Const ) - Min( FirstVNF_CPU_Server ,ACS ) ) ) * ARS ) ) )", "choosing": "Min( Min( ( RMSe * RMSe ) ,RRSe ) ,( ( DS * Min( ( MLU + MLU ) ,Min( DS ,Min( RCSe ,Min( Min( RCSe ,RRSe ) ,RRSe ) ) ) ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * AMS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( CRS + Const ) ) )", "choosing": "( Max( ( CS * DS ),Min( ( ( RMSe / RCSe ) + DS ) ,DS ) ) / ( Min( MUR ,RMSe ) * ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ( FirstVNF_CPU - PN ) ) - ( PN * FirstVNF_Mem ) )", "choosing": "( ( RMSe - RRSe ) / Min( RMSe ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),Max( MDR,ARS ) ) ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + CS ) + ( ( Max( RMSe,RRSe ) + RMSe ) + ( Max( RRSe,MUC ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( AMS / MRS ),Max( FirstVNF_CPU_Server,MRS ) ) + Min( ( ARS - ( Const / BR ) ) ,Min( MDR ,BR ) ) ) * ( DDR * RRS ) )", "choosing": "( ( ( DS / ( RRSe / RCSe ) ) - ( RMSe / CS ) ) / ( Min( ( Max( ( RCSe + ( MUM / ( MLU / MUM ) ) ),MLU ) * MLU ) ,( DS - ( ( Min( MUR ,RMSe ) / RMSe ) * ( ( MUC - CS ) + Min( Min( MLU ,DS ) ,MLU ) ) ) ) ) / Max( MLU,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( AMS / MRS ),Max( FirstVNF_CPU_Server,MRS ) ) + Min( ( ARS - FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( Min( MUM ,RRSe ) / ( MUC - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( FirstVNF_CPU ,ACS ) ,Min( DDR ,FirstVNF_RAM ) ) / ( ( PN - ACS ) * ( FirstVNF_CPU + AMS ) ) ) * Min( ( ( DDR / AMS ) + Min( MRS ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "( ( MLU / DS ) * ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - MRS ) * ( ( ( RRS - MRS ) + Max( DDR,Const ) ) * Min( ( FirstVNF_RAM_Server * Const ) ,( ACS / PN ) ) ) )", "choosing": "( MUM * Max( Max( Min( CS ,RCSe ),( DS / MLU ) ),Max( Max( RRSe,DS ),Min( MLU ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - MRS )", "choosing": "Min( ( Min( Max( MLU,DS ) ,( MUR * MLU ) ) + ( ( DS + RRSe ) + Min( RMSe ,MUC ) ) ) ,( MUM - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * ( Min( ( Min( RRS ,FirstVNF_CPU_Server ) / PN ) ,Min( MRS ,FirstVNF_CPU ) ) * BR ) ) - ( MDR * ( Const - AMS ) ) )", "choosing": "Min( ( Min( Max( MLU,DS ) ,( MUR * MLU ) ) + ( ( DS + RRSe ) + Min( Min( ( CS - RMSe ) ,CS ) ,MUC ) ) ) ,( ( ( CS * MUR ) * ( MLU / CS ) ) - Min( Min( RCSe ,MUR ) ,( RMSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU ) * ( PN - RRS ) )", "choosing": "( ( MUR + MUC ) + ( MUR + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( ARS - FirstVNF_RAM_Server ),( MDR * ARS ) ) ,( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ) * ( FirstVNF_CPU_Server + BR ) )", "choosing": "( ( CS + MUM ) + ( Max( ( ( MUR + MUM ) - ( CS + RMSe ) ),RCSe ) / ( ( DS - MUM ) - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server / MDR ) ,( ( ( FirstVNF_CPU - AMS ) + ( FirstVNF_Mem - MRS ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( CS ,CS ) / ( MUM * RRSe ) ) ,( Max( MUR,Max( RRSe,MLU ) ) / ( DS - Max( Max( CS,DS ),Min( MUM ,DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - AMS ) + ( AMS + CRS ) ) / MRS )", "choosing": "( Max( Max( CS,DS ),Min( ( Min( CS ,CS ) / ( MUM - RRSe ) ) ,MUM ) ) / ( Min( MUR ,RMSe ) * ( RCSe * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - AMS ) + ( MRS - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( CS,DS ),Min( MUM ,DS ) ) / ( Min( MUR ,RMSe ) * ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Max( AMS,MRS ) * ( FirstVNF_CPU / BR ) ) * Max( ( ARS / Const ),( FirstVNF_Mem_Server - RRS ) ) ) + ( Max( Min( BR ,ACS ),Max( BR,PN ) ) * Max( ( Const - DDR ),( FirstVNF_CPU * RRS ) ) ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MUC / ( RRSe / RCSe ) ) - ( RMSe / CS ) ) / ( MUM / ( MLU * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( AMS / MRS ),Max( FirstVNF_CPU_Server,MRS ) ) + Min( ( ARS - FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / ( RRSe / RCSe ) ) - ( RMSe / CS ) ) / ( MUM / ( MLU * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) / ( FirstVNF_CPU / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( MUR,RRSe ) / MUC ) * ( RMSe * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * ACS ) * Min( Min( ( DDR / AMS ) ,Min( MRS ,FirstVNF_Mem_Server ) ) ,( ( ACS / FirstVNF_RAM_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "Max( Max( CS,MUM ),Min( Max( ( ( ( ( MUR / RCSe ) / MLU ) - ( ( ( MUC * MUC ) / RRSe ) * ( MUC - CS ) ) ) * RMSe ),RMSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( FirstVNF_CPU ,ACS ) ,Min( DDR ,FirstVNF_RAM ) ) / ( ( PN - ACS ) * ( FirstVNF_CPU + AMS ) ) ) * Min( ( ( DDR / AMS ) + Min( MRS ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "Max( ( ( Max( MUR,RRSe ) / MUC ) / RMSe ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,( Min( ARS ,FirstVNF_RAM ) * ARS ) ) - ( FirstVNF_CPU * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM - ACS ) + FirstVNF_CPU ) )", "choosing": "Min( ( MUM + MUR ) ,( DS / ( DS * ( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),Max( MDR,ARS ) ) ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( AMS - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + CS ) + ( Min( ( MUM * MUR ) ,Min( MUC ,MUR ) ) + ( Max( RRSe,MUC ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),Max( MDR,ARS ) ) ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + CS ) + ( ( Max( RMSe,RRSe ) + RMSe ) + ( Max( RRSe,MUC ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,MRS ) * ( FirstVNF_CPU_Server - ( ( BR / Min( ARS ,MDR ) ) + ( FirstVNF_Mem_Server / AMS ) ) ) ) * ( ( BR * FirstVNF_Mem ) + ( FirstVNF_Mem - BR ) ) )", "choosing": "Min( Max( Max( MUR,RCSe ),RMSe ) ,( MUC * ( ( Max( RCSe,MUR ) + ( CS / RMSe ) ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),Max( MDR,ARS ) ) ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + Min( ( FirstVNF_RAM_Server * Const ) ,( ACS / PN ) ) ) )", "choosing": "( ( MUM + CS ) + ( Max( Max( Min( CS ,RCSe ),( DS / MLU ) ),Max( Max( RRSe,DS ),Min( MLU ,MUR ) ) ) + ( Max( RRSe,MUC ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),Max( MDR,ARS ) ) ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + CS ) + ( ( Max( RMSe,RRSe ) + RMSe ) + ( Max( RRSe,MUC ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ( DDR - ACS ) / ( DDR / Const ) ) / ( ( ARS + ACS ) * ( ARS + FirstVNF_Mem_Server ) ) ) - ( ( ARS + FirstVNF_RAM ) / ( AMS + FirstVNF_CPU_Server ) ) ) ,( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) )", "choosing": "( ( Min( Min( CS ,RMSe ) ,MUC ) - DS ) * ( Max( ( RCSe - RMSe ),( MLU - RMSe ) ) * ( ( CS / MLU ) + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( ( FirstVNF_RAM - ACS ) * ( FirstVNF_Mem * PN ) ) + ( ( FirstVNF_CPU + CRS ) / Min( Const ,RRS ) ) ) )", "choosing": "Min( Min( RRSe ,Max( ( ( CS + RCSe ) / Max( MLU,RRSe ) ),Max( ( MLU - MUR ),( MUM - MUR ) ) ) ) ,( ( DS * Min( MUR ,RMSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( AMS ,Max( Max( ACS,( Max( ( PN + MDR ),( FirstVNF_RAM / FirstVNF_Mem ) ) - ( FirstVNF_RAM + ( FirstVNF_RAM_Server - PN ) ) ) ),( FirstVNF_Mem * ACS ) ) ) ,( ARS + ARS ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( FirstVNF_CPU + CRS ) / Min( Const ,RRS ) ) ) )", "choosing": "Min( Min( RRSe ,Min( RMSe ,Min( MLU ,( CS + MUM ) ) ) ) ,( ( DS * Min( MUR ,RMSe ) ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,CRS ) - ( ACS / Min( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / FirstVNF_Mem ) ) ,( ACS - PN ) ) ) ) + Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( CRS + FirstVNF_CPU ) / Min( Const ,( ( ( CRS - MDR ) + Const ) * BR ) ) ) ) )", "choosing": "Min( Min( Max( MLU,( Min( ( DS + MUC ) ,Max( ( MUR + MUM ),RRSe ) ) * MUC ) ) ,( RMSe * Max( CS,MUM ) ) ) ,Max( DS,( ( MUM + MUC ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,CRS ) - ( ACS / Min( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / FirstVNF_Mem ) ) ,( ACS - PN ) ) ) ) + Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( CRS + FirstVNF_CPU ) / Min( Const ,( ( ( CRS - MDR ) + Const ) * BR ) ) ) ) )", "choosing": "Min( Min( Max( MLU,( Min( ( DS + MUC ) ,Max( ( MUR + MUM ),RRSe ) ) * MUC ) ) ,( RMSe * Max( CS,MUM ) ) ) ,Max( DS,( ( MUM + MUC ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,CRS ) - ( ACS / Min( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / FirstVNF_Mem ) ) ,( ACS - PN ) ) ) ) + Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( CRS + FirstVNF_CPU ) / Min( Const ,( ( ( CRS - MDR ) + Const ) * BR ) ) ) ) )", "choosing": "Min( Min( Max( MLU,( Min( ( DS + MUC ) ,Max( ( MUR + MUM ),RRSe ) ) * MUC ) ) ,( RMSe * Max( CS,MUM ) ) ) ,Max( DS,( ( MUM + MUC ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( CRS + FirstVNF_CPU ) / Min( Const ,( FirstVNF_Mem_Server * BR ) ) ) ) )", "choosing": "Min( Min( RRSe ,( RMSe * MLU ) ) ,Max( DS,( Min( MUR ,MUM ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - AMS ) - AMS ) * ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - ( MDR * ( Const / AMS ) ) ) )", "choosing": "Min( Max( ( RRSe / MUM ),RMSe ) ,( MLU + Max( MUR,( CS - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_RAM_Server ) - ( MDR * ( Const / AMS ) ) )", "choosing": "Min( ( Min( Max( MLU,DS ) ,( MUR * MLU ) ) + ( ( DS + RRSe ) + Min( RMSe ,MUC ) ) ) ,Min( Max( Max( MUR,RCSe ),RMSe ) ,( MUC * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) - ( MDR * ( AMS / ( PN - Max( MDR,MDR ) ) ) ) )", "choosing": "Min( ( Max( ( Max( MUR,Max( RMSe,RRSe ) ) * MUR ),RCSe ) + RMSe ) ,( MUC * Max( RRSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_RAM_Server,DDR ) ,( RRS - MRS ) )", "choosing": "( ( Min( Min( ( MUM / MUC ) ,( DS - CS ) ) ,( ( RRSe - MUC ) * ( RRSe + MUC ) ) ) + RMSe ) * ( RRSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( AMS / MRS ),Max( FirstVNF_CPU_Server,MRS ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) + BR ) ) * ( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / Max( ( RRSe * CS ),( MLU * MUR ) ) ) - ( RMSe / CS ) ) / ( ( Max( MUM,MUC ) + ( Max( DS,RCSe ) / CS ) ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( AMS / MRS ),Max( FirstVNF_CPU_Server,MRS ) ) + Min( ( ARS - FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "Max( ( RRSe * CS ),( MLU * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,CRS ) - ( ACS / AMS ) ) + ( ( RRS - ARS ) * ( FirstVNF_CPU_Server - Max( Min( ( Const / RRS ) ,FirstVNF_CPU ),AMS ) ) ) ) - ( ARS - ARS ) )", "choosing": "Min( Min( ( ( DS * MUR ) + ( MUR + ( DS / ( RMSe / ( MUM / MLU ) ) ) ) ) ,( MLU * RMSe ) ) ,( ( DS * Min( MUR ,RMSe ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( ( BR / FirstVNF_Mem ) - ( ACS / AMS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( FirstVNF_CPU + CRS ) / Min( Const ,RRS ) ) ) )", "choosing": "Min( Min( RRSe ,( RMSe * ( ( MUM + DS ) + MUM ) ) ) ,( ( DS * ( MUR * RMSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),Max( MDR,ARS ) ) ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( MLU + MUC ) ) * ( ( DS + DS ) / ( ( RRSe / MUR ) - Min( RRSe ,MUC ) ) ) ) + Min( Max( Max( MLU,MLU ),( CS * CS ) ) ,( ( MUR - CS ) - Max( MUM,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( PN,AMS ) ,( ( ( FirstVNF_CPU - AMS ) + ( MRS - FirstVNF_Mem ) ) / ( ( DDR / AMS ) + Min( MRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( CS ,CS ) / ( MUM * RRSe ) ) ,( ( DS - Max( Max( CS,DS ),Min( ( ( Max( MUR,RRSe ) / MUC ) / RMSe ) ,DS ) ) ) / Max( RRSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server + ( ARS * ( Min( ( MRS * FirstVNF_RAM ) ,DDR ) / Min( ACS ,ACS ) ) ) ) * Min( ( ( DDR / AMS ) + Min( MRS ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "Max( ( ( Max( RRSe,( DS + MUC ) ) / MUC ) - RMSe ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( PN,AMS ) ,( ( ( FirstVNF_CPU - AMS ) + ( MRS - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( CS ,CS ) / ( MUM * RRSe ) ) ,( ( DS - Max( Max( CS,DS ),Min( MUM ,DS ) ) ) / Max( RRSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_RAM ) * Min( ( Min( MRS ,FirstVNF_Mem_Server ) + ( Max( Max( FirstVNF_CPU,Min( RRS ,FirstVNF_Mem ) ),ACS ) * ( FirstVNF_Mem - Const ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "Max( Min( MLU ,Min( DS ,( ( DS / ( MUR - RRSe ) ) + MUR ) ) ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_RAM ) * Min( ( Min( MRS ,FirstVNF_Mem_Server ) + ( Max( Max( FirstVNF_CPU,Min( RRS ,FirstVNF_Mem ) ),ACS ) * ( FirstVNF_Mem - Const ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "Max( Min( MLU ,Min( DS ,( ( DS / ( MUR - RRSe ) ) + MUR ) ) ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_RAM ) * Min( ( Min( MRS ,FirstVNF_Mem_Server ) + ( Max( Max( FirstVNF_CPU,Min( RRS ,FirstVNF_Mem ) ),ACS ) * ( FirstVNF_Mem - Const ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "Max( Min( MLU ,Min( DS ,( ( DS / ( MUR - RRSe ) ) + MUR ) ) ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ARS ) * ( FirstVNF_RAM_Server / BR ) )", "choosing": "Max( Min( MLU ,Min( Min( MLU ,RRSe ) ,( MUC + ( DS / ( RMSe - DS ) ) ) ) ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS - FirstVNF_RAM_Server ) - ( MDR * ( Const / AMS ) ) ) * ( ( BR * FirstVNF_Mem ) + Max( Max( Const,RRS ),Min( ACS ,MRS ) ) ) )", "choosing": "Min( ( MUC * MUR ) ,Min( RCSe ,( ( MUR / ( DS / MLU ) ) - ( MUR - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - ( MDR * ( Const / AMS ) ) ) * ( ( BR * FirstVNF_Mem ) + ( FirstVNF_Mem - BR ) ) ) - FirstVNF_RAM_Server ) - MRS )", "choosing": "Min( ( Min( Max( MLU,DS ) ,Max( ( RMSe / RRSe ),RMSe ) ) + ( ( DS + RRSe ) + Min( RMSe ,MUC ) ) ) ,( MUM - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_RAM_Server ) - Max( ( ARS * FirstVNF_RAM ),( AMS + FirstVNF_Mem ) ) )", "choosing": "Min( ( Min( ( MUM - MUR ) ,( ( MUC / MUR ) - ( RCSe / Max( DS,RRSe ) ) ) ) + Min( ( MUR * RRSe ) ,RRSe ) ) ,( MUR * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - ( MDR * ( Const / AMS ) ) ) * ( ( BR * FirstVNF_Mem ) + ( FirstVNF_Mem - BR ) ) )", "choosing": "Min( ( Min( Max( MLU,DS ) ,( MUR * MLU ) ) + ( ( DS + RRSe ) + Min( RMSe ,MUC ) ) ) ,( MUM - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,( ARS * CRS ) ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + CS ) + ( ( Max( RMSe,RRSe ) + RMSe ) + ( Max( RRSe,CS ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( MDR / BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),Max( ( Min( Min( ( DDR / ARS ) ,FirstVNF_RAM_Server ) ,Min( CRS ,FirstVNF_Mem ) ) * FirstVNF_Mem_Server ),ARS ) ) ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + CS ) + ( Min( MUR ,DS ) + ( Max( RRSe,MUC ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,( MRS / FirstVNF_Mem ) ) ,( MDR - Max( FirstVNF_RAM_Server,( ARS + Const ) ) ) )", "choosing": "Max( ( ( Min( DS ,MUR ) - DS ) * RCSe ),Max( MLU,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,( MRS / FirstVNF_Mem ) ) ,( MDR - FirstVNF_CPU ) )", "choosing": "Max( ( MUM - MUR ),Min( DS ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( FirstVNF_CPU + CRS ) / Min( Const ,RRS ) ) ) - AMS ) + ( MRS - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MLU / DS ) * ( MUC * MLU ) ) - ( ( CS - MLU ) + Min( MUC ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - ( MDR * ( Const / AMS ) ) )", "choosing": "Min( ( Min( Max( MLU,DS ) ,( MUR * MLU ) ) + ( ( DS + RRSe ) + Min( RMSe ,MUC ) ) ) ,( ( ( CS * MUR ) * ( MUR / CS ) ) - Min( Min( RCSe ,MUR ) ,( RMSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_CPU_Server / MDR ) ,( ( ( FirstVNF_CPU - AMS ) + ( FirstVNF_Mem - MRS ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) + ( FirstVNF_RAM + BR ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / Max( ( RRSe * CS ),( MLU * MUR ) ) ) - ( Max( MUR,Max( RRSe,MLU ) ) / CS ) ) / ( MUM / ( MLU * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server / MDR ) ,( ( ( FirstVNF_CPU - AMS ) + ( FirstVNF_Mem - MRS ) ) + ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( Min( CS ,CS ) / ( MUM * RRSe ) ) ,( Max( MUR,Max( ( MUM / ( MLU * RMSe ) ),MLU ) ) / ( DS - Max( Max( CS,DS ),Min( MUM ,DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( AMS / MRS ),Max( FirstVNF_CPU_Server,MRS ) ) + ( FirstVNF_RAM + BR ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( CS ,CS ) / ( MUM * RRSe ) ) ,( Max( MUR,Max( RRSe,MLU ) ) / ( DS - Max( Max( CS,DS ),Min( MUM ,DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - ( MDR * ( Const / AMS ) ) )", "choosing": "Min( ( Min( Max( MLU,DS ) ,( MUR * MLU ) ) + ( ( DS + RRSe ) + Min( RMSe ,MUC ) ) ) ,( ( ( CS * MUR ) * ( MUR / CS ) ) - Min( Min( RCSe ,MUR ) ,( RMSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( ( ( BR / ( ARS - MDR ) ) + ( ( MDR / MDR ) * FirstVNF_Mem_Server ) ) + FirstVNF_CPU ) / Min( Const ,( FirstVNF_Mem_Server * BR ) ) ) ) )", "choosing": "Min( Max( RCSe,MUR ) ,Max( DS,( Min( MUR ,MUM ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( CRS + FirstVNF_CPU ) / Min( Const ,( FirstVNF_Mem_Server * BR ) ) ) ) )", "choosing": "Min( Min( RRSe ,( RMSe * MLU ) ) ,Max( DS,( Min( MUR ,MUM ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( FirstVNF_Mem_Server - AMS ) )", "choosing": "Min( Min( DS ,( RMSe * MLU ) ) ,( ( DS * Min( MUR ,( ( MUR - CS ) - Max( MUM,RRSe ) ) ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,CRS ) - ( ACS / AMS ) ) - AMS ) + ( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem ) ,PN ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( ( ( RRSe + Min( CS ,( RRSe / DS ) ) ) - ( RCSe - ( RRSe / RMSe ) ) ),RCSe ) * ( RMSe / ( ( MUM + CS ) + ( ( Max( RMSe,RRSe ) + RMSe ) + ( Max( RRSe,MUC ) + MUC ) ) ) ) ) + Min( Max( Max( MLU,MLU ),( CS * CS ) ) ,( ( MUR * CS ) - Max( MUM,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( FirstVNF_RAM,RRS ),( BR + RRS ) ) + ( AMS * ( FirstVNF_CPU_Server + ACS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Max( MUM,CS ) - ( MLU + MUC ) ) * ( RMSe / MUM ) ) + Min( Max( ( CS * CS ),Max( MLU,MLU ) ) ,( ( MUR - CS ) - Max( MUM,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem ,Max( FirstVNF_Mem,( ( FirstVNF_Mem_Server - MDR ) * PN ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( Min( MUR ,DS ) * MLU ) ,DS ) ,( Max( DS,Min( MUR ,RMSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem ,Max( FirstVNF_Mem,( ( FirstVNF_Mem_Server - MDR ) * PN ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( Min( MUR ,DS ) * MLU ) ,DS ) ,( Max( DS,Min( MUR ,RMSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem ,Max( FirstVNF_Mem,( ( FirstVNF_Mem_Server - MDR ) * PN ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( Min( MUR ,DS ) * MLU ) ,DS ) ,( Max( DS,Min( MUR ,RMSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem ,Max( FirstVNF_Mem,( ( FirstVNF_Mem_Server - MDR ) * PN ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( Min( MUR ,DS ) * MLU ) ,DS ) ,( Max( DS,Min( MUR ,RMSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,FirstVNF_Mem ) - AMS ) - ( FirstVNF_CPU + Max( ( RRS - MRS ),( Max( RRS,FirstVNF_CPU_Server ) * ARS ) ) ) )", "choosing": "Min( ( ( Max( ( RRSe * CS ),( RCSe * DS ) ) / Max( ( MUR - Min( ( ( RCSe + MUC ) - MUM ) ,( RCSe + MUM ) ) ),Max( MUM,MUR ) ) ) + ( ( ( CS * RCSe ) / Max( MUC,MLU ) ) * ( ( MLU - MUM ) / Max( RRSe,MUR ) ) ) ) ,Min( MUC ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( RRS - MRS ),( ARS * ( ( Max( Const,FirstVNF_Mem ) - AMS ) - ( FirstVNF_CPU + ( FirstVNF_RAM - ACS ) ) ) ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + Min( MUC ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,FirstVNF_Mem ) - AMS ) - ( FirstVNF_CPU + ( FirstVNF_RAM - ACS ) ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( ( ( CS * RCSe ) / Max( MUC,MLU ) ) * ( ( MLU - MUM ) / Max( RRSe,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,( Min( ARS ,FirstVNF_RAM ) * ARS ) ) - ( FirstVNF_CPU * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM - ACS ) + FirstVNF_CPU ) )", "choosing": "Min( ( MUM + MUR ) ,( DS / ( DS * ( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,( Min( ARS ,FirstVNF_RAM ) * ARS ) ) - ( FirstVNF_CPU * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM - ACS ) + FirstVNF_CPU ) )", "choosing": "Min( ( MUM + MUR ) ,( DS / ( DS * ( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,( Min( ARS ,FirstVNF_RAM ) * ARS ) ) - ( FirstVNF_CPU * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM - ACS ) + FirstVNF_CPU ) )", "choosing": "Min( ( MUM + MUR ) ,( DS / ( DS * ( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,( Min( ARS ,CRS ) * ARS ) ) - AMS ) - ( FirstVNF_CPU + ( FirstVNF_RAM - ACS ) ) )", "choosing": "Min( ( MUM + MUR ) ,( DS / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),Max( MDR,ARS ) ) ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( Min( RRS ,( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + PN ) ) / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + CS ) + ( ( Max( RMSe,RRSe ) + RMSe ) + ( Max( RRSe,MUC ) + Max( DS,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),Max( MDR,ARS ) ) ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + CS ) + ( ( Max( RMSe,RRSe ) + RMSe ) + ( Max( RRSe,MUC ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( ( ( ( ( RRS / FirstVNF_RAM ) * FirstVNF_CPU_Server ) + Min( Const ,ARS ) ) - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ),DDR ) ,( RRS - MRS ) )", "choosing": "( ( Min( Min( ( MUM / MUC ) ,( DS - CS ) ) ,( ( RRSe - MUC ) * Max( DS,MUC ) ) ) + RMSe ) * ( RRSe - Max( RMSe,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_RAM_Server,DDR ) ,( RRS - MRS ) )", "choosing": "( DS + ( ( Max( RMSe,RRSe ) + RMSe ) + ( Max( RRSe,MUC ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * AMS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( CRS + Const ) ) )", "choosing": "( Max( ( CS * DS ),Min( ( ( RMSe / RCSe ) + DS ) ,DS ) ) / ( Min( MUR ,RMSe ) * ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * AMS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( CRS + Const ) ) )", "choosing": "( Max( ( CS * DS ),Min( ( ( RMSe / RCSe ) + DS ) ,DS ) ) / ( Min( MUR ,RMSe ) * ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * AMS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( CRS + Const ) ) )", "choosing": "( Max( ( CS * DS ),Min( ( ( RMSe / RCSe ) + DS ) ,DS ) ) / ( Min( MUR ,RMSe ) * ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * AMS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( CRS + Const ) ) )", "choosing": "( Max( ( CS * DS ),Min( ( ( RMSe / RCSe ) + DS ) ,DS ) ) / ( Min( MUR ,RMSe ) * ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_CPU + CRS ) / Min( Const ,RRS ) ) ) - AMS ) + ( MRS - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( ( MUR + CS ),DS ),Min( MUM ,DS ) ) / DS )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "Min( Max( Max( ARS,Max( MRS,PN ) ),ACS ) ,Max( FirstVNF_CPU,RRS ) )", "choosing": "Min( ( RRSe + MUM ) ,( RMSe + MUR ) )", "obj1": 0.38783269961977185, "obj2": 0.40974950638311264}, {"determining": "( ( FirstVNF_Mem_Server - Const ) * ( FirstVNF_CPU_Server - ( AMS / ( ( Const / RRS ) - FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR + ( MUC * RRSe ) ) + Min( DS ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - RRS ) - Min( ACS ,MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,( RRS * ( Min( PN ,CRS ) * Min( AMS ,ARS ) ) ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( RCSe,MLU ) / ( Min( MUR ,Min( RRSe ,( ( MUC + MUM ) / Min( Min( ( MUC * RCSe ) ,RCSe ) ,MUM ) ) ) ) / ( RMSe * ( Min( ( DS * MUM ) ,RCSe ) * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,FirstVNF_Mem ) - AMS ) - ( Min( Max( CRS,ACS ) ,Max( FirstVNF_RAM_Server,RRS ) ) + ( FirstVNF_RAM - ACS ) ) )", "choosing": "Max( Max( RMSe,( ( CS - ( MUR * CS ) ) / ( Max( MLU,( RMSe * ( ( MUC * DS ) * MUR ) ) ) + MUM ) ) ),( ( RMSe - CS ) * Min( MLU ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,CRS ) - ( ACS / Min( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / FirstVNF_Mem ) ) ,( ACS - PN ) ) ) ) + Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( CRS + FirstVNF_CPU ) / Min( Const ,( ( ( CRS - MDR ) + Const ) * BR ) ) ) ) )", "choosing": "Min( Min( Max( MLU,( Min( ( DS + MUC ) ,Max( ( MUR + MUM ),RRSe ) ) * MUC ) ) ,( RMSe * Max( CS,MUM ) ) ) ,Max( DS,( ( MUM + MUC ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_RAM ) - Min( BR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( Max( MLU,DS ) ,( RCSe * ( ( RCSe / RCSe ) / ( RCSe * Min( RCSe ,CS ) ) ) ) ) + ( ( DS + RRSe ) + Min( RMSe ,MUC ) ) ) ,( ( ( CS * MUR ) * Min( MUR ,CS ) ) - Min( Min( RCSe ,MUR ) ,( RMSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),Max( MDR,ARS ) ) ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + CS ) + ( ( Max( RMSe,RRSe ) + RMSe ) + ( Max( RRSe,MUC ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_RAM ) * Min( ( Min( MRS ,FirstVNF_Mem_Server ) + ( Max( Max( FirstVNF_CPU,Min( RRS ,FirstVNF_Mem ) ),ACS ) * ( FirstVNF_Mem - Const ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "Max( Min( MLU ,Min( DS ,( ( DS / ( MUR - RRSe ) ) + MUR ) ) ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( AMS / MRS ),Max( FirstVNF_CPU,MRS ) ) + Min( ( ARS - FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ) * ( ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * Min( AMS ,AMS ) ) ) ) )", "choosing": "( ( ( DS / Min( RCSe ,RRSe ) ) - ( RMSe / CS ) ) / ( MUM / ( MLU * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem ,Max( FirstVNF_Mem,( ( FirstVNF_Mem_Server - MDR ) * PN ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( Min( MUR ,DS ) * MLU ) ,DS ) ,( Max( DS,Min( MUR ,RMSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( FirstVNF_CPU + CRS ) / Min( Const ,RRS ) ) ) - AMS ) + ( MRS - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( CS,DS ),Min( MUM ,DS ) ) / DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - FirstVNF_CPU ) + ( MRS - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / ( ( RRS * ( Min( CRS ,Const ) - Min( FirstVNF_CPU_Server ,ACS ) ) ) * ARS ) ) )", "choosing": "Min( Min( ( RMSe * RMSe ) ,RRSe ) ,( ( DS * Min( ( MLU + MLU ) ,Min( DS ,Min( RCSe ,Min( Min( RCSe ,RRSe ) ,RRSe ) ) ) ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * AMS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( CRS + Const ) ) )", "choosing": "( Max( ( CS * DS ),Min( ( ( RMSe / RCSe ) + DS ) ,DS ) ) / ( Min( MUR ,RMSe ) * ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ( FirstVNF_CPU - PN ) ) - ( PN * FirstVNF_Mem ) )", "choosing": "( ( RMSe - RRSe ) / Min( RMSe ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),Max( MDR,ARS ) ) ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + CS ) + ( ( Max( RMSe,RRSe ) + RMSe ) + ( Max( RRSe,MUC ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( AMS / MRS ),Max( FirstVNF_CPU_Server,MRS ) ) + Min( ( ARS - ( Const / BR ) ) ,Min( MDR ,BR ) ) ) * ( DDR * RRS ) )", "choosing": "( ( ( DS / ( RRSe / RCSe ) ) - ( RMSe / CS ) ) / ( Min( ( Max( ( RCSe + ( MUM / ( MLU / MUM ) ) ),MLU ) * MLU ) ,( DS - ( ( Min( MUR ,RMSe ) / RMSe ) * ( ( MUC - CS ) + Min( Min( MLU ,DS ) ,MLU ) ) ) ) ) / Max( MLU,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( AMS / MRS ),Max( FirstVNF_CPU_Server,MRS ) ) + Min( ( ARS - FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( Min( MUM ,RRSe ) / ( MUC - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( FirstVNF_CPU ,ACS ) ,Min( DDR ,FirstVNF_RAM ) ) / ( ( PN - ACS ) * ( FirstVNF_CPU + AMS ) ) ) * Min( ( ( DDR / AMS ) + Min( MRS ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "( ( MLU / DS ) * ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - MRS ) * ( ( ( RRS - MRS ) + Max( DDR,Const ) ) * Min( ( FirstVNF_RAM_Server * Const ) ,( ACS / PN ) ) ) )", "choosing": "( MUM * Max( Max( Min( CS ,RCSe ),( DS / MLU ) ),Max( Max( RRSe,DS ),Min( MLU ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - MRS )", "choosing": "Min( ( Min( Max( MLU,DS ) ,( MUR * MLU ) ) + ( ( DS + RRSe ) + Min( RMSe ,MUC ) ) ) ,( MUM - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * ( Min( ( Min( RRS ,FirstVNF_CPU_Server ) / PN ) ,Min( MRS ,FirstVNF_CPU ) ) * BR ) ) - ( MDR * ( Const - AMS ) ) )", "choosing": "Min( ( Min( Max( MLU,DS ) ,( MUR * MLU ) ) + ( ( DS + RRSe ) + Min( Min( ( CS - RMSe ) ,CS ) ,MUC ) ) ) ,( ( ( CS * MUR ) * ( MLU / CS ) ) - Min( Min( RCSe ,MUR ) ,( RMSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU ) * ( PN - RRS ) )", "choosing": "( ( MUR + MUC ) + ( MUR + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( ARS - FirstVNF_RAM_Server ),( MDR * ARS ) ) ,( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ) * ( FirstVNF_CPU_Server + BR ) )", "choosing": "( ( CS + MUM ) + ( Max( ( ( MUR + MUM ) - ( CS + RMSe ) ),RCSe ) / ( ( DS - MUM ) - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server / MDR ) ,( ( ( FirstVNF_CPU - AMS ) + ( FirstVNF_Mem - MRS ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( CS ,CS ) / ( MUM * RRSe ) ) ,( Max( MUR,Max( RRSe,MLU ) ) / ( DS - Max( Max( CS,DS ),Min( MUM ,DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - AMS ) + ( AMS + CRS ) ) / MRS )", "choosing": "( Max( Max( CS,DS ),Min( ( Min( CS ,CS ) / ( MUM - RRSe ) ) ,MUM ) ) / ( Min( MUR ,RMSe ) * ( RCSe * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - AMS ) + ( MRS - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( CS,DS ),Min( MUM ,DS ) ) / ( Min( MUR ,RMSe ) * ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Max( AMS,MRS ) * ( FirstVNF_CPU / BR ) ) * Max( ( ARS / Const ),( FirstVNF_Mem_Server - RRS ) ) ) + ( Max( Min( BR ,ACS ),Max( BR,PN ) ) * Max( ( Const - DDR ),( FirstVNF_CPU * RRS ) ) ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MUC / ( RRSe / RCSe ) ) - ( RMSe / CS ) ) / ( MUM / ( MLU * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( AMS / MRS ),Max( FirstVNF_CPU_Server,MRS ) ) + Min( ( ARS - FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / ( RRSe / RCSe ) ) - ( RMSe / CS ) ) / ( MUM / ( MLU * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) / ( FirstVNF_CPU / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( MUR,RRSe ) / MUC ) * ( RMSe * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * ACS ) * Min( Min( ( DDR / AMS ) ,Min( MRS ,FirstVNF_Mem_Server ) ) ,( ( ACS / FirstVNF_RAM_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "Max( Max( CS,MUM ),Min( Max( ( ( ( ( MUR / RCSe ) / MLU ) - ( ( ( MUC * MUC ) / RRSe ) * ( MUC - CS ) ) ) * RMSe ),RMSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( FirstVNF_CPU ,ACS ) ,Min( DDR ,FirstVNF_RAM ) ) / ( ( PN - ACS ) * ( FirstVNF_CPU + AMS ) ) ) * Min( ( ( DDR / AMS ) + Min( MRS ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "Max( ( ( Max( MUR,RRSe ) / MUC ) / RMSe ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,( Min( ARS ,FirstVNF_RAM ) * ARS ) ) - ( FirstVNF_CPU * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM - ACS ) + FirstVNF_CPU ) )", "choosing": "Min( ( MUM + MUR ) ,( DS / ( DS * ( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),Max( MDR,ARS ) ) ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( AMS - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + CS ) + ( Min( ( MUM * MUR ) ,Min( MUC ,MUR ) ) + ( Max( RRSe,MUC ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),Max( MDR,ARS ) ) ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + CS ) + ( ( Max( RMSe,RRSe ) + RMSe ) + ( Max( RRSe,MUC ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,MRS ) * ( FirstVNF_CPU_Server - ( ( BR / Min( ARS ,MDR ) ) + ( FirstVNF_Mem_Server / AMS ) ) ) ) * ( ( BR * FirstVNF_Mem ) + ( FirstVNF_Mem - BR ) ) )", "choosing": "Min( Max( Max( MUR,RCSe ),RMSe ) ,( MUC * ( ( Max( RCSe,MUR ) + ( CS / RMSe ) ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),Max( MDR,ARS ) ) ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + Min( ( FirstVNF_RAM_Server * Const ) ,( ACS / PN ) ) ) )", "choosing": "( ( MUM + CS ) + ( Max( Max( Min( CS ,RCSe ),( DS / MLU ) ),Max( Max( RRSe,DS ),Min( MLU ,MUR ) ) ) + ( Max( RRSe,MUC ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),Max( MDR,ARS ) ) ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + CS ) + ( ( Max( RMSe,RRSe ) + RMSe ) + ( Max( RRSe,MUC ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ( DDR - ACS ) / ( DDR / Const ) ) / ( ( ARS + ACS ) * ( ARS + FirstVNF_Mem_Server ) ) ) - ( ( ARS + FirstVNF_RAM ) / ( AMS + FirstVNF_CPU_Server ) ) ) ,( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) )", "choosing": "( ( Min( Min( CS ,RMSe ) ,MUC ) - DS ) * ( Max( ( RCSe - RMSe ),( MLU - RMSe ) ) * ( ( CS / MLU ) + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( ( FirstVNF_RAM - ACS ) * ( FirstVNF_Mem * PN ) ) + ( ( FirstVNF_CPU + CRS ) / Min( Const ,RRS ) ) ) )", "choosing": "Min( Min( RRSe ,Max( ( ( CS + RCSe ) / Max( MLU,RRSe ) ),Max( ( MLU - MUR ),( MUM - MUR ) ) ) ) ,( ( DS * Min( MUR ,RMSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( AMS ,Max( Max( ACS,( Max( ( PN + MDR ),( FirstVNF_RAM / FirstVNF_Mem ) ) - ( FirstVNF_RAM + ( FirstVNF_RAM_Server - PN ) ) ) ),( FirstVNF_Mem * ACS ) ) ) ,( ARS + ARS ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( FirstVNF_CPU + CRS ) / Min( Const ,RRS ) ) ) )", "choosing": "Min( Min( RRSe ,Min( RMSe ,Min( MLU ,( CS + MUM ) ) ) ) ,( ( DS * Min( MUR ,RMSe ) ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,CRS ) - ( ACS / Min( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / FirstVNF_Mem ) ) ,( ACS - PN ) ) ) ) + Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( CRS + FirstVNF_CPU ) / Min( Const ,( ( ( CRS - MDR ) + Const ) * BR ) ) ) ) )", "choosing": "Min( Min( Max( MLU,( Min( ( DS + MUC ) ,Max( ( MUR + MUM ),RRSe ) ) * MUC ) ) ,( RMSe * Max( CS,MUM ) ) ) ,Max( DS,( ( MUM + MUC ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,CRS ) - ( ACS / Min( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / FirstVNF_Mem ) ) ,( ACS - PN ) ) ) ) + Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( CRS + FirstVNF_CPU ) / Min( Const ,( ( ( CRS - MDR ) + Const ) * BR ) ) ) ) )", "choosing": "Min( Min( Max( MLU,( Min( ( DS + MUC ) ,Max( ( MUR + MUM ),RRSe ) ) * MUC ) ) ,( RMSe * Max( CS,MUM ) ) ) ,Max( DS,( ( MUM + MUC ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,CRS ) - ( ACS / Min( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / FirstVNF_Mem ) ) ,( ACS - PN ) ) ) ) + Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( CRS + FirstVNF_CPU ) / Min( Const ,( ( ( CRS - MDR ) + Const ) * BR ) ) ) ) )", "choosing": "Min( Min( Max( MLU,( Min( ( DS + MUC ) ,Max( ( MUR + MUM ),RRSe ) ) * MUC ) ) ,( RMSe * Max( CS,MUM ) ) ) ,Max( DS,( ( MUM + MUC ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( CRS + FirstVNF_CPU ) / Min( Const ,( FirstVNF_Mem_Server * BR ) ) ) ) )", "choosing": "Min( Min( RRSe ,( RMSe * MLU ) ) ,Max( DS,( Min( MUR ,MUM ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - AMS ) - AMS ) * ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - ( MDR * ( Const / AMS ) ) ) )", "choosing": "Min( Max( ( RRSe / MUM ),RMSe ) ,( MLU + Max( MUR,( CS - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_RAM_Server ) - ( MDR * ( Const / AMS ) ) )", "choosing": "Min( ( Min( Max( MLU,DS ) ,( MUR * MLU ) ) + ( ( DS + RRSe ) + Min( RMSe ,MUC ) ) ) ,Min( Max( Max( MUR,RCSe ),RMSe ) ,( MUC * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) - ( MDR * ( AMS / ( PN - Max( MDR,MDR ) ) ) ) )", "choosing": "Min( ( Max( ( Max( MUR,Max( RMSe,RRSe ) ) * MUR ),RCSe ) + RMSe ) ,( MUC * Max( RRSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_RAM_Server,DDR ) ,( RRS - MRS ) )", "choosing": "( ( Min( Min( ( MUM / MUC ) ,( DS - CS ) ) ,( ( RRSe - MUC ) * ( RRSe + MUC ) ) ) + RMSe ) * ( RRSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( AMS / MRS ),Max( FirstVNF_CPU_Server,MRS ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) + BR ) ) * ( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / Max( ( RRSe * CS ),( MLU * MUR ) ) ) - ( RMSe / CS ) ) / ( ( Max( MUM,MUC ) + ( Max( DS,RCSe ) / CS ) ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( AMS / MRS ),Max( FirstVNF_CPU_Server,MRS ) ) + Min( ( ARS - FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "Max( ( RRSe * CS ),( MLU * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,CRS ) - ( ACS / AMS ) ) + ( ( RRS - ARS ) * ( FirstVNF_CPU_Server - Max( Min( ( Const / RRS ) ,FirstVNF_CPU ),AMS ) ) ) ) - ( ARS - ARS ) )", "choosing": "Min( Min( ( ( DS * MUR ) + ( MUR + ( DS / ( RMSe / ( MUM / MLU ) ) ) ) ) ,( MLU * RMSe ) ) ,( ( DS * Min( MUR ,RMSe ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( ( BR / FirstVNF_Mem ) - ( ACS / AMS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( FirstVNF_CPU + CRS ) / Min( Const ,RRS ) ) ) )", "choosing": "Min( Min( RRSe ,( RMSe * ( ( MUM + DS ) + MUM ) ) ) ,( ( DS * ( MUR * RMSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),Max( MDR,ARS ) ) ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( MLU + MUC ) ) * ( ( DS + DS ) / ( ( RRSe / MUR ) - Min( RRSe ,MUC ) ) ) ) + Min( Max( Max( MLU,MLU ),( CS * CS ) ) ,( ( MUR - CS ) - Max( MUM,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( PN,AMS ) ,( ( ( FirstVNF_CPU - AMS ) + ( MRS - FirstVNF_Mem ) ) / ( ( DDR / AMS ) + Min( MRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( CS ,CS ) / ( MUM * RRSe ) ) ,( ( DS - Max( Max( CS,DS ),Min( ( ( Max( MUR,RRSe ) / MUC ) / RMSe ) ,DS ) ) ) / Max( RRSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server + ( ARS * ( Min( ( MRS * FirstVNF_RAM ) ,DDR ) / Min( ACS ,ACS ) ) ) ) * Min( ( ( DDR / AMS ) + Min( MRS ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "Max( ( ( Max( RRSe,( DS + MUC ) ) / MUC ) - RMSe ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( PN,AMS ) ,( ( ( FirstVNF_CPU - AMS ) + ( MRS - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( CS ,CS ) / ( MUM * RRSe ) ) ,( ( DS - Max( Max( CS,DS ),Min( MUM ,DS ) ) ) / Max( RRSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_RAM ) * Min( ( Min( MRS ,FirstVNF_Mem_Server ) + ( Max( Max( FirstVNF_CPU,Min( RRS ,FirstVNF_Mem ) ),ACS ) * ( FirstVNF_Mem - Const ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "Max( Min( MLU ,Min( DS ,( ( DS / ( MUR - RRSe ) ) + MUR ) ) ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_RAM ) * Min( ( Min( MRS ,FirstVNF_Mem_Server ) + ( Max( Max( FirstVNF_CPU,Min( RRS ,FirstVNF_Mem ) ),ACS ) * ( FirstVNF_Mem - Const ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "Max( Min( MLU ,Min( DS ,( ( DS / ( MUR - RRSe ) ) + MUR ) ) ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_RAM ) * Min( ( Min( MRS ,FirstVNF_Mem_Server ) + ( Max( Max( FirstVNF_CPU,Min( RRS ,FirstVNF_Mem ) ),ACS ) * ( FirstVNF_Mem - Const ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "Max( Min( MLU ,Min( DS ,( ( DS / ( MUR - RRSe ) ) + MUR ) ) ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ARS ) * ( FirstVNF_RAM_Server / BR ) )", "choosing": "Max( Min( MLU ,Min( Min( MLU ,RRSe ) ,( MUC + ( DS / ( RMSe - DS ) ) ) ) ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS - FirstVNF_RAM_Server ) - ( MDR * ( Const / AMS ) ) ) * ( ( BR * FirstVNF_Mem ) + Max( Max( Const,RRS ),Min( ACS ,MRS ) ) ) )", "choosing": "Min( ( MUC * MUR ) ,Min( RCSe ,( ( MUR / ( DS / MLU ) ) - ( MUR - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - ( MDR * ( Const / AMS ) ) ) * ( ( BR * FirstVNF_Mem ) + ( FirstVNF_Mem - BR ) ) ) - FirstVNF_RAM_Server ) - MRS )", "choosing": "Min( ( Min( Max( MLU,DS ) ,Max( ( RMSe / RRSe ),RMSe ) ) + ( ( DS + RRSe ) + Min( RMSe ,MUC ) ) ) ,( MUM - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_RAM_Server ) - Max( ( ARS * FirstVNF_RAM ),( AMS + FirstVNF_Mem ) ) )", "choosing": "Min( ( Min( ( MUM - MUR ) ,( ( MUC / MUR ) - ( RCSe / Max( DS,RRSe ) ) ) ) + Min( ( MUR * RRSe ) ,RRSe ) ) ,( MUR * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - ( MDR * ( Const / AMS ) ) ) * ( ( BR * FirstVNF_Mem ) + ( FirstVNF_Mem - BR ) ) )", "choosing": "Min( ( Min( Max( MLU,DS ) ,( MUR * MLU ) ) + ( ( DS + RRSe ) + Min( RMSe ,MUC ) ) ) ,( MUM - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,( ARS * CRS ) ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + CS ) + ( ( Max( RMSe,RRSe ) + RMSe ) + ( Max( RRSe,CS ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( MDR / BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),Max( ( Min( Min( ( DDR / ARS ) ,FirstVNF_RAM_Server ) ,Min( CRS ,FirstVNF_Mem ) ) * FirstVNF_Mem_Server ),ARS ) ) ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + CS ) + ( Min( MUR ,DS ) + ( Max( RRSe,MUC ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,( MRS / FirstVNF_Mem ) ) ,( MDR - Max( FirstVNF_RAM_Server,( ARS + Const ) ) ) )", "choosing": "Max( ( ( Min( DS ,MUR ) - DS ) * RCSe ),Max( MLU,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,( MRS / FirstVNF_Mem ) ) ,( MDR - FirstVNF_CPU ) )", "choosing": "Max( ( MUM - MUR ),Min( DS ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( FirstVNF_CPU + CRS ) / Min( Const ,RRS ) ) ) - AMS ) + ( MRS - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MLU / DS ) * ( MUC * MLU ) ) - ( ( CS - MLU ) + Min( MUC ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - ( MDR * ( Const / AMS ) ) )", "choosing": "Min( ( Min( Max( MLU,DS ) ,( MUR * MLU ) ) + ( ( DS + RRSe ) + Min( RMSe ,MUC ) ) ) ,( ( ( CS * MUR ) * ( MUR / CS ) ) - Min( Min( RCSe ,MUR ) ,( RMSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_CPU_Server / MDR ) ,( ( ( FirstVNF_CPU - AMS ) + ( FirstVNF_Mem - MRS ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) + ( FirstVNF_RAM + BR ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / Max( ( RRSe * CS ),( MLU * MUR ) ) ) - ( Max( MUR,Max( RRSe,MLU ) ) / CS ) ) / ( MUM / ( MLU * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server / MDR ) ,( ( ( FirstVNF_CPU - AMS ) + ( FirstVNF_Mem - MRS ) ) + ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( Min( CS ,CS ) / ( MUM * RRSe ) ) ,( Max( MUR,Max( ( MUM / ( MLU * RMSe ) ),MLU ) ) / ( DS - Max( Max( CS,DS ),Min( MUM ,DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( AMS / MRS ),Max( FirstVNF_CPU_Server,MRS ) ) + ( FirstVNF_RAM + BR ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( CS ,CS ) / ( MUM * RRSe ) ) ,( Max( MUR,Max( RRSe,MLU ) ) / ( DS - Max( Max( CS,DS ),Min( MUM ,DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - ( MDR * ( Const / AMS ) ) )", "choosing": "Min( ( Min( Max( MLU,DS ) ,( MUR * MLU ) ) + ( ( DS + RRSe ) + Min( RMSe ,MUC ) ) ) ,( ( ( CS * MUR ) * ( MUR / CS ) ) - Min( Min( RCSe ,MUR ) ,( RMSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( ( ( BR / ( ARS - MDR ) ) + ( ( MDR / MDR ) * FirstVNF_Mem_Server ) ) + FirstVNF_CPU ) / Min( Const ,( FirstVNF_Mem_Server * BR ) ) ) ) )", "choosing": "Min( Max( RCSe,MUR ) ,Max( DS,( Min( MUR ,MUM ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( CRS + FirstVNF_CPU ) / Min( Const ,( FirstVNF_Mem_Server * BR ) ) ) ) )", "choosing": "Min( Min( RRSe ,( RMSe * MLU ) ) ,Max( DS,( Min( MUR ,MUM ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( FirstVNF_Mem_Server - AMS ) )", "choosing": "Min( Min( DS ,( RMSe * MLU ) ) ,( ( DS * Min( MUR ,( ( MUR - CS ) - Max( MUM,RRSe ) ) ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,CRS ) - ( ACS / AMS ) ) - AMS ) + ( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem ) ,PN ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( ( ( RRSe + Min( CS ,( RRSe / DS ) ) ) - ( RCSe - ( RRSe / RMSe ) ) ),RCSe ) * ( RMSe / ( ( MUM + CS ) + ( ( Max( RMSe,RRSe ) + RMSe ) + ( Max( RRSe,MUC ) + MUC ) ) ) ) ) + Min( Max( Max( MLU,MLU ),( CS * CS ) ) ,( ( MUR * CS ) - Max( MUM,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( FirstVNF_RAM,RRS ),( BR + RRS ) ) + ( AMS * ( FirstVNF_CPU_Server + ACS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Max( MUM,CS ) - ( MLU + MUC ) ) * ( RMSe / MUM ) ) + Min( Max( ( CS * CS ),Max( MLU,MLU ) ) ,( ( MUR - CS ) - Max( MUM,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem ,Max( FirstVNF_Mem,( ( FirstVNF_Mem_Server - MDR ) * PN ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( Min( MUR ,DS ) * MLU ) ,DS ) ,( Max( DS,Min( MUR ,RMSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem ,Max( FirstVNF_Mem,( ( FirstVNF_Mem_Server - MDR ) * PN ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( Min( MUR ,DS ) * MLU ) ,DS ) ,( Max( DS,Min( MUR ,RMSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem ,Max( FirstVNF_Mem,( ( FirstVNF_Mem_Server - MDR ) * PN ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( Min( MUR ,DS ) * MLU ) ,DS ) ,( Max( DS,Min( MUR ,RMSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem ,Max( FirstVNF_Mem,( ( FirstVNF_Mem_Server - MDR ) * PN ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( Min( MUR ,DS ) * MLU ) ,DS ) ,( Max( DS,Min( MUR ,RMSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,FirstVNF_Mem ) - AMS ) - ( FirstVNF_CPU + Max( ( RRS - MRS ),( Max( RRS,FirstVNF_CPU_Server ) * ARS ) ) ) )", "choosing": "Min( ( ( Max( ( RRSe * CS ),( RCSe * DS ) ) / Max( ( MUR - Min( ( ( RCSe + MUC ) - MUM ) ,( RCSe + MUM ) ) ),Max( MUM,MUR ) ) ) + ( ( ( CS * RCSe ) / Max( MUC,MLU ) ) * ( ( MLU - MUM ) / Max( RRSe,MUR ) ) ) ) ,Min( MUC ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( RRS - MRS ),( ARS * ( ( Max( Const,FirstVNF_Mem ) - AMS ) - ( FirstVNF_CPU + ( FirstVNF_RAM - ACS ) ) ) ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + Min( MUC ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,FirstVNF_Mem ) - AMS ) - ( FirstVNF_CPU + ( FirstVNF_RAM - ACS ) ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( ( ( CS * RCSe ) / Max( MUC,MLU ) ) * ( ( MLU - MUM ) / Max( RRSe,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,( Min( ARS ,FirstVNF_RAM ) * ARS ) ) - ( FirstVNF_CPU * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM - ACS ) + FirstVNF_CPU ) )", "choosing": "Min( ( MUM + MUR ) ,( DS / ( DS * ( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,( Min( ARS ,FirstVNF_RAM ) * ARS ) ) - ( FirstVNF_CPU * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM - ACS ) + FirstVNF_CPU ) )", "choosing": "Min( ( MUM + MUR ) ,( DS / ( DS * ( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,( Min( ARS ,FirstVNF_RAM ) * ARS ) ) - ( FirstVNF_CPU * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM - ACS ) + FirstVNF_CPU ) )", "choosing": "Min( ( MUM + MUR ) ,( DS / ( DS * ( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,( Min( ARS ,CRS ) * ARS ) ) - AMS ) - ( FirstVNF_CPU + ( FirstVNF_RAM - ACS ) ) )", "choosing": "Min( ( MUM + MUR ) ,( DS / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),Max( MDR,ARS ) ) ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( Min( RRS ,( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + PN ) ) / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + CS ) + ( ( Max( RMSe,RRSe ) + RMSe ) + ( Max( RRSe,MUC ) + Max( DS,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),Max( MDR,ARS ) ) ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + CS ) + ( ( Max( RMSe,RRSe ) + RMSe ) + ( Max( RRSe,MUC ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( ( ( ( ( RRS / FirstVNF_RAM ) * FirstVNF_CPU_Server ) + Min( Const ,ARS ) ) - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ),DDR ) ,( RRS - MRS ) )", "choosing": "( ( Min( Min( ( MUM / MUC ) ,( DS - CS ) ) ,( ( RRSe - MUC ) * Max( DS,MUC ) ) ) + RMSe ) * ( RRSe - Max( RMSe,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_RAM_Server,DDR ) ,( RRS - MRS ) )", "choosing": "( DS + ( ( Max( RMSe,RRSe ) + RMSe ) + ( Max( RRSe,MUC ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * AMS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( CRS + Const ) ) )", "choosing": "( Max( ( CS * DS ),Min( ( ( RMSe / RCSe ) + DS ) ,DS ) ) / ( Min( MUR ,RMSe ) * ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * AMS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( CRS + Const ) ) )", "choosing": "( Max( ( CS * DS ),Min( ( ( RMSe / RCSe ) + DS ) ,DS ) ) / ( Min( MUR ,RMSe ) * ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * AMS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( CRS + Const ) ) )", "choosing": "( Max( ( CS * DS ),Min( ( ( RMSe / RCSe ) + DS ) ,DS ) ) / ( Min( MUR ,RMSe ) * ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * AMS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( CRS + Const ) ) )", "choosing": "( Max( ( CS * DS ),Min( ( ( RMSe / RCSe ) + DS ) ,DS ) ) / ( Min( MUR ,RMSe ) * ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) + ( ( FirstVNF_CPU + CRS ) / Min( Const ,RRS ) ) ) - AMS ) + ( MRS - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( ( MUR + CS ),DS ),Min( MUM ,DS ) ) / DS )", "obj1": 1.0, "obj2": 0.0}]}