{"1": [{"determining": "( ( CRS - PN ) - Max( DDR,FirstVNF_RAM ) )", "choosing": "( ( RMSe - MUR ) / Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * ACS ) * ( CRS - AMS ) )", "choosing": "( ( RCSe / MLU ) - ( MUM * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / DDR ) - ( ACS / FirstVNF_Mem ) )", "choosing": "( ( MLU * MLU ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - BR ) ,( RRS * FirstVNF_CPU ) )", "choosing": "( ( MUR * RRSe ) / ( RRSe + DS ) )", "obj1": 0.7227722772277227, "obj2": 0.1985404808361048}, {"determining": "( ( BR - AMS ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "( ( RRSe * RRSe ) + Max( MUR,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( FirstVNF_RAM_Server,DDR ) ,Max( DDR,DDR ) ) ,Min( ( RRS - BR ) ,Min( ARS ,ARS ) ) )", "choosing": "( ( ( CS * CS ) / Max( MUR,MUC ) ) - ( ( MLU / MUM ) + ( MUR + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( FirstVNF_Mem - FirstVNF_RAM ) - FirstVNF_Mem_Server ) / Max( RRS,FirstVNF_RAM_Server ) ),( BR + ( DDR * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( MUM + RRSe ) + MLU ) ,( Max( MLU,MUC ) * MLU ) )", "obj1": 0.7683168316831683, "obj2": 0.1777426416750072}, {"determining": "( ( Min( FirstVNF_Mem ,AMS ) - ( DDR - BR ) ) + ( ( FirstVNF_CPU - AMS ) * ( AMS - FirstVNF_RAM_Server ) ) )", "choosing": "Min( Max( ( CS - MLU ),Min( DS ,MUM ) ) ,( ( RMSe * MLU ) - Min( RRSe ,MUM ) ) )", "obj1": 0.7207920792079208, "obj2": 0.21309213076301906}, {"determining": "( ( ( FirstVNF_CPU - PN ) - ( FirstVNF_Mem_Server / CRS ) ) * Min( ( BR / DDR ) ,( ACS - FirstVNF_Mem ) ) )", "choosing": "( ( ( DS / MUM ) / ( MUR * MUC ) ) + ( Min( MUM ,CS ) / Min( DS ,MUM ) ) )", "obj1": 0.900990099009901, "obj2": 0.08777331037851119}, {"determining": "( ( Const / ( Const / PN ) ) / ( ( ACS - FirstVNF_Mem_Server ) - BR ) )", "choosing": "( ( CS * MUC ) * Max( RMSe,( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * Min( Max( FirstVNF_RAM,FirstVNF_RAM ) ,MDR ) ) - Max( FirstVNF_RAM_Server,CRS ) ) / ( ( Const / FirstVNF_RAM ) * ( ACS - DDR ) ) )", "choosing": "( ( ( Max( MUR,DS ) + ( CS * CS ) ) / Min( MUM ,CS ) ) / Min( ( RMSe * DS ) ,( RCSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU - Const ) ,( FirstVNF_RAM * CRS ) ) * Max( ( AMS + CRS ),( PN - CRS ) ) )", "choosing": "( ( ( MUC - DS ) + ( RMSe * CS ) ) * Min( ( MUR * CS ) ,( RMSe / CS ) ) )", "obj1": 0.8891089108910891, "obj2": 0.0983409402620279}, {"determining": "Min( ( Min( FirstVNF_CPU ,MRS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ,( ( FirstVNF_Mem + AMS ) + Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU - RCSe ) * MLU ) ,( Min( CS ,RCSe ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_CPU * Min( FirstVNF_CPU_Server ,AMS ) ),( Min( MDR ,PN ) + CRS ) )", "choosing": "( ( ( MUM - RMSe ) / ( RRSe - CS ) ) * ( ( RRSe + RMSe ) - ( MLU / MUR ) ) )", "obj1": 0.6653465346534654, "obj2": 0.2376004310649183}, {"determining": "Min( ( Min( MDR ,AMS ) * ( Const - ACS ) ) ,Min( ( CRS - MDR ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "Max( ( ( MUC - RCSe ) * DS ),( CS - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * PN ) - ( ACS * Max( MDR,AMS ) ) )", "choosing": "Min( Max( ( RCSe + MUM ),( RMSe * MUR ) ) ,( CS / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( PN / FirstVNF_Mem_Server ) ,Max( BR,RRS ) ) / Min( ( RRS + FirstVNF_CPU ) ,Min( MDR ,ACS ) ) ) - ( ( Max( FirstVNF_CPU,MDR ) / ( FirstVNF_Mem_Server * BR ) ) / ( Max( CRS,BR ) / Max( MDR,MRS ) ) ) )", "choosing": "Max( Max( ( DS - DS ),RCSe ),Min( MUC ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - DDR ) ,Max( FirstVNF_RAM,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) - ( AMS / CRS ) ) ) )", "choosing": "( ( ( Max( MUR,MUM ) * CS ) + ( RMSe * Min( RCSe ,MLU ) ) ) / ( ( Min( RCSe ,RCSe ) / Max( MLU,MUC ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR * FirstVNF_RAM_Server ) * ( BR + DDR ) ) ,FirstVNF_Mem ) - ( FirstVNF_CPU_Server + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( ( ( Max( RMSe,DS ) * ( RCSe * RCSe ) ) * ( ( RCSe + DS ) + Max( MLU,MUC ) ) ) + ( ( Min( MUM ,RMSe ) + Min( RMSe ,RCSe ) ) + ( ( MUM - MUR ) + Max( MUR,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * ACS ) * FirstVNF_Mem ) - ( BR - ( AMS + ACS ) ) )", "choosing": "( ( ( ( MUC - CS ) - ( CS + MUR ) ) + ( ( MLU * MUM ) / ( RMSe - MUR ) ) ) / Max( Min( ( RRSe * RMSe ) ,( RCSe * MUC ) ),( ( MUR - MLU ) / Max( MUC,MLU ) ) ) )", "obj1": 0.6574257425742575, "obj2": 0.2445846006019251}, {"determining": "( ( Max( ( MDR / FirstVNF_CPU ),( Const / FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( MDR * BR ) ) ) - ( ( ( BR * FirstVNF_CPU ) / ( BR - MRS ) ) + ( Max( BR,FirstVNF_RAM_Server ) - ( MDR + ACS ) ) ) )", "choosing": "( ( ( ( RCSe - CS ) - CS ) * DS ) - Min( MLU ,RMSe ) )", "obj1": 0.7445544554455445, "obj2": 0.17871802528905986}, {"determining": "( ( Min( ( MDR * ACS ) ,( FirstVNF_CPU_Server * AMS ) ) * ( Max( CRS,FirstVNF_RAM ) - Min( DDR ,ARS ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) * ( MDR + ARS ) ) ) )", "choosing": "( ( RRSe / RMSe ) / Min( ( RRSe - CS ) ,RMSe ) )", "obj1": 0.6831683168316832, "obj2": 0.21434056837208337}, {"determining": "( ( ( ( MDR / FirstVNF_RAM_Server ) - ( AMS - ACS ) ) / ( ( MDR * ARS ) * Min( ARS ,FirstVNF_CPU ) ) ) - ( ( ( AMS * CRS ) + Max( FirstVNF_CPU_Server,PN ) ) / ( ( FirstVNF_RAM / RRS ) * Max( FirstVNF_CPU,CRS ) ) ) )", "choosing": "( ( RMSe - MUM ) - ( RRSe / ( MUM + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( ARS,MRS ) * ( RRS - PN ) ) ,Max( Max( MDR,Const ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( Max( ( ARS - FirstVNF_RAM_Server ),( Const - MRS ) ) - Min( ( ARS * Const ) ,( BR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( Max( MUM,MUM ) / Max( RRSe,MLU ) ) ,Min( Max( MLU,MUM ) ,( RMSe - MUR ) ) ) / ( Max( ( RCSe * RRSe ),( DS + MUC ) ) * ( ( MUM / CS ) - Min( RCSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Const * ACS ) ,( RRS - FirstVNF_CPU ) ) - Max( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_RAM_Server * Const ) / Min( DDR ,ARS ) ),Max( ( RRS / RRS ),( FirstVNF_RAM - CRS ) ) ) )", "choosing": "Max( ( RCSe + MLU ),( RCSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( DDR - CRS ),( Const + FirstVNF_Mem_Server ) ) - Max( ( PN + FirstVNF_RAM ),Max( RRS,Const ) ) ) + ( ( ( DDR + RRS ) / ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) - Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,( ARS / Const ) ) ) )", "choosing": "( Max( ( Max( MLU,RRSe ) * ( MUC - RRSe ) ),Min( ( DS / RCSe ) ,Min( RRSe ,CS ) ) ) + ( Min( ( DS * DS ) ,Min( CS ,MLU ) ) + ( Min( MUC ,RCSe ) * ( RMSe + DS ) ) ) )", "obj1": 0.7821782178217822, "obj2": 0.16239188897462117}, {"determining": "( ( ( Min( Const ,ARS ) * Max( MRS,RRS ) ) + Max( ( CRS / DDR ),( RRS + MRS ) ) ) / ( ( ( BR / FirstVNF_Mem_Server ) * Max( Const,DDR ) ) * ( Min( MRS ,Const ) + ( FirstVNF_RAM_Server - Const ) ) ) )", "choosing": "( Max( Min( ( MUR / CS ) ,( RMSe * DS ) ),( ( RCSe * MUR ) / Min( RCSe ,MUM ) ) ) - ( ( ( DS * MUR ) / Min( MUR ,MLU ) ) - Max( ( RCSe / MLU ),Min( RMSe ,MUC ) ) ) )", "obj1": 0.8534653465346534, "obj2": 0.11662825307494426}], "2": [{"determining": "( ( CRS - PN ) - Max( DDR,FirstVNF_RAM ) )", "choosing": "( ( RMSe - MUR ) / Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * ACS ) * ( CRS - AMS ) )", "choosing": "( ( RCSe / MLU ) - ( MUM * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / DDR ) - ( ACS / FirstVNF_Mem ) )", "choosing": "( ( MLU * MLU ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - AMS ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "( ( RRSe * RRSe ) + Max( MUR,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( FirstVNF_RAM_Server,DDR ) ,Max( DDR,DDR ) ) ,Min( ( RRS - BR ) ,Min( ARS ,ARS ) ) )", "choosing": "( ( ( CS * CS ) / Max( MUR,MUC ) ) - ( ( MLU / MUM ) + ( MUR + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - PN ) - ( FirstVNF_Mem_Server / CRS ) ) * Min( ( BR / DDR ) ,( ACS - FirstVNF_Mem ) ) )", "choosing": "( ( ( DS / MUM ) / ( MUR * MUC ) ) + ( Min( MUM ,CS ) / Min( DS ,MUM ) ) )", "obj1": 0.900990099009901, "obj2": 0.08777331037851119}, {"determining": "( ( Const / ( Const / PN ) ) / ( ( ACS - FirstVNF_Mem_Server ) - BR ) )", "choosing": "( ( CS * MUC ) * Max( RMSe,( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * Min( Max( FirstVNF_RAM,FirstVNF_RAM ) ,MDR ) ) - Max( FirstVNF_RAM_Server,CRS ) ) / ( ( Const / FirstVNF_RAM ) * ( ACS - DDR ) ) )", "choosing": "( ( ( Max( MUR,DS ) + ( CS * CS ) ) / Min( MUM ,CS ) ) / Min( ( RMSe * DS ) ,( RCSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU - Const ) ,( FirstVNF_RAM * CRS ) ) * Max( ( AMS + CRS ),( PN - CRS ) ) )", "choosing": "( ( ( MUC - DS ) + ( RMSe * CS ) ) * Min( ( MUR * CS ) ,( RMSe / CS ) ) )", "obj1": 0.8891089108910891, "obj2": 0.0983409402620279}, {"determining": "Min( ( Min( FirstVNF_CPU ,MRS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ,( ( FirstVNF_Mem + AMS ) + Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU - RCSe ) * MLU ) ,( Min( CS ,RCSe ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_CPU * Min( FirstVNF_CPU_Server ,AMS ) ),( Min( MDR ,PN ) + CRS ) )", "choosing": "( ( ( MUM - RMSe ) / ( RRSe - CS ) ) * ( ( RRSe + RMSe ) - ( MLU / MUR ) ) )", "obj1": 0.6653465346534654, "obj2": 0.2376004310649183}, {"determining": "Min( ( Min( MDR ,AMS ) * ( Const - ACS ) ) ,Min( ( CRS - MDR ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "Max( ( ( MUC - RCSe ) * DS ),( CS - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * PN ) - ( ACS * Max( MDR,AMS ) ) )", "choosing": "Min( Max( ( RCSe + MUM ),( RMSe * MUR ) ) ,( CS / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( PN / FirstVNF_Mem_Server ) ,Max( BR,RRS ) ) / Min( ( RRS + FirstVNF_CPU ) ,Min( MDR ,ACS ) ) ) - ( ( Max( FirstVNF_CPU,MDR ) / ( FirstVNF_Mem_Server * BR ) ) / ( Max( CRS,BR ) / Max( MDR,MRS ) ) ) )", "choosing": "Max( Max( ( DS - DS ),RCSe ),Min( MUC ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - DDR ) ,Max( FirstVNF_RAM,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) - ( AMS / CRS ) ) ) )", "choosing": "( ( ( Max( MUR,MUM ) * CS ) + ( RMSe * Min( RCSe ,MLU ) ) ) / ( ( Min( RCSe ,RCSe ) / Max( MLU,MUC ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR * FirstVNF_RAM_Server ) * ( BR + DDR ) ) ,FirstVNF_Mem ) - ( FirstVNF_CPU_Server + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( ( ( Max( RMSe,DS ) * ( RCSe * RCSe ) ) * ( ( RCSe + DS ) + Max( MLU,MUC ) ) ) + ( ( Min( MUM ,RMSe ) + Min( RMSe ,RCSe ) ) + ( ( MUM - MUR ) + Max( MUR,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * ACS ) * FirstVNF_Mem ) - ( BR - ( AMS + ACS ) ) )", "choosing": "( ( ( ( MUC - CS ) - ( CS + MUR ) ) + ( ( MLU * MUM ) / ( RMSe - MUR ) ) ) / Max( Min( ( RRSe * RMSe ) ,( RCSe * MUC ) ),( ( MUR - MLU ) / Max( MUC,MLU ) ) ) )", "obj1": 0.6574257425742575, "obj2": 0.2445846006019251}, {"determining": "( ( Max( ( MDR / FirstVNF_CPU ),( Const / FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( MDR * BR ) ) ) - ( ( ( BR * FirstVNF_CPU ) / ( BR - MRS ) ) + ( Max( BR,FirstVNF_RAM_Server ) - ( MDR + ACS ) ) ) )", "choosing": "( ( ( ( RCSe - CS ) - CS ) * DS ) - Min( MLU ,RMSe ) )", "obj1": 0.7445544554455445, "obj2": 0.17871802528905986}, {"determining": "( ( ( ( MDR / FirstVNF_RAM_Server ) - ( AMS - ACS ) ) / ( ( MDR * ARS ) * Min( ARS ,FirstVNF_CPU ) ) ) - ( ( ( AMS * CRS ) + Max( FirstVNF_CPU_Server,PN ) ) / ( ( FirstVNF_RAM / RRS ) * Max( FirstVNF_CPU,CRS ) ) ) )", "choosing": "( ( RMSe - MUM ) - ( RRSe / ( MUM + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( ARS,MRS ) * ( RRS - PN ) ) ,Max( Max( MDR,Const ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( Max( ( ARS - FirstVNF_RAM_Server ),( Const - MRS ) ) - Min( ( ARS * Const ) ,( BR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( Max( MUM,MUM ) / Max( RRSe,MLU ) ) ,Min( Max( MLU,MUM ) ,( RMSe - MUR ) ) ) / ( Max( ( RCSe * RRSe ),( DS + MUC ) ) * ( ( MUM / CS ) - Min( RCSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Const * ACS ) ,( RRS - FirstVNF_CPU ) ) - Max( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_RAM_Server * Const ) / Min( DDR ,ARS ) ),Max( ( RRS / RRS ),( FirstVNF_RAM - CRS ) ) ) )", "choosing": "Max( ( RCSe + MLU ),( RCSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( DDR - CRS ),( Const + FirstVNF_Mem_Server ) ) - Max( ( PN + FirstVNF_RAM ),Max( RRS,Const ) ) ) + ( ( ( DDR + RRS ) / ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) - Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,( ARS / Const ) ) ) )", "choosing": "( Max( ( Max( MLU,RRSe ) * ( MUC - RRSe ) ),Min( ( DS / RCSe ) ,Min( RRSe ,CS ) ) ) + ( Min( ( DS * DS ) ,Min( CS ,MLU ) ) + ( Min( MUC ,RCSe ) * ( RMSe + DS ) ) ) )", "obj1": 0.7821782178217822, "obj2": 0.16239188897462117}, {"determining": "( ( ( Min( Const ,ARS ) * Max( MRS,RRS ) ) + Max( ( CRS / DDR ),( RRS + MRS ) ) ) / ( ( ( BR / FirstVNF_Mem_Server ) * Max( Const,DDR ) ) * ( Min( MRS ,Const ) + ( FirstVNF_RAM_Server - Const ) ) ) )", "choosing": "( Max( Min( ( MUR / CS ) ,( RMSe * DS ) ),( ( RCSe * MUR ) / Min( RCSe ,MUM ) ) ) - ( ( ( DS * MUR ) / Min( MUR ,MLU ) ) - Max( ( RCSe / MLU ),Min( RMSe ,MUC ) ) ) )", "obj1": 0.8534653465346534, "obj2": 0.11662825307494426}, {"determining": "( ( ( MDR / FirstVNF_Mem ) * Min( ARS ,ARS ) ) - Max( ( FirstVNF_Mem_Server + DDR ),( RRS * PN ) ) )", "choosing": "( ( Max( MUC,MLU ) + Min( DS ,CS ) ) + Max( ( MUM * CS ),Min( MUM ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( DDR - CRS ),( Const + FirstVNF_Mem_Server ) ) - Max( ( PN + FirstVNF_RAM ),Max( RRS,Const ) ) ) + ( ( ( DDR + RRS ) / ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) - Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,( ARS / Const ) ) ) )", "choosing": "( Max( ( Max( MLU,RRSe ) * ( MUC - RRSe ) ),Min( ( DS / RCSe ) ,Min( RRSe ,CS ) ) ) + ( Min( ( DS * DS ) ,Min( CS ,MLU ) ) + ( Min( MUC ,RCSe ) * ( RMSe + DS ) ) ) )", "obj1": 0.7821782178217822, "obj2": 0.16239188897462117}, {"determining": "Min( ( Min( FirstVNF_CPU ,MRS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ,( ( FirstVNF_Mem + AMS ) + Min( PN ,ARS ) ) )", "choosing": "( ( RCSe * RMSe ) - ( RRSe + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( ARS,MRS ) * ( RRS - PN ) ) ,Max( Max( MDR,Const ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( Max( FirstVNF_RAM,( Const - MRS ) ) - Min( ( ARS * Const ) ,( BR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( Max( MUM,MUM ) / Max( RRSe,MLU ) ) ,Min( Max( MLU,MUM ) ,( RMSe - MUR ) ) ) / ( Max( ( MUR * CS ),( DS + MUC ) ) * ( ( MUM / CS ) - Min( RCSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( ARS,MRS ) * ( RRS - PN ) ) ,Max( Max( MDR,Const ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( Max( ( ARS - FirstVNF_RAM_Server ),( Const - MRS ) ) - Min( ( ARS * Const ) ,( BR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( Max( MUM,MUM ) / Max( RRSe,MLU ) ) ,Min( Max( MLU,MUM ) ,( RMSe - MUR ) ) ) / ( Max( ( RCSe * RRSe ),( DS + MUC ) ) * ( ( MUM / CS ) - Min( RCSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( DDR - CRS ),( Const + FirstVNF_Mem_Server ) ) - Max( ( PN + FirstVNF_RAM ),Max( RRS,Const ) ) ) + ( ( ( DDR + ( Min( RRS ,DDR ) / ( FirstVNF_Mem + DDR ) ) ) / ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) - Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,( ARS / Const ) ) ) )", "choosing": "( Max( ( Max( MLU,RRSe ) * ( MUC - RRSe ) ),Min( ( DS / RCSe ) ,Min( RRSe ,CS ) ) ) + ( Min( ( DS * DS ) ,Min( CS ,MLU ) ) + ( Min( RMSe ,RCSe ) * ( RMSe + DS ) ) ) )", "obj1": 0.7920792079207921, "obj2": 0.15283806050037876}, {"determining": "( ( Max( ( DDR - CRS ),( Const + FirstVNF_Mem_Server ) ) - Max( ( PN + FirstVNF_RAM ),Max( RRS,Const ) ) ) + ( ( ( DDR + RRS ) / ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) - Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,( ARS / Const ) ) ) )", "choosing": "( Max( ( Max( MLU,RRSe ) * ( MUC - RRSe ) ),Min( ( DS / RCSe ) ,Min( RRSe ,CS ) ) ) + ( Min( ( DS * DS ) ,Min( CS ,MLU ) ) + ( Min( MUC ,RCSe ) * ( RMSe + DS ) ) ) )", "obj1": 0.8158415841584158, "obj2": 0.14785379972946683}, {"determining": "( ARS * ( CRS - AMS ) )", "choosing": "( ( ( ( CS - MUM ) + ( MUR / MUR ) ) / MLU ) - ( MUM * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * ACS ) * ( CRS - AMS ) )", "choosing": "( ( CS - MUM ) + ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_CPU ,MRS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ,( ( ( MRS - BR ) + AMS ) + Min( PN ,ARS ) ) )", "choosing": "Min( ( ( DS - RMSe ) / MUM ) ,( Min( CS ,RCSe ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_CPU ,MRS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ,( ( FirstVNF_Mem + AMS ) + Min( PN ,ARS ) ) )", "choosing": "( Min( ( DS / RMSe ) ,( Min( CS ,DS ) * ( RRSe + MUC ) ) ) / Min( DS ,( ( DS - RMSe ) / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * PN ) - ( ACS * Max( MDR,AMS ) ) )", "choosing": "Min( Max( ( RCSe + MUM ),( RMSe * MUR ) ) ,( CS / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / MDR ) / Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( ( Max( RMSe,DS ) * ( RCSe * RCSe ) ) * ( ( RCSe + DS ) + Max( MLU,MUC ) ) ) + ( ( Min( MUM ,RMSe ) + Min( RMSe ,RCSe ) ) + ( ( MUM - MUR ) + Max( MUR,RCSe ) ) ) )", "obj1": 0.6792079207920793, "obj2": 0.21271505739966523}, {"determining": "( Min( ( ( BR * FirstVNF_RAM_Server ) * ( BR + DDR ) ) ,FirstVNF_Mem ) - ( FirstVNF_CPU_Server + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( ( CS + MUC ) + ( RMSe * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR / PN ) / Max( RRS,DDR ) ) ,Min( ( CRS - MDR ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "Max( Min( DS ,MUM ),( CS - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( MDR ,AMS ) * ( Const - ACS ) ) ,Min( ( CRS - MDR ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "( Min( DS ,MUM ) * ( MUM / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * RRS ) - ( ( CRS / PN ) - ( PN * DDR ) ) )", "choosing": "( ( RMSe * CS ) + Min( ( MUM / MUC ) ,Min( RRSe ,DS ) ) )", "obj1": 0.996039603960396, "obj2": 0.002119634100990052}, {"determining": "Min( ( Min( FirstVNF_CPU ,MRS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ,( ( FirstVNF_Mem + AMS ) + Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU - RCSe ) * MLU ) ,( Min( CS ,RCSe ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR + Const ) ,( Min( FirstVNF_RAM ,BR ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( RMSe,RCSe ) - ( RRSe + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * ACS ) * ( CRS - AMS ) )", "choosing": "( ( RCSe / MLU ) - ( MUM * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - AMS ) - ( Min( ( RRS - MDR ) ,( Const * FirstVNF_Mem_Server ) ) + MDR ) )", "choosing": "( ( RCSe * RRSe ) + Max( MUR,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - AMS ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "Max( ( ( ( RMSe + Min( Min( RMSe ,DS ) ,MUM ) ) / Max( MUR,( DS - RCSe ) ) ) - DS ),( RCSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - PN ) - Max( DDR,FirstVNF_RAM ) )", "choosing": "( Min( DS ,MUM ) * ( MUM / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR + Const ) ,( FirstVNF_Mem - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe + DS ) - ( RRSe + DS ) )", "obj1": 0.8772277227722772, "obj2": 0.10284733045896674}, {"determining": "( ( ( MRS - ACS ) / MDR ) / Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( CS + MUC ) + ( MLU * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - DDR ) ,Max( FirstVNF_RAM,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) - ( ( ( CRS / PN ) - ( PN * DDR ) ) / CRS ) ) ) )", "choosing": "( ( ( Max( MUR,MUM ) * CS ) + ( ( RMSe * CS ) + Min( ( DS * MUM ) ,Min( RRSe ,DS ) ) ) ) / ( ( Min( RCSe ,RCSe ) / Max( MLU,MUC ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - DDR ) ,Max( FirstVNF_RAM,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) - ( AMS / CRS ) ) ) )", "choosing": "( ( RMSe * CS ) + Min( ( DS * MUM ) ,Min( RRSe ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( FirstVNF_RAM_Server ,PN ),( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) - ( ( CRS / PN ) - ( PN * DDR ) ) )", "choosing": "( ( ( Max( MUR,MUM ) * CS ) + ( RMSe * Min( RCSe ,MLU ) ) ) / ( ( Min( RCSe ,RCSe ) / Max( MLU,MUC ) ) - MUR ) )", "obj1": 0.693069306930693, "obj2": 0.19031074980862622}, {"determining": "Min( ( MRS - DDR ) ,Max( FirstVNF_RAM,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) - ( Max( Min( ( RRS - MDR ) ,( Const * FirstVNF_Mem_Server ) ),FirstVNF_CPU_Server ) / CRS ) ) ) )", "choosing": "( ( RCSe + RRSe ) / ( ( Min( RCSe ,RCSe ) / Max( MLU,MUC ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - DDR ) ,Max( FirstVNF_RAM,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) - ( AMS / CRS ) ) ) )", "choosing": "Max( ( ( ( RMSe + Min( Min( RMSe ,DS ) ,MUM ) ) / Max( MUR,( DS - RCSe ) ) ) - DS ),( RCSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,FirstVNF_RAM ) - Max( CRS,FirstVNF_RAM_Server ) ) / ( CRS / Const ) )", "choosing": "( ( RMSe - Max( RCSe,RRSe ) ) / ( MUR - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,FirstVNF_RAM ) - Max( CRS,FirstVNF_RAM_Server ) ) / ( ( Const / FirstVNF_RAM ) * ( ACS - DDR ) ) )", "choosing": "( ( RMSe - Max( RCSe,RRSe ) ) / Min( ( RMSe * DS ) ,( RCSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU - Const ) ,( FirstVNF_RAM * CRS ) ) * Max( ( AMS + CRS ),( Max( FirstVNF_Mem,ACS ) - CRS ) ) )", "choosing": "( ( ( MUC - DS ) + ( RMSe * CS ) ) * Min( ( MUR * CS ) ,( RMSe / ( ( RCSe * MUR ) - Max( CS,DS ) ) ) ) )", "obj1": 0.8950495049504951, "obj2": 0.0912573961644541}, {"determining": "( ( ARS - DDR ) + ( ( ACS + AMS ) + ACS ) )", "choosing": "( ( ( Max( RMSe,DS ) * ( RCSe * RCSe ) ) * ( ( RCSe + DS ) + Max( MLU,MUC ) ) ) + ( ( Min( MUM ,RMSe ) + Min( RMSe ,RCSe ) ) + ( ( MUM - MUR ) + Max( MUR,RCSe ) ) ) )", "obj1": 0.6792079207920793, "obj2": 0.21271505739966523}, {"determining": "( Min( ( ( BR * FirstVNF_RAM_Server ) * ( BR + DDR ) ) ,FirstVNF_Mem ) - ( FirstVNF_CPU_Server + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "Min( ( MUC / ( MUM * Min( MLU ,MUM ) ) ) ,Max( DS,Min( RCSe ,( RMSe + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - PN ) - Max( DDR,FirstVNF_RAM ) )", "choosing": "( ( RMSe - MUR ) / ( Min( DS ,MUM ) * ( MUM / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - PN ) - Max( DDR,FirstVNF_RAM ) )", "choosing": "( Min( DS ,MUM ) * ( MUM / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - FirstVNF_RAM_Server ) ,( RRS * FirstVNF_CPU ) )", "choosing": "( ( ( MUR - CS ) + ( RMSe / RCSe ) ) / ( RRSe + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - PN ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) )", "choosing": "( ( RMSe - MUR ) / ( ( ( MUM + RMSe ) / ( RRSe - MLU ) ) * ( ( MUC / RCSe ) * Max( RCSe,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - PN ) - Max( DDR,FirstVNF_RAM ) )", "choosing": "Min( ( ( ( MUM + RMSe ) / ( RRSe - MLU ) ) * ( ( MUC / RCSe ) * Max( RCSe,RRSe ) ) ) ,( ( ( RRSe + RCSe ) + ( MUM + MUM ) ) * Max( ( MUR * MUC ),( RRSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - BR ) ,( ( ARS / FirstVNF_CPU ) / Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR * RRSe ) / ( RRSe + MLU ) )", "obj1": 0.7405940594059406, "obj2": 0.18905083654442936}, {"determining": "Min( ( PN - BR ) ,( RRS * FirstVNF_CPU ) )", "choosing": "Max( ( MUM - MLU ),( RMSe * RMSe ) )", "obj1": 0.7425742574257426, "obj2": 0.18446256840368985}, {"determining": "( ( ( FirstVNF_RAM_Server + Const ) / ( ARS * FirstVNF_Mem ) ) / Min( AMS ,DDR ) )", "choosing": "( ( DS - Max( CS,Max( CS,DS ) ) ) - ( MUC + MUC ) )", "obj1": 0.6633663366336634, "obj2": 0.24415006928865893}, {"determining": "( ( ARS / FirstVNF_RAM ) * ( ( FirstVNF_CPU_Server - AMS ) * FirstVNF_Mem ) )", "choosing": "( ( CS * RCSe ) - ( MUR - CS ) )", "obj1": 0.8217821782178217, "obj2": 0.12835458544231187}, {"determining": "( Min( ( ( BR * FirstVNF_RAM_Server ) * ( ( ARS * FirstVNF_Mem ) + DDR ) ) ,FirstVNF_Mem ) - ( FirstVNF_CPU_Server + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( ( ( CS * MLU ) - ( MUR - CS ) ) + ( ( Min( MUM ,RMSe ) + Min( RMSe ,RCSe ) ) + ( ( MUM - MUR ) + Max( MUR,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR * FirstVNF_RAM_Server ) * ( BR + DDR ) ) ,FirstVNF_Mem ) - ( FirstVNF_CPU_Server + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( ( ( Max( RMSe,DS ) * ( RCSe * RCSe ) ) * ( ( RCSe + DS ) + Max( MLU,MUC ) ) ) + ( ( Min( MUM ,RMSe ) + Min( RMSe ,RCSe ) ) + ( ( MUM - MUR ) + Max( MUR,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Const * ACS ) ,( ( RRS / Min( CRS ,DDR ) ) - PN ) ) - Max( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_RAM_Server * Const ) / Min( DDR ,ARS ) ),Max( ( RRS / RRS ),( FirstVNF_RAM - CRS ) ) ) )", "choosing": "Max( ( RCSe + MLU ),Min( DS ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Const * ACS ) ,( RRS - FirstVNF_CPU ) ) - Max( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_RAM_Server * Const ) / Min( DDR ,ARS ) ),Max( ( RRS / RRS ),( FirstVNF_RAM - CRS ) ) ) )", "choosing": "Max( ( RCSe + MLU ),( RCSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( MDR * ACS ) ,( FirstVNF_CPU_Server * AMS ) ) * ( Max( CRS,FirstVNF_RAM ) - Min( DDR ,ARS ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) * Min( Max( RRS,MRS ) ,( PN * RRS ) ) ) )", "choosing": "( ( RRSe / RMSe ) / Min( ( RRSe - MUR ) ,RMSe ) )", "obj1": 0.6693069306930693, "obj2": 0.22626028816865004}, {"determining": "( ( ( AMS - MDR ) + Max( PN,Const ) ) / ( ( ACS * MDR ) - ACS ) )", "choosing": "Max( ( ( ( ( DS / MUM ) / ( MUR * MUC ) ) + ( Min( MUM ,CS ) / Min( DS ,MUM ) ) ) - ( CS - RCSe ) ),( RRSe * DS ) )", "obj1": 0.9821782178217822, "obj2": 0.01961563007166056}, {"determining": "( ( ( FirstVNF_CPU - PN ) - ( FirstVNF_Mem_Server / CRS ) ) * Min( ( BR / DDR ) ,( ACS - FirstVNF_Mem ) ) )", "choosing": "( ( ( DS / MUM ) / ( MUR * MUC ) ) + ( Min( MUM ,CS ) / Min( DS ,MUM ) ) )", "obj1": 0.900990099009901, "obj2": 0.08777331037851119}, {"determining": "( ( ( FirstVNF_CPU * ACS ) - AMS ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "( ( MUM * MUC ) + Max( MUR,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server * ACS ) * ( CRS - AMS ) )", "choosing": "( ( RCSe / ( ( RRSe * RRSe ) + Max( MUR,DS ) ) ) - ( MUM * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - AMS ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "( ( RCSe / MLU ) - ( MUM * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * ACS ) * ( CRS - AMS ) )", "choosing": "( ( RRSe * RRSe ) + Max( MUR,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU * ( Const * FirstVNF_RAM ) ),BR ) + ( AMS + ( FirstVNF_CPU_Server * ( PN - Max( ( FirstVNF_CPU * ( AMS + FirstVNF_Mem_Server ) ),( Min( ( AMS + DDR ) ,( CRS / PN ) ) + ( Max( FirstVNF_Mem,DDR ) + ( MDR / CRS ) ) ) ) ) ) ) )", "choosing": "Max( Max( RMSe,DS ),( ( ( CS + MUM ) / ( RMSe - RMSe ) ) * ( ( MLU + RCSe ) + ( MUM - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * ACS ) * ( CRS - AMS ) )", "choosing": "( ( RCSe / MLU ) - ( MUM * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS / MDR ) ,FirstVNF_RAM ) - ( FirstVNF_CPU_Server + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( ( ( Max( RMSe,DS ) * ( RCSe * RCSe ) ) * ( ( RCSe + DS ) + Max( MLU,MUC ) ) ) + ( ( Min( DS ,RMSe ) + Min( RMSe ,RCSe ) ) + ( ( MUM - MUR ) + Max( MUR,RCSe ) ) ) )", "obj1": 0.9623762376237623, "obj2": 0.026298360264670265}, {"determining": "( Max( Const,Const ) + Min( ( ARS / MDR ) ,FirstVNF_RAM ) )", "choosing": "( ( ( Max( RMSe,DS ) * ( RCSe * RCSe ) ) * ( ( RCSe + DS ) + Max( MLU,MUC ) ) ) + ( ( Min( MUM ,RMSe ) + Min( RMSe ,RCSe ) ) + ( ( MUM - MUR ) + Max( MUR,RCSe ) ) ) )", "obj1": 0.6792079207920793, "obj2": 0.21271505739966523}, {"determining": "( Min( ( ( BR * FirstVNF_RAM_Server ) * ( BR + DDR ) ) ,FirstVNF_Mem ) - ( FirstVNF_CPU_Server + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "Min( ( Min( ( RMSe * RMSe ) ,Max( RCSe,MUR ) ) + Min( ( MLU * MUR ) ,( MUC - MUR ) ) ) ,( ( Max( MUM,DS ) / ( RRSe - CS ) ) / Max( ( DS / MUC ),Min( MUM ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * ACS ) * FirstVNF_Mem ) - ( ( FirstVNF_RAM_Server * Const ) / Min( DDR ,ARS ) ) )", "choosing": "( ( ( ( MUC - CS ) - ( CS + MUR ) ) + ( ( MLU * MUM ) / ( RMSe - MUR ) ) ) / Max( Min( ( RRSe * RMSe ) ,( RCSe * MUC ) ),( ( ( RCSe + MLU ) - MLU ) / Max( MUC,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Const * ACS ) ,( RRS - FirstVNF_CPU ) ) - Max( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_RAM_Server * Const ) / Min( DDR ,ARS ) ),Max( ( RRS / RRS ),( FirstVNF_RAM - CRS ) ) ) )", "choosing": "( ( ( ( MUC - CS ) - ( CS + MUR ) ) + ( ( MLU * MUM ) / ( RMSe - MUR ) ) ) / Max( Min( ( RRSe * RMSe ) ,( RCSe * MUC ) ),( ( MUR - MLU ) / Max( MUC,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - PN ) - ( FirstVNF_CPU_Server + DDR ) ) * Min( ( BR / DDR ) ,( ACS - FirstVNF_Mem ) ) )", "choosing": "( ( CS / ( MUR * MUC ) ) + ( Min( MUM ,CS ) / Min( DS ,MUM ) ) )", "obj1": 0.906930693069307, "obj2": 0.08650667896102407}, {"determining": "( ( ( FirstVNF_RAM_Server + Const ) / ( ARS * FirstVNF_Mem ) ) / ( ( RRS / AMS ) * ( FirstVNF_CPU * MRS ) ) )", "choosing": "( ( ( ( MUC - CS ) - ( CS + MUR ) ) + ( ( MLU * MUM ) / ( RMSe - MUR ) ) ) / Max( Min( ( RRSe * RMSe ) ,( RCSe * MUC ) ),( ( MUR - MLU ) / Max( MUC,MLU ) ) ) )", "obj1": 0.6574257425742575, "obj2": 0.2445846006019251}, {"determining": "( ( Max( ( MDR / FirstVNF_CPU ),( Const / FirstVNF_Mem_Server ) ) / PN ) - ( ( ( BR * FirstVNF_CPU ) / ( BR - MRS ) ) + ( Max( BR,FirstVNF_RAM_Server ) - ( MDR + ACS ) ) ) )", "choosing": "( ( ( ( RMSe - CS ) - CS ) * DS ) - Min( MLU ,RMSe ) )", "obj1": 0.6396039603960396, "obj2": 0.24991794834252795}, {"determining": "( ( Max( ( MDR / FirstVNF_CPU ),( Const / FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( MDR * BR ) ) ) - ( ( ( BR * FirstVNF_CPU ) / ( BR - MRS ) ) + ( Max( BR,FirstVNF_RAM_Server ) - ( MDR + ACS ) ) ) )", "choosing": "( ( ( ( RCSe - CS ) - CS ) * DS ) - Min( MLU ,RMSe ) )", "obj1": 0.7445544554455445, "obj2": 0.17871802528905986}, {"determining": "( ( MRS / DDR ) - Min( ARS ,FirstVNF_CPU ) )", "choosing": "( Max( ( DS + RRSe ),( MUM / MUC ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / DDR ) - ( ACS / FirstVNF_Mem ) )", "choosing": "Max( ( DS + RRSe ),( MUM / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS - FirstVNF_RAM ) - AMS ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "( ( RCSe * RRSe ) + Max( MUR,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - AMS ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "( Max( RCSe,CS ) + ( Max( CS,RRSe ) - Min( RCSe ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * Min( Max( FirstVNF_RAM,FirstVNF_RAM ) ,MDR ) ) - Max( FirstVNF_RAM_Server,CRS ) ) / ( Max( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) - Min( AMS ,RRS ) ),Min( ( CRS * BR ) ,( FirstVNF_Mem + DDR ) ) ) * ( ACS - DDR ) ) )", "choosing": "( ( ( Max( MUR,DS ) + Max( Max( RMSe,MUM ),( RCSe * MUR ) ) ) / Min( MUM ,CS ) ) / Min( ( RMSe * DS ) ,( RCSe / RRSe ) ) )", "obj1": 0.998019801980198, "obj2": 0.00130556309458067}, {"determining": "( ( ( CRS * ACS ) * FirstVNF_Mem ) - ( ( Min( Max( ( FirstVNF_RAM_Server - DDR ),( FirstVNF_Mem_Server + MRS ) ) ,Min( ( ACS * FirstVNF_CPU ) ,( BR * ARS ) ) ) / ( ( ( PN - FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,ACS ) ) / ( ( FirstVNF_RAM * FirstVNF_Mem ) / Min( CRS ,FirstVNF_Mem ) ) ) ) - ( AMS + ACS ) ) )", "choosing": "( ( ( ( MUC - CS ) - ( CS + MUR ) ) + ( ( MLU * MUM ) / ( RMSe - MUR ) ) ) / Max( Min( Max( ( MUR * MUC ),( RRSe / RMSe ) ) ,( RCSe * MUC ) ),( ( MUR - MLU ) / Max( MUC,MLU ) ) ) )", "obj1": 0.9920792079207921, "obj2": 0.005780715453639744}, {"determining": "( Min( Max( ( FirstVNF_RAM_Server - DDR ),( FirstVNF_Mem_Server + MRS ) ) ,Min( ( ACS * FirstVNF_CPU ) ,( BR * ARS ) ) ) / ( ( ( PN - FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,ACS ) ) / ( ( FirstVNF_RAM * FirstVNF_Mem ) / Min( CRS ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUC - CS ) - ( CS + MUR ) ) + ( ( MLU * MUM ) / ( RMSe - MUR ) ) ) / Max( Min( ( RRSe * RMSe ) ,( RCSe * MUC ) ),( ( MUR - MLU ) / Max( MUC,MLU ) ) ) )", "obj1": 0.6574257425742575, "obj2": 0.2445846006019251}, {"determining": "( ( BR - AMS ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "Min( ( MUC / ( MUM * Min( MLU ,MUM ) ) ) ,Max( DS,Min( RCSe ,( RMSe + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( MDR / FirstVNF_CPU ),( Const / FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,AMS ) ) - ( ( ( BR * FirstVNF_CPU ) / ( BR - MRS ) ) + ( Max( BR,FirstVNF_RAM_Server ) - ( MDR + ACS ) ) ) )", "choosing": "( ( ( ( RCSe - Min( RRSe ,MUR ) ) - CS ) * DS ) - Min( MLU ,RMSe ) )", "obj1": 0.7603960396039604, "obj2": 0.17260366559018295}, {"determining": "( ( Max( ( MDR / FirstVNF_CPU ),( Const / FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( MDR * BR ) ) ) - ( ( ( BR * FirstVNF_CPU ) / ( BR - MRS ) ) + ( Max( BR,FirstVNF_RAM_Server ) - ( MDR + ACS ) ) ) )", "choosing": "( ( ( ( RCSe - CS ) - CS ) * DS ) - Min( MLU ,RMSe ) )", "obj1": 0.7445544554455445, "obj2": 0.17871802528905986}]}