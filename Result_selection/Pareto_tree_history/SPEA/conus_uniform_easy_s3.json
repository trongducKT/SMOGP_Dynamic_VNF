{"1": [{"determining": "( Max( ARS,FirstVNF_Mem ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) )", "choosing": "( Min( DS ,RCSe ) - ( MUR / MUR ) )", "obj1": 0.33267716535433073, "obj2": 0.46572266372729365}, {"determining": "Max( ( MRS / ACS ),( FirstVNF_RAM_Server - PN ) )", "choosing": "( Min( CS ,MUC ) * ( MUC - MLU ) )", "obj1": 0.1830708661417323, "obj2": 0.6409386748631742}, {"determining": "Min( ( FirstVNF_RAM_Server * FirstVNF_Mem ) ,( ARS - FirstVNF_RAM ) )", "choosing": "( ( DS - RCSe ) + ( MUM + MLU ) )", "obj1": 0.5236220472440944, "obj2": 0.3908455794099943}, {"determining": "( Min( BR ,MRS ) * ( PN - FirstVNF_RAM_Server ) )", "choosing": "Max( ( RMSe * ( MLU / ( RMSe / DS ) ) ),( RRSe / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,( Const * FirstVNF_RAM ) )", "choosing": "Min( ( MUM * DS ) ,Min( DS ,MLU ) )", "obj1": 0.6889763779527559, "obj2": 0.22087360313391438}, {"determining": "Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,Max( FirstVNF_Mem,DDR ) )", "choosing": "Max( Max( MUR,DS ),( MUM - RMSe ) )", "obj1": 0.40551181102362205, "obj2": 0.44853922955279313}, {"determining": "( Min( FirstVNF_CPU ,Max( ( RRS - ( ( DDR + PN ) - CRS ) ),( DDR + ( MDR * FirstVNF_CPU_Server ) ) ) ) - ( FirstVNF_Mem - BR ) )", "choosing": "Max( Min( RCSe ,( MUC + RCSe ) ),Max( MLU,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR + FirstVNF_CPU ) ,( DDR - FirstVNF_RAM ) )", "choosing": "( Max( MUC,MUM ) - ( RCSe - MUM ) )", "obj1": 0.9606299212598425, "obj2": 0.027610092492777568}, {"determining": "( ( CRS + Const ) - ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe / RMSe ) / Min( MUR ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN + MDR ) - AMS ) - ( FirstVNF_CPU_Server - PN ) )", "choosing": "( Min( RCSe ,MLU ) * ( MUR + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ACS ) ,( DDR + PN ) )", "choosing": "( ( MUR - CS ) / ( RRSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / MDR ) + Max( MRS,FirstVNF_CPU ) )", "choosing": "Min( ( CS + RRSe ) ,( DS / RRSe ) )", "obj1": 0.5688976377952756, "obj2": 0.35012501370771215}, {"determining": "( ( FirstVNF_RAM_Server * ARS ) + ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( Min( RCSe ,RRSe ) / ( DS - RRSe ) )", "obj1": 0.08267716535433071, "obj2": 0.7046753957467994}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( ARS / FirstVNF_RAM ) )", "choosing": "Min( ( RCSe / CS ) ,( RCSe * DS ) )", "obj1": 0.7165354330708661, "obj2": 0.20814229155773026}, {"determining": "( ( CRS - FirstVNF_CPU ) * ( MDR / MDR ) )", "choosing": "( Min( CS ,RRSe ) * Min( CS ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Const + ARS ),( FirstVNF_Mem_Server + FirstVNF_RAM ) )", "choosing": "Min( Min( CS ,DS ) ,( MLU - Max( CS,RRSe ) ) )", "obj1": 0.2992125984251969, "obj2": 0.48354642287586463}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_RAM ) - Max( ( ARS * BR ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( MUR / Max( RRSe,( RMSe + MLU ) ) ),( DS / ( CS * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server * BR ) ),( ( CRS - FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) + ( BR - BR ) ) ,Min( ( FirstVNF_CPU - ARS ) ,( Const + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS / ( Min( ( MUC / Max( RCSe,Min( DS ,MUC ) ) ) ,MLU ) * MUR ) ) / CS ) * ( ( RMSe + RRSe ) * RRSe ) )", "obj1": 0.41141732283464566, "obj2": 0.40658154761661397}, {"determining": "Min( Min( MDR ,Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ,Min( ( DDR * AMS ) ,( FirstVNF_RAM_Server / AMS ) ) )", "choosing": "( Min( Min( DS ,MUR ) ,( MUC / MUM ) ) + Min( Max( MUC,RRSe ) ,( MUR / RCSe ) ) )", "obj1": 0.5866141732283464, "obj2": 0.3065428580389491}, {"determining": "Max( ( ( FirstVNF_RAM + RRS ) * Max( ACS,FirstVNF_RAM_Server ) ),Min( ( ACS * FirstVNF_RAM ) ,Min( AMS ,ACS ) ) )", "choosing": "Min( ( MUC / ( CS - DS ) ) ,( ( RMSe * DS ) * Max( MUM,DS ) ) )", "obj1": 0.6358267716535433, "obj2": 0.2562655774656014}, {"determining": "( Max( PN,RRS ) - ( DDR + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( MLU + RCSe ) ) ,( Max( MUM,RRSe ) - ( ( CS - ( ( RMSe + DS ) - Min( ( MUC + ( RRSe / CS ) ) ,RMSe ) ) ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_CPU_Server * ( FirstVNF_RAM / ARS ) ),( PN * ( Const - ( MDR + DDR ) ) ) )", "choosing": "( Max( ( MUR - Max( Max( ( MUM / Max( RMSe,RRSe ) ),( ( ( MUR + DS ) - ( RRSe / CS ) ) * RCSe ) ),( MUC - DS ) ) ),( RCSe + CS ) ) - Min( Max( MUR,RMSe ) ,( MUR * MUR ) ) )", "obj1": 0.04330708661417323, "obj2": 0.7455083322426809}, {"determining": "( ( Min( FirstVNF_CPU ,Const ) / Min( Const ,RRS ) ) + ( Min( ARS ,FirstVNF_CPU ) * ( BR * ARS ) ) )", "choosing": "( Max( ( MUM / DS ),Max( MLU,DS ) ) - Max( ( MLU - MUM ),( RMSe + MUC ) ) )", "obj1": 0.045275590551181105, "obj2": 0.7382402897575555}, {"determining": "( ( ( CRS * RRS ) / Min( Const ,ARS ) ) - ( PN * DDR ) )", "choosing": "Max( ( Min( ( MUC + MLU ) ,( CS + RCSe ) ) * ( ( MLU * MUR ) - ( MUM - MUC ) ) ),Max( ( Max( RRSe,RCSe ) / ( RMSe - CS ) ),( ( MUM + MUM ) - Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Min( RRS ,FirstVNF_CPU ) ,( FirstVNF_CPU_Server - BR ) ) / ( Max( CRS,FirstVNF_RAM ) / ( MRS / RRS ) ) ) ,( Min( Max( AMS,ARS ) ,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) + ( ( ARS + DDR ) / Min( PN ,MDR ) ) ) )", "choosing": "Min( ( Max( ( MLU + MUM ),Min( MUC ,RCSe ) ) + ( ( RRSe - RCSe ) - ( RRSe - RRSe ) ) ) ,( ( ( MLU / MUM ) * Max( MUM,MUC ) ) - Min( ( RCSe - RCSe ) ,Min( DS ,CS ) ) ) )", "obj1": 0.6791338582677166, "obj2": 0.23643311435787392}, {"determining": "( Min( Max( ( BR - MRS ),( BR + DDR ) ) ,( ( FirstVNF_Mem_Server - CRS ) + ( Max( FirstVNF_Mem,Min( CRS ,FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) / ( Min( ( DDR + FirstVNF_RAM_Server ) ,( MDR + FirstVNF_CPU ) ) * ( ( FirstVNF_RAM_Server - Const ) * ( FirstVNF_Mem_Server / CRS ) ) ) )", "choosing": "( ( Min( Max( MUM,DS ) ,( MUM * DS ) ) / Max( RCSe,( MUC - Min( MUC ,CS ) ) ) ) / ( ( ( RCSe + DS ) * ( DS * DS ) ) + ( ( MUR + MLU ) / Max( DS,MUC ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.7297882262985049}, {"determining": "( ( Const - ( MRS - AMS ) ) - ( ( ( ACS / CRS ) + Max( RRS,ARS ) ) / Max( ( FirstVNF_CPU - PN ),( FirstVNF_RAM_Server / AMS ) ) ) )", "choosing": "( Max( Max( Min( MUR ,RMSe ),( MUR / MUM ) ),( ( CS * RRSe ) + ( MUC + DS ) ) ) + ( Min( ( RMSe - RRSe ) ,( RRSe + MUM ) ) + Min( ( RCSe * RCSe ) ,( ( RCSe * MLU ) / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( ( RRSe * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.19094488188976377, "obj2": 0.5453067175455301}, {"determining": "( ( ( ( AMS - PN ) - ( AMS / FirstVNF_CPU_Server ) ) * ( PN / MDR ) ) + ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) / FirstVNF_CPU ) )", "choosing": "Max( ( Min( MUM ,MUR ) * RMSe ),Max( ( RRSe / ( MUR - RCSe ) ),( ( MUM - MUM ) - Min( MUC ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + ( PN / Const ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,Max( ( ( ARS + DDR ) + Max( AMS,ARS ) ),Max( ( PN / RRS ),( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( ( RMSe / CS ),( MUR / RRSe ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * Min( ( Max( DS,MUM ) * Max( MUC,CS ) ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.3543307086614173, "obj2": 0.4509641773630226}, {"determining": "( ( ACS - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) + ( ( FirstVNF_Mem_Server + ARS ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( ( RRSe + MUM ) / ( MLU / Max( CS,MUM ) ) ) ) * ( Max( ( MLU + MUC ),( RCSe - RCSe ) ) + ( Max( MLU,CS ) + ( MUM / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( MRS,ACS ),Max( CRS,( MRS / Const ) ) ) * ( ( Const - DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) + ( ( ( Const * FirstVNF_CPU ) - ( Const * FirstVNF_Mem ) ) - Min( ( BR / RRS ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( DS / MLU ) - RCSe ) + Min( MUM ,( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS - ( FirstVNF_RAM + FirstVNF_Mem ) ) * ( ARS / MDR ) ) ,( ARS + Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,( ( CS * RCSe ) - ( MUC / DS ) ) ) * Min( Min( MUC ,MLU ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( BR,MRS ) - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( BR ,RRS ) ) ) ,( Max( Max( RRS,Const ),Max( ARS,MDR ) ) / Min( Min( FirstVNF_Mem_Server ,MRS ) ,( MRS + CRS ) ) ) )", "choosing": "( Max( Max( ( CS / RMSe ),MUM ),( MUR + DS ) ) - Max( RMSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / AMS ) * ( FirstVNF_CPU_Server - RRS ) ) ,( Max( FirstVNF_RAM_Server,Const ) - ( Const * PN ) ) ) - Max( Max( ( FirstVNF_RAM_Server - FirstVNF_RAM ),( MDR / FirstVNF_RAM_Server ) ),( ( BR / MDR ) / ( CRS - AMS ) ) ) )", "choosing": "Max( Max( RMSe,DS ),( ( Min( RCSe ,MUC ) / Min( RMSe ,MLU ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( MRS,MRS ) ,Min( BR ,RRS ) ) + ( ( CRS / FirstVNF_Mem ) - Min( RRS ,MRS ) ) ) * Max( ( ( MRS * AMS ) / ( RRS * CRS ) ),( ( FirstVNF_Mem / RRS ) + ( FirstVNF_Mem / CRS ) ) ) )", "choosing": "( ( ( ( MUM / RCSe ) / ( MUC / RCSe ) ) / Min( Min( RRSe ,MLU ) ,Min( MUC ,MUC ) ) ) + ( ( Min( RMSe ,MUR ) - Max( MUM,RCSe ) ) - ( ( MUC - MUC ) + Max( DS,DS ) ) ) )", "obj1": 0.13976377952755906, "obj2": 0.6645276642473983}, {"determining": "( ( Max( BR,( FirstVNF_RAM / ACS ) ) * FirstVNF_RAM ) * ( RRS - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - RCSe ) + ( ( ( RRSe - CS ) + MLU ) - Max( RCSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ( FirstVNF_Mem_Server - ( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) ) ) / ( ( ARS / FirstVNF_Mem ) - MDR ) )", "choosing": "Min( ( ( ( RMSe * MUM ) + ( MUR * MUR ) ) + ( ( RRSe / RRSe ) * Min( MUC ,MUR ) ) ) ,Max( ( Max( MLU,DS ) + ( MUC - Min( ( MUR * Max( CS,( RMSe + MUC ) ) ) ,MUM ) ) ),( ( RCSe / RCSe ) + Min( RRSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( Max( ACS,FirstVNF_RAM ) * ( Const * RRS ) ) - ( ( AMS - FirstVNF_Mem ) + ( RRS * ARS ) ) ),Min( ( Max( FirstVNF_CPU,ACS ) + Min( CRS ,BR ) ) ,( Min( CRS ,Const ) / ( MDR + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( ( MLU * DS ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5089109022046446}, {"determining": "Min( ( ( Min( MDR ,DDR ) * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,AMS ) ) ,Min( FirstVNF_Mem_Server ,DDR ) )", "choosing": "( ( ( ( MLU / RCSe ) / ( DS - MUM ) ) * ( Max( DS,RMSe ) + ( MUM + RMSe ) ) ) - ( Max( Max( RRSe,MUR ),Min( DS ,MLU ) ) * Min( ( MUR + MUM ) ,Min( MUR ,MUM ) ) ) )", "obj1": 0.9409448818897638, "obj2": 0.05383662003701402}], "2": [{"determining": "( Max( ARS,FirstVNF_Mem ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) )", "choosing": "( Min( DS ,RCSe ) - ( MUR / MUR ) )", "obj1": 0.33267716535433073, "obj2": 0.46572266372729365}, {"determining": "( Min( BR ,MRS ) * ( PN - FirstVNF_RAM_Server ) )", "choosing": "Max( ( RMSe * ( MLU / ( RMSe / DS ) ) ),( RRSe / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,Max( ( RRS - ( ( DDR + PN ) - CRS ) ),( DDR + ( MDR * FirstVNF_CPU_Server ) ) ) ) - ( FirstVNF_Mem - BR ) )", "choosing": "Max( Min( RCSe ,( MUC + RCSe ) ),Max( MLU,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + Const ) - ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe / RMSe ) / Min( MUR ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN + MDR ) - AMS ) - ( FirstVNF_CPU_Server - PN ) )", "choosing": "( Min( RCSe ,MLU ) * ( MUR + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ACS ) ,( DDR + PN ) )", "choosing": "( ( MUR - CS ) / ( RRSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU ) * ( MDR / MDR ) )", "choosing": "( Min( CS ,RRSe ) * Min( CS ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_RAM ) - Max( ( ARS * BR ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( MUR / Max( RRSe,( RMSe + MLU ) ) ),( DS / ( CS * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,RRS ) - ( DDR + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( MLU + RCSe ) ) ,( Max( MUM,RRSe ) - ( ( CS - ( ( RMSe + DS ) - Min( ( MUC + ( RRSe / CS ) ) ,RMSe ) ) ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * RRS ) / Min( Const ,ARS ) ) - ( PN * DDR ) )", "choosing": "Max( ( Min( ( MUC + MLU ) ,( CS + RCSe ) ) * ( ( MLU * MUR ) - ( MUM - MUC ) ) ),Max( ( Max( RRSe,RCSe ) / ( RMSe - CS ) ),( ( MUM + MUM ) - Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ( MRS - AMS ) ) - ( ( ( ACS / CRS ) + Max( RRS,ARS ) ) / Max( ( FirstVNF_CPU - PN ),( FirstVNF_RAM_Server / AMS ) ) ) )", "choosing": "( Max( Max( Min( MUR ,RMSe ),( MUR / MUM ) ),( ( CS * RRSe ) + ( MUC + DS ) ) ) + ( Min( ( RMSe - RRSe ) ,( RRSe + MUM ) ) + Min( ( RCSe * RCSe ) ,( ( RCSe * MLU ) / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS - PN ) - ( AMS / FirstVNF_CPU_Server ) ) * ( PN / MDR ) ) + ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) / FirstVNF_CPU ) )", "choosing": "Max( ( Min( MUM ,MUR ) * RMSe ),Max( ( RRSe / ( MUR - RCSe ) ),( ( MUM - MUM ) - Min( MUC ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) + ( ( FirstVNF_Mem_Server + ARS ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( ( RRSe + MUM ) / ( MLU / Max( CS,MUM ) ) ) ) * ( Max( ( MLU + MUC ),( RCSe - RCSe ) ) + ( Max( MLU,CS ) + ( MUM / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( MRS,ACS ),Max( CRS,( MRS / Const ) ) ) * ( ( Const - DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) + ( ( ( Const * FirstVNF_CPU ) - ( Const * FirstVNF_Mem ) ) - Min( ( BR / RRS ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( DS / MLU ) - RCSe ) + Min( MUM ,( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS - ( FirstVNF_RAM + FirstVNF_Mem ) ) * ( ARS / MDR ) ) ,( ARS + Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,( ( CS * RCSe ) - ( MUC / DS ) ) ) * Min( Min( MUC ,MLU ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( BR,MRS ) - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( BR ,RRS ) ) ) ,( Max( Max( RRS,Const ),Max( ARS,MDR ) ) / Min( Min( FirstVNF_Mem_Server ,MRS ) ,( MRS + CRS ) ) ) )", "choosing": "( Max( Max( ( CS / RMSe ),MUM ),( MUR + DS ) ) - Max( RMSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / AMS ) * ( FirstVNF_CPU_Server - RRS ) ) ,( Max( FirstVNF_RAM_Server,Const ) - ( Const * PN ) ) ) - Max( Max( ( FirstVNF_RAM_Server - FirstVNF_RAM ),( MDR / FirstVNF_RAM_Server ) ),( ( BR / MDR ) / ( CRS - AMS ) ) ) )", "choosing": "Max( Max( RMSe,DS ),( ( Min( RCSe ,MUC ) / Min( RMSe ,MLU ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,( FirstVNF_RAM / ACS ) ) * FirstVNF_RAM ) * ( RRS - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - RCSe ) + ( ( ( RRSe - CS ) + MLU ) - Max( RCSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ( FirstVNF_Mem_Server - ( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) ) ) / ( ( ARS / FirstVNF_Mem ) - MDR ) )", "choosing": "Min( ( ( ( RMSe * MUM ) + ( MUR * MUR ) ) + ( ( RRSe / RRSe ) * Min( MUC ,MUR ) ) ) ,Max( ( Max( MLU,DS ) + ( MUC - Min( ( MUR * Max( CS,( RMSe + MUC ) ) ) ,MUM ) ) ),( ( RCSe / RCSe ) + Min( RRSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * ARS ) / ( ( ( ( ARS / ( ( PN - FirstVNF_Mem_Server ) / FirstVNF_CPU ) ) - ACS ) * Max( FirstVNF_CPU,PN ) ) * ( Max( ( FirstVNF_Mem / RRS ),AMS ) / PN ) ) )", "choosing": "Min( ( ( ( MUC + MUR ) + Min( RCSe ,MLU ) ) - RMSe ) ,Min( ( RMSe + RMSe ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS + Const ) - ( Const + FirstVNF_Mem_Server ) ) + BR ) + ( RRS * FirstVNF_CPU ) )", "choosing": "Min( ( RRSe - MUC ) ,( ( ( RRSe / RMSe ) / Min( MUR ,RMSe ) ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - Min( ACS ,( ( FirstVNF_Mem * FirstVNF_Mem ) + BR ) ) ) - Min( CRS ,Const ) )", "choosing": "Min( ( MUR + ( ( RRSe + ( RCSe - RCSe ) ) + Min( DS ,RRSe ) ) ) ,( RCSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( FirstVNF_CPU,ACS ),( FirstVNF_CPU * ARS ) ) * ( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,PN ) - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( MUC * RMSe ) ,Max( ( DS / MUM ),DS ) ) + Min( MUM ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,PN ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( ( RRSe + MUM ) / ( MLU / MLU ) ) ) * ( Max( ( MLU + MUC ),( RCSe - MLU ) ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( ACS ,Max( Const,DDR ) ),ACS ) + ( ARS * FirstVNF_CPU ) ) * ( MDR - FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUC * RMSe ) ,Max( RMSe,CS ) ) + Min( Max( Min( Max( Min( Min( ( RCSe - MUM ) ,CS ) ,DS ),CS ) ,RRSe ),( ( MLU + RMSe ) * RRSe ) ) ,( RCSe / ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( ACS ,Max( Const,DDR ) ),ACS ) + ( ARS * FirstVNF_CPU ) ) * ( MDR - FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUC * RMSe ) ,Max( RMSe,CS ) ) + Min( Max( Min( Max( Min( Min( ( RCSe - MUM ) ,CS ) ,DS ),CS ) ,RRSe ),( ( MLU + RMSe ) * RRSe ) ) ,( RCSe / ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( ACS ,Max( Const,DDR ) ),ACS ) + ( ARS * FirstVNF_CPU ) ) * ( MDR - FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUC * RMSe ) ,Max( RMSe,CS ) ) + Min( Max( Min( Max( Min( Min( ( RCSe - MUM ) ,CS ) ,DS ),CS ) ,RRSe ),( ( MLU + RMSe ) * RRSe ) ) ,( RCSe / ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( FirstVNF_Mem,ACS ),( ARS * FirstVNF_CPU ) ) * ( MDR - FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUC * RMSe ) ,Max( RMSe,CS ) ) + Min( ( MUM - CS ) ,( RCSe / ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( BR - ( FirstVNF_CPU_Server - PN ) )", "choosing": "( ( MUR + MUM ) * MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - ( FirstVNF_CPU + Max( FirstVNF_Mem_Server,MDR ) ) ) - ( FirstVNF_CPU_Server - PN ) )", "choosing": "( ( MUR + MUM ) * ( ( ( DS / MUR ) - CS ) - ( RRSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / FirstVNF_CPU ) - Max( PN,RRS ) ) - Max( ( FirstVNF_RAM * Min( ( Min( MDR ,Max( CRS,RRS ) ) * MRS ) ,MRS ) ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( MUR / Max( DS,MLU ) ),( DS / Min( RCSe ,Min( ( MUR * MUR ) ,( ( MLU / ( ( RCSe + CS ) * ( RMSe / MUC ) ) ) / DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Const - MDR ) / FirstVNF_Mem ) - Max( PN,RRS ) ) - Max( ( FirstVNF_RAM * BR ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RRSe / ( RCSe * CS ) ),( MUR / Max( Max( MUR,DS ),MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( AMS - FirstVNF_Mem_Server ) * ( RRS * FirstVNF_CPU ) ) ,( MRS * PN ) )", "choosing": "( ( ( RRSe + Min( ( ( ( MUC / CS ) - Max( MUC,MLU ) ) + ( ( MUM * MUM ) - ( MUR / MUR ) ) ) ,( RRSe * RCSe ) ) ) / MUM ) - ( MUC + RMSe ) )", "obj1": 0.9015748031496063, "obj2": 0.05752296455347608}, {"determining": "( ( ( Max( RRS,ACS ) * ( DDR - RRS ) ) + ( Min( FirstVNF_RAM_Server ,ARS ) - Max( MDR,ARS ) ) ) * Min( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),( DDR - ARS ) ) ,( ( ARS / FirstVNF_Mem_Server ) - Min( Max( CRS,( BR / CRS ) ) ,RRS ) ) ) )", "choosing": "Min( ( ( ( MUC / CS ) - ( ( DS * ( MUC / ( Max( MLU,CS ) + MUM ) ) ) / RMSe ) ) + ( ( MUM * MUM ) - ( MUR / MUM ) ) ) ,Max( Min( Max( RMSe,MUM ) ,( DS - MLU ) ),Max( RCSe,MUC ) ) )", "obj1": 0.9153543307086615, "obj2": 0.042405942553663964}, {"determining": "( ( ( Max( RRS,ACS ) * ( DDR - RRS ) ) + ( Min( FirstVNF_RAM_Server ,ARS ) - Max( MDR,ARS ) ) ) * Min( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),( DDR - ARS ) ) ,( ( ARS / FirstVNF_Mem_Server ) - Min( Max( CRS,( BR / CRS ) ) ,RRS ) ) ) )", "choosing": "Min( ( ( ( MUC / CS ) - ( ( DS * ( MUC / ( Max( MLU,CS ) + MUM ) ) ) / RMSe ) ) + ( ( MUM * MUM ) - ( MUR / MUM ) ) ) ,Max( Min( Max( RMSe,MUM ) ,( DS - MLU ) ),Max( RCSe,MUC ) ) )", "obj1": 0.9153543307086615, "obj2": 0.042405942553663964}, {"determining": "( ( ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) - Max( ACS,MRS ) ) + ( Min( FirstVNF_RAM_Server ,ARS ) - Max( MDR,ARS ) ) ) * ( FirstVNF_RAM + MDR ) )", "choosing": "Min( ( ( ( MUC / CS ) - Max( MUC,MLU ) ) + ( ( MUM * MUM ) - ( MUR / MUR ) ) ) ,( ( ( MUM - MUM ) / MUC ) - DS ) )", "obj1": 0.9153543307086615, "obj2": 0.042405942553663964}, {"determining": "( ( Max( BR,( BR / FirstVNF_Mem_Server ) ) * AMS ) * ( RRS - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - RCSe ) + ( ( ( Max( DS,RCSe ) - CS ) + MLU ) - Max( RCSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS + FirstVNF_Mem_Server ) / Min( Const ,FirstVNF_Mem ) ) - ( PN * DDR ) )", "choosing": "Max( ( Min( ( MUC + MLU ) ,( CS + RCSe ) ) * ( ( MLU * MUR ) - ( MUM - MUC ) ) ),Max( ( CS + MUM ),( Max( RRSe,RCSe ) / ( RMSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const / Const ) ,( Max( FirstVNF_Mem,CRS ) / Min( ( MDR + ( ( ACS + MDR ) * Const ) ) ,( DDR - FirstVNF_RAM ) ) ) )", "choosing": "( ( ( RCSe - RCSe ) / MUM ) - Max( RMSe,Max( MUM,MUM ) ) )", "obj1": 0.9566929133858267, "obj2": 0.03397700336716195}, {"determining": "Min( ( MDR + FirstVNF_CPU ) ,( DDR - FirstVNF_RAM ) )", "choosing": "( ( ( RRSe + MUR ) / MUM ) - Max( RCSe,Max( MUM,MUM ) ) )", "obj1": 0.9586614173228346, "obj2": 0.027018779257504708}, {"determining": "( DDR + ( ( ( Const * FirstVNF_Mem ) - ( Const * FirstVNF_CPU ) ) - ( FirstVNF_CPU * Max( ( ACS / ARS ),Max( RRS,FirstVNF_Mem ) ) ) ) )", "choosing": "( ( DS + Max( CS,MUR ) ) + ( ( CS + MLU ) / ( ( ( RCSe - RCSe ) - RMSe ) - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( MRS,ACS ),Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( Const + DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) + ( ( ( Const * FirstVNF_CPU ) - ( Const * FirstVNF_Mem ) ) - Min( ( BR / RRS ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( Min( RRSe ,MUM ) + ( MUM / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server * BR ) ),( ( CRS - FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) + ( BR - BR ) ) ,Min( ( FirstVNF_CPU - ARS ) ,( Const + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS / ( Min( ( MUC / Max( RCSe,Min( DS ,MUC ) ) ) ,MLU ) * MUR ) ) / CS ) * ( ( RMSe + RRSe ) * RRSe ) )", "obj1": 0.9704724409448819, "obj2": 0.016599349271730318}, {"determining": "Min( ( Max( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server * BR ) ),( ( CRS - FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) + ( BR - BR ) ) ,Min( ( FirstVNF_CPU - ARS ) ,( Const + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS / ( Min( ( Max( RCSe,Min( DS ,MUC ) ) / MUC ) ,MLU ) * MUR ) ) / CS ) + ( ( RMSe + RRSe ) * RRSe ) )", "obj1": 0.9724409448818898, "obj2": 0.015192535266673534}, {"determining": "Min( ( Max( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server * BR ) ),( ( CRS - FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) + ( BR - BR ) ) ,Min( ( FirstVNF_CPU - ARS ) ,( Const + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS / ( Min( ( MUC / Max( RCSe,Min( DS ,MUC ) ) ) ,MLU ) * MUR ) ) / CS ) * ( ( RMSe + RRSe ) * RRSe ) )", "obj1": 0.9704724409448819, "obj2": 0.016599349271730318}, {"determining": "Min( ( Max( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server * BR ) ),( ( CRS - FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) + ( BR - BR ) ) ,Min( ( FirstVNF_CPU - ARS ) ,( Const + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS / ( Min( ( MUC / Max( RCSe,Min( DS ,MUC ) ) ) ,MLU ) * MUR ) ) / CS ) * ( ( RMSe + RRSe ) * RRSe ) )", "obj1": 0.9704724409448819, "obj2": 0.016599349271730318}, {"determining": "( ( CRS - MDR ) / Min( ARS ,( ( CRS / MRS ) * FirstVNF_CPU ) ) )", "choosing": "( Min( Max( Max( RRSe,RMSe ),Max( MUR,MUM ) ) ,( ( RRSe - RMSe ) * Max( CS,RRSe ) ) ) / ( MUM * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * ( Min( AMS ,Min( Max( MRS,Max( MDR,FirstVNF_CPU ) ) ,Min( MDR ,CRS ) ) ) * ( DDR - CRS ) ) ) - ( DDR + MDR ) )", "choosing": "Min( ( ( MLU + MUM ) - ( MLU + RCSe ) ) ,Max( MUM,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( DDR + MDR ) )", "choosing": "( Min( MUR ,RRSe ) * ( MLU + ( ( MUC * RMSe ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,Min( AMS ,RRS ) ) - MDR )", "choosing": "Max( ( ( ( MUC / CS ) / ( RMSe * ( ( DS / ( RMSe * ( MLU + MLU ) ) ) * RCSe ) ) ) / Max( Max( RCSe,RMSe ),( MUR - DS ) ) ),( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,CRS ) - ( FirstVNF_Mem - BR ) )", "choosing": "Min( Min( ( ( RRSe / RMSe ) * Min( MLU ,RCSe ) ) ,( Max( RMSe,RCSe ) + ( MUR * RRSe ) ) ) ,( ( ( MUC / CS ) / ( MUC * RRSe ) ) / Max( Max( RCSe,RMSe ),( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / AMS ) * ( FirstVNF_CPU_Server - RRS ) ) ,( Max( FirstVNF_RAM_Server,Const ) - ( Const * PN ) ) ) - Max( Max( ( FirstVNF_RAM_Server - FirstVNF_RAM ),( FirstVNF_Mem_Server + FirstVNF_CPU ) ),( ( BR / MDR ) / ( CRS - AMS ) ) ) )", "choosing": "Max( Max( RMSe,DS ),( ( Max( MUR,DS ) / Min( RMSe ,MLU ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / AMS ) * ( FirstVNF_CPU_Server - RRS ) ) ,( Max( FirstVNF_RAM_Server,Const ) - ( Const * Const ) ) ) - Max( Max( ( FirstVNF_RAM_Server - FirstVNF_RAM ),( MDR / FirstVNF_RAM_Server ) ),( ARS / MDR ) ) )", "choosing": "Max( Max( RMSe,( MUM + CS ) ),( ( Min( RCSe ,MUC ) / Min( RMSe ,MLU ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - MDR ) / ( ( ( CRS / MRS ) * FirstVNF_CPU ) / ( DDR * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( Max( RRSe,RMSe ),Max( MUR,MUM ) ) ,( ( RRSe - RMSe ) * ( CS * RRSe ) ) ) / ( ( Max( RRSe,MUM ) + MUM ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * RRS ) / Min( Const ,ARS ) ) - ( PN * FirstVNF_RAM_Server ) )", "choosing": "Max( ( Min( ( MUC + MLU ) ,( CS + RCSe ) ) * ( ( MLU * MUR ) - ( MUM - MUC ) ) ),Max( ( Max( RRSe,RCSe ) / ( RMSe - CS ) ),( Max( DS,MUC ) - Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * RRS ) / Min( Const ,ARS ) ) - ( PN * ( CRS + FirstVNF_RAM ) ) )", "choosing": "Max( ( Min( ( MUC + MLU ) ,( MUR / Min( MUM ,MLU ) ) ) * ( ( MLU * MUR ) - ( MUM - MLU ) ) ),Max( ( Max( RRSe,RCSe ) / ( RMSe - CS ) ),( ( MUM + MUM ) - Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( BR * FirstVNF_CPU ) + ( MDR * PN ) ),MRS ) ,( ARS - ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) )", "choosing": "( ( DS - ( ( RMSe / MLU ) * DS ) ) + ( MUM + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server + ACS ) )", "choosing": "( MLU / ( RRSe / ( RCSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + Const ) - ( Const + FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( DS / MLU ) / ( MLU - RRSe ) ) + ( ( RCSe * MUC ) / ( CS + CS ) ) ) ,( ( ( MLU / RMSe ) / ( DS / MUC ) ) + Max( ( MUM + DS ),( MUC + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,DDR ) * FirstVNF_CPU_Server ) - Min( ( Max( ACS,( RRS + RRS ) ) * ( Const + ( RRS + Const ) ) ) ,AMS ) ) ,Min( FirstVNF_Mem_Server ,DDR ) )", "choosing": "( ( ( ( MLU / RCSe ) / ( DS - MUM ) ) * ( Max( DS,RMSe ) + Max( ( DS + RMSe ),( MUR - RCSe ) ) ) ) - ( Max( Max( RRSe,MUR ),Min( DS ,MLU ) ) * Min( ( MUR + MUM ) ,Min( MUR ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,CRS ) - ( FirstVNF_Mem - BR ) )", "choosing": "( Min( Max( Max( RRSe,RMSe ),Max( MUR,MUM ) ) ,( ( RRSe - RMSe ) * Max( CS,RRSe ) ) ) / ( MUM * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - MDR ) / Min( ARS ,( ( CRS / MRS ) * FirstVNF_CPU ) ) )", "choosing": "Max( Min( RCSe ,MLU ),( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - ( ( ACS / FirstVNF_CPU_Server ) / ( RRS / FirstVNF_CPU_Server ) ) ) - Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM_Server ,ARS ) ) )", "choosing": "( Max( RMSe,( Min( RRSe ,MUC ) + ( MUC + DS ) ) ) + ( Min( ( RMSe - RRSe ) ,( RRSe + MUM ) ) + Min( ( RCSe * RCSe ) ,( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( ( ACS / FirstVNF_CPU_Server ) / ( RRS / FirstVNF_CPU_Server ) ) ) - ( ( ( ACS / CRS ) + Max( RRS,ARS ) ) / ( ( FirstVNF_CPU - PN ) / ( FirstVNF_RAM_Server / AMS ) ) ) )", "choosing": "( Max( Max( Max( RCSe,RMSe ),( MUR / MUM ) ),( ( RRSe * CS ) + ( MUC + DS ) ) ) + ( MUM / ( Max( RMSe,( ( ( RMSe * MUR ) * ( RMSe * ( CS + DS ) ) ) + MLU ) ) - ( RRSe - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * RRS ) / Min( Const ,ARS ) ) - ( ( FirstVNF_RAM + ( DDR + ACS ) ) + Min( FirstVNF_CPU_Server ,CRS ) ) )", "choosing": "Max( ( MUC / MUR ),Max( ( Max( RRSe,RCSe ) / ( RMSe - CS ) ),( ( MUM + MUM ) - Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * RRS ) / Min( Max( ( PN - ( PN * ( MDR - FirstVNF_CPU_Server ) ) ),BR ) ,ARS ) ) - ( PN * DDR ) )", "choosing": "Max( Min( MUR ,Min( MLU ,MUR ) ),Min( RRSe ,( RCSe * Max( MUC,Max( MLU,RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,( ( FirstVNF_CPU + MRS ) * MDR ) ) / MDR ) * ( MDR - MDR ) )", "choosing": "( ( RRSe * Min( Min( ( Min( ( ( DS / RCSe ) * MUC ) ,Max( ( MUM - RCSe ),( RCSe / DS ) ) ) + MUC ) ,MUM ) ,MUC ) ) + Min( ( MUM - CS ) ,( RCSe / ( DS - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( ( DDR / Max( FirstVNF_CPU_Server,Min( ( MRS - BR ) ,PN ) ) ) * ARS ) ) * Min( ( FirstVNF_Mem * ( ACS + FirstVNF_Mem_Server ) ) ,FirstVNF_CPU ) )", "choosing": "( Min( ( RCSe * ( ( RMSe / ( ( DS + ( CS + RMSe ) ) - Min( MLU ,( DS * RRSe ) ) ) ) - MUC ) ) ,Max( RMSe,CS ) ) + ( ( ( Max( RCSe,( MUC / Max( ( CS - CS ),MLU ) ) ) * ( ( Max( ( RMSe / MUR ),CS ) + RMSe ) + ( ( MUC * DS ) / CS ) ) ) / ( Min( ( Min( RMSe ,Max( MUC,MUC ) ) * DS ) ,( CS + DS ) ) + ( MUR - CS ) ) ) * Max( CS,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU ) * ( MDR / MDR ) )", "choosing": "( Min( CS ,RRSe ) * Min( CS ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server * BR ) ),( ( CRS - FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) + ( BR - BR ) ) ,Min( ( FirstVNF_CPU - ARS ) ,( Const + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS / ( Min( ( MUC / Max( RCSe,Min( DS ,MUC ) ) ) ,MLU ) * MUR ) ) / CS ) * ( ( RMSe + RRSe ) * RRSe ) )", "obj1": 0.9704724409448819, "obj2": 0.016599349271730318}, {"determining": "( ( ( ( FirstVNF_CPU - ( CRS - Min( DDR ,FirstVNF_Mem ) ) ) - ( Max( MRS,( ACS * FirstVNF_CPU ) ) / FirstVNF_CPU_Server ) ) * AMS ) + ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) / FirstVNF_CPU ) )", "choosing": "Max( ( MLU / CS ),Max( ( RRSe / ( MUR / RCSe ) ),( ( MUM - MUM ) - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN - AMS ) - ( AMS / FirstVNF_CPU_Server ) ) * AMS ) + ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) / FirstVNF_CPU ) )", "choosing": "Max( ( MUR * RMSe ),Max( ( RRSe / ( MUR / RCSe ) ),( ( MUM - MUM ) - Min( RCSe ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,Max( ( RRS - ( ( DDR + PN ) - Max( Min( MDR ,FirstVNF_Mem ),( BR + ACS ) ) ) ),( DDR + ( MDR * FirstVNF_CPU_Server ) ) ) ) - ( FirstVNF_Mem - BR ) )", "choosing": "Max( Min( RCSe ,( MUC + RCSe ) ),Max( MLU,MUM ) )", "obj1": 0.8090551181102362, "obj2": 0.14830888027226288}, {"determining": "( ( ( Min( ( FirstVNF_CPU * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) * RRS ) / Min( Const ,ARS ) ) - ( PN * DDR ) )", "choosing": "Max( ( Min( ( MUC + MLU ) ,( CS + RCSe ) ) * ( ( MLU * MUR ) - ( MUM - MUC ) ) ),Max( ( Max( RRSe,RCSe ) / ( RMSe - CS ) ),( ( MUM + MUM ) - Min( RMSe ,( ( Min( MUM ,DS ) * RCSe ) + ( ( MUR * DS ) / DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( CRS + DDR ) ,MDR ) * RRS ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - ( DDR * PN ) )", "choosing": "Max( ( Min( ( MLU + MUC ) ,( CS + RCSe ) ) * ( ( MLU * MUR ) - ( MUM - MUC ) ) ),Max( ( Max( CS,RCSe ) / ( RMSe - CS ) ),( ( MUM + MUM ) - Min( Max( Max( MUM,( DS - ( CS * MUM ) ) ),RCSe ) ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( ARS / FirstVNF_RAM ) ) - ( ( ACS / FirstVNF_CPU_Server ) / ( RRS / FirstVNF_CPU_Server ) ) ) - ( ( ( ACS / CRS ) + Max( RRS,ARS ) ) / ( ( FirstVNF_CPU - PN ) / ( FirstVNF_RAM_Server / AMS ) ) ) )", "choosing": "( Max( Max( Min( RCSe ,RMSe ),( MUR / MUM ) ),( ( RRSe * CS ) + ( ( RCSe * DS ) + DS ) ) ) + ( Min( ( RMSe - RRSe ) ,( RRSe + MUM ) ) + Min( ( RCSe * RCSe ) ,( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - ( ( ACS / FirstVNF_CPU_Server ) / ( RRS / FirstVNF_CPU_Server ) ) ) - ( ( ( ACS / CRS ) + Max( RRS,ARS ) ) / ( ( FirstVNF_CPU - PN ) / ( FirstVNF_RAM_Server / AMS ) ) ) )", "choosing": "( Max( Max( Min( RCSe ,RMSe ),( MUR / MUM ) ),( ( RRSe * CS ) + ( MUC + DS ) ) ) + ( Min( ( RMSe - RRSe ) ,( RRSe + MUM ) ) + Min( ( RCSe * RCSe ) ,( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,Const ) - ( FirstVNF_CPU_Server - PN ) )", "choosing": "( ( MUR + MUM ) * Max( DS,Max( ( MUM / DS ),Max( MLU,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * ( ACS - FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server - PN ) )", "choosing": "( ( Max( CS,DS ) / Max( RCSe,CS ) ) - Max( ( MLU - MUM ),( RMSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * ( FirstVNF_RAM + CRS ) ) / Min( Const ,ARS ) ) - ( PN * DDR ) )", "choosing": "Max( ( Min( ( MUC + MLU ) ,( CS + RCSe ) ) * ( ( MLU * MUR ) - ( MUM - MUC ) ) ),Max( ( Max( RRSe,RCSe ) / ( RMSe - CS ) ),( ( ( ( ( RRSe * CS ) * ( MUR - RRSe ) ) * ( ( MUM / MUC ) / ( MUR / MUC ) ) ) + MUM ) - Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * RRS ) / Min( Const ,ARS ) ) - ( PN * DDR ) )", "choosing": "( ( ( RRSe * CS ) * ( MUR - RRSe ) ) * ( ( MUM / MUC ) / ( MUR / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS - ( MDR + FirstVNF_Mem ) ) * ( ARS / MDR ) ) ,( ARS + Min( PN ,( ( ( CRS * RRS ) / Min( Const ,ARS ) ) - ( PN * Min( Min( CRS ,RRS ) ,DDR ) ) ) ) ) )", "choosing": "( Max( RRSe,( ( CS * RCSe ) - ( MUC / DS ) ) ) * ( MUR + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS * CRS ) - ( ( MRS - AMS ) - ( FirstVNF_RAM + FirstVNF_Mem ) ) ) - ( PN * DDR ) )", "choosing": "Max( ( Max( ( CS + ( MLU / ( ( RCSe - MUR ) - ( Max( RCSe,MUR ) + RMSe ) ) ) ),( MUC + MLU ) ) * ( ( MLU * MUR ) - ( MUM - MUC ) ) ),Max( ( CS * RCSe ),( ( MUM + MUM ) - Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * RRS ) / Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,PN ) ) - ( PN * DDR ) )", "choosing": "( ( ( MUC * RRSe ) / MUC ) * Min( Min( MUC ,MLU ) ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS - ( FirstVNF_RAM + FirstVNF_Mem ) ) * ( ARS / MDR ) ) ,( ARS + Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Min( ( MUC + MLU ) ,( CS + RCSe ) ) * ( ( MLU * MUR ) - ( MUM - MUC ) ) ),Max( ( Max( RRSe,RCSe ) / ( RMSe - CS ) ),( ( MUM + MUM ) - Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_Mem ) / Max( ACS,FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe + ( ( ( MUM - ( CS + MUC ) ) * ( RCSe - ( Max( Max( RMSe,DS ),RMSe ) + ( ( RCSe + RCSe ) + ( MUR + MUM ) ) ) ) ) + Min( RRSe ,DS ) ) ) - ( RRSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ARS + Const ) ,FirstVNF_RAM_Server ) * BR ) - ( ( ( Min( FirstVNF_RAM_Server ,DDR ) / Min( MDR ,Max( ( ( BR / RRS ) / Min( DDR ,MDR ) ),BR ) ) ) / Max( ACS,FirstVNF_RAM_Server ) ) / PN ) )", "choosing": "( ( MUR - MUM ) * ( ( MUM - ( ( RCSe - ( RRSe - ( MUC + ( MUC * MUM ) ) ) ) + MUR ) ) * ( RCSe - ( Max( Max( RMSe,DS ),Min( RRSe ,Min( ( MLU + RMSe ) ,MUR ) ) ) + ( ( RCSe + RCSe ) + MUC ) ) ) ) )", "obj1": 0.9881889763779528, "obj2": 0.0057332502913398425}, {"determining": "( ( PN - FirstVNF_Mem ) - ( FirstVNF_CPU_Server - PN ) )", "choosing": "( ( RRSe + ( ( ( MUM - ( CS + MUC ) ) * ( RCSe - ( Max( Max( RMSe,DS ),RMSe ) + ( ( RCSe + RCSe ) + MUC ) ) ) ) + Min( RRSe ,DS ) ) ) - ( RRSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * CRS ) - ( AMS * Const ) )", "choosing": "Min( ( ( RRSe + Min( MLU ,MLU ) ) - ( MLU + RCSe ) ) ,( Max( MUM,RRSe ) - ( RCSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( DDR + MDR ) )", "choosing": "( ( Min( DS ,MUR ) * MUM ) + Min( ( MUR / RCSe ) ,Max( MUC,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,RRS ) - ( DDR + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( MLU + RCSe ) ) ,( Max( MUM,RRSe ) - ( ( CS - ( ( RMSe + DS ) - Min( ( MUC + ( RRSe / CS ) ) ,RMSe ) ) ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,RRS ) - ( DDR + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( MLU + RCSe ) ) ,( Max( MUM,RRSe ) - ( ( CS - ( ( RMSe + DS ) - Min( ( MUC + ( RRSe / CS ) ) ,RMSe ) ) ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,RRS ) - ( DDR + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( MLU + RCSe ) ) ,( Max( MUM,RRSe ) - ( ( CS - ( ( RMSe + DS ) - Min( ( MUC + ( RRSe / CS ) ) ,RMSe ) ) ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,RRS ) - ( DDR + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( MLU + RCSe ) ) ,( Max( MUM,RRSe ) - ( ( CS - ( ( RMSe + DS ) - Min( ( MUC + ( RRSe / CS ) ) ,RMSe ) ) ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( ( FirstVNF_RAM + RRS ) * Max( ACS,FirstVNF_RAM_Server ) ),Min( ( ACS * FirstVNF_RAM ) ,Min( AMS ,ACS ) ) ) + Const ) - ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( MUC / ( CS - DS ) ) / Min( MUR ,RMSe ) )", "obj1": 0.8405511811023622, "obj2": 0.0948391695540098}, {"determining": "( ( CRS + Const ) - ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe / RMSe ) / Min( MUR ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) * ( DDR + FirstVNF_RAM_Server ) )", "choosing": "Max( Max( RMSe,DS ),( ( Min( RCSe ,MUC ) / Min( RMSe ,MLU ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / AMS ) * ( FirstVNF_CPU_Server - RRS ) ) ,( Max( FirstVNF_RAM_Server,Const ) - ( Const * PN ) ) ) - Max( Max( ( FirstVNF_RAM_Server - FirstVNF_RAM ),( MDR / FirstVNF_RAM_Server ) ),( ( BR / MDR ) / ( CRS - AMS ) ) ) )", "choosing": "Max( ( MUM - RCSe ),( RRSe / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS - ( FirstVNF_RAM + FirstVNF_Mem ) ) * ( ARS / MDR ) ) ,( ARS + Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,( ( CS * RCSe ) - ( MUC / DS ) ) ) * Min( Min( MUC ,MLU ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( PN / DDR ) ,ARS ) + ( Min( FirstVNF_RAM_Server ,ARS ) - Max( MDR,ARS ) ) ) * Min( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),( DDR - ARS ) ) ,( Min( MRS ,BR ) - Min( FirstVNF_CPU ,RRS ) ) ) )", "choosing": "Min( ( ( ( MUC / CS ) - Max( MUC,MLU ) ) + ( ( MUM * MUM ) - ( MUR / MUR ) ) ) ,Max( Min( Max( ( MUR * DS ),Max( MUR,MUM ) ) ,( DS - MLU ) ),Max( MLU,MUC ) ) )", "obj1": 0.9212598425196851, "obj2": 0.0367744865104077}], "3": [{"determining": "( Max( ARS,FirstVNF_Mem ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) )", "choosing": "( Min( DS ,RCSe ) - ( MUR / MUR ) )", "obj1": 0.33267716535433073, "obj2": 0.46572266372729365}, {"determining": "( Min( BR ,MRS ) * ( PN - FirstVNF_RAM_Server ) )", "choosing": "Max( ( RMSe * ( MLU / ( RMSe / DS ) ) ),( RRSe / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,Max( ( RRS - ( ( DDR + PN ) - CRS ) ),( DDR + ( MDR * FirstVNF_CPU_Server ) ) ) ) - ( FirstVNF_Mem - BR ) )", "choosing": "Max( Min( RCSe ,( MUC + RCSe ) ),Max( MLU,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + Const ) - ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe / RMSe ) / Min( MUR ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN + MDR ) - AMS ) - ( FirstVNF_CPU_Server - PN ) )", "choosing": "( Min( RCSe ,MLU ) * ( MUR + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ACS ) ,( DDR + PN ) )", "choosing": "( ( MUR - CS ) / ( RRSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU ) * ( MDR / MDR ) )", "choosing": "( Min( CS ,RRSe ) * Min( CS ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_RAM ) - Max( ( ARS * BR ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( MUR / Max( RRSe,( RMSe + MLU ) ) ),( DS / ( CS * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,RRS ) - ( DDR + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( MLU + RCSe ) ) ,( Max( MUM,RRSe ) - ( ( CS - ( ( RMSe + DS ) - Min( ( MUC + ( RRSe / CS ) ) ,RMSe ) ) ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * RRS ) / Min( Const ,ARS ) ) - ( PN * DDR ) )", "choosing": "Max( ( Min( ( MUC + MLU ) ,( CS + RCSe ) ) * ( ( MLU * MUR ) - ( MUM - MUC ) ) ),Max( ( Max( RRSe,RCSe ) / ( RMSe - CS ) ),( ( MUM + MUM ) - Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ( MRS - AMS ) ) - ( ( ( ACS / CRS ) + Max( RRS,ARS ) ) / Max( ( FirstVNF_CPU - PN ),( FirstVNF_RAM_Server / AMS ) ) ) )", "choosing": "( Max( Max( Min( MUR ,RMSe ),( MUR / MUM ) ),( ( CS * RRSe ) + ( MUC + DS ) ) ) + ( Min( ( RMSe - RRSe ) ,( RRSe + MUM ) ) + Min( ( RCSe * RCSe ) ,( ( RCSe * MLU ) / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS - PN ) - ( AMS / FirstVNF_CPU_Server ) ) * ( PN / MDR ) ) + ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) / FirstVNF_CPU ) )", "choosing": "Max( ( Min( MUM ,MUR ) * RMSe ),Max( ( RRSe / ( MUR - RCSe ) ),( ( MUM - MUM ) - Min( MUC ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) + ( ( FirstVNF_Mem_Server + ARS ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( ( RRSe + MUM ) / ( MLU / Max( CS,MUM ) ) ) ) * ( Max( ( MLU + MUC ),( RCSe - RCSe ) ) + ( Max( MLU,CS ) + ( MUM / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( MRS,ACS ),Max( CRS,( MRS / Const ) ) ) * ( ( Const - DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) + ( ( ( Const * FirstVNF_CPU ) - ( Const * FirstVNF_Mem ) ) - Min( ( BR / RRS ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( DS / MLU ) - RCSe ) + Min( MUM ,( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS - ( FirstVNF_RAM + FirstVNF_Mem ) ) * ( ARS / MDR ) ) ,( ARS + Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,( ( CS * RCSe ) - ( MUC / DS ) ) ) * Min( Min( MUC ,MLU ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( BR,MRS ) - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( BR ,RRS ) ) ) ,( Max( Max( RRS,Const ),Max( ARS,MDR ) ) / Min( Min( FirstVNF_Mem_Server ,MRS ) ,( MRS + CRS ) ) ) )", "choosing": "( Max( Max( ( CS / RMSe ),MUM ),( MUR + DS ) ) - Max( RMSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / AMS ) * ( FirstVNF_CPU_Server - RRS ) ) ,( Max( FirstVNF_RAM_Server,Const ) - ( Const * PN ) ) ) - Max( Max( ( FirstVNF_RAM_Server - FirstVNF_RAM ),( MDR / FirstVNF_RAM_Server ) ),( ( BR / MDR ) / ( CRS - AMS ) ) ) )", "choosing": "Max( Max( RMSe,DS ),( ( Min( RCSe ,MUC ) / Min( RMSe ,MLU ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,( FirstVNF_RAM / ACS ) ) * FirstVNF_RAM ) * ( RRS - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - RCSe ) + ( ( ( RRSe - CS ) + MLU ) - Max( RCSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ( FirstVNF_Mem_Server - ( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) ) ) / ( ( ARS / FirstVNF_Mem ) - MDR ) )", "choosing": "Min( ( ( ( RMSe * MUM ) + ( MUR * MUR ) ) + ( ( RRSe / RRSe ) * Min( MUC ,MUR ) ) ) ,Max( ( Max( MLU,DS ) + ( MUC - Min( ( MUR * Max( CS,( RMSe + MUC ) ) ) ,MUM ) ) ),( ( RCSe / RCSe ) + Min( RRSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * ARS ) / ( ( ( ( ARS / ( ( PN - FirstVNF_Mem_Server ) / FirstVNF_CPU ) ) - ACS ) * Max( FirstVNF_CPU,PN ) ) * ( Max( ( FirstVNF_Mem / RRS ),AMS ) / PN ) ) )", "choosing": "Min( ( ( ( MUC + MUR ) + Min( RCSe ,MLU ) ) - RMSe ) ,Min( ( RMSe + RMSe ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS + Const ) - ( Const + FirstVNF_Mem_Server ) ) + BR ) + ( RRS * FirstVNF_CPU ) )", "choosing": "Min( ( RRSe - MUC ) ,( ( ( RRSe / RMSe ) / Min( MUR ,RMSe ) ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - Min( ACS ,( ( FirstVNF_Mem * FirstVNF_Mem ) + BR ) ) ) - Min( CRS ,Const ) )", "choosing": "Min( ( MUR + ( ( RRSe + ( RCSe - RCSe ) ) + Min( DS ,RRSe ) ) ) ,( RCSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( FirstVNF_CPU,ACS ),( FirstVNF_CPU * ARS ) ) * ( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,PN ) - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( MUC * RMSe ) ,Max( ( DS / MUM ),DS ) ) + Min( MUM ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,PN ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( ( RRSe + MUM ) / ( MLU / MLU ) ) ) * ( Max( ( MLU + MUC ),( RCSe - MLU ) ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( ACS ,Max( Const,DDR ) ),ACS ) + ( ARS * FirstVNF_CPU ) ) * ( MDR - FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUC * RMSe ) ,Max( RMSe,CS ) ) + Min( Max( Min( Max( Min( Min( ( RCSe - MUM ) ,CS ) ,DS ),CS ) ,RRSe ),( ( MLU + RMSe ) * RRSe ) ) ,( RCSe / ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( ACS ,Max( Const,DDR ) ),ACS ) + ( ARS * FirstVNF_CPU ) ) * ( MDR - FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUC * RMSe ) ,Max( RMSe,CS ) ) + Min( Max( Min( Max( Min( Min( ( RCSe - MUM ) ,CS ) ,DS ),CS ) ,RRSe ),( ( MLU + RMSe ) * RRSe ) ) ,( RCSe / ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( ACS ,Max( Const,DDR ) ),ACS ) + ( ARS * FirstVNF_CPU ) ) * ( MDR - FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUC * RMSe ) ,Max( RMSe,CS ) ) + Min( Max( Min( Max( Min( Min( ( RCSe - MUM ) ,CS ) ,DS ),CS ) ,RRSe ),( ( MLU + RMSe ) * RRSe ) ) ,( RCSe / ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( FirstVNF_Mem,ACS ),( ARS * FirstVNF_CPU ) ) * ( MDR - FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUC * RMSe ) ,Max( RMSe,CS ) ) + Min( ( MUM - CS ) ,( RCSe / ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( BR - ( FirstVNF_CPU_Server - PN ) )", "choosing": "( ( MUR + MUM ) * MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - ( FirstVNF_CPU + Max( FirstVNF_Mem_Server,MDR ) ) ) - ( FirstVNF_CPU_Server - PN ) )", "choosing": "( ( MUR + MUM ) * ( ( ( DS / MUR ) - CS ) - ( RRSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / FirstVNF_CPU ) - Max( PN,RRS ) ) - Max( ( FirstVNF_RAM * Min( ( Min( MDR ,Max( CRS,RRS ) ) * MRS ) ,MRS ) ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( MUR / Max( DS,MLU ) ),( DS / Min( RCSe ,Min( ( MUR * MUR ) ,( ( MLU / ( ( RCSe + CS ) * ( RMSe / MUC ) ) ) / DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Const - MDR ) / FirstVNF_Mem ) - Max( PN,RRS ) ) - Max( ( FirstVNF_RAM * BR ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RRSe / ( RCSe * CS ) ),( MUR / Max( Max( MUR,DS ),MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,( BR / FirstVNF_Mem_Server ) ) * AMS ) * ( RRS - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - RCSe ) + ( ( ( Max( DS,RCSe ) - CS ) + MLU ) - Max( RCSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS + FirstVNF_Mem_Server ) / Min( Const ,FirstVNF_Mem ) ) - ( PN * DDR ) )", "choosing": "Max( ( Min( ( MUC + MLU ) ,( CS + RCSe ) ) * ( ( MLU * MUR ) - ( MUM - MUC ) ) ),Max( ( CS + MUM ),( Max( RRSe,RCSe ) / ( RMSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR + ( ( ( Const * FirstVNF_Mem ) - ( Const * FirstVNF_CPU ) ) - ( FirstVNF_CPU * Max( ( ACS / ARS ),Max( RRS,FirstVNF_Mem ) ) ) ) )", "choosing": "( ( DS + Max( CS,MUR ) ) + ( ( CS + MLU ) / ( ( ( RCSe - RCSe ) - RMSe ) - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( MRS,ACS ),Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( Const + DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) + ( ( ( Const * FirstVNF_CPU ) - ( Const * FirstVNF_Mem ) ) - Min( ( BR / RRS ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( Min( RRSe ,MUM ) + ( MUM / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - MDR ) / Min( ARS ,( ( CRS / MRS ) * FirstVNF_CPU ) ) )", "choosing": "( Min( Max( Max( RRSe,RMSe ),Max( MUR,MUM ) ) ,( ( RRSe - RMSe ) * Max( CS,RRSe ) ) ) / ( MUM * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * ( Min( AMS ,Min( Max( MRS,Max( MDR,FirstVNF_CPU ) ) ,Min( MDR ,CRS ) ) ) * ( DDR - CRS ) ) ) - ( DDR + MDR ) )", "choosing": "Min( ( ( MLU + MUM ) - ( MLU + RCSe ) ) ,Max( MUM,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( DDR + MDR ) )", "choosing": "( Min( MUR ,RRSe ) * ( MLU + ( ( MUC * RMSe ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,Min( AMS ,RRS ) ) - MDR )", "choosing": "Max( ( ( ( MUC / CS ) / ( RMSe * ( ( DS / ( RMSe * ( MLU + MLU ) ) ) * RCSe ) ) ) / Max( Max( RCSe,RMSe ),( MUR - DS ) ) ),( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,CRS ) - ( FirstVNF_Mem - BR ) )", "choosing": "Min( Min( ( ( RRSe / RMSe ) * Min( MLU ,RCSe ) ) ,( Max( RMSe,RCSe ) + ( MUR * RRSe ) ) ) ,( ( ( MUC / CS ) / ( MUC * RRSe ) ) / Max( Max( RCSe,RMSe ),( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / AMS ) * ( FirstVNF_CPU_Server - RRS ) ) ,( Max( FirstVNF_RAM_Server,Const ) - ( Const * PN ) ) ) - Max( Max( ( FirstVNF_RAM_Server - FirstVNF_RAM ),( FirstVNF_Mem_Server + FirstVNF_CPU ) ),( ( BR / MDR ) / ( CRS - AMS ) ) ) )", "choosing": "Max( Max( RMSe,DS ),( ( Max( MUR,DS ) / Min( RMSe ,MLU ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / AMS ) * ( FirstVNF_CPU_Server - RRS ) ) ,( Max( FirstVNF_RAM_Server,Const ) - ( Const * Const ) ) ) - Max( Max( ( FirstVNF_RAM_Server - FirstVNF_RAM ),( MDR / FirstVNF_RAM_Server ) ),( ARS / MDR ) ) )", "choosing": "Max( Max( RMSe,( MUM + CS ) ),( ( Min( RCSe ,MUC ) / Min( RMSe ,MLU ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - MDR ) / ( ( ( CRS / MRS ) * FirstVNF_CPU ) / ( DDR * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( Max( RRSe,RMSe ),Max( MUR,MUM ) ) ,( ( RRSe - RMSe ) * ( CS * RRSe ) ) ) / ( ( Max( RRSe,MUM ) + MUM ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * RRS ) / Min( Const ,ARS ) ) - ( PN * FirstVNF_RAM_Server ) )", "choosing": "Max( ( Min( ( MUC + MLU ) ,( CS + RCSe ) ) * ( ( MLU * MUR ) - ( MUM - MUC ) ) ),Max( ( Max( RRSe,RCSe ) / ( RMSe - CS ) ),( Max( DS,MUC ) - Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * RRS ) / Min( Const ,ARS ) ) - ( PN * ( CRS + FirstVNF_RAM ) ) )", "choosing": "Max( ( Min( ( MUC + MLU ) ,( MUR / Min( MUM ,MLU ) ) ) * ( ( MLU * MUR ) - ( MUM - MLU ) ) ),Max( ( Max( RRSe,RCSe ) / ( RMSe - CS ) ),( ( MUM + MUM ) - Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( BR * FirstVNF_CPU ) + ( MDR * PN ) ),MRS ) ,( ARS - ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) )", "choosing": "( ( DS - ( ( RMSe / MLU ) * DS ) ) + ( MUM + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server + ACS ) )", "choosing": "( MLU / ( RRSe / ( RCSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + Const ) - ( Const + FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( DS / MLU ) / ( MLU - RRSe ) ) + ( ( RCSe * MUC ) / ( CS + CS ) ) ) ,( ( ( MLU / RMSe ) / ( DS / MUC ) ) + Max( ( MUM + DS ),( MUC + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,DDR ) * FirstVNF_CPU_Server ) - Min( ( Max( ACS,( RRS + RRS ) ) * ( Const + ( RRS + Const ) ) ) ,AMS ) ) ,Min( FirstVNF_Mem_Server ,DDR ) )", "choosing": "( ( ( ( MLU / RCSe ) / ( DS - MUM ) ) * ( Max( DS,RMSe ) + Max( ( DS + RMSe ),( MUR - RCSe ) ) ) ) - ( Max( Max( RRSe,MUR ),Min( DS ,MLU ) ) * Min( ( MUR + MUM ) ,Min( MUR ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,CRS ) - ( FirstVNF_Mem - BR ) )", "choosing": "( Min( Max( Max( RRSe,RMSe ),Max( MUR,MUM ) ) ,( ( RRSe - RMSe ) * Max( CS,RRSe ) ) ) / ( MUM * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - MDR ) / Min( ARS ,( ( CRS / MRS ) * FirstVNF_CPU ) ) )", "choosing": "Max( Min( RCSe ,MLU ),( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - ( ( ACS / FirstVNF_CPU_Server ) / ( RRS / FirstVNF_CPU_Server ) ) ) - Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM_Server ,ARS ) ) )", "choosing": "( Max( RMSe,( Min( RRSe ,MUC ) + ( MUC + DS ) ) ) + ( Min( ( RMSe - RRSe ) ,( RRSe + MUM ) ) + Min( ( RCSe * RCSe ) ,( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( ( ACS / FirstVNF_CPU_Server ) / ( RRS / FirstVNF_CPU_Server ) ) ) - ( ( ( ACS / CRS ) + Max( RRS,ARS ) ) / ( ( FirstVNF_CPU - PN ) / ( FirstVNF_RAM_Server / AMS ) ) ) )", "choosing": "( Max( Max( Max( RCSe,RMSe ),( MUR / MUM ) ),( ( RRSe * CS ) + ( MUC + DS ) ) ) + ( MUM / ( Max( RMSe,( ( ( RMSe * MUR ) * ( RMSe * ( CS + DS ) ) ) + MLU ) ) - ( RRSe - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * RRS ) / Min( Const ,ARS ) ) - ( ( FirstVNF_RAM + ( DDR + ACS ) ) + Min( FirstVNF_CPU_Server ,CRS ) ) )", "choosing": "Max( ( MUC / MUR ),Max( ( Max( RRSe,RCSe ) / ( RMSe - CS ) ),( ( MUM + MUM ) - Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * RRS ) / Min( Max( ( PN - ( PN * ( MDR - FirstVNF_CPU_Server ) ) ),BR ) ,ARS ) ) - ( PN * DDR ) )", "choosing": "Max( Min( MUR ,Min( MLU ,MUR ) ),Min( RRSe ,( RCSe * Max( MUC,Max( MLU,RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,( ( FirstVNF_CPU + MRS ) * MDR ) ) / MDR ) * ( MDR - MDR ) )", "choosing": "( ( RRSe * Min( Min( ( Min( ( ( DS / RCSe ) * MUC ) ,Max( ( MUM - RCSe ),( RCSe / DS ) ) ) + MUC ) ,MUM ) ,MUC ) ) + Min( ( MUM - CS ) ,( RCSe / ( DS - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( ( DDR / Max( FirstVNF_CPU_Server,Min( ( MRS - BR ) ,PN ) ) ) * ARS ) ) * Min( ( FirstVNF_Mem * ( ACS + FirstVNF_Mem_Server ) ) ,FirstVNF_CPU ) )", "choosing": "( Min( ( RCSe * ( ( RMSe / ( ( DS + ( CS + RMSe ) ) - Min( MLU ,( DS * RRSe ) ) ) ) - MUC ) ) ,Max( RMSe,CS ) ) + ( ( ( Max( RCSe,( MUC / Max( ( CS - CS ),MLU ) ) ) * ( ( Max( ( RMSe / MUR ),CS ) + RMSe ) + ( ( MUC * DS ) / CS ) ) ) / ( Min( ( Min( RMSe ,Max( MUC,MUC ) ) * DS ) ,( CS + DS ) ) + ( MUR - CS ) ) ) * Max( CS,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU ) * ( MDR / MDR ) )", "choosing": "( Min( CS ,RRSe ) * Min( CS ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - ( CRS - Min( DDR ,FirstVNF_Mem ) ) ) - ( Max( MRS,( ACS * FirstVNF_CPU ) ) / FirstVNF_CPU_Server ) ) * AMS ) + ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) / FirstVNF_CPU ) )", "choosing": "Max( ( MLU / CS ),Max( ( RRSe / ( MUR / RCSe ) ),( ( MUM - MUM ) - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN - AMS ) - ( AMS / FirstVNF_CPU_Server ) ) * AMS ) + ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) / FirstVNF_CPU ) )", "choosing": "Max( ( MUR * RMSe ),Max( ( RRSe / ( MUR / RCSe ) ),( ( MUM - MUM ) - Min( RCSe ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( FirstVNF_CPU * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) * RRS ) / Min( Const ,ARS ) ) - ( PN * DDR ) )", "choosing": "Max( ( Min( ( MUC + MLU ) ,( CS + RCSe ) ) * ( ( MLU * MUR ) - ( MUM - MUC ) ) ),Max( ( Max( RRSe,RCSe ) / ( RMSe - CS ) ),( ( MUM + MUM ) - Min( RMSe ,( ( Min( MUM ,DS ) * RCSe ) + ( ( MUR * DS ) / DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( CRS + DDR ) ,MDR ) * RRS ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - ( DDR * PN ) )", "choosing": "Max( ( Min( ( MLU + MUC ) ,( CS + RCSe ) ) * ( ( MLU * MUR ) - ( MUM - MUC ) ) ),Max( ( Max( CS,RCSe ) / ( RMSe - CS ) ),( ( MUM + MUM ) - Min( Max( Max( MUM,( DS - ( CS * MUM ) ) ),RCSe ) ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( ARS / FirstVNF_RAM ) ) - ( ( ACS / FirstVNF_CPU_Server ) / ( RRS / FirstVNF_CPU_Server ) ) ) - ( ( ( ACS / CRS ) + Max( RRS,ARS ) ) / ( ( FirstVNF_CPU - PN ) / ( FirstVNF_RAM_Server / AMS ) ) ) )", "choosing": "( Max( Max( Min( RCSe ,RMSe ),( MUR / MUM ) ),( ( RRSe * CS ) + ( ( RCSe * DS ) + DS ) ) ) + ( Min( ( RMSe - RRSe ) ,( RRSe + MUM ) ) + Min( ( RCSe * RCSe ) ,( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - ( ( ACS / FirstVNF_CPU_Server ) / ( RRS / FirstVNF_CPU_Server ) ) ) - ( ( ( ACS / CRS ) + Max( RRS,ARS ) ) / ( ( FirstVNF_CPU - PN ) / ( FirstVNF_RAM_Server / AMS ) ) ) )", "choosing": "( Max( Max( Min( RCSe ,RMSe ),( MUR / MUM ) ),( ( RRSe * CS ) + ( MUC + DS ) ) ) + ( Min( ( RMSe - RRSe ) ,( RRSe + MUM ) ) + Min( ( RCSe * RCSe ) ,( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,Const ) - ( FirstVNF_CPU_Server - PN ) )", "choosing": "( ( MUR + MUM ) * Max( DS,Max( ( MUM / DS ),Max( MLU,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * ( ACS - FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server - PN ) )", "choosing": "( ( Max( CS,DS ) / Max( RCSe,CS ) ) - Max( ( MLU - MUM ),( RMSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * ( FirstVNF_RAM + CRS ) ) / Min( Const ,ARS ) ) - ( PN * DDR ) )", "choosing": "Max( ( Min( ( MUC + MLU ) ,( CS + RCSe ) ) * ( ( MLU * MUR ) - ( MUM - MUC ) ) ),Max( ( Max( RRSe,RCSe ) / ( RMSe - CS ) ),( ( ( ( ( RRSe * CS ) * ( MUR - RRSe ) ) * ( ( MUM / MUC ) / ( MUR / MUC ) ) ) + MUM ) - Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * RRS ) / Min( Const ,ARS ) ) - ( PN * DDR ) )", "choosing": "( ( ( RRSe * CS ) * ( MUR - RRSe ) ) * ( ( MUM / MUC ) / ( MUR / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS - ( MDR + FirstVNF_Mem ) ) * ( ARS / MDR ) ) ,( ARS + Min( PN ,( ( ( CRS * RRS ) / Min( Const ,ARS ) ) - ( PN * Min( Min( CRS ,RRS ) ,DDR ) ) ) ) ) )", "choosing": "( Max( RRSe,( ( CS * RCSe ) - ( MUC / DS ) ) ) * ( MUR + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS * CRS ) - ( ( MRS - AMS ) - ( FirstVNF_RAM + FirstVNF_Mem ) ) ) - ( PN * DDR ) )", "choosing": "Max( ( Max( ( CS + ( MLU / ( ( RCSe - MUR ) - ( Max( RCSe,MUR ) + RMSe ) ) ) ),( MUC + MLU ) ) * ( ( MLU * MUR ) - ( MUM - MUC ) ) ),Max( ( CS * RCSe ),( ( MUM + MUM ) - Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * RRS ) / Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,PN ) ) - ( PN * DDR ) )", "choosing": "( ( ( MUC * RRSe ) / MUC ) * Min( Min( MUC ,MLU ) ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS - ( FirstVNF_RAM + FirstVNF_Mem ) ) * ( ARS / MDR ) ) ,( ARS + Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Min( ( MUC + MLU ) ,( CS + RCSe ) ) * ( ( MLU * MUR ) - ( MUM - MUC ) ) ),Max( ( Max( RRSe,RCSe ) / ( RMSe - CS ) ),( ( MUM + MUM ) - Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_Mem ) / Max( ACS,FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe + ( ( ( MUM - ( CS + MUC ) ) * ( RCSe - ( Max( Max( RMSe,DS ),RMSe ) + ( ( RCSe + RCSe ) + ( MUR + MUM ) ) ) ) ) + Min( RRSe ,DS ) ) ) - ( RRSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_Mem ) - ( FirstVNF_CPU_Server - PN ) )", "choosing": "( ( RRSe + ( ( ( MUM - ( CS + MUC ) ) * ( RCSe - ( Max( Max( RMSe,DS ),RMSe ) + ( ( RCSe + RCSe ) + MUC ) ) ) ) + Min( RRSe ,DS ) ) ) - ( RRSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * CRS ) - ( AMS * Const ) )", "choosing": "Min( ( ( RRSe + Min( MLU ,MLU ) ) - ( MLU + RCSe ) ) ,( Max( MUM,RRSe ) - ( RCSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( DDR + MDR ) )", "choosing": "( ( Min( DS ,MUR ) * MUM ) + Min( ( MUR / RCSe ) ,Max( MUC,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,RRS ) - ( DDR + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( MLU + RCSe ) ) ,( Max( MUM,RRSe ) - ( ( CS - ( ( RMSe + DS ) - Min( ( MUC + ( RRSe / CS ) ) ,RMSe ) ) ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,RRS ) - ( DDR + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( MLU + RCSe ) ) ,( Max( MUM,RRSe ) - ( ( CS - ( ( RMSe + DS ) - Min( ( MUC + ( RRSe / CS ) ) ,RMSe ) ) ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,RRS ) - ( DDR + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( MLU + RCSe ) ) ,( Max( MUM,RRSe ) - ( ( CS - ( ( RMSe + DS ) - Min( ( MUC + ( RRSe / CS ) ) ,RMSe ) ) ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,RRS ) - ( DDR + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( MLU + RCSe ) ) ,( Max( MUM,RRSe ) - ( ( CS - ( ( RMSe + DS ) - Min( ( MUC + ( RRSe / CS ) ) ,RMSe ) ) ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + Const ) - ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe / RMSe ) / Min( MUR ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) * ( DDR + FirstVNF_RAM_Server ) )", "choosing": "Max( Max( RMSe,DS ),( ( Min( RCSe ,MUC ) / Min( RMSe ,MLU ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / AMS ) * ( FirstVNF_CPU_Server - RRS ) ) ,( Max( FirstVNF_RAM_Server,Const ) - ( Const * PN ) ) ) - Max( Max( ( FirstVNF_RAM_Server - FirstVNF_RAM ),( MDR / FirstVNF_RAM_Server ) ),( ( BR / MDR ) / ( CRS - AMS ) ) ) )", "choosing": "Max( ( MUM - RCSe ),( RRSe / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS - ( FirstVNF_RAM + FirstVNF_Mem ) ) * ( ARS / MDR ) ) ,( ARS + Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,( ( CS * RCSe ) - ( MUC / DS ) ) ) * Min( Min( MUC ,MLU ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server * FirstVNF_Mem ) ,( ARS - ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) )", "choosing": "( ( DS - RCSe ) + ( MUM + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ARS + Const ) ,FirstVNF_RAM_Server ) * BR ) - ( ( ( Min( FirstVNF_RAM_Server ,DDR ) / Min( MDR ,Max( ( ( BR / RRS ) / Min( DDR ,MDR ) ),BR ) ) ) / Max( ACS,FirstVNF_RAM_Server ) ) / PN ) )", "choosing": "( ( MUR - MUM ) * ( ( MUM - ( ( RCSe - ( RRSe - ( MUC + ( MUC * MUM ) ) ) ) + MUR ) ) * ( RCSe - ( Max( Max( RMSe,DS ),Min( RRSe ,Min( ( MLU + RMSe ) ,MUR ) ) ) + ( ( RCSe + RCSe ) + MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( BR * FirstVNF_CPU ) + ( MDR * PN ) ),MRS ) ,( ARS - ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) )", "choosing": "( ( DS - ( ( RMSe / MLU ) * DS ) ) + ( MUM + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ARS + Const ) ,FirstVNF_RAM_Server ) * BR ) - ( ( ( Min( FirstVNF_RAM_Server ,DDR ) / Min( MDR ,Max( ( ( BR / RRS ) / Min( DDR ,MDR ) ),BR ) ) ) / Max( ACS,FirstVNF_RAM_Server ) ) / PN ) )", "choosing": "( ( MUR - MUM ) * ( ( MUM - ( ( RCSe - ( RRSe - ( MUC + ( MUC * MUM ) ) ) ) + MUR ) ) * ( RCSe - ( Max( Max( RMSe,DS ),Min( RRSe ,Min( ( MLU + RMSe ) ,MUR ) ) ) + ( ( RCSe + RCSe ) + MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( BR * FirstVNF_CPU ) + ( MDR * PN ) ),MRS ) ,( ARS - ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) )", "choosing": "( ( DS - ( ( RMSe / MLU ) * DS ) ) + ( MUM + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ARS + Const ) ,FirstVNF_RAM_Server ) * BR ) - ( ( ( Min( FirstVNF_RAM_Server ,DDR ) / Min( MDR ,Max( ( ( BR / RRS ) / Min( DDR ,MDR ) ),BR ) ) ) / Max( ACS,FirstVNF_RAM_Server ) ) / PN ) )", "choosing": "( ( MUR - MUM ) * ( ( MUM - ( ( RCSe - ( RRSe - ( MUC + ( MUC * MUM ) ) ) ) + MUR ) ) * ( RCSe - ( Max( Max( RMSe,DS ),Min( RRSe ,Min( ( MLU + RMSe ) ,MUR ) ) ) + ( ( RCSe + RCSe ) + MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( BR * FirstVNF_CPU ) + ( MDR * PN ) ),MRS ) ,( ARS - ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) )", "choosing": "( ( DS - ( ( RMSe / MLU ) * DS ) ) + ( MUM + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS + Const ) - FirstVNF_RAM_Server ) * BR ) - ( ( ( Min( FirstVNF_RAM_Server ,DDR ) / Min( MDR ,Max( CRS,BR ) ) ) / Max( ACS,FirstVNF_RAM_Server ) ) / PN ) )", "choosing": "( ( MUR + MUM ) * ( ( MUM - ( ( RCSe - ( RRSe - ( MUC + DS ) ) ) + MUM ) ) * ( RCSe - ( Max( Max( RMSe,DS ),RMSe ) + ( ( RCSe + RCSe ) + MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( BR * FirstVNF_CPU ) + ( MDR * PN ) ),MRS ) ,( ARS - ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) )", "choosing": "( ( DS - ( ( RMSe / MLU ) * DS ) ) + ( MUM + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( MRS,ACS ),Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( Const + DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) + ( ( ( Const * FirstVNF_CPU ) - ( Const * FirstVNF_Mem ) ) - Min( ( BR / RRS ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( Min( RRSe ,MUM ) + ( MUM / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( PN,MRS ) ,( ARS - ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) )", "choosing": "( ( DS - ( ( RMSe / MLU ) * DS ) ) + ( ( ( MUC / CS ) - Max( MUC,MLU ) ) + ( ( MUM * MUM ) - ( MUR / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( BR * FirstVNF_CPU ) + ( MDR * PN ) ),MRS ) ,( ARS - ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) )", "choosing": "( ( DS - ( ( RMSe / MLU ) * DS ) ) + ( MUM + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * RRS ) / ( ACS - ( FirstVNF_RAM + FirstVNF_Mem ) ) ) - ( PN * DDR ) )", "choosing": "Max( ( Min( ( MUC + MLU ) ,( CS + RCSe ) ) * ( ( MLU * MUR ) - ( MUM - MUC ) ) ),Max( ( CS * RCSe ),( ( MUM + MUM ) - Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS - ( FirstVNF_RAM + FirstVNF_Mem ) ) * ( ARS / MDR ) ) ,( ARS + Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,( ( CS * RCSe ) - ( MUC / DS ) ) ) * Min( Min( MUC ,MLU ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * RRS ) / Min( Const ,ARS ) ) - ( PN * DDR ) )", "choosing": "Max( ( Min( ( MUC + MLU ) ,( CS + RCSe ) ) * ( ( MLU * MUR ) - ( MUM - MUC ) ) ),Max( ( Max( RRSe,RCSe ) / ( RMSe - CS ) ),( ( MUM + MUM ) - Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( Max( ARS,FirstVNF_Mem ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) )", "choosing": "( Min( DS ,RCSe ) - ( MUR / MUR ) )", "obj1": 0.33267716535433073, "obj2": 0.46572266372729365}, {"determining": "( Min( BR ,MRS ) * ( PN - FirstVNF_RAM_Server ) )", "choosing": "Max( ( RMSe * ( MLU / ( RMSe / DS ) ) ),( RRSe / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,Max( ( RRS - ( ( DDR + PN ) - CRS ) ),( DDR + ( MDR * FirstVNF_CPU_Server ) ) ) ) - ( FirstVNF_Mem - BR ) )", "choosing": "Max( Min( RCSe ,( MUC + RCSe ) ),Max( MLU,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + Const ) - ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe / RMSe ) / Min( MUR ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN + MDR ) - AMS ) - ( FirstVNF_CPU_Server - PN ) )", "choosing": "( Min( RCSe ,MLU ) * ( MUR + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ACS ) ,( DDR + PN ) )", "choosing": "( ( MUR - CS ) / ( RRSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU ) * ( MDR / MDR ) )", "choosing": "( Min( CS ,RRSe ) * Min( CS ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_RAM ) - Max( ( ARS * BR ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( MUR / Max( RRSe,( RMSe + MLU ) ) ),( DS / ( CS * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,RRS ) - ( DDR + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( MLU + RCSe ) ) ,( Max( MUM,RRSe ) - ( ( CS - ( ( RMSe + DS ) - Min( ( MUC + ( RRSe / CS ) ) ,RMSe ) ) ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * RRS ) / Min( Const ,ARS ) ) - ( PN * DDR ) )", "choosing": "Max( ( Min( ( MUC + MLU ) ,( CS + RCSe ) ) * ( ( MLU * MUR ) - ( MUM - MUC ) ) ),Max( ( Max( RRSe,RCSe ) / ( RMSe - CS ) ),( ( MUM + MUM ) - Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ( MRS - AMS ) ) - ( ( ( ACS / CRS ) + Max( RRS,ARS ) ) / Max( ( FirstVNF_CPU - PN ),( FirstVNF_RAM_Server / AMS ) ) ) )", "choosing": "( Max( Max( Min( MUR ,RMSe ),( MUR / MUM ) ),( ( CS * RRSe ) + ( MUC + DS ) ) ) + ( Min( ( RMSe - RRSe ) ,( RRSe + MUM ) ) + Min( ( RCSe * RCSe ) ,( ( RCSe * MLU ) / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS - PN ) - ( AMS / FirstVNF_CPU_Server ) ) * ( PN / MDR ) ) + ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) / FirstVNF_CPU ) )", "choosing": "Max( ( Min( MUM ,MUR ) * RMSe ),Max( ( RRSe / ( MUR - RCSe ) ),( ( MUM - MUM ) - Min( MUC ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) + ( ( FirstVNF_Mem_Server + ARS ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( ( RRSe + MUM ) / ( MLU / Max( CS,MUM ) ) ) ) * ( Max( ( MLU + MUC ),( RCSe - RCSe ) ) + ( Max( MLU,CS ) + ( MUM / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( MRS,ACS ),Max( CRS,( MRS / Const ) ) ) * ( ( Const - DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) + ( ( ( Const * FirstVNF_CPU ) - ( Const * FirstVNF_Mem ) ) - Min( ( BR / RRS ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( DS / MLU ) - RCSe ) + Min( MUM ,( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS - ( FirstVNF_RAM + FirstVNF_Mem ) ) * ( ARS / MDR ) ) ,( ARS + Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,( ( CS * RCSe ) - ( MUC / DS ) ) ) * Min( Min( MUC ,MLU ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( BR,MRS ) - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( BR ,RRS ) ) ) ,( Max( Max( RRS,Const ),Max( ARS,MDR ) ) / Min( Min( FirstVNF_Mem_Server ,MRS ) ,( MRS + CRS ) ) ) )", "choosing": "( Max( Max( ( CS / RMSe ),MUM ),( MUR + DS ) ) - Max( RMSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / AMS ) * ( FirstVNF_CPU_Server - RRS ) ) ,( Max( FirstVNF_RAM_Server,Const ) - ( Const * PN ) ) ) - Max( Max( ( FirstVNF_RAM_Server - FirstVNF_RAM ),( MDR / FirstVNF_RAM_Server ) ),( ( BR / MDR ) / ( CRS - AMS ) ) ) )", "choosing": "Max( Max( RMSe,DS ),( ( Min( RCSe ,MUC ) / Min( RMSe ,MLU ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,( FirstVNF_RAM / ACS ) ) * FirstVNF_RAM ) * ( RRS - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - RCSe ) + ( ( ( RRSe - CS ) + MLU ) - Max( RCSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ( FirstVNF_Mem_Server - ( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) ) ) / ( ( ARS / FirstVNF_Mem ) - MDR ) )", "choosing": "Min( ( ( ( RMSe * MUM ) + ( MUR * MUR ) ) + ( ( RRSe / RRSe ) * Min( MUC ,MUR ) ) ) ,Max( ( Max( MLU,DS ) + ( MUC - Min( ( MUR * Max( CS,( RMSe + MUC ) ) ) ,MUM ) ) ),( ( RCSe / RCSe ) + Min( RRSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * ARS ) / ( ( ( ( ARS / ( ( PN - FirstVNF_Mem_Server ) / FirstVNF_CPU ) ) - ACS ) * Max( FirstVNF_CPU,PN ) ) * ( Max( ( FirstVNF_Mem / RRS ),AMS ) / PN ) ) )", "choosing": "Min( ( ( ( MUC + MUR ) + Min( RCSe ,MLU ) ) - RMSe ) ,Min( ( RMSe + RMSe ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS + Const ) - ( Const + FirstVNF_Mem_Server ) ) + BR ) + ( RRS * FirstVNF_CPU ) )", "choosing": "Min( ( RRSe - MUC ) ,( ( ( RRSe / RMSe ) / Min( MUR ,RMSe ) ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - Min( ACS ,( ( FirstVNF_Mem * FirstVNF_Mem ) + BR ) ) ) - Min( CRS ,Const ) )", "choosing": "Min( ( MUR + ( ( RRSe + ( RCSe - RCSe ) ) + Min( DS ,RRSe ) ) ) ,( RCSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( FirstVNF_CPU,ACS ),( FirstVNF_CPU * ARS ) ) * ( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,PN ) - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( MUC * RMSe ) ,Max( ( DS / MUM ),DS ) ) + Min( MUM ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,PN ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( ( RRSe + MUM ) / ( MLU / MLU ) ) ) * ( Max( ( MLU + MUC ),( RCSe - MLU ) ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( ACS ,Max( Const,DDR ) ),ACS ) + ( ARS * FirstVNF_CPU ) ) * ( MDR - FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUC * RMSe ) ,Max( RMSe,CS ) ) + Min( Max( Min( Max( Min( Min( ( RCSe - MUM ) ,CS ) ,DS ),CS ) ,RRSe ),( ( MLU + RMSe ) * RRSe ) ) ,( RCSe / ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( ACS ,Max( Const,DDR ) ),ACS ) + ( ARS * FirstVNF_CPU ) ) * ( MDR - FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUC * RMSe ) ,Max( RMSe,CS ) ) + Min( Max( Min( Max( Min( Min( ( RCSe - MUM ) ,CS ) ,DS ),CS ) ,RRSe ),( ( MLU + RMSe ) * RRSe ) ) ,( RCSe / ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( ACS ,Max( Const,DDR ) ),ACS ) + ( ARS * FirstVNF_CPU ) ) * ( MDR - FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUC * RMSe ) ,Max( RMSe,CS ) ) + Min( Max( Min( Max( Min( Min( ( RCSe - MUM ) ,CS ) ,DS ),CS ) ,RRSe ),( ( MLU + RMSe ) * RRSe ) ) ,( RCSe / ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( FirstVNF_Mem,ACS ),( ARS * FirstVNF_CPU ) ) * ( MDR - FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUC * RMSe ) ,Max( RMSe,CS ) ) + Min( ( MUM - CS ) ,( RCSe / ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( BR - ( FirstVNF_CPU_Server - PN ) )", "choosing": "( ( MUR + MUM ) * MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - ( FirstVNF_CPU + Max( FirstVNF_Mem_Server,MDR ) ) ) - ( FirstVNF_CPU_Server - PN ) )", "choosing": "( ( MUR + MUM ) * ( ( ( DS / MUR ) - CS ) - ( RRSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / FirstVNF_CPU ) - Max( PN,RRS ) ) - Max( ( FirstVNF_RAM * Min( ( Min( MDR ,Max( CRS,RRS ) ) * MRS ) ,MRS ) ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( MUR / Max( DS,MLU ) ),( DS / Min( RCSe ,Min( ( MUR * MUR ) ,( ( MLU / ( ( RCSe + CS ) * ( RMSe / MUC ) ) ) / DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Const - MDR ) / FirstVNF_Mem ) - Max( PN,RRS ) ) - Max( ( FirstVNF_RAM * BR ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RRSe / ( RCSe * CS ) ),( MUR / Max( Max( MUR,DS ),MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,( BR / FirstVNF_Mem_Server ) ) * AMS ) * ( RRS - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - RCSe ) + ( ( ( Max( DS,RCSe ) - CS ) + MLU ) - Max( RCSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS + FirstVNF_Mem_Server ) / Min( Const ,FirstVNF_Mem ) ) - ( PN * DDR ) )", "choosing": "Max( ( Min( ( MUC + MLU ) ,( CS + RCSe ) ) * ( ( MLU * MUR ) - ( MUM - MUC ) ) ),Max( ( CS + MUM ),( Max( RRSe,RCSe ) / ( RMSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR + ( ( ( Const * FirstVNF_Mem ) - ( Const * FirstVNF_CPU ) ) - ( FirstVNF_CPU * Max( ( ACS / ARS ),Max( RRS,FirstVNF_Mem ) ) ) ) )", "choosing": "( ( DS + Max( CS,MUR ) ) + ( ( CS + MLU ) / ( ( ( RCSe - RCSe ) - RMSe ) - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( MRS,ACS ),Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( Const + DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) + ( ( ( Const * FirstVNF_CPU ) - ( Const * FirstVNF_Mem ) ) - Min( ( BR / RRS ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( Min( RRSe ,MUM ) + ( MUM / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - MDR ) / Min( ARS ,( ( CRS / MRS ) * FirstVNF_CPU ) ) )", "choosing": "( Min( Max( Max( RRSe,RMSe ),Max( MUR,MUM ) ) ,( ( RRSe - RMSe ) * Max( CS,RRSe ) ) ) / ( MUM * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * ( Min( AMS ,Min( Max( MRS,Max( MDR,FirstVNF_CPU ) ) ,Min( MDR ,CRS ) ) ) * ( DDR - CRS ) ) ) - ( DDR + MDR ) )", "choosing": "Min( ( ( MLU + MUM ) - ( MLU + RCSe ) ) ,Max( MUM,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( DDR + MDR ) )", "choosing": "( Min( MUR ,RRSe ) * ( MLU + ( ( MUC * RMSe ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,Min( AMS ,RRS ) ) - MDR )", "choosing": "Max( ( ( ( MUC / CS ) / ( RMSe * ( ( DS / ( RMSe * ( MLU + MLU ) ) ) * RCSe ) ) ) / Max( Max( RCSe,RMSe ),( MUR - DS ) ) ),( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,CRS ) - ( FirstVNF_Mem - BR ) )", "choosing": "Min( Min( ( ( RRSe / RMSe ) * Min( MLU ,RCSe ) ) ,( Max( RMSe,RCSe ) + ( MUR * RRSe ) ) ) ,( ( ( MUC / CS ) / ( MUC * RRSe ) ) / Max( Max( RCSe,RMSe ),( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / AMS ) * ( FirstVNF_CPU_Server - RRS ) ) ,( Max( FirstVNF_RAM_Server,Const ) - ( Const * PN ) ) ) - Max( Max( ( FirstVNF_RAM_Server - FirstVNF_RAM ),( FirstVNF_Mem_Server + FirstVNF_CPU ) ),( ( BR / MDR ) / ( CRS - AMS ) ) ) )", "choosing": "Max( Max( RMSe,DS ),( ( Max( MUR,DS ) / Min( RMSe ,MLU ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / AMS ) * ( FirstVNF_CPU_Server - RRS ) ) ,( Max( FirstVNF_RAM_Server,Const ) - ( Const * Const ) ) ) - Max( Max( ( FirstVNF_RAM_Server - FirstVNF_RAM ),( MDR / FirstVNF_RAM_Server ) ),( ARS / MDR ) ) )", "choosing": "Max( Max( RMSe,( MUM + CS ) ),( ( Min( RCSe ,MUC ) / Min( RMSe ,MLU ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - MDR ) / ( ( ( CRS / MRS ) * FirstVNF_CPU ) / ( DDR * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( Max( RRSe,RMSe ),Max( MUR,MUM ) ) ,( ( RRSe - RMSe ) * ( CS * RRSe ) ) ) / ( ( Max( RRSe,MUM ) + MUM ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * RRS ) / Min( Const ,ARS ) ) - ( PN * FirstVNF_RAM_Server ) )", "choosing": "Max( ( Min( ( MUC + MLU ) ,( CS + RCSe ) ) * ( ( MLU * MUR ) - ( MUM - MUC ) ) ),Max( ( Max( RRSe,RCSe ) / ( RMSe - CS ) ),( Max( DS,MUC ) - Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * RRS ) / Min( Const ,ARS ) ) - ( PN * ( CRS + FirstVNF_RAM ) ) )", "choosing": "Max( ( Min( ( MUC + MLU ) ,( MUR / Min( MUM ,MLU ) ) ) * ( ( MLU * MUR ) - ( MUM - MLU ) ) ),Max( ( Max( RRSe,RCSe ) / ( RMSe - CS ) ),( ( MUM + MUM ) - Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( BR * FirstVNF_CPU ) + ( MDR * PN ) ),MRS ) ,( ARS - ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) )", "choosing": "( ( DS - ( ( RMSe / MLU ) * DS ) ) + ( MUM + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server + ACS ) )", "choosing": "( MLU / ( RRSe / ( RCSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + Const ) - ( Const + FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( DS / MLU ) / ( MLU - RRSe ) ) + ( ( RCSe * MUC ) / ( CS + CS ) ) ) ,( ( ( MLU / RMSe ) / ( DS / MUC ) ) + Max( ( MUM + DS ),( MUC + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,DDR ) * FirstVNF_CPU_Server ) - Min( ( Max( ACS,( RRS + RRS ) ) * ( Const + ( RRS + Const ) ) ) ,AMS ) ) ,Min( FirstVNF_Mem_Server ,DDR ) )", "choosing": "( ( ( ( MLU / RCSe ) / ( DS - MUM ) ) * ( Max( DS,RMSe ) + Max( ( DS + RMSe ),( MUR - RCSe ) ) ) ) - ( Max( Max( RRSe,MUR ),Min( DS ,MLU ) ) * Min( ( MUR + MUM ) ,Min( MUR ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,CRS ) - ( FirstVNF_Mem - BR ) )", "choosing": "( Min( Max( Max( RRSe,RMSe ),Max( MUR,MUM ) ) ,( ( RRSe - RMSe ) * Max( CS,RRSe ) ) ) / ( MUM * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - MDR ) / Min( ARS ,( ( CRS / MRS ) * FirstVNF_CPU ) ) )", "choosing": "Max( Min( RCSe ,MLU ),( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - ( ( ACS / FirstVNF_CPU_Server ) / ( RRS / FirstVNF_CPU_Server ) ) ) - Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM_Server ,ARS ) ) )", "choosing": "( Max( RMSe,( Min( RRSe ,MUC ) + ( MUC + DS ) ) ) + ( Min( ( RMSe - RRSe ) ,( RRSe + MUM ) ) + Min( ( RCSe * RCSe ) ,( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( ( ACS / FirstVNF_CPU_Server ) / ( RRS / FirstVNF_CPU_Server ) ) ) - ( ( ( ACS / CRS ) + Max( RRS,ARS ) ) / ( ( FirstVNF_CPU - PN ) / ( FirstVNF_RAM_Server / AMS ) ) ) )", "choosing": "( Max( Max( Max( RCSe,RMSe ),( MUR / MUM ) ),( ( RRSe * CS ) + ( MUC + DS ) ) ) + ( MUM / ( Max( RMSe,( ( ( RMSe * MUR ) * ( RMSe * ( CS + DS ) ) ) + MLU ) ) - ( RRSe - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * RRS ) / Min( Const ,ARS ) ) - ( ( FirstVNF_RAM + ( DDR + ACS ) ) + Min( FirstVNF_CPU_Server ,CRS ) ) )", "choosing": "Max( ( MUC / MUR ),Max( ( Max( RRSe,RCSe ) / ( RMSe - CS ) ),( ( MUM + MUM ) - Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * RRS ) / Min( Max( ( PN - ( PN * ( MDR - FirstVNF_CPU_Server ) ) ),BR ) ,ARS ) ) - ( PN * DDR ) )", "choosing": "Max( Min( MUR ,Min( MLU ,MUR ) ),Min( RRSe ,( RCSe * Max( MUC,Max( MLU,RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,( ( FirstVNF_CPU + MRS ) * MDR ) ) / MDR ) * ( MDR - MDR ) )", "choosing": "( ( RRSe * Min( Min( ( Min( ( ( DS / RCSe ) * MUC ) ,Max( ( MUM - RCSe ),( RCSe / DS ) ) ) + MUC ) ,MUM ) ,MUC ) ) + Min( ( MUM - CS ) ,( RCSe / ( DS - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem,ACS ) - ( ( DDR / Max( FirstVNF_CPU_Server,Min( ( MRS - BR ) ,PN ) ) ) * ARS ) ) * Min( ( FirstVNF_Mem * ( ACS + FirstVNF_Mem_Server ) ) ,FirstVNF_CPU ) )", "choosing": "( Min( ( RCSe * ( ( RMSe / ( ( DS + ( CS + RMSe ) ) - Min( MLU ,( DS * RRSe ) ) ) ) - MUC ) ) ,Max( RMSe,CS ) ) + ( ( ( Max( RCSe,( MUC / Max( ( CS - CS ),MLU ) ) ) * ( ( Max( ( RMSe / MUR ),CS ) + RMSe ) + ( ( MUC * DS ) / CS ) ) ) / ( Min( ( Min( RMSe ,Max( MUC,MUC ) ) * DS ) ,( CS + DS ) ) + ( MUR - CS ) ) ) * Max( CS,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU ) * ( MDR / MDR ) )", "choosing": "( Min( CS ,RRSe ) * Min( CS ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - ( CRS - Min( DDR ,FirstVNF_Mem ) ) ) - ( Max( MRS,( ACS * FirstVNF_CPU ) ) / FirstVNF_CPU_Server ) ) * AMS ) + ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) / FirstVNF_CPU ) )", "choosing": "Max( ( MLU / CS ),Max( ( RRSe / ( MUR / RCSe ) ),( ( MUM - MUM ) - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN - AMS ) - ( AMS / FirstVNF_CPU_Server ) ) * AMS ) + ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) / FirstVNF_CPU ) )", "choosing": "Max( ( MUR * RMSe ),Max( ( RRSe / ( MUR / RCSe ) ),( ( MUM - MUM ) - Min( RCSe ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( FirstVNF_CPU * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) * RRS ) / Min( Const ,ARS ) ) - ( PN * DDR ) )", "choosing": "Max( ( Min( ( MUC + MLU ) ,( CS + RCSe ) ) * ( ( MLU * MUR ) - ( MUM - MUC ) ) ),Max( ( Max( RRSe,RCSe ) / ( RMSe - CS ) ),( ( MUM + MUM ) - Min( RMSe ,( ( Min( MUM ,DS ) * RCSe ) + ( ( MUR * DS ) / DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( CRS + DDR ) ,MDR ) * RRS ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - ( DDR * PN ) )", "choosing": "Max( ( Min( ( MLU + MUC ) ,( CS + RCSe ) ) * ( ( MLU * MUR ) - ( MUM - MUC ) ) ),Max( ( Max( CS,RCSe ) / ( RMSe - CS ) ),( ( MUM + MUM ) - Min( Max( Max( MUM,( DS - ( CS * MUM ) ) ),RCSe ) ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( ARS / FirstVNF_RAM ) ) - ( ( ACS / FirstVNF_CPU_Server ) / ( RRS / FirstVNF_CPU_Server ) ) ) - ( ( ( ACS / CRS ) + Max( RRS,ARS ) ) / ( ( FirstVNF_CPU - PN ) / ( FirstVNF_RAM_Server / AMS ) ) ) )", "choosing": "( Max( Max( Min( RCSe ,RMSe ),( MUR / MUM ) ),( ( RRSe * CS ) + ( ( RCSe * DS ) + DS ) ) ) + ( Min( ( RMSe - RRSe ) ,( RRSe + MUM ) ) + Min( ( RCSe * RCSe ) ,( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - ( ( ACS / FirstVNF_CPU_Server ) / ( RRS / FirstVNF_CPU_Server ) ) ) - ( ( ( ACS / CRS ) + Max( RRS,ARS ) ) / ( ( FirstVNF_CPU - PN ) / ( FirstVNF_RAM_Server / AMS ) ) ) )", "choosing": "( Max( Max( Min( RCSe ,RMSe ),( MUR / MUM ) ),( ( RRSe * CS ) + ( MUC + DS ) ) ) + ( Min( ( RMSe - RRSe ) ,( RRSe + MUM ) ) + Min( ( RCSe * RCSe ) ,( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,Const ) - ( FirstVNF_CPU_Server - PN ) )", "choosing": "( ( MUR + MUM ) * Max( DS,Max( ( MUM / DS ),Max( MLU,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * ( ACS - FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server - PN ) )", "choosing": "( ( Max( CS,DS ) / Max( RCSe,CS ) ) - Max( ( MLU - MUM ),( RMSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * ( FirstVNF_RAM + CRS ) ) / Min( Const ,ARS ) ) - ( PN * DDR ) )", "choosing": "Max( ( Min( ( MUC + MLU ) ,( CS + RCSe ) ) * ( ( MLU * MUR ) - ( MUM - MUC ) ) ),Max( ( Max( RRSe,RCSe ) / ( RMSe - CS ) ),( ( ( ( ( RRSe * CS ) * ( MUR - RRSe ) ) * ( ( MUM / MUC ) / ( MUR / MUC ) ) ) + MUM ) - Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * RRS ) / Min( Const ,ARS ) ) - ( PN * DDR ) )", "choosing": "( ( ( RRSe * CS ) * ( MUR - RRSe ) ) * ( ( MUM / MUC ) / ( MUR / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS - ( MDR + FirstVNF_Mem ) ) * ( ARS / MDR ) ) ,( ARS + Min( PN ,( ( ( CRS * RRS ) / Min( Const ,ARS ) ) - ( PN * Min( Min( CRS ,RRS ) ,DDR ) ) ) ) ) )", "choosing": "( Max( RRSe,( ( CS * RCSe ) - ( MUC / DS ) ) ) * ( MUR + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS * CRS ) - ( ( MRS - AMS ) - ( FirstVNF_RAM + FirstVNF_Mem ) ) ) - ( PN * DDR ) )", "choosing": "Max( ( Max( ( CS + ( MLU / ( ( RCSe - MUR ) - ( Max( RCSe,MUR ) + RMSe ) ) ) ),( MUC + MLU ) ) * ( ( MLU * MUR ) - ( MUM - MUC ) ) ),Max( ( CS * RCSe ),( ( MUM + MUM ) - Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * RRS ) / Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,PN ) ) - ( PN * DDR ) )", "choosing": "( ( ( MUC * RRSe ) / MUC ) * Min( Min( MUC ,MLU ) ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS - ( FirstVNF_RAM + FirstVNF_Mem ) ) * ( ARS / MDR ) ) ,( ARS + Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Min( ( MUC + MLU ) ,( CS + RCSe ) ) * ( ( MLU * MUR ) - ( MUM - MUC ) ) ),Max( ( Max( RRSe,RCSe ) / ( RMSe - CS ) ),( ( MUM + MUM ) - Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_Mem ) / Max( ACS,FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe + ( ( ( MUM - ( CS + MUC ) ) * ( RCSe - ( Max( Max( RMSe,DS ),RMSe ) + ( ( RCSe + RCSe ) + ( MUR + MUM ) ) ) ) ) + Min( RRSe ,DS ) ) ) - ( RRSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_Mem ) - ( FirstVNF_CPU_Server - PN ) )", "choosing": "( ( RRSe + ( ( ( MUM - ( CS + MUC ) ) * ( RCSe - ( Max( Max( RMSe,DS ),RMSe ) + ( ( RCSe + RCSe ) + MUC ) ) ) ) + Min( RRSe ,DS ) ) ) - ( RRSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * CRS ) - ( AMS * Const ) )", "choosing": "Min( ( ( RRSe + Min( MLU ,MLU ) ) - ( MLU + RCSe ) ) ,( Max( MUM,RRSe ) - ( RCSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( DDR + MDR ) )", "choosing": "( ( Min( DS ,MUR ) * MUM ) + Min( ( MUR / RCSe ) ,Max( MUC,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,RRS ) - ( DDR + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( MLU + RCSe ) ) ,( Max( MUM,RRSe ) - ( ( CS - ( ( RMSe + DS ) - Min( ( MUC + ( RRSe / CS ) ) ,RMSe ) ) ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,RRS ) - ( DDR + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( MLU + RCSe ) ) ,( Max( MUM,RRSe ) - ( ( CS - ( ( RMSe + DS ) - Min( ( MUC + ( RRSe / CS ) ) ,RMSe ) ) ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,RRS ) - ( DDR + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( MLU + RCSe ) ) ,( Max( MUM,RRSe ) - ( ( CS - ( ( RMSe + DS ) - Min( ( MUC + ( RRSe / CS ) ) ,RMSe ) ) ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,RRS ) - ( DDR + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( MLU + RCSe ) ) ,( Max( MUM,RRSe ) - ( ( CS - ( ( RMSe + DS ) - Min( ( MUC + ( RRSe / CS ) ) ,RMSe ) ) ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + Const ) - ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe / RMSe ) / Min( MUR ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) * ( DDR + FirstVNF_RAM_Server ) )", "choosing": "Max( Max( RMSe,DS ),( ( Min( RCSe ,MUC ) / Min( RMSe ,MLU ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / AMS ) * ( FirstVNF_CPU_Server - RRS ) ) ,( Max( FirstVNF_RAM_Server,Const ) - ( Const * PN ) ) ) - Max( Max( ( FirstVNF_RAM_Server - FirstVNF_RAM ),( MDR / FirstVNF_RAM_Server ) ),( ( BR / MDR ) / ( CRS - AMS ) ) ) )", "choosing": "Max( ( MUM - RCSe ),( RRSe / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS - ( FirstVNF_RAM + FirstVNF_Mem ) ) * ( ARS / MDR ) ) ,( ARS + Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,( ( CS * RCSe ) - ( MUC / DS ) ) ) * Min( Min( MUC ,MLU ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server * FirstVNF_Mem ) ,( ARS - ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) )", "choosing": "( ( DS - RCSe ) + ( MUM + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ARS + Const ) ,FirstVNF_RAM_Server ) * BR ) - ( ( ( Min( FirstVNF_RAM_Server ,DDR ) / Min( MDR ,Max( ( ( BR / RRS ) / Min( DDR ,MDR ) ),BR ) ) ) / Max( ACS,FirstVNF_RAM_Server ) ) / PN ) )", "choosing": "( ( MUR - MUM ) * ( ( MUM - ( ( RCSe - ( RRSe - ( MUC + ( MUC * MUM ) ) ) ) + MUR ) ) * ( RCSe - ( Max( Max( RMSe,DS ),Min( RRSe ,Min( ( MLU + RMSe ) ,MUR ) ) ) + ( ( RCSe + RCSe ) + MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( BR * FirstVNF_CPU ) + ( MDR * PN ) ),MRS ) ,( ARS - ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) )", "choosing": "( ( DS - ( ( RMSe / MLU ) * DS ) ) + ( MUM + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ARS + Const ) ,FirstVNF_RAM_Server ) * BR ) - ( ( ( Min( FirstVNF_RAM_Server ,DDR ) / Min( MDR ,Max( ( ( BR / RRS ) / Min( DDR ,MDR ) ),BR ) ) ) / Max( ACS,FirstVNF_RAM_Server ) ) / PN ) )", "choosing": "( ( MUR - MUM ) * ( ( MUM - ( ( RCSe - ( RRSe - ( MUC + ( MUC * MUM ) ) ) ) + MUR ) ) * ( RCSe - ( Max( Max( RMSe,DS ),Min( RRSe ,Min( ( MLU + RMSe ) ,MUR ) ) ) + ( ( RCSe + RCSe ) + MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( BR * FirstVNF_CPU ) + ( MDR * PN ) ),MRS ) ,( ARS - ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) )", "choosing": "( ( DS - ( ( RMSe / MLU ) * DS ) ) + ( MUM + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ARS + Const ) ,FirstVNF_RAM_Server ) * BR ) - ( ( ( Min( FirstVNF_RAM_Server ,DDR ) / Min( MDR ,Max( ( ( BR / RRS ) / Min( DDR ,MDR ) ),BR ) ) ) / Max( ACS,FirstVNF_RAM_Server ) ) / PN ) )", "choosing": "( ( MUR - MUM ) * ( ( MUM - ( ( RCSe - ( RRSe - ( MUC + ( MUC * MUM ) ) ) ) + MUR ) ) * ( RCSe - ( Max( Max( RMSe,DS ),Min( RRSe ,Min( ( MLU + RMSe ) ,MUR ) ) ) + ( ( RCSe + RCSe ) + MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( BR * FirstVNF_CPU ) + ( MDR * PN ) ),MRS ) ,( ARS - ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) )", "choosing": "( ( DS - ( ( RMSe / MLU ) * DS ) ) + ( MUM + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS + Const ) - FirstVNF_RAM_Server ) * BR ) - ( ( ( Min( FirstVNF_RAM_Server ,DDR ) / Min( MDR ,Max( CRS,BR ) ) ) / Max( ACS,FirstVNF_RAM_Server ) ) / PN ) )", "choosing": "( ( MUR + MUM ) * ( ( MUM - ( ( RCSe - ( RRSe - ( MUC + DS ) ) ) + MUM ) ) * ( RCSe - ( Max( Max( RMSe,DS ),RMSe ) + ( ( RCSe + RCSe ) + MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( BR * FirstVNF_CPU ) + ( MDR * PN ) ),MRS ) ,( ARS - ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) )", "choosing": "( ( DS - ( ( RMSe / MLU ) * DS ) ) + ( MUM + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( MRS,ACS ),Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( Const + DDR ) / ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) + ( ( ( Const * FirstVNF_CPU ) - ( Const * FirstVNF_Mem ) ) - Min( ( BR / RRS ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( Min( RRSe ,MUM ) + ( MUM / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( PN,MRS ) ,( ARS - ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) )", "choosing": "( ( DS - ( ( RMSe / MLU ) * DS ) ) + ( ( ( MUC / CS ) - Max( MUC,MLU ) ) + ( ( MUM * MUM ) - ( MUR / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( BR * FirstVNF_CPU ) + ( MDR * PN ) ),MRS ) ,( ARS - ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) )", "choosing": "( ( DS - ( ( RMSe / MLU ) * DS ) ) + ( MUM + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * RRS ) / ( ACS - ( FirstVNF_RAM + FirstVNF_Mem ) ) ) - ( PN * DDR ) )", "choosing": "Max( ( Min( ( MUC + MLU ) ,( CS + RCSe ) ) * ( ( MLU * MUR ) - ( MUM - MUC ) ) ),Max( ( CS * RCSe ),( ( MUM + MUM ) - Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS - ( FirstVNF_RAM + FirstVNF_Mem ) ) * ( ARS / MDR ) ) ,( ARS + Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,( ( CS * RCSe ) - ( MUC / DS ) ) ) * Min( Min( MUC ,MLU ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * RRS ) / Min( Const ,ARS ) ) - ( PN * DDR ) )", "choosing": "Max( ( Min( ( MUC + MLU ) ,( CS + RCSe ) ) * ( ( MLU * MUR ) - ( MUM - MUC ) ) ),Max( ( Max( RRSe,RCSe ) / ( RMSe - CS ) ),( ( MUM + MUM ) - Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}]}