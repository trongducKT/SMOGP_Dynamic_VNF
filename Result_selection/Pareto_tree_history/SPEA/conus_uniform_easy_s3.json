{"1": [{"determining": "( ( FirstVNF_CPU_Server + CRS ) + Max( MRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,DS ) + ( RRSe + RRSe ) )", "obj1": 0.6062992125984252, "obj2": 0.28813626169404233}, {"determining": "Min( ( AMS - RRS ) ,Max( BR,BR ) )", "choosing": "( Max( RRSe,RMSe ) - Max( RCSe,RMSe ) )", "obj1": 0.3228346456692913, "obj2": 0.5154279607999267}, {"determining": "( Min( PN ,MRS ) - ( CRS - ARS ) )", "choosing": "( Min( DS ,MUR ) + Min( MUR ,MUC ) )", "obj1": 0.5610236220472441, "obj2": 0.33092506206011146}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS - ARS ) )", "choosing": "( ( MUM * RRSe ) - Min( MLU ,RCSe ) )", "obj1": 0.4015748031496063, "obj2": 0.4176100079043115}, {"determining": "Min( ( FirstVNF_Mem - FirstVNF_RAM_Server ) ,( PN / FirstVNF_CPU ) )", "choosing": "Min( Max( RCSe,DS ) ,Min( MUC ,RMSe ) )", "obj1": 0.9232283464566929, "obj2": 0.043367185782631906}, {"determining": "( ( ARS + RRS ) - Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "Max( Max( CS,RMSe ),Max( RCSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( CRS ,FirstVNF_RAM_Server ) ,( Const * RRS ) ) * ( ( AMS * FirstVNF_RAM ) / Min( FirstVNF_CPU ,FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( RMSe / RMSe ),MUC ) ,( CS + MUC ) )", "obj1": 0.35039370078740156, "obj2": 0.5069774574846346}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( FirstVNF_RAM_Server * BR ) )", "choosing": "( Min( ( MUM / RCSe ) ,RMSe ) * ( DS * MUR ) )", "obj1": 0.6358267716535433, "obj2": 0.26122705680727276}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) - ( ARS * ARS ) ) / ( ( ARS - Const ) * Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "( Min( Min( RRSe ,MUR ) ,( MLU - MUC ) ) - Max( ( RRSe - MUR ),( CS - RMSe ) ) )", "obj1": 0.3720472440944882, "obj2": 0.4214449216359399}, {"determining": "( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),( FirstVNF_RAM / FirstVNF_RAM_Server ) ) - ( Min( BR ,FirstVNF_RAM ) * Min( MRS ,MRS ) ) )", "choosing": "( Min( ( DS + MUM ) ,MLU ) + ( ( MUM / MUC ) * ( DS + MUC ) ) )", "obj1": 0.5767716535433071, "obj2": 0.3095821836765266}, {"determining": "( ( ( AMS + FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server / ARS ) ) - ( ( Const / FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( RRSe - CS ) ,( MUC / MUR ) ) / ( Min( RRSe ,CS ) + ( CS / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( MRS * ARS ) ,Max( AMS,FirstVNF_RAM_Server ) ),( ( AMS - FirstVNF_Mem_Server ) - ( ACS - FirstVNF_RAM ) ) )", "choosing": "( Min( DS ,MLU ) + ( RCSe + DS ) )", "obj1": 0.6456692913385826, "obj2": 0.2612012907062255}, {"determining": "Max( ( ( Const - FirstVNF_Mem ) / ( ARS * MDR ) ),( ( MRS * FirstVNF_CPU ) / ( MDR - DDR ) ) )", "choosing": "( ( Max( MUM,RRSe ) - Max( DS,MUM ) ) / Max( ( DS - RMSe ),Max( MLU,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ( Const / CRS ) ) - Min( RRS ,CRS ) )", "choosing": "Max( Max( ( RCSe - CS ),( CS * RRSe ) ),( Min( RRSe ,RMSe ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ) + ( BR - Min( FirstVNF_RAM_Server ,Const ) ) )", "choosing": "Min( ( Min( ( RMSe + RCSe ) ,( RCSe - CS ) ) + Min( ( MUC * MUC ) ,( RCSe - MUM ) ) ) ,( ( ( RRSe / CS ) + Min( MUR ,RCSe ) ) - Min( ( MUC - RRSe ) ,( RMSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * CRS ) / CRS ) - Min( ACS ,DDR ) )", "choosing": "( ( ( ( CS + MLU ) * ( DS * CS ) ) + Max( Max( MUC,DS ),Min( MUC ,MUM ) ) ) * ( ( Max( MUM,MUM ) + ( CS - CS ) ) - ( Min( RCSe ,MUR ) / Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * PN ) * ( ( FirstVNF_Mem / DDR ) * ( Const - ACS ) ) )", "choosing": "( ( MLU / CS ) + Min( Min( MLU ,RMSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( BR - RRS ),( ARS * RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( MUM * MUC ) ) ) / ( Max( ( RRSe * MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "( ( ( ( AMS * MRS ) - Min( ARS ,PN ) ) / ( ( AMS / ARS ) - ( FirstVNF_CPU_Server / ARS ) ) ) + ( Min( Min( FirstVNF_CPU_Server ,CRS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) - ( Min( MRS ,MDR ) - ( PN + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RMSe * RRSe ) + ( DS + MUC ) ) - Max( ( MLU - MLU ),Max( RCSe,RRSe ) ) ) - Max( Max( Min( RMSe ,MUR ),Max( RCSe,RRSe ) ),Max( ( MUM * DS ),( MUM * RRSe ) ) ) )", "obj1": 0.6988188976377953, "obj2": 0.22466671589670675}, {"determining": "Min( ( ( ( BR + ACS ) / Min( AMS ,DDR ) ) - Max( ( ARS * FirstVNF_Mem ),Max( PN,RRS ) ) ) ,( Max( ( ACS * AMS ),Max( FirstVNF_RAM,BR ) ) + ( ( Const * CRS ) + Max( MRS,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( Max( ( MUR / MUM ),Min( CS ,CS ) ) ,MUM ),( ( MUC / CS ) * ( ( MUR - MUC ) + CS ) ) )", "obj1": 0.36220472440944884, "obj2": 0.49261112274572966}, {"determining": "( ( CRS - FirstVNF_CPU_Server ) - ( RRS * Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,DDR ) ) )", "choosing": "Min( ( ( Max( MUM,RCSe ) - ( RMSe / DS ) ) / ( ( CS / MUR ) - Max( CS,MLU ) ) ) ,( ( Min( RMSe ,CS ) + Min( RMSe ,MUC ) ) + ( ( RCSe / RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( ARS / FirstVNF_RAM ) / ( FirstVNF_RAM * CRS ) ),( ( BR + ACS ) + ( FirstVNF_CPU_Server / BR ) ) ) ,( Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - ( Max( FirstVNF_CPU_Server,RRS ) / ( FirstVNF_CPU_Server * BR ) ) ) )", "choosing": "Max( ( Max( Min( MLU ,MUM ),Max( DS,RRSe ) ) + DS ),( MUM + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU + ( BR + Const ) ) )", "choosing": "Min( ( Min( ( MUR / DS ) ,( CS * MUM ) ) / Min( ( CS - MUM ) ,Min( CS ,RCSe ) ) ) ,Max( ( Max( DS,RCSe ) + ( DS / DS ) ),Max( ( CS * CS ),( RCSe / DS ) ) ) )", "obj1": 0.3641732283464567, "obj2": 0.4533074281550881}, {"determining": "Min( ( FirstVNF_CPU / ( FirstVNF_RAM_Server + ARS ) ) ,Min( ARS ,FirstVNF_CPU ) )", "choosing": "( ( ( Min( CS ,MUC ) / Min( CS ,RRSe ) ) * ( ( MUC - MLU ) / Max( RMSe,MUC ) ) ) * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( Max( MUR,MLU ) - Min( MLU ,CS ) ) ) )", "obj1": 0.17125984251968504, "obj2": 0.6493180572595632}, {"determining": "( ( RRS * FirstVNF_Mem ) - ( CRS - CRS ) )", "choosing": "( Max( ( Min( MUR ,RCSe ) * Min( MUC ,RCSe ) ),( ( MLU * DS ) / Max( CS,CS ) ) ) * ( ( Max( RCSe,MLU ) / ( DS * MUR ) ) * Max( ( MUM * MUM ),Max( DS,RCSe ) ) ) )", "obj1": 0.04921259842519685, "obj2": 0.7516646927225843}, {"determining": "Max( ( CRS * BR ),( CRS - ( MDR * BR ) ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * Min( Max( RRSe,RCSe ) ,( RMSe + CS ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.5521714470398198}], "2": [{"determining": "( ( FirstVNF_CPU_Server + CRS ) + Max( MRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,DS ) + ( RRSe + RRSe ) )", "obj1": 0.6062992125984252, "obj2": 0.28813626169404233}, {"determining": "( ( ARS + RRS ) - Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "Max( Max( CS,RMSe ),Max( RCSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS + FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server / ARS ) ) - ( ( Const / FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( RRSe - CS ) ,( MUC / MUR ) ) / ( Min( RRSe ,CS ) + ( CS / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( Const - FirstVNF_Mem ) / ( ARS * MDR ) ),( ( MRS * FirstVNF_CPU ) / ( MDR - DDR ) ) )", "choosing": "( ( Max( MUM,RRSe ) - Max( DS,MUM ) ) / Max( ( DS - RMSe ),Max( MLU,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ( Const / CRS ) ) - Min( RRS ,CRS ) )", "choosing": "Max( Max( ( RCSe - CS ),( CS * RRSe ) ),( Min( RRSe ,RMSe ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ) + ( BR - Min( FirstVNF_RAM_Server ,Const ) ) )", "choosing": "Min( ( Min( ( RMSe + RCSe ) ,( RCSe - CS ) ) + Min( ( MUC * MUC ) ,( RCSe - MUM ) ) ) ,( ( ( RRSe / CS ) + Min( MUR ,RCSe ) ) - Min( ( MUC - RRSe ) ,( RMSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * CRS ) / CRS ) - Min( ACS ,DDR ) )", "choosing": "( ( ( ( CS + MLU ) * ( DS * CS ) ) + Max( Max( MUC,DS ),Min( MUC ,MUM ) ) ) * ( ( Max( MUM,MUM ) + ( CS - CS ) ) - ( Min( RCSe ,MUR ) / Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * PN ) * ( ( FirstVNF_Mem / DDR ) * ( Const - ACS ) ) )", "choosing": "( ( MLU / CS ) + Min( Min( MLU ,RMSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( BR - RRS ),( ARS * RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( MUM * MUC ) ) ) / ( Max( ( RRSe * MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "( ( CRS - FirstVNF_CPU_Server ) - ( RRS * Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,DDR ) ) )", "choosing": "Min( ( ( Max( MUM,RCSe ) - ( RMSe / DS ) ) / ( ( CS / MUR ) - Max( CS,MLU ) ) ) ,( ( Min( RMSe ,CS ) + Min( RMSe ,MUC ) ) + ( ( RCSe / RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( ARS / FirstVNF_RAM ) / ( FirstVNF_RAM * CRS ) ),( ( BR + ACS ) + ( FirstVNF_CPU_Server / BR ) ) ) ,( Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - ( Max( FirstVNF_CPU_Server,RRS ) / ( FirstVNF_CPU_Server * BR ) ) ) )", "choosing": "Max( ( Max( Min( MLU ,MUM ),Max( DS,RRSe ) ) + DS ),( MUM + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( CRS * BR ),( CRS - ( MDR * BR ) ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * Min( Max( RRSe,RCSe ) ,( RMSe + CS ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.5521714470398198}, {"determining": "( ( ( ACS - ( ( FirstVNF_RAM / Min( BR ,FirstVNF_CPU_Server ) ) + Max( ( RRS * RRS ),FirstVNF_CPU ) ) ) + ( ARS * CRS ) ) * ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) / ( Const - RRS ) ) )", "choosing": "( ( ( MLU / MUC ) / RRSe ) / ( ( DS - MLU ) / ( RMSe + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * FirstVNF_CPU_Server ) - ( RRS * Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,FirstVNF_RAM ) ) )", "choosing": "Min( ( ( Max( MUM,RCSe ) - ( RMSe / DS ) ) / ( ( CS / MUR ) + Max( RMSe,MLU ) ) ) ,( ( Min( RMSe ,CS ) + Min( RMSe ,MUC ) ) + ( ( RCSe / RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( Const - FirstVNF_Mem ) / ( ARS * MDR ) ),( ( MRS * FirstVNF_CPU ) / ( MRS - ( FirstVNF_Mem + ACS ) ) ) )", "choosing": "( ( Max( MUM,RRSe ) - Max( DS,MUM ) ) / Max( ( MUR * MUR ),( MUC + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( Const - FirstVNF_Mem ) / ( ARS * MDR ) ),( ( MRS * FirstVNF_CPU ) / ( MRS - DDR ) ) )", "choosing": "Max( ( MUR * MUR ),( MUC + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MDR - Max( ( RRS * MRS ),FirstVNF_Mem_Server ) ) - FirstVNF_RAM_Server ) ,( PN / FirstVNF_CPU ) )", "choosing": "Min( Max( RCSe,RCSe ) ,Min( MUC ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ) + ( BR - Min( FirstVNF_RAM_Server ,Const ) ) )", "choosing": "Min( ( Min( ( RMSe + RCSe ) ,( RCSe - CS ) ) + Min( ( MUC * MUC ) ,( RCSe - MUM ) ) ) ,( ( ( RRSe / CS ) + Min( MUR ,RCSe ) ) - Min( ( MUC - RRSe ) ,( RMSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * PN ) * ( ( FirstVNF_Mem / FirstVNF_Mem_Server ) * ( BR - ACS ) ) )", "choosing": "( RCSe + Min( Max( MLU,RMSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU * PN ) * ( ( FirstVNF_Mem / DDR ) * ( Const - ACS ) ) ) - ( ( Const * FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MLU / CS ) + Min( Min( MLU ,RMSe ) ,MUM ) ) / ( Min( MUR ,CS ) + ( CS / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * PN ) * ( ( FirstVNF_Mem / DDR ) * ( Const - ACS ) ) )", "choosing": "( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( CS / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - FirstVNF_Mem_Server ) * Max( FirstVNF_RAM_Server,ARS ) ) - ( ( Const * FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU / CS ) + Min( Min( MLU ,RMSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * PN ) * ( AMS * ( Const - ACS ) ) )", "choosing": "( ( MUR * MUR ) + Min( Min( MLU ,RMSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ACS ) * ( FirstVNF_Mem + ACS ) )", "choosing": "Max( ( MUR * MLU ),( MUC + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * PN ) * ( ( FirstVNF_Mem / DDR ) * ( Const - ACS ) ) )", "choosing": "( ( MLU / CS ) + Min( Min( MLU ,RMSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR - RRS ),( DDR - RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ),( RRSe + DS ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07283464566929133, "obj2": 0.6516907075416017}, {"determining": "Min( Max( ( ( Min( MRS ,CRS ) + ( DDR * FirstVNF_CPU_Server ) ) + ( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_Mem + BR ) ) ),( ( BR + ACS ) + ( FirstVNF_CPU_Server / BR ) ) ) ,( Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU ),( FirstVNF_Mem_Server * FirstVNF_RAM ) ) - ( Max( FirstVNF_CPU_Server,RRS ) / ( FirstVNF_CPU_Server * BR ) ) ) )", "choosing": "Max( ( Max( Min( ( ( RRSe * CS ) / Min( MUC ,CS ) ) ,MUM ),( DS + RRSe ) ) + DS ),( MUM + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( ARS / FirstVNF_RAM ) / ( FirstVNF_RAM * CRS ) ),( ( BR + ACS ) + ( FirstVNF_CPU_Server / BR ) ) ) ,( Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU ),( FirstVNF_Mem_Server * FirstVNF_RAM ) ) - ( Max( FirstVNF_CPU_Server,RRS ) / ( FirstVNF_CPU_Server * BR ) ) ) )", "choosing": "( ( ( MUR + MUC ) + ( MUR + RMSe ) ) * ( ( RRSe * CS ) / Min( MUC ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( ( FirstVNF_CPU_Server - MDR ) / ( BR / DDR ) ) ) + ( BR - Min( FirstVNF_RAM_Server ,Const ) ) )", "choosing": "Min( ( Min( ( RMSe + RCSe ) ,( RCSe - CS ) ) + Min( ( MUC * MUC ) ,( RCSe - MUM ) ) ) ,RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - MDR ) / ( ( MDR - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ) + ( FirstVNF_CPU_Server - Min( FirstVNF_RAM_Server ,Const ) ) ) )", "choosing": "Min( ( MUR - MLU ) ,( RRSe / ( Min( ( RMSe + RCSe ) ,( RCSe - CS ) ) + Min( ( MUC * MUC ) ,( RCSe - MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ) + ( BR / Min( FirstVNF_RAM_Server ,Const ) ) )", "choosing": "Min( ( Min( ( RMSe + RCSe ) ,( RCSe - CS ) ) + Min( ( MUC * CS ) ,( RCSe - MUM ) ) ) ,( ( ( RRSe / CS ) + Min( MUR ,RCSe ) ) - Min( ( MUC - RRSe ) ,( RMSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( BR + ACS ) / Min( AMS ,Min( ( Max( RRS,FirstVNF_CPU_Server ) / ( RRS / FirstVNF_Mem_Server ) ) ,Min( ( Const / MRS ) ,( Const - ARS ) ) ) ) ) - Max( ( ARS * FirstVNF_Mem ),Max( PN,RRS ) ) ) ,( Max( ( ACS * AMS ),Max( FirstVNF_RAM,BR ) ) + ( ( Const * CRS ) + Max( MRS,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( Max( ( MUR / MUM ),( MUR / MUM ) ) ,MUM ),( ( MUC / CS ) * ( ( MUR - MUC ) + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR - FirstVNF_RAM_Server ) ,( PN / FirstVNF_CPU ) )", "choosing": "Min( Max( RCSe,DS ) ,Min( ( RRSe - CS ) ,( RCSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - FirstVNF_Mem_Server ) * Max( FirstVNF_RAM_Server,ARS ) ) - ( ( Const * FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( CS / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU_Server ) - ( RRS * Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,DDR ) ) )", "choosing": "Min( ( ( Max( MUM,RCSe ) - ( RMSe / DS ) ) / ( ( CS / MUR ) - Max( CS,MLU ) ) ) ,( RRSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU_Server ) - ( RRS * ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / DDR ) ) )", "choosing": "Min( ( ( Max( MUM,RCSe ) - ( RMSe / DS ) ) / ( ( CS / MUR ) - Max( CS,RCSe ) ) ) ,( ( Min( RMSe ,CS ) + Min( RMSe ,MUC ) ) + ( ( RCSe / RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS * ARS ) ,Max( AMS,FirstVNF_RAM_Server ) ) / Max( ( ( FirstVNF_RAM * PN ) + ( DDR + DDR ) ),( ( PN + MRS ) + ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( RCSe,Max( MUC,( RRSe / RRSe ) ) ) - Min( DS ,MLU ) )", "obj1": 0.04921259842519685, "obj2": 0.7381116318086096}, {"determining": "( ( CRS - FirstVNF_CPU_Server ) - ( RRS * ( ( MDR - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ) + ( BR - Min( FirstVNF_RAM_Server ,Const ) ) ) ) )", "choosing": "Min( ( Min( ( Min( ( RMSe + RCSe ) ,( RCSe - CS ) ) + Min( ( MUC * MUC ) ,( RCSe - MUM ) ) ) ,( ( ( RRSe / CS ) + Min( MUR ,RCSe ) ) - Min( ( MUC - RRSe ) ,( RMSe - RMSe ) ) ) ) / ( ( CS / MUR ) - Max( CS,MLU ) ) ) ,( ( Min( RMSe ,CS ) + Min( RMSe ,MUC ) ) + ( ( RCSe / RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ) + ( BR - Min( FirstVNF_RAM_Server ,Const ) ) )", "choosing": "Min( ( Min( ( RMSe + RCSe ) ,( RCSe - CS ) ) + Min( RMSe ,( RCSe - MUM ) ) ) ,( ( ( RRSe / CS ) + Min( MUR ,RCSe ) ) - Min( ( MUC * RRSe ) ,( RMSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ) + ( BR - Min( FirstVNF_RAM_Server ,Const ) ) )", "choosing": "Min( ( ( Max( MUM,RCSe ) - ( RMSe / DS ) ) / ( ( CS / MUR ) - Max( CS,MLU ) ) ) ,( ( Min( RMSe ,CS ) + Min( RMSe ,MUC ) ) + ( ( RCSe / RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU_Server ) - ( RRS * Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,DDR ) ) )", "choosing": "Min( ( Min( ( RMSe + RCSe ) ,( RCSe - CS ) ) + Min( ( MUC * MUC ) ,( RCSe - MUM ) ) ) ,( ( ( RRSe / CS ) + Min( MUR ,RCSe ) ) - Min( ( MUC - RRSe ) ,( RMSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ( Const / CRS ) ) - Min( RRS ,CRS ) )", "choosing": "( Max( RCSe,Max( MUC,( RRSe / RRSe ) ) ) - ( RMSe + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ) + ( BR - Min( FirstVNF_RAM_Server ,Const ) ) ) + ( BR - Min( FirstVNF_RAM_Server ,Const ) ) )", "choosing": "Min( ( Min( ( RMSe + RCSe ) ,( RCSe - CS ) ) + Min( ( MUC * MUC ) ,( RCSe - MUM ) ) ) ,( Min( ( RMSe + RCSe ) ,( RCSe - CS ) ) + Min( ( MUC * MUC ) ,( RCSe - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ) + ( BR - Min( FirstVNF_RAM_Server ,Const ) ) )", "choosing": "Min( ( Min( ( RMSe + RCSe ) ,( RCSe - CS ) ) + Min( ( MUC * MUC ) ,( RCSe - MUM ) ) ) ,( ( ( RRSe / CS ) + Min( MUR ,RCSe ) ) - Min( ( MUC - RRSe ) ,( RMSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ) + ( BR - Min( FirstVNF_RAM_Server ,Const ) ) )", "choosing": "Min( ( Min( ( RMSe + RCSe ) ,( RCSe - CS ) ) + Min( ( MUC * MUC ) ,( RCSe - MUM ) ) ) ,( ( ( RRSe / CS ) + Min( MUR ,RCSe ) ) - Min( ( MUC - RRSe ) ,( RMSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + RRS ) - ( BR + FirstVNF_Mem_Server ) )", "choosing": "Max( Max( MUR,RRSe ),Max( ( MLU - MLU ),Min( DS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) * AMS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Max( ( RMSe / RMSe ),MUC ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,RRSe ) ) / ( ( RCSe / DS ) / ( MUR + MUR ) ) ) )", "obj1": 0.07874015748031496, "obj2": 0.6435919474338876}, {"determining": "Max( ( MDR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( BR - RRS ),( ARS * RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( MUM * MUC ) ) ) / ( Max( ( RRSe * MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07677165354330709, "obj2": 0.6467765782165263}, {"determining": "( ( ( AMS - FirstVNF_Mem_Server ) * Max( FirstVNF_RAM_Server,ARS ) ) - Min( ( ( ( BR + ACS ) / Min( AMS ,DDR ) ) - Max( ( ARS * FirstVNF_Mem ),Max( PN,RRS ) ) ) ,( Max( ( ACS * AMS ),Max( FirstVNF_RAM,BR ) ) + ( ( Const * CRS ) + Max( MRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( CS ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( CS / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU / ( FirstVNF_RAM_Server + ARS ) ) ,Min( ARS ,FirstVNF_CPU ) )", "choosing": "( ( ( Min( CS ,MUC ) / Min( CS ,RRSe ) ) * ( ( MUC - MLU ) / Max( RMSe,MUC ) ) ) * ( Max( Max( RRSe,MLU ),( MLU * RRSe ) ) + ( Max( MUR,MLU ) - Min( MLU ,CS ) ) ) )", "obj1": 0.18503937007874016, "obj2": 0.6431278445033203}], "3": [{"determining": "( ( FirstVNF_CPU_Server + CRS ) + Max( MRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,DS ) + ( RRSe + RRSe ) )", "obj1": 0.6062992125984252, "obj2": 0.28813626169404233}, {"determining": "( ( ARS + RRS ) - Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "Max( Max( CS,RMSe ),Max( RCSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS + FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server / ARS ) ) - ( ( Const / FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( RRSe - CS ) ,( MUC / MUR ) ) / ( Min( RRSe ,CS ) + ( CS / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( Const - FirstVNF_Mem ) / ( ARS * MDR ) ),( ( MRS * FirstVNF_CPU ) / ( MDR - DDR ) ) )", "choosing": "( ( Max( MUM,RRSe ) - Max( DS,MUM ) ) / Max( ( DS - RMSe ),Max( MLU,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ( Const / CRS ) ) - Min( RRS ,CRS ) )", "choosing": "Max( Max( ( RCSe - CS ),( CS * RRSe ) ),( Min( RRSe ,RMSe ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ) + ( BR - Min( FirstVNF_RAM_Server ,Const ) ) )", "choosing": "Min( ( Min( ( RMSe + RCSe ) ,( RCSe - CS ) ) + Min( ( MUC * MUC ) ,( RCSe - MUM ) ) ) ,( ( ( RRSe / CS ) + Min( MUR ,RCSe ) ) - Min( ( MUC - RRSe ) ,( RMSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * CRS ) / CRS ) - Min( ACS ,DDR ) )", "choosing": "( ( ( ( CS + MLU ) * ( DS * CS ) ) + Max( Max( MUC,DS ),Min( MUC ,MUM ) ) ) * ( ( Max( MUM,MUM ) + ( CS - CS ) ) - ( Min( RCSe ,MUR ) / Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * PN ) * ( ( FirstVNF_Mem / DDR ) * ( Const - ACS ) ) )", "choosing": "( ( MLU / CS ) + Min( Min( MLU ,RMSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( BR - RRS ),( ARS * RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( MUM * MUC ) ) ) / ( Max( ( RRSe * MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "( ( CRS - FirstVNF_CPU_Server ) - ( RRS * Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,DDR ) ) )", "choosing": "Min( ( ( Max( MUM,RCSe ) - ( RMSe / DS ) ) / ( ( CS / MUR ) - Max( CS,MLU ) ) ) ,( ( Min( RMSe ,CS ) + Min( RMSe ,MUC ) ) + ( ( RCSe / RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( ARS / FirstVNF_RAM ) / ( FirstVNF_RAM * CRS ) ),( ( BR + ACS ) + ( FirstVNF_CPU_Server / BR ) ) ) ,( Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - ( Max( FirstVNF_CPU_Server,RRS ) / ( FirstVNF_CPU_Server * BR ) ) ) )", "choosing": "Max( ( Max( Min( MLU ,MUM ),Max( DS,RRSe ) ) + DS ),( MUM + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( CRS * BR ),( CRS - ( MDR * BR ) ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * Min( Max( RRSe,RCSe ) ,( RMSe + CS ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.5521714470398198}, {"determining": "( ( ( ACS - ( ( FirstVNF_RAM / Min( BR ,FirstVNF_CPU_Server ) ) + Max( ( RRS * RRS ),FirstVNF_CPU ) ) ) + ( ARS * CRS ) ) * ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) / ( Const - RRS ) ) )", "choosing": "( ( ( MLU / MUC ) / RRSe ) / ( ( DS - MLU ) / ( RMSe + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * FirstVNF_CPU_Server ) - ( RRS * Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,FirstVNF_RAM ) ) )", "choosing": "Min( ( ( Max( MUM,RCSe ) - ( RMSe / DS ) ) / ( ( CS / MUR ) + Max( RMSe,MLU ) ) ) ,( ( Min( RMSe ,CS ) + Min( RMSe ,MUC ) ) + ( ( RCSe / RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( Const - FirstVNF_Mem ) / ( ARS * MDR ) ),( ( MRS * FirstVNF_CPU ) / ( MRS - ( FirstVNF_Mem + ACS ) ) ) )", "choosing": "( ( Max( MUM,RRSe ) - Max( DS,MUM ) ) / Max( ( MUR * MUR ),( MUC + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( Const - FirstVNF_Mem ) / ( ARS * MDR ) ),( ( MRS * FirstVNF_CPU ) / ( MRS - DDR ) ) )", "choosing": "Max( ( MUR * MUR ),( MUC + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MDR - Max( ( RRS * MRS ),FirstVNF_Mem_Server ) ) - FirstVNF_RAM_Server ) ,( PN / FirstVNF_CPU ) )", "choosing": "Min( Max( RCSe,RCSe ) ,Min( MUC ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ) + ( BR - Min( FirstVNF_RAM_Server ,Const ) ) )", "choosing": "Min( ( Min( ( RMSe + RCSe ) ,( RCSe - CS ) ) + Min( ( MUC * MUC ) ,( RCSe - MUM ) ) ) ,( ( ( RRSe / CS ) + Min( MUR ,RCSe ) ) - Min( ( MUC - RRSe ) ,( RMSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * PN ) * ( ( FirstVNF_Mem / FirstVNF_Mem_Server ) * ( BR - ACS ) ) )", "choosing": "( RCSe + Min( Max( MLU,RMSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU * PN ) * ( ( FirstVNF_Mem / DDR ) * ( Const - ACS ) ) ) - ( ( Const * FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MLU / CS ) + Min( Min( MLU ,RMSe ) ,MUM ) ) / ( Min( MUR ,CS ) + ( CS / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * PN ) * ( ( FirstVNF_Mem / DDR ) * ( Const - ACS ) ) )", "choosing": "( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( CS / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - FirstVNF_Mem_Server ) * Max( FirstVNF_RAM_Server,ARS ) ) - ( ( Const * FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU / CS ) + Min( Min( MLU ,RMSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * PN ) * ( AMS * ( Const - ACS ) ) )", "choosing": "( ( MUR * MUR ) + Min( Min( MLU ,RMSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ACS ) * ( FirstVNF_Mem + ACS ) )", "choosing": "Max( ( MUR * MLU ),( MUC + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * PN ) * ( ( FirstVNF_Mem / DDR ) * ( Const - ACS ) ) )", "choosing": "( ( MLU / CS ) + Min( Min( MLU ,RMSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR - RRS ),( DDR - RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ),( RRSe + DS ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07283464566929133, "obj2": 0.6516907075416017}, {"determining": "Min( Max( ( ( Min( MRS ,CRS ) + ( DDR * FirstVNF_CPU_Server ) ) + ( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_Mem + BR ) ) ),( ( BR + ACS ) + ( FirstVNF_CPU_Server / BR ) ) ) ,( Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU ),( FirstVNF_Mem_Server * FirstVNF_RAM ) ) - ( Max( FirstVNF_CPU_Server,RRS ) / ( FirstVNF_CPU_Server * BR ) ) ) )", "choosing": "Max( ( Max( Min( ( ( RRSe * CS ) / Min( MUC ,CS ) ) ,MUM ),( DS + RRSe ) ) + DS ),( MUM + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( ARS / FirstVNF_RAM ) / ( FirstVNF_RAM * CRS ) ),( ( BR + ACS ) + ( FirstVNF_CPU_Server / BR ) ) ) ,( Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU ),( FirstVNF_Mem_Server * FirstVNF_RAM ) ) - ( Max( FirstVNF_CPU_Server,RRS ) / ( FirstVNF_CPU_Server * BR ) ) ) )", "choosing": "( ( ( MUR + MUC ) + ( MUR + RMSe ) ) * ( ( RRSe * CS ) / Min( MUC ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( ( FirstVNF_CPU_Server - MDR ) / ( BR / DDR ) ) ) + ( BR - Min( FirstVNF_RAM_Server ,Const ) ) )", "choosing": "Min( ( Min( ( RMSe + RCSe ) ,( RCSe - CS ) ) + Min( ( MUC * MUC ) ,( RCSe - MUM ) ) ) ,RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - MDR ) / ( ( MDR - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ) + ( FirstVNF_CPU_Server - Min( FirstVNF_RAM_Server ,Const ) ) ) )", "choosing": "Min( ( MUR - MLU ) ,( RRSe / ( Min( ( RMSe + RCSe ) ,( RCSe - CS ) ) + Min( ( MUC * MUC ) ,( RCSe - MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ) + ( BR / Min( FirstVNF_RAM_Server ,Const ) ) )", "choosing": "Min( ( Min( ( RMSe + RCSe ) ,( RCSe - CS ) ) + Min( ( MUC * CS ) ,( RCSe - MUM ) ) ) ,( ( ( RRSe / CS ) + Min( MUR ,RCSe ) ) - Min( ( MUC - RRSe ) ,( RMSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( BR + ACS ) / Min( AMS ,Min( ( Max( RRS,FirstVNF_CPU_Server ) / ( RRS / FirstVNF_Mem_Server ) ) ,Min( ( Const / MRS ) ,( Const - ARS ) ) ) ) ) - Max( ( ARS * FirstVNF_Mem ),Max( PN,RRS ) ) ) ,( Max( ( ACS * AMS ),Max( FirstVNF_RAM,BR ) ) + ( ( Const * CRS ) + Max( MRS,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( Max( ( MUR / MUM ),( MUR / MUM ) ) ,MUM ),( ( MUC / CS ) * ( ( MUR - MUC ) + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR - FirstVNF_RAM_Server ) ,( PN / FirstVNF_CPU ) )", "choosing": "Min( Max( RCSe,DS ) ,Min( ( RRSe - CS ) ,( RCSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - FirstVNF_Mem_Server ) * Max( FirstVNF_RAM_Server,ARS ) ) - ( ( Const * FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( CS / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU_Server ) - ( RRS * Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,DDR ) ) )", "choosing": "Min( ( ( Max( MUM,RCSe ) - ( RMSe / DS ) ) / ( ( CS / MUR ) - Max( CS,MLU ) ) ) ,( RRSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU_Server ) - ( RRS * ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / DDR ) ) )", "choosing": "Min( ( ( Max( MUM,RCSe ) - ( RMSe / DS ) ) / ( ( CS / MUR ) - Max( CS,RCSe ) ) ) ,( ( Min( RMSe ,CS ) + Min( RMSe ,MUC ) ) + ( ( RCSe / RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU_Server ) - ( RRS * ( ( MDR - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ) + ( BR - Min( FirstVNF_RAM_Server ,Const ) ) ) ) )", "choosing": "Min( ( Min( ( Min( ( RMSe + RCSe ) ,( RCSe - CS ) ) + Min( ( MUC * MUC ) ,( RCSe - MUM ) ) ) ,( ( ( RRSe / CS ) + Min( MUR ,RCSe ) ) - Min( ( MUC - RRSe ) ,( RMSe - RMSe ) ) ) ) / ( ( CS / MUR ) - Max( CS,MLU ) ) ) ,( ( Min( RMSe ,CS ) + Min( RMSe ,MUC ) ) + ( ( RCSe / RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ) + ( BR - Min( FirstVNF_RAM_Server ,Const ) ) )", "choosing": "Min( ( Min( ( RMSe + RCSe ) ,( RCSe - CS ) ) + Min( RMSe ,( RCSe - MUM ) ) ) ,( ( ( RRSe / CS ) + Min( MUR ,RCSe ) ) - Min( ( MUC * RRSe ) ,( RMSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ) + ( BR - Min( FirstVNF_RAM_Server ,Const ) ) )", "choosing": "Min( ( ( Max( MUM,RCSe ) - ( RMSe / DS ) ) / ( ( CS / MUR ) - Max( CS,MLU ) ) ) ,( ( Min( RMSe ,CS ) + Min( RMSe ,MUC ) ) + ( ( RCSe / RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU_Server ) - ( RRS * Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,DDR ) ) )", "choosing": "Min( ( Min( ( RMSe + RCSe ) ,( RCSe - CS ) ) + Min( ( MUC * MUC ) ,( RCSe - MUM ) ) ) ,( ( ( RRSe / CS ) + Min( MUR ,RCSe ) ) - Min( ( MUC - RRSe ) ,( RMSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ( Const / CRS ) ) - Min( RRS ,CRS ) )", "choosing": "( Max( RCSe,Max( MUC,( RRSe / RRSe ) ) ) - ( RMSe + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) * AMS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Max( ( RMSe / RMSe ),MUC ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,RRSe ) ) / ( ( RCSe / DS ) / ( MUR + MUR ) ) ) )", "obj1": 0.07874015748031496, "obj2": 0.6435919474338876}, {"determining": "Max( ( MDR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( BR - RRS ),( ARS * RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( MUM * MUC ) ) ) / ( Max( ( RRSe * MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07677165354330709, "obj2": 0.6467765782165263}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Max( ( RMSe / RMSe ),MUC ),( ( MUM / RCSe ) - Min( RCSe ,MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.620322319956327}, {"determining": "( ( ( AMS - FirstVNF_Mem_Server ) * Max( FirstVNF_RAM_Server,ARS ) ) - ( ( Const * FirstVNF_RAM_Server ) * ( ( ARS + RRS ) - ( BR + FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / Min( DS ,DS ) )", "obj1": 0.15748031496062992, "obj2": 0.6199755758230499}, {"determining": "Max( ( MDR - RRS ),( DDR - RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ),( RRSe + DS ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07086614173228346, "obj2": 0.6521283652951645}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07677165354330709, "obj2": 0.6467765782165263}, {"determining": "Max( ( MDR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "( Min( ( MRS * ARS ) ,Max( AMS,FirstVNF_RAM_Server ) ) / Max( ( ( FirstVNF_RAM * PN ) + ( DDR + DDR ) ),( ( PN + MRS ) + ( AMS * FirstVNF_RAM ) ) ) )", "choosing": "( Max( RCSe,Max( MUC,( RRSe / RRSe ) ) ) - Min( MUR ,MLU ) )", "obj1": 0.047244094488188976, "obj2": 0.7379046473908856}, {"determining": "Max( ( BR - ( ( MDR - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ) + ( BR - Min( FirstVNF_RAM_Server ,Const ) ) ) ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( Min( ( Min( ( RMSe + RCSe ) ,( RCSe - CS ) ) + Min( ( MUC * MUC ) ,( RCSe - MUM ) ) ) ,( ( ( RRSe / CS ) + Min( MUR ,RCSe ) ) - Min( ( MUC - RRSe ) ,( RMSe - RMSe ) ) ) ) / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06692913385826772, "obj2": 0.6700183585403321}], "4": [{"determining": "( ( FirstVNF_CPU_Server + CRS ) + Max( MRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,DS ) + ( RRSe + RRSe ) )", "obj1": 0.6062992125984252, "obj2": 0.28813626169404233}, {"determining": "( ( ARS + RRS ) - Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "Max( Max( CS,RMSe ),Max( RCSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS + FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server / ARS ) ) - ( ( Const / FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( RRSe - CS ) ,( MUC / MUR ) ) / ( Min( RRSe ,CS ) + ( CS / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( Const - FirstVNF_Mem ) / ( ARS * MDR ) ),( ( MRS * FirstVNF_CPU ) / ( MDR - DDR ) ) )", "choosing": "( ( Max( MUM,RRSe ) - Max( DS,MUM ) ) / Max( ( DS - RMSe ),Max( MLU,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ( Const / CRS ) ) - Min( RRS ,CRS ) )", "choosing": "Max( Max( ( RCSe - CS ),( CS * RRSe ) ),( Min( RRSe ,RMSe ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ) + ( BR - Min( FirstVNF_RAM_Server ,Const ) ) )", "choosing": "Min( ( Min( ( RMSe + RCSe ) ,( RCSe - CS ) ) + Min( ( MUC * MUC ) ,( RCSe - MUM ) ) ) ,( ( ( RRSe / CS ) + Min( MUR ,RCSe ) ) - Min( ( MUC - RRSe ) ,( RMSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * CRS ) / CRS ) - Min( ACS ,DDR ) )", "choosing": "( ( ( ( CS + MLU ) * ( DS * CS ) ) + Max( Max( MUC,DS ),Min( MUC ,MUM ) ) ) * ( ( Max( MUM,MUM ) + ( CS - CS ) ) - ( Min( RCSe ,MUR ) / Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * PN ) * ( ( FirstVNF_Mem / DDR ) * ( Const - ACS ) ) )", "choosing": "( ( MLU / CS ) + Min( Min( MLU ,RMSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( BR - RRS ),( ARS * RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( MUM * MUC ) ) ) / ( Max( ( RRSe * MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "( ( CRS - FirstVNF_CPU_Server ) - ( RRS * Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,DDR ) ) )", "choosing": "Min( ( ( Max( MUM,RCSe ) - ( RMSe / DS ) ) / ( ( CS / MUR ) - Max( CS,MLU ) ) ) ,( ( Min( RMSe ,CS ) + Min( RMSe ,MUC ) ) + ( ( RCSe / RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( ARS / FirstVNF_RAM ) / ( FirstVNF_RAM * CRS ) ),( ( BR + ACS ) + ( FirstVNF_CPU_Server / BR ) ) ) ,( Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU ),( FirstVNF_Mem_Server * MDR ) ) - ( Max( FirstVNF_CPU_Server,RRS ) / ( FirstVNF_CPU_Server * BR ) ) ) )", "choosing": "Max( ( Max( Min( MLU ,MUM ),Max( DS,RRSe ) ) + DS ),( MUM + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( CRS * BR ),( CRS - ( MDR * BR ) ) )", "choosing": "( Max( ( ( DS * RCSe ) * ( MUC - CS ) ),( Max( MLU,RCSe ) / Max( RMSe,MUM ) ) ) / ( ( Max( MUM,MUM ) * ( RRSe * RMSe ) ) * Min( Max( RRSe,RCSe ) ,( RMSe + CS ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.5521714470398198}, {"determining": "( ( ( ACS - ( ( FirstVNF_RAM / Min( BR ,FirstVNF_CPU_Server ) ) + Max( ( RRS * RRS ),FirstVNF_CPU ) ) ) + ( ARS * CRS ) ) * ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) / ( Const - RRS ) ) )", "choosing": "( ( ( MLU / MUC ) / RRSe ) / ( ( DS - MLU ) / ( RMSe + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * FirstVNF_CPU_Server ) - ( RRS * Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,FirstVNF_RAM ) ) )", "choosing": "Min( ( ( Max( MUM,RCSe ) - ( RMSe / DS ) ) / ( ( CS / MUR ) + Max( RMSe,MLU ) ) ) ,( ( Min( RMSe ,CS ) + Min( RMSe ,MUC ) ) + ( ( RCSe / RMSe ) + ( MUC * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( Const - FirstVNF_Mem ) / ( ARS * MDR ) ),( ( MRS * FirstVNF_CPU ) / ( MRS - ( FirstVNF_Mem + ACS ) ) ) )", "choosing": "( ( Max( MUM,RRSe ) - Max( DS,MUM ) ) / Max( ( MUR * MUR ),( MUC + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( Const - FirstVNF_Mem ) / ( ARS * MDR ) ),( ( MRS * FirstVNF_CPU ) / ( MRS - DDR ) ) )", "choosing": "Max( ( MUR * MUR ),( MUC + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MDR - Max( ( RRS * MRS ),FirstVNF_Mem_Server ) ) - FirstVNF_RAM_Server ) ,( PN / FirstVNF_CPU ) )", "choosing": "Min( Max( RCSe,RCSe ) ,Min( MUC ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ) + ( BR - Min( FirstVNF_RAM_Server ,Const ) ) )", "choosing": "Min( ( Min( ( RMSe + RCSe ) ,( RCSe - CS ) ) + Min( ( MUC * MUC ) ,( RCSe - MUM ) ) ) ,( ( ( RRSe / CS ) + Min( MUR ,RCSe ) ) - Min( ( MUC - RRSe ) ,( RMSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * PN ) * ( ( FirstVNF_Mem / FirstVNF_Mem_Server ) * ( BR - ACS ) ) )", "choosing": "( RCSe + Min( Max( MLU,RMSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU * PN ) * ( ( FirstVNF_Mem / DDR ) * ( Const - ACS ) ) ) - ( ( Const * FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MLU / CS ) + Min( Min( MLU ,RMSe ) ,MUM ) ) / ( Min( MUR ,CS ) + ( CS / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * PN ) * ( ( FirstVNF_Mem / DDR ) * ( Const - ACS ) ) )", "choosing": "( Min( ( RRSe - CS ) ,( RCSe / MUR ) ) / ( Min( MUR ,CS ) + ( CS / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - FirstVNF_Mem_Server ) * Max( FirstVNF_RAM_Server,ARS ) ) - ( ( Const * FirstVNF_RAM_Server ) * Max( BR,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU / CS ) + Min( Min( MLU ,RMSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * PN ) * ( AMS * ( Const - ACS ) ) )", "choosing": "( ( MUR * MUR ) + Min( Min( MLU ,RMSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ACS ) * ( FirstVNF_Mem + ACS ) )", "choosing": "Max( ( MUR * MLU ),( MUC + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * PN ) * ( ( FirstVNF_Mem / DDR ) * ( Const - ACS ) ) )", "choosing": "( ( MLU / CS ) + Min( Min( MLU ,RMSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR - RRS ),( DDR - RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ),( RRSe + DS ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07283464566929133, "obj2": 0.6516907075416017}, {"determining": "Min( Max( ( ( Min( MRS ,CRS ) + ( DDR * FirstVNF_CPU_Server ) ) + ( Max( ARS,FirstVNF_Mem ) - ( FirstVNF_Mem + BR ) ) ),( ( BR + ACS ) + ( FirstVNF_CPU_Server / BR ) ) ) ,( Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU ),( FirstVNF_Mem_Server * FirstVNF_RAM ) ) - ( Max( FirstVNF_CPU_Server,RRS ) / ( FirstVNF_CPU_Server * BR ) ) ) )", "choosing": "Max( ( Max( Min( ( ( RRSe * CS ) / Min( MUC ,CS ) ) ,MUM ),( DS + RRSe ) ) + DS ),( MUM + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) * AMS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Max( ( RMSe / RMSe ),MUC ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,RRSe ) ) / ( ( RCSe / DS ) / ( MUR + MUR ) ) ) )", "obj1": 0.07874015748031496, "obj2": 0.6435919474338876}, {"determining": "Max( ( MDR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( BR - RRS ),( ARS * RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( MUM * MUC ) ) ) / ( Max( ( RRSe * MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07677165354330709, "obj2": 0.6467765782165263}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Max( ( RMSe / RMSe ),MUC ),( ( MUM / RCSe ) - Min( RCSe ,MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.620322319956327}, {"determining": "Max( ( MDR - RRS ),( DDR - RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ),( RRSe + DS ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07086614173228346, "obj2": 0.6521283652951645}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07677165354330709, "obj2": 0.6467765782165263}, {"determining": "Max( ( MDR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "( Min( ( MRS * ARS ) ,Max( AMS,FirstVNF_RAM_Server ) ) / Max( ( ( FirstVNF_RAM * PN ) + ( DDR + DDR ) ),( ( PN + MRS ) + ( AMS * FirstVNF_RAM ) ) ) )", "choosing": "( Max( RCSe,Max( MUC,( RRSe / RRSe ) ) ) - Min( MUR ,MLU ) )", "obj1": 0.047244094488188976, "obj2": 0.7379046473908856}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07677165354330709, "obj2": 0.6467765782165263}, {"determining": "Max( ( BR - ( ( MDR - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ) + ( BR - Min( ARS ,Const ) ) ) ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + ( ( FirstVNF_CPU_Server * MRS ) + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( Min( RCSe ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.6433251261758983}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07677165354330709, "obj2": 0.6467765782165263}, {"determining": "( Min( ( MRS * ARS ) ,Max( AMS,FirstVNF_RAM_Server ) ) / Max( ( ( FirstVNF_RAM * PN ) + ( DDR + DDR ) ),( ( PN + MRS ) + ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( RCSe,Max( MUC,( RRSe / RRSe ) ) ) - Min( DS ,MLU ) )", "obj1": 0.04921259842519685, "obj2": 0.7377812939314723}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Max( ( RMSe / RMSe ),MUC ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.620322319956327}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Max( ( RMSe / RMSe ),MUC ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07874015748031496, "obj2": 0.6435919474338876}, {"determining": "( Min( ( MRS * ARS ) ,Max( AMS,FirstVNF_RAM_Server ) ) / Max( ( ( FirstVNF_RAM * PN ) + ( DDR + DDR ) ),( ( PN + MRS ) + ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( RCSe,Max( Max( MUR,RCSe ),( RRSe / RRSe ) ) ) - Min( DS ,MLU ) )", "obj1": 0.051181102362204724, "obj2": 0.73426924581168}, {"determining": "( Min( ( MRS * ARS ) ,Max( AMS,FirstVNF_RAM_Server ) ) / Max( ( ( FirstVNF_RAM * PN ) + ( DDR + DDR ) ),( ( PN + MRS ) + ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( RCSe,Max( MUC,( RRSe / RRSe ) ) ) - Min( DS ,MLU ) )", "obj1": 0.04330708661417323, "obj2": 0.7384362600305238}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Max( ( RMSe / RMSe ),MUC ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07874015748031496, "obj2": 0.6435919474338876}, {"determining": "Max( ( BR - ( ( FirstVNF_CPU * PN ) * ( ( FirstVNF_Mem / DDR ) * ( Const - ACS ) ) ) ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( MLU / CS ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.1062992125984252, "obj2": 0.6166256554580668}, {"determining": "Max( ( BR - RRS ),( ( ACS - BR ) + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( ( DS * CS ) / ( ( RCSe * DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0531496062992126, "obj2": 0.6915360213754391}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07677165354330709, "obj2": 0.6467765782165263}, {"determining": "Max( ( RRS - PN ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Max( ( RMSe / RMSe ),MUC ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( ( ( MUM + RCSe ) - ( RCSe * MUC ) ) * MUR ) ) ) )", "obj1": 0.18110236220472442, "obj2": 0.5726673031317469}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + ARS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( CS * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( MDR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}], "5": [{"determining": "( ( FirstVNF_CPU_Server + CRS ) + Max( MRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,DS ) + ( RRSe + RRSe ) )", "obj1": 0.6062992125984252, "obj2": 0.28813626169404233}, {"determining": "Max( ( BR - RRS ),( ARS * RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( MUM * MUC ) ) ) / ( Max( ( RRSe * MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) * AMS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Max( ( RMSe / RMSe ),MUC ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,RRSe ) ) / ( ( RCSe / DS ) / ( MUR + MUR ) ) ) )", "obj1": 0.07874015748031496, "obj2": 0.6435919474338876}, {"determining": "Max( ( MDR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( BR - RRS ),( ARS * RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( MUM * MUC ) ) ) / ( Max( ( RRSe * MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07677165354330709, "obj2": 0.6467765782165263}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Max( ( RMSe / RMSe ),MUC ),( ( MUM / RCSe ) - Min( RCSe ,MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.620322319956327}, {"determining": "Max( ( MDR - RRS ),( DDR - RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ),( RRSe + DS ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07086614173228346, "obj2": 0.6521283652951645}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07677165354330709, "obj2": 0.6467765782165263}, {"determining": "Max( ( MDR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "( Min( ( MRS * ARS ) ,Max( AMS,FirstVNF_RAM_Server ) ) / Max( ( ( FirstVNF_RAM * PN ) + ( DDR + DDR ) ),( ( PN + MRS ) + ( AMS * FirstVNF_RAM ) ) ) )", "choosing": "( Max( RCSe,Max( MUC,( RRSe / RRSe ) ) ) - Min( MUR ,MLU ) )", "obj1": 0.047244094488188976, "obj2": 0.7379046473908856}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07677165354330709, "obj2": 0.6467765782165263}, {"determining": "Max( ( BR - ( ( MDR - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ) + ( BR - Min( ARS ,Const ) ) ) ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + ( ( FirstVNF_CPU_Server * MRS ) + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( Min( RCSe ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.6433251261758983}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07677165354330709, "obj2": 0.6467765782165263}, {"determining": "( Min( ( MRS * ARS ) ,Max( AMS,FirstVNF_RAM_Server ) ) / Max( ( ( FirstVNF_RAM * PN ) + ( DDR + DDR ) ),( ( PN + MRS ) + ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( RCSe,Max( MUC,( RRSe / RRSe ) ) ) - Min( DS ,MLU ) )", "obj1": 0.04921259842519685, "obj2": 0.7377812939314723}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Max( ( RMSe / RMSe ),MUC ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.620322319956327}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Max( ( RMSe / RMSe ),MUC ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07874015748031496, "obj2": 0.6435919474338876}, {"determining": "( Min( ( MRS * ARS ) ,Max( AMS,FirstVNF_RAM_Server ) ) / Max( ( ( FirstVNF_RAM * PN ) + ( DDR + DDR ) ),( ( PN + MRS ) + ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( RCSe,Max( Max( MUR,RCSe ),( RRSe / RRSe ) ) ) - Min( DS ,MLU ) )", "obj1": 0.051181102362204724, "obj2": 0.73426924581168}, {"determining": "( Min( ( MRS * ARS ) ,Max( AMS,FirstVNF_RAM_Server ) ) / Max( ( ( FirstVNF_RAM * PN ) + ( DDR + DDR ) ),( ( PN + MRS ) + ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( RCSe,Max( MUC,( RRSe / RRSe ) ) ) - Min( DS ,MLU ) )", "obj1": 0.04330708661417323, "obj2": 0.7384362600305238}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Max( ( RMSe / RMSe ),MUC ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07874015748031496, "obj2": 0.6435919474338876}, {"determining": "Max( ( BR - RRS ),( ( ACS - BR ) + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( ( DS * CS ) / ( ( RCSe * DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0531496062992126, "obj2": 0.6915360213754391}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07677165354330709, "obj2": 0.6467765782165263}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + ARS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( CS * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( MDR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + ( ( FirstVNF_CPU_Server * MRS ) + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( Min( RCSe ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0984251968503937, "obj2": 0.6264886345845408}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07677165354330709, "obj2": 0.6467765782165263}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07677165354330709, "obj2": 0.6467765782165263}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Max( ( RMSe / RMSe ),MUC ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),( CS + CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.620322319956327}, {"determining": "Max( ( ( FirstVNF_Mem + RRS ) - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05511811023622047, "obj2": 0.673868713812541}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07677165354330709, "obj2": 0.6467765782165263}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07677165354330709, "obj2": 0.6467765782165263}, {"determining": "Max( ( RRS - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07677165354330709, "obj2": 0.6467765782165263}, {"determining": "Max( ( MDR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( RCSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07677165354330709, "obj2": 0.6467765782165263}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07677165354330709, "obj2": 0.6467765782165263}, {"determining": "Max( ( ( RRS - MRS ) + FirstVNF_Mem_Server ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( DS / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "( Min( ( MRS * ARS ) ,Max( AMS,FirstVNF_RAM_Server ) ) / Max( ( ( FirstVNF_RAM * PN ) + ( DDR + DDR ) ),( ( PN + MRS ) + ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( RCSe,Max( Max( MUR,RCSe ),( RRSe / RRSe ) ) ) - Min( DS ,MLU ) )", "obj1": 0.051181102362204724, "obj2": 0.73426924581168}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) - RRS ),( FirstVNF_Mem + PN ) )", "choosing": "( Max( Max( ( RMSe / RMSe ),MUC ),( ( MUM / RCSe ) * ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.620322319956327}, {"determining": "Max( ( BR - RRS ),( BR - Min( FirstVNF_RAM_Server ,Const ) ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( ( DS * CS ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0531496062992126, "obj2": 0.6915360213754391}, {"determining": "Max( ( BR - ( FirstVNF_Mem + RRS ) ),( FirstVNF_Mem + ( ( FirstVNF_CPU_Server * MRS ) + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.08661417322834646, "obj2": 0.6383235188349238}, {"determining": "Max( ( MDR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( RCSe ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.6433251261758983}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + ( ( FirstVNF_CPU_Server * MRS ) + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Max( ( RMSe / RMSe ),MUC ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.620322319956327}, {"determining": "Max( ( BR - ( ( MDR - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ) + ( BR - Min( FirstVNF_RAM_Server ,Const ) ) ) ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07283464566929133, "obj2": 0.6484971663852526}, {"determining": "Max( ( BR - ( ( MDR - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ) + ( BR - Min( FirstVNF_RAM_Server ,Const ) ) ) ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07677165354330709, "obj2": 0.6467765782165263}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem - RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR + MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( RRS - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( RRSe,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Max( ( RMSe / RMSe ),MUC ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07874015748031496, "obj2": 0.6435919474338876}, {"determining": "Max( ( Min( CRS ,FirstVNF_CPU ) - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ) * ( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07677165354330709, "obj2": 0.6467765782165263}, {"determining": "Max( ( MDR - RRS ),( FirstVNF_Mem + ( ( FirstVNF_Mem / DDR ) * ( Const * ACS ) ) ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( MLU / CS ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,MUM ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.09055118110236221, "obj2": 0.6279216286742235}, {"determining": "Max( ( MDR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}], "6": [{"determining": "( ( FirstVNF_CPU_Server + CRS ) + Max( MRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,DS ) + ( RRSe + RRSe ) )", "obj1": 0.6062992125984252, "obj2": 0.28813626169404233}, {"determining": "Max( ( BR - RRS ),( ARS * RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( MUM * MUC ) ) ) / ( Max( ( RRSe * MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( MDR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( BR - RRS ),( ARS * RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( MUM * MUC ) ) ) / ( Max( ( RRSe * MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07677165354330709, "obj2": 0.6467765782165263}, {"determining": "Max( ( MDR - RRS ),( DDR - RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ),( RRSe + DS ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07086614173228346, "obj2": 0.6521283652951645}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07677165354330709, "obj2": 0.6467765782165263}, {"determining": "Max( ( MDR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "( Min( ( MRS * ARS ) ,Max( AMS,FirstVNF_RAM_Server ) ) / Max( ( ( FirstVNF_RAM * PN ) + ( DDR + DDR ) ),( ( PN + MRS ) + ( AMS * FirstVNF_RAM ) ) ) )", "choosing": "( Max( RCSe,Max( MUC,( RRSe / RRSe ) ) ) - Min( MUR ,MLU ) )", "obj1": 0.047244094488188976, "obj2": 0.7379046473908856}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07677165354330709, "obj2": 0.6467765782165263}, {"determining": "Max( ( BR - ( ( MDR - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ) + ( BR - Min( ARS ,Const ) ) ) ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07677165354330709, "obj2": 0.6467765782165263}, {"determining": "( Min( ( MRS * ARS ) ,Max( AMS,FirstVNF_RAM_Server ) ) / Max( ( ( FirstVNF_RAM * PN ) + ( DDR + DDR ) ),( ( PN + MRS ) + ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( RCSe,Max( MUC,( RRSe / RRSe ) ) ) - Min( DS ,MLU ) )", "obj1": 0.04921259842519685, "obj2": 0.7377812939314723}, {"determining": "( Min( ( MRS * ARS ) ,Max( AMS,FirstVNF_RAM_Server ) ) / Max( ( ( FirstVNF_RAM * PN ) + ( DDR + DDR ) ),( ( PN + MRS ) + ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( RCSe,Max( MUC,( RRSe / RRSe ) ) ) - Min( DS ,MLU ) )", "obj1": 0.04330708661417323, "obj2": 0.7384362600305238}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07677165354330709, "obj2": 0.6467765782165263}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + ARS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( CS * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( MDR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07677165354330709, "obj2": 0.6467765782165263}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07677165354330709, "obj2": 0.6467765782165263}, {"determining": "Max( ( MDR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( ( RRS - MRS ) + FirstVNF_Mem_Server ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( DS / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + ( ( FirstVNF_CPU_Server * MRS ) + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( BR - ( ( MDR - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ) + ( BR - Min( FirstVNF_RAM_Server ,Const ) ) ) ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07283464566929133, "obj2": 0.6484971663852526}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem - RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR + MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( RRS - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( RRSe,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( MDR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( ( Min( ( MRS * ARS ) ,Max( AMS,FirstVNF_RAM_Server ) ) / Max( ( ( FirstVNF_RAM * PN ) + ( DDR + DDR ) ),( ( PN + MRS ) + ( AMS * FirstVNF_RAM ) ) ) ) - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.051181102362204724, "obj2": 0.6800023695500561}, {"determining": "Max( ( BR - RRS ),( ARS + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( MDR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( MDR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( MDR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( BR - ( ( MDR - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ) + ( BR - Min( FirstVNF_RAM_Server ,Const ) ) ) ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( Max( Max( FirstVNF_CPU,FirstVNF_CPU ),RRS ),ACS )", "choosing": "( Max( ( ( RMSe / RMSe ) + MUC ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,RCSe ) ),( RRSe + DS ) ) - Min( RCSe ,MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05708661417322835, "obj2": 0.6664200025738994}, {"determining": "Max( ( MDR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( MDR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Max( ( RMSe / RMSe ),MUC ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0531496062992126, "obj2": 0.679154080328871}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( RCSe,Max( MUC,( RRSe / RRSe ) ) ) - Min( DS ,MLU ) )", "obj1": 0.04921259842519685, "obj2": 0.7377812939314723}, {"determining": "Max( Max( MDR,RRS ),( BR + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( Min( RCSe ,DS ) / ( MUR - MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "( Min( ( MRS * ARS ) ,Max( AMS,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),( ( PN + MRS ) + ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( RRSe / RRSe ),Max( MUC,( RRSe / RRSe ) ) ) - Min( DS ,MLU ) )", "obj1": 0.04330708661417323, "obj2": 0.7384362600305238}, {"determining": "( Min( ( MRS * ARS ) ,Max( AMS,FirstVNF_RAM_Server ) ) / Max( ( ( FirstVNF_RAM * PN ) + ( DDR + DDR ) ),( ( PN + MRS ) + ( AMS * FirstVNF_RAM ) ) ) )", "choosing": "( Max( RCSe,Max( MUC,( RRSe / RRSe ) ) ) - Min( DS ,MLU ) )", "obj1": 0.047244094488188976, "obj2": 0.7379046473908856}, {"determining": "Max( ( BR - RRS ),( MRS + ( ( FirstVNF_CPU_Server * MRS ) + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( Max( MUM,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( MDR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( MDR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + ( ( FirstVNF_CPU_Server * MRS ) + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( MDR - RRS ),BR )", "choosing": "( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05511811023622047, "obj2": 0.6728772453592108}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + ( ( FirstVNF_CPU_Server * MRS ) + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( MDR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( BR - ( ( MDR - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ) + ( BR - Min( ARS ,Const ) ) ) ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}], "7": [{"determining": "( ( FirstVNF_CPU_Server + CRS ) + Max( MRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,DS ) + ( RRSe + RRSe ) )", "obj1": 0.6062992125984252, "obj2": 0.28813626169404233}, {"determining": "Max( ( BR - RRS ),( ARS * RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( MUM * MUC ) ) ) / ( Max( ( RRSe * MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( MDR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( MDR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( BR - ( ( MDR - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ) + ( BR - Min( ARS ,Const ) ) ) ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + ARS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( CS * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( MDR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( MDR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( ( RRS - MRS ) + FirstVNF_Mem_Server ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( DS / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + ( ( FirstVNF_CPU_Server * MRS ) + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem - RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR + MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( RRS - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( RRSe,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( MDR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( ( Min( ( MRS * ARS ) ,Max( AMS,FirstVNF_RAM_Server ) ) / Max( ( ( FirstVNF_RAM * PN ) + ( DDR + DDR ) ),( ( PN + MRS ) + ( AMS * FirstVNF_RAM ) ) ) ) - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.051181102362204724, "obj2": 0.6800023695500561}, {"determining": "Max( ( BR - RRS ),( ARS + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( MDR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( MDR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( MDR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( BR - ( ( MDR - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ) + ( BR - Min( FirstVNF_RAM_Server ,Const ) ) ) ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( Max( Max( FirstVNF_CPU,FirstVNF_CPU ),RRS ),ACS )", "choosing": "( Max( ( ( RMSe / RMSe ) + MUC ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,RCSe ) ),( RRSe + DS ) ) - Min( RCSe ,MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05708661417322835, "obj2": 0.6664200025738994}, {"determining": "Max( ( MDR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( MDR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Max( ( RMSe / RMSe ),MUC ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0531496062992126, "obj2": 0.679154080328871}, {"determining": "Max( Max( MDR,RRS ),( BR + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( Min( RCSe ,DS ) / ( MUR - MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( BR - RRS ),( MRS + ( ( FirstVNF_CPU_Server * MRS ) + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( Max( MUM,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( MDR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( MDR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + ( ( FirstVNF_CPU_Server * MRS ) + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( MDR - RRS ),BR )", "choosing": "( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05511811023622047, "obj2": 0.6728772453592108}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + ( ( FirstVNF_CPU_Server * MRS ) + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( MDR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( BR - ( ( MDR - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ) + ( BR - Min( ARS ,Const ) ) ) ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( MDR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( MDR - RRS ),FirstVNF_CPU_Server )", "choosing": "( Min( Min( MUM ,RRSe ) ,Max( MUR,CS ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05511811023622047, "obj2": 0.6728772453592108}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + ( ( FirstVNF_CPU_Server * MRS ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( Min( MUM ,MUM ) / Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( MDR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem_Server + ( ( FirstVNF_CPU_Server * MRS ) + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( MLU / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + ( ( FirstVNF_CPU_Server * MRS ) + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( ( MDR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6522369620436789}, {"determining": "Max( RRS,( FirstVNF_Mem + RRS ) )", "choosing": "( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) )", "obj1": 0.04330708661417323, "obj2": 0.7086937710745637}, {"determining": "Max( ( ( RRS * MRS ) + FirstVNF_Mem_Server ),( CRS + RRS ) )", "choosing": "( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / Min( ( RCSe / DS ) ,( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "( Min( ( MRS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),( ( PN + MRS ) + ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05511811023622047, "obj2": 0.6728772453592108}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Max( ( RMSe / RMSe ),MUC ),( Max( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ),( RRSe + DS ) ) - Min( RCSe ,MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05708661417322835, "obj2": 0.6664200025738994}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( PN - ( FirstVNF_Mem + RRS ) ),( FirstVNF_Mem + DDR ) )", "choosing": "( ( MUR * MUR ) / ( Max( ( RRSe - MUC ),( CS / CS ) ) - ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.047244094488188976, "obj2": 0.7023189787010854}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem * RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),( CS / CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06692913385826772, "obj2": 0.6560380495130573}], "8": [{"determining": "( ( FirstVNF_CPU_Server + CRS ) + Max( MRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,DS ) + ( RRSe + RRSe ) )", "obj1": 0.6062992125984252, "obj2": 0.28813626169404233}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + ARS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( CS * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( ( RRS - MRS ) + FirstVNF_Mem_Server ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( DS / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( ( Min( ( MRS * ARS ) ,Max( AMS,FirstVNF_RAM_Server ) ) / Max( ( ( FirstVNF_RAM * PN ) + ( DDR + DDR ) ),( ( PN + MRS ) + ( AMS * FirstVNF_RAM ) ) ) ) - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.051181102362204724, "obj2": 0.6800023695500561}, {"determining": "Max( Max( Max( FirstVNF_CPU,FirstVNF_CPU ),RRS ),ACS )", "choosing": "( Max( ( ( RMSe / RMSe ) + MUC ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,RCSe ) ),( RRSe + DS ) ) - Min( RCSe ,MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05708661417322835, "obj2": 0.6664200025738994}, {"determining": "Max( ( MDR - RRS ),BR )", "choosing": "( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05511811023622047, "obj2": 0.6728772453592108}, {"determining": "Max( ( MDR - RRS ),FirstVNF_CPU_Server )", "choosing": "( Min( Min( MUM ,RRSe ) ,Max( MUR,CS ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05511811023622047, "obj2": 0.6728772453592108}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + ( ( FirstVNF_CPU_Server * MRS ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( Min( MUM ,MUM ) / Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( RRS,( FirstVNF_Mem + RRS ) )", "choosing": "( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) )", "obj1": 0.04330708661417323, "obj2": 0.7086937710745637}, {"determining": "Max( ( ( RRS * MRS ) + FirstVNF_Mem_Server ),( CRS + RRS ) )", "choosing": "( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / Min( ( RCSe / DS ) ,( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "( Min( ( MRS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),( ( PN + MRS ) + ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05511811023622047, "obj2": 0.6728772453592108}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Max( ( RMSe / RMSe ),MUC ),( Max( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ),( RRSe + DS ) ) - Min( RCSe ,MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05708661417322835, "obj2": 0.6664200025738994}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( PN - ( FirstVNF_Mem + RRS ) ),( FirstVNF_Mem + DDR ) )", "choosing": "( ( MUR * MUR ) / ( Max( ( RRSe - MUC ),( CS / CS ) ) - ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.047244094488188976, "obj2": 0.7023189787010854}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem * RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),( CS / CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06692913385826772, "obj2": 0.6560380495130573}, {"determining": "( ( PN - ( FirstVNF_Mem + RRS ) ) + ( MRS * FirstVNF_CPU_Server ) )", "choosing": "( MUM + ( RRSe + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - CRS ) + ( MRS * FirstVNF_CPU_Server ) )", "choosing": "( Min( MLU ,DS ) + ( RRSe + DS ) )", "obj1": 0.6437007874015748, "obj2": 0.2565505370203616}, {"determining": "Max( RRS,Min( FirstVNF_Mem ,RRS ) )", "choosing": "( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( DS / ( RMSe / RMSe ) ) / MUC ) ) )", "obj1": 0.34448818897637795, "obj2": 0.4544388385723386}, {"determining": "Max( RRS,( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Max( ( RMSe / RMSe ),MUC ),( Max( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ),( RRSe + DS ) ) - Min( RCSe ,MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05708661417322835, "obj2": 0.6664200025738994}, {"determining": "Max( ( BR - RRS ),Min( FirstVNF_Mem ,RRS ) )", "choosing": "( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) )", "obj1": 0.04330708661417323, "obj2": 0.7086937710745637}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06692913385826772, "obj2": 0.6560380495130573}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( MDR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ) / Max( ( RRSe - MUC ),Min( CS ,CS ) ) )", "obj1": 0.33267716535433073, "obj2": 0.46783842110398205}, {"determining": "Max( ( MDR - RRS ),( Max( ( MDR - RRS ),BR ) + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / CS )", "obj1": 0.281496062992126, "obj2": 0.49703787756529827}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Max( ( RMSe / RMSe ),MUC ),( Max( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ),( RRSe + DS ) ) - Min( RCSe ,MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05708661417322835, "obj2": 0.6664200025738994}, {"determining": "Max( Max( MDR,RRS ),( BR + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( Min( RCSe ,DS ) / ( MUR - MUR ) ) ) )", "obj1": 0.31299212598425197, "obj2": 0.46937384067667814}, {"determining": "Max( ( MDR - RRS ),RRS )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07480314960629922, "obj2": 0.6400781045130222}, {"determining": "Min( ( ( Min( ( Min( Min( ( PN / FirstVNF_RAM ) ,Max( FirstVNF_RAM,BR ) ) ,Max( Min( ARS ,FirstVNF_CPU ),Min( FirstVNF_Mem ,BR ) ) ) - Max( ( ( CRS / MDR ) / ( FirstVNF_CPU_Server + AMS ) ),( Min( MDR ,RRS ) * ( MDR * FirstVNF_CPU_Server ) ) ) ) ,( ( Max( ( FirstVNF_Mem_Server - Const ),( PN / ACS ) ) / Min( ( FirstVNF_RAM_Server * CRS ) ,( ARS * DDR ) ) ) - ( Min( ( MRS + ARS ) ,( CRS / FirstVNF_RAM_Server ) ) - ( ( Const - BR ) - ( DDR + AMS ) ) ) ) ) + ( ( ( ( ( FirstVNF_Mem + RRS ) - ( FirstVNF_Mem / CRS ) ) / ( Min( FirstVNF_Mem ,RRS ) - ( BR + FirstVNF_RAM ) ) ) + Max( ( Min( AMS ,FirstVNF_Mem ) + ( MDR / RRS ) ),Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ,( ARS - MDR ) ) ) ) / ( ( ( ( DDR * AMS ) * Max( Const,FirstVNF_CPU ) ) - ( ( AMS / PN ) / ( RRS / PN ) ) ) - ( ( Max( RRS,AMS ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( FirstVNF_Mem * Const ) ) ) ) ) ) / ( ( ( ( Min( ( MDR / Const ) ,( FirstVNF_CPU_Server + RRS ) ) / ( ( AMS * FirstVNF_Mem_Server ) / ( MDR + FirstVNF_CPU_Server ) ) ) + ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) + ( RRS + Const ) ) / ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) + Max( ACS,FirstVNF_CPU ) ) ) ) * ( ( ( Min( ARS ,CRS ) + Min( BR ,PN ) ) + ( ( MDR - DDR ) - ( CRS - Const ) ) ) / ( ( Min( FirstVNF_CPU ,AMS ) - ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) - ( Max( FirstVNF_RAM,CRS ) - Max( FirstVNF_CPU_Server,AMS ) ) ) ) ) * ( ( Min( Max( ( ACS / PN ),( FirstVNF_Mem_Server + BR ) ) ,( ( FirstVNF_Mem_Server - FirstVNF_RAM ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + Min( ( Min( Const ,MDR ) + ( DDR - FirstVNF_Mem ) ) ,( ( CRS + MDR ) + ( ACS * FirstVNF_Mem_Server ) ) ) ) + Max( ( Min( ( FirstVNF_Mem_Server / PN ) ,( CRS - AMS ) ) - ( Max( FirstVNF_Mem,PN ) - Max( FirstVNF_CPU,ARS ) ) ),Max( ( ( DDR - AMS ) - Max( BR,AMS ) ),( Min( AMS ,AMS ) + ( FirstVNF_Mem_Server * MDR ) ) ) ) ) ) ) ,Min( ( ( ( Min( ( Max( DDR,FirstVNF_Mem ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ,( Max( ACS,ARS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) * ( ( ( MDR / FirstVNF_RAM ) * Min( DDR ,PN ) ) + ( ( MDR + DDR ) + ( AMS - Const ) ) ) ) - Max( ( Max( ( ACS * DDR ),Min( FirstVNF_RAM ,Const ) ) / ( ( ACS / RRS ) - ( CRS / ACS ) ) ),( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * Min( MRS ,DDR ) ) / Max( ( FirstVNF_CPU_Server + ARS ),( Const - FirstVNF_RAM ) ) ) ) ) / ( ( Max( Max( ( FirstVNF_CPU - MRS ),Max( ACS,FirstVNF_CPU ) ),Min( Max( MDR,FirstVNF_RAM_Server ) ,( DDR + FirstVNF_CPU ) ) ) * ( Max( ( ARS - BR ),( CRS * Const ) ) / Max( ( FirstVNF_RAM_Server / Const ),Min( MDR ,FirstVNF_Mem_Server ) ) ) ) - Max( ( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,Min( CRS ,BR ) ) - Min( ( Const + FirstVNF_CPU ) ,( FirstVNF_RAM_Server * FirstVNF_RAM ) ) ),( Min( Min( AMS ,DDR ) ,Max( BR,FirstVNF_CPU_Server ) ) / ( ( MRS / Const ) + ( FirstVNF_CPU - AMS ) ) ) ) ) ) ,Min( ( ( ( ( ( DDR + RRS ) / ( FirstVNF_Mem + RRS ) ) - Min( ( CRS - MRS ) ,( MRS + FirstVNF_RAM_Server ) ) ) / Min( ( ( DDR / ARS ) + ( ACS * FirstVNF_RAM_Server ) ) ,( ( CRS - FirstVNF_Mem_Server ) + ( AMS * FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( DDR * Const ) - ( ARS / CRS ) ) + Max( ( AMS - FirstVNF_CPU ),( FirstVNF_Mem_Server * BR ) ) ) * ( ( Max( BR,ACS ) / ( Const + FirstVNF_CPU ) ) * Max( ( ACS + FirstVNF_RAM_Server ),Max( PN,AMS ) ) ) ) ) ,Max( Min( ( ( ( AMS * RRS ) / ( DDR - RRS ) ) / ( ( Const - BR ) + ( DDR + Const ) ) ) ,( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server + ARS ) ) - Max( ( FirstVNF_CPU_Server - FirstVNF_Mem ),( BR - CRS ) ) ) ),( ( ( ( PN - MDR ) - ( FirstVNF_Mem_Server - Const ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) * Min( FirstVNF_Mem ,PN ) ) ) / Min( Max( ( ACS - Const ),( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ,( Max( AMS,Const ) / Max( AMS,FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( Min( Max( Min( ( ( Min( ( CS + MLU ) ,( RMSe + RCSe ) ) / ( ( CS + RMSe ) - Min( MUR ,RRSe ) ) ) / ( Max( Max( RCSe,RRSe ),( MUM + RRSe ) ) * ( Min( RRSe ,CS ) + ( DS - MUR ) ) ) ) ,( ( ( ( MLU / MUR ) + ( RRSe * CS ) ) - Max( ( RCSe * RRSe ),( CS - CS ) ) ) + ( Min( ( MUM * RRSe ) ,( MLU - RRSe ) ) * ( ( RCSe / MLU ) * ( DS * RRSe ) ) ) ) ),Max( ( ( ( ( CS / MUC ) - ( RCSe * MUC ) ) * ( Min( RRSe ,RRSe ) * ( MLU - RRSe ) ) ) - Min( ( ( RMSe / DS ) * ( MUC - RCSe ) ) ,( ( CS * MUR ) / ( MUR / RCSe ) ) ) ),( ( ( ( DS + RMSe ) - Max( RRSe,RCSe ) ) / ( ( CS + DS ) * ( MLU / DS ) ) ) + Min( Min( ( RRSe * MLU ) ,( RMSe * MUR ) ) ,( ( MUR + RCSe ) / ( MUM - RCSe ) ) ) ) ) ) ,Min( ( ( Max( ( Min( CS ,RMSe ) + Min( RCSe ,CS ) ),Max( Min( MUR ,MUC ),( MUM - MUC ) ) ) * ( ( Max( RRSe,MUR ) * ( MUC + CS ) ) / Max( ( MUM - MUM ),( MUR + MLU ) ) ) ) + ( Max( ( Min( MUR ,RMSe ) / ( RMSe + CS ) ),Max( ( DS / RCSe ),( CS + MLU ) ) ) - ( Min( Max( CS,RCSe ) ,Min( MUR ,MUM ) ) + ( Max( RRSe,RMSe ) + Min( RCSe ,MLU ) ) ) ) ) ,( Max( ( ( ( MUM - RMSe ) + ( MLU / MUR ) ) + Max( ( CS * RCSe ),( MLU - RMSe ) ) ),( ( Max( DS,MUM ) * ( MUM * CS ) ) + ( ( CS + MUM ) / ( DS / RCSe ) ) ) ) - Min( ( Max( ( RMSe + RRSe ),Min( DS ,RCSe ) ) + Max( ( RMSe * CS ),Min( DS ,MUM ) ) ) ,( Min( ( MUC / RRSe ) ,( DS + RRSe ) ) - Min( Min( RRSe ,RMSe ) ,( RRSe / MUR ) ) ) ) ) ) ) - Min( ( Min( ( ( Max( ( RRSe / MUR ),( MUC + RCSe ) ) * Max( ( RCSe / MUM ),Min( RCSe ,CS ) ) ) - ( ( Min( MUC ,RCSe ) + ( MLU - RRSe ) ) / ( ( RMSe - CS ) * Min( RRSe ,MUC ) ) ) ) ,( Min( ( Max( DS,MUR ) / Max( MUC,DS ) ) ,( ( CS - RCSe ) - Min( MUC ,CS ) ) ) / Max( ( ( RRSe - MUR ) - Max( RMSe,MUR ) ),( ( MLU - RRSe ) / ( RRSe / RMSe ) ) ) ) ) + ( ( Max( ( ( RCSe / DS ) - ( MUC / CS ) ),Max( ( RRSe * MLU ),Min( RRSe ,CS ) ) ) - Min( ( ( RRSe * MLU ) / ( MUR * DS ) ) ,( ( CS * CS ) * Min( RCSe ,MUM ) ) ) ) * Max( ( ( ( RRSe + MLU ) * ( RMSe - RMSe ) ) / Min( Min( DS ,MUM ) ,( MUC - DS ) ) ),( Max( Max( MUR,RRSe ),( RCSe + DS ) ) * ( ( CS - MLU ) + ( CS * DS ) ) ) ) ) ) ,( ( Max( ( Min( ( MUR * DS ) ,Min( MUR ,MUR ) ) - ( ( CS * RCSe ) + ( RCSe / RMSe ) ) ),Max( ( Max( RRSe,DS ) + Min( RCSe ,CS ) ),Min( ( MUR / RMSe ) ,Min( DS ,CS ) ) ) ) / Min( Max( ( ( MLU / MUC ) * ( MUR + MUM ) ),Max( ( MUR - RMSe ),Min( MLU ,MUM ) ) ) ,( Max( ( CS + RRSe ),Max( MUC,MUC ) ) - ( ( DS * DS ) - ( RCSe / MUC ) ) ) ) ) / ( Min( Max( ( ( MUM / RMSe ) / ( RCSe + RRSe ) ),Max( ( MUM + DS ),( DS * MLU ) ) ) ,( ( ( MUM - MUM ) * ( CS * CS ) ) + ( ( DS - MUR ) - ( DS - MUR ) ) ) ) / Min( Min( ( ( MUR + RMSe ) / ( MUC - MUM ) ) ,( ( RMSe / RMSe ) - ( MUM * MUM ) ) ) ,( ( ( RRSe / RRSe ) + Min( MUM ,MUR ) ) * Min( ( MUM / MUM ) ,Min( MUR ,MUM ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) - RRS ),RRS )", "choosing": "( Max( Max( ( RMSe / RMSe ),MUC ),( Max( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ),( RRSe + DS ) ) - Min( RCSe ,MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05708661417322835, "obj2": 0.6664200025738994}, {"determining": "Max( MDR,( FirstVNF_Mem + FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( ( RMSe / RMSe ),MUC ),( Max( Min( Min( MUM ,MUM ) ,( MUR + ( ( RCSe / DS ) / ( MUR + MUR ) ) ) ),( RRSe + DS ) ) - Min( RCSe ,MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05708661417322835, "obj2": 0.6664200025738994}, {"determining": "( ( DDR * AMS ) - ( AMS + Max( FirstVNF_CPU_Server,BR ) ) )", "choosing": "Min( ( RMSe / MUR ) ,Min( CS ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( RRS * MRS ) + FirstVNF_Mem_Server ) - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.09645669291338582, "obj2": 0.6247118973685353}, {"determining": "Max( ( MDR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( BR - ( ( MDR - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ) + ( BR - Min( ARS ,Const ) ) ) ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( RMSe / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) )", "obj1": 0.6476377952755905, "obj2": 0.2556392048652763}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.09251968503937008, "obj2": 0.6289753820752321}, {"determining": "Max( ( MDR - RRS ),Min( FirstVNF_Mem ,RRS ) )", "choosing": "( Max( Max( ( RMSe / RMSe ),MUC ),( Max( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ),( RRSe + DS ) ) - Min( RCSe ,MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * RMSe ) ) ) )", "obj1": 0.05708661417322835, "obj2": 0.6664200025738994}, {"determining": "Max( ( BR - RRS ),Max( ( MDR - ( FirstVNF_Mem + RRS ) ),( FirstVNF_Mem + RRS ) ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / Max( ( RRSe - MUC ),Min( CS ,CS ) ) ) / ( MUR * MUR ) ) ) )", "obj1": 0.23818897637795275, "obj2": 0.5085196710646251}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( ( MUR * MUR ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.047244094488188976, "obj2": 0.7023189787010854}, {"determining": "Max( ( BR - RRS ),( ARS + RRS ) )", "choosing": "( Min( MLU ,DS ) + ( RRSe + DS ) )", "obj1": 0.6437007874015748, "obj2": 0.2565505370203616}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + ( ( FirstVNF_CPU_Server * MRS ) + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "( Min( ( MRS * ARS ) ,Max( AMS,FirstVNF_RAM_Server ) ) / ( BR - RRS ) )", "choosing": "( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( ( ( MUM / RCSe ) - ( RCSe * MUC ) ) / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.2106299212598425, "obj2": 0.6002297597709629}, {"determining": "Max( ( BR - RRS ),( MDR - ( FirstVNF_Mem + RRS ) ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( ( MUR * MUR ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) )", "obj1": 0.5787401574803149, "obj2": 0.3775212082461897}, {"determining": "Max( ( FirstVNF_Mem + RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( MUR * MUR ) ) ) )", "obj1": 0.21456692913385828, "obj2": 0.5264051597973318}, {"determining": "( Max( ( ( RRS * MRS ) + FirstVNF_Mem_Server ),( FirstVNF_Mem + RRS ) ) / Max( ( PN + MRS ),( ( PN + MRS ) + ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ) / ( Max( ( ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0531496062992126, "obj2": 0.6769062343329365}, {"determining": "Max( ( ( RRS * MRS ) + FirstVNF_Mem_Server ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.08267716535433071, "obj2": 0.6369742206893773}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) - RRS ),RRS )", "choosing": "( Max( Max( ( RMSe / RMSe ),MUC ),( Max( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ),( RRSe + DS ) ) - Min( RCSe ,MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05708661417322835, "obj2": 0.6664200025738994}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6466512996938356}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( BR - RRS ),( ARS * RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,MLU ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.6220208910549331}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem * RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06692913385826772, "obj2": 0.6560380495130573}], "9": [{"determining": "( ( FirstVNF_CPU_Server + CRS ) + Max( MRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,DS ) + ( RRSe + RRSe ) )", "obj1": 0.6062992125984252, "obj2": 0.28813626169404233}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + ARS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( CS * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( ( RRS - MRS ) + FirstVNF_Mem_Server ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( DS / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( ( Min( ( MRS * ARS ) ,Max( AMS,FirstVNF_RAM_Server ) ) / Max( ( ( FirstVNF_RAM * PN ) + ( DDR + DDR ) ),( ( PN + MRS ) + ( AMS * FirstVNF_RAM ) ) ) ) - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.051181102362204724, "obj2": 0.6800023695500561}, {"determining": "Max( Max( Max( FirstVNF_CPU,FirstVNF_CPU ),RRS ),ACS )", "choosing": "( Max( ( ( RMSe / RMSe ) + MUC ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,RCSe ) ),( RRSe + DS ) ) - Min( RCSe ,MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05708661417322835, "obj2": 0.6664200025738994}, {"determining": "Max( ( MDR - RRS ),BR )", "choosing": "( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05511811023622047, "obj2": 0.6728772453592108}, {"determining": "Max( ( MDR - RRS ),FirstVNF_CPU_Server )", "choosing": "( Min( Min( MUM ,RRSe ) ,Max( MUR,CS ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05511811023622047, "obj2": 0.6728772453592108}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + ( ( FirstVNF_CPU_Server * MRS ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( Min( MUM ,MUM ) / Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( RRS,( FirstVNF_Mem + RRS ) )", "choosing": "( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) )", "obj1": 0.04330708661417323, "obj2": 0.7086937710745637}, {"determining": "Max( ( ( RRS * MRS ) + FirstVNF_Mem_Server ),( CRS + RRS ) )", "choosing": "( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / Min( ( RCSe / DS ) ,( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "( Min( ( MRS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),( ( PN + MRS ) + ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05511811023622047, "obj2": 0.6728772453592108}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Max( ( RMSe / RMSe ),MUC ),( Max( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ),( RRSe + DS ) ) - Min( RCSe ,MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05708661417322835, "obj2": 0.6664200025738994}, {"determining": "Max( ( PN - ( FirstVNF_Mem + RRS ) ),( FirstVNF_Mem + DDR ) )", "choosing": "( ( MUR * MUR ) / ( Max( ( RRSe - MUC ),( CS / CS ) ) - ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.047244094488188976, "obj2": 0.7023189787010854}, {"determining": "Max( RRS,( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Max( ( RMSe / RMSe ),MUC ),( Max( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ),( RRSe + DS ) ) - Min( RCSe ,MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05708661417322835, "obj2": 0.6664200025738994}, {"determining": "Max( ( BR - RRS ),Min( FirstVNF_Mem ,RRS ) )", "choosing": "( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) )", "obj1": 0.04330708661417323, "obj2": 0.7086937710745637}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Max( ( RMSe / RMSe ),MUC ),( Max( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ),( RRSe + DS ) ) - Min( RCSe ,MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05708661417322835, "obj2": 0.6664200025738994}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) - RRS ),RRS )", "choosing": "( Max( Max( ( RMSe / RMSe ),MUC ),( Max( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ),( RRSe + DS ) ) - Min( RCSe ,MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05708661417322835, "obj2": 0.6664200025738994}, {"determining": "Max( MDR,( FirstVNF_Mem + FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( ( RMSe / RMSe ),MUC ),( Max( Min( Min( MUM ,MUM ) ,( MUR + ( ( RCSe / DS ) / ( MUR + MUR ) ) ) ),( RRSe + DS ) ) - Min( RCSe ,MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05708661417322835, "obj2": 0.6664200025738994}, {"determining": "Max( ( MDR - RRS ),Min( FirstVNF_Mem ,RRS ) )", "choosing": "( Max( Max( ( RMSe / RMSe ),MUC ),( Max( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ),( RRSe + DS ) ) - Min( RCSe ,MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * RMSe ) ) ) )", "obj1": 0.05708661417322835, "obj2": 0.6664200025738994}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( ( MUR * MUR ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.047244094488188976, "obj2": 0.7023189787010854}, {"determining": "( Max( ( ( RRS * MRS ) + FirstVNF_Mem_Server ),( FirstVNF_Mem + RRS ) ) / Max( ( PN + MRS ),( ( PN + MRS ) + ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ) / ( Max( ( ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0531496062992126, "obj2": 0.6769062343329365}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) - RRS ),RRS )", "choosing": "( Max( Max( ( RMSe / RMSe ),MUC ),( Max( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ),( RRSe + DS ) ) - Min( RCSe ,MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05708661417322835, "obj2": 0.6664200025738994}, {"determining": "( Max( ( ( RRS * MRS ) + FirstVNF_Mem_Server ),( FirstVNF_Mem + RRS ) ) / ( FirstVNF_Mem + RRS ) )", "choosing": "( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ) / ( Max( ( ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( CS / ( MUR * MUR ) ) ) - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0531496062992126, "obj2": 0.6769062343329365}, {"determining": "( Max( ( ( RRS * DDR ) + CRS ),( FirstVNF_Mem + RRS ) ) / Max( ( PN + MRS ),( ( PN + MRS ) + ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ) / ( Max( ( ( Max( ( RRSe * MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) - MUC ),Min( CS ,MUC ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0531496062992126, "obj2": 0.6769062343329365}, {"determining": "( ( PN - CRS ) + ( MRS * FirstVNF_CPU_Server ) )", "choosing": "( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ) / ( Max( ( ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.0531496062992126, "obj2": 0.6769062343329365}, {"determining": "Max( Min( BR ,RRS ),( BR + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR / MUR ) ) ) ) ),Min( ( MUM / RCSe ) ,( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.6585736687460568}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem * RRS ) )", "choosing": "( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05511811023622047, "obj2": 0.6728772453592108}, {"determining": "Max( RRS,Max( ( ( RRS * MRS ) + FirstVNF_Mem_Server ),( FirstVNF_Mem + RRS ) ) )", "choosing": "( Max( Max( ( RMSe / RMSe ),MUC ),( Max( Min( Min( MUM ,MUM ) ,( CS + RCSe ) ),( RRSe + DS ) ) - Min( RCSe ,MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05708661417322835, "obj2": 0.6664200025738994}, {"determining": "Max( ( ( RRS * MRS ) + FirstVNF_Mem_Server ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Max( ( RMSe / RMSe ),MUC ),( Max( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ),( RRSe + DS ) ) - Min( RCSe ,MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05708661417322835, "obj2": 0.6664200025738994}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) ) ) )", "choosing": "( Max( Max( ( RMSe / RMSe ),MUC ),( Max( Min( Min( MUM ,Min( CS ,CS ) ) ,( MUR + RCSe ) ),( RRSe + DS ) ) - Min( RCSe ,MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05708661417322835, "obj2": 0.6664200025738994}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Max( ( RMSe / RMSe ),MUC ),( Max( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ),( RRSe + DS ) ) - Min( RCSe ,MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05708661417322835, "obj2": 0.6664200025738994}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem * RRS ) )", "choosing": "( Max( Max( ( RMSe / RMSe ),MUC ),( Max( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ),( RRSe + DS ) ) - Min( RCSe ,MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05708661417322835, "obj2": 0.6664200025738994}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Max( ( RMSe / RMSe ),MUC ),( Max( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ),( RRSe + DS ) ) - Min( RCSe ,MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05708661417322835, "obj2": 0.6664200025738994}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) - RRS ),RRS )", "choosing": "( Max( Max( ( RMSe / RMSe ),MUC ),( Max( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ),( RRSe + DS ) ) - Min( RCSe ,MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05708661417322835, "obj2": 0.6664200025738994}, {"determining": "Max( MDR,( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Max( ( RMSe / RMSe ),MUC ),( Max( Min( Min( MUM ,MUM ) ,( MUR + ( ( RRSe / DS ) / ( MUR * MUR ) ) ) ),( RRSe + DS ) ) - Min( RCSe ,MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05708661417322835, "obj2": 0.6664200025738994}, {"determining": "Max( RRS,( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Max( ( RMSe / RMSe ),MUC ),( Max( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ),( RRSe + DS ) ) - Min( RCSe ,MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05708661417322835, "obj2": 0.6664200025738994}, {"determining": "Max( MDR,( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Max( ( RMSe / RMSe ),MUC ),( Max( Min( Min( MUM ,MUM ) ,( MUR + ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),( RRSe + DS ) ) - Min( RCSe ,MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05708661417322835, "obj2": 0.6664200025738994}, {"determining": "Max( ( BR - ARS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Min( RCSe ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) )", "obj1": 0.04330708661417323, "obj2": 0.7086937710745637}, {"determining": "Max( ( MDR - ( FirstVNF_Mem + RRS ) ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Max( ( RMSe / RMSe ),MUC ),( Max( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ),( RRSe + DS ) ) - Min( RCSe ,MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05708661417322835, "obj2": 0.6664200025738994}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Max( ( RMSe / RMSe ),MUC ),( Max( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ),( RRSe + DS ) ) - Min( RCSe ,MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05708661417322835, "obj2": 0.6664200025738994}, {"determining": "Max( ( Min( ( MDR - RRS ) ,FirstVNF_CPU ) - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Max( ( RMSe / RMSe ),MUC ),( Max( ( RRSe - MUC ),Min( CS ,CS ) ) - Min( RCSe ,MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05708661417322835, "obj2": 0.6664200025738994}, {"determining": "Max( ( MDR - RRS ),BR )", "choosing": "( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05511811023622047, "obj2": 0.6728772453592108}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Max( ( RMSe / RMSe ),MUC ),( Max( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ),( RRSe + DS ) ) - Min( RCSe ,MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05708661417322835, "obj2": 0.6664200025738994}, {"determining": "Max( ( MDR - ( FirstVNF_Mem + RRS ) ),Max( ( MDR - RRS ),BR ) )", "choosing": "( ( MUR * MUR ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( RRSe * MUR ) ) ) )", "obj1": 0.045275590551181105, "obj2": 0.7035010707642236}, {"determining": "Max( ( MDR - RRS ),( BR + RRS ) )", "choosing": "( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05511811023622047, "obj2": 0.6728772453592108}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + Max( ( BR - RRS ),( ARS + RRS ) ) ) )", "choosing": "( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / Min( MLU ,DS ) ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04921259842519685, "obj2": 0.6901463577623292}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) )", "obj1": 0.04330708661417323, "obj2": 0.7086937710745637}, {"determining": "Max( RRS,( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Max( ( RMSe / RMSe ),MUC ),( Max( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ),( RRSe + DS ) ) - Min( RCSe ,MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05708661417322835, "obj2": 0.6664200025738994}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) - RRS ),RRS )", "choosing": "( Max( Max( ( RMSe / RMSe ),MUC ),( Max( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ),( RRSe + DS ) ) - Min( RCSe ,MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05708661417322835, "obj2": 0.6664200025738994}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Max( ( RMSe / RMSe ),MUC ),( Max( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ),( RRSe + DS ) ) - Min( RCSe ,MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05708661417322835, "obj2": 0.6664200025738994}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) - RRS ),RRS )", "choosing": "( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) )", "obj1": 0.04330708661417323, "obj2": 0.7086937710745637}], "10": [{"determining": "( ( FirstVNF_CPU_Server + CRS ) + Max( MRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,DS ) + ( RRSe + RRSe ) )", "obj1": 0.6062992125984252, "obj2": 0.28813626169404233}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + ARS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( CS * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( ( RRS - MRS ) + FirstVNF_Mem_Server ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( DS / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + ( ( FirstVNF_CPU_Server * MRS ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( Min( MUM ,MUM ) / Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( ( RRS * MRS ) + FirstVNF_Mem_Server ),( CRS + RRS ) )", "choosing": "( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / Min( ( RCSe / DS ) ,( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( PN - ( FirstVNF_Mem + RRS ) ),( FirstVNF_Mem + DDR ) )", "choosing": "( ( MUR * MUR ) / ( Max( ( RRSe - MUC ),( CS / CS ) ) - ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.047244094488188976, "obj2": 0.7023189787010854}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( ( MUR * MUR ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.047244094488188976, "obj2": 0.7023189787010854}, {"determining": "Max( Min( BR ,RRS ),( BR + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR / MUR ) ) ) ) ),Min( ( MUM / RCSe ) ,( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.6585736687460568}, {"determining": "Max( ( MDR - ( FirstVNF_Mem + RRS ) ),Max( ( MDR - RRS ),BR ) )", "choosing": "( ( MUR * MUR ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( RRSe * MUR ) ) ) )", "obj1": 0.045275590551181105, "obj2": 0.7035010707642236}, {"determining": "Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),BR )", "choosing": "( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ) / ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) )", "obj1": 0.5374015748031497, "obj2": 0.39305223958410834}, {"determining": "( Max( ( ( RRS * MRS ) + FirstVNF_Mem_Server ),( FirstVNF_Mem + RRS ) ) / FirstVNF_CPU )", "choosing": "( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ) / ( Max( ( ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / Max( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ),( RRSe + DS ) ) ) - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05708661417322835, "obj2": 0.6664120078323805}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + ( ( BR - RRS ) * Max( ARS,RRS ) ) ) )", "choosing": "( Max( ( ( RMSe / RMSe ) / MUC ),( Max( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ),( RRSe + DS ) ) - Min( RCSe ,MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.09055118110236221, "obj2": 0.634878612252216}, {"determining": "Max( ( Max( FirstVNF_CPU,FirstVNF_CPU ) - RRS ),( Max( ( ( RRS * MRS ) + FirstVNF_Mem_Server ),( FirstVNF_Mem + RRS ) ) / Max( ( PN + MRS ),( ( PN + MRS ) + ( Const * FirstVNF_RAM ) ) ) ) )", "choosing": "( ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.33858267716535434, "obj2": 0.5148659930096381}, {"determining": "( ( ( ( ( ( ( ( RRS * FirstVNF_Mem_Server ) / Max( FirstVNF_RAM,FirstVNF_CPU ) ) - ( ( MRS - FirstVNF_RAM_Server ) * Min( DDR ,FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_Mem + BR ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) * ( Min( AMS ,MDR ) + ( FirstVNF_RAM_Server / ARS ) ) ) ) + Max( ( Min( Min( MRS ,ACS ) ,( MDR * PN ) ) + ( Min( DDR ,FirstVNF_CPU_Server ) / Max( ARS,AMS ) ) ),Max( ( ( FirstVNF_RAM_Server * DDR ) * ( FirstVNF_RAM_Server / DDR ) ),( ( FirstVNF_Mem / BR ) - ( RRS + ACS ) ) ) ) ) / Max( Min( Max( Min( Max( DDR,CRS ) ,( AMS + MDR ) ),( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,MRS ) ) ) ,( ( ( DDR * MRS ) * ( FirstVNF_CPU + DDR ) ) / ( Max( DDR,FirstVNF_CPU ) * ( PN * MRS ) ) ) ),( ( Min( ( MDR / FirstVNF_RAM_Server ) ,( FirstVNF_Mem + BR ) ) + ( ( FirstVNF_Mem * MRS ) + ( MDR + MRS ) ) ) * ( ( ( DDR + RRS ) + ( MDR / FirstVNF_RAM_Server ) ) * Max( Min( PN ,PN ),Max( FirstVNF_CPU,Const ) ) ) ) ) ) + Min( ( ( ( ( ( AMS - FirstVNF_CPU ) - ( FirstVNF_RAM / DDR ) ) - Min( ( BR / FirstVNF_RAM_Server ) ,Min( ACS ,BR ) ) ) + ( Min( ( FirstVNF_Mem / MRS ) ,( FirstVNF_Mem / FirstVNF_RAM_Server ) ) + Min( Min( DDR ,FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) ) + ( ( ( ( Const / MDR ) / Min( FirstVNF_CPU_Server ,ARS ) ) * Min( ( ACS + ACS ) ,( Const / FirstVNF_Mem ) ) ) * Min( ( ( MDR - FirstVNF_RAM ) + ( ACS * FirstVNF_RAM ) ) ,( Max( FirstVNF_RAM_Server,AMS ) * ( PN / FirstVNF_Mem ) ) ) ) ) ,( ( ( ( Min( FirstVNF_RAM ,DDR ) * ( MRS / FirstVNF_RAM_Server ) ) / ( Min( RRS ,Const ) / ( FirstVNF_CPU + ACS ) ) ) + ( Min( Min( MRS ,AMS ) ,Min( FirstVNF_CPU ,ARS ) ) * Max( Max( RRS,DDR ),Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) * ( Min( ( ( ACS - FirstVNF_CPU_Server ) / ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ,Min( ( DDR + FirstVNF_CPU ) ,Max( FirstVNF_CPU,RRS ) ) ) - ( ( ( Const - FirstVNF_CPU ) * ( FirstVNF_CPU_Server + BR ) ) / ( ( FirstVNF_RAM_Server / RRS ) - ( MDR * RRS ) ) ) ) ) ) ) * ( ( ( Min( Max( ( Max( MDR,ARS ) + Min( ARS ,MDR ) ),( ( Const - PN ) + ( FirstVNF_RAM + ARS ) ) ) ,Max( ( Min( CRS ,RRS ) / ( FirstVNF_Mem_Server * RRS ) ),( ( DDR - RRS ) / Min( RRS ,CRS ) ) ) ) * ( ( Min( ( FirstVNF_RAM_Server + BR ) ,( BR - AMS ) ) - ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server * BR ) ) ) + ( Max( ( AMS * RRS ),( AMS * DDR ) ) + ( ( MRS - FirstVNF_Mem ) - Min( FirstVNF_CPU_Server ,BR ) ) ) ) ) + ( ( ( ( Min( RRS ,FirstVNF_Mem ) / Min( FirstVNF_Mem ,CRS ) ) + ( ( Const + RRS ) * ( MDR * FirstVNF_CPU ) ) ) + Min( ( ( FirstVNF_RAM_Server + MRS ) / ( FirstVNF_CPU_Server * MDR ) ) ,( ( DDR * BR ) * ( DDR / ACS ) ) ) ) + ( ( ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - ( DDR - FirstVNF_Mem_Server ) ) - Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server * RRS ) ) ) - ( ( ( FirstVNF_Mem_Server / FirstVNF_RAM ) / ( ARS / FirstVNF_RAM_Server ) ) * ( Max( PN,BR ) / ( ARS / FirstVNF_Mem_Server ) ) ) ) ) ) - Min( Max( ( ( ( ( FirstVNF_Mem * ARS ) - ( PN / DDR ) ) + ( ( Const + ARS ) + ( FirstVNF_Mem_Server / MRS ) ) ) + ( Min( ( MDR * MRS ) ,Max( PN,FirstVNF_Mem ) ) + Max( Min( PN ,FirstVNF_RAM_Server ),( MRS - FirstVNF_RAM_Server ) ) ) ),( Min( ( ( ACS / FirstVNF_CPU_Server ) + ( MRS - ACS ) ) ,Max( ( PN / RRS ),( BR / DDR ) ) ) - ( Max( ( ACS / BR ),( FirstVNF_RAM_Server + CRS ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_Mem ),( Const + FirstVNF_RAM_Server ) ) ) ) ) ,( Min( ( Max( ( DDR - FirstVNF_Mem_Server ),Min( CRS ,CRS ) ) + ( ( ACS * CRS ) / ( MRS - FirstVNF_RAM ) ) ) ,Min( Min( ( FirstVNF_Mem_Server * FirstVNF_CPU ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ,Min( Min( FirstVNF_RAM ,AMS ) ,( MRS - FirstVNF_CPU_Server ) ) ) ) + Max( ( Max( Max( FirstVNF_CPU,ACS ),Min( MDR ,FirstVNF_RAM_Server ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) / ( DDR - CRS ) ) ),( Max( ( MDR + PN ),Min( ARS ,BR ) ) + Min( Max( CRS,MDR ) ,( PN * DDR ) ) ) ) ) ) ) )", "choosing": "Max( Max( ( Max( RMSe,( ( DS / MLU ) / RRSe ) ) + RMSe ),MUM ),( CS * Min( MUR ,( DS / ( CS + RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) - RRS ),RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( Max( RCSe,DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04921259842519685, "obj2": 0.6716797627245404}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) - RRS ),RRS )", "choosing": "( ( RMSe / RMSe ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) )", "obj1": 0.05511811023622047, "obj2": 0.6700095360271271}, {"determining": "Max( ( BR - RRS ),( Max( ( MDR - ARS ),PN ) + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * CS ) ) ) / ( CS / ( ( RCSe / RRSe ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6551029814614261}, {"determining": "Max( ( MDR - FirstVNF_Mem_Server ),BR )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / MLU ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( ( ( RRS * MRS ) + FirstVNF_Mem_Server ) - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Max( ( RMSe / RMSe ),MUC ),( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07283464566929133, "obj2": 0.645777858938031}, {"determining": "Max( ( ( RRS * MRS ) + FirstVNF_Mem_Server ),Max( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) - RRS ),( FirstVNF_Mem + RRS ) ) )", "choosing": "( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( RMSe / RMSe ) )", "obj1": 0.4271653543307087, "obj2": 0.4505463828145089}, {"determining": "Max( ( ( RRS * MRS ) + FirstVNF_Mem_Server ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( BR - ( DDR + RRS ) ),( FirstVNF_Mem + Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ),( Max( Min( Min( MUM ,Min( CS ,CS ) ) ,( MUR + RCSe ) ),( RRSe + DS ) ) - Min( RCSe ,MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( CS * MUR ) ) ) )", "obj1": 0.1732283464566929, "obj2": 0.5973561772277916}, {"determining": "( ( FirstVNF_CPU * BR ) + ( MDR - ARS ) )", "choosing": "( Min( RMSe ,MUR ) + ( ( ( ( ( RCSe + MUR ) + Min( MUR ,Min( CS ,MUM ) ) ) / RMSe ) - Max( ( RCSe / ( MLU + MUR ) ),( MUC + ( ( DS + DS ) / DS ) ) ) ) + ( ( RMSe - RCSe ) / ( RMSe - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( BR - RRS ),Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( RRS,( BR + RRS ) )", "choosing": "( Min( MUR ,Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) )", "obj1": 0.04330708661417323, "obj2": 0.708215674651633}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( MDR - RRS ),( FirstVNF_Mem + DDR ) )", "choosing": "( ( MUR * MUR ) / Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ) )", "obj1": 0.32086614173228345, "obj2": 0.5461783538516821}, {"determining": "Max( ( MDR - ( FirstVNF_Mem + RRS ) ),( FirstVNF_Mem + DDR ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.6585736687460568}, {"determining": "Max( ( BR - RRS ),Max( RRS,( FirstVNF_Mem + RRS ) ) )", "choosing": "( Max( Max( ( RMSe / RMSe ),( RRSe - MUC ) ),( Max( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ),( RRSe + DS ) ) - Min( RCSe ,MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.09055118110236221, "obj2": 0.634878612252216}, {"determining": "Max( MDR,Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) ) )", "choosing": "( Max( Max( ( RMSe / RMSe ),MUC ),( Max( Min( Min( MUM ,MUM ) ,( MUR + ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ),( RRSe + DS ) ) - Min( RCSe ,MUC ) ) ) / ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) )", "obj1": 0.5236220472440944, "obj2": 0.4340084667606121}, {"determining": "Max( ( BR - RRS ),Min( FirstVNF_Mem ,RRS ) )", "choosing": "( Min( MUR ,MLU ) + ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) )", "obj1": 0.5433070866141733, "obj2": 0.3532950308830038}, {"determining": "Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( FirstVNF_Mem + RRS ) )", "choosing": "( Min( ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) )", "obj1": 0.3562992125984252, "obj2": 0.5018275381620247}, {"determining": "( ( PN - CRS ) + FirstVNF_CPU )", "choosing": "( ( Max( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ),( RRSe + DS ) ) - Min( RCSe ,MUC ) ) + ( RRSe + DS ) )", "obj1": 0.610236220472441, "obj2": 0.28779568198487576}, {"determining": "( ( PN - CRS ) + ( MRS * FirstVNF_CPU_Server ) )", "choosing": "( Min( MLU ,DS ) + ( RRSe + DS ) )", "obj1": 0.6437007874015748, "obj2": 0.2565505370203616}, {"determining": "Max( RRS,( FirstVNF_Mem + ( Max( ( ( RRS * MRS ) + FirstVNF_Mem_Server ),( FirstVNF_Mem + RRS ) ) / Max( ( PN + MRS ),( ( PN + MRS ) + ( Const * FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( Max( ( RMSe / RCSe ),MUC ),( Max( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ),( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) - Min( RCSe ,MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.09055118110236221, "obj2": 0.634878612252216}, {"determining": "( Min( ( ( ARS / ARS ) / MDR ) ,RRS ) * ( AMS - FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( Min( ( MUM - MUR ) ,( MLU - RMSe ) ) * ( ( RRSe + RRSe ) - ( MUC * RCSe ) ) ) + ( Min( ( RCSe / MUM ) ,( RCSe / RMSe ) ) - ( ( DS * MUC ) + Min( RCSe ,MLU ) ) ) ) - ( Min( Max( ( RMSe - DS ),( MUR * MUC ) ) ,( ( MUR * RCSe ) + ( CS * MUR ) ) ) + Max( ( ( DS * RCSe ) - ( RMSe - DS ) ),( ( DS / MUM ) * Min( RRSe ,MUR ) ) ) ) ) + Max( ( Max( ( ( DS * DS ) + Max( MUM,MUR ) ),Max( ( MUM * RRSe ),( RRSe - MLU ) ) ) - ( ( ( RMSe + RMSe ) - Min( CS ,MUR ) ) - ( Min( MUM ,RRSe ) / ( DS - CS ) ) ) ),( Min( Max( ( DS + MUC ),Min( MUC ,MUM ) ) ,( ( RRSe - RMSe ) / Max( MUR,DS ) ) ) - Min( Min( ( RRSe + DS ) ,( MUC + MLU ) ) ,( ( MLU / RMSe ) - Min( CS ,MLU ) ) ) ) ) ) + Max( ( Min( ( Max( Max( CS,CS ),Min( MUM ,MUM ) ) / ( ( DS + MUM ) + ( MLU * RRSe ) ) ) ,( ( ( MUM / RCSe ) - ( MUM + DS ) ) - Max( ( MLU - MUC ),Min( MUC ,RCSe ) ) ) ) + ( Min( Min( ( MUR - RMSe ) ,Min( MUR ,RMSe ) ) ,Min( ( MLU + MUC ) ,Max( RRSe,MLU ) ) ) + ( ( ( RRSe * MUR ) - Max( DS,MUM ) ) / ( ( DS - RMSe ) * Min( MUR ,MUM ) ) ) ) ),( ( ( ( Min( MUC ,MLU ) * ( MLU - RCSe ) ) * ( ( MLU / DS ) + ( MLU + RMSe ) ) ) - Min( ( ( MUC + DS ) + ( RRSe * RRSe ) ) ,Min( ( RRSe + CS ) ,( DS + MUC ) ) ) ) / ( ( ( Max( RMSe,DS ) * ( RMSe / DS ) ) / ( ( MLU - MUC ) - Max( RMSe,MLU ) ) ) / ( Min( Max( RCSe,MUM ) ,( MUC / DS ) ) + ( ( RMSe + CS ) + ( MLU + MLU ) ) ) ) ) ) ) * ( Min( Max( ( ( ( Min( MUR ,MLU ) - ( RRSe + RMSe ) ) * ( ( RRSe / RCSe ) - ( RCSe - MLU ) ) ) - ( Max( Max( RRSe,RRSe ),( RRSe - RRSe ) ) + ( ( MUC * MLU ) / Min( RCSe ,RCSe ) ) ) ),( ( ( Max( CS,MLU ) / ( CS + MUM ) ) / ( ( MUR - MLU ) - ( MLU / CS ) ) ) - ( Max( ( DS / CS ),( MUC - MUC ) ) * ( ( DS - RCSe ) / ( RRSe / MLU ) ) ) ) ) ,( ( ( ( ( CS * RMSe ) + ( DS / MUM ) ) - ( Min( MUC ,CS ) - ( RRSe - RCSe ) ) ) / ( Min( ( MLU + MUC ) ,( CS - DS ) ) + ( ( MUR + MUC ) + ( RRSe + RRSe ) ) ) ) * ( Min( ( ( MUM / RRSe ) / Min( CS ,MUM ) ) ,( Max( RCSe,MLU ) / Max( DS,DS ) ) ) - Min( ( ( RCSe + MLU ) * ( MUC / DS ) ) ,( ( MLU / RRSe ) - ( RMSe - MUR ) ) ) ) ) ) * ( ( Max( ( Max( ( RRSe - MLU ),Max( MUR,MUM ) ) - ( ( MUC + MUC ) / ( RRSe * MUR ) ) ),( Min( Min( MUR ,RCSe ) ,( MUR - MUC ) ) * ( ( MLU + RCSe ) - Max( MUM,MUR ) ) ) ) + ( Min( ( ( MUR * MUC ) - Min( MUM ,MLU ) ) ,Min( Max( RCSe,MUC ) ,Min( CS ,DS ) ) ) - ( Max( ( CS / MUR ),( RCSe * RMSe ) ) + ( Max( MUC,MUC ) + ( MUM * DS ) ) ) ) ) + Min( Min( ( ( ( MUR / MLU ) + ( CS + RMSe ) ) + ( ( MLU - DS ) / Max( MUM,MLU ) ) ) ,( ( ( DS - CS ) * ( RCSe + RMSe ) ) * ( Max( RCSe,DS ) - Min( MLU ,RCSe ) ) ) ) ,( ( ( Max( MUR,RCSe ) / ( CS / MUR ) ) * Max( Min( CS ,RMSe ),Min( RMSe ,RMSe ) ) ) / ( ( ( MUM * RRSe ) * ( CS / RRSe ) ) - ( Max( DS,RRSe ) * ( RRSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.5641103856340054}, {"determining": "Max( ( ( RRS * MRS ) + FirstVNF_Mem_Server ),( FirstVNF_Mem + PN ) )", "choosing": "( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( Min( CS ,CS ) * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.6410672084864203}, {"determining": "( Min( Max( MRS,ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),( ( PN + MRS ) + ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( Max( MUM,RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Min( ( ( Max( ( ( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,( RRS - FirstVNF_Mem_Server ) ) * Min( Max( DDR,MRS ) ,( Const * FirstVNF_Mem ) ) ) - ( Max( ( BR / Const ),Max( CRS,ACS ) ) / ( ( ACS / MDR ) + ( RRS + FirstVNF_RAM_Server ) ) ) ),( ( ( ( DDR / ARS ) - ( Const + FirstVNF_Mem_Server ) ) - ( ( FirstVNF_Mem_Server * CRS ) * ( FirstVNF_CPU * ARS ) ) ) + ( ( ( BR - Const ) * ( FirstVNF_RAM_Server / ACS ) ) * ( ( BR / MRS ) + Max( CRS,DDR ) ) ) ) ) * Min( ( Max( ( Max( RRS,Const ) + Min( MDR ,DDR ) ),( Max( AMS,MDR ) - ( MRS + FirstVNF_Mem_Server ) ) ) + ( ( Min( ACS ,FirstVNF_Mem ) * ( CRS / ACS ) ) + ( ( Const * FirstVNF_Mem_Server ) * ( Const - AMS ) ) ) ) ,Min( ( Min( Max( DDR,FirstVNF_CPU ) ,( MRS * Const ) ) * ( Max( FirstVNF_CPU,MRS ) / ( FirstVNF_RAM * FirstVNF_Mem ) ) ) ,( ( ( BR - FirstVNF_RAM ) / Max( MDR,BR ) ) - Max( ( FirstVNF_CPU + MDR ),( DDR - ACS ) ) ) ) ) ) * ( ( ( ( ( ( FirstVNF_RAM_Server * MRS ) / Min( ACS ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_RAM - MRS ) + ( MRS + CRS ) ) ) / ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) - Min( FirstVNF_Mem ,ARS ) ) * ( Min( FirstVNF_RAM_Server ,RRS ) / ( FirstVNF_RAM - AMS ) ) ) ) - ( ( ( Min( DDR ,BR ) + ( FirstVNF_CPU / Const ) ) - ( ( Const * FirstVNF_RAM_Server ) / Max( ARS,PN ) ) ) / ( Max( ( BR + FirstVNF_Mem_Server ),( FirstVNF_Mem_Server * MRS ) ) + ( Max( FirstVNF_CPU,BR ) + ( ARS / FirstVNF_RAM ) ) ) ) ) - ( ( Min( Min( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ,( CRS / FirstVNF_Mem ) ) ,Min( ( Const + Const ) ,Min( FirstVNF_RAM ,BR ) ) ) / ( ( Min( BR ,AMS ) * ( DDR / FirstVNF_RAM_Server ) ) + ( ( CRS - RRS ) + ( FirstVNF_CPU_Server / BR ) ) ) ) / ( ( Min( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ,( FirstVNF_RAM - BR ) ) - Max( Max( FirstVNF_RAM,DDR ),( AMS + ACS ) ) ) + ( ( ( MRS + FirstVNF_RAM ) * Max( DDR,FirstVNF_Mem ) ) / Min( Max( MRS,ARS ) ,( DDR / DDR ) ) ) ) ) ) ) ,( Min( Max( Min( ( ( ( DDR * ACS ) / ( Const + AMS ) ) + Max( Max( BR,RRS ),Max( FirstVNF_RAM,CRS ) ) ) ,( ( ( FirstVNF_CPU + RRS ) + ( FirstVNF_RAM_Server + PN ) ) / Min( Max( BR,DDR ) ,( FirstVNF_CPU_Server - RRS ) ) ) ),( ( ( ( MDR + FirstVNF_Mem ) / ( FirstVNF_RAM * AMS ) ) / ( ( AMS / ARS ) / ( RRS / CRS ) ) ) * Min( ( ( ACS * FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server / Const ) ) ,Min( Max( RRS,MRS ) ,( MDR - ACS ) ) ) ) ) ,( Min( Min( ( ( FirstVNF_CPU_Server + Const ) / ( PN / Const ) ) ,( ( FirstVNF_RAM / FirstVNF_Mem ) / ( ARS - CRS ) ) ) ,( Max( ( FirstVNF_RAM_Server + AMS ),( Const + MDR ) ) / ( ( PN + MDR ) - ( BR / FirstVNF_CPU_Server ) ) ) ) - ( ( ( ( ACS * Const ) + ( RRS / FirstVNF_RAM_Server ) ) - Max( ( MDR - DDR ),( FirstVNF_Mem + DDR ) ) ) - ( ( ( ARS + ARS ) * ( MDR + FirstVNF_RAM_Server ) ) + ( ( ACS * FirstVNF_Mem ) / ( DDR - FirstVNF_Mem ) ) ) ) ) ) / ( ( Min( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_Mem / DDR ),( ACS + ACS ) ) ) ,( Max( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ),( FirstVNF_RAM + AMS ) ) - Max( ( MDR / MRS ),( RRS * ACS ) ) ) ) / Max( Max( ( ( DDR + MDR ) / ( BR - PN ) ),Min( ( FirstVNF_Mem_Server / ACS ) ,( ARS + CRS ) ) ),( ( ( FirstVNF_CPU / FirstVNF_RAM ) + Max( MRS,ACS ) ) + ( Min( FirstVNF_Mem_Server ,CRS ) * Min( BR ,MRS ) ) ) ) ) + ( ( ( ( ( ACS * FirstVNF_Mem ) - ( Const + AMS ) ) + Min( ( FirstVNF_Mem + FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM ,RRS ) ) ) / ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + Max( DDR,MDR ) ) + Min( ( ACS / DDR ) ,( MDR / FirstVNF_Mem ) ) ) ) * ( ( ( Max( BR,FirstVNF_Mem ) + ( AMS - MRS ) ) * ( ( FirstVNF_Mem / Const ) * ( RRS + MRS ) ) ) * Min( Min( ( DDR + PN ) ,( FirstVNF_CPU_Server * PN ) ) ,Min( ( MDR - FirstVNF_RAM ) ,Min( FirstVNF_CPU_Server ,PN ) ) ) ) ) ) ) )", "choosing": "( Min( RMSe ,Min( ( MUC + MUM ) ,( RMSe / CS ) ) ) / ( Min( MUM ,( RCSe / Min( ( ( ( MUR - MUM ) - CS ) / MUM ) ,Max( MUC,( ( RRSe - MUM ) * MUM ) ) ) ) ) * Max( RRSe,CS ) ) )", "obj1": 0.9960629921259843, "obj2": 0.0015678437864984662}], "11": [{"determining": "( ( FirstVNF_CPU_Server + CRS ) + Max( MRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,DS ) + ( RRSe + RRSe ) )", "obj1": 0.6062992125984252, "obj2": 0.28813626169404233}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + ARS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( CS * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( ( RRS - MRS ) + FirstVNF_Mem_Server ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( DS / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + ( ( FirstVNF_CPU_Server * MRS ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( Min( MUM ,MUM ) / Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( ( RRS * MRS ) + FirstVNF_Mem_Server ),( CRS + RRS ) )", "choosing": "( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / Min( ( RCSe / DS ) ,( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( Min( BR ,RRS ),( BR + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR / MUR ) ) ) ) ),Min( ( MUM / RCSe ) ,( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.6585736687460568}, {"determining": "Max( ( MDR - ( FirstVNF_Mem + RRS ) ),Max( ( MDR - RRS ),BR ) )", "choosing": "( ( MUR * MUR ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( RRSe * MUR ) ) ) )", "obj1": 0.045275590551181105, "obj2": 0.7035010707642236}, {"determining": "( Max( ( ( RRS * MRS ) + FirstVNF_Mem_Server ),( FirstVNF_Mem + RRS ) ) / FirstVNF_CPU )", "choosing": "( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ) / ( Max( ( ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / Max( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ),( RRSe + DS ) ) ) - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05708661417322835, "obj2": 0.6664120078323805}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + ( ( BR - RRS ) * Max( ARS,RRS ) ) ) )", "choosing": "( Max( ( ( RMSe / RMSe ) / MUC ),( Max( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ),( RRSe + DS ) ) - Min( RCSe ,MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.09055118110236221, "obj2": 0.634878612252216}, {"determining": "Max( Max( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) - RRS ),RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( Max( RCSe,DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04921259842519685, "obj2": 0.6716797627245404}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) - RRS ),RRS )", "choosing": "( ( RMSe / RMSe ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) )", "obj1": 0.05511811023622047, "obj2": 0.6700095360271271}, {"determining": "Max( ( BR - RRS ),( Max( ( MDR - ARS ),PN ) + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * CS ) ) ) / ( CS / ( ( RCSe / RRSe ) / ( MUR * MUR ) ) ) )", "obj1": 0.0688976377952756, "obj2": 0.6551029814614261}, {"determining": "Max( ( MDR - FirstVNF_Mem_Server ),BR )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / MLU ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( ( ( RRS * MRS ) + FirstVNF_Mem_Server ) - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Max( ( RMSe / RMSe ),MUC ),( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07283464566929133, "obj2": 0.645777858938031}, {"determining": "Max( ( ( RRS * MRS ) + FirstVNF_Mem_Server ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( BR - RRS ),Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( RRS,( BR + RRS ) )", "choosing": "( Min( MUR ,Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) )", "obj1": 0.04330708661417323, "obj2": 0.708215674651633}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( MDR - ( FirstVNF_Mem + RRS ) ),( FirstVNF_Mem + DDR ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.6585736687460568}, {"determining": "Max( ( ( RRS * MRS ) + FirstVNF_Mem_Server ),( FirstVNF_Mem + PN ) )", "choosing": "( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( Min( CS ,CS ) * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.6410672084864203}, {"determining": "( Min( Max( MRS,ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),( ( PN + MRS ) + ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( Max( MUM,RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "( ( ACS + FirstVNF_CPU_Server ) - ( FirstVNF_Mem + PN ) )", "choosing": "( ( MUR * MUR ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( RRSe * MUR ) ) ) )", "obj1": 0.045275590551181105, "obj2": 0.7035010707642236}, {"determining": "Max( RRS,( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07086614173228346, "obj2": 0.6478812176742312}, {"determining": "( ( PN - CRS ) + ( MRS * FirstVNF_CPU_Server ) )", "choosing": "( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( ( RRS * MDR ) + FirstVNF_Mem_Server ),Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / CS ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( BR - RRS ),( ( RRS * MRS ) + FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ) )", "obj1": 0.08267716535433071, "obj2": 0.6398785471361408}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( ( RRS * MRS ) + FirstVNF_Mem_Server ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( BR - MDR ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( Min( RRSe ,MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "( Min( ( MRS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),( ( PN + MRS ) + ( Const + FirstVNF_RAM ) ) ) )", "choosing": "( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RRSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( ( RRS * MRS ) + FirstVNF_Mem_Server ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( BR - RRS ),Max( RRS,( FirstVNF_Mem + RRS ) ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * CS ) ) ) / ( CS / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.08661417322834646, "obj2": 0.6352585516538113}, {"determining": "( ( PN - CRS ) + FirstVNF_CPU )", "choosing": "( ( MUR * MUR ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( RRSe * MUR ) ) ) )", "obj1": 0.045275590551181105, "obj2": 0.7035010707642236}, {"determining": "Max( ( ( RRS * MRS ) + FirstVNF_Mem_Server ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( BR - RRS ),Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( MDR - ( FirstVNF_RAM + RRS ) ),( FirstVNF_Mem / DDR ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / Max( MUR,MUR ) ) ) ) ),( ( MUM / RCSe ) - ( RCSe * RRSe ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.6585736687460568}, {"determining": "Max( ( FirstVNF_Mem_Server - ( FirstVNF_Mem + RRS ) ),( FirstVNF_Mem / DDR ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),( ( MUM / RCSe ) - ( RCSe * RRSe ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,MUR ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.6585736687460568}, {"determining": "Max( ( ( RRS * MRS ) + FirstVNF_Mem_Server ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( BR - RRS ),( Max( ( MDR - ARS ),BR ) + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * CS ) ) ) / ( CS / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.08661417322834646, "obj2": 0.6352585516538113}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "( RRS * ( FirstVNF_Mem + ( Max( ( ( RRS * MRS ) + FirstVNF_Mem_Server ),( FirstVNF_Mem + RRS ) ) / Max( ( PN + MRS ),( ( PN + MRS ) + ( Const * FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( Max( ( RMSe / RCSe ),MUC ),( Max( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ),( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) - Min( RCSe ,MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.08464566929133858, "obj2": 0.6358569189102413}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + ( ( BR - RRS ) * Max( ARS,RRS ) ) ) )", "choosing": "( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "( Min( ( MRS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),( ( PN + MRS ) + ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( ( Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) ) * MRS ) + FirstVNF_Mem_Server ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.07677165354330709, "obj2": 0.6414085589721987}, {"determining": "Max( ( ( RRS * MRS ) + FirstVNF_Mem_Server ),( FirstVNF_Mem + MDR ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / RMSe ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( BR - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ),( BR + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),Min( ( MUM / RCSe ) ,( RCSe * MUC ) ) ) / ( Max( ( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ) - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.047244094488188976, "obj2": 0.6786628029851769}, {"determining": "Max( ( BR - RRS ),( BR + RRS ) )", "choosing": "( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ) / ( Max( ( ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / Max( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ),( RRSe + DS ) ) ) - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05708661417322835, "obj2": 0.6664120078323805}], "12": [{"determining": "( ( FirstVNF_CPU_Server + CRS ) + Max( MRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,DS ) + ( RRSe + RRSe ) )", "obj1": 0.6062992125984252, "obj2": 0.28813626169404233}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + ARS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( CS * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( ( RRS - MRS ) + FirstVNF_Mem_Server ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( DS / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + ( ( FirstVNF_CPU_Server * MRS ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( Min( MUM ,MUM ) / Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( ( RRS * MRS ) + FirstVNF_Mem_Server ),( CRS + RRS ) )", "choosing": "( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / Min( ( RCSe / DS ) ,( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( Min( BR ,RRS ),( BR + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR / MUR ) ) ) ) ),Min( ( MUM / RCSe ) ,( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.6585736687460568}, {"determining": "( Max( ( ( RRS * MRS ) + FirstVNF_Mem_Server ),( FirstVNF_Mem + RRS ) ) / FirstVNF_CPU )", "choosing": "( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ) / ( Max( ( ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / Max( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ),( RRSe + DS ) ) ) - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05708661417322835, "obj2": 0.6664120078323805}, {"determining": "Max( Max( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) - RRS ),RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( Max( RCSe,DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04921259842519685, "obj2": 0.6716797627245404}, {"determining": "Max( ( MDR - FirstVNF_Mem_Server ),BR )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / MLU ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( ( RRS * MRS ) + FirstVNF_Mem_Server ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( BR - RRS ),Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( MDR - ( FirstVNF_Mem + RRS ) ),( FirstVNF_Mem + DDR ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.6585736687460568}, {"determining": "( Min( Max( MRS,ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),( ( PN + MRS ) + ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( Max( MUM,RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "( ( PN - CRS ) + ( MRS * FirstVNF_CPU_Server ) )", "choosing": "( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( ( RRS * MDR ) + FirstVNF_Mem_Server ),Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / CS ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( ( RRS * MRS ) + FirstVNF_Mem_Server ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( BR - MDR ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( Min( RRSe ,MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "( Min( ( MRS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),( ( PN + MRS ) + ( Const + FirstVNF_RAM ) ) ) )", "choosing": "( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RRSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( ( RRS * MRS ) + FirstVNF_Mem_Server ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( ( RRS * MRS ) + FirstVNF_Mem_Server ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( BR - RRS ),Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( MDR - ( FirstVNF_RAM + RRS ) ),( FirstVNF_Mem / DDR ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / Max( MUR,MUR ) ) ) ) ),( ( MUM / RCSe ) - ( RCSe * RRSe ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.6585736687460568}, {"determining": "Max( ( FirstVNF_Mem_Server - ( FirstVNF_Mem + RRS ) ),( FirstVNF_Mem / DDR ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),( ( MUM / RCSe ) - ( RCSe * RRSe ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,MUR ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.6585736687460568}, {"determining": "Max( ( ( RRS * MRS ) + FirstVNF_Mem_Server ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + ( ( BR - RRS ) * Max( ARS,RRS ) ) ) )", "choosing": "( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "( Min( ( MRS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),( ( PN + MRS ) + ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( ( RRS * MRS ) + FirstVNF_Mem_Server ),( FirstVNF_Mem + MDR ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / RMSe ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( BR - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ),( BR + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),Min( ( MUM / RCSe ) ,( RCSe * MUC ) ) ) / ( Max( ( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ) - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.047244094488188976, "obj2": 0.6786628029851769}, {"determining": "Max( ( BR - RRS ),( BR + RRS ) )", "choosing": "( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ) / ( Max( ( ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / Max( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ),( RRSe + DS ) ) ) - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05708661417322835, "obj2": 0.6664120078323805}, {"determining": "Max( ( ( RRS * MRS ) + FirstVNF_Mem_Server ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.6585736687460568}, {"determining": "Max( ( MDR - ( FirstVNF_Mem + RRS ) ),( FirstVNF_Mem + DDR ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + ( ( FirstVNF_CPU_Server * MRS ) + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( ( RRS * MRS ) + FirstVNF_Mem_Server ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( ( RRS * MRS ) + FirstVNF_Mem_Server ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( RRS,( FirstVNF_Mem + ( ( BR - RRS ) * Max( ARS,RRS ) ) ) )", "choosing": "( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + ( ( BR - RRS ) * Max( ARS,RRS ) ) ) )", "choosing": "( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( ( RMSe / RMSe ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) )", "obj1": 0.051181102362204724, "obj2": 0.6694460411815887}, {"determining": "Max( ( BR - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ),( BR + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),Min( ( MUM / RCSe ) ,( RCSe * MUC ) ) ) / ( Max( ( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ) - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.047244094488188976, "obj2": 0.6786628029851769}, {"determining": "Max( ( ( ( BR - RRS ) * Max( ARS,RRS ) ) - ( Min( RRS ,MRS ) / FirstVNF_Mem_Server ) ),( MDR + FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( Min( MUM ,CS ) ,Max( MUR,( Max( ( RRSe - MUC ),( CS - CS ) ) / ( ( RCSe / ( MUR * MUR ) ) / ( MUR * MUR ) ) ) ) ),Min( ( MUM * RCSe ) ,( RCSe * MUC ) ) ) / ( Max( ( Min( Min( MUM ,MUM ) ,( MUR + MUC ) ) - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUM * MUR ) ) ) )", "obj1": 0.047244094488188976, "obj2": 0.6786628029851769}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem * ( ( BR - RRS ) * Max( ARS,RRS ) ) ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),Min( ( MUM / RMSe ) ,( RCSe * MUC ) ) ) / ( Max( ( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ) - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.047244094488188976, "obj2": 0.6786628029851769}, {"determining": "Max( Max( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) - RRS ),RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04921259842519685, "obj2": 0.6716797627245404}, {"determining": "Max( Max( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) - RRS ),RRS ),( CRS + RRS ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( MUR / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}], "13": [{"determining": "( ( FirstVNF_CPU_Server + CRS ) + Max( MRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,DS ) + ( RRSe + RRSe ) )", "obj1": 0.6062992125984252, "obj2": 0.28813626169404233}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + ARS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( CS * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( ( RRS - MRS ) + FirstVNF_Mem_Server ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( DS / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + ( ( FirstVNF_CPU_Server * MRS ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( Min( MUM ,MUM ) / Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( ( RRS * MRS ) + FirstVNF_Mem_Server ),( CRS + RRS ) )", "choosing": "( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / Min( ( RCSe / DS ) ,( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( Min( BR ,RRS ),( BR + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR / MUR ) ) ) ) ),Min( ( MUM / RCSe ) ,( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.6585736687460568}, {"determining": "Max( Max( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) - RRS ),RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( Max( RCSe,DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04921259842519685, "obj2": 0.6716797627245404}, {"determining": "Max( ( MDR - FirstVNF_Mem_Server ),BR )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / MLU ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( ( RRS * MRS ) + FirstVNF_Mem_Server ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( BR - RRS ),Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( MDR - ( FirstVNF_Mem + RRS ) ),( FirstVNF_Mem + DDR ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.6585736687460568}, {"determining": "( Min( Max( MRS,ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),( ( PN + MRS ) + ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( Max( MUM,RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "( ( PN - CRS ) + ( MRS * FirstVNF_CPU_Server ) )", "choosing": "( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( ( RRS * MDR ) + FirstVNF_Mem_Server ),Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / CS ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( ( RRS * MRS ) + FirstVNF_Mem_Server ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( BR - MDR ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( Min( RRSe ,MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "( Min( ( MRS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),( ( PN + MRS ) + ( Const + FirstVNF_RAM ) ) ) )", "choosing": "( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RRSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( ( RRS * MRS ) + FirstVNF_Mem_Server ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( MDR - ( FirstVNF_RAM + RRS ) ),( FirstVNF_Mem / DDR ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / Max( MUR,MUR ) ) ) ) ),( ( MUM / RCSe ) - ( RCSe * RRSe ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.6585736687460568}, {"determining": "Max( ( FirstVNF_Mem_Server - ( FirstVNF_Mem + RRS ) ),( FirstVNF_Mem / DDR ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),( ( MUM / RCSe ) - ( RCSe * RRSe ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,MUR ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.6585736687460568}, {"determining": "Max( ( BR - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ),( BR + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),Min( ( MUM / RCSe ) ,( RCSe * MUC ) ) ) / ( Max( ( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ) - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.047244094488188976, "obj2": 0.6786628029851769}, {"determining": "Max( ( ( RRS * MRS ) + FirstVNF_Mem_Server ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.6585736687460568}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( ( RMSe / RMSe ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) )", "obj1": 0.051181102362204724, "obj2": 0.6694460411815887}, {"determining": "Max( ( BR - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ),( BR + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),Min( ( MUM / RCSe ) ,( RCSe * MUC ) ) ) / ( Max( ( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ) - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.047244094488188976, "obj2": 0.6786628029851769}, {"determining": "Max( ( ( ( BR - RRS ) * Max( ARS,RRS ) ) - ( Min( RRS ,MRS ) / FirstVNF_Mem_Server ) ),( MDR + FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( Min( MUM ,CS ) ,Max( MUR,( Max( ( RRSe - MUC ),( CS - CS ) ) / ( ( RCSe / ( MUR * MUR ) ) / ( MUR * MUR ) ) ) ) ),Min( ( MUM * RCSe ) ,( RCSe * MUC ) ) ) / ( Max( ( Min( Min( MUM ,MUM ) ,( MUR + MUC ) ) - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUM * MUR ) ) ) )", "obj1": 0.047244094488188976, "obj2": 0.6786628029851769}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem * ( ( BR - RRS ) * Max( ARS,RRS ) ) ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),Min( ( MUM / RMSe ) ,( RCSe * MUC ) ) ) / ( Max( ( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ) - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.047244094488188976, "obj2": 0.6786628029851769}, {"determining": "Max( Max( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) - RRS ),RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04921259842519685, "obj2": 0.6716797627245404}, {"determining": "Max( Max( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) - RRS ),RRS ),( CRS + RRS ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( MUR / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "Max( Min( BR ,RRS ),( FirstVNF_Mem + ( ( BR - RRS ) * Max( ARS,RRS ) ) ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),Min( ( MUM / RCSe ) ,( RCSe * MUC ) ) ) / ( Max( ( Min( Min( MUM ,MUM ) ,( MUR * RCSe ) ) - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.047244094488188976, "obj2": 0.6786628029851769}, {"determining": "Max( BR,( FirstVNF_Mem + DDR ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( RCSe,Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( MLU / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.6585736687460568}, {"determining": "Max( ( MDR * ( FirstVNF_Mem + RRS ) ),( FirstVNF_Mem + DDR ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),Min( ( MUM / RCSe ) ,( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.6585736687460568}, {"determining": "Max( ( ( ( Max( ( ( ( BR - PN ) * Max( ARS,RRS ) ) - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ),( BR + RRS ) ) - RRS ) * Max( ARS,RRS ) ) - ( ( RRS - MRS ) + FirstVNF_Mem_Server ) ),( BR + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),( RCSe / ( MUR * MUR ) ) ) / ( ( RCSe + ( MUR * MUR ) ) / ( MUR * MUR ) ) ) ) ),Min( ( MUM / RCSe ) ,( RCSe * RCSe ) ) ) / ( Max( ( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ) - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.047244094488188976, "obj2": 0.6786628029851769}, {"determining": "Max( ( ( ( BR - RRS ) * Max( ARS,RRS ) ) - ( ( RRS - MRS ) + FirstVNF_Mem_Server ) ),( BR + DDR ) )", "choosing": "( Max( Min( Min( MUM ,CS ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / ( MUR * MUR ) ) / ( MUR * MUR ) ) ) ) ),Min( ( MUM / RCSe ) ,( RCSe * MUC ) ) ) / ( Max( ( ( Min( MUM ,MUM ) + ( MUR + RCSe ) ) - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.047244094488188976, "obj2": 0.6786628029851769}, {"determining": "Max( ( ( ( BR - RRS ) * Max( ARS,RRS ) ) - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ),( BR + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / ( MUR * MUR ) ) / ( MUR * MUR ) ) ) ) ),Min( ( MUM / RCSe ) ,( RCSe * MUC ) ) ) / ( Max( ( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ) - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.047244094488188976, "obj2": 0.6786628029851769}, {"determining": "Max( ( RRS - MRS ),( BR + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / DS ) - ( RCSe * MUC ) ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),Min( ( MUM / RCSe ) ,( RCSe * MUC ) ) ) / ( Max( ( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ) - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.047244094488188976, "obj2": 0.6786628029851769}, {"determining": "Max( ( BR - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ),( BR + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),Min( ( MUM / RCSe ) ,( RCSe * MUC ) ) ) / ( Max( ( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ) - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.047244094488188976, "obj2": 0.6786628029851769}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( ( RMSe / RMSe ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) )", "obj1": 0.051181102362204724, "obj2": 0.6694460411815887}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( ( RMSe / RMSe ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) )", "obj1": 0.051181102362204724, "obj2": 0.6694460411815887}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( ( RMSe / RMSe ) / ( Max( ( RRSe - MUC ),Min( Max( ( RRSe - MUC ),Min( CS ,CS ) ) ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) )", "obj1": 0.051181102362204724, "obj2": 0.6694460411815887}, {"determining": "Max( ( BR - RRS ),( FirstVNF_CPU + RRS ) )", "choosing": "( ( RMSe / RMSe ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( CS / DS ) / MUC ) ) )", "obj1": 0.051181102362204724, "obj2": 0.6694460411815887}, {"determining": "Max( Max( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) - RRS ),RRS ),( ACS + RRS ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MLU ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "Max( ( ( MRS * MRS ) + RRS ),BR )", "choosing": "( Max( Min( ( MUM * MUM ) ,Max( MUR,CS ) ),( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( DS * MUR ) ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05708661417322835, "obj2": 0.6659915593363888}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + ( ( BR - RRS ) * Max( ARS,RRS ) ) ) )", "choosing": "( ( MUM / RMSe ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) )", "obj1": 0.051181102362204724, "obj2": 0.6694460411815887}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + FirstVNF_Mem ) )", "choosing": "( ( DS / RMSe ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) )", "obj1": 0.051181102362204724, "obj2": 0.6694460411815887}, {"determining": "( Min( ( MRS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),( ( PN + MRS ) / ( Const * Const ) ) ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,MUM ) ) / ( ( RCSe / DS ) - ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "( Min( ( MRS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),( ( PN + MRS ) + ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}], "14": [{"determining": "( ( FirstVNF_CPU_Server + CRS ) + Max( MRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,DS ) + ( RRSe + RRSe ) )", "obj1": 0.6062992125984252, "obj2": 0.28813626169404233}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + ARS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( CS * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( ( RRS - MRS ) + FirstVNF_Mem_Server ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( DS / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + ( ( FirstVNF_CPU_Server * MRS ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( Min( MUM ,MUM ) / Max( MUR,CS ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6574381577883485}, {"determining": "Max( Min( BR ,RRS ),( BR + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR / MUR ) ) ) ) ),Min( ( MUM / RCSe ) ,( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.6585736687460568}, {"determining": "Max( ( MDR - ( FirstVNF_Mem + RRS ) ),( FirstVNF_Mem + DDR ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.6585736687460568}, {"determining": "Max( ( MDR - ( FirstVNF_RAM + RRS ) ),( FirstVNF_Mem / DDR ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / Max( MUR,MUR ) ) ) ) ),( ( MUM / RCSe ) - ( RCSe * RRSe ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.6585736687460568}, {"determining": "Max( ( FirstVNF_Mem_Server - ( FirstVNF_Mem + RRS ) ),( FirstVNF_Mem / DDR ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),( ( MUM / RCSe ) - ( RCSe * RRSe ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,MUR ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.6585736687460568}, {"determining": "Max( ( BR - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ),( BR + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),Min( ( MUM / RCSe ) ,( RCSe * MUC ) ) ) / ( Max( ( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ) - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.047244094488188976, "obj2": 0.6786628029851769}, {"determining": "Max( ( ( RRS * MRS ) + FirstVNF_Mem_Server ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.6585736687460568}, {"determining": "Max( ( BR - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ),( BR + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),Min( ( MUM / RCSe ) ,( RCSe * MUC ) ) ) / ( Max( ( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ) - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.047244094488188976, "obj2": 0.6786628029851769}, {"determining": "Max( ( ( ( BR - RRS ) * Max( ARS,RRS ) ) - ( Min( RRS ,MRS ) / FirstVNF_Mem_Server ) ),( MDR + FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( Min( MUM ,CS ) ,Max( MUR,( Max( ( RRSe - MUC ),( CS - CS ) ) / ( ( RCSe / ( MUR * MUR ) ) / ( MUR * MUR ) ) ) ) ),Min( ( MUM * RCSe ) ,( RCSe * MUC ) ) ) / ( Max( ( Min( Min( MUM ,MUM ) ,( MUR + MUC ) ) - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUM * MUR ) ) ) )", "obj1": 0.047244094488188976, "obj2": 0.6786628029851769}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem * ( ( BR - RRS ) * Max( ARS,RRS ) ) ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),Min( ( MUM / RMSe ) ,( RCSe * MUC ) ) ) / ( Max( ( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ) - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.047244094488188976, "obj2": 0.6786628029851769}, {"determining": "Max( Max( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) - RRS ),RRS ),( CRS + RRS ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( MUR / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "Max( Min( BR ,RRS ),( FirstVNF_Mem + ( ( BR - RRS ) * Max( ARS,RRS ) ) ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),Min( ( MUM / RCSe ) ,( RCSe * MUC ) ) ) / ( Max( ( Min( Min( MUM ,MUM ) ,( MUR * RCSe ) ) - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.047244094488188976, "obj2": 0.6786628029851769}, {"determining": "Max( BR,( FirstVNF_Mem + DDR ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( RCSe,Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( MLU / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.6585736687460568}, {"determining": "Max( ( MDR * ( FirstVNF_Mem + RRS ) ),( FirstVNF_Mem + DDR ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),Min( ( MUM / RCSe ) ,( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.6585736687460568}, {"determining": "Max( ( ( ( Max( ( ( ( BR - PN ) * Max( ARS,RRS ) ) - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ),( BR + RRS ) ) - RRS ) * Max( ARS,RRS ) ) - ( ( RRS - MRS ) + FirstVNF_Mem_Server ) ),( BR + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),( RCSe / ( MUR * MUR ) ) ) / ( ( RCSe + ( MUR * MUR ) ) / ( MUR * MUR ) ) ) ) ),Min( ( MUM / RCSe ) ,( RCSe * RCSe ) ) ) / ( Max( ( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ) - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.047244094488188976, "obj2": 0.6786628029851769}, {"determining": "Max( ( ( ( BR - RRS ) * Max( ARS,RRS ) ) - ( ( RRS - MRS ) + FirstVNF_Mem_Server ) ),( BR + DDR ) )", "choosing": "( Max( Min( Min( MUM ,CS ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / ( MUR * MUR ) ) / ( MUR * MUR ) ) ) ) ),Min( ( MUM / RCSe ) ,( RCSe * MUC ) ) ) / ( Max( ( ( Min( MUM ,MUM ) + ( MUR + RCSe ) ) - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.047244094488188976, "obj2": 0.6786628029851769}, {"determining": "Max( ( ( ( BR - RRS ) * Max( ARS,RRS ) ) - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ),( BR + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / ( MUR * MUR ) ) / ( MUR * MUR ) ) ) ) ),Min( ( MUM / RCSe ) ,( RCSe * MUC ) ) ) / ( Max( ( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ) - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.047244094488188976, "obj2": 0.6786628029851769}, {"determining": "Max( ( RRS - MRS ),( BR + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,CS ) ),( ( MUM / DS ) - ( RCSe * MUC ) ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),Min( ( MUM / RCSe ) ,( RCSe * MUC ) ) ) / ( Max( ( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ) - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.047244094488188976, "obj2": 0.6786628029851769}, {"determining": "Max( ( BR - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ),( BR + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),Min( ( MUM / RCSe ) ,( RCSe * MUC ) ) ) / ( Max( ( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ) - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.047244094488188976, "obj2": 0.6786628029851769}, {"determining": "Max( Max( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) - RRS ),RRS ),( ACS + RRS ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MLU ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "Max( ( ( MRS * MRS ) + RRS ),BR )", "choosing": "( Max( Min( ( MUM * MUM ) ,Max( MUR,CS ) ),( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( DS * MUR ) ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05708661417322835, "obj2": 0.6659915593363888}, {"determining": "( Min( ( MRS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),( ( PN + MRS ) / ( Const * Const ) ) ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,MUM ) ) / ( ( RCSe / DS ) - ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "( Min( ( MRS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),( ( PN + MRS ) + ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "( ( PN - CRS ) + ( PN * FirstVNF_CPU_Server ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / Max( MUR,MUR ) ) ) ) ),( ( MUM * RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.6585736687460568}, {"determining": "Max( ( BR * MRS ),( BR + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( Min( Min( MUM ,RMSe ) ,Max( MUR,MUM ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),Min( ( MUM / RCSe ) ,( RCSe * MUC ) ) ) / ( Max( ( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ) - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.047244094488188976, "obj2": 0.6786628029851769}, {"determining": "( Min( Max( MRS,ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),( ( PN + MRS ) + ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),Min( ( MUM / RCSe ) ,( RCSe * MUC ) ) ) / ( Max( ( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ) - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.047244094488188976, "obj2": 0.6786628029851769}, {"determining": "Max( ( MDR - ( FirstVNF_Mem + RRS ) ),( FirstVNF_Mem + DDR ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / MUC ) / ( MUR * MUR ) ) ) ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.6585736687460568}, {"determining": "Max( ( MDR - ( FirstVNF_Mem + RRS ) ),( FirstVNF_Mem + DDR ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.6585736687460568}, {"determining": "Max( ( MDR - ( FirstVNF_Mem + RRS ) ),( FirstVNF_Mem * DDR ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),( ( MUM / RCSe ) - ( MUM * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.6585736687460568}, {"determining": "Max( ( ( ( BR - RRS ) * Max( ARS,RRS ) ) - ( ( FirstVNF_Mem + RRS ) + FirstVNF_Mem_Server ) ),( BR + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / ( MUR * MUR ) ) / ( MUR * MUR ) ) ) ) ),Min( ( MUM / RCSe ) ,( RCSe * MUC ) ) ) / ( Max( ( Min( MUC ,( MUR + RCSe ) ) - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.047244094488188976, "obj2": 0.6786628029851769}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + ARS ) )", "choosing": "( ( Min( MUR ,MLU ) / ( ( ( RRSe - MUC ) * Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,RRSe ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "Max( ( ( RRS * MRS ) + FirstVNF_Mem_Server ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.6585736687460568}, {"determining": "( Min( ( MRS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),( ( PN + MRS ) + ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + ( ( BR - RRS ) * ( PN - CRS ) ) ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( MLU ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),Min( ( MUM / RCSe ) ,( RCSe * MUC ) ) ) / ( Max( ( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ) - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.047244094488188976, "obj2": 0.6786628029851769}, {"determining": "( Min( ( MRS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),Max( ( PN + ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ),( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) + ( MUR * MUR ) ) ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "Max( Max( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) - RRS ),RRS ),( Const + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / ( MUR * MUR ) ) / ( MUR * MUR ) ) ) ) ),Min( ( MUM / RCSe ) ,( RCSe * MUC ) ) ) / ( Max( ( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ) - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.047244094488188976, "obj2": 0.6786628029851769}, {"determining": "Max( Max( MDR,( FirstVNF_Mem + RRS ) ),( FirstVNF_Mem - DDR ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),( ( MUM / RCSe ) - ( MUM * MUC ) ) ) / ( ( ( RRSe - MUC ) / Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.6585736687460568}, {"determining": "( Min( ( MRS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),( ( PN + MRS ) + ( Const * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MUR ,RCSe ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "Max( ( MDR - ( FirstVNF_Mem + RRS ) ),( FirstVNF_Mem + DDR ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.6585736687460568}, {"determining": "Max( ( MDR - ( FirstVNF_Mem + RRS ) ),Max( ( BR - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ),( BR + RRS ) ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( MUR / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.6585736687460568}, {"determining": "Max( ( BR - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ),( BR + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.6585736687460568}, {"determining": "Max( ( MDR - ( FirstVNF_Mem + RRS ) ),( FirstVNF_Mem + DDR ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),Min( ( MUM / RCSe ) ,( RCSe * MUC ) ) ) / ( Max( ( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ) - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.047244094488188976, "obj2": 0.6786628029851769}, {"determining": "Max( ( ( PN - CRS ) - RRS ),( FirstVNF_Mem / RRS ) )", "choosing": "( ( RMSe / RMSe ) / ( Max( ( RRSe - MUC ),Min( CS ,( Min( MLU ,DS ) + ( RRSe + RRSe ) ) ) ) / ( ( RCSe / MLU ) / MUC ) ) )", "obj1": 0.04921259842519685, "obj2": 0.666209124831341}, {"determining": "Max( ( ( ( BR - RRS ) * Max( ARS,RRS ) ) - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ),( BR + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),( RCSe / ( MUR * MUR ) ) ) / ( ( RCSe / ( MUR * MUR ) ) / ( MUR * MUR ) ) ) ) ),Min( ( MUM / RCSe ) ,( RCSe * RCSe ) ) ) / ( Max( ( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ) - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.047244094488188976, "obj2": 0.6786628029851769}, {"determining": "Max( ( ( ( Max( ( ( ( BR - PN ) * Max( ARS,RRS ) ) - ( ( RRS / MRS ) + FirstVNF_Mem_Server ) ),( BR + RRS ) ) - RRS ) * Max( ARS,RRS ) ) - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ),( BR + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( MLU / ( MUR * MUR ) ) / ( MUR * MUR ) ) ) ) ),Min( ( MUM / RCSe ) ,( RCSe * MUC ) ) ) / ( Max( ( Min( Min( MUM ,MUM ) ,( MUR + RCSe ) ) - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.047244094488188976, "obj2": 0.6786628029851769}, {"determining": "Max( ( MDR - ( FirstVNF_Mem + RRS ) ),( ( MRS * ARS ) + DDR ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( MUR / DS ) / ( MUR * MUR ) ) ) ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.6585736687460568}, {"determining": "Max( ( MDR - ( FirstVNF_Mem + RRS ) ),Min( PN ,DDR ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( CS - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( DS * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "( Min( ( MRS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),( ( PN + MRS ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( Min( RRSe ,MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.6585736687460568}], "15": [{"determining": "( ( FirstVNF_CPU_Server + CRS ) + Max( MRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,DS ) + ( RRSe + RRSe ) )", "obj1": 0.6062992125984252, "obj2": 0.28813626169404233}, {"determining": "Max( Min( BR ,RRS ),( BR + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR / MUR ) ) ) ) ),Min( ( MUM / RCSe ) ,( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.6585736687460568}, {"determining": "Max( ( MDR - ( FirstVNF_Mem + RRS ) ),( FirstVNF_Mem + DDR ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.6585736687460568}, {"determining": "Max( ( MDR - ( FirstVNF_RAM + RRS ) ),( FirstVNF_Mem / DDR ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / Max( MUR,MUR ) ) ) ) ),( ( MUM / RCSe ) - ( RCSe * RRSe ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.6585736687460568}, {"determining": "Max( ( FirstVNF_Mem_Server - ( FirstVNF_Mem + RRS ) ),( FirstVNF_Mem / DDR ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),( ( MUM / RCSe ) - ( RCSe * RRSe ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,MUR ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.6585736687460568}, {"determining": "Max( ( ( RRS * MRS ) + FirstVNF_Mem_Server ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.6585736687460568}, {"determining": "Max( Max( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) - RRS ),RRS ),( CRS + RRS ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( MUR / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "Max( BR,( FirstVNF_Mem + DDR ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( RCSe,Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( MLU / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.6585736687460568}, {"determining": "Max( ( MDR * ( FirstVNF_Mem + RRS ) ),( FirstVNF_Mem + DDR ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),Min( ( MUM / RCSe ) ,( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.6585736687460568}, {"determining": "Max( Max( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) - RRS ),RRS ),( ACS + RRS ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MLU ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "Max( ( ( MRS * MRS ) + RRS ),BR )", "choosing": "( Max( Min( ( MUM * MUM ) ,Max( MUR,CS ) ),( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( DS * MUR ) ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05708661417322835, "obj2": 0.6659915593363888}, {"determining": "( Min( ( MRS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),( ( PN + MRS ) / ( Const * Const ) ) ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,MUM ) ) / ( ( RCSe / DS ) - ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "( Min( ( MRS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),( ( PN + MRS ) + ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "( ( PN - CRS ) + ( PN * FirstVNF_CPU_Server ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / Max( MUR,MUR ) ) ) ) ),( ( MUM * RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.6585736687460568}, {"determining": "Max( ( MDR - ( FirstVNF_Mem + RRS ) ),( FirstVNF_Mem + DDR ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / MUC ) / ( MUR * MUR ) ) ) ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.6585736687460568}, {"determining": "Max( ( MDR - ( FirstVNF_Mem + RRS ) ),( FirstVNF_Mem + DDR ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.6585736687460568}, {"determining": "Max( ( MDR - ( FirstVNF_Mem + RRS ) ),( FirstVNF_Mem * DDR ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),( ( MUM / RCSe ) - ( MUM * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.6585736687460568}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + ARS ) )", "choosing": "( ( Min( MUR ,MLU ) / ( ( ( RRSe - MUC ) * Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,RRSe ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "Max( ( ( RRS * MRS ) + FirstVNF_Mem_Server ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.6585736687460568}, {"determining": "( Min( ( MRS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),( ( PN + MRS ) + ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "( Min( ( MRS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),Max( ( PN + ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ),( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) + ( MUR * MUR ) ) ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "Max( Max( MDR,( FirstVNF_Mem + RRS ) ),( FirstVNF_Mem - DDR ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),( ( MUM / RCSe ) - ( MUM * MUC ) ) ) / ( ( ( RRSe - MUC ) / Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.6585736687460568}, {"determining": "( Min( ( MRS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),( ( PN + MRS ) + ( Const * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MUR ,RCSe ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "Max( ( MDR - ( FirstVNF_Mem + RRS ) ),( FirstVNF_Mem + DDR ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.6585736687460568}, {"determining": "Max( ( MDR - ( FirstVNF_Mem + RRS ) ),Max( ( BR - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ),( BR + RRS ) ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( MUR / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.6585736687460568}, {"determining": "Max( ( BR - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ),( BR + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.6585736687460568}, {"determining": "Max( ( ( PN - CRS ) - RRS ),( FirstVNF_Mem / RRS ) )", "choosing": "( ( RMSe / RMSe ) / ( Max( ( RRSe - MUC ),Min( CS ,( Min( MLU ,DS ) + ( RRSe + RRSe ) ) ) ) / ( ( RCSe / MLU ) / MUC ) ) )", "obj1": 0.04921259842519685, "obj2": 0.666209124831341}, {"determining": "Max( ( MDR - ( FirstVNF_Mem + RRS ) ),( ( MRS * ARS ) + DDR ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( MUR / DS ) / ( MUR * MUR ) ) ) ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.6585736687460568}, {"determining": "Max( ( MDR - ( FirstVNF_Mem + RRS ) ),Min( PN ,DDR ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( CS - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( DS * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "( Min( ( MRS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),( ( PN + MRS ) * ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( Min( RRSe ,MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.6585736687460568}, {"determining": "Max( ( ( PN - AMS ) - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( RRSe,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / Max( MUR,MUR ) ) ) ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.6585736687460568}, {"determining": "( ( PN - CRS ) + ( MRS * FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / RMSe ) / ( Max( ( RRSe - MUC ),Min( CS ,( Min( MLU ,DS ) + ( RRSe + RRSe ) ) ) ) / ( ( RCSe / DS ) / MUC ) ) )", "obj1": 0.04921259842519685, "obj2": 0.666209124831341}, {"determining": "Max( ( ( MRS * MRS ) + Max( ( MDR - ( FirstVNF_Mem + RRS ) ),( FirstVNF_Mem + DDR ) ) ),BR )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "Max( ( MDR - ( FirstVNF_Mem + RRS ) ),( FirstVNF_Mem + DDR ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "Max( ( ( RRS - MRS ) + FirstVNF_Mem_Server ),( FirstVNF_Mem + RRS ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "Max( ( ( PN - CRS ) - RRS ),Min( ( MRS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RMSe / RMSe ) / ( Max( ( RRSe - MUC ),Min( CS ,( Min( MLU ,DS ) + ( MUR + RRSe ) ) ) ) / ( ( RCSe / DS ) / MUC ) ) )", "obj1": 0.04921259842519685, "obj2": 0.666209124831341}, {"determining": "( Min( ( MRS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),( ( PN + MRS ) + ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "Max( ( ( PN - CRS ) - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( ( RMSe / RMSe ) / ( Max( ( RRSe - MUC ),Min( CS ,( Min( MLU ,DS ) + ( RRSe + RRSe ) ) ) ) / ( ( RCSe / DS ) / MUC ) ) )", "obj1": 0.04921259842519685, "obj2": 0.666209124831341}, {"determining": "Max( ( MDR - ( FirstVNF_Mem + RRS ) ),( FirstVNF_Mem + DDR ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "( Min( ( MRS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),( ( PN + MRS ) + ( Const * Const ) ) ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "Max( ( MDR - ( FirstVNF_Mem + RRS ) ),( FirstVNF_Mem + DDR ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "( Min( ( MRS * FirstVNF_CPU ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),( ( PN + ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ) + ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( Min( RCSe ,DS ) / ( MUR * MUR ) ) ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "Max( ( MDR * ( FirstVNF_Mem + RRS ) ),( FirstVNF_Mem + DDR ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "Max( ( MDR - ( FirstVNF_Mem + RRS ) ),( FirstVNF_Mem + DDR ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "Max( ( MDR - ( FirstVNF_Mem + RRS ) ),Min( PN ,DDR ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( CS - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( DS * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "Max( ( BR - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ),( BR + RRS ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "( Min( ( MRS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),( ( PN + MRS ) + ( Const * Max( ( PN + MRS ),( ( PN + MRS ) / ( Const * Const ) ) ) ) ) ) )", "choosing": "( Max( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.045275590551181105, "obj2": 0.6763272653608439}, {"determining": "Max( ( MDR - ( FirstVNF_Mem + RRS ) ),( BR - RRS ) )", "choosing": "( Max( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - RMSe ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04330708661417323, "obj2": 0.6779941902056641}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "( Min( ( MRS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( ( MDR * ( FirstVNF_Mem + RRS ) ) + MRS ),( ( PN + ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ) + ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( Max( ( Min( ( MUM / RCSe ) ,( RCSe * MUC ) ) - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "( Min( ( MRS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),( ( PN + ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ) + ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}], "16": [{"determining": "Max( Min( BR ,RRS ),( BR + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR / MUR ) ) ) ) ),Min( ( MUM / RCSe ) ,( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.6585736687460568}, {"determining": "Max( Max( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) - RRS ),RRS ),( CRS + RRS ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( MUR / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "Max( Max( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) - RRS ),RRS ),( ACS + RRS ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MLU ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "( Min( ( MRS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),( ( PN + MRS ) / ( Const * Const ) ) ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,MUM ) ) / ( ( RCSe / DS ) - ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "( Min( ( MRS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),( ( PN + MRS ) + ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + ARS ) )", "choosing": "( ( Min( MUR ,MLU ) / ( ( ( RRSe - MUC ) * Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,RRSe ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "( Min( ( MRS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),( ( PN + MRS ) + ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "( Min( ( MRS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),Max( ( PN + ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ),( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) + ( MUR * MUR ) ) ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "( Min( ( MRS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),( ( PN + MRS ) + ( Const * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MUR ,RCSe ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "Max( ( MDR - ( FirstVNF_Mem + RRS ) ),Min( PN ,DDR ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( CS - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( DS * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "Max( ( ( MRS * MRS ) + Max( ( MDR - ( FirstVNF_Mem + RRS ) ),( FirstVNF_Mem + DDR ) ) ),BR )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "Max( ( MDR - ( FirstVNF_Mem + RRS ) ),( FirstVNF_Mem + DDR ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "Max( ( ( RRS - MRS ) + FirstVNF_Mem_Server ),( FirstVNF_Mem + RRS ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "( Min( ( MRS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),( ( PN + MRS ) + ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "Max( ( MDR - ( FirstVNF_Mem + RRS ) ),( FirstVNF_Mem + DDR ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "( Min( ( MRS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),( ( PN + MRS ) + ( Const * Const ) ) ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "Max( ( MDR - ( FirstVNF_Mem + RRS ) ),( FirstVNF_Mem + DDR ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "( Min( ( MRS * FirstVNF_CPU ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),( ( PN + ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ) + ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( Min( RCSe ,DS ) / ( MUR * MUR ) ) ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "Max( ( MDR * ( FirstVNF_Mem + RRS ) ),( FirstVNF_Mem + DDR ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "Max( ( MDR - ( FirstVNF_Mem + RRS ) ),( FirstVNF_Mem + DDR ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "Max( ( MDR - ( FirstVNF_Mem + RRS ) ),Min( PN ,DDR ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( CS - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( DS * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "Max( ( BR - ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ),( BR + RRS ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + RRS ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "( Min( ( MRS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( ( MDR * ( FirstVNF_Mem + RRS ) ) + MRS ),( ( PN + ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ) + ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( Max( ( Min( ( MUM / RCSe ) ,( RCSe * MUC ) ) - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "( Min( ( MRS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),( ( PN + ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ) + ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "( Min( ( MRS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),( ( PN + MRS ) + ( MDR * Const ) ) ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "Max( ( MDR - ( FirstVNF_Mem + ( Const * Const ) ) ),( PN + DDR ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( CS - RCSe ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "Max( ( MDR - ( FirstVNF_Mem + RRS ) ),( PN + DDR ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( CS - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "( Min( ( MRS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),( ( PN + MRS ) + ( Const * Const ) ) ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "( Min( ( MRS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( ( MDR * ( FirstVNF_Mem + RRS ) ) + MRS ),( ( PN + ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ) + ( Const * ( MDR * ( FirstVNF_Mem + RRS ) ) ) ) ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( Max( ( Min( MUR ,( RCSe * MUC ) ) - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "( Min( ( MRS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( ( MDR * ( FirstVNF_Mem + RRS ) ) + MRS ),( ( PN + ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ) + ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( Max( ( Min( ( MUM / RCSe ) ,( RCSe * MUC ) ) - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "Max( ( MDR * ( FirstVNF_Mem + RRS ) ),( FirstVNF_Mem + DDR ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "Max( ( ( FirstVNF_Mem + RRS ) * ( FirstVNF_Mem + RRS ) ),( FirstVNF_Mem + DDR ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - Max( ( RRSe - MUC ),Min( CS ,MUR ) ) ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "Max( ( FirstVNF_Mem_Server - ( FirstVNF_Mem + RRS ) ),( FirstVNF_Mem + DDR ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "( ( PN + CRS ) + Max( MRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( MLU ,DS ) + ( RRSe + RRSe ) )", "obj1": 0.5433070866141733, "obj2": 0.3350832704086982}, {"determining": "( ( FirstVNF_CPU_Server - ( Min( ARS ,( MDR * FirstVNF_RAM ) ) + MDR ) ) + ( ( FirstVNF_CPU * BR ) * ( DDR - RRS ) ) )", "choosing": "Min( Min( MUM ,RCSe ) ,( MLU + DS ) )", "obj1": 0.40551181102362205, "obj2": 0.46173555687918705}, {"determining": "Max( ( ( PN - CRS ) - RRS ),Min( ( MRS * ARS ) ,Max( RRS,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RMSe / RMSe ) / ( Max( ( RRSe - MUC ),Min( CS ,( Min( MLU ,DS ) + ( MUR + RRSe ) ) ) ) / ( ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) / MUC ) ) )", "obj1": 0.6712598425196851, "obj2": 0.2477106178864566}, {"determining": "Max( ( ( RRS - MRS ) + FirstVNF_Mem_Server ),( MDR - ( FirstVNF_Mem + RRS ) ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "Max( ( MDR - ( FirstVNF_Mem + RRS ) ),( FirstVNF_Mem + DDR ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "Max( ( MDR - ( FirstVNF_Mem + RRS ) ),( FirstVNF_Mem - DDR ) )", "choosing": "( Max( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.1594488188976378, "obj2": 0.5869464387602064}, {"determining": "( ( MDR - ( FirstVNF_Mem + RRS ) ) - ( BR - RRS ) )", "choosing": "( Max( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - RMSe ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.9822834645669292, "obj2": 0.015779577987594683}, {"determining": "Max( ( MDR * ( FirstVNF_Mem + RRS ) ),FirstVNF_Mem_Server )", "choosing": "( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.6155560444184978}, {"determining": "Max( ( ( PN - CRS ) - RRS ),( ( RRS - MRS ) + FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe / RMSe ) / Max( ( RRSe - MUC ),Min( CS ,CS ) ) )", "obj1": 0.24803149606299213, "obj2": 0.48340159041968156}, {"determining": "Min( ( MDR - ( FirstVNF_Mem + RRS ) ) ,( FirstVNF_Mem + DDR ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / MUC ) / ( MUR * MUR ) ) ) ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.9783464566929134, "obj2": 0.01975191096857583}, {"determining": "Max( ( ( RRS - MRS ) + FirstVNF_Mem_Server ),( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + RRS ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( RCSe / DS ) )", "obj1": 0.19881889763779528, "obj2": 0.557396626107472}, {"determining": "( ( FirstVNF_CPU_Server + CRS ) + Max( MRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,DS ) + ( RRSe + RRSe ) )", "obj1": 0.5295275590551181, "obj2": 0.35855040150910505}, {"determining": "Max( ( MDR - ( FirstVNF_Mem + RRS ) ),( BR - Min( PN ,DDR ) ) )", "choosing": "( Max( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( ( ( RCSe / DS ) / MUC ) ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - RMSe ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.9763779527559056, "obj2": 0.021346073736274875}, {"determining": "Max( Min( BR ,RRS ),( BR + ( Const + MRS ) ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR / MUR ) ) ) ) ),Min( ( MUM / RCSe ) ,( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / ( Min( MUR ,MLU ) / Max( Max( ( RRSe - MUC ),Min( CS ,CS ) ),( ( RCSe / DS ) / MUC ) ) ) ) / ( MUR * MUR ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.41610308527564754}, {"determining": "( Min( ( MRS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),( ( PN + ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ) + ( Const * Min( PN ,DDR ) ) ) ) )", "choosing": "( ( Min( MUR ,MLU ) / ( ( RCSe / DS ) / ( DS * MUR ) ) ) / ( Max( ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.547244094488189, "obj2": 0.28611608412925543}, {"determining": "( Min( ( MRS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),( FirstVNF_Mem + ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / Min( CS ,CS ) ) / ( MUR * MUR ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.6252412554258994}, {"determining": "( ( ( Min( ( ( ( Min( ACS ,CRS ) - ( MDR / FirstVNF_Mem_Server ) ) / ( ( ACS + ARS ) + ( FirstVNF_RAM * FirstVNF_RAM ) ) ) / ( ( Min( FirstVNF_CPU ,Const ) * ( AMS - MRS ) ) / Max( ( FirstVNF_Mem_Server / DDR ),( ARS * RRS ) ) ) ) ,( Min( ( ( Const - DDR ) * ( MDR + FirstVNF_Mem ) ) ,( ( FirstVNF_Mem_Server - Const ) / ( FirstVNF_CPU - DDR ) ) ) / ( Min( Max( BR,ACS ) ,Min( PN ,PN ) ) + ( ( CRS - MDR ) * ( AMS * MRS ) ) ) ) ) + ( Min( ( ( Min( FirstVNF_Mem ,MRS ) / ( BR * FirstVNF_CPU ) ) / ( Min( ACS ,Const ) + Max( DDR,FirstVNF_CPU ) ) ) ,( ( Min( MDR ,PN ) * Min( DDR ,RRS ) ) / ( Max( BR,ARS ) + Max( CRS,AMS ) ) ) ) / ( Min( ( ( ARS * ACS ) * Min( AMS ,FirstVNF_CPU ) ) ,( ( PN + Const ) + ( RRS * FirstVNF_RAM ) ) ) * ( ( ( RRS + Const ) - ( AMS + DDR ) ) + Max( ( AMS - FirstVNF_RAM ),( FirstVNF_RAM / MRS ) ) ) ) ) ) / Max( ( ( ( Min( Min( DDR ,ARS ) ,( ARS - PN ) ) + ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) / ( MDR + FirstVNF_CPU_Server ) ) ) * Max( Max( Max( FirstVNF_Mem_Server,Const ),( ACS + AMS ) ),( Min( BR ,FirstVNF_RAM_Server ) / ( BR + BR ) ) ) ) + ( ( ( Max( AMS,FirstVNF_Mem_Server ) * ( RRS - ACS ) ) * ( Min( FirstVNF_CPU_Server ,PN ) * ( DDR - DDR ) ) ) * Max( ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) + Min( AMS ,FirstVNF_CPU_Server ) ),Max( ( AMS * MRS ),( FirstVNF_CPU - RRS ) ) ) ) ),( ( ( ( Min( AMS ,CRS ) + Max( ARS,PN ) ) + ( ( ARS - FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ) + ( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) + Min( MDR ,FirstVNF_RAM ) ) - Max( ( AMS * FirstVNF_CPU_Server ),Min( MRS ,CRS ) ) ) ) + Min( ( ( ( Const * PN ) - Min( RRS ,FirstVNF_CPU_Server ) ) * Max( ( FirstVNF_CPU * ACS ),Max( AMS,RRS ) ) ) ,( Max( Max( ACS,MDR ),( MRS * MRS ) ) / ( ( RRS / CRS ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) ) ) ) ) / ( ( ( ( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - Min( DDR ,FirstVNF_RAM ) ) / ( ( PN * FirstVNF_Mem ) - Max( Const,ARS ) ) ) - Min( Max( ( PN * FirstVNF_Mem_Server ),Max( MRS,PN ) ) ,( Min( RRS ,Const ) - ( FirstVNF_RAM_Server + MRS ) ) ) ) / Max( Max( Min( ( PN - CRS ) ,Min( MDR ,FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server + AMS ) - ( MDR + FirstVNF_CPU_Server ) ) ),( ( ( MRS - CRS ) - ( ARS / ARS ) ) + Max( Min( FirstVNF_Mem_Server ,Const ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ) ) - ( Min( ( ( Min( CRS ,MDR ) * ( FirstVNF_RAM_Server * PN ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) + ( FirstVNF_Mem_Server - ARS ) ) ) ,Max( Min( ( FirstVNF_CPU_Server - RRS ) ,( FirstVNF_Mem + ACS ) ),( Max( ACS,FirstVNF_CPU_Server ) * ( MDR - MRS ) ) ) ) / ( Max( ( ( FirstVNF_CPU * ARS ) - Max( CRS,FirstVNF_RAM_Server ) ),( Min( FirstVNF_Mem_Server ,CRS ) + ( DDR - FirstVNF_RAM_Server ) ) ) * ( Max( ( FirstVNF_CPU + RRS ),( CRS + ARS ) ) - ( Max( CRS,MRS ) * Max( MRS,RRS ) ) ) ) ) ) - ( Max( Min( Min( Min( ( FirstVNF_Mem - FirstVNF_Mem_Server ) ,Min( MDR ,MRS ) ) ,( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( MRS + FirstVNF_Mem ) ) ) ,( Min( Max( FirstVNF_RAM,ACS ) ,( FirstVNF_Mem_Server * Const ) ) / ( ( FirstVNF_Mem_Server / ARS ) - Max( PN,FirstVNF_RAM_Server ) ) ) ),Max( Min( ( Min( FirstVNF_CPU ,Const ) * Max( Const,PN ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem_Server ) / ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ),( ( ( BR - Const ) * ( RRS * CRS ) ) - Max( ( CRS + ACS ),Min( MDR ,FirstVNF_Mem ) ) ) ) ) / Max( Min( Max( ( Min( FirstVNF_Mem ,FirstVNF_CPU ) - ( MDR / FirstVNF_Mem ) ),( ( FirstVNF_RAM_Server - DDR ) - ( AMS - CRS ) ) ) ,( Max( Max( BR,FirstVNF_Mem_Server ),( BR - MDR ) ) + ( ( ARS - DDR ) + ( RRS - FirstVNF_CPU_Server ) ) ) ),Min( Max( Min( ( PN / AMS ) ,Max( PN,DDR ) ),Max( ( MRS / FirstVNF_CPU_Server ),( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,( ( Min( DDR ,MRS ) - ( MRS + AMS ) ) + Max( ( DDR / MDR ),( ACS / RRS ) ) ) ) ) ) ) )", "choosing": "Min( Max( ( Min( ( ( Max( ( MUM - MLU ),( MUR / DS ) ) + Max( Max( RRSe,CS ),( MUR - RMSe ) ) ) - ( ( ( MUR / MUM ) / Min( RCSe ,MLU ) ) / ( Max( RMSe,MUR ) - ( MUC + DS ) ) ) ) ,Min( ( ( ( CS + MUM ) * ( MUM + RCSe ) ) - ( Min( CS ,RRSe ) + ( MUR * MLU ) ) ) ,( Min( Max( MLU,RRSe ) ,( MLU - MUM ) ) / Max( ( MUC / DS ),Max( DS,MUR ) ) ) ) ) * Min( ( Min( Max( ( RRSe * MLU ),Min( DS ,CS ) ) ,( ( MUC * RRSe ) * ( RCSe / MUM ) ) ) * ( ( ( RCSe / RMSe ) * Max( MLU,MLU ) ) / ( ( RMSe * MUM ) + ( RRSe + MUC ) ) ) ) ,Max( ( ( Min( RRSe ,RMSe ) - ( RCSe / RCSe ) ) + Max( ( MUR / RMSe ),( MLU * CS ) ) ),( ( ( MUR / MLU ) * Min( MUR ,MUC ) ) - Max( ( DS / MUC ),( RRSe - RCSe ) ) ) ) ) ),( Max( ( ( Max( Min( CS ,RMSe ),Max( MLU,MUM ) ) - ( Max( CS,MUR ) * Min( MUC ,CS ) ) ) - Max( ( ( DS - MUC ) / Min( MUM ,MUM ) ),( ( CS + DS ) * ( MLU * DS ) ) ) ),( ( ( ( RRSe / MUC ) * Min( CS ,DS ) ) / ( ( MUR * MUR ) - ( RMSe + CS ) ) ) + Max( ( ( MUM + RMSe ) - ( MUR * CS ) ),( Min( CS ,CS ) + ( MUC - RRSe ) ) ) ) ) * ( Max( Min( Max( Min( MUM ,CS ),Min( RRSe ,RCSe ) ) ,( ( MLU + MUC ) - ( MLU + MUC ) ) ),( Max( ( RMSe * MUR ),( MUR / RRSe ) ) - Min( Max( RCSe,MUR ) ,( RRSe - CS ) ) ) ) + ( Min( ( ( RCSe - RMSe ) + ( MUC - RCSe ) ) ,Min( Min( MUM ,MLU ) ,( MLU / CS ) ) ) * Max( ( ( RMSe * MUR ) * Min( DS ,MUM ) ),( ( CS * RCSe ) + Max( MLU,MUR ) ) ) ) ) ) ) ,( ( ( Min( Max( ( ( RCSe + DS ) + Max( MUC,RCSe ) ),( ( MLU * RMSe ) * ( MUR / MUM ) ) ) ,( ( ( RCSe * MUR ) + Min( RMSe ,MUR ) ) - ( Min( RMSe ,CS ) / ( RMSe + MLU ) ) ) ) - ( ( ( Max( MLU,RRSe ) / Min( RRSe ,RRSe ) ) * Max( Max( RRSe,MUC ),Max( MUR,RMSe ) ) ) / Max( ( ( MLU * RRSe ) + Min( MUC ,RMSe ) ),( Max( MUR,MLU ) / ( CS / MLU ) ) ) ) ) + ( Max( Min( ( ( MLU - MUR ) / ( MUC / CS ) ) ,Min( ( CS + CS ) ,Min( MUM ,RCSe ) ) ),( ( ( MUR + RCSe ) + ( RRSe + DS ) ) * ( Max( DS,RMSe ) * ( RMSe + DS ) ) ) ) * Min( Min( ( ( MLU / RCSe ) / ( MLU - RRSe ) ) ,( Min( MUR ,RRSe ) * ( DS / RCSe ) ) ) ,( Max( ( DS / MLU ),Min( RCSe ,MUC ) ) - Max( Min( DS ,RRSe ),Min( MUM ,MUM ) ) ) ) ) ) / ( ( ( ( ( ( CS + MUC ) * Min( RRSe ,RMSe ) ) + ( ( CS / RMSe ) + ( RRSe / MUM ) ) ) * ( Min( Min( MUC ,MUC ) ,Min( RCSe ,DS ) ) * ( ( MUM * MUM ) / ( DS / RRSe ) ) ) ) + Min( ( Max( Max( MUM,MUC ),( RRSe / RMSe ) ) * Max( ( RRSe - MLU ),( RRSe + CS ) ) ) ,( ( Max( MUR,RRSe ) / ( MLU / MLU ) ) / ( Max( MUM,MLU ) + ( RMSe + MUC ) ) ) ) ) / Max( Min( ( Max( Min( DS ,RCSe ),( MLU + MUM ) ) + ( Min( MLU ,MUR ) / ( CS * CS ) ) ) ,Max( ( ( MLU / MUC ) + Min( RRSe ,MUR ) ),( ( CS * MUM ) / Max( MLU,DS ) ) ) ),Min( Min( ( ( MUC + RRSe ) + ( MUM - DS ) ) ,( ( RMSe + RMSe ) + ( CS / RRSe ) ) ) ,( Min( ( MUR / MUC ) ,Max( MUM,RCSe ) ) + ( ( CS + MLU ) - Min( RRSe ,MUM ) ) ) ) ) ) ) )", "obj1": 0.6771653543307087, "obj2": 0.21228689225064357}], "17": [{"determining": "Max( Min( BR ,RRS ),( BR + RRS ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR / MUR ) ) ) ) ),Min( ( MUM / RCSe ) ,( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.6585736687460568}, {"determining": "Max( Max( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) - RRS ),RRS ),( CRS + RRS ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( MUR / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "Max( Max( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) - RRS ),RRS ),( ACS + RRS ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MLU ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "( Min( ( MRS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),( ( PN + MRS ) / ( Const * Const ) ) ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,MUM ) ) / ( ( RCSe / DS ) - ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "( Min( ( MRS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),( ( PN + MRS ) + ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "Max( ( BR - RRS ),( FirstVNF_Mem + ARS ) )", "choosing": "( ( Min( MUR ,MLU ) / ( ( ( RRSe - MUC ) * Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,RRSe ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "( Min( ( MRS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),( ( PN + MRS ) + ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "( Min( ( MRS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),Max( ( PN + ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ),( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) + ( MUR * MUR ) ) ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "( Min( ( MRS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),( ( PN + MRS ) + ( Const * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MUR ,RCSe ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6799362211123219}, {"determining": "Max( ( ( PN - CRS ) - RRS ),Min( ( MRS * ARS ) ,Max( RRS,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RMSe / RMSe ) / ( Max( ( RRSe - MUC ),Min( CS ,( Min( MLU ,DS ) + ( MUR + RRSe ) ) ) ) / ( ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) / MUC ) ) )", "obj1": 0.6712598425196851, "obj2": 0.2477106178864566}, {"determining": "Max( ( MDR - ( FirstVNF_Mem + RRS ) ),( FirstVNF_Mem - DDR ) )", "choosing": "( Max( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.1594488188976378, "obj2": 0.5869464387602064}, {"determining": "( ( MDR - ( FirstVNF_Mem + RRS ) ) - ( BR - RRS ) )", "choosing": "( Max( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - RMSe ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.9822834645669292, "obj2": 0.015779577987594683}, {"determining": "Max( ( MDR * ( FirstVNF_Mem + RRS ) ),FirstVNF_Mem_Server )", "choosing": "( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.6155560444184978}, {"determining": "Max( ( ( PN - CRS ) - RRS ),( ( RRS - MRS ) + FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe / RMSe ) / Max( ( RRSe - MUC ),Min( CS ,CS ) ) )", "obj1": 0.24803149606299213, "obj2": 0.48340159041968156}, {"determining": "Min( ( MDR - ( FirstVNF_Mem + RRS ) ) ,( FirstVNF_Mem + DDR ) )", "choosing": "( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / MUC ) / ( MUR * MUR ) ) ) ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.9783464566929134, "obj2": 0.01975191096857583}, {"determining": "Max( ( ( RRS - MRS ) + FirstVNF_Mem_Server ),( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + RRS ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( RCSe / DS ) )", "obj1": 0.19881889763779528, "obj2": 0.557396626107472}, {"determining": "Max( ( MDR - ( FirstVNF_Mem + RRS ) ),( BR - Min( PN ,DDR ) ) )", "choosing": "( Max( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( ( ( RCSe / DS ) / MUC ) ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - RMSe ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.9763779527559056, "obj2": 0.021346073736274875}, {"determining": "( Min( ( MRS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),( ( PN + ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ) + ( Const * Min( PN ,DDR ) ) ) ) )", "choosing": "( ( Min( MUR ,MLU ) / ( ( RCSe / DS ) / ( DS * MUR ) ) ) / ( Max( ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.547244094488189, "obj2": 0.28611608412925543}, {"determining": "( Min( ( MRS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),( FirstVNF_Mem + ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / Min( CS ,CS ) ) / ( MUR * MUR ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.6252412554258994}, {"determining": "( ( ( Min( ( ( ( Min( ACS ,CRS ) - ( MDR / FirstVNF_Mem_Server ) ) / ( ( ACS + ARS ) + ( FirstVNF_RAM * FirstVNF_RAM ) ) ) / ( ( Min( FirstVNF_CPU ,Const ) * ( AMS - MRS ) ) / Max( ( FirstVNF_Mem_Server / DDR ),( ARS * RRS ) ) ) ) ,( Min( ( ( Const - DDR ) * ( MDR + FirstVNF_Mem ) ) ,( ( FirstVNF_Mem_Server - Const ) / ( FirstVNF_CPU - DDR ) ) ) / ( Min( Max( BR,ACS ) ,Min( PN ,PN ) ) + ( ( CRS - MDR ) * ( AMS * MRS ) ) ) ) ) + ( Min( ( ( Min( FirstVNF_Mem ,MRS ) / ( BR * FirstVNF_CPU ) ) / ( Min( ACS ,Const ) + Max( DDR,FirstVNF_CPU ) ) ) ,( ( Min( MDR ,PN ) * Min( DDR ,RRS ) ) / ( Max( BR,ARS ) + Max( CRS,AMS ) ) ) ) / ( Min( ( ( ARS * ACS ) * Min( AMS ,FirstVNF_CPU ) ) ,( ( PN + Const ) + ( RRS * FirstVNF_RAM ) ) ) * ( ( ( RRS + Const ) - ( AMS + DDR ) ) + Max( ( AMS - FirstVNF_RAM ),( FirstVNF_RAM / MRS ) ) ) ) ) ) / Max( ( ( ( Min( Min( DDR ,ARS ) ,( ARS - PN ) ) + ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) / ( MDR + FirstVNF_CPU_Server ) ) ) * Max( Max( Max( FirstVNF_Mem_Server,Const ),( ACS + AMS ) ),( Min( BR ,FirstVNF_RAM_Server ) / ( BR + BR ) ) ) ) + ( ( ( Max( AMS,FirstVNF_Mem_Server ) * ( RRS - ACS ) ) * ( Min( FirstVNF_CPU_Server ,PN ) * ( DDR - DDR ) ) ) * Max( ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) + Min( AMS ,FirstVNF_CPU_Server ) ),Max( ( AMS * MRS ),( FirstVNF_CPU - RRS ) ) ) ) ),( ( ( ( Min( AMS ,CRS ) + Max( ARS,PN ) ) + ( ( ARS - FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ) + ( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) + Min( MDR ,FirstVNF_RAM ) ) - Max( ( AMS * FirstVNF_CPU_Server ),Min( MRS ,CRS ) ) ) ) + Min( ( ( ( Const * PN ) - Min( RRS ,FirstVNF_CPU_Server ) ) * Max( ( FirstVNF_CPU * ACS ),Max( AMS,RRS ) ) ) ,( Max( Max( ACS,MDR ),( MRS * MRS ) ) / ( ( RRS / CRS ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) ) ) ) ) / ( ( ( ( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - Min( DDR ,FirstVNF_RAM ) ) / ( ( PN * FirstVNF_Mem ) - Max( Const,ARS ) ) ) - Min( Max( ( PN * FirstVNF_Mem_Server ),Max( MRS,PN ) ) ,( Min( RRS ,Const ) - ( FirstVNF_RAM_Server + MRS ) ) ) ) / Max( Max( Min( ( PN - CRS ) ,Min( MDR ,FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server + AMS ) - ( MDR + FirstVNF_CPU_Server ) ) ),( ( ( MRS - CRS ) - ( ARS / ARS ) ) + Max( Min( FirstVNF_Mem_Server ,Const ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ) ) - ( Min( ( ( Min( CRS ,MDR ) * ( FirstVNF_RAM_Server * PN ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) + ( FirstVNF_Mem_Server - ARS ) ) ) ,Max( Min( ( FirstVNF_CPU_Server - RRS ) ,( FirstVNF_Mem + ACS ) ),( Max( ACS,FirstVNF_CPU_Server ) * ( MDR - MRS ) ) ) ) / ( Max( ( ( FirstVNF_CPU * ARS ) - Max( CRS,FirstVNF_RAM_Server ) ),( Min( FirstVNF_Mem_Server ,CRS ) + ( DDR - FirstVNF_RAM_Server ) ) ) * ( Max( ( FirstVNF_CPU + RRS ),( CRS + ARS ) ) - ( Max( CRS,MRS ) * Max( MRS,RRS ) ) ) ) ) ) - ( Max( Min( Min( Min( ( FirstVNF_Mem - FirstVNF_Mem_Server ) ,Min( MDR ,MRS ) ) ,( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( MRS + FirstVNF_Mem ) ) ) ,( Min( Max( FirstVNF_RAM,ACS ) ,( FirstVNF_Mem_Server * Const ) ) / ( ( FirstVNF_Mem_Server / ARS ) - Max( PN,FirstVNF_RAM_Server ) ) ) ),Max( Min( ( Min( FirstVNF_CPU ,Const ) * Max( Const,PN ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem_Server ) / ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ),( ( ( BR - Const ) * ( RRS * CRS ) ) - Max( ( CRS + ACS ),Min( MDR ,FirstVNF_Mem ) ) ) ) ) / Max( Min( Max( ( Min( FirstVNF_Mem ,FirstVNF_CPU ) - ( MDR / FirstVNF_Mem ) ),( ( FirstVNF_RAM_Server - DDR ) - ( AMS - CRS ) ) ) ,( Max( Max( BR,FirstVNF_Mem_Server ),( BR - MDR ) ) + ( ( ARS - DDR ) + ( RRS - FirstVNF_CPU_Server ) ) ) ),Min( Max( Min( ( PN / AMS ) ,Max( PN,DDR ) ),Max( ( MRS / FirstVNF_CPU_Server ),( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,( ( Min( DDR ,MRS ) - ( MRS + AMS ) ) + Max( ( DDR / MDR ),( ACS / RRS ) ) ) ) ) ) ) )", "choosing": "Min( Max( ( Min( ( ( Max( ( MUM - MLU ),( MUR / DS ) ) + Max( Max( RRSe,CS ),( MUR - RMSe ) ) ) - ( ( ( MUR / MUM ) / Min( RCSe ,MLU ) ) / ( Max( RMSe,MUR ) - ( MUC + DS ) ) ) ) ,Min( ( ( ( CS + MUM ) * ( MUM + RCSe ) ) - ( Min( CS ,RRSe ) + ( MUR * MLU ) ) ) ,( Min( Max( MLU,RRSe ) ,( MLU - MUM ) ) / Max( ( MUC / DS ),Max( DS,MUR ) ) ) ) ) * Min( ( Min( Max( ( RRSe * MLU ),Min( DS ,CS ) ) ,( ( MUC * RRSe ) * ( RCSe / MUM ) ) ) * ( ( ( RCSe / RMSe ) * Max( MLU,MLU ) ) / ( ( RMSe * MUM ) + ( RRSe + MUC ) ) ) ) ,Max( ( ( Min( RRSe ,RMSe ) - ( RCSe / RCSe ) ) + Max( ( MUR / RMSe ),( MLU * CS ) ) ),( ( ( MUR / MLU ) * Min( MUR ,MUC ) ) - Max( ( DS / MUC ),( RRSe - RCSe ) ) ) ) ) ),( Max( ( ( Max( Min( CS ,RMSe ),Max( MLU,MUM ) ) - ( Max( CS,MUR ) * Min( MUC ,CS ) ) ) - Max( ( ( DS - MUC ) / Min( MUM ,MUM ) ),( ( CS + DS ) * ( MLU * DS ) ) ) ),( ( ( ( RRSe / MUC ) * Min( CS ,DS ) ) / ( ( MUR * MUR ) - ( RMSe + CS ) ) ) + Max( ( ( MUM + RMSe ) - ( MUR * CS ) ),( Min( CS ,CS ) + ( MUC - RRSe ) ) ) ) ) * ( Max( Min( Max( Min( MUM ,CS ),Min( RRSe ,RCSe ) ) ,( ( MLU + MUC ) - ( MLU + MUC ) ) ),( Max( ( RMSe * MUR ),( MUR / RRSe ) ) - Min( Max( RCSe,MUR ) ,( RRSe - CS ) ) ) ) + ( Min( ( ( RCSe - RMSe ) + ( MUC - RCSe ) ) ,Min( Min( MUM ,MLU ) ,( MLU / CS ) ) ) * Max( ( ( RMSe * MUR ) * Min( DS ,MUM ) ),( ( CS * RCSe ) + Max( MLU,MUR ) ) ) ) ) ) ) ,( ( ( Min( Max( ( ( RCSe + DS ) + Max( MUC,RCSe ) ),( ( MLU * RMSe ) * ( MUR / MUM ) ) ) ,( ( ( RCSe * MUR ) + Min( RMSe ,MUR ) ) - ( Min( RMSe ,CS ) / ( RMSe + MLU ) ) ) ) - ( ( ( Max( MLU,RRSe ) / Min( RRSe ,RRSe ) ) * Max( Max( RRSe,MUC ),Max( MUR,RMSe ) ) ) / Max( ( ( MLU * RRSe ) + Min( MUC ,RMSe ) ),( Max( MUR,MLU ) / ( CS / MLU ) ) ) ) ) + ( Max( Min( ( ( MLU - MUR ) / ( MUC / CS ) ) ,Min( ( CS + CS ) ,Min( MUM ,RCSe ) ) ),( ( ( MUR + RCSe ) + ( RRSe + DS ) ) * ( Max( DS,RMSe ) * ( RMSe + DS ) ) ) ) * Min( Min( ( ( MLU / RCSe ) / ( MLU - RRSe ) ) ,( Min( MUR ,RRSe ) * ( DS / RCSe ) ) ) ,( Max( ( DS / MLU ),Min( RCSe ,MUC ) ) - Max( Min( DS ,RRSe ),Min( MUM ,MUM ) ) ) ) ) ) / ( ( ( ( ( ( CS + MUC ) * Min( RRSe ,RMSe ) ) + ( ( CS / RMSe ) + ( RRSe / MUM ) ) ) * ( Min( Min( MUC ,MUC ) ,Min( RCSe ,DS ) ) * ( ( MUM * MUM ) / ( DS / RRSe ) ) ) ) + Min( ( Max( Max( MUM,MUC ),( RRSe / RMSe ) ) * Max( ( RRSe - MLU ),( RRSe + CS ) ) ) ,( ( Max( MUR,RRSe ) / ( MLU / MLU ) ) / ( Max( MUM,MLU ) + ( RMSe + MUC ) ) ) ) ) / Max( Min( ( Max( Min( DS ,RCSe ),( MLU + MUM ) ) + ( Min( MLU ,MUR ) / ( CS * CS ) ) ) ,Max( ( ( MLU / MUC ) + Min( RRSe ,MUR ) ),( ( CS * MUM ) / Max( MLU,DS ) ) ) ),Min( Min( ( ( MUC + RRSe ) + ( MUM - DS ) ) ,( ( RMSe + RMSe ) + ( CS / RRSe ) ) ) ,( Min( ( MUR / MUC ) ,Max( MUM,RCSe ) ) + ( ( CS + MLU ) - Min( RRSe ,MUM ) ) ) ) ) ) ) )", "obj1": 0.6771653543307087, "obj2": 0.21228689225064357}, {"determining": "( ( BR - RRS ) - ( FirstVNF_Mem + ARS ) )", "choosing": "( ( Min( MUR ,MLU ) / ( ( ( RRSe - MUC ) * Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,RRSe ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),( ( PN + MRS ) + ( Const * Const ) ) ) )", "choosing": "( ( Min( MUR ,MLU ) / ( ( RCSe / DS ) / ( DS * MUR ) ) ) / ( Max( ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.547244094488189, "obj2": 0.28611608412925543}, {"determining": "Max( ( ( PN - CRS ) - RRS ),( ( RRS - Max( ( PN + MRS ),( ( PN + ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ) + ( Const * FirstVNF_RAM ) ) ) ) + FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe / RMSe ) / Max( ( RRSe - MUC ),Min( Max( ( RRSe - MUC ),Min( CS ,CS ) ) ,CS ) ) )", "obj1": 0.24803149606299213, "obj2": 0.48340159041968156}, {"determining": "( Min( ( MRS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),( ( PN + ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ) + ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( RMSe / RMSe ) / Max( ( RRSe - MUC ),Min( CS ,CS ) ) )", "obj1": 0.24803149606299213, "obj2": 0.48340159041968156}, {"determining": "( ( MDR * ( FirstVNF_Mem + RRS ) ) / Max( ( PN + MRS ),Max( ( PN + ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ),( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( ( RCSe / DS ) / MUC ) )", "obj1": 0.35236220472440943, "obj2": 0.45844982871900664}, {"determining": "Max( ( MDR - ( FirstVNF_Mem + RRS ) ),( BR - Min( PN ,DDR ) ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.9763779527559056, "obj2": 0.021346073736274875}, {"determining": "Max( ( MDR - ( FirstVNF_Mem + RRS ) ),( BR - Min( PN ,DDR ) ) )", "choosing": "( Max( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( ( ( RCSe / DS ) / MUC ) ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - RMSe ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.9763779527559056, "obj2": 0.021346073736274875}, {"determining": "( Min( ( MRS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),( ( PN + ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ) + ( Const * Min( PN ,DDR ) ) ) ) )", "choosing": "( ( Min( MUR ,MLU ) / ( ( RCSe / DS ) / ( DS * MUR ) ) ) / ( Max( ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.547244094488189, "obj2": 0.28611608412925543}, {"determining": "( Min( Max( ( Max( Max( ( ( FirstVNF_Mem - DDR ) - Max( ACS,BR ) ),( ( MDR * Const ) - ( RRS / FirstVNF_Mem_Server ) ) ),Min( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) + Min( MRS ,BR ) ) ,( Max( ARS,FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * ARS ) ) ) ) / ( ( Max( ( Const * FirstVNF_RAM ),Max( Const,Const ) ) - Min( ( ARS / FirstVNF_RAM ) ,( DDR + FirstVNF_RAM_Server ) ) ) / Min( ( ( MDR - FirstVNF_Mem ) / ( CRS / PN ) ) ,Max( ( FirstVNF_CPU / ACS ),Min( Const ,FirstVNF_RAM_Server ) ) ) ) ),Min( ( ( ( ( RRS + Const ) / Max( FirstVNF_RAM_Server,MRS ) ) / Max( ( FirstVNF_RAM - AMS ),( RRS - BR ) ) ) / ( ( ( ACS / ACS ) + ( PN - Const ) ) * Min( ( DDR / MDR ) ,( FirstVNF_CPU * FirstVNF_CPU ) ) ) ) ,( ( ( ( CRS / AMS ) / ( MDR * FirstVNF_Mem ) ) + Max( ( DDR - ARS ),( ARS - ACS ) ) ) / ( ( ( CRS / FirstVNF_Mem ) / ( Const * ARS ) ) / Min( Max( AMS,ARS ) ,Min( FirstVNF_RAM ,CRS ) ) ) ) ) ) ,( ( ( Min( ( ( BR + BR ) + Min( AMS ,AMS ) ) ,Max( ( BR / Const ),Max( BR,MDR ) ) ) / ( Min( ( ARS / PN ) ,Min( FirstVNF_CPU ,AMS ) ) / ( ( FirstVNF_RAM / ACS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) ) / ( ( Max( Max( PN,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + ( ( ACS * ACS ) - ( FirstVNF_Mem_Server * MDR ) ) ) - Min( ( ( MDR * FirstVNF_RAM_Server ) * ( AMS - DDR ) ) ,( ( MRS * FirstVNF_CPU_Server ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) ) - ( Max( ( ( Max( DDR,ACS ) / ( MDR / MRS ) ) + ( Min( FirstVNF_Mem ,FirstVNF_RAM ) * Max( FirstVNF_RAM,RRS ) ) ),Min( ( ( FirstVNF_RAM + AMS ) - Min( PN ,Const ) ) ,( Max( BR,BR ) / Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) * ( ( ( Max( AMS,FirstVNF_RAM_Server ) / Max( ACS,MDR ) ) / ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) - ( FirstVNF_CPU - ACS ) ) ) * ( ( ( FirstVNF_RAM_Server - MDR ) * ( Const * PN ) ) - ( Min( Const ,FirstVNF_RAM ) * ( MRS * FirstVNF_CPU_Server ) ) ) ) ) ) ) / ( ( ( ( ( ( ( MDR + AMS ) + ( DDR / FirstVNF_RAM_Server ) ) + Max( ( AMS + MDR ),( Const - AMS ) ) ) - Min( ( ( ARS + MDR ) / ( BR * FirstVNF_RAM ) ) ,( ( ACS - MDR ) * Max( FirstVNF_CPU_Server,MDR ) ) ) ) * ( ( ( ( FirstVNF_Mem - DDR ) * Min( PN ,FirstVNF_CPU ) ) * Min( ( PN - AMS ) ,( FirstVNF_Mem + AMS ) ) ) + ( Min( Max( DDR,FirstVNF_RAM ) ,( ARS * ARS ) ) / ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) - ( CRS + FirstVNF_Mem ) ) ) ) ) / Max( Min( Max( ( Max( MDR,PN ) - ( Const / Const ) ),( ( PN - ACS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) ,Max( ( ( FirstVNF_CPU / FirstVNF_RAM ) * ( FirstVNF_RAM_Server / FirstVNF_RAM ) ),( Max( FirstVNF_RAM,ACS ) / ( FirstVNF_CPU_Server - AMS ) ) ) ),Max( ( ( ( FirstVNF_CPU + ARS ) - ( DDR * BR ) ) - Min( Min( Const ,FirstVNF_RAM ) ,( MRS + FirstVNF_RAM ) ) ),Max( ( ( ARS / ACS ) - Min( FirstVNF_CPU_Server ,MRS ) ),Max( ( PN - ARS ),Max( FirstVNF_RAM,BR ) ) ) ) ) ) / Min( Max( ( ( ( ( DDR + FirstVNF_CPU_Server ) / Min( ARS ,FirstVNF_Mem ) ) * Max( ( FirstVNF_RAM + PN ),Max( MRS,CRS ) ) ) - ( ( ( RRS / ACS ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) + Min( ( ACS * RRS ) ,( MRS * PN ) ) ) ),( ( Min( Max( RRS,RRS ) ,( Const + Const ) ) + ( ( MDR + MDR ) + ( ARS + DDR ) ) ) + ( ( ( BR / ARS ) / Min( MDR ,FirstVNF_Mem_Server ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) / ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ) ) ) ,( ( ( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU + DDR ) ) - Min( ( ACS + MRS ) ,Max( RRS,FirstVNF_Mem_Server ) ) ) - Max( ( Max( PN,MDR ) - ( RRS * FirstVNF_Mem_Server ) ),( Max( AMS,PN ) - ( CRS - MDR ) ) ) ) / Min( ( ( ( RRS + FirstVNF_Mem ) + ( FirstVNF_Mem * AMS ) ) * ( ( ACS / ARS ) - ( FirstVNF_CPU_Server + CRS ) ) ) ,( ( ( ACS / FirstVNF_Mem_Server ) - ( DDR * ARS ) ) + ( Max( Const,PN ) / Max( PN,DDR ) ) ) ) ) ) ) )", "choosing": "( ( Min( ( ( Min( Max( ( MUC - CS ),( MUC - RCSe ) ) ,( Max( RRSe,MLU ) - ( RCSe + MUR ) ) ) / ( ( Max( DS,MUM ) / ( RMSe / MUC ) ) * Min( ( RCSe / MUC ) ,( MUC * DS ) ) ) ) / ( ( ( ( MUR - CS ) + Max( MUM,RRSe ) ) * ( ( CS - MUM ) / ( DS * MUR ) ) ) + ( Min( ( RCSe * MUR ) ,( DS + MUR ) ) / ( Min( DS ,MUC ) / ( MUC / DS ) ) ) ) ) ,( Min( ( ( ( RRSe + MLU ) / ( CS + RCSe ) ) / Max( ( MUC + RCSe ),( RCSe / MLU ) ) ) ,( Max( ( DS + RRSe ),Min( MUR ,RMSe ) ) + ( Min( RRSe ,MLU ) + ( MLU / MUR ) ) ) ) - Min( ( Min( ( MUC / MUC ) ,Max( CS,RCSe ) ) + Min( ( RMSe + CS ) ,Min( MLU ,DS ) ) ) ,( ( ( CS + MUM ) + ( MUM + RMSe ) ) + ( ( MLU - DS ) * Max( MLU,CS ) ) ) ) ) ) * Min( Max( Min( ( ( ( RCSe / RRSe ) + ( MUM - MLU ) ) - ( ( MUM / RMSe ) + ( MUR + RCSe ) ) ) ,Max( ( ( MUM - RRSe ) * Max( CS,MUC ) ),( ( MUC + RRSe ) / ( RMSe * MUR ) ) ) ),( ( ( Max( MUM,RRSe ) / Min( RMSe ,MUC ) ) + Max( Max( RCSe,DS ),Min( RMSe ,MLU ) ) ) * ( ( ( RCSe + RRSe ) + Min( RMSe ,MLU ) ) / Min( ( MUR * RMSe ) ,Max( MLU,RCSe ) ) ) ) ) ,Min( Max( Min( ( Max( MUC,MLU ) / ( CS / MUC ) ) ,( Min( RMSe ,DS ) - Max( MLU,MUC ) ) ),Min( ( Max( RRSe,RRSe ) / ( RMSe + RMSe ) ) ,( ( CS + CS ) - ( MUM + DS ) ) ) ) ,( ( ( ( MUM + MUR ) + Max( MLU,MLU ) ) + Min( ( MUC * CS ) ,( RRSe * RRSe ) ) ) + ( ( Min( MLU ,MUC ) / ( RRSe * MUC ) ) * ( ( MUC - RRSe ) * ( RCSe * RRSe ) ) ) ) ) ) ) * ( ( ( Max( ( ( ( DS - MUR ) - Min( RCSe ,RMSe ) ) + ( ( RRSe + CS ) + Min( MUR ,CS ) ) ),Min( Max( ( MUC + MUC ),Max( MLU,RCSe ) ) ,( Min( MUR ,CS ) / ( MUC * RCSe ) ) ) ) * ( ( ( Min( RMSe ,RCSe ) / ( MLU - MUC ) ) + ( ( MUC + MUC ) - ( MLU / MUR ) ) ) + ( Max( ( DS + RMSe ),( CS - MUM ) ) - Max( ( MUR + DS ),Min( MUC ,RRSe ) ) ) ) ) - ( ( ( ( ( MUM + CS ) * Min( MUC ,CS ) ) / ( ( MLU + CS ) / ( RCSe - RCSe ) ) ) + ( ( ( MUR * MUM ) - Max( RRSe,MUM ) ) - Min( Max( CS,MUC ) ,( RCSe - RMSe ) ) ) ) - ( ( ( ( CS * RCSe ) * Min( MLU ,RRSe ) ) - ( Max( DS,MUM ) * ( MUR - CS ) ) ) + Max( ( ( RCSe + MUR ) / ( MUM - MUC ) ),( Min( DS ,RRSe ) + Min( MUM ,RRSe ) ) ) ) ) ) - Max( ( Max( ( ( Max( RCSe,MLU ) * Max( DS,RCSe ) ) * ( Max( RRSe,MUC ) / ( RMSe / DS ) ) ),( ( Max( CS,RCSe ) * ( CS / MUR ) ) * ( ( MUR - RMSe ) + ( RMSe * DS ) ) ) ) * ( ( ( Min( MLU ,RMSe ) / Max( CS,MUC ) ) * Min( ( MUM / DS ) ,Max( MUM,CS ) ) ) * ( ( ( MLU / CS ) * ( RRSe / RCSe ) ) / ( ( DS + RRSe ) * Max( CS,RRSe ) ) ) ) ),( ( Min( ( ( MUC - MUC ) + ( CS * MUM ) ) ,Max( ( MUM / RRSe ),( RMSe + MLU ) ) ) - Max( Min( ( RMSe + MLU ) ,( RCSe + MUM ) ),Max( ( DS * MUC ),Max( RCSe,RMSe ) ) ) ) - ( ( ( Max( MLU,CS ) * Max( RMSe,RRSe ) ) / Max( ( MUR / MLU ),( RCSe - MUM ) ) ) * ( ( ( MUM - MUR ) - Max( MUC,CS ) ) * ( Max( RCSe,MUC ) / Min( RRSe ,MUR ) ) ) ) ) ) ) )", "obj1": 0.47834645669291337, "obj2": 0.39888955558049316}, {"determining": "Max( ( ( PN - CRS ) - RRS ),Min( ( MRS * ( FirstVNF_Mem + RRS ) ) ,Max( RRS,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RMSe / RMSe ) / ( Max( ( RRSe - MUC ),Min( CS ,( Min( MLU ,DS ) + ( MUR + RRSe ) ) ) ) / ( ( ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) / MUC ) ) )", "obj1": 0.6594488188976378, "obj2": 0.2539577171762086}, {"determining": "Max( ( MDR - ( FirstVNF_Mem + RRS ) ),( FirstVNF_Mem + DDR ) )", "choosing": "( ( RMSe / RMSe ) / ( Max( ( RRSe - MUC ),Min( CS ,( Min( MLU ,DS ) + ( MUR + RRSe ) ) ) ) / ( ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) / MUC ) ) )", "obj1": 0.6712598425196851, "obj2": 0.2477106178864566}, {"determining": "Max( ( ( PN - CRS ) - RRS ),( ( RRS - MRS ) + ( RRS - MRS ) ) )", "choosing": "( ( RMSe / RMSe ) / Max( ( RRSe - MUC ),Min( CS ,CS ) ) )", "obj1": 0.24803149606299213, "obj2": 0.48340159041968156}, {"determining": "Max( ( ( RRS - MRS ) + FirstVNF_Mem_Server ),( Max( FirstVNF_Mem,CRS ) + RRS ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - Min( CS ,CS ) ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( RCSe / DS ) )", "obj1": 0.19881889763779528, "obj2": 0.557396626107472}, {"determining": "Max( ( ( RRS - MRS ) + FirstVNF_Mem_Server ),( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + RRS ) )", "choosing": "( ( RMSe / RMSe ) / Max( ( RRSe - MUC ),Min( CS ,CS ) ) )", "obj1": 0.24803149606299213, "obj2": 0.48340159041968156}, {"determining": "Max( ( ( PN - CRS ) - RRS ),( ( RRS - MRS ) + FirstVNF_Mem_Server ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( RCSe / DS ) )", "obj1": 0.19881889763779528, "obj2": 0.557396626107472}, {"determining": "( Min( ( MRS * FirstVNF_CPU ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),( ( PN + ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ) + ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( Min( RCSe ,DS ) / ( MUR * MUR ) ) ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.12007874015748031, "obj2": 0.6092619818811015}, {"determining": "( Min( ( MRS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),( ( PN + ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ) + ( Const * Min( PN ,DDR ) ) ) ) )", "choosing": "( ( Min( MUR ,MLU ) / ( ( RCSe / DS ) / ( DS * MUR ) ) ) / ( Max( ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.547244094488189, "obj2": 0.28611608412925543}, {"determining": "( Min( ( MRS * FirstVNF_CPU ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),( ( PN + ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ) + ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( Min( RCSe ,DS ) / ( MUR * MUR ) ) ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.12007874015748031, "obj2": 0.6092619818811015}, {"determining": "( ( ( Min( ( ( ( Min( ACS ,CRS ) - ( MDR / FirstVNF_Mem_Server ) ) / ( ( ACS + ARS ) + ( FirstVNF_RAM * FirstVNF_RAM ) ) ) / ( ( Min( FirstVNF_CPU ,Const ) * ( AMS - MRS ) ) / Max( ( FirstVNF_Mem_Server / DDR ),( ARS * RRS ) ) ) ) ,( Min( ( ( Const - DDR ) * ( MDR + FirstVNF_Mem ) ) ,( ( FirstVNF_Mem_Server - Const ) / ( FirstVNF_CPU - DDR ) ) ) / ( Min( Max( BR,ACS ) ,Min( PN ,PN ) ) + ( ( CRS - MDR ) * ( AMS * MRS ) ) ) ) ) + ( Min( ( ( Min( FirstVNF_Mem ,MRS ) / ( BR * FirstVNF_CPU ) ) / ( Min( ACS ,Const ) + Max( DDR,FirstVNF_CPU ) ) ) ,( ( Min( MDR ,PN ) * Min( DDR ,RRS ) ) / ( Max( BR,ARS ) + Max( CRS,AMS ) ) ) ) / ( Min( ( ( ARS * ACS ) * Min( AMS ,FirstVNF_CPU ) ) ,( ( PN + Const ) + ( RRS * FirstVNF_RAM ) ) ) * ( ( ( RRS + Const ) - ( AMS + DDR ) ) + Max( ( AMS - FirstVNF_RAM ),( FirstVNF_RAM / MRS ) ) ) ) ) ) / Max( ( ( ( Min( Min( DDR ,ARS ) ,( ARS - PN ) ) + ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) / ( MDR + FirstVNF_CPU_Server ) ) ) * Max( Max( Max( FirstVNF_Mem_Server,Const ),( ACS + AMS ) ),( Min( BR ,FirstVNF_RAM_Server ) / ( BR + BR ) ) ) ) + ( ( ( Max( AMS,FirstVNF_Mem_Server ) * ( RRS - ACS ) ) * ( Min( FirstVNF_CPU_Server ,PN ) * ( DDR - DDR ) ) ) * Max( ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) + Min( AMS ,FirstVNF_CPU_Server ) ),Max( ( AMS * MRS ),( FirstVNF_CPU - RRS ) ) ) ) ),( ( ( ( Min( AMS ,CRS ) + Max( ARS,PN ) ) + ( ( ARS - FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ) + ( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) + Min( MDR ,FirstVNF_RAM ) ) - Max( ( AMS * FirstVNF_CPU_Server ),Min( MRS ,CRS ) ) ) ) + Min( ( ( ( Const * PN ) - Min( RRS ,FirstVNF_CPU_Server ) ) * Max( ( FirstVNF_CPU * ACS ),Max( AMS,RRS ) ) ) ,( Max( Max( ACS,MDR ),( MRS * MRS ) ) / ( ( RRS / CRS ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) ) ) ) ) / ( ( ( ( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - Min( DDR ,FirstVNF_RAM ) ) / ( ( PN * FirstVNF_Mem ) - Max( Const,ARS ) ) ) - Min( Max( ( PN * FirstVNF_Mem_Server ),Max( MRS,PN ) ) ,( Min( RRS ,Const ) - ( FirstVNF_RAM_Server + MRS ) ) ) ) / Max( Max( Min( ( PN - CRS ) ,Min( MDR ,FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server + AMS ) - ( MDR + FirstVNF_CPU_Server ) ) ),( ( ( MRS - CRS ) - ( ARS / ARS ) ) + Max( Min( FirstVNF_Mem_Server ,Const ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ) ) - ( Min( ( ( Min( CRS ,MDR ) * ( FirstVNF_RAM_Server * PN ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) + ( FirstVNF_Mem_Server - ARS ) ) ) ,Max( Min( ( FirstVNF_CPU_Server - RRS ) ,( FirstVNF_Mem + ACS ) ),( Max( ACS,FirstVNF_CPU_Server ) * ( MDR - MRS ) ) ) ) / ( Max( ( ( FirstVNF_CPU * ARS ) - Max( CRS,FirstVNF_RAM_Server ) ),( Min( FirstVNF_Mem_Server ,CRS ) + ( DDR - FirstVNF_RAM_Server ) ) ) * ( Max( ( FirstVNF_CPU + RRS ),( CRS + ARS ) ) - ( Max( CRS,MRS ) * Max( MRS,RRS ) ) ) ) ) ) - ( Max( Min( Min( Min( ( FirstVNF_Mem - FirstVNF_Mem_Server ) ,Min( MDR ,MRS ) ) ,( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( MRS + FirstVNF_Mem ) ) ) ,( Min( Max( FirstVNF_RAM,ACS ) ,( FirstVNF_Mem_Server * Const ) ) / ( ( FirstVNF_Mem_Server / ARS ) - Max( PN,FirstVNF_RAM_Server ) ) ) ),Max( Min( ( Min( FirstVNF_CPU ,Const ) * Max( Const,PN ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem_Server ) / ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ),( ( ( BR - Const ) * ( RRS * CRS ) ) - Max( ( CRS + ACS ),Min( MDR ,FirstVNF_Mem ) ) ) ) ) / Max( Min( Max( ( Min( FirstVNF_Mem ,FirstVNF_CPU ) - ( MDR / FirstVNF_Mem ) ),( ( FirstVNF_RAM_Server - DDR ) - ( AMS - CRS ) ) ) ,( Max( Max( BR,FirstVNF_Mem_Server ),( BR - MDR ) ) + ( ( ARS - DDR ) + ( RRS - FirstVNF_CPU_Server ) ) ) ),Min( Max( Min( ( PN / AMS ) ,Max( PN,DDR ) ),Max( ( MRS / FirstVNF_CPU_Server ),( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,( ( Min( DDR ,MRS ) - ( MRS + AMS ) ) + Max( ( DDR / MDR ),( ACS / RRS ) ) ) ) ) ) ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.49803149606299213, "obj2": 0.3330841827258346}, {"determining": "Max( ( Max( ( FirstVNF_Mem_Server - ( FirstVNF_Mem + RRS ) ),( FirstVNF_Mem + DDR ) ) * ( FirstVNF_Mem + RRS ) ),FirstVNF_Mem_Server )", "choosing": "( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * RCSe ) ) ) ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.6155560444184978}, {"determining": "Max( ( MDR * ( FirstVNF_Mem + RRS ) ),FirstVNF_Mem_Server )", "choosing": "( ( Max( Min( Min( MUM ,MUM ) ,Max( MUR,( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) ),( ( MUM / RCSe ) - ( RCSe * MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.6155560444184978}, {"determining": "( Min( ( MRS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / FirstVNF_Mem )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( ( RCSe / DS ) / MUC ) )", "obj1": 0.35236220472440943, "obj2": 0.45844982871900664}, {"determining": "( Min( ( MRS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),( FirstVNF_Mem + ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / Min( CS ,CS ) ) / ( MUR * MUR ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.6252412554258994}, {"determining": "Max( ( ( PN - CRS ) - RRS ),Max( ( PN + MRS ),( FirstVNF_Mem + ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( RCSe / Min( CS ,CS ) ) / ( MUR * MUR ) ) / RMSe ) / ( Max( ( RRSe - MUC ),Min( CS ,( Min( MLU ,DS ) + ( MUR + RRSe ) ) ) ) / ( ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) / MUC ) ) )", "obj1": 0.41929133858267714, "obj2": 0.4103142014660531}, {"determining": "( Min( ( MRS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),( FirstVNF_Mem + ( Const * Min( ( MRS * ARS ) ,Max( RRS,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / Max( ( RRSe - MUC ),Min( CS ,CS ) ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / Min( CS ,CS ) ) / ( MUR * MUR ) ) ) )", "obj1": 0.2440944881889764, "obj2": 0.503526234682475}, {"determining": "( Min( ( MRS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),( FirstVNF_Mem + ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( RMSe / RMSe ) / ( Max( ( RRSe - MUC ),Min( CS ,( Min( MLU ,DS ) + ( MUR + RRSe ) ) ) ) / ( ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) / MUC ) ) )", "obj1": 0.6712598425196851, "obj2": 0.2477106178864566}, {"determining": "Max( ( ( PN - CRS ) - RRS ),Min( ( MRS * ARS ) ,Max( RRS,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / Min( CS ,CS ) ) / ( MUR * MUR ) ) ) )", "obj1": 0.08070866141732283, "obj2": 0.6252412554258994}, {"determining": "( ( RRS / BR ) - ( Min( ( AMS + BR ) ,MDR ) * Const ) )", "choosing": "( ( CS / ( RMSe / ( CS + ( MUC * Min( Max( DS,CS ) ,RMSe ) ) ) ) ) * Min( RRSe ,Max( RCSe,Max( MUR,( Min( ( MUM / Max( CS,RMSe ) ) ,RCSe ) + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / FirstVNF_RAM ) - ( ARS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( DS / DS ) * MUM ) - Min( Min( CS ,( MUM * MUC ) ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS * FirstVNF_CPU ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Max( ( PN + MRS ),( ( PN + ( ( RRS * MRS ) + FirstVNF_Mem_Server ) ) + ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUR ,MLU ) / ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / MUC ) ) ) / ( Max( ( Max( ( RRSe - MUC ),Min( CS ,CS ) ) / ( Min( RCSe ,DS ) / ( MUR * MUR ) ) ),Min( CS ,CS ) ) / ( ( RCSe / DS ) / ( MUR * MUR ) ) ) )", "obj1": 0.12007874015748031, "obj2": 0.6092619818811015}, {"determining": "( Max( ( Max( ( ( ( Max( FirstVNF_Mem_Server,CRS ) / ( PN - Const ) ) / ( ( MRS / MRS ) + ( PN + FirstVNF_Mem ) ) ) + Max( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server * RRS ) ),( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_Mem * ACS ) ) ) ),( ( Min( ( FirstVNF_Mem / CRS ) ,Min( PN ,FirstVNF_Mem_Server ) ) / Max( Max( Const,BR ),Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ) - Min( ( ( AMS * Const ) / ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ,( ( MDR * FirstVNF_CPU ) - ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ) ) ) * ( Max( ( ( ( Const + RRS ) * ( Const / MDR ) ) * Min( ( MDR * FirstVNF_Mem_Server ) ,( CRS * MDR ) ) ),Max( ( Min( PN ,FirstVNF_Mem_Server ) / Min( ARS ,Const ) ),( Max( MDR,ACS ) / ( PN + FirstVNF_RAM_Server ) ) ) ) / ( Max( ( Min( ACS ,ACS ) + ( PN + RRS ) ),( ( AMS - MDR ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_RAM * FirstVNF_CPU ) - ( PN * FirstVNF_CPU ) ) / ( ( ARS - DDR ) + ( Const * FirstVNF_Mem_Server ) ) ) ) ) ),( Max( ( ( ( Min( FirstVNF_CPU ,ARS ) * ( FirstVNF_Mem - MDR ) ) - ( ( RRS / BR ) - Min( DDR ,FirstVNF_Mem ) ) ) * ( Max( ( MDR - FirstVNF_CPU ),( PN / MDR ) ) - ( ( FirstVNF_RAM * AMS ) - ( ARS + ARS ) ) ) ),( Max( Max( ( FirstVNF_Mem - DDR ),( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ),( ( ACS * MRS ) * ( ACS * RRS ) ) ) + ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / ( ARS + FirstVNF_Mem ) ) - ( Max( MRS,ACS ) - ( AMS / PN ) ) ) ) ) + Min( ( ( Max( ( DDR + FirstVNF_CPU_Server ),Max( AMS,AMS ) ) * ( Min( AMS ,FirstVNF_CPU ) * ( FirstVNF_CPU_Server + ARS ) ) ) - ( ( Max( FirstVNF_CPU,FirstVNF_RAM ) - ( CRS * DDR ) ) * Max( Min( CRS ,FirstVNF_CPU_Server ),( AMS / Const ) ) ) ) ,( ( ( Min( PN ,FirstVNF_CPU ) - Max( MDR,PN ) ) * Max( ( FirstVNF_Mem * PN ),Min( DDR ,FirstVNF_RAM ) ) ) + ( ( ( CRS - FirstVNF_CPU ) * Min( CRS ,PN ) ) / Min( ( FirstVNF_RAM_Server * RRS ) ,( PN - BR ) ) ) ) ) ) ) + Min( ( ( Max( Min( Min( ( FirstVNF_RAM_Server - ARS ) ,( MRS - ACS ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_CPU ) + ( CRS - ARS ) ) ),( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - ( BR - MRS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) ) + ( ( Max( Min( FirstVNF_Mem ,BR ),Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) - ( ( FirstVNF_Mem + FirstVNF_RAM ) / Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) * Max( ( ( FirstVNF_RAM_Server - MRS ) / Min( RRS ,MDR ) ),( ( MDR + FirstVNF_CPU ) / ( FirstVNF_Mem * RRS ) ) ) ) ) + ( ( ( ( ( CRS - MRS ) / ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) + ( ( MDR * ACS ) - ( MDR / FirstVNF_RAM_Server ) ) ) - ( ( ( PN / CRS ) * Min( RRS ,FirstVNF_CPU ) ) + ( ( CRS / RRS ) - ( ACS / BR ) ) ) ) * ( ( Min( Min( BR ,PN ) ,( DDR + CRS ) ) * ( ( ARS * BR ) * Max( FirstVNF_RAM,MDR ) ) ) - ( Min( ( ARS + ACS ) ,( MRS / FirstVNF_Mem_Server ) ) * Max( ( FirstVNF_RAM - MRS ),( MRS - ACS ) ) ) ) ) ) ,( Max( ( Min( ( ( FirstVNF_RAM_Server * BR ) + ( Const / BR ) ) ,( ( FirstVNF_CPU * FirstVNF_RAM_Server ) / Max( BR,DDR ) ) ) + ( Max( Min( FirstVNF_CPU_Server ,MRS ),Min( FirstVNF_CPU_Server ,RRS ) ) * ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) ),( ( ( Min( DDR ,Const ) + ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) - Max( ( DDR - MDR ),( MRS - MDR ) ) ) / ( ( ( RRS * FirstVNF_CPU_Server ) / ( DDR + FirstVNF_CPU_Server ) ) + Max( ( CRS + BR ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) ) ) - ( Max( ( Min( ( FirstVNF_RAM_Server + ARS ) ,Max( MDR,AMS ) ) + ( ( FirstVNF_Mem_Server / BR ) + Min( ACS ,ARS ) ) ),( ( Min( AMS ,CRS ) / ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) * Max( Min( MRS ,FirstVNF_RAM_Server ),( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ) ) - Min( ( ( Min( PN ,FirstVNF_CPU_Server ) + ( ACS + CRS ) ) / ( ( DDR * FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) ,Max( ( Min( ARS ,BR ) * Min( FirstVNF_CPU_Server ,Const ) ),( Min( Const ,FirstVNF_CPU_Server ) + ( MRS / FirstVNF_RAM ) ) ) ) ) ) ) )", "choosing": "Max( Max( MUM,DS ),Max( ( Min( ( CS / MUR ) ,MUR ) * Max( ( MUC - ( RMSe * RRSe ) ),( MUM - ( CS / ( ( CS / MUR ) * MUC ) ) ) ) ),( Max( RRSe,( ( RCSe * ( MLU - RRSe ) ) + MUR ) ) / RCSe ) ) )", "obj1": 0.9114173228346457, "obj2": 0.06433605272214762}]}