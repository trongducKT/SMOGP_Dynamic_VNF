{"1": [{"determining": "( ( RRS + FirstVNF_CPU ) - ( CRS - CRS ) )", "choosing": "( ( MUR / RMSe ) + Min( RRSe ,DS ) )", "obj1": 0.3, "obj2": 0.6290763127496786}, {"determining": "( ( PN * MRS ) - ( ARS * BR ) )", "choosing": "( ( RCSe * MLU ) * ( CS + DS ) )", "obj1": 0.8074074074074075, "obj2": 0.21384513652255555}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) - ( Min( Min( Min( ( CRS / CRS ) ,RRS ) ,FirstVNF_RAM_Server ) ,( PN / ( ( CRS / MRS ) * FirstVNF_Mem ) ) ) * AMS ) )", "choosing": "Min( Max( MUM,RRSe ) ,Min( ( MUM + ( MUR - Min( ( ( ( DS / RMSe ) + MUR ) + RMSe ) ,MUC ) ) ) ,Max( RCSe,( MUC - MUR ) ) ) )", "obj1": 0.662962962962963, "obj2": 0.32001196441563856}, {"determining": "( ( FirstVNF_RAM_Server - AMS ) - Min( AMS ,MDR ) )", "choosing": "( ( RCSe * MUC ) - Max( RCSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ARS ) - ( FirstVNF_Mem_Server - PN ) )", "choosing": "Min( ( CS / MLU ) ,( DS / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( AMS / PN ),( FirstVNF_CPU * PN ) )", "choosing": "( ( MUR / MUR ) - Max( RMSe,DS ) )", "obj1": 0.2537037037037037, "obj2": 0.6471225670320588}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_Mem ) / ( FirstVNF_Mem_Server / FirstVNF_Mem ) )", "choosing": "( ( RRSe - DS ) * Max( MUM,MUR ) )", "obj1": 0.19814814814814816, "obj2": 0.7634549776754689}, {"determining": "( ( FirstVNF_CPU - ACS ) + ( ACS - ACS ) )", "choosing": "Max( Min( MUR ,CS ),( ( CS / Max( CS,CS ) ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( DDR + BR ),( FirstVNF_CPU / FirstVNF_CPU ) ) ,( FirstVNF_Mem - DDR ) )", "choosing": "Min( ( Max( CS,( ( MLU / RMSe ) + RCSe ) ) * ( DS / RMSe ) ) ,( RCSe / ( ( ( DS * DS ) + Max( Max( RCSe,MUM ),RRSe ) ) - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,Const ) * ACS ) - ( MRS + ACS ) )", "choosing": "Max( Min( Max( MLU,MUR ) ,MLU ),Min( MLU ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( FirstVNF_RAM_Server - BR ),( ACS * ARS ) ) ,( ( CRS - MDR ) * ( FirstVNF_Mem / Const ) ) )", "choosing": "( Max( ( MUM + CS ),( MUM + MUR ) ) * Min( ( RRSe - MUC ) ,( MUR / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) * Min( ( FirstVNF_Mem - PN ) ,PN ) )", "choosing": "( ( ( RCSe - RMSe ) * CS ) / ( MUR * RMSe ) )", "obj1": 0.2722222222222222, "obj2": 0.6332903734289472}, {"determining": "( ( ( RRS - FirstVNF_RAM ) + ( FirstVNF_Mem + PN ) ) + ( Min( MRS ,FirstVNF_Mem ) + Min( FirstVNF_RAM ,CRS ) ) )", "choosing": "( ( Min( RCSe ,MUC ) * ( DS + DS ) ) / ( ( RRSe - DS ) + ( RRSe / RCSe ) ) )", "obj1": 0.6833333333333333, "obj2": 0.29826039012811106}, {"determining": "( Min( ( AMS - FirstVNF_CPU ) ,( ACS / ARS ) ) * ( ( FirstVNF_RAM_Server * BR ) + ( FirstVNF_CPU_Server - MDR ) ) )", "choosing": "( Max( ( MLU - MLU ),( MUR + MUM ) ) * ( ( CS * MLU ) * ( MUM - RRSe ) ) )", "obj1": 0.4648148148148148, "obj2": 0.5149662866849004}, {"determining": "( Max( FirstVNF_CPU,( FirstVNF_RAM * MRS ) ) * ( CRS - BR ) )", "choosing": "( ( Max( RRSe,RCSe ) - ( RCSe - RCSe ) ) / ( Min( RMSe ,RRSe ) * ( RMSe / RCSe ) ) )", "obj1": 0.6425925925925926, "obj2": 0.34485719662073455}, {"determining": "( ( ( Const * CRS ) / ( Const * ( Min( BR ,( ARS + RRS ) ) + Min( FirstVNF_Mem ,DDR ) ) ) ) + ( ( BR * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "( Min( MUR ,MUR ) * Min( MUC ,Min( DS ,MUC ) ) )", "obj1": 0.12962962962962962, "obj2": 0.7962144569590702}, {"determining": "Min( Max( ACS,( CRS / FirstVNF_CPU ) ) ,( BR * PN ) )", "choosing": "Max( ( ( RRSe / CS ) / Max( MUM,RRSe ) ),Max( MUM,MLU ) )", "obj1": 0.24444444444444444, "obj2": 0.6617697542670059}, {"determining": "( ( FirstVNF_Mem_Server + Min( PN ,MRS ) ) - ( Max( RRS,Const ) * Max( PN,PN ) ) )", "choosing": "( ( Min( DS ,MUR ) / Min( RRSe ,RRSe ) ) * ( DS + ( MUC / MUR ) ) )", "obj1": 0.3648148148148148, "obj2": 0.5725385438024256}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) + ( RRS + CRS ) ) - Min( ( FirstVNF_CPU_Server + CRS ) ,FirstVNF_CPU ) )", "choosing": "( ( ( DS / MLU ) - Min( ( ( RCSe / ( ( Max( RCSe,DS ) * ( MLU * MUC ) ) + MUM ) ) + CS ) ,MLU ) ) - ( Min( DS ,DS ) + ( MLU - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / DDR ) * ( ARS - ( FirstVNF_Mem_Server / ACS ) ) )", "choosing": "( ( Min( RRSe ,RCSe ) - ( RMSe * CS ) ) / Max( Min( DS ,RMSe ),( RMSe + MUM ) ) )", "obj1": 0.6981481481481482, "obj2": 0.27450768350487526}, {"determining": "( ( MRS * ( FirstVNF_Mem * ( Const - ARS ) ) ) - Max( FirstVNF_RAM_Server,MRS ) )", "choosing": "( ( Max( Min( DS ,MUC ),( DS - RCSe ) ) / ( ( CS / RMSe ) * ( MUM + MLU ) ) ) + ( ( ( CS - MUM ) / ( MUM * CS ) ) - ( ( MUC - CS ) * ( MLU - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( CRS,FirstVNF_CPU_Server ) ,( AMS - Const ) ) / ( ( FirstVNF_RAM - CRS ) / ( Const * DDR ) ) ) * ( ( ( Const - RRS ) / ( ACS - DDR ) ) - ( ( BR * FirstVNF_CPU_Server ) - Max( MDR,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( ( Min( MLU ,RRSe ) / ( MUM / DS ) ) - ( ( RCSe * MUM ) + ( RRSe - DS ) ) ) ,Max( ( ( MUM + RCSe ) * ( RMSe / MUC ) ),( ( MLU + MLU ) / Max( RCSe,DS ) ) ) )", "obj1": 0.4685185185185185, "obj2": 0.4798886338667516}, {"determining": "( Max( BR,Max( ( MRS / PN ),PN ) ) + Min( ARS ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( RCSe * ( CS - RRSe ) ) ,( MLU - ( RMSe + MLU ) ) )", "obj1": 0.25555555555555554, "obj2": 0.6441451478430374}, {"determining": "Min( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ,Max( RRS,Const ) )", "choosing": "Max( ( Max( Max( RMSe,DS ),Max( MUM,RCSe ) ) + Max( ( CS * MLU ),Min( MUM ,CS ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( MUR + MUC ) / Min( RMSe ,RMSe ) ) ) )", "obj1": 0.21481481481481482, "obj2": 0.7263288762538456}, {"determining": "Min( ( FirstVNF_RAM_Server / RRS ) ,Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) )", "choosing": "( ( Max( Min( RMSe ,MUM ),Max( MUM,RCSe ) ) + Min( Min( RCSe ,MUR ) ,( DS / MUM ) ) ) + Max( ( Max( MUC,CS ) / ( CS + RRSe ) ),( ( RCSe + RCSe ) - Max( MUM,CS ) ) ) )", "obj1": 0.3574074074074074, "obj2": 0.5866300448437444}, {"determining": "Min( ( FirstVNF_RAM / ACS ) ,( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - AMS ) )", "choosing": "Max( Min( MLU ,RRSe ),( CS * ( ( RMSe - CS ) / RCSe ) ) )", "obj1": 0.6796296296296296, "obj2": 0.31095323446896594}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_RAM_Server + RRS ) ) - FirstVNF_RAM_Server ) * ( FirstVNF_RAM * Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( Max( ( ( MLU - DS ) - ( MUC + MLU ) ),( ( DS * MUR ) - ( RMSe / MLU ) ) ) - ( ( ( RRSe - RRSe ) * ( DS * RMSe ) ) - ( ( RCSe - RCSe ) / Max( RCSe,RMSe ) ) ) )", "obj1": 0.9277777777777778, "obj2": 0.04754678190689702}, {"determining": "Max( ( Const - ( AMS * ( BR * DDR ) ) ),( ARS * FirstVNF_RAM ) )", "choosing": "( ( Max( MLU,MUM ) + Min( Min( RMSe ,MUC ) ,( MUC - RCSe ) ) ) / ( ( ( CS + CS ) / Max( CS,RCSe ) ) + ( ( MUR - MUM ) / Min( CS ,RCSe ) ) ) )", "obj1": 0.15185185185185185, "obj2": 0.7854080190318671}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) )", "choosing": "( ( Min( DS ,MUM ) * ( MUM * ( ( MUM * RCSe ) / RMSe ) ) ) / Max( ( MUC * RCSe ),( RMSe / MUR ) ) )", "obj1": 0.39444444444444443, "obj2": 0.5471312936816336}, {"determining": "Max( Max( ARS,BR ),( MRS + MDR ) )", "choosing": "( ( ( ( RRSe * MUM ) - Min( MUR ,DS ) ) / ( ( CS - MUM ) + Max( MUM,MLU ) ) ) + Min( Max( Min( DS ,CS ),( MUC + MUM ) ) ,( ( MUM + MUM ) * ( DS - RMSe ) ) ) )", "obj1": 0.25, "obj2": 0.6511329439270446}, {"determining": "( Min( ( Max( MDR,DDR ) * ( RRS * FirstVNF_RAM_Server ) ) ,Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( BR / FirstVNF_CPU_Server ) ) ) * Max( ( ( FirstVNF_Mem_Server / MDR ) * ( DDR - RRS ) ),( Min( BR ,FirstVNF_Mem ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR / ( MLU * RRSe ) ) / ( MUC * DS ) )", "obj1": 0.12037037037037036, "obj2": 0.8162814942676037}, {"determining": "Min( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ,( FirstVNF_CPU + Max( RRS,( FirstVNF_RAM - MRS ) ) ) )", "choosing": "( Min( Min( Min( MUR ,MLU ) ,( MUC + RCSe ) ) ,( ( CS * MLU ) * ( MUC / MUM ) ) ) * ( ( Min( MUR ,MLU ) * ( CS - CS ) ) - ( ( CS * MUR ) + ( MUR * RMSe ) ) ) )", "obj1": 0.22037037037037038, "obj2": 0.6830086160575415}, {"determining": "( ( ( ( DDR * BR ) + Min( MDR ,Const ) ) - ( ( ARS - PN ) / Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ) * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) - ( FirstVNF_RAM * RRS ) ) / ( ( FirstVNF_Mem + FirstVNF_RAM ) * Max( CRS,BR ) ) ) )", "choosing": "Min( ( Max( ( MUM * MUM ),( MUR + MUM ) ) - Max( ( RCSe + MLU ),Max( RRSe,RCSe ) ) ) ,Max( ( Max( MUM,MUC ) * ( MUC / MUR ) ),( ( RCSe - RMSe ) * ( RRSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( BR ,CRS ) / ( PN - FirstVNF_RAM ) ),Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),( PN + ( ( FirstVNF_Mem_Server * Const ) * FirstVNF_Mem ) ) ) ) / ( Min( Min( FirstVNF_CPU_Server ,MRS ) ,( BR / FirstVNF_RAM_Server ) ) / ( Min( MRS ,FirstVNF_Mem ) - Max( BR,MDR ) ) ) )", "choosing": "( Max( ( Max( MLU,MUM ) / ( RRSe + MLU ) ),( ( RCSe * RMSe ) / Max( CS,MUC ) ) ) / ( MLU - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( Const * FirstVNF_CPU ) - Max( DDR,CRS ) ),Max( ( BR / FirstVNF_CPU ),( FirstVNF_RAM - RRS ) ) ) / ( Max( ( ARS + ARS ),( BR - FirstVNF_CPU ) ) * ( ( MDR / FirstVNF_RAM_Server ) / ( FirstVNF_CPU * FirstVNF_Mem ) ) ) )", "choosing": "Min( Max( ( ( RCSe + MUC ) * RRSe ),( MUC + Max( MUR,RMSe ) ) ) ,( DS * RRSe ) )", "obj1": 0.3814814814814815, "obj2": 0.571710579706934}, {"determining": "Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) * CRS ),Min( ( Min( RRS ,PN ) / ( RRS * RRS ) ) ,( ( ARS * DDR ) / ( PN + ACS ) ) ) )", "choosing": "( Max( DS,( RMSe + DS ) ) / ( ( ( MUC + RMSe ) - DS ) + ( RMSe / ( MUR / ( MLU - ( MUC - CS ) ) ) ) ) )", "obj1": 0.3907407407407407, "obj2": 0.5545691774126396}], "2": [{"determining": "( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) - ( Min( Min( Min( ( CRS / CRS ) ,RRS ) ,FirstVNF_RAM_Server ) ,( PN / ( ( CRS / MRS ) * FirstVNF_Mem ) ) ) * AMS ) )", "choosing": "Min( Max( MUM,RRSe ) ,Min( ( MUM + ( MUR - Min( ( ( ( DS / RMSe ) + MUR ) + RMSe ) ,MUC ) ) ) ,Max( RCSe,( MUC - MUR ) ) ) )", "obj1": 0.662962962962963, "obj2": 0.32001196441563856}, {"determining": "( ( FirstVNF_RAM_Server - AMS ) - Min( AMS ,MDR ) )", "choosing": "( ( RCSe * MUC ) - Max( RCSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ARS ) - ( FirstVNF_Mem_Server - PN ) )", "choosing": "Min( ( CS / MLU ) ,( DS / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( AMS / PN ),( FirstVNF_CPU * PN ) )", "choosing": "( ( MUR / MUR ) - Max( RMSe,DS ) )", "obj1": 0.2537037037037037, "obj2": 0.6471225670320588}, {"determining": "( ( FirstVNF_CPU - ACS ) + ( ACS - ACS ) )", "choosing": "Max( Min( MUR ,CS ),( ( CS / Max( CS,CS ) ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( DDR + BR ),( FirstVNF_CPU / FirstVNF_CPU ) ) ,( FirstVNF_Mem - DDR ) )", "choosing": "Min( ( Max( CS,( ( MLU / RMSe ) + RCSe ) ) * ( DS / RMSe ) ) ,( RCSe / ( ( ( DS * DS ) + Max( Max( RCSe,MUM ),RRSe ) ) - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,Const ) * ACS ) - ( MRS + ACS ) )", "choosing": "Max( Min( Max( MLU,MUR ) ,MLU ),Min( MLU ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( FirstVNF_RAM_Server - BR ),( ACS * ARS ) ) ,( ( CRS - MDR ) * ( FirstVNF_Mem / Const ) ) )", "choosing": "( Max( ( MUM + CS ),( MUM + MUR ) ) * Min( ( RRSe - MUC ) ,( MUR / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) * Min( ( FirstVNF_Mem - PN ) ,PN ) )", "choosing": "( ( ( RCSe - RMSe ) * CS ) / ( MUR * RMSe ) )", "obj1": 0.2722222222222222, "obj2": 0.6332903734289472}, {"determining": "( ( ( Const * CRS ) / ( Const * ( Min( BR ,( ARS + RRS ) ) + Min( FirstVNF_Mem ,DDR ) ) ) ) + ( ( BR * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "( Min( MUR ,MUR ) * Min( MUC ,Min( DS ,MUC ) ) )", "obj1": 0.12962962962962962, "obj2": 0.7962144569590702}, {"determining": "( ( FirstVNF_Mem_Server + Min( PN ,MRS ) ) - ( Max( RRS,Const ) * Max( PN,PN ) ) )", "choosing": "( ( Min( DS ,MUR ) / Min( RRSe ,RRSe ) ) * ( DS + ( MUC / MUR ) ) )", "obj1": 0.3648148148148148, "obj2": 0.5725385438024256}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) + ( RRS + CRS ) ) - Min( ( FirstVNF_CPU_Server + CRS ) ,FirstVNF_CPU ) )", "choosing": "( ( ( DS / MLU ) - Min( ( ( RCSe / ( ( Max( RCSe,DS ) * ( MLU * MUC ) ) + MUM ) ) + CS ) ,MLU ) ) - ( Min( DS ,DS ) + ( MLU - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * ( FirstVNF_Mem * ( Const - ARS ) ) ) - Max( FirstVNF_RAM_Server,MRS ) )", "choosing": "( ( Max( Min( DS ,MUC ),( DS - RCSe ) ) / ( ( CS / RMSe ) * ( MUM + MLU ) ) ) + ( ( ( CS - MUM ) / ( MUM * CS ) ) - ( ( MUC - CS ) * ( MLU - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,Max( ( MRS / PN ),PN ) ) + Min( ARS ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( RCSe * ( CS - RRSe ) ) ,( MLU - ( RMSe + MLU ) ) )", "obj1": 0.25555555555555554, "obj2": 0.6441451478430374}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_RAM_Server + RRS ) ) - FirstVNF_RAM_Server ) * ( FirstVNF_RAM * Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( Max( ( ( MLU - DS ) - ( MUC + MLU ) ),( ( DS * MUR ) - ( RMSe / MLU ) ) ) - ( ( ( RRSe - RRSe ) * ( DS * RMSe ) ) - ( ( RCSe - RCSe ) / Max( RCSe,RMSe ) ) ) )", "obj1": 0.9277777777777778, "obj2": 0.04754678190689702}, {"determining": "Max( ( Const - ( AMS * ( BR * DDR ) ) ),( ARS * FirstVNF_RAM ) )", "choosing": "( ( Max( MLU,MUM ) + Min( Min( RMSe ,MUC ) ,( MUC - RCSe ) ) ) / ( ( ( CS + CS ) / Max( CS,RCSe ) ) + ( ( MUR - MUM ) / Min( CS ,RCSe ) ) ) )", "obj1": 0.15185185185185185, "obj2": 0.7854080190318671}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) )", "choosing": "( ( Min( DS ,MUM ) * ( MUM * ( ( MUM * RCSe ) / RMSe ) ) ) / Max( ( MUC * RCSe ),( RMSe / MUR ) ) )", "obj1": 0.39444444444444443, "obj2": 0.5471312936816336}, {"determining": "Max( Max( ARS,BR ),( MRS + MDR ) )", "choosing": "( ( ( ( RRSe * MUM ) - Min( MUR ,DS ) ) / ( ( CS - MUM ) + Max( MUM,MLU ) ) ) + Min( Max( Min( DS ,CS ),( MUC + MUM ) ) ,( ( MUM + MUM ) * ( DS - RMSe ) ) ) )", "obj1": 0.25, "obj2": 0.6511329439270446}, {"determining": "( Min( ( Max( MDR,DDR ) * ( RRS * FirstVNF_RAM_Server ) ) ,Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( BR / FirstVNF_CPU_Server ) ) ) * Max( ( ( FirstVNF_Mem_Server / MDR ) * ( DDR - RRS ) ),( Min( BR ,FirstVNF_Mem ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR / ( MLU * RRSe ) ) / ( MUC * DS ) )", "obj1": 0.12037037037037036, "obj2": 0.8162814942676037}, {"determining": "Min( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ,( FirstVNF_CPU + Max( RRS,( FirstVNF_RAM - MRS ) ) ) )", "choosing": "( Min( Min( Min( MUR ,MLU ) ,( MUC + RCSe ) ) ,( ( CS * MLU ) * ( MUC / MUM ) ) ) * ( ( Min( MUR ,MLU ) * ( CS - CS ) ) - ( ( CS * MUR ) + ( MUR * RMSe ) ) ) )", "obj1": 0.22037037037037038, "obj2": 0.6830086160575415}, {"determining": "( ( ( ( DDR * BR ) + Min( MDR ,Const ) ) - ( ( ARS - PN ) / Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ) * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) - ( FirstVNF_RAM * RRS ) ) / ( ( FirstVNF_Mem + FirstVNF_RAM ) * Max( CRS,BR ) ) ) )", "choosing": "Min( ( Max( ( MUM * MUM ),( MUR + MUM ) ) - Max( ( RCSe + MLU ),Max( RRSe,RCSe ) ) ) ,Max( ( Max( MUM,MUC ) * ( MUC / MUR ) ),( ( RCSe - RMSe ) * ( RRSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( BR ,CRS ) / ( PN - FirstVNF_RAM ) ),Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),( PN + ( ( FirstVNF_Mem_Server * Const ) * FirstVNF_Mem ) ) ) ) / ( Min( Min( FirstVNF_CPU_Server ,MRS ) ,( BR / FirstVNF_RAM_Server ) ) / ( Min( MRS ,FirstVNF_Mem ) - Max( BR,MDR ) ) ) )", "choosing": "( Max( ( Max( MLU,MUM ) / ( RRSe + MLU ) ),( ( RCSe * RMSe ) / Max( CS,MUC ) ) ) / ( MLU - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * ( FirstVNF_Mem * ( Max( MDR,FirstVNF_Mem_Server ) + Max( DDR,FirstVNF_CPU_Server ) ) ) ) - Max( FirstVNF_RAM_Server,MRS ) )", "choosing": "( ( Max( Min( ( ( RMSe / CS ) * ( CS + DS ) ) ,MUC ),( DS - RCSe ) ) / ( ( CS / RMSe ) * ( MUM + MLU ) ) ) + ( ( ( CS - MUM ) / ( MUM * CS ) ) - ( ( MUC - CS ) * ( MLU - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * ( FirstVNF_Mem * ( Const - ARS ) ) ) - Max( FirstVNF_RAM_Server,MRS ) )", "choosing": "( ( RMSe / CS ) * ( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem_Server - ARS ),( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - BR ) ) - ( Max( RRS,Const ) * Max( PN,PN ) ) )", "choosing": "( ( Min( DS ,MUR ) / Min( RRSe ,RRSe ) ) * Max( MLU,MUR ) )", "obj1": 0.37037037037037035, "obj2": 0.5659307164791356}, {"determining": "( ( FirstVNF_Mem_Server + Min( PN ,MRS ) ) - ( Max( RRS,Const ) * Max( PN,PN ) ) )", "choosing": "( ( Min( DS ,MUR ) / Min( RRSe ,RRSe ) ) * ( DS + ( MUC / MUR ) ) )", "obj1": 0.3648148148148148, "obj2": 0.5725385438024256}, {"determining": "( ( Min( ( AMS - Const ) ,Max( CRS,FirstVNF_CPU_Server ) ) / ( ( FirstVNF_RAM - CRS ) / ( Const * DDR ) ) ) * Min( Min( ( Const - ( CRS * BR ) ) ,( ( RRS - Max( AMS,CRS ) ) - DDR ) ) ,( ( BR * FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,MDR ) ) ) )", "choosing": "Min( ( ( Min( ( Min( RCSe ,( MLU * ( RMSe - MUC ) ) ) - ( ( RCSe * MUM ) + ( RRSe - DS ) ) ) ,Max( ( ( MLU + MLU ) / Max( RCSe,DS ) ),( ( MUM + RCSe ) * ( RMSe / MUC ) ) ) ) / ( MUM / RRSe ) ) * ( MUR / CS ) ) ,Max( ( ( MUM + RCSe ) * ( RMSe / MUC ) ),( ( MLU + MLU ) / Max( RCSe,DS ) ) ) )", "obj1": 0.2611111111111111, "obj2": 0.6427250865461855}, {"determining": "( ( RRS + ( MRS - Const ) ) - FirstVNF_CPU_Server )", "choosing": "( ( CS - ( RMSe + Min( MUM ,RRSe ) ) ) * ( MUR / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),( PN + CRS ) ),( Min( BR ,CRS ) / ( PN - FirstVNF_RAM ) ) ) / ( ( FirstVNF_RAM / ( FirstVNF_CPU * ( FirstVNF_CPU_Server / PN ) ) ) / ( Min( MRS ,FirstVNF_Mem ) - Max( BR,MDR ) ) ) )", "choosing": "( Max( ( Max( MLU,MUM ) / ( RRSe + MLU ) ),( ( RCSe * RMSe ) / Max( CS,MUC ) ) ) / Min( Min( RMSe ,DS ) ,Min( Max( MUM,RCSe ) ,Min( CS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),( PN + CRS ) ),( Min( BR ,CRS ) / ( PN - FirstVNF_RAM ) ) ) / ( Min( Min( FirstVNF_CPU_Server ,MRS ) ,( BR / FirstVNF_RAM_Server ) ) / ( Min( MRS ,FirstVNF_Mem ) - Max( BR,MDR ) ) ) )", "choosing": "( ( RMSe * Max( DS,( MUC + RCSe ) ) ) - Min( Min( RMSe ,DS ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) + ( ( PN * AMS ) + RRS ) ) - Min( ( PN / BR ) ,Max( MDR,BR ) ) )", "choosing": "( ( ( DS - MLU ) - ( DS - DS ) ) - ( Min( DS ,DS ) + Max( ( CS / CS ),Max( MLU,( ( RMSe + MUC ) + RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / CRS ) / ( AMS - FirstVNF_CPU ) )", "choosing": "( Max( RRSe,RCSe ) - Max( MUR,MUC ) )", "obj1": 0.3388888888888889, "obj2": 0.5830981136338177}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( FirstVNF_RAM * ( ( BR / FirstVNF_RAM ) + ARS ) ) )", "choosing": "( ( Max( Max( ( Max( CS,DS ) - Min( MUC ,MUC ) ),Min( Min( DS ,( MLU + MUM ) ) ,RMSe ) ),( RMSe * MUM ) ) * MLU ) * ( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,CRS ) - Max( ( ( DDR / MDR ) / DDR ),Max( RRS,MRS ) ) )", "choosing": "( ( Min( ( ( ( MLU - ( Min( MUC ,MUC ) + CS ) ) + MUM ) / RMSe ) ,( DS * ( MUC * CS ) ) ) / DS ) - Max( Min( MUM ,CS ),( MUC + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem / ( AMS - ACS ) ) )", "choosing": "Max( ( RMSe + MUM ),( Min( ( RMSe + RMSe ) ,MUM ) * MLU ) )", "obj1": 0.9574074074074074, "obj2": 0.03812697320169973}, {"determining": "Min( Max( ARS,Min( BR ,BR ) ) ,( FirstVNF_Mem / ( AMS - BR ) ) )", "choosing": "( Min( ( ( MUC + RRSe ) * ( ( Min( MLU ,Min( DS ,MUC ) ) + MLU ) - MLU ) ) ,( MUC - ( DS / ( RCSe / RRSe ) ) ) ) - Max( ( Min( RCSe ,MUM ) * ( CS / MUR ) ),Min( ( CS + RMSe ) ,( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ARS,Min( BR ,BR ) ) ,( FirstVNF_Mem / ( AMS - BR ) ) )", "choosing": "( Min( ( ( MUR + MUC ) * ( RRSe - MUM ) ) ,( MUC - ( DS / ( Max( Max( MUM,MLU ),RRSe ) / RRSe ) ) ) ) * ( ( Min( MUM ,RCSe ) * ( CS / MUR ) ) + Min( ( CS + RMSe ) ,( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ARS,Min( BR ,BR ) ) ,( FirstVNF_Mem / ( AMS - BR ) ) )", "choosing": "( Min( ( ( MUC + RRSe ) * ( ( Min( MLU ,Min( DS ,MUC ) ) + MLU ) - MLU ) ) ,( MUC - ( DS / ( RCSe / RRSe ) ) ) ) - Max( ( Min( RCSe ,MUM ) * ( CS / MUR ) ),Min( ( CS + RMSe ) ,( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( RRS - Const ) ,( Const - FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem / ( AMS - ACS ) ) )", "choosing": "( Min( ( ( MUR + MUC ) * ( RRSe - MUM ) ) ,( MUC - ( DS / ( RCSe / RRSe ) ) ) ) - Max( ( Min( RCSe ,MUM ) * ( CS / MUR ) ),Min( ( CS + RMSe ) ,( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / MDR ) - ( Max( RRS,Const ) * Max( PN,PN ) ) )", "choosing": "( MUM * ( DS + ( MUC / MUR ) ) )", "obj1": 0.9944444444444445, "obj2": 0.0076825045117518784}, {"determining": "Min( ( CRS / MDR ) ,( BR + DDR ) )", "choosing": "( ( Min( DS ,MUR ) / Min( RRSe ,RRSe ) ) * ( DS + ( MUC / MUR ) ) )", "obj1": 0.3648148148148148, "obj2": 0.5725385438024256}, {"determining": "( Min( BR ,FirstVNF_Mem ) - Min( BR ,ACS ) )", "choosing": "Max( Max( RCSe,DS ),( RCSe / MUR ) )", "obj1": 0.3111111111111111, "obj2": 0.6242007189991444}, {"determining": "Min( Min( ( ARS - Const ) ,( Const - FirstVNF_RAM_Server ) ) ,( RRS + Min( DDR ,FirstVNF_Mem ) ) )", "choosing": "( Min( ( ( MUR + MUC ) * ( MUM - RRSe ) ) ,( MUC - ( DS / ( RCSe / ( Min( DS ,MUM ) * ( ( MUC + DS ) - Min( DS ,MUC ) ) ) ) ) ) ) - Max( ( Min( RCSe ,MUM ) * ( CS / MUR ) ),Min( ( CS + RMSe ) ,( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( RRS - Const ) ,( Const - FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem / ( AMS - ACS ) ) )", "choosing": "( ( Min( DS ,MUM ) * Min( ( RCSe + MUR ) ,Min( DS ,MUC ) ) ) / Max( ( MLU * RCSe ),( RMSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ARS + FirstVNF_RAM ),( Const - ( AMS * DDR ) ) )", "choosing": "( ( ( Min( RRSe ,CS ) - ( CS + RCSe ) ) + Min( Min( DS ,MUC ) ,( MUC - RCSe ) ) ) / ( ( DS / CS ) + ( ( MUR - MUM ) / Min( CS ,RCSe ) ) ) )", "obj1": 0.2851851851851852, "obj2": 0.6258898757747292}, {"determining": "Min( Min( Min( ( ( PN / AMS ) + ( Const / FirstVNF_RAM ) ) ,( ( FirstVNF_Mem_Server * Const ) + ( DDR / BR ) ) ) ,( Const - FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem / ( AMS - ACS ) ) )", "choosing": "( Min( ( ( MUR + MUC ) * Max( ( RRSe - RMSe ),MUR ) ) ,( MUC - ( DS / ( RCSe / ( Max( ( MLU + MUM ),( RCSe + DS ) ) + ( ( RMSe + MUR ) - Min( RMSe ,RMSe ) ) ) ) ) ) ) - Max( ( Min( RCSe ,MUM ) * ( CS / MLU ) ),Min( ( CS + RMSe ) ,( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( RRS - Const ) ,( Const - FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem / ( AMS - ACS ) ) )", "choosing": "( ( Max( ( MLU + MUM ),( RCSe + DS ) ) + ( ( RMSe + MUR ) - Min( RMSe ,RMSe ) ) ) - ( Min( ( CS - MUC ) ,Max( MUR,MUM ) ) - ( ( DS - MUM ) / Min( RMSe ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS - ( Max( RRS,Const ) * Max( PN,PN ) ) )", "choosing": "( ( Min( DS ,MUR ) / Min( RRSe ,RRSe ) ) * MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_RAM ) * Min( Min( ( FirstVNF_CPU_Server / RRS ) ,FirstVNF_Mem ) ,Const ) )", "choosing": "( ( MUC * MUM ) * Min( Max( CS,RMSe ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,Max( ARS,BR ) ) + ( CRS + BR ) )", "choosing": "( ( CS - ( RMSe + Max( ( Min( ( ( RCSe * MUM ) + ( MUM + MUC ) ) ,MUC ) / RCSe ),DS ) ) ) * ( Max( CS,RMSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,FirstVNF_Mem ) - ( ( MDR - FirstVNF_RAM_Server ) / FirstVNF_RAM ) )", "choosing": "Max( Max( Max( MUR,MLU ),DS ),( RCSe / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) * ( RRS / ( RRS / FirstVNF_Mem ) ) ) - ( ARS * BR ) )", "choosing": "( ( ( MUM + DS ) + ( MLU / CS ) ) * ( CS + ( Min( MUM ,CS ) - ( RCSe + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server / ( MRS + FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( DS,RCSe ) ,Max( MUR,RMSe ) ) / ( ( ( RRSe - RRSe ) * ( DS * RMSe ) ) - ( ( RCSe - RCSe ) / Max( RCSe,RMSe ) ) ) )", "obj1": 0.2537037037037037, "obj2": 0.6471225670320588}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_RAM_Server + RRS ) ) - FirstVNF_RAM_Server ) * ( FirstVNF_RAM * Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( Max( ( ( MLU - DS ) - ( MUC + MLU ) ),( ( DS * MUR ) - ( RMSe / MLU ) ) ) - ( ( ( RRSe - RRSe ) * ( DS * RMSe ) ) - ( ( RCSe - RCSe ) / Max( RCSe,RMSe ) ) ) )", "obj1": 0.9277777777777778, "obj2": 0.04754678190689702}, {"determining": "( ( FirstVNF_CPU * ( Const * FirstVNF_RAM_Server ) ) + ( MRS + Max( Const,Max( Const,MDR ) ) ) )", "choosing": "( ( ( Min( RRSe ,CS ) - ( CS + RCSe ) ) + Min( Min( DS ,MUC ) ,( MUC - RCSe ) ) ) / ( ( ( CS + CS ) / Max( CS,RCSe ) ) + ( ( MUR - MUM ) / Min( CS ,RCSe ) ) ) )", "obj1": 0.15185185185185185, "obj2": 0.7854080190318671}, {"determining": "Max( Max( RRS,MRS ),( Max( RRS,( PN / MRS ) ) - DDR ) )", "choosing": "Min( Max( ( DS + DS ),( MUC / MUM ) ) ,( ( MUC * RCSe ) - ( ( ( MUC - MUR ) * Max( DS,CS ) ) - MUM ) ) )", "obj1": 0.20925925925925926, "obj2": 0.7181463000849527}, {"determining": "( Max( AMS,FirstVNF_Mem ) * ( Min( DDR ,FirstVNF_CPU ) * ( ( Const + PN ) - ( ARS + ( RRS + Const ) ) ) ) )", "choosing": "( ( Min( MUR ,Min( RMSe ,DS ) ) + Max( CS,RCSe ) ) + ( ( ( ( MUM + RRSe ) / MUR ) / RCSe ) - Max( DS,Max( RRSe,Min( MUM ,RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR * FirstVNF_Mem ) / ( MDR + FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM * FirstVNF_CPU ) * Max( AMS,ARS ) ) ) / Min( Max( ( Const + CRS ),( RRS + DDR ) ) ,Max( ( MRS / ARS ),( AMS + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RRSe * MUM ) - Min( MUR ,DS ) ) / ( ( CS - MUM ) + Max( MUM,MLU ) ) ) + Min( Max( Min( DS ,CS ),( MUC + MUM ) ) ,( ( MUM + MUM ) * ( DS - RMSe ) ) ) )", "obj1": 0.9185185185185185, "obj2": 0.07429371466027833}, {"determining": "( ( Const + Const ) + ( BR * FirstVNF_RAM_Server ) )", "choosing": "( ( Min( DS ,MUR ) / Min( RRSe ,MUC ) ) * Min( ( RCSe / MUC ) ,MUR ) )", "obj1": 0.3648148148148148, "obj2": 0.5725385438024256}, {"determining": "( ( FirstVNF_RAM / CRS ) / Max( Max( ( RRS + Const ),RRS ),MDR ) )", "choosing": "( Max( RRSe,RCSe ) - Max( ( ( RCSe + MUM ) * ( MUR / MLU ) ),MLU ) )", "obj1": 0.2833333333333333, "obj2": 0.6273973570930375}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem + MRS ) * ( Min( ( Max( Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),( PN + CRS ) ),( Min( BR ,CRS ) / ( PN - FirstVNF_RAM ) ) ) / ( Min( Min( FirstVNF_CPU_Server ,MRS ) ,( BR / FirstVNF_RAM_Server ) ) / ( Min( MRS ,FirstVNF_Mem ) - Max( BR,MDR ) ) ) ) ,PN ) / ARS ) ) )", "choosing": "( ( Min( DS ,MUM ) * Min( ( RCSe + MUR ) ,Max( ( Max( MLU,MUM ) / ( RRSe + MLU ) ),( ( RCSe * RMSe ) / Max( CS,MUC ) ) ) ) ) / Max( ( MLU * RCSe ),( RMSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),( PN + CRS ) ),( Min( BR ,CRS ) / ( PN - FirstVNF_RAM ) ) ) / ( Min( Min( FirstVNF_CPU_Server ,MRS ) ,( BR / FirstVNF_RAM_Server ) ) / ( Min( MRS ,FirstVNF_Mem ) - Max( BR,MDR ) ) ) )", "choosing": "( Max( ( Max( MLU,MUM ) / ( RRSe + MLU ) ),( ( RCSe * RMSe ) / Max( CS,MUC ) ) ) / Min( Max( ( MLU + MUC ),Min( DS ,MUC ) ) ,Min( Max( MUM,RCSe ) ,Min( CS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( RRS,ACS ),AMS ) ,( ( DDR * FirstVNF_Mem_Server ) - ( Const + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( DS / RMSe ) * Min( MUC ,MUC ) ) ,( ( ( RRSe - DS ) / ( DS / ( MUM / MUR ) ) ) / ( MUC - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS + AMS ) ,Min( ( DDR * FirstVNF_Mem_Server ) ,( Const + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( DS / RMSe ) * Min( MUC ,MUC ) ) ,( RCSe / ( MUC - ( MUR * ( ( DS * RCSe ) - ( ( MUM / MUM ) * RRSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU / ARS ) + ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ,( FirstVNF_RAM_Server - Max( ( MRS / ARS ),( AMS + FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( MLU + Max( RRSe,RRSe ) ) ,( RMSe * Min( MUR ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM / ACS ) ,( CRS - AMS ) )", "choosing": "Max( ( Max( MLU,CS ) * ( MUC * RRSe ) ),( CS * ( ( RMSe - CS ) / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( BR,ARS ),( ( PN * ( MRS - FirstVNF_Mem ) ) + ( ( BR + BR ) / ( ARS - DDR ) ) ) )", "choosing": "( ( ( ( RRSe * MUM ) - Min( MUR ,DS ) ) / ( ( CS - MUM ) + Max( MUM,Max( RCSe,Max( MUR,DS ) ) ) ) ) + Min( Min( RRSe ,( RRSe + CS ) ) ,( ( MUM + MUM ) * ( MUR - RMSe ) ) ) )", "obj1": 0.25, "obj2": 0.6511329439270446}, {"determining": "Max( Max( Min( ( AMS + BR ) ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ),( ( BR + BR ) / ( ARS - DDR ) ) )", "choosing": "( ( ( ( RRSe * MUM ) - Min( MUR ,DS ) ) / ( ( CS - MUM ) + Max( MUM,MLU ) ) ) + Min( Max( Min( DS ,CS ),( MUC + MUM ) ) ,( ( MUM + MUM ) * ( DS - RMSe ) ) ) )", "obj1": 0.25, "obj2": 0.6511329439270446}, {"determining": "( ( ( Min( MRS ,PN ) / ARS ) / ( Const * PN ) ) + ( ( AMS * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "( ( ( ( Min( DS ,MUM ) * Min( ( RCSe + MUR ) ,Min( DS ,MUC ) ) ) / Max( ( MLU * RCSe ),( RMSe / MUR ) ) ) - CS ) * Min( RMSe ,Min( DS ,MUC ) ) )", "obj1": 0.15, "obj2": 0.7878316803229958}, {"determining": "( ( ( Const * CRS ) / ( Const * PN ) ) + ( ( AMS * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "( ( ( RRSe - CS ) - CS ) * Min( RMSe ,Min( DS ,MUC ) ) )", "obj1": 0.13148148148148148, "obj2": 0.793960176665771}, {"determining": "( ( PN * ( FirstVNF_Mem_Server * RRS ) ) - ( ARS * BR ) )", "choosing": "( ( RCSe * MLU ) * RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR / MDR ) * RRS ) + ( Max( BR,FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM / RMSe ) * ( Min( CS ,MUM ) / ( CS * MUM ) ) )", "obj1": 0.24444444444444444, "obj2": 0.6560026611930654}, {"determining": "( Max( FirstVNF_RAM_Server,CRS ) * ( Max( ( ARS + Max( Max( FirstVNF_Mem,ACS ),( ACS + FirstVNF_RAM ) ) ),AMS ) + Const ) )", "choosing": "( ( ( RRSe + MUC ) - ( MUR + DS ) ) - ( ( Min( MUR ,RCSe ) - Max( RCSe,RCSe ) ) * MUM ) )", "obj1": 0.15925925925925927, "obj2": 0.7685607024278798}, {"determining": "( Max( Max( PN,CRS ),Max( ( FirstVNF_RAM - FirstVNF_Mem ),Min( MRS ,FirstVNF_CPU_Server ) ) ) / ( Min( ( CRS * Const ) ,Max( FirstVNF_CPU_Server,RRS ) ) + Min( Min( MRS ,FirstVNF_Mem ) ,( ACS / PN ) ) ) )", "choosing": "( ( ( Min( MUR ,DS ) - ( RRSe * MUM ) ) / ( ( CS - MUM ) * Max( MUM,MLU ) ) ) + ( Min( CS ,( Max( MLU,( DS * CS ) ) + RCSe ) ) - ( CS + DS ) ) )", "obj1": 0.25, "obj2": 0.6511329439270446}, {"determining": "( Min( DDR ,CRS ) / ( CRS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RRSe * MUM ) - Min( MUR ,DS ) ) / ( ( CS - MUM ) + Max( MUM,MLU ) ) ) + Min( Max( Min( DS ,CS ),( MUC + MUM ) ) ,( ( MUM + MUM ) * ( DS - RMSe ) ) ) )", "obj1": 0.25, "obj2": 0.6511329439270446}, {"determining": "( ( ( Const / FirstVNF_RAM ) / ( FirstVNF_Mem - BR ) ) + ( ( ( MDR / MDR ) * RRS ) + ( PN / FirstVNF_RAM ) ) )", "choosing": "Max( ( ( MUC - MUR ) * Max( DS,CS ) ),( Min( CS ,MUM ) / ( CS * MUM ) ) )", "obj1": 0.2537037037037037, "obj2": 0.6471225670320588}, {"determining": "( Max( Max( FirstVNF_CPU_Server,( ( AMS - FirstVNF_Mem ) - FirstVNF_RAM ) ),( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) - ( RRS * AMS ) )", "choosing": "Min( ( MUM / Max( ( DS + RMSe ),MUC ) ) ,Min( ( RCSe - RMSe ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * Min( ( FirstVNF_Mem - Max( ( ( FirstVNF_RAM_Server - PN ) * Min( ACS ,Min( Min( FirstVNF_CPU_Server ,DDR ) ,PN ) ) ),FirstVNF_Mem_Server ) ) ,PN ) )", "choosing": "( ( ( RCSe - RMSe ) * CS ) / ( Min( Max( RRSe,( RCSe + DS ) ) ,( MUM + RCSe ) ) * RMSe ) )", "obj1": 0.26481481481481484, "obj2": 0.6406568840880377}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) * Min( ( FirstVNF_Mem - PN ) ,PN ) )", "choosing": "( ( ( RCSe - RMSe ) * CS ) / ( MUR * RMSe ) )", "obj1": 0.2722222222222222, "obj2": 0.6332903734289472}, {"determining": "( ( AMS * FirstVNF_Mem ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) )", "choosing": "( ( MUR / RMSe ) + Min( RRSe ,DS ) )", "obj1": 0.37592592592592594, "obj2": 0.5519202580036284}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM_Server ) * ( CRS / Min( ( FirstVNF_Mem - PN ) ,PN ) ) )", "choosing": "( ( Min( DS ,MUM ) * Max( MUC,MUR ) ) / ( ( RCSe - RMSe ) * CS ) )", "obj1": 0.31851851851851853, "obj2": 0.5924685426095988}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) * ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) * ( CRS / ARS ) ) )", "choosing": "( ( ( RCSe - RMSe ) * CS ) / ( ( Min( DS ,MUM ) * Max( MUC,MUR ) ) * RMSe ) )", "obj1": 0.18888888888888888, "obj2": 0.7432011952433719}, {"determining": "Min( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU / FirstVNF_Mem ) ) ,Max( RRS,Const ) )", "choosing": "Max( ( RMSe + Max( ( CS * MLU ),Min( MUM ,CS ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( MUR + MUC ) / Min( RMSe ,RMSe ) ) ) )", "obj1": 0.22777777777777777, "obj2": 0.6704495529661237}, {"determining": "Max( ( FirstVNF_RAM / ( FirstVNF_CPU * ( FirstVNF_CPU_Server / PN ) ) ),( FirstVNF_Mem_Server + ( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "Max( ( Max( Max( RMSe,DS ),Max( MUM,RCSe ) ) + Max( ( CS * MLU ),Min( MUM ,CS ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( MUR + MUC ) / Min( RMSe ,RMSe ) ) ) )", "obj1": 0.17222222222222222, "obj2": 0.7458865917543646}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.19074074074074074, "obj2": 0.7290627426342531}, {"determining": "Min( Min( Min( ( AMS + ARS ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) ) ,( Max( ( Max( Min( PN ,ACS ),BR ) * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( MRS * DDR ) ) ) )", "choosing": "( Max( MLU,MUR ) + ( RRSe - ( ( ( MUM / DS ) / MUC ) + RCSe ) ) )", "obj1": 0.21481481481481482, "obj2": 0.7008782588150786}, {"determining": "( ( RRS / CRS ) * ( BR + ARS ) )", "choosing": "( Min( MUC ,MUR ) + Max( MUM,( Max( CS,RCSe ) / ( Max( MUC,RCSe ) * CS ) ) ) )", "obj1": 0.20185185185185187, "obj2": 0.7278576160202981}, {"determining": "( ( FirstVNF_Mem_Server + Min( PN ,MRS ) ) - ( Max( RRS,Const ) * Max( PN,PN ) ) )", "choosing": "( ( Min( DS ,MUR ) / Min( RRSe ,RRSe ) ) * ( DS + ( MUC / MUR ) ) )", "obj1": 0.3648148148148148, "obj2": 0.5725385438024256}, {"determining": "( ( Max( ( BR - FirstVNF_RAM_Server ),( ACS * ARS ) ) - AMS ) - Min( ( ( CRS - CRS ) / CRS ) ,MDR ) )", "choosing": "( ( Max( RMSe,Min( DS ,MUR ) ) * Min( ( RRSe - MUC ) ,( MUR / CS ) ) ) - ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - AMS ) - Min( AMS ,MDR ) )", "choosing": "( ( RCSe * MUC ) - Max( RCSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( CRS + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ),( ACS * FirstVNF_Mem ) ) ,( ( CRS - MDR ) * ( FirstVNF_Mem / Const ) ) )", "choosing": "( Max( ( MUM + CS ),( ( MUC + ( ( DS / MUR ) + MUC ) ) + MUR ) ) * Min( ( RMSe - MUC ) ,( MUR / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),( PN + CRS ) ),( Min( BR ,CRS ) / ( PN - FirstVNF_RAM ) ) ) / ( Min( Min( FirstVNF_CPU_Server ,MRS ) ,( BR / FirstVNF_RAM_Server ) ) / ( Min( MRS ,FirstVNF_Mem ) - Max( BR,MDR ) ) ) )", "choosing": "( Max( ( Max( MLU,MUM ) / ( RRSe + MLU ) ),( ( RCSe * RMSe ) / Max( CS,MUC ) ) ) / Min( Max( ( MLU + MUC ),Min( DS ,MUC ) ) ,Min( Max( MUM,RCSe ) ,Min( CS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) * CRS ) - Min( ( ( RRS * RRS ) / Min( RRS ,PN ) ) ,( ( ARS * DDR ) / ( PN + ACS ) ) ) )", "choosing": "( Max( DS,( RMSe + DS ) ) / ( ( ( MUC + RMSe ) - DS ) + ( RMSe / ( MUR / ( MLU - ( MUC - CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - RRS ) / ( CRS - ACS ) )", "choosing": "Max( Min( MUR ,CS ),( ( CS / Max( CS,CS ) ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - AMS ) - Min( AMS ,AMS ) )", "choosing": "( ( RRSe * MUC ) - Max( RCSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( RRS - Const ) ,( Const - FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem / ( AMS - ACS ) ) )", "choosing": "( ( RCSe * MUC ) - Max( RCSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - AMS ) - Min( AMS ,( Min( Min( Max( FirstVNF_Mem,FirstVNF_RAM ) ,( RRS * MDR ) ) ,FirstVNF_RAM_Server ) / ARS ) ) )", "choosing": "( Min( ( ( MUR + MUC ) * ( RRSe - MUM ) ) ,( ( ( MUM * MUC ) * ( MLU / DS ) ) - ( DS / ( RCSe / RRSe ) ) ) ) - Max( ( Min( RCSe ,MUM ) * ( CS / MUR ) ),Min( ( CS + MUC ) ,( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ARS ) - FirstVNF_CPU_Server )", "choosing": "Min( ( CS / MLU ) ,Min( RMSe ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + Const ) - ( FirstVNF_CPU + Max( ( FirstVNF_Mem / ACS ),BR ) ) )", "choosing": "Min( ( ( ( MUC / RMSe ) * ( ( ( CS / MUR ) * RMSe ) * ( Min( ( MUR * ( RRSe * RCSe ) ) ,Min( ( MLU - RRSe ) ,DS ) ) - CS ) ) ) / Min( MLU ,DS ) ) ,( RRSe / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) + ( CRS + RRS ) ) - Min( ( PN / BR ) ,Max( MDR,BR ) ) )", "choosing": "Max( Max( ( ( RCSe - MUM ) - RCSe ),MUR ),Min( Min( RRSe ,( RRSe + CS ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) - ( Min( Min( Min( ( CRS / CRS ) ,RRS ) ,FirstVNF_RAM_Server ) ,( PN / ( ( CRS / MRS ) * FirstVNF_Mem ) ) ) * AMS ) )", "choosing": "Min( Max( MUM,RRSe ) ,Min( ( MUM + ( MUR - Min( ( ( ( DS / RMSe ) + MUR ) + RMSe ) ,MUC ) ) ) ,Max( RCSe,( MUC - MUR ) ) ) )", "obj1": 0.662962962962963, "obj2": 0.32001196441563856}, {"determining": "( ( FirstVNF_RAM_Server - AMS ) - Min( AMS ,MDR ) )", "choosing": "( ( RCSe * MUC ) - Max( RCSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ARS ) - ( FirstVNF_Mem_Server - PN ) )", "choosing": "Min( ( CS / MLU ) ,( DS / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - ACS ) + ( ACS - ACS ) )", "choosing": "Max( Min( MUR ,CS ),( ( CS / Max( CS,CS ) ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( DDR + BR ),( FirstVNF_CPU / FirstVNF_CPU ) ) ,( FirstVNF_Mem - DDR ) )", "choosing": "Min( ( Max( CS,( ( MLU / RMSe ) + RCSe ) ) * ( DS / RMSe ) ) ,( RCSe / ( ( ( DS * DS ) + Max( Max( RCSe,MUM ),RRSe ) ) - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,Const ) * ACS ) - ( MRS + ACS ) )", "choosing": "Max( Min( Max( MLU,MUR ) ,MLU ),Min( MLU ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( FirstVNF_RAM_Server - BR ),( ACS * ARS ) ) ,( ( CRS - MDR ) * ( FirstVNF_Mem / Const ) ) )", "choosing": "( Max( ( MUM + CS ),( MUM + MUR ) ) * Min( ( RRSe - MUC ) ,( MUR / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) * Min( ( FirstVNF_Mem - PN ) ,PN ) )", "choosing": "( ( ( RCSe - RMSe ) * CS ) / ( MUR * RMSe ) )", "obj1": 0.2722222222222222, "obj2": 0.6332903734289472}, {"determining": "( ( ( Const * CRS ) / ( Const * ( Min( BR ,( ARS + RRS ) ) + Min( FirstVNF_Mem ,DDR ) ) ) ) + ( ( BR * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "( Min( MUR ,MUR ) * Min( MUC ,Min( DS ,MUC ) ) )", "obj1": 0.12962962962962962, "obj2": 0.7962144569590702}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) + ( RRS + CRS ) ) - Min( ( FirstVNF_CPU_Server + CRS ) ,FirstVNF_CPU ) )", "choosing": "( ( ( DS / MLU ) - Min( ( ( RCSe / ( ( Max( RCSe,DS ) * ( MLU * MUC ) ) + MUM ) ) + CS ) ,MLU ) ) - ( Min( DS ,DS ) + ( MLU - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * ( FirstVNF_Mem * ( Const - ARS ) ) ) - Max( FirstVNF_RAM_Server,MRS ) )", "choosing": "( ( Max( Min( DS ,MUC ),( DS - RCSe ) ) / ( ( CS / RMSe ) * ( MUM + MLU ) ) ) + ( ( ( CS - MUM ) / ( MUM * CS ) ) - ( ( MUC - CS ) * ( MLU - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ,( FirstVNF_CPU + Max( RRS,( FirstVNF_RAM - MRS ) ) ) )", "choosing": "( Min( Min( Min( MUR ,MLU ) ,( MUC + RCSe ) ) ,( ( CS * MLU ) * ( MUC / MUM ) ) ) * ( ( Min( MUR ,MLU ) * ( CS - CS ) ) - ( ( CS * MUR ) + ( MUR * RMSe ) ) ) )", "obj1": 0.22037037037037038, "obj2": 0.6830086160575415}, {"determining": "( ( ( ( DDR * BR ) + Min( MDR ,Const ) ) - ( ( ARS - PN ) / Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ) * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) - ( FirstVNF_RAM * RRS ) ) / ( ( FirstVNF_Mem + FirstVNF_RAM ) * Max( CRS,BR ) ) ) )", "choosing": "Min( ( Max( ( MUM * MUM ),( MUR + MUM ) ) - Max( ( RCSe + MLU ),Max( RRSe,RCSe ) ) ) ,Max( ( Max( MUM,MUC ) * ( MUC / MUR ) ),( ( RCSe - RMSe ) * ( RRSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( BR ,CRS ) / ( PN - FirstVNF_RAM ) ),Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),( PN + ( ( FirstVNF_Mem_Server * Const ) * FirstVNF_Mem ) ) ) ) / ( Min( Min( FirstVNF_CPU_Server ,MRS ) ,( BR / FirstVNF_RAM_Server ) ) / ( Min( MRS ,FirstVNF_Mem ) - Max( BR,MDR ) ) ) )", "choosing": "( Max( ( Max( MLU,MUM ) / ( RRSe + MLU ) ),( ( RCSe * RMSe ) / Max( CS,MUC ) ) ) / ( MLU - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * ( FirstVNF_Mem * ( Max( MDR,FirstVNF_Mem_Server ) + Max( DDR,FirstVNF_CPU_Server ) ) ) ) - Max( FirstVNF_RAM_Server,MRS ) )", "choosing": "( ( Max( Min( ( ( RMSe / CS ) * ( CS + DS ) ) ,MUC ),( DS - RCSe ) ) / ( ( CS / RMSe ) * ( MUM + MLU ) ) ) + ( ( ( CS - MUM ) / ( MUM * CS ) ) - ( ( MUC - CS ) * ( MLU - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * ( FirstVNF_Mem * ( Const - ARS ) ) ) - Max( FirstVNF_RAM_Server,MRS ) )", "choosing": "( ( RMSe / CS ) * ( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS + ( MRS - Const ) ) - FirstVNF_CPU_Server )", "choosing": "( ( CS - ( RMSe + Min( MUM ,RRSe ) ) ) * ( MUR / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),( PN + CRS ) ),( Min( BR ,CRS ) / ( PN - FirstVNF_RAM ) ) ) / ( ( FirstVNF_RAM / ( FirstVNF_CPU * ( FirstVNF_CPU_Server / PN ) ) ) / ( Min( MRS ,FirstVNF_Mem ) - Max( BR,MDR ) ) ) )", "choosing": "( Max( ( Max( MLU,MUM ) / ( RRSe + MLU ) ),( ( RCSe * RMSe ) / Max( CS,MUC ) ) ) / Min( Min( RMSe ,DS ) ,Min( Max( MUM,RCSe ) ,Min( CS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),( PN + CRS ) ),( Min( BR ,CRS ) / ( PN - FirstVNF_RAM ) ) ) / ( Min( Min( FirstVNF_CPU_Server ,MRS ) ,( BR / FirstVNF_RAM_Server ) ) / ( Min( MRS ,FirstVNF_Mem ) - Max( BR,MDR ) ) ) )", "choosing": "( ( RMSe * Max( DS,( MUC + RCSe ) ) ) - Min( Min( RMSe ,DS ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) + ( ( PN * AMS ) + RRS ) ) - Min( ( PN / BR ) ,Max( MDR,BR ) ) )", "choosing": "( ( ( DS - MLU ) - ( DS - DS ) ) - ( Min( DS ,DS ) + Max( ( CS / CS ),Max( MLU,( ( RMSe + MUC ) + RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( FirstVNF_RAM * ( ( BR / FirstVNF_RAM ) + ARS ) ) )", "choosing": "( ( Max( Max( ( Max( CS,DS ) - Min( MUC ,MUC ) ),Min( Min( DS ,( MLU + MUM ) ) ,RMSe ) ),( RMSe * MUM ) ) * MLU ) * ( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,CRS ) - Max( ( ( DDR / MDR ) / DDR ),Max( RRS,MRS ) ) )", "choosing": "( ( Min( ( ( ( MLU - ( Min( MUC ,MUC ) + CS ) ) + MUM ) / RMSe ) ,( DS * ( MUC * CS ) ) ) / DS ) - Max( Min( MUM ,CS ),( MUC + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ARS,Min( BR ,BR ) ) ,( FirstVNF_Mem / ( AMS - BR ) ) )", "choosing": "( Min( ( ( MUC + RRSe ) * ( ( Min( MLU ,Min( DS ,MUC ) ) + MLU ) - MLU ) ) ,( MUC - ( DS / ( RCSe / RRSe ) ) ) ) - Max( ( Min( RCSe ,MUM ) * ( CS / MUR ) ),Min( ( CS + RMSe ) ,( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ARS,Min( BR ,BR ) ) ,( FirstVNF_Mem / ( AMS - BR ) ) )", "choosing": "( Min( ( ( MUR + MUC ) * ( RRSe - MUM ) ) ,( MUC - ( DS / ( Max( Max( MUM,MLU ),RRSe ) / RRSe ) ) ) ) * ( ( Min( MUM ,RCSe ) * ( CS / MUR ) ) + Min( ( CS + RMSe ) ,( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ARS,Min( BR ,BR ) ) ,( FirstVNF_Mem / ( AMS - BR ) ) )", "choosing": "( Min( ( ( MUC + RRSe ) * ( ( Min( MLU ,Min( DS ,MUC ) ) + MLU ) - MLU ) ) ,( MUC - ( DS / ( RCSe / RRSe ) ) ) ) - Max( ( Min( RCSe ,MUM ) * ( CS / MUR ) ),Min( ( CS + RMSe ) ,( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( RRS - Const ) ,( Const - FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem / ( AMS - ACS ) ) )", "choosing": "( Min( ( ( MUR + MUC ) * ( RRSe - MUM ) ) ,( MUC - ( DS / ( RCSe / RRSe ) ) ) ) - Max( ( Min( RCSe ,MUM ) * ( CS / MUR ) ),Min( ( CS + RMSe ) ,( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS - Const ) ,( Const - FirstVNF_RAM_Server ) ) ,( RRS + Min( DDR ,FirstVNF_Mem ) ) )", "choosing": "( Min( ( ( MUR + MUC ) * ( MUM - RRSe ) ) ,( MUC - ( DS / ( RCSe / ( Min( DS ,MUM ) * ( ( MUC + DS ) - Min( DS ,MUC ) ) ) ) ) ) ) - Max( ( Min( RCSe ,MUM ) * ( CS / MUR ) ),Min( ( CS + RMSe ) ,( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( RRS - Const ) ,( Const - FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem / ( AMS - ACS ) ) )", "choosing": "( ( Min( DS ,MUM ) * Min( ( RCSe + MUR ) ,Min( DS ,MUC ) ) ) / Max( ( MLU * RCSe ),( RMSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ARS + FirstVNF_RAM ),( Const - ( AMS * DDR ) ) )", "choosing": "( ( ( Min( RRSe ,CS ) - ( CS + RCSe ) ) + Min( Min( DS ,MUC ) ,( MUC - RCSe ) ) ) / ( ( DS / CS ) + ( ( MUR - MUM ) / Min( CS ,RCSe ) ) ) )", "obj1": 0.2851851851851852, "obj2": 0.6258898757747292}, {"determining": "Min( Min( Min( ( ( PN / AMS ) + ( Const / FirstVNF_RAM ) ) ,( ( FirstVNF_Mem_Server * Const ) + ( DDR / BR ) ) ) ,( Const - FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem / ( AMS - ACS ) ) )", "choosing": "( Min( ( ( MUR + MUC ) * Max( ( RRSe - RMSe ),MUR ) ) ,( MUC - ( DS / ( RCSe / ( Max( ( MLU + MUM ),( RCSe + DS ) ) + ( ( RMSe + MUR ) - Min( RMSe ,RMSe ) ) ) ) ) ) ) - Max( ( Min( RCSe ,MUM ) * ( CS / MLU ) ),Min( ( CS + RMSe ) ,( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( RRS - Const ) ,( Const - FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem / ( AMS - ACS ) ) )", "choosing": "( ( Max( ( MLU + MUM ),( RCSe + DS ) ) + ( ( RMSe + MUR ) - Min( RMSe ,RMSe ) ) ) - ( Min( ( CS - MUC ) ,Max( MUR,MUM ) ) - ( ( DS - MUM ) / Min( RMSe ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS - ( Max( RRS,Const ) * Max( PN,PN ) ) )", "choosing": "( ( Min( DS ,MUR ) / Min( RRSe ,RRSe ) ) * MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_RAM ) * Min( Min( ( FirstVNF_CPU_Server / RRS ) ,FirstVNF_Mem ) ,Const ) )", "choosing": "( ( MUC * MUM ) * Min( Max( CS,RMSe ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,Max( ARS,BR ) ) + ( CRS + BR ) )", "choosing": "( ( CS - ( RMSe + Max( ( Min( ( ( RCSe * MUM ) + ( MUM + MUC ) ) ,MUC ) / RCSe ),DS ) ) ) * ( Max( CS,RMSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,FirstVNF_Mem ) - ( ( MDR - FirstVNF_RAM_Server ) / FirstVNF_RAM ) )", "choosing": "Max( Max( Max( MUR,MLU ),DS ),( RCSe / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) * ( RRS / ( RRS / FirstVNF_Mem ) ) ) - ( ARS * BR ) )", "choosing": "( ( ( MUM + DS ) + ( MLU / CS ) ) * ( CS + ( Min( MUM ,CS ) - ( RCSe + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( AMS,FirstVNF_Mem ) * ( Min( DDR ,FirstVNF_CPU ) * ( ( Const + PN ) - ( ARS + ( RRS + Const ) ) ) ) )", "choosing": "( ( Min( MUR ,Min( RMSe ,DS ) ) + Max( CS,RCSe ) ) + ( ( ( ( MUM + RRSe ) / MUR ) / RCSe ) - Max( DS,Max( RRSe,Min( MUM ,RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem + MRS ) * ( Min( ( Max( Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),( PN + CRS ) ),( Min( BR ,CRS ) / ( PN - FirstVNF_RAM ) ) ) / ( Min( Min( FirstVNF_CPU_Server ,MRS ) ,( BR / FirstVNF_RAM_Server ) ) / ( Min( MRS ,FirstVNF_Mem ) - Max( BR,MDR ) ) ) ) ,PN ) / ARS ) ) )", "choosing": "( ( Min( DS ,MUM ) * Min( ( RCSe + MUR ) ,Max( ( Max( MLU,MUM ) / ( RRSe + MLU ) ),( ( RCSe * RMSe ) / Max( CS,MUC ) ) ) ) ) / Max( ( MLU * RCSe ),( RMSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),( PN + CRS ) ),( Min( BR ,CRS ) / ( PN - FirstVNF_RAM ) ) ) / ( Min( Min( FirstVNF_CPU_Server ,MRS ) ,( BR / FirstVNF_RAM_Server ) ) / ( Min( MRS ,FirstVNF_Mem ) - Max( BR,MDR ) ) ) )", "choosing": "( Max( ( Max( MLU,MUM ) / ( RRSe + MLU ) ),( ( RCSe * RMSe ) / Max( CS,MUC ) ) ) / Min( Max( ( MLU + MUC ),Min( DS ,MUC ) ) ,Min( Max( MUM,RCSe ) ,Min( CS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( RRS,ACS ),AMS ) ,( ( DDR * FirstVNF_Mem_Server ) - ( Const + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( DS / RMSe ) * Min( MUC ,MUC ) ) ,( ( ( RRSe - DS ) / ( DS / ( MUM / MUR ) ) ) / ( MUC - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS + AMS ) ,Min( ( DDR * FirstVNF_Mem_Server ) ,( Const + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( DS / RMSe ) * Min( MUC ,MUC ) ) ,( RCSe / ( MUC - ( MUR * ( ( DS * RCSe ) - ( ( MUM / MUM ) * RRSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU / ARS ) + ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ,( FirstVNF_RAM_Server - Max( ( MRS / ARS ),( AMS + FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( MLU + Max( RRSe,RRSe ) ) ,( RMSe * Min( MUR ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM / ACS ) ,( CRS - AMS ) )", "choosing": "Max( ( Max( MLU,CS ) * ( MUC * RRSe ) ),( CS * ( ( RMSe - CS ) / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ( FirstVNF_Mem_Server * RRS ) ) - ( ARS * BR ) )", "choosing": "( ( RCSe * MLU ) * RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR / MDR ) * RRS ) + ( Max( BR,FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM / RMSe ) * ( Min( CS ,MUM ) / ( CS * MUM ) ) )", "obj1": 0.24444444444444444, "obj2": 0.6560026611930654}, {"determining": "( Max( Max( FirstVNF_CPU_Server,( ( AMS - FirstVNF_Mem ) - FirstVNF_RAM ) ),( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) - ( RRS * AMS ) )", "choosing": "Min( ( MUM / Max( ( DS + RMSe ),MUC ) ) ,Min( ( RCSe - RMSe ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) * Min( ( FirstVNF_Mem - PN ) ,PN ) )", "choosing": "( ( ( RCSe - RMSe ) * CS ) / ( MUR * RMSe ) )", "obj1": 0.2722222222222222, "obj2": 0.6332903734289472}, {"determining": "Min( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU / FirstVNF_Mem ) ) ,Max( RRS,Const ) )", "choosing": "Max( ( RMSe + Max( ( CS * MLU ),Min( MUM ,CS ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( MUR + MUC ) / Min( RMSe ,RMSe ) ) ) )", "obj1": 0.22777777777777777, "obj2": 0.6704495529661237}, {"determining": "Min( Min( Min( ( AMS + ARS ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) ) ,( Max( ( Max( Min( PN ,ACS ),BR ) * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( MRS * DDR ) ) ) )", "choosing": "( Max( MLU,MUR ) + ( RRSe - ( ( ( MUM / DS ) / MUC ) + RCSe ) ) )", "obj1": 0.21481481481481482, "obj2": 0.7008782588150786}, {"determining": "( ( Max( ( BR - FirstVNF_RAM_Server ),( ACS * ARS ) ) - AMS ) - Min( ( ( CRS - CRS ) / CRS ) ,MDR ) )", "choosing": "( ( Max( RMSe,Min( DS ,MUR ) ) * Min( ( RRSe - MUC ) ,( MUR / CS ) ) ) - ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - AMS ) - Min( AMS ,MDR ) )", "choosing": "( ( RCSe * MUC ) - Max( RCSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( CRS + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ),( ACS * FirstVNF_Mem ) ) ,( ( CRS - MDR ) * ( FirstVNF_Mem / Const ) ) )", "choosing": "( Max( ( MUM + CS ),( ( MUC + ( ( DS / MUR ) + MUC ) ) + MUR ) ) * Min( ( RMSe - MUC ) ,( MUR / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),( PN + CRS ) ),( Min( BR ,CRS ) / ( PN - FirstVNF_RAM ) ) ) / ( Min( Min( FirstVNF_CPU_Server ,MRS ) ,( BR / FirstVNF_RAM_Server ) ) / ( Min( MRS ,FirstVNF_Mem ) - Max( BR,MDR ) ) ) )", "choosing": "( Max( ( Max( MLU,MUM ) / ( RRSe + MLU ) ),( ( RCSe * RMSe ) / Max( CS,MUC ) ) ) / Min( Max( ( MLU + MUC ),Min( DS ,MUC ) ) ,Min( Max( MUM,RCSe ) ,Min( CS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) * CRS ) - Min( ( ( RRS * RRS ) / Min( RRS ,PN ) ) ,( ( ARS * DDR ) / ( PN + ACS ) ) ) )", "choosing": "( Max( DS,( RMSe + DS ) ) / ( ( ( MUC + RMSe ) - DS ) + ( RMSe / ( MUR / ( MLU - ( MUC - CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - RRS ) / ( CRS - ACS ) )", "choosing": "Max( Min( MUR ,CS ),( ( CS / Max( CS,CS ) ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - AMS ) - Min( AMS ,AMS ) )", "choosing": "( ( RRSe * MUC ) - Max( RCSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( RRS - Const ) ,( Const - FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem / ( AMS - ACS ) ) )", "choosing": "( ( RCSe * MUC ) - Max( RCSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - AMS ) - Min( AMS ,( Min( Min( Max( FirstVNF_Mem,FirstVNF_RAM ) ,( RRS * MDR ) ) ,FirstVNF_RAM_Server ) / ARS ) ) )", "choosing": "( Min( ( ( MUR + MUC ) * ( RRSe - MUM ) ) ,( ( ( MUM * MUC ) * ( MLU / DS ) ) - ( DS / ( RCSe / RRSe ) ) ) ) - Max( ( Min( RCSe ,MUM ) * ( CS / MUR ) ),Min( ( CS + MUC ) ,( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ARS ) - FirstVNF_CPU_Server )", "choosing": "Min( ( CS / MLU ) ,Min( RMSe ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + Const ) - ( FirstVNF_CPU + Max( ( FirstVNF_Mem / ACS ),BR ) ) )", "choosing": "Min( ( ( ( MUC / RMSe ) * ( ( ( CS / MUR ) * RMSe ) * ( Min( ( MUR * ( RRSe * RCSe ) ) ,Min( ( MLU - RRSe ) ,DS ) ) - CS ) ) ) / Min( MLU ,DS ) ) ,( RRSe / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) + ( CRS + RRS ) ) - Min( ( PN / BR ) ,Max( MDR,BR ) ) )", "choosing": "Max( Max( ( ( RCSe - MUM ) - RCSe ),MUR ),Min( Min( RRSe ,( RRSe + CS ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( ( AMS + ARS ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - MUR ) )", "obj1": 0.21481481481481482, "obj2": 0.7008782588150786}, {"determining": "( ( Min( RRS ,Max( Min( ( AMS + BR ) ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) ) * ACS ) - ( MRS + ACS ) )", "choosing": "Max( Min( Max( MUM,MUR ) ,MLU ),Min( MLU ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,Const ) * ACS ) - ( MRS + ACS ) )", "choosing": "Max( Min( Max( MLU,MUR ) ,MLU ),Min( MLU ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM / ( FirstVNF_CPU * ( FirstVNF_CPU_Server / PN ) ) ) / ( Min( MRS ,FirstVNF_Mem ) - Max( BR,MDR ) ) ) )", "choosing": "( Max( ( Max( MLU,MUM ) / ( RRSe + MLU ) ),( ( RCSe * RMSe ) / Max( CS,MUC ) ) ) / Min( Min( ( RCSe + MUR ) ,Min( DS ,MUC ) ) ,Min( Max( MUM,RCSe ) ,Min( CS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),( PN + CRS ) ),( Min( BR ,CRS ) / ( PN - FirstVNF_RAM ) ) ) / ( ( FirstVNF_RAM / ( FirstVNF_CPU * ( ( MRS + PN ) / PN ) ) ) / ( Min( MRS ,FirstVNF_Mem_Server ) - Max( BR,MDR ) ) ) )", "choosing": "( ( RRSe / ( RRSe + MUR ) ) / Min( Min( RMSe ,MUR ) ,Min( Max( MUM,RCSe ) ,Min( CS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( DDR - MDR ) ) - Max( ( FirstVNF_RAM - FirstVNF_Mem ),Max( MRS,FirstVNF_CPU_Server ) ) ) / ( Min( ( Max( FirstVNF_RAM,CRS ) * Const ) ,Max( FirstVNF_CPU_Server,RRS ) ) + ( ( ACS / PN ) - Min( MRS ,Min( Const ,BR ) ) ) ) )", "choosing": "( ( ( ( RRSe * MUM ) - Min( MUR ,DS ) ) / ( ( CS - MUM ) + Max( MUM,MLU ) ) ) + Min( Max( Min( DS ,RRSe ),( MUC + MUM ) ) ,( ( MUM + MUM ) * ( ( RMSe * ( MLU + MUM ) ) / RMSe ) ) ) )", "obj1": 0.22592592592592592, "obj2": 0.671211149277601}, {"determining": "Min( Min( Max( ( FirstVNF_RAM_Server - BR ),( ACS * ARS ) ) ,( ( CRS - MDR ) * ( FirstVNF_Mem / Const ) ) ) ,( ( DDR * FirstVNF_Mem_Server ) - ( Const + FirstVNF_CPU ) ) )", "choosing": "Min( CS ,( RCSe / ( MUC - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Const ) * FirstVNF_Mem_Server ) ,( Max( FirstVNF_Mem,Const ) * ( CRS - MDR ) ) )", "choosing": "( Max( ( MUM + CS ),( MUM + MUR ) ) * Min( ( RRSe - MUC ) ,( RCSe * ( ( RCSe - RMSe ) - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( FirstVNF_RAM_Server - BR ),( ACS * ARS ) ) ,( ( CRS - MDR ) * ( FirstVNF_Mem / Const ) ) )", "choosing": "Min( ( ( DS / RMSe ) * Min( MUC ,MUC ) ) ,( RCSe / ( MUC - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( RRS,ACS ),( Const + BR ) ) ,( ( DDR * FirstVNF_Mem_Server ) - ( Const + FirstVNF_CPU ) ) )", "choosing": "( Max( ( MUM + CS ),( MUM + MUR ) ) * Min( ( RRSe - MUC ) ,( MUR / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( CRS + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ),( ACS * FirstVNF_Mem ) ) ,( ( CRS - MDR ) * ( FirstVNF_Mem / Const ) ) )", "choosing": "( Max( ( MUM + CS ),( ( MUC + ( ( DS / MUR ) + MUC ) ) + MUR ) ) * Min( ( RMSe - MUC ) ,( MUR / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( CRS + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ),( ACS * FirstVNF_Mem ) ) ,( ( CRS - MDR ) * ( FirstVNF_Mem / Const ) ) )", "choosing": "( Max( ( MUM + CS ),( ( MUC + ( ( DS / MUR ) + MUC ) ) + MUR ) ) * Min( ( RMSe - MUC ) ,( MUR / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( CRS + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ),( ACS * FirstVNF_Mem ) ) ,( ( CRS - MDR ) * ( FirstVNF_Mem / Const ) ) )", "choosing": "( Max( ( MUM + CS ),( ( MUC + ( ( DS / MUR ) + MUC ) ) + MUR ) ) * Min( ( RMSe - MUC ) ,( MUR / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( ( CRS - MDR ) * ( FirstVNF_Mem / Const ) ) )", "choosing": "( Max( ( MUC + MUR ),( ( MUC + ( MUC + ( DS / MUR ) ) ) + MUR ) ) * Min( ( RMSe - MUC ) ,( MUR / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM / ( FirstVNF_CPU * ( FirstVNF_CPU_Server / PN ) ) ),( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) )", "choosing": "Max( ( Max( Max( RMSe,DS ),Max( MUM,RCSe ) ) + Max( ( CS * MLU ),Min( MUM ,CS ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( ( MUM / DS ) / MUC ) + RCSe ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8458714033505071}, {"determining": "( ( FirstVNF_RAM / ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) + ( CRS + RRS ) ) ) / ( AMS - FirstVNF_CPU ) )", "choosing": "( Max( RRSe,RCSe ) - Max( MUR,( MLU - CS ) ) )", "obj1": 0.29074074074074074, "obj2": 0.6244014404274904}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) + ( CRS + RRS ) ) - Min( ( PN / BR ) ,Max( MDR,BR ) ) )", "choosing": "( Max( RRSe,RCSe ) - Max( MUR,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( RRS,MRS ),( Max( RRS,( PN / MRS ) ) - DDR ) ) ,( ( CRS - MDR ) * ( FirstVNF_Mem / Const ) ) )", "choosing": "( ( ( MUC * RCSe ) - ( ( ( MUC - MUR ) * Max( DS,CS ) ) - MUM ) ) * Min( ( RMSe - MUC ) ,( MUR / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( CRS + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ),( ACS * FirstVNF_Mem ) ) ,( ( CRS - MDR ) * ( FirstVNF_Mem / Const ) ) )", "choosing": "Min( Max( ( DS + DS ),( MUC / MUM ) ) ,( ( MUC * RCSe ) - ( ( ( MUC - MUR ) * Max( DS,CS ) ) - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS - ( Max( RRS,Const ) * Max( PN,PN ) ) )", "choosing": "( ( Max( CS,RCSe ) / ( Max( MUC,RCSe ) * CS ) ) * MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS - ( Max( RRS,Const ) * Max( PN,PN ) ) )", "choosing": "( ( Min( DS ,MUR ) / Min( RRSe ,RRSe ) ) * MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS - Max( Max( DDR,FirstVNF_Mem ),FirstVNF_Mem ) )", "choosing": "( MUM - Max( Min( MUC ,Min( DS ,MUC ) ),( MUC + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS - Max( Max( DDR,FirstVNF_Mem ),Max( RRS,CRS ) ) )", "choosing": "( MUM - Max( Min( MUM ,CS ),( MUC + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) + ( CRS + RRS ) ) - PN )", "choosing": "( ( ( DS - MLU ) - ( DS - ( ( MUC - MUR ) * Max( DS,CS ) ) ) ) - ( Min( DS ,DS ) + ( MLU - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server / ( MRS + FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( DS,RCSe ) ,Max( MUR,RMSe ) ) / ( ( ( RRSe - RRSe ) * ( DS * RMSe ) ) - ( ( RCSe - RCSe ) / Max( RCSe,RMSe ) ) ) )", "obj1": 0.25, "obj2": 0.6434143962245604}, {"determining": "( ( ( Min( MRS ,PN ) / ARS ) / ( Const * PN ) ) + ( ( AMS * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "( ( ( ( Min( DS ,MUM ) * Min( ( RCSe + MUR ) ,Min( DS ,MUC ) ) ) / Max( ( MLU * RCSe ),( RMSe / MUR ) ) ) - CS ) * Min( RMSe ,Min( DS ,MUC ) ) )", "obj1": 0.12037037037037036, "obj2": 0.8028798682351265}, {"determining": "( Min( Max( Max( ( RRS + Const ),RRS ),MDR ) ,Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( BR / FirstVNF_CPU_Server ) ) ) * Max( ( ( FirstVNF_Mem_Server / MDR ) * ( DDR - RRS ) ),( Min( BR ,FirstVNF_Mem ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR / ( MLU * RRSe ) ) / Max( ( ( RCSe + MUM ) * ( MUR / MLU ) ),MLU ) )", "obj1": 0.14444444444444443, "obj2": 0.7646152857942299}, {"determining": "( ( FirstVNF_RAM / CRS ) / Max( Max( ( RRS + Const ),RRS ),MDR ) )", "choosing": "( Max( RRSe,RCSe ) - Max( ( ( RCSe + MUM ) * ( MUR / MLU ) ),MLU ) )", "obj1": 0.2833333333333333, "obj2": 0.6266177391485493}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( ARS,PN ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,( MDR * ARS ) ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( ( Min( DS ,Max( MUC,RRSe ) ) * Max( RMSe,DS ) ) * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / DS ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.7138667684944016}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.1685185185185185, "obj2": 0.7461888262778625}, {"determining": "Max( ( ARS + FirstVNF_RAM ),( Const - ( ( FirstVNF_RAM_Server - AMS ) - Min( AMS ,MDR ) ) ) )", "choosing": "( ( RRSe - MUM ) / ( ( ( CS + CS ) / Max( CS,RCSe ) ) + ( ( MUR - MUM ) / Min( CS ,RCSe ) ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7374892150263407}, {"determining": "( Min( DDR ,CRS ) / FirstVNF_Mem_Server )", "choosing": "( ( ( ( RRSe * MUM ) - Min( MUR ,DS ) ) / ( ( CS - MUM ) + Max( MUM,MLU ) ) ) + Min( Max( Min( DS ,RMSe ),( MUC + MUM ) ) ,( ( MUM + MUM ) * ( DS - RMSe ) ) ) )", "obj1": 0.26851851851851855, "obj2": 0.6349880736000653}, {"determining": "( Min( CRS ,Max( ARS,BR ) ) + ( CRS + BR ) )", "choosing": "Max( ( ( MUC - MUR ) * Max( DS,CS ) ),( Min( CS ,MUM ) / ( CS * MUM ) ) )", "obj1": 0.2388888888888889, "obj2": 0.6619052459371525}, {"determining": "Min( Min( ( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem ) ) ,FirstVNF_RAM_Server ) ,Max( Const,RRS ) )", "choosing": "Max( ( ( Max( CS,RRSe ) / ( ( CS + RMSe ) / Min( CS ,MLU ) ) ) + Max( ( ( CS - ( Min( ( DS + RRSe ) ,RMSe ) + Max( DS,DS ) ) ) / ( MUR / MLU ) ),Min( MUM ,CS ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( MUR + MUC ) / Min( RMSe ,RMSe ) ) ) )", "obj1": 0.13148148148148148, "obj2": 0.7736690903842448}, {"determining": "Max( Max( Min( ( AMS + BR ) ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ),( ( BR + BR ) / ( ARS - DDR ) ) )", "choosing": "( ( ( ( RRSe * MUM ) - Min( MUR ,DS ) ) / ( ( CS - MUM ) + Max( MUM,MLU ) ) ) + Min( Max( Min( DS ,CS ),( MUC + MUM ) ) ,( ( MUM + MUM ) * ( DS - RMSe ) ) ) )", "obj1": 0.2611111111111111, "obj2": 0.6384735462964297}, {"determining": "( Min( DDR ,FirstVNF_CPU ) * Max( Max( RRS,Const ),( ( BR / FirstVNF_Mem ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR / ( MLU * Min( DS ,MUR ) ) ) / ( ( MUM * ( RCSe / MUC ) ) / ( MUC * ( ( MLU * MLU ) + ( RRSe * ( ( ( MUC + RMSe ) / Max( CS,RMSe ) ) - RCSe ) ) ) ) ) )", "obj1": 0.11296296296296296, "obj2": 0.8253404395750024}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * ( ( Const + MDR ) + ( CRS / FirstVNF_RAM ) ) )", "choosing": "( ( ( RCSe - RMSe ) * CS ) / ( Min( Max( RRSe,MUM ) ,( MUM + ( Max( ( MLU + MUM ),( RCSe + DS ) ) + ( ( RMSe + MUR ) - Min( RMSe ,RMSe ) ) ) ) ) * RMSe ) )", "obj1": 0.17037037037037037, "obj2": 0.7384032513218372}, {"determining": "Min( Max( FirstVNF_Mem_Server,Max( Const,FirstVNF_Mem ) ) ,Max( ( ( MDR / DDR ) / DDR ),Max( RRS,MRS ) ) )", "choosing": "( ( Min( ( ( ( MLU - ( Min( MUC ,MUC ) + CS ) ) + MUM ) / RMSe ) ,( DS * ( MUC * CS ) ) ) / DS ) - Max( Min( MUM ,CS ),( MUC + MLU ) ) )", "obj1": 0.2351851851851852, "obj2": 0.6625822366000517}, {"determining": "( Max( BR,Max( ( MRS / PN ),PN ) ) + ( FirstVNF_RAM_Server - BR ) )", "choosing": "Min( ( RCSe * ( CS - ( MUR / CS ) ) ) ,( MLU - ( RMSe + MLU ) ) )", "obj1": 0.2462962962962963, "obj2": 0.6540039270308406}], "4": [{"determining": "( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) - ( Min( Min( Min( ( CRS / CRS ) ,RRS ) ,FirstVNF_RAM_Server ) ,( PN / ( ( CRS / MRS ) * FirstVNF_Mem ) ) ) * AMS ) )", "choosing": "Min( Max( MUM,RRSe ) ,Min( ( MUM + ( MUR - Min( ( ( ( DS / RMSe ) + MUR ) + RMSe ) ,MUC ) ) ) ,Max( RCSe,( MUC - MUR ) ) ) )", "obj1": 0.662962962962963, "obj2": 0.32001196441563856}, {"determining": "( ( FirstVNF_RAM_Server - AMS ) - Min( AMS ,MDR ) )", "choosing": "( ( RCSe * MUC ) - Max( RCSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ARS ) - ( FirstVNF_Mem_Server - PN ) )", "choosing": "Min( ( CS / MLU ) ,( DS / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - ACS ) + ( ACS - ACS ) )", "choosing": "Max( Min( MUR ,CS ),( ( CS / Max( CS,CS ) ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( DDR + BR ),( FirstVNF_CPU / FirstVNF_CPU ) ) ,( FirstVNF_Mem - DDR ) )", "choosing": "Min( ( Max( CS,( ( MLU / RMSe ) + RCSe ) ) * ( DS / RMSe ) ) ,( RCSe / ( ( ( DS * DS ) + Max( Max( RCSe,MUM ),RRSe ) ) - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,Const ) * ACS ) - ( MRS + ACS ) )", "choosing": "Max( Min( Max( MLU,MUR ) ,MLU ),Min( MLU ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( FirstVNF_RAM_Server - BR ),( ACS * ARS ) ) ,( ( CRS - MDR ) * ( FirstVNF_Mem / Const ) ) )", "choosing": "( Max( ( MUM + CS ),( MUM + MUR ) ) * Min( ( RRSe - MUC ) ,( MUR / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) * Min( ( FirstVNF_Mem - PN ) ,PN ) )", "choosing": "( ( ( RCSe - RMSe ) * CS ) / ( MUR * RMSe ) )", "obj1": 0.2722222222222222, "obj2": 0.6332903734289472}, {"determining": "( ( ( Const * CRS ) / ( Const * ( Min( BR ,( ARS + RRS ) ) + Min( FirstVNF_Mem ,DDR ) ) ) ) + ( ( BR * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "( Min( MUR ,MUR ) * Min( MUC ,Min( DS ,MUC ) ) )", "obj1": 0.12962962962962962, "obj2": 0.7962144569590702}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) + ( RRS + CRS ) ) - Min( ( FirstVNF_CPU_Server + CRS ) ,FirstVNF_CPU ) )", "choosing": "( ( ( DS / MLU ) - Min( ( ( RCSe / ( ( Max( RCSe,DS ) * ( MLU * MUC ) ) + MUM ) ) + CS ) ,MLU ) ) - ( Min( DS ,DS ) + ( MLU - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * ( FirstVNF_Mem * ( Const - ARS ) ) ) - Max( FirstVNF_RAM_Server,MRS ) )", "choosing": "( ( Max( Min( DS ,MUC ),( DS - RCSe ) ) / ( ( CS / RMSe ) * ( MUM + MLU ) ) ) + ( ( ( CS - MUM ) / ( MUM * CS ) ) - ( ( MUC - CS ) * ( MLU - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ,( FirstVNF_CPU + Max( RRS,( FirstVNF_RAM - MRS ) ) ) )", "choosing": "( Min( Min( Min( MUR ,MLU ) ,( MUC + RCSe ) ) ,( ( CS * MLU ) * ( MUC / MUM ) ) ) * ( ( Min( MUR ,MLU ) * ( CS - CS ) ) - ( ( CS * MUR ) + ( MUR * RMSe ) ) ) )", "obj1": 0.22037037037037038, "obj2": 0.6830086160575415}, {"determining": "( ( ( ( DDR * BR ) + Min( MDR ,Const ) ) - ( ( ARS - PN ) / Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ) * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) - ( FirstVNF_RAM * RRS ) ) / ( ( FirstVNF_Mem + FirstVNF_RAM ) * Max( CRS,BR ) ) ) )", "choosing": "Min( ( Max( ( MUM * MUM ),( MUR + MUM ) ) - Max( ( RCSe + MLU ),Max( RRSe,RCSe ) ) ) ,Max( ( Max( MUM,MUC ) * ( MUC / MUR ) ),( ( RCSe - RMSe ) * ( RRSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( BR ,CRS ) / ( PN - FirstVNF_RAM ) ),Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),( PN + ( ( FirstVNF_Mem_Server * Const ) * FirstVNF_Mem ) ) ) ) / ( Min( Min( FirstVNF_CPU_Server ,MRS ) ,( BR / FirstVNF_RAM_Server ) ) / ( Min( MRS ,FirstVNF_Mem ) - Max( BR,MDR ) ) ) )", "choosing": "( Max( ( Max( MLU,MUM ) / ( RRSe + MLU ) ),( ( RCSe * RMSe ) / Max( CS,MUC ) ) ) / ( MLU - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * ( FirstVNF_Mem * ( Max( MDR,FirstVNF_Mem_Server ) + Max( DDR,FirstVNF_CPU_Server ) ) ) ) - Max( FirstVNF_RAM_Server,MRS ) )", "choosing": "( ( Max( Min( ( ( RMSe / CS ) * ( CS + DS ) ) ,MUC ),( DS - RCSe ) ) / ( ( CS / RMSe ) * ( MUM + MLU ) ) ) + ( ( ( CS - MUM ) / ( MUM * CS ) ) - ( ( MUC - CS ) * ( MLU - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * ( FirstVNF_Mem * ( Const - ARS ) ) ) - Max( FirstVNF_RAM_Server,MRS ) )", "choosing": "( ( RMSe / CS ) * ( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS + ( MRS - Const ) ) - FirstVNF_CPU_Server )", "choosing": "( ( CS - ( RMSe + Min( MUM ,RRSe ) ) ) * ( MUR / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),( PN + CRS ) ),( Min( BR ,CRS ) / ( PN - FirstVNF_RAM ) ) ) / ( ( FirstVNF_RAM / ( FirstVNF_CPU * ( FirstVNF_CPU_Server / PN ) ) ) / ( Min( MRS ,FirstVNF_Mem ) - Max( BR,MDR ) ) ) )", "choosing": "( Max( ( Max( MLU,MUM ) / ( RRSe + MLU ) ),( ( RCSe * RMSe ) / Max( CS,MUC ) ) ) / Min( Min( RMSe ,DS ) ,Min( Max( MUM,RCSe ) ,Min( CS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),( PN + CRS ) ),( Min( BR ,CRS ) / ( PN - FirstVNF_RAM ) ) ) / ( Min( Min( FirstVNF_CPU_Server ,MRS ) ,( BR / FirstVNF_RAM_Server ) ) / ( Min( MRS ,FirstVNF_Mem ) - Max( BR,MDR ) ) ) )", "choosing": "( ( RMSe * Max( DS,( MUC + RCSe ) ) ) - Min( Min( RMSe ,DS ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) + ( ( PN * AMS ) + RRS ) ) - Min( ( PN / BR ) ,Max( MDR,BR ) ) )", "choosing": "( ( ( DS - MLU ) - ( DS - DS ) ) - ( Min( DS ,DS ) + Max( ( CS / CS ),Max( MLU,( ( RMSe + MUC ) + RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( FirstVNF_RAM * ( ( BR / FirstVNF_RAM ) + ARS ) ) )", "choosing": "( ( Max( Max( ( Max( CS,DS ) - Min( MUC ,MUC ) ),Min( Min( DS ,( MLU + MUM ) ) ,RMSe ) ),( RMSe * MUM ) ) * MLU ) * ( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,CRS ) - Max( ( ( DDR / MDR ) / DDR ),Max( RRS,MRS ) ) )", "choosing": "( ( Min( ( ( ( MLU - ( Min( MUC ,MUC ) + CS ) ) + MUM ) / RMSe ) ,( DS * ( MUC * CS ) ) ) / DS ) - Max( Min( MUM ,CS ),( MUC + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ARS,Min( BR ,BR ) ) ,( FirstVNF_Mem / ( AMS - BR ) ) )", "choosing": "( Min( ( ( MUC + RRSe ) * ( ( Min( MLU ,Min( DS ,MUC ) ) + MLU ) - MLU ) ) ,( MUC - ( DS / ( RCSe / RRSe ) ) ) ) - Max( ( Min( RCSe ,MUM ) * ( CS / MUR ) ),Min( ( CS + RMSe ) ,( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ARS,Min( BR ,BR ) ) ,( FirstVNF_Mem / ( AMS - BR ) ) )", "choosing": "( Min( ( ( MUR + MUC ) * ( RRSe - MUM ) ) ,( MUC - ( DS / ( Max( Max( MUM,MLU ),RRSe ) / RRSe ) ) ) ) * ( ( Min( MUM ,RCSe ) * ( CS / MUR ) ) + Min( ( CS + RMSe ) ,( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ARS,Min( BR ,BR ) ) ,( FirstVNF_Mem / ( AMS - BR ) ) )", "choosing": "( Min( ( ( MUC + RRSe ) * ( ( Min( MLU ,Min( DS ,MUC ) ) + MLU ) - MLU ) ) ,( MUC - ( DS / ( RCSe / RRSe ) ) ) ) - Max( ( Min( RCSe ,MUM ) * ( CS / MUR ) ),Min( ( CS + RMSe ) ,( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( RRS - Const ) ,( Const - FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem / ( AMS - ACS ) ) )", "choosing": "( Min( ( ( MUR + MUC ) * ( RRSe - MUM ) ) ,( MUC - ( DS / ( RCSe / RRSe ) ) ) ) - Max( ( Min( RCSe ,MUM ) * ( CS / MUR ) ),Min( ( CS + RMSe ) ,( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS - Const ) ,( Const - FirstVNF_RAM_Server ) ) ,( RRS + Min( DDR ,FirstVNF_Mem ) ) )", "choosing": "( Min( ( ( MUR + MUC ) * ( MUM - RRSe ) ) ,( MUC - ( DS / ( RCSe / ( Min( DS ,MUM ) * ( ( MUC + DS ) - Min( DS ,MUC ) ) ) ) ) ) ) - Max( ( Min( RCSe ,MUM ) * ( CS / MUR ) ),Min( ( CS + RMSe ) ,( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( RRS - Const ) ,( Const - FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem / ( AMS - ACS ) ) )", "choosing": "( ( Min( DS ,MUM ) * Min( ( RCSe + MUR ) ,Min( DS ,MUC ) ) ) / Max( ( MLU * RCSe ),( RMSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ARS + FirstVNF_RAM ),( Const - ( AMS * DDR ) ) )", "choosing": "( ( ( Min( RRSe ,CS ) - ( CS + RCSe ) ) + Min( Min( DS ,MUC ) ,( MUC - RCSe ) ) ) / ( ( DS / CS ) + ( ( MUR - MUM ) / Min( CS ,RCSe ) ) ) )", "obj1": 0.2851851851851852, "obj2": 0.6258898757747292}, {"determining": "Min( Min( Min( ( ( PN / AMS ) + ( Const / FirstVNF_RAM ) ) ,( ( FirstVNF_Mem_Server * Const ) + ( DDR / BR ) ) ) ,( Const - FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem / ( AMS - ACS ) ) )", "choosing": "( Min( ( ( MUR + MUC ) * Max( ( RRSe - RMSe ),MUR ) ) ,( MUC - ( DS / ( RCSe / ( Max( ( MLU + MUM ),( RCSe + DS ) ) + ( ( RMSe + MUR ) - Min( RMSe ,RMSe ) ) ) ) ) ) ) - Max( ( Min( RCSe ,MUM ) * ( CS / MLU ) ),Min( ( CS + RMSe ) ,( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( RRS - Const ) ,( Const - FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem / ( AMS - ACS ) ) )", "choosing": "( ( Max( ( MLU + MUM ),( RCSe + DS ) ) + ( ( RMSe + MUR ) - Min( RMSe ,RMSe ) ) ) - ( Min( ( CS - MUC ) ,Max( MUR,MUM ) ) - ( ( DS - MUM ) / Min( RMSe ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS - ( Max( RRS,Const ) * Max( PN,PN ) ) )", "choosing": "( ( Min( DS ,MUR ) / Min( RRSe ,RRSe ) ) * MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_RAM ) * Min( Min( ( FirstVNF_CPU_Server / RRS ) ,FirstVNF_Mem ) ,Const ) )", "choosing": "( ( MUC * MUM ) * Min( Max( CS,RMSe ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,Max( ARS,BR ) ) + ( CRS + BR ) )", "choosing": "( ( CS - ( RMSe + Max( ( Min( ( ( RCSe * MUM ) + ( MUM + MUC ) ) ,MUC ) / RCSe ),DS ) ) ) * ( Max( CS,RMSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,FirstVNF_Mem ) - ( ( MDR - FirstVNF_RAM_Server ) / FirstVNF_RAM ) )", "choosing": "Max( Max( Max( MUR,MLU ),DS ),( RCSe / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) * ( RRS / ( RRS / FirstVNF_Mem ) ) ) - ( ARS * BR ) )", "choosing": "( ( ( MUM + DS ) + ( MLU / CS ) ) * ( CS + ( Min( MUM ,CS ) - ( RCSe + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( AMS,FirstVNF_Mem ) * ( Min( DDR ,FirstVNF_CPU ) * ( ( Const + PN ) - ( ARS + ( RRS + Const ) ) ) ) )", "choosing": "( ( Min( MUR ,Min( RMSe ,DS ) ) + Max( CS,RCSe ) ) + ( ( ( ( MUM + RRSe ) / MUR ) / RCSe ) - Max( DS,Max( RRSe,Min( MUM ,RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem + MRS ) * ( Min( ( Max( Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),( PN + CRS ) ),( Min( BR ,CRS ) / ( PN - FirstVNF_RAM ) ) ) / ( Min( Min( FirstVNF_CPU_Server ,MRS ) ,( BR / FirstVNF_RAM_Server ) ) / ( Min( MRS ,FirstVNF_Mem ) - Max( BR,MDR ) ) ) ) ,PN ) / ARS ) ) )", "choosing": "( ( Min( DS ,MUM ) * Min( ( RCSe + MUR ) ,Max( ( Max( MLU,MUM ) / ( RRSe + MLU ) ),( ( RCSe * RMSe ) / Max( CS,MUC ) ) ) ) ) / Max( ( MLU * RCSe ),( RMSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),( PN + CRS ) ),( Min( BR ,CRS ) / ( PN - FirstVNF_RAM ) ) ) / ( Min( Min( FirstVNF_CPU_Server ,MRS ) ,( BR / FirstVNF_RAM_Server ) ) / ( Min( MRS ,FirstVNF_Mem ) - Max( BR,MDR ) ) ) )", "choosing": "( Max( ( Max( MLU,MUM ) / ( RRSe + MLU ) ),( ( RCSe * RMSe ) / Max( CS,MUC ) ) ) / Min( Max( ( MLU + MUC ),Min( DS ,MUC ) ) ,Min( Max( MUM,RCSe ) ,Min( CS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( RRS,ACS ),AMS ) ,( ( DDR * FirstVNF_Mem_Server ) - ( Const + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( DS / RMSe ) * Min( MUC ,MUC ) ) ,( ( ( RRSe - DS ) / ( DS / ( MUM / MUR ) ) ) / ( MUC - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS + AMS ) ,Min( ( DDR * FirstVNF_Mem_Server ) ,( Const + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( DS / RMSe ) * Min( MUC ,MUC ) ) ,( RCSe / ( MUC - ( MUR * ( ( DS * RCSe ) - ( ( MUM / MUM ) * RRSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU / ARS ) + ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ,( FirstVNF_RAM_Server - Max( ( MRS / ARS ),( AMS + FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( MLU + Max( RRSe,RRSe ) ) ,( RMSe * Min( MUR ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM / ACS ) ,( CRS - AMS ) )", "choosing": "Max( ( Max( MLU,CS ) * ( MUC * RRSe ) ),( CS * ( ( RMSe - CS ) / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) * Min( ( FirstVNF_Mem - PN ) ,PN ) )", "choosing": "( ( ( RCSe - RMSe ) * CS ) / ( MUR * RMSe ) )", "obj1": 0.2722222222222222, "obj2": 0.6332903734289472}, {"determining": "Min( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU / FirstVNF_Mem ) ) ,Max( RRS,Const ) )", "choosing": "Max( ( RMSe + Max( ( CS * MLU ),Min( MUM ,CS ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( MUR + MUC ) / Min( RMSe ,RMSe ) ) ) )", "obj1": 0.22777777777777777, "obj2": 0.6704495529661237}, {"determining": "Min( Min( Min( ( AMS + ARS ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) ) ,( Max( ( Max( Min( PN ,ACS ),BR ) * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( MRS * DDR ) ) ) )", "choosing": "( Max( MLU,MUR ) + ( RRSe - ( ( ( MUM / DS ) / MUC ) + RCSe ) ) )", "obj1": 0.21481481481481482, "obj2": 0.7008782588150786}, {"determining": "Min( Min( Min( ( AMS + ARS ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - MUR ) )", "obj1": 0.21481481481481482, "obj2": 0.7008782588150786}, {"determining": "( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( DDR - MDR ) ) - Max( ( FirstVNF_RAM - FirstVNF_Mem ),Max( MRS,FirstVNF_CPU_Server ) ) ) / ( Min( ( Max( FirstVNF_RAM,CRS ) * Const ) ,Max( FirstVNF_CPU_Server,RRS ) ) + ( ( ACS / PN ) - Min( MRS ,Min( Const ,BR ) ) ) ) )", "choosing": "( ( ( ( RRSe * MUM ) - Min( MUR ,DS ) ) / ( ( CS - MUM ) + Max( MUM,MLU ) ) ) + Min( Max( Min( DS ,RRSe ),( MUC + MUM ) ) ,( ( MUM + MUM ) * ( ( RMSe * ( MLU + MUM ) ) / RMSe ) ) ) )", "obj1": 0.22592592592592592, "obj2": 0.671211149277601}, {"determining": "Max( ( FirstVNF_RAM / ( FirstVNF_CPU * ( FirstVNF_CPU_Server / PN ) ) ),( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) )", "choosing": "Max( ( Max( Max( RMSe,DS ),Max( MUM,RCSe ) ) + Max( ( CS * MLU ),Min( MUM ,CS ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( ( MUM / DS ) / MUC ) + RCSe ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8458714033505071}, {"determining": "( FirstVNF_RAM_Server / ( MRS + FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( DS,RCSe ) ,Max( MUR,RMSe ) ) / ( ( ( RRSe - RRSe ) * ( DS * RMSe ) ) - ( ( RCSe - RCSe ) / Max( RCSe,RMSe ) ) ) )", "obj1": 0.25, "obj2": 0.6434143962245604}, {"determining": "( ( ( Min( MRS ,PN ) / ARS ) / ( Const * PN ) ) + ( ( AMS * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "( ( ( ( Min( DS ,MUM ) * Min( ( RCSe + MUR ) ,Min( DS ,MUC ) ) ) / Max( ( MLU * RCSe ),( RMSe / MUR ) ) ) - CS ) * Min( RMSe ,Min( DS ,MUC ) ) )", "obj1": 0.12037037037037036, "obj2": 0.8028798682351265}, {"determining": "( Min( Max( Max( ( RRS + Const ),RRS ),MDR ) ,Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( BR / FirstVNF_CPU_Server ) ) ) * Max( ( ( FirstVNF_Mem_Server / MDR ) * ( DDR - RRS ) ),( Min( BR ,FirstVNF_Mem ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR / ( MLU * RRSe ) ) / Max( ( ( RCSe + MUM ) * ( MUR / MLU ) ),MLU ) )", "obj1": 0.14444444444444443, "obj2": 0.7646152857942299}, {"determining": "( ( FirstVNF_RAM / CRS ) / Max( Max( ( RRS + Const ),RRS ),MDR ) )", "choosing": "( Max( RRSe,RCSe ) - Max( ( ( RCSe + MUM ) * ( MUR / MLU ) ),MLU ) )", "obj1": 0.2833333333333333, "obj2": 0.6266177391485493}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( ARS,PN ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,( MDR * ARS ) ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( ( Min( DS ,Max( MUC,RRSe ) ) * Max( RMSe,DS ) ) * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / DS ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.7138667684944016}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.1685185185185185, "obj2": 0.7461888262778625}, {"determining": "Max( ( ARS + FirstVNF_RAM ),( Const - ( ( FirstVNF_RAM_Server - AMS ) - Min( AMS ,MDR ) ) ) )", "choosing": "( ( RRSe - MUM ) / ( ( ( CS + CS ) / Max( CS,RCSe ) ) + ( ( MUR - MUM ) / Min( CS ,RCSe ) ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7374892150263407}, {"determining": "( Min( DDR ,CRS ) / FirstVNF_Mem_Server )", "choosing": "( ( ( ( RRSe * MUM ) - Min( MUR ,DS ) ) / ( ( CS - MUM ) + Max( MUM,MLU ) ) ) + Min( Max( Min( DS ,RMSe ),( MUC + MUM ) ) ,( ( MUM + MUM ) * ( DS - RMSe ) ) ) )", "obj1": 0.26851851851851855, "obj2": 0.6349880736000653}, {"determining": "Min( Min( ( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem ) ) ,FirstVNF_RAM_Server ) ,Max( Const,RRS ) )", "choosing": "Max( ( ( Max( CS,RRSe ) / ( ( CS + RMSe ) / Min( CS ,MLU ) ) ) + Max( ( ( CS - ( Min( ( DS + RRSe ) ,RMSe ) + Max( DS,DS ) ) ) / ( MUR / MLU ) ),Min( MUM ,CS ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( MUR + MUC ) / Min( RMSe ,RMSe ) ) ) )", "obj1": 0.13148148148148148, "obj2": 0.7736690903842448}, {"determining": "Max( Max( Min( ( AMS + BR ) ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ),( ( BR + BR ) / ( ARS - DDR ) ) )", "choosing": "( ( ( ( RRSe * MUM ) - Min( MUR ,DS ) ) / ( ( CS - MUM ) + Max( MUM,MLU ) ) ) + Min( Max( Min( DS ,CS ),( MUC + MUM ) ) ,( ( MUM + MUM ) * ( DS - RMSe ) ) ) )", "obj1": 0.2611111111111111, "obj2": 0.6384735462964297}, {"determining": "( Min( DDR ,FirstVNF_CPU ) * Max( Max( RRS,Const ),( ( BR / FirstVNF_Mem ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR / ( MLU * Min( DS ,MUR ) ) ) / ( ( MUM * ( RCSe / MUC ) ) / ( MUC * ( ( MLU * MLU ) + ( RRSe * ( ( ( MUC + RMSe ) / Max( CS,RMSe ) ) - RCSe ) ) ) ) ) )", "obj1": 0.11296296296296296, "obj2": 0.8253404395750024}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * ( ( Const + MDR ) + ( CRS / FirstVNF_RAM ) ) )", "choosing": "( ( ( RCSe - RMSe ) * CS ) / ( Min( Max( RRSe,MUM ) ,( MUM + ( Max( ( MLU + MUM ),( RCSe + DS ) ) + ( ( RMSe + MUR ) - Min( RMSe ,RMSe ) ) ) ) ) * RMSe ) )", "obj1": 0.17037037037037037, "obj2": 0.7384032513218372}, {"determining": "Min( Max( FirstVNF_Mem_Server,Max( Const,FirstVNF_Mem ) ) ,Max( ( ( MDR / DDR ) / DDR ),Max( RRS,MRS ) ) )", "choosing": "( ( Min( ( ( ( MLU - ( Min( MUC ,MUC ) + CS ) ) + MUM ) / RMSe ) ,( DS * ( MUC * CS ) ) ) / DS ) - Max( Min( MUM ,CS ),( MUC + MLU ) ) )", "obj1": 0.2351851851851852, "obj2": 0.6625822366000517}, {"determining": "( ( ( Min( MRS ,Max( PN,PN ) ) / ARS ) / ( Const * PN ) ) + ( ( AMS * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "( ( ( ( Min( DS ,MUM ) * Min( ( RCSe + MUR ) ,Min( DS ,RRSe ) ) ) / Max( ( MLU * RCSe ),( RMSe / MUR ) ) ) - CS ) * Min( RMSe ,Min( DS ,MUC ) ) )", "obj1": 0.12037037037037036, "obj2": 0.8028798682351265}, {"determining": "( ( ( Min( MRS ,PN ) / ARS ) / ( Const * PN ) ) + ( ( AMS * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "( ( ( ( Min( DS ,MUM ) * Min( ( RCSe + MUR ) ,Min( DS ,MUC ) ) ) / Max( ( MLU * RCSe ),( RMSe / MUR ) ) ) - CS ) * Min( RMSe ,Min( DS ,MUC ) ) )", "obj1": 0.12037037037037036, "obj2": 0.8028798682351265}, {"determining": "( Max( BR,Max( ( MRS / PN ),PN ) ) + ( CRS - BR ) )", "choosing": "Min( ( RCSe * ( DS - ( ( MUC - MUR ) * Max( DS,CS ) ) ) ) ,( MLU - ( RMSe + MLU ) ) )", "obj1": 0.23333333333333334, "obj2": 0.6652583041732075}, {"determining": "( Min( CRS ,Max( ARS,BR ) ) + ( CRS + BR ) )", "choosing": "Max( ( ( MUC - MUR ) * Max( DS,CS ) ),( Min( CS ,MUM ) / ( CS * MUM ) ) )", "obj1": 0.24259259259259258, "obj2": 0.6530864882815582}, {"determining": "( Max( BR,FirstVNF_Mem ) - ( ( MDR - FirstVNF_RAM_Server ) / FirstVNF_RAM ) )", "choosing": "Max( Max( Max( MUR,MLU ),DS ),( RCSe / RMSe ) )", "obj1": 0.26296296296296295, "obj2": 0.638471684650797}, {"determining": "( Max( BR,FirstVNF_Mem ) - ( ( MDR - FirstVNF_RAM_Server ) / FirstVNF_RAM ) )", "choosing": "Max( Max( Max( MUR,MLU ),DS ),( RCSe / RMSe ) )", "obj1": 0.26296296296296295, "obj2": 0.638471684650797}, {"determining": "( Max( BR,FirstVNF_Mem ) - ( ( MDR - FirstVNF_RAM_Server ) / FirstVNF_RAM ) )", "choosing": "Max( Max( Max( MUR,MLU ),DS ),( RCSe / RMSe ) )", "obj1": 0.26296296296296295, "obj2": 0.638471684650797}, {"determining": "( Max( BR,FirstVNF_Mem ) - ( ( MDR - FirstVNF_RAM_Server ) / FirstVNF_RAM ) )", "choosing": "Max( Max( Max( MUR,MLU ),DS ),( RCSe / RMSe ) )", "obj1": 0.26296296296296295, "obj2": 0.638471684650797}, {"determining": "( Max( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( DDR - MDR ) ),Max( ( FirstVNF_RAM - FirstVNF_Mem ),Max( MRS,FirstVNF_CPU_Server ) ) ) / ( Min( ( CRS * Const ) ,Max( FirstVNF_CPU_Server,RRS ) ) + Min( Min( MRS ,FirstVNF_Mem ) ,( ACS / PN ) ) ) )", "choosing": "( ( ( ( RRSe * MUM ) - Min( MUR ,DS ) ) / ( ( CS - MUM ) + Max( MUM,MLU ) ) ) + Min( Max( Min( DS ,CS ),( MUC + MUM ) ) ,( ( MUM + MUM ) * ( DS - RMSe ) ) ) )", "obj1": 0.22592592592592592, "obj2": 0.671211149277601}, {"determining": "( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ,FirstVNF_CPU_Server ) * ( ( Const + MDR ) + ( CRS / FirstVNF_RAM ) ) )", "choosing": "( ( ( RCSe - RMSe ) * CS ) / ( Min( Max( RRSe,MUM ) ,( MUM + ( Max( ( MLU + MUM ),( ( MUR * RMSe ) + DS ) ) + ( ( RMSe + MUR ) - Min( RMSe ,RMSe ) ) ) ) ) * RMSe ) )", "obj1": 0.23148148148148148, "obj2": 0.6678938423301755}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * ( ( Const + MDR ) + ( CRS / FirstVNF_RAM ) ) )", "choosing": "( ( ( RCSe - RMSe ) * CS ) / ( Min( Max( RRSe,MUM ) ,( MUM + ( Max( ( MLU + MUM ),( RCSe + DS ) ) + ( ( RMSe + MUR ) - Min( RMSe ,RMSe ) ) ) ) ) * RMSe ) )", "obj1": 0.23148148148148148, "obj2": 0.6678938423301755}, {"determining": "Max( ( Const - ( ( FirstVNF_RAM_Server - AMS ) - ( DDR - Min( Const ,Max( ARS,FirstVNF_Mem ) ) ) ) ),( ARS + FirstVNF_RAM ) )", "choosing": "( ( RRSe - MUM ) / ( ( ( MUR - MUM ) / Min( CS ,RCSe ) ) + ( ( ( MLU + ( Min( MUC ,CS ) + ( ( CS * DS ) * RMSe ) ) ) - RRSe ) / Max( CS,RCSe ) ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7374892150263407}, {"determining": "Max( Max( Min( ( AMS + BR ) ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ),( ( BR + BR ) / ( Min( Min( Min( ( AMS + ARS ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) - DDR ) ) )", "choosing": "( ( ( ( RRSe * MUM ) - Min( MUR ,DS ) ) / ( ( CS - MUM ) + Max( MUM,MLU ) ) ) + Min( Max( Min( DS ,CS ),( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) ) ,( ( MUM + MUM ) * ( DS - RMSe ) ) ) )", "obj1": 0.2611111111111111, "obj2": 0.6384735462964297}, {"determining": "( Min( PN ,FirstVNF_RAM_Server ) * Min( Min( Min( ( AMS + ARS ) ,Max( BR,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( Max( MDR,PN ),FirstVNF_RAM_Server ) ) - ( DDR * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * ( RRSe + CS ) ) ,( MUR * Min( DS ,Max( MUR,( MUM / RCSe ) ) ) ) ),Min( ( CS / CS ) ,( DS - RRSe ) ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.7138667684944016}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( ( ( RRSe * MUM ) - Min( MUR ,DS ) ) / ( ( CS - MUM ) + Max( MUM,MLU ) ) ) + Min( Max( Min( DS ,CS ),( MUC + MUM ) ) ,( ( MUM + MUM ) * ( DS - RMSe ) ) ) )", "obj1": 0.2611111111111111, "obj2": 0.6384735462964297}, {"determining": "Max( Max( Min( ( AMS + BR ) ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ),( ( BR + BR ) / ( ARS - DDR ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.7138667684944016}, {"determining": "Min( Min( Min( ( AMS + ARS ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) ) ,( Max( ( Max( Min( PN ,ACS ),BR ) * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( MRS * DDR ) ) ) )", "choosing": "( ( ( ( ( ( MLU - ( Min( RMSe ,MUC ) + CS ) ) + MUM ) / RMSe ) * ( DS * ( CS * MUC ) ) ) / DS ) - Max( Min( MUM ,CS ),( MUC + MLU ) ) )", "obj1": 0.2351851851851852, "obj2": 0.6625822366000517}, {"determining": "( Max( Min( ( RRS - FirstVNF_CPU ) ,DDR ),Max( ( FirstVNF_RAM - FirstVNF_Mem ),( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) / ( ARS / CRS ) )", "choosing": "( ( ( ( RRSe * MUM ) - Max( MUC,MUC ) ) / ( ( CS - MUM ) + Max( MUM,MLU ) ) ) + Min( ( RMSe - Min( ( RRSe - CS ) ,( ( ( RRSe - Min( RCSe ,RCSe ) ) / RCSe ) + DS ) ) ) ,( ( DS - RMSe ) * Max( MUM,MUM ) ) ) )", "obj1": 0.22592592592592592, "obj2": 0.671211149277601}, {"determining": "( ( ( Min( MRS ,PN ) / ARS ) / ( Const * PN ) ) + ( ( AMS * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "( ( ( ( Min( DS ,MUM ) * Min( ( RCSe + MUR ) ,Min( DS ,MUC ) ) ) / Max( ( MLU * RCSe ),( RMSe / MUR ) ) ) - CS ) * Min( RMSe ,Min( DS ,MUC ) ) )", "obj1": 0.12037037037037036, "obj2": 0.8028798682351265}, {"determining": "( Min( Max( Max( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) + ( CRS + RRS ) ) - Min( ( PN / BR ) ,Max( MDR,BR ) ) ),RRS ),MDR ) ,Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( BR / FirstVNF_CPU_Server ) ) ) * Max( ( ( FirstVNF_Mem_Server / MDR ) * ( DDR - RRS ) ),( Min( BR ,FirstVNF_Mem ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR / ( MLU * RRSe ) ) / Max( ( ( RCSe + MUM ) * ( MUR / MLU ) ),MLU ) )", "obj1": 0.2462962962962963, "obj2": 0.6507822012688852}, {"determining": "( Min( FirstVNF_CPU ,( Max( BR,FirstVNF_Mem ) - ( ( MDR - FirstVNF_RAM_Server ) / FirstVNF_RAM ) ) ) * Min( ( FirstVNF_Mem - PN ) ,PN ) )", "choosing": "( ( ( Max( Max( MUR,MLU ),DS ) - RMSe ) * CS ) / ( MUR * RMSe ) )", "obj1": 0.2796296296296296, "obj2": 0.6302657950189708}, {"determining": "( Max( BR,FirstVNF_Mem ) - ( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) * Min( ( FirstVNF_Mem - PN ) ,PN ) ) / FirstVNF_RAM ) )", "choosing": "Max( Max( Max( ( RCSe - RMSe ),MLU ),DS ),( RCSe / RMSe ) )", "obj1": 0.29444444444444445, "obj2": 0.6094966989896407}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * Min( PN ,( FirstVNF_Mem - PN ) ) )", "choosing": "( ( ( RCSe - RMSe ) * CS ) / ( MUR * Min( Max( Max( MUC,Min( RRSe ,MUM ) ),RMSe ) ,( MLU + Max( MLU,RRSe ) ) ) ) )", "obj1": 0.2722222222222222, "obj2": 0.6332903734289472}, {"determining": "( Max( BR,FirstVNF_Mem ) - ( ( MDR - FirstVNF_RAM_Server ) / FirstVNF_RAM ) )", "choosing": "Max( Max( Max( MUR,MLU ),DS ),( RCSe / RMSe ) )", "obj1": 0.26296296296296295, "obj2": 0.638471684650797}, {"determining": "Max( ( ARS + FirstVNF_RAM ),( Const - ( ( FirstVNF_RAM_Server - AMS ) - Min( AMS ,MDR ) ) ) )", "choosing": "( ( RRSe - MUM ) / ( ( ( CS + CS ) / Max( CS,RCSe ) ) + ( ( MUR - MUM ) / Min( CS ,RCSe ) ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7374892150263407}, {"determining": "( Min( ( Max( MDR,DDR ) * ( RRS * FirstVNF_RAM_Server ) ) ,Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( BR / FirstVNF_CPU_Server ) ) ) * Max( Max( RRS,Const ),( Min( BR ,FirstVNF_Mem ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR / ( MLU * Min( DS ,MUR ) ) ) / ( MUC * DS ) )", "obj1": 0.11296296296296296, "obj2": 0.8253404395750024}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( ( ( ( Const * CRS ) / ( Const * ( Min( BR ,( ARS + RRS ) ) + Min( FirstVNF_Mem ,DDR ) ) ) ) + ( ( BR * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( Min( DS ,MUC ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.2388888888888889, "obj2": 0.6582173488375851}, {"determining": "( ( ( Const * CRS ) / ( Const * ( Min( BR ,( ARS + RRS ) ) + Min( FirstVNF_Mem ,DDR ) ) ) ) + ( ( BR * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.7138667684944016}, {"determining": "Max( ( FirstVNF_RAM / ( FirstVNF_CPU * ( FirstVNF_CPU_Server / PN ) ) ),( Max( Max( ( FirstVNF_RAM / ( FirstVNF_CPU * ( FirstVNF_CPU_Server / PN ) ) ),( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) ),ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) )", "choosing": "Max( ( MUM / DS ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( ( MUM / DS ) / MUC ) + RCSe ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8458714033505071}, {"determining": "Max( ( FirstVNF_RAM / ( FirstVNF_CPU * ( FirstVNF_CPU_Server / PN ) ) ),( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) )", "choosing": "Max( ( Max( Max( RMSe,DS ),Max( MUM,RCSe ) ) + Max( ( CS * MLU ),Min( MUM ,CS ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( ( MUM / DS ) / MUC ) + RCSe ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8458714033505071}, {"determining": "Max( ( FirstVNF_RAM / ( FirstVNF_CPU * ( FirstVNF_CPU_Server / PN ) ) ),( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) )", "choosing": "Max( ( Max( Max( RMSe,DS ),Max( MUM,RCSe ) ) + Max( ( CS * MLU ),Min( MUM ,CS ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( ( MUM / DS ) / MUC ) + RCSe ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8458714033505071}, {"determining": "Min( Max( ( FirstVNF_RAM_Server - BR ),( ACS * ARS ) ) ,( ( FirstVNF_RAM_Server - BR ) * ( FirstVNF_Mem / Const ) ) )", "choosing": "Min( ( ( DS / RMSe ) * Min( CS ,( RCSe / ( MUC - RMSe ) ) ) ) ,( RCSe / ( MUC - RMSe ) ) )", "obj1": 0.28888888888888886, "obj2": 0.6229246334910444}, {"determining": "( Max( BR,FirstVNF_Mem ) - ( ( MDR - FirstVNF_RAM_Server ) / FirstVNF_RAM ) )", "choosing": "Max( Max( Max( MUR,MLU ),DS ),( RCSe / RMSe ) )", "obj1": 0.26296296296296295, "obj2": 0.638471684650797}, {"determining": "( Max( FirstVNF_Mem_Server,Max( Const,FirstVNF_Mem ) ) - RRS )", "choosing": "( ( ( ( ( ( MLU - ( Min( CS ,MUC ) + CS ) ) + MUM ) / RMSe ) * ( DS * ( CS * MUC ) ) ) / DS ) - Max( Min( MUM ,CS ),( MUC + MLU ) ) )", "obj1": 0.21296296296296297, "obj2": 0.70140283578845}, {"determining": "( Max( BR,FirstVNF_Mem ) - ( ( MDR - FirstVNF_RAM_Server ) / FirstVNF_RAM ) )", "choosing": "Max( Max( Max( MUR,MLU ),DS ),( RCSe / RMSe ) )", "obj1": 0.26296296296296295, "obj2": 0.638471684650797}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS * ARS ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) ) ,( Max( ( BR * Max( AMS,FirstVNF_CPU_Server ) ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( MUC ,MUM ),( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.1685185185185185, "obj2": 0.7461888262778625}, {"determining": "Min( Min( DDR ,( RRS / FirstVNF_Mem ) ) ,Max( DDR,( FirstVNF_CPU - Max( PN,Min( MDR ,Const ) ) ) ) )", "choosing": "Max( ( RMSe + Max( ( ( CS - ( RMSe + ( ( DS + RRSe ) + MLU ) ) ) * ( MUR - MLU ) ),Min( MUM ,CS ) ) ),( ( ( RMSe / RCSe ) * ( RCSe / MUC ) ) * ( ( MUR + MUC ) / Min( ( RCSe / ( MUC - RMSe ) ) ,RMSe ) ) ) )", "obj1": 0.13703703703703704, "obj2": 0.7703023403732335}, {"determining": "Max( ( ARS + FirstVNF_RAM ),( Const - ( ( FirstVNF_RAM_Server - AMS ) - Min( AMS ,MDR ) ) ) )", "choosing": "( ( RRSe - MUM ) / ( ( ( CS + CS ) / Max( CS,RCSe ) ) + ( ( MUR - MUM ) / Min( CS ,RCSe ) ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7374892150263407}], "5": [{"determining": "( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) - ( Min( Min( Min( ( CRS / CRS ) ,RRS ) ,FirstVNF_RAM_Server ) ,( PN / ( ( CRS / MRS ) * FirstVNF_Mem ) ) ) * AMS ) )", "choosing": "Min( Max( MUM,RRSe ) ,Min( ( MUM + ( MUR - Min( ( ( ( DS / RMSe ) + MUR ) + RMSe ) ,MUC ) ) ) ,Max( RCSe,( MUC - MUR ) ) ) )", "obj1": 0.662962962962963, "obj2": 0.32001196441563856}, {"determining": "( ( ( Const * CRS ) / ( Const * ( Min( BR ,( ARS + RRS ) ) + Min( FirstVNF_Mem ,DDR ) ) ) ) + ( ( BR * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "( Min( MUR ,MUR ) * Min( MUC ,Min( DS ,MUC ) ) )", "obj1": 0.12962962962962962, "obj2": 0.7962144569590702}, {"determining": "Min( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU / FirstVNF_Mem ) ) ,Max( RRS,Const ) )", "choosing": "Max( ( RMSe + Max( ( CS * MLU ),Min( MUM ,CS ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( MUR + MUC ) / Min( RMSe ,RMSe ) ) ) )", "obj1": 0.22777777777777777, "obj2": 0.6704495529661237}, {"determining": "( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( DDR - MDR ) ) - Max( ( FirstVNF_RAM - FirstVNF_Mem ),Max( MRS,FirstVNF_CPU_Server ) ) ) / ( Min( ( Max( FirstVNF_RAM,CRS ) * Const ) ,Max( FirstVNF_CPU_Server,RRS ) ) + ( ( ACS / PN ) - Min( MRS ,Min( Const ,BR ) ) ) ) )", "choosing": "( ( ( ( RRSe * MUM ) - Min( MUR ,DS ) ) / ( ( CS - MUM ) + Max( MUM,MLU ) ) ) + Min( Max( Min( DS ,RRSe ),( MUC + MUM ) ) ,( ( MUM + MUM ) * ( ( RMSe * ( MLU + MUM ) ) / RMSe ) ) ) )", "obj1": 0.22592592592592592, "obj2": 0.671211149277601}, {"determining": "Max( ( FirstVNF_RAM / ( FirstVNF_CPU * ( FirstVNF_CPU_Server / PN ) ) ),( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) )", "choosing": "Max( ( Max( Max( RMSe,DS ),Max( MUM,RCSe ) ) + Max( ( CS * MLU ),Min( MUM ,CS ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( ( MUM / DS ) / MUC ) + RCSe ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8458714033505071}, {"determining": "( FirstVNF_RAM_Server / ( MRS + FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( DS,RCSe ) ,Max( MUR,RMSe ) ) / ( ( ( RRSe - RRSe ) * ( DS * RMSe ) ) - ( ( RCSe - RCSe ) / Max( RCSe,RMSe ) ) ) )", "obj1": 0.25, "obj2": 0.6434143962245604}, {"determining": "( ( ( Min( MRS ,PN ) / ARS ) / ( Const * PN ) ) + ( ( AMS * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "( ( ( ( Min( DS ,MUM ) * Min( ( RCSe + MUR ) ,Min( DS ,MUC ) ) ) / Max( ( MLU * RCSe ),( RMSe / MUR ) ) ) - CS ) * Min( RMSe ,Min( DS ,MUC ) ) )", "obj1": 0.12037037037037036, "obj2": 0.8028798682351265}, {"determining": "( Min( Max( Max( ( RRS + Const ),RRS ),MDR ) ,Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( BR / FirstVNF_CPU_Server ) ) ) * Max( ( ( FirstVNF_Mem_Server / MDR ) * ( DDR - RRS ) ),( Min( BR ,FirstVNF_Mem ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR / ( MLU * RRSe ) ) / Max( ( ( RCSe + MUM ) * ( MUR / MLU ) ),MLU ) )", "obj1": 0.14444444444444443, "obj2": 0.7646152857942299}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( ARS,PN ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,( MDR * ARS ) ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( ( Min( DS ,Max( MUC,RRSe ) ) * Max( RMSe,DS ) ) * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / DS ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.7138667684944016}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.1685185185185185, "obj2": 0.7461888262778625}, {"determining": "Min( Min( ( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem ) ) ,FirstVNF_RAM_Server ) ,Max( Const,RRS ) )", "choosing": "Max( ( ( Max( CS,RRSe ) / ( ( CS + RMSe ) / Min( CS ,MLU ) ) ) + Max( ( ( CS - ( Min( ( DS + RRSe ) ,RMSe ) + Max( DS,DS ) ) ) / ( MUR / MLU ) ),Min( MUM ,CS ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( MUR + MUC ) / Min( RMSe ,RMSe ) ) ) )", "obj1": 0.13148148148148148, "obj2": 0.7736690903842448}, {"determining": "Max( Max( Min( ( AMS + BR ) ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ),( ( BR + BR ) / ( ARS - DDR ) ) )", "choosing": "( ( ( ( RRSe * MUM ) - Min( MUR ,DS ) ) / ( ( CS - MUM ) + Max( MUM,MLU ) ) ) + Min( Max( Min( DS ,CS ),( MUC + MUM ) ) ,( ( MUM + MUM ) * ( DS - RMSe ) ) ) )", "obj1": 0.2611111111111111, "obj2": 0.6384735462964297}, {"determining": "( Min( DDR ,FirstVNF_CPU ) * Max( Max( RRS,Const ),( ( BR / FirstVNF_Mem ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR / ( MLU * Min( DS ,MUR ) ) ) / ( ( MUM * ( RCSe / MUC ) ) / ( MUC * ( ( MLU * MLU ) + ( RRSe * ( ( ( MUC + RMSe ) / Max( CS,RMSe ) ) - RCSe ) ) ) ) ) )", "obj1": 0.11296296296296296, "obj2": 0.8253404395750024}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * ( ( Const + MDR ) + ( CRS / FirstVNF_RAM ) ) )", "choosing": "( ( ( RCSe - RMSe ) * CS ) / ( Min( Max( RRSe,MUM ) ,( MUM + ( Max( ( MLU + MUM ),( RCSe + DS ) ) + ( ( RMSe + MUR ) - Min( RMSe ,RMSe ) ) ) ) ) * RMSe ) )", "obj1": 0.17037037037037037, "obj2": 0.7384032513218372}, {"determining": "( ( ( Min( MRS ,Max( PN,PN ) ) / ARS ) / ( Const * PN ) ) + ( ( AMS * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "( ( ( ( Min( DS ,MUM ) * Min( ( RCSe + MUR ) ,Min( DS ,RRSe ) ) ) / Max( ( MLU * RCSe ),( RMSe / MUR ) ) ) - CS ) * Min( RMSe ,Min( DS ,MUC ) ) )", "obj1": 0.12037037037037036, "obj2": 0.8028798682351265}, {"determining": "( ( ( Min( MRS ,PN ) / ARS ) / ( Const * PN ) ) + ( ( AMS * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "( ( ( ( Min( DS ,MUM ) * Min( ( RCSe + MUR ) ,Min( DS ,MUC ) ) ) / Max( ( MLU * RCSe ),( RMSe / MUR ) ) ) - CS ) * Min( RMSe ,Min( DS ,MUC ) ) )", "obj1": 0.12037037037037036, "obj2": 0.8028798682351265}, {"determining": "( Min( CRS ,Max( ARS,BR ) ) + ( CRS + BR ) )", "choosing": "Max( ( ( MUC - MUR ) * Max( DS,CS ) ),( Min( CS ,MUM ) / ( CS * MUM ) ) )", "obj1": 0.24259259259259258, "obj2": 0.6530864882815582}, {"determining": "( Max( BR,FirstVNF_Mem ) - ( ( MDR - FirstVNF_RAM_Server ) / FirstVNF_RAM ) )", "choosing": "Max( Max( Max( MUR,MLU ),DS ),( RCSe / RMSe ) )", "obj1": 0.26296296296296295, "obj2": 0.638471684650797}, {"determining": "( Max( BR,FirstVNF_Mem ) - ( ( MDR - FirstVNF_RAM_Server ) / FirstVNF_RAM ) )", "choosing": "Max( Max( Max( MUR,MLU ),DS ),( RCSe / RMSe ) )", "obj1": 0.26296296296296295, "obj2": 0.638471684650797}, {"determining": "( Max( BR,FirstVNF_Mem ) - ( ( MDR - FirstVNF_RAM_Server ) / FirstVNF_RAM ) )", "choosing": "Max( Max( Max( MUR,MLU ),DS ),( RCSe / RMSe ) )", "obj1": 0.26296296296296295, "obj2": 0.638471684650797}, {"determining": "( Max( BR,FirstVNF_Mem ) - ( ( MDR - FirstVNF_RAM_Server ) / FirstVNF_RAM ) )", "choosing": "Max( Max( Max( MUR,MLU ),DS ),( RCSe / RMSe ) )", "obj1": 0.26296296296296295, "obj2": 0.638471684650797}, {"determining": "( Max( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( DDR - MDR ) ),Max( ( FirstVNF_RAM - FirstVNF_Mem ),Max( MRS,FirstVNF_CPU_Server ) ) ) / ( Min( ( CRS * Const ) ,Max( FirstVNF_CPU_Server,RRS ) ) + Min( Min( MRS ,FirstVNF_Mem ) ,( ACS / PN ) ) ) )", "choosing": "( ( ( ( RRSe * MUM ) - Min( MUR ,DS ) ) / ( ( CS - MUM ) + Max( MUM,MLU ) ) ) + Min( Max( Min( DS ,CS ),( MUC + MUM ) ) ,( ( MUM + MUM ) * ( DS - RMSe ) ) ) )", "obj1": 0.22592592592592592, "obj2": 0.671211149277601}, {"determining": "( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ,FirstVNF_CPU_Server ) * ( ( Const + MDR ) + ( CRS / FirstVNF_RAM ) ) )", "choosing": "( ( ( RCSe - RMSe ) * CS ) / ( Min( Max( RRSe,MUM ) ,( MUM + ( Max( ( MLU + MUM ),( ( MUR * RMSe ) + DS ) ) + ( ( RMSe + MUR ) - Min( RMSe ,RMSe ) ) ) ) ) * RMSe ) )", "obj1": 0.23148148148148148, "obj2": 0.6678938423301755}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * ( ( Const + MDR ) + ( CRS / FirstVNF_RAM ) ) )", "choosing": "( ( ( RCSe - RMSe ) * CS ) / ( Min( Max( RRSe,MUM ) ,( MUM + ( Max( ( MLU + MUM ),( RCSe + DS ) ) + ( ( RMSe + MUR ) - Min( RMSe ,RMSe ) ) ) ) ) * RMSe ) )", "obj1": 0.23148148148148148, "obj2": 0.6678938423301755}, {"determining": "Max( Max( Min( ( AMS + BR ) ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ),( ( BR + BR ) / ( Min( Min( Min( ( AMS + ARS ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) - DDR ) ) )", "choosing": "( ( ( ( RRSe * MUM ) - Min( MUR ,DS ) ) / ( ( CS - MUM ) + Max( MUM,MLU ) ) ) + Min( Max( Min( DS ,CS ),( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) ) ,( ( MUM + MUM ) * ( DS - RMSe ) ) ) )", "obj1": 0.2611111111111111, "obj2": 0.6384735462964297}, {"determining": "( Min( PN ,FirstVNF_RAM_Server ) * Min( Min( Min( ( AMS + ARS ) ,Max( BR,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( Max( MDR,PN ),FirstVNF_RAM_Server ) ) - ( DDR * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * ( RRSe + CS ) ) ,( MUR * Min( DS ,Max( MUR,( MUM / RCSe ) ) ) ) ),Min( ( CS / CS ) ,( DS - RRSe ) ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.7138667684944016}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( ( ( RRSe * MUM ) - Min( MUR ,DS ) ) / ( ( CS - MUM ) + Max( MUM,MLU ) ) ) + Min( Max( Min( DS ,CS ),( MUC + MUM ) ) ,( ( MUM + MUM ) * ( DS - RMSe ) ) ) )", "obj1": 0.2611111111111111, "obj2": 0.6384735462964297}, {"determining": "Max( Max( Min( ( AMS + BR ) ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ),( ( BR + BR ) / ( ARS - DDR ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.7138667684944016}, {"determining": "( Max( Min( ( RRS - FirstVNF_CPU ) ,DDR ),Max( ( FirstVNF_RAM - FirstVNF_Mem ),( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) / ( ARS / CRS ) )", "choosing": "( ( ( ( RRSe * MUM ) - Max( MUC,MUC ) ) / ( ( CS - MUM ) + Max( MUM,MLU ) ) ) + Min( ( RMSe - Min( ( RRSe - CS ) ,( ( ( RRSe - Min( RCSe ,RCSe ) ) / RCSe ) + DS ) ) ) ,( ( DS - RMSe ) * Max( MUM,MUM ) ) ) )", "obj1": 0.22592592592592592, "obj2": 0.671211149277601}, {"determining": "( ( ( Min( MRS ,PN ) / ARS ) / ( Const * PN ) ) + ( ( AMS * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "( ( ( ( Min( DS ,MUM ) * Min( ( RCSe + MUR ) ,Min( DS ,MUC ) ) ) / Max( ( MLU * RCSe ),( RMSe / MUR ) ) ) - CS ) * Min( RMSe ,Min( DS ,MUC ) ) )", "obj1": 0.12037037037037036, "obj2": 0.8028798682351265}, {"determining": "( Min( Max( Max( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) + ( CRS + RRS ) ) - Min( ( PN / BR ) ,Max( MDR,BR ) ) ),RRS ),MDR ) ,Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( BR / FirstVNF_CPU_Server ) ) ) * Max( ( ( FirstVNF_Mem_Server / MDR ) * ( DDR - RRS ) ),( Min( BR ,FirstVNF_Mem ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR / ( MLU * RRSe ) ) / Max( ( ( RCSe + MUM ) * ( MUR / MLU ) ),MLU ) )", "obj1": 0.2462962962962963, "obj2": 0.6507822012688852}, {"determining": "( Max( BR,FirstVNF_Mem ) - ( ( MDR - FirstVNF_RAM_Server ) / FirstVNF_RAM ) )", "choosing": "Max( Max( Max( MUR,MLU ),DS ),( RCSe / RMSe ) )", "obj1": 0.26296296296296295, "obj2": 0.638471684650797}, {"determining": "( Min( ( Max( MDR,DDR ) * ( RRS * FirstVNF_RAM_Server ) ) ,Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( BR / FirstVNF_CPU_Server ) ) ) * Max( Max( RRS,Const ),( Min( BR ,FirstVNF_Mem ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR / ( MLU * Min( DS ,MUR ) ) ) / ( MUC * DS ) )", "obj1": 0.11296296296296296, "obj2": 0.8253404395750024}, {"determining": "( ( ( Const * CRS ) / ( Const * ( Min( BR ,( ARS + RRS ) ) + Min( FirstVNF_Mem ,DDR ) ) ) ) + ( ( BR * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.7138667684944016}, {"determining": "Max( ( FirstVNF_RAM / ( FirstVNF_CPU * ( FirstVNF_CPU_Server / PN ) ) ),( Max( Max( ( FirstVNF_RAM / ( FirstVNF_CPU * ( FirstVNF_CPU_Server / PN ) ) ),( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) ),ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) )", "choosing": "Max( ( MUM / DS ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( ( MUM / DS ) / MUC ) + RCSe ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8458714033505071}, {"determining": "Max( ( FirstVNF_RAM / ( FirstVNF_CPU * ( FirstVNF_CPU_Server / PN ) ) ),( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) )", "choosing": "Max( ( Max( Max( RMSe,DS ),Max( MUM,RCSe ) ) + Max( ( CS * MLU ),Min( MUM ,CS ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( ( MUM / DS ) / MUC ) + RCSe ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8458714033505071}, {"determining": "Max( ( FirstVNF_RAM / ( FirstVNF_CPU * ( FirstVNF_CPU_Server / PN ) ) ),( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) )", "choosing": "Max( ( Max( Max( RMSe,DS ),Max( MUM,RCSe ) ) + Max( ( CS * MLU ),Min( MUM ,CS ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( ( MUM / DS ) / MUC ) + RCSe ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8458714033505071}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS * ARS ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) ) ,( Max( ( BR * Max( AMS,FirstVNF_CPU_Server ) ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( MUC ,MUM ),( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.1685185185185185, "obj2": 0.7461888262778625}, {"determining": "Min( Min( DDR ,( RRS / FirstVNF_Mem ) ) ,Max( DDR,( FirstVNF_CPU - Max( PN,Min( MDR ,Const ) ) ) ) )", "choosing": "Max( ( RMSe + Max( ( ( CS - ( RMSe + ( ( DS + RRSe ) + MLU ) ) ) * ( MUR - MLU ) ),Min( MUM ,CS ) ) ),( ( ( RMSe / RCSe ) * ( RCSe / MUC ) ) * ( ( MUR + MUC ) / Min( ( RCSe / ( MUC - RMSe ) ) ,RMSe ) ) ) )", "obj1": 0.13703703703703704, "obj2": 0.7703023403732335}, {"determining": "( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ,FirstVNF_CPU_Server ) * ( ( Const + MDR ) + ( CRS / FirstVNF_RAM ) ) )", "choosing": "( ( ( RCSe - RMSe ) * CS ) / ( Min( Max( RRSe,MUM ) ,( MUM + ( Max( ( MLU + MUM ),( ( MUR * RMSe ) + DS ) ) + ( ( RMSe + MUR ) - Min( RMSe ,RMSe ) ) ) ) ) * RMSe ) )", "obj1": 0.23148148148148148, "obj2": 0.6678938423301755}, {"determining": "( Min( CRS ,Max( ARS,BR ) ) + ( CRS + BR ) )", "choosing": "( ( ( ( Min( DS ,MUM ) * Min( ( RCSe + MUR ) ,Min( DS ,MUC ) ) ) / Max( ( MLU * RCSe ),( RMSe / MUR ) ) ) - CS ) * Min( RMSe ,Min( DS ,MUC ) ) )", "obj1": 0.12037037037037036, "obj2": 0.8028798682351265}, {"determining": "( Min( CRS ,Max( ARS,( FirstVNF_CPU / MRS ) ) ) + Min( Max( ( RRS - BR ),( ACS * ARS ) ) ,( ( FirstVNF_RAM_Server - BR ) * ( FirstVNF_Mem / Const ) ) ) )", "choosing": "Max( ( Min( CS ,MUM ) / ( CS * MUM ) ),( ( MUC - Min( ( ( DS / RMSe ) * ( MLU + MLU ) ) ,( RCSe / ( MUC - MUC ) ) ) ) * Max( DS,CS ) ) )", "obj1": 0.2388888888888889, "obj2": 0.6552471684249174}, {"determining": "( Min( CRS ,Max( ARS,BR ) ) + ( CRS + BR ) )", "choosing": "Max( ( ( MUC - MUR ) * Max( DS,CS ) ),( Min( CS ,MUM ) / ( CS * MUM ) ) )", "obj1": 0.24259259259259258, "obj2": 0.6530864882815582}, {"determining": "( ( ( MRS * CRS ) / ( Const * ( Min( BR ,( ARS + RRS ) ) + Min( FirstVNF_Mem ,DDR ) ) ) ) + Min( ( CRS * ARS ) ,ARS ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( ( DS + MUR ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.18888888888888888, "obj2": 0.7135587322088995}, {"determining": "( ( ( BR * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) + Max( FirstVNF_RAM,CRS ) )", "choosing": "( ( Min( RMSe ,Min( Max( RMSe,CS ) ,MUC ) ) - MLU ) + ( MLU - Max( Min( ( CS / MLU ) ,( DS / RRSe ) ),RRSe ) ) )", "obj1": 0.20925925925925926, "obj2": 0.6843337311326501}, {"determining": "( ( ( Const * CRS ) / ( Const * ( Min( BR ,( ARS + RRS ) ) + Min( FirstVNF_Mem ,DDR ) ) ) ) + ( ( BR * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "( Min( ( ( MUR + MUC ) * ( RRSe - MUM ) ) ,( MUC - ( DS / ( Max( Max( MUM,MLU ),RRSe ) / RRSe ) ) ) ) * ( ( Min( MUM ,RCSe ) * ( CS / MUR ) ) + Min( ( CS + RMSe ) ,( RCSe / CS ) ) ) )", "obj1": 0.1425925925925926, "obj2": 0.7679828345512899}, {"determining": "( ( ( ( Const + FirstVNF_CPU ) / ARS ) / ( Const * PN ) ) + ( ( AMS * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "( ( ( ( Min( DS ,RCSe ) * Min( ( RCSe + MUR ) ,Min( DS ,MUC ) ) ) / Max( ( MLU * RCSe ),( RMSe / MUR ) ) ) - CS ) * Min( RMSe ,Min( DS ,MUC ) ) )", "obj1": 0.12037037037037036, "obj2": 0.8028798682351265}, {"determining": "( ( ( Min( MRS ,PN ) / ARS ) / ( Const * PN ) ) + ( ( AMS * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "( ( ( ( Min( DS ,MUM ) * Min( ( RCSe + MUR ) ,Min( DS ,MUC ) ) ) / Max( ( MLU * RCSe ),( RMSe / MUR ) ) ) - CS ) * Min( RMSe ,Min( DS ,MUC ) ) )", "obj1": 0.12037037037037036, "obj2": 0.8028798682351265}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( ( ( RRSe * MUM ) - Min( MUR ,DS ) ) / ( ( CS - MUM ) + Max( MUM,MLU ) ) ) + Min( Max( Min( DS ,CS ),( MUC + MUM ) ) ,( ( MUM + MUM ) * ( DS - RMSe ) ) ) )", "obj1": 0.2611111111111111, "obj2": 0.6384735462964297}, {"determining": "( Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server * BR ) ) * ( DDR - AMS ) )", "choosing": "( ( RRSe - MLU ) + ( MLU / Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),( Min( CS ,RCSe ) * ( DS / ( Min( ( MUM - RMSe ) ,RRSe ) / MUC ) ) ) ) ) )", "obj1": 0.1685185185185185, "obj2": 0.7461888262778625}, {"determining": "( ( Min( FirstVNF_RAM ,ARS ) / ( Const * PN ) ) + ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) / ( RRS / FirstVNF_Mem ) ) )", "choosing": "( ( ( ( Min( MUM ,DS ) * Min( ( RCSe + MUR ) ,Min( DS ,RRSe ) ) ) * Max( ( MLU * RCSe ),( RMSe / MUR ) ) ) - CS ) * Min( RMSe ,Min( DS ,Max( RMSe,MUM ) ) ) )", "obj1": 0.12037037037037036, "obj2": 0.8028798682351265}, {"determining": "( ( ( Min( MRS ,Max( PN,PN ) ) / ARS ) / ( Const * PN ) ) + ( ( AMS * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "( ( ( ( Min( DS ,MUM ) * Min( ( RCSe + MUR ) ,Min( DS ,RRSe ) ) ) / Max( ( MLU * RCSe ),( RMSe / MUR ) ) ) - CS ) * Min( RMSe ,Min( DS ,MUC ) ) )", "obj1": 0.12037037037037036, "obj2": 0.8028798682351265}, {"determining": "( Min( Max( Max( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) + ( CRS + RRS ) ) - Min( ( PN / BR ) ,Max( MDR,BR ) ) ),RRS ),MDR ) ,Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( BR / FirstVNF_CPU_Server ) ) ) * Max( ( ( FirstVNF_Mem_Server / MDR ) * ( DDR - RRS ) ),( Min( BR ,FirstVNF_Mem ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR / ( MLU * RRSe ) ) / Max( ( ( RCSe + MUM ) * ( MUR / MLU ) ),MLU ) )", "obj1": 0.2462962962962963, "obj2": 0.6507822012688852}, {"determining": "( Min( Max( Max( ( RRS + Const ),RRS ),MDR ) ,Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( BR / FirstVNF_CPU_Server ) ) ) * Max( ( ( FirstVNF_Mem_Server / MDR ) * ( DDR - RRS ) ),( Min( BR ,FirstVNF_Mem ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR / ( MLU * RRSe ) ) / Max( ( ( RCSe + MUM ) * ( MUR / MLU ) ),MLU ) )", "obj1": 0.14444444444444443, "obj2": 0.7646152857942299}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( BR,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / CS ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.2074074074074074, "obj2": 0.691069154813529}, {"determining": "( Min( DDR ,CRS ) / FirstVNF_Mem_Server )", "choosing": "Max( ( Max( Max( RMSe,DS ),Max( MUM,RCSe ) ) + Max( ( CS * MLU ),Min( MUM ,CS ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( ( MUM / DS ) / MUC ) + RCSe ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8458714033505071}, {"determining": "Max( Max( Min( ( AMS + ( ( Min( MRS ,PN ) / ARS ) / ( Const * PN ) ) ) ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ),( ( BR + BR ) / ( Min( Min( Min( ( AMS + ARS ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) - DDR ) ) )", "choosing": "( ( ( ( RRSe * MUM ) - Min( MUR ,DS ) ) / ( ( CS - MUM ) + Max( MUM,MLU ) ) ) + Min( Max( Min( DS ,CS ),( MLU - ( Min( DS ,MUM ) * Min( ( RCSe + MUR ) ,Min( DS ,MUC ) ) ) ) ) ,( ( MUM + MUM ) * ( DS - RMSe ) ) ) )", "obj1": 0.2611111111111111, "obj2": 0.6384735462964297}, {"determining": "Max( Max( Min( ( AMS + BR ) ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ),( ( BR + BR ) / ( Min( Min( Min( ( AMS + ARS ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) - DDR ) ) )", "choosing": "( ( ( ( RRSe * MUM ) - Min( MUR ,DS ) ) / ( ( CS - MUM ) + Max( MUM,MLU ) ) ) + Min( Max( Min( DS ,CS ),( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) ) ,( ( MUM + MUM ) * ( DS - RMSe ) ) ) )", "obj1": 0.2611111111111111, "obj2": 0.6384735462964297}, {"determining": "( ( ( Const * MRS ) / ( Min( MRS ,PN ) / ARS ) ) + ( ( MDR + FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "( ( ( Max( RMSe,Min( DS ,RRSe ) ) / Max( ( MLU * RCSe ),( RMSe / MUR ) ) ) - CS ) * Min( RMSe ,Min( MLU ,MUC ) ) )", "obj1": 0.12037037037037036, "obj2": 0.8028798682351265}, {"determining": "Max( Max( Min( ( AMS + BR ) ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ),( ( BR + BR ) / ( ARS - DDR ) ) )", "choosing": "( ( ( ( RRSe * MUM ) - Min( MUR ,DS ) ) / ( ( CS - MUM ) + Max( MUM,MLU ) ) ) + Min( Max( Min( DS ,CS ),( MUC + MUM ) ) ,( ( MUM + MUM ) * ( DS - RMSe ) ) ) )", "obj1": 0.2611111111111111, "obj2": 0.6384735462964297}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * ( DDR - FirstVNF_RAM ) )", "choosing": "( ( ( RCSe - RMSe ) * CS ) / ( RRSe + CS ) )", "obj1": 0.17037037037037037, "obj2": 0.7384032513218372}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * ( ( Const + MDR ) + ( CRS / FirstVNF_RAM ) ) )", "choosing": "( ( ( RCSe - RMSe ) * CS ) / ( Min( Max( RRSe,MUM ) ,( MUM + ( Max( ( MLU + MUM ),( RCSe + DS ) ) + ( ( RMSe + MUR ) - Min( RMSe ,RMSe ) ) ) ) ) * RMSe ) )", "obj1": 0.17037037037037037, "obj2": 0.7384032513218372}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( ( ( ( Const * CRS ) / ( Const * ( Min( BR ,( ARS + RRS ) ) + Min( FirstVNF_Mem ,DDR ) ) ) ) + ( ( BR * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( Min( DS ,MUC ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.2351851851851852, "obj2": 0.6591724959006369}, {"determining": "( Max( BR,FirstVNF_Mem ) - ( ( MDR - FirstVNF_RAM_Server ) / FirstVNF_RAM ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.7138667684944016}, {"determining": "( ( ( Min( MRS ,PN ) / ARS ) / ( Const * PN ) ) + ( ( AMS * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "( ( ( ( Min( DS ,MUM ) * Min( ( RCSe + MUR ) ,Min( DS ,MUC ) ) ) / Max( ( MLU * RCSe ),( RMSe / MUR ) ) ) - CS ) * Min( RMSe ,Min( DS ,MUC ) ) )", "obj1": 0.12407407407407407, "obj2": 0.8015507685804344}, {"determining": "Min( Max( ARS,Min( BR ,BR ) ) ,( FirstVNF_Mem / ( AMS - BR ) ) )", "choosing": "( Min( ( ( MUR + MUC ) * ( RRSe - MUM ) ) ,( MUC - ( DS / ( Max( Max( MUM,MLU ),RRSe ) / RRSe ) ) ) ) * ( ( Min( MUM ,RCSe ) * ( CS / MUR ) ) + Min( ( CS + RMSe ) ,( RCSe / CS ) ) ) )", "obj1": 0.1425925925925926, "obj2": 0.7679828345512899}, {"determining": "( ( MRS / ARS ) * ( ( Const + MDR ) + ( CRS / FirstVNF_RAM ) ) )", "choosing": "( ( ( RCSe - RMSe ) * CS ) / ( Min( Max( RRSe,MUM ) ,( MUM + ( Min( ( MLU + Max( RRSe,RRSe ) ) ,( RMSe * Min( MUR ,MUR ) ) ) + ( ( RMSe + MUR ) - Min( RMSe ,RMSe ) ) ) ) ) * RMSe ) )", "obj1": 0.17037037037037037, "obj2": 0.7384032513218372}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * ( ( Const + MDR ) + ( CRS / FirstVNF_RAM ) ) )", "choosing": "( ( ( RCSe - RMSe ) * CS ) / ( Min( Max( RRSe,MUM ) ,( MUM + ( Max( ( MLU + MUM ),( RCSe + DS ) ) + ( ( RMSe + MUR ) - Min( RMSe ,RMSe ) ) ) ) ) * RMSe ) )", "obj1": 0.17037037037037037, "obj2": 0.7384032513218372}, {"determining": "( Max( BR,FirstVNF_Mem ) - ( ( MDR - FirstVNF_RAM_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RRSe * MUM ) - Min( MUR ,DS ) ) / ( ( CS - MUM ) + Max( MUM,MLU ) ) ) + Min( Max( Min( DS ,CS ),( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) ) ,( ( MUM + MUM ) * ( DS - RMSe ) ) ) )", "obj1": 0.2611111111111111, "obj2": 0.6384735462964297}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( BR,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - MRS ) ) ,( Max( ( ( Const - ( FirstVNF_RAM - CRS ) ) * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( Max( RRSe,CS ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RMSe ) ),Min( ( CS / CS ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.7138667684944016}, {"determining": "( Max( FirstVNF_Mem_Server,Max( ( AMS + FirstVNF_Mem_Server ),FirstVNF_Mem ) ) - RRS )", "choosing": "( ( ( ( ( ( MLU - ( MUR + CS ) ) + MUM ) / RMSe ) * ( DS * ( CS * MUC ) ) ) / DS ) - Max( Min( MUM ,CS ),( MUC + MLU ) ) )", "obj1": 0.23333333333333334, "obj2": 0.6592092070835944}, {"determining": "( Max( BR,Max( ( ARS + FirstVNF_RAM ),( Const - ( ( FirstVNF_RAM_Server - AMS ) - Min( AMS ,MDR ) ) ) ) ) - ( ( MDR - FirstVNF_RAM_Server ) / FirstVNF_RAM ) )", "choosing": "Max( Max( Max( MUR,CS ),DS ),( RCSe / RMSe ) )", "obj1": 0.16666666666666666, "obj2": 0.7529112212546671}, {"determining": "Max( ( FirstVNF_RAM / ( FirstVNF_CPU * ( FirstVNF_CPU_Server / PN ) ) ),( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) )", "choosing": "Max( Max( Max( MUR,MLU ),DS ),( RCSe / RMSe ) )", "obj1": 0.1388888888888889, "obj2": 0.7685225246510794}, {"determining": "Max( ( FirstVNF_RAM / ( FirstVNF_CPU * ( FirstVNF_CPU_Server / PN ) ) ),( ( ( Min( RRS ,Const ) * ACS ) - ( MRS + ACS ) ) - Min( FirstVNF_CPU_Server ,ACS ) ) )", "choosing": "Max( ( Max( Max( RMSe,DS ),MLU ) + Max( ( CS * MLU ),Min( MUM ,CS ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( ( MUM / DS ) / MUC ) + RCSe ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8458714033505071}, {"determining": "( ( ( Const + MDR ) + ( CRS / FirstVNF_RAM ) ) * Min( Min( Min( Max( ARS,FirstVNF_CPU_Server ) ,( ( RRS * BR ) + ARS ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( DS / MLU ) )", "obj1": 0.20925925925925926, "obj2": 0.6843337311326501}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * ( ( Const + MDR ) + ( CRS / FirstVNF_RAM ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.7138667684944016}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( ( RCSe - RMSe ) * CS ) / ( Min( Max( RRSe,MUM ) ,( MUM + ( Max( ( MLU + MUM ),( RCSe + DS ) ) + ( ( RMSe + MUR ) - Min( RMSe ,RMSe ) ) ) ) ) * RMSe ) )", "obj1": 0.23148148148148148, "obj2": 0.6678938423301755}, {"determining": "( Min( Max( Max( ( RRS + Const ),RRS ),MDR ) ,Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( BR / FirstVNF_CPU_Server ) ) ) * Max( ( Min( FirstVNF_CPU_Server ,ACS ) * ( DDR - RRS ) ),( Min( BR ,FirstVNF_Mem ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR / ( MLU * RRSe ) ) / Max( ( ( RCSe + MUM ) * ( Max( ( CS * MLU ),Min( MUM ,CS ) ) / MLU ) ),MLU ) )", "obj1": 0.22037037037037038, "obj2": 0.6801669220048774}, {"determining": "( Min( Max( Max( ( RRS + Const ),RRS ),MDR ) ,Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( BR / FirstVNF_CPU_Server ) ) ) * Max( ( ( FirstVNF_Mem_Server / MDR ) * ( DDR - RRS ) ),( Min( BR ,FirstVNF_Mem ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "Max( ( Max( Max( RMSe,DS ),Max( MUM,RCSe ) ) + Max( ( CS * MLU ),Min( MUM ,CS ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( ( MUM / DS ) / MUC ) + RCSe ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8458714033505071}, {"determining": "Max( ( FirstVNF_RAM / ( FirstVNF_CPU * ( FirstVNF_CPU_Server / PN ) ) ),( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) )", "choosing": "( ( MUR / ( MLU * RRSe ) ) / Max( ( ( RCSe + MUM ) * ( MUR / MLU ) ),MLU ) )", "obj1": 0.14444444444444443, "obj2": 0.7646152857942299}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( BR,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,Max( RRS,ACS ) ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / ( MUC - RMSe ) ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.7138667684944016}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( BR,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / CS ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.7138667684944016}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( ARS,BR ) ) ,( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) ) ,Max( DDR,( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) + ( FirstVNF_Mem * ( BR - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( CS * MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),( ( CS + Min( ( MUM * CS ) ,MUC ) ) * Max( RCSe,RMSe ) ) ) ) )", "obj1": 0.15185185185185185, "obj2": 0.7572886130464167}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.1685185185185185, "obj2": 0.7461888262778625}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS * ARS ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) ) ,( Max( ( BR * Max( AMS,FirstVNF_CPU_Server ) ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( MUC ,MUM ),( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.1685185185185185, "obj2": 0.7461888262778625}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS * ARS ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) ) ,( Max( ( BR * Max( AMS,FirstVNF_CPU_Server ) ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( MUC ,MUM ),( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.1685185185185185, "obj2": 0.7461888262778625}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS * ARS ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) ) ,( Max( ( BR * Max( AMS,FirstVNF_CPU_Server ) ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( MUC ,MUM ),( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.1685185185185185, "obj2": 0.7461888262778625}, {"determining": "( ARS - ( ( MDR - FirstVNF_RAM_Server ) / FirstVNF_RAM ) )", "choosing": "Max( CS,( RCSe / RMSe ) )", "obj1": 0.16666666666666666, "obj2": 0.7529112212546671}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS * ARS ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) ) ,( Max( ( BR * Max( AMS,FirstVNF_CPU_Server ) ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( ( RCSe - RMSe ) * CS ) / ( MUR * Min( Max( Max( MUC,Min( RRSe ,MUM ) ),RMSe ) ,( MLU + Max( MLU,RRSe ) ) ) ) )", "obj1": 0.22407407407407406, "obj2": 0.6786837389764867}, {"determining": "Max( ( FirstVNF_RAM / ( FirstVNF_RAM_Server * ( ARS - AMS ) ) ),( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) )", "choosing": "Max( ( Max( Max( RMSe,DS ),Max( MUM,RCSe ) ) + Max( ( CS * MLU ),Min( MUM ,CS ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) / ( ( ( MUM / ( ( ( MUC + RRSe ) + MUC ) / CS ) ) / MUC ) + RCSe ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8458714033505071}, {"determining": "( ( ( Min( MRS ,PN ) / ARS ) / ( Const * PN ) ) + ( ( AMS * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "( ( ( ( Min( DS ,MUM ) * Min( ( RCSe + MUR ) ,Min( DS ,MUC ) ) ) / Max( ( MLU * RCSe ),( RMSe / MUR ) ) ) - CS ) * Min( RMSe ,Min( DS ,MUC ) ) )", "obj1": 0.12037037037037036, "obj2": 0.8028798682351265}, {"determining": "( Max( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( DDR - MDR ) ),Max( ( FirstVNF_RAM - FirstVNF_Mem ),Max( MRS,FirstVNF_CPU_Server ) ) ) / ( Min( ( CRS * Const ) ,Max( FirstVNF_CPU_Server,RRS ) ) + Min( Min( MRS ,FirstVNF_Mem ) ,( ACS / PN ) ) ) )", "choosing": "( ( ( ( RRSe * MUM ) - Min( MUR ,DS ) ) / ( ( CS - MUM ) + Max( MUM,MLU ) ) ) + Min( Max( Min( DS ,CS ),( MUC + MUM ) ) ,( ( MUM + MUM ) * ( DS - RMSe ) ) ) )", "obj1": 0.22592592592592592, "obj2": 0.671211149277601}, {"determining": "( Min( ( Max( MDR,DDR ) * ( RRS * FirstVNF_RAM_Server ) ) ,Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( BR / FirstVNF_CPU_Server ) ) ) * Max( Max( RRS,Const ),( Min( BR ,FirstVNF_Mem ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.17222222222222222, "obj2": 0.7338127739553719}, {"determining": "( Max( BR,( AMS / ARS ) ) - Max( ( MDR - FirstVNF_RAM_Server ),FirstVNF_RAM ) )", "choosing": "( ( MUC * DS ) / ( MUR / ( MLU + Min( DS ,( MUM * ( RMSe / RMSe ) ) ) ) ) )", "obj1": 0.11296296296296296, "obj2": 0.8253404395750024}, {"determining": "Min( ( CRS + AMS ) ,Min( ( DDR * FirstVNF_Mem_Server ) ,( Const + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( Min( DS ,MUM ) * Min( ( RCSe + MUR ) ,Min( DS ,MUC ) ) ) / Max( ( MLU * RCSe ),( RMSe / MUR ) ) ) - CS ) * Min( RMSe ,Min( DS ,MUC ) ) )", "obj1": 0.12037037037037036, "obj2": 0.8028798682351265}, {"determining": "( ( Max( Const,CRS ) / ( Const * ( Min( BR ,( ARS + RRS ) ) + Min( Min( FirstVNF_RAM_Server ,( Min( BR ,RRS ) - Max( FirstVNF_Mem,ACS ) ) ) ,DDR ) ) ) ) + ( ( BR * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( MUM / MLU ) ,( CS - MUM ) ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.7138667684944016}, {"determining": "Max( Max( Min( ( AMS + BR ) ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ),( ( BR + BR ) / ( ARS - DDR ) ) )", "choosing": "( ( ( ( RRSe * MUM ) - Min( MUR ,DS ) ) / ( ( CS - MUM ) + Max( MUM,MLU ) ) ) + Min( Max( Min( DS ,CS ),( MUC + MUM ) ) ,( ( MUM + MUM ) * ( DS - RMSe ) ) ) )", "obj1": 0.2611111111111111, "obj2": 0.6384735462964297}, {"determining": "Min( Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_CPU ) ,( MRS / FirstVNF_Mem ) ) ,Max( RRS,Const ) )", "choosing": "Max( ( RMSe + ( ( CS * MLU ) / ( ( Min( ( MUC * Min( MUR ,RMSe ) ) ,CS ) * ( MUC * ( ( MUC + RCSe ) - MUR ) ) ) * MUR ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( MUR + MUC ) / Min( RMSe ,RMSe ) ) ) )", "obj1": 0.22777777777777777, "obj2": 0.6704495529661237}, {"determining": "Min( Max( Min( AMS ,BR ),CRS ) ,Max( RRS,Const ) )", "choosing": "Max( ( RMSe + Max( ( CS * MLU ),Min( ( MUC + MUR ) ,MUR ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( DS + MUC ) / Min( RMSe ,RMSe ) ) ) )", "obj1": 0.22777777777777777, "obj2": 0.6704495529661237}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Max( ( Min( BR ,CRS ) / ( PN - FirstVNF_RAM ) ),Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),( PN + ( ( FirstVNF_Mem_Server * Const ) * FirstVNF_Mem ) ) ) ) ,( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( ( MLU - MUM ) - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.24814814814814815, "obj2": 0.6490634225313519}], "6": [{"determining": "( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) - ( Min( Min( Min( ( CRS / CRS ) ,RRS ) ,FirstVNF_RAM_Server ) ,( PN / ( ( CRS / MRS ) * FirstVNF_Mem ) ) ) * AMS ) )", "choosing": "Min( Max( MUM,RRSe ) ,Min( ( MUM + ( MUR - Min( ( ( ( DS / RMSe ) + MUR ) + RMSe ) ,MUC ) ) ) ,Max( RCSe,( MUC - MUR ) ) ) )", "obj1": 0.662962962962963, "obj2": 0.32001196441563856}, {"determining": "Min( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU / FirstVNF_Mem ) ) ,Max( RRS,Const ) )", "choosing": "Max( ( RMSe + Max( ( CS * MLU ),Min( MUM ,CS ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( MUR + MUC ) / Min( RMSe ,RMSe ) ) ) )", "obj1": 0.22777777777777777, "obj2": 0.6704495529661237}, {"determining": "( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( DDR - MDR ) ) - Max( ( FirstVNF_RAM - FirstVNF_Mem ),Max( MRS,FirstVNF_CPU_Server ) ) ) / ( Min( ( Max( FirstVNF_RAM,CRS ) * Const ) ,Max( FirstVNF_CPU_Server,RRS ) ) + ( ( ACS / PN ) - Min( MRS ,Min( Const ,BR ) ) ) ) )", "choosing": "( ( ( ( RRSe * MUM ) - Min( MUR ,DS ) ) / ( ( CS - MUM ) + Max( MUM,MLU ) ) ) + Min( Max( Min( DS ,RRSe ),( MUC + MUM ) ) ,( ( MUM + MUM ) * ( ( RMSe * ( MLU + MUM ) ) / RMSe ) ) ) )", "obj1": 0.22592592592592592, "obj2": 0.671211149277601}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( ARS,PN ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,( MDR * ARS ) ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( ( Min( DS ,Max( MUC,RRSe ) ) * Max( RMSe,DS ) ) * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / DS ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.7138667684944016}, {"determining": "Min( Min( ( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem ) ) ,FirstVNF_RAM_Server ) ,Max( Const,RRS ) )", "choosing": "Max( ( ( Max( CS,RRSe ) / ( ( CS + RMSe ) / Min( CS ,MLU ) ) ) + Max( ( ( CS - ( Min( ( DS + RRSe ) ,RMSe ) + Max( DS,DS ) ) ) / ( MUR / MLU ) ),Min( MUM ,CS ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( MUR + MUC ) / Min( RMSe ,RMSe ) ) ) )", "obj1": 0.13148148148148148, "obj2": 0.7736690903842448}, {"determining": "( Min( DDR ,FirstVNF_CPU ) * Max( Max( RRS,Const ),( ( BR / FirstVNF_Mem ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR / ( MLU * Min( DS ,MUR ) ) ) / ( ( MUM * ( RCSe / MUC ) ) / ( MUC * ( ( MLU * MLU ) + ( RRSe * ( ( ( MUC + RMSe ) / Max( CS,RMSe ) ) - RCSe ) ) ) ) ) )", "obj1": 0.11296296296296296, "obj2": 0.8253404395750024}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * ( ( Const + MDR ) + ( CRS / FirstVNF_RAM ) ) )", "choosing": "( ( ( RCSe - RMSe ) * CS ) / ( Min( Max( RRSe,MUM ) ,( MUM + ( Max( ( MLU + MUM ),( RCSe + DS ) ) + ( ( RMSe + MUR ) - Min( RMSe ,RMSe ) ) ) ) ) * RMSe ) )", "obj1": 0.17037037037037037, "obj2": 0.7384032513218372}, {"determining": "( Max( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( DDR - MDR ) ),Max( ( FirstVNF_RAM - FirstVNF_Mem ),Max( MRS,FirstVNF_CPU_Server ) ) ) / ( Min( ( CRS * Const ) ,Max( FirstVNF_CPU_Server,RRS ) ) + Min( Min( MRS ,FirstVNF_Mem ) ,( ACS / PN ) ) ) )", "choosing": "( ( ( ( RRSe * MUM ) - Min( MUR ,DS ) ) / ( ( CS - MUM ) + Max( MUM,MLU ) ) ) + Min( Max( Min( DS ,CS ),( MUC + MUM ) ) ,( ( MUM + MUM ) * ( DS - RMSe ) ) ) )", "obj1": 0.22592592592592592, "obj2": 0.671211149277601}, {"determining": "( Min( PN ,FirstVNF_RAM_Server ) * Min( Min( Min( ( AMS + ARS ) ,Max( BR,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( Max( MDR,PN ),FirstVNF_RAM_Server ) ) - ( DDR * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * ( RRSe + CS ) ) ,( MUR * Min( DS ,Max( MUR,( MUM / RCSe ) ) ) ) ),Min( ( CS / CS ) ,( DS - RRSe ) ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.7138667684944016}, {"determining": "Max( Max( Min( ( AMS + BR ) ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ),( ( BR + BR ) / ( ARS - DDR ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.7138667684944016}, {"determining": "( Max( Min( ( RRS - FirstVNF_CPU ) ,DDR ),Max( ( FirstVNF_RAM - FirstVNF_Mem ),( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) / ( ARS / CRS ) )", "choosing": "( ( ( ( RRSe * MUM ) - Max( MUC,MUC ) ) / ( ( CS - MUM ) + Max( MUM,MLU ) ) ) + Min( ( RMSe - Min( ( RRSe - CS ) ,( ( ( RRSe - Min( RCSe ,RCSe ) ) / RCSe ) + DS ) ) ) ,( ( DS - RMSe ) * Max( MUM,MUM ) ) ) )", "obj1": 0.22592592592592592, "obj2": 0.671211149277601}, {"determining": "( Min( ( Max( MDR,DDR ) * ( RRS * FirstVNF_RAM_Server ) ) ,Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( BR / FirstVNF_CPU_Server ) ) ) * Max( Max( RRS,Const ),( Min( BR ,FirstVNF_Mem ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR / ( MLU * Min( DS ,MUR ) ) ) / ( MUC * DS ) )", "obj1": 0.11296296296296296, "obj2": 0.8253404395750024}, {"determining": "( ( ( Const * CRS ) / ( Const * ( Min( BR ,( ARS + RRS ) ) + Min( FirstVNF_Mem ,DDR ) ) ) ) + ( ( BR * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.7138667684944016}, {"determining": "( Min( CRS ,Max( ARS,( FirstVNF_CPU / MRS ) ) ) + Min( Max( ( RRS - BR ),( ACS * ARS ) ) ,( ( FirstVNF_RAM_Server - BR ) * ( FirstVNF_Mem / Const ) ) ) )", "choosing": "Max( ( Min( CS ,MUM ) / ( CS * MUM ) ),( ( MUC - Min( ( ( DS / RMSe ) * ( MLU + MLU ) ) ,( RCSe / ( MUC - MUC ) ) ) ) * Max( DS,CS ) ) )", "obj1": 0.2388888888888889, "obj2": 0.6552471684249174}, {"determining": "( ( ( BR * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) + Max( FirstVNF_RAM,CRS ) )", "choosing": "( ( Min( RMSe ,Min( Max( RMSe,CS ) ,MUC ) ) - MLU ) + ( MLU - Max( Min( ( CS / MLU ) ,( DS / RRSe ) ),RRSe ) ) )", "obj1": 0.20925925925925926, "obj2": 0.6843337311326501}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( BR,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / CS ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.2074074074074074, "obj2": 0.691069154813529}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * ( DDR - FirstVNF_RAM ) )", "choosing": "( ( ( RCSe - RMSe ) * CS ) / ( RRSe + CS ) )", "obj1": 0.17037037037037037, "obj2": 0.7384032513218372}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * ( ( Const + MDR ) + ( CRS / FirstVNF_RAM ) ) )", "choosing": "( ( ( RCSe - RMSe ) * CS ) / ( Min( Max( RRSe,MUM ) ,( MUM + ( Max( ( MLU + MUM ),( RCSe + DS ) ) + ( ( RMSe + MUR ) - Min( RMSe ,RMSe ) ) ) ) ) * RMSe ) )", "obj1": 0.17037037037037037, "obj2": 0.7384032513218372}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( ( ( ( Const * CRS ) / ( Const * ( Min( BR ,( ARS + RRS ) ) + Min( FirstVNF_Mem ,DDR ) ) ) ) + ( ( BR * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( Min( DS ,MUC ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.2351851851851852, "obj2": 0.6591724959006369}, {"determining": "( Max( BR,FirstVNF_Mem ) - ( ( MDR - FirstVNF_RAM_Server ) / FirstVNF_RAM ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.7138667684944016}, {"determining": "( ( MRS / ARS ) * ( ( Const + MDR ) + ( CRS / FirstVNF_RAM ) ) )", "choosing": "( ( ( RCSe - RMSe ) * CS ) / ( Min( Max( RRSe,MUM ) ,( MUM + ( Min( ( MLU + Max( RRSe,RRSe ) ) ,( RMSe * Min( MUR ,MUR ) ) ) + ( ( RMSe + MUR ) - Min( RMSe ,RMSe ) ) ) ) ) * RMSe ) )", "obj1": 0.17037037037037037, "obj2": 0.7384032513218372}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * ( ( Const + MDR ) + ( CRS / FirstVNF_RAM ) ) )", "choosing": "( ( ( RCSe - RMSe ) * CS ) / ( Min( Max( RRSe,MUM ) ,( MUM + ( Max( ( MLU + MUM ),( RCSe + DS ) ) + ( ( RMSe + MUR ) - Min( RMSe ,RMSe ) ) ) ) ) * RMSe ) )", "obj1": 0.17037037037037037, "obj2": 0.7384032513218372}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( BR,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - MRS ) ) ,( Max( ( ( Const - ( FirstVNF_RAM - CRS ) ) * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( Max( RRSe,CS ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RMSe ) ),Min( ( CS / CS ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.7138667684944016}, {"determining": "( Max( FirstVNF_Mem_Server,Max( ( AMS + FirstVNF_Mem_Server ),FirstVNF_Mem ) ) - RRS )", "choosing": "( ( ( ( ( ( MLU - ( MUR + CS ) ) + MUM ) / RMSe ) * ( DS * ( CS * MUC ) ) ) / DS ) - Max( Min( MUM ,CS ),( MUC + MLU ) ) )", "obj1": 0.23333333333333334, "obj2": 0.6592092070835944}, {"determining": "( ( ( Const + MDR ) + ( CRS / FirstVNF_RAM ) ) * Min( Min( Min( Max( ARS,FirstVNF_CPU_Server ) ,( ( RRS * BR ) + ARS ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( DS / MLU ) )", "obj1": 0.20925925925925926, "obj2": 0.6843337311326501}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * ( ( Const + MDR ) + ( CRS / FirstVNF_RAM ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.7138667684944016}, {"determining": "( Min( Max( Max( ( RRS + Const ),RRS ),MDR ) ,Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( BR / FirstVNF_CPU_Server ) ) ) * Max( ( Min( FirstVNF_CPU_Server ,ACS ) * ( DDR - RRS ) ),( Min( BR ,FirstVNF_Mem ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR / ( MLU * RRSe ) ) / Max( ( ( RCSe + MUM ) * ( Max( ( CS * MLU ),Min( MUM ,CS ) ) / MLU ) ),MLU ) )", "obj1": 0.22037037037037038, "obj2": 0.6801669220048774}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( BR,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,Max( RRS,ACS ) ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / ( MUC - RMSe ) ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.7138667684944016}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( BR,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / CS ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.7138667684944016}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( ARS,BR ) ) ,( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) ) ,Max( DDR,( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) + ( FirstVNF_Mem * ( BR - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( CS * MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),( ( CS + Min( ( MUM * CS ) ,MUC ) ) * Max( RCSe,RMSe ) ) ) ) )", "obj1": 0.15185185185185185, "obj2": 0.7572886130464167}, {"determining": "( Max( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( DDR - MDR ) ),Max( ( FirstVNF_RAM - FirstVNF_Mem ),Max( MRS,FirstVNF_CPU_Server ) ) ) / ( Min( ( CRS * Const ) ,Max( FirstVNF_CPU_Server,RRS ) ) + Min( Min( MRS ,FirstVNF_Mem ) ,( ACS / PN ) ) ) )", "choosing": "( ( ( ( RRSe * MUM ) - Min( MUR ,DS ) ) / ( ( CS - MUM ) + Max( MUM,MLU ) ) ) + Min( Max( Min( DS ,CS ),( MUC + MUM ) ) ,( ( MUM + MUM ) * ( DS - RMSe ) ) ) )", "obj1": 0.22592592592592592, "obj2": 0.671211149277601}, {"determining": "( Min( ( Max( MDR,DDR ) * ( RRS * FirstVNF_RAM_Server ) ) ,Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( BR / FirstVNF_CPU_Server ) ) ) * Max( Max( RRS,Const ),( Min( BR ,FirstVNF_Mem ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.17222222222222222, "obj2": 0.7338127739553719}, {"determining": "( Max( BR,( AMS / ARS ) ) - Max( ( MDR - FirstVNF_RAM_Server ),FirstVNF_RAM ) )", "choosing": "( ( MUC * DS ) / ( MUR / ( MLU + Min( DS ,( MUM * ( RMSe / RMSe ) ) ) ) ) )", "obj1": 0.11296296296296296, "obj2": 0.8253404395750024}, {"determining": "( ( Max( Const,CRS ) / ( Const * ( Min( BR ,( ARS + RRS ) ) + Min( Min( FirstVNF_RAM_Server ,( Min( BR ,RRS ) - Max( FirstVNF_Mem,ACS ) ) ) ,DDR ) ) ) ) + ( ( BR * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( MUM / MLU ) ,( CS - MUM ) ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.7138667684944016}, {"determining": "Min( Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_CPU ) ,( MRS / FirstVNF_Mem ) ) ,Max( RRS,Const ) )", "choosing": "Max( ( RMSe + ( ( CS * MLU ) / ( ( Min( ( MUC * Min( MUR ,RMSe ) ) ,CS ) * ( MUC * ( ( MUC + RCSe ) - MUR ) ) ) * MUR ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( MUR + MUC ) / Min( RMSe ,RMSe ) ) ) )", "obj1": 0.22777777777777777, "obj2": 0.6704495529661237}, {"determining": "Min( Max( Min( AMS ,BR ),CRS ) ,Max( RRS,Const ) )", "choosing": "Max( ( RMSe + Max( ( CS * MLU ),Min( ( MUC + MUR ) ,MUR ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( DS + MUC ) / Min( RMSe ,RMSe ) ) ) )", "obj1": 0.22777777777777777, "obj2": 0.6704495529661237}, {"determining": "Min( Min( DDR ,( RRS / FirstVNF_Mem ) ) ,Max( DDR,( FirstVNF_CPU - Max( PN,Min( MDR ,Const ) ) ) ) )", "choosing": "( ( ( RCSe - RMSe ) * CS ) / ( Min( Max( RRSe,MUM ) ,( MUM + ( Min( ( MLU + Max( RRSe,RRSe ) ) ,( RMSe * Min( MUR ,MUR ) ) ) + ( ( RMSe + MUR ) - Min( RMSe ,RMSe ) ) ) ) ) * RMSe ) )", "obj1": 0.17037037037037037, "obj2": 0.7384032513218372}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS * ARS ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) ) ,( Max( ( BR * Max( AMS,FirstVNF_CPU_Server ) ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( MUR / ( MLU * RRSe ) ) / Max( ( ( RCSe + MUM ) * ( Max( ( CS * MLU ),Min( MUM ,CS ) ) / MLU ) ),MLU ) )", "obj1": 0.22037037037037038, "obj2": 0.6801669220048774}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( ( ( ( Const * CRS ) / ( Const * ( Min( BR ,( ARS + RRS ) ) + Max( ARS,Const ) ) ) ) + ( ( BR * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( Max( MUC,RCSe ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.2351851851851852, "obj2": 0.6591724959006369}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ),FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.7138667684944016}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.7138667684944016}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( BR,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / CS ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.7138667684944016}, {"determining": "( Max( ( FirstVNF_RAM / ( FirstVNF_CPU * ( FirstVNF_CPU_Server / PN ) ) ),( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) ) + ( ( AMS * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "( ( ( ( Min( ( ( ( MUM / DS ) / MUC ) + RCSe ) ,MUM ) * Min( ( RCSe + MUR ) ,Min( DS ,MUC ) ) ) / Max( ( MLU * RCSe ),( RMSe / MUR ) ) ) - CS ) * Min( RMSe ,Min( DS ,MUC ) ) )", "obj1": 0.12777777777777777, "obj2": 0.7952244588686673}, {"determining": "( Min( Max( Max( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) + ( CRS + RRS ) ) - Min( ( PN / BR ) ,Max( ( Const / DDR ),BR ) ) ),RRS ),MDR ) ,Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( BR / FirstVNF_CPU_Server ) ) ) * Max( ( ( FirstVNF_Mem_Server / MDR ) * ( DDR - RRS ) ),( Min( BR ,FirstVNF_Mem ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( Max( RRSe,MUR ) / Max( ( ( RCSe + MUM ) * ( MUR / RCSe ) ),MLU ) )", "obj1": 0.13703703703703704, "obj2": 0.7688486505875236}, {"determining": "Max( ( FirstVNF_RAM / ( FirstVNF_CPU * ( FirstVNF_CPU_Server / PN ) ) ),( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) )", "choosing": "Max( ( Max( Max( RMSe,DS ),Max( MUM,RCSe ) ) + Max( ( CS * MLU ),Min( MUM ,CS ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( ( MUM / DS ) / MUC ) + RCSe ) ) )", "obj1": 0.1037037037037037, "obj2": 0.8473408105307324}, {"determining": "Max( ( ( AMS + ( ( ( FirstVNF_Mem * ACS ) * Const ) * ACS ) ) * AMS ),BR )", "choosing": "( ( MUR / ( RRSe * MLU ) ) / Max( ( Max( MLU,Max( Max( MUM,( ( MUC - RMSe ) - Min( MUC ,MUR ) ) ),DS ) ) / MUR ),( MUC - MUM ) ) )", "obj1": 0.16111111111111112, "obj2": 0.7552251306431912}, {"determining": "( ( ( Min( MRS ,PN ) / ARS ) / Max( ( FirstVNF_Mem + FirstVNF_Mem ),PN ) ) + ( ( AMS * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "( ( ( ( Min( DS ,MUM ) * Min( ( RCSe + RCSe ) ,Min( DS ,MUC ) ) ) / Max( ( MLU * RCSe ),( RMSe / MUR ) ) ) - CS ) * Min( ( MUM * RRSe ) ,Min( DS ,MUC ) ) )", "obj1": 0.11851851851851852, "obj2": 0.8003743714136429}, {"determining": "( FirstVNF_CPU_Server * ( ( Const + MDR ) + ( CRS / FirstVNF_RAM ) ) )", "choosing": "( ( ( RCSe - RMSe ) * CS ) / ( Min( Max( RRSe,MUM ) ,DS ) * RMSe ) )", "obj1": 0.22962962962962963, "obj2": 0.6677817035884575}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( BR,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - MRS ) ) ,( Max( ( ( Const - ( FirstVNF_RAM - CRS ) ) * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( ( ( RRSe * MUM ) - Min( MUR ,DS ) ) / ( ( CS - MUM ) + Max( MUM,MLU ) ) ) + Min( Max( Min( DS ,CS ),( MUC + MUM ) ) ,( ( MUM + MUM ) * ( DS - RMSe ) ) ) )", "obj1": 0.22592592592592592, "obj2": 0.671211149277601}, {"determining": "Max( ( FirstVNF_RAM / ( PN + MDR ) ),( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,Min( ARS ,( ( ( Max( AMS,Const ) - BR ) / FirstVNF_Mem ) + ( PN * DDR ) ) ) ) ) )", "choosing": "( Max( RRSe,MLU ) / ( ( CS - MUR ) - ( MLU * MUM ) ) )", "obj1": 0.11481481481481481, "obj2": 0.8242993470717234}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( ( ( ( Const * CRS ) / ( Const * ( Min( BR ,( ARS + RRS ) ) + Min( FirstVNF_Mem ,DDR ) ) ) ) + ( ( BR * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( Min( DS ,MUC ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.2351851851851852, "obj2": 0.6591724959006369}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * ( ( Const + MDR ) + ( CRS / FirstVNF_RAM ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.7138667684944016}, {"determining": "Max( Max( Min( ( AMS + BR ) ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ),( ( BR + BR ) / ( ARS - DDR ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.2074074074074074, "obj2": 0.691069154813529}, {"determining": "( ( ( Min( MRS ,PN ) / ARS ) / ( Const * PN ) ) + ( ( AMS * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.2074074074074074, "obj2": 0.691069154813529}, {"determining": "Min( Min( ( FirstVNF_RAM_Server / ( PN * MRS ) ) ,FirstVNF_RAM_Server ) ,Max( RRS,Const ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.18703703703703703, "obj2": 0.7123729940256258}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,( Min( ( Min( FirstVNF_RAM ,ACS ) - ( MRS - PN ) ) ,FirstVNF_CPU_Server ) * ( Max( Const,( ARS - FirstVNF_CPU ) ) + ( CRS / FirstVNF_RAM ) ) ) ) ,( Min( RRS ,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RRSe * Max( Min( ( MUR * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) ,( MUR * RRSe ) ),Min( ( RCSe + ( ( RMSe + DS ) + ( RMSe * Max( DS,CS ) ) ) ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.17777777777777778, "obj2": 0.7207151071387062}, {"determining": "( Min( ( DDR + DDR ) ,FirstVNF_CPU_Server ) * Min( Min( ( AMS + ARS ) ,Max( BR,FirstVNF_RAM_Server ) ) ,( Max( RRS,ACS ) - PN ) ) )", "choosing": "( ( RRSe - ( MLU / MUM ) ) + ( MLU - ( ( RMSe * RRSe ) * Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.7138667684944016}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * ( ( Const + MDR ) + ( CRS / FirstVNF_RAM ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.7138667684944016}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( BR,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( ACS / FirstVNF_RAM_Server ),( BR * AMS ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * Max( MRS,( ( Const + BR ) + MDR ) ) ) ) ) ) )", "choosing": "( ( RRSe - RMSe ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / Min( Max( MUR,RCSe ) ,RMSe ) ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.7138667684944016}, {"determining": "( ( ( Const * PN ) / ( Min( MRS ,MRS ) / ARS ) ) + ( ( Max( RRS,CRS ) * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "( ( RRSe - MLU ) + ( Max( DS,( ( MUR / RRSe ) * Min( MUC ,MUR ) ) ) * RRSe ) )", "obj1": 0.2074074074074074, "obj2": 0.691069154813529}, {"determining": "Max( Max( Min( ( BR + AMS ) ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ),( ( BR + BR ) / Min( CRS ,Const ) ) )", "choosing": "( ( RRSe - MLU ) + ( Min( RCSe ,( Min( RCSe ,CS ) + MUC ) ) - Max( Min( ( RMSe * RRSe ) ,( MUR + RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.7138667684944016}, {"determining": "Max( ( Max( RRS,ACS ) * Min( FirstVNF_CPU_Server ,ACS ) ),( Const / MDR ) )", "choosing": "( ( RRSe + MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR + ( Min( CS ,MUM ) / ( RRSe * Max( RRSe,RRSe ) ) ) ) ),( RCSe * DS ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "( ( ( Const + MDR ) + ( ( FirstVNF_RAM_Server + ARS ) * FirstVNF_RAM ) ) * ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( Min( RRSe ,MLU ) + ( Max( RRSe,( ( ( RRSe * ( MUM / ( MLU + MUM ) ) ) - ( MUC / Min( ( MUM / RRSe ) ,RCSe ) ) ) - Min( RCSe ,MLU ) ) ) - MLU ) )", "obj1": 0.20925925925925926, "obj2": 0.6843337311326501}, {"determining": "( ( ( Const * CRS ) / ( Const * ( Min( BR ,( ARS + RRS ) ) + Min( FirstVNF_Mem ,DDR ) ) ) ) + ( ( BR * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.7138667684944016}, {"determining": "( Min( Max( FirstVNF_CPU,MDR ) ,Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( BR / FirstVNF_CPU_Server ) ) ) * Max( ( ( FirstVNF_Mem_Server / MDR ) * ( DDR - RRS ) ),( Min( BR ,FirstVNF_Mem ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR / ( MLU * RRSe ) ) / Max( ( ( RCSe + MUM ) * ( ( RMSe + Max( ( CS * MLU ),Min( MUM ,CS ) ) ) / MLU ) ),MLU ) )", "obj1": 0.22037037037037038, "obj2": 0.6801669220048774}, {"determining": "Min( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU / FirstVNF_Mem ) ) ,Max( RRS,Const ) )", "choosing": "Max( ( RMSe + Max( ( CS * MLU ),Min( MUM ,CS ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( MUR + MUC ) / Min( RMSe ,RMSe ) ) ) )", "obj1": 0.22777777777777777, "obj2": 0.6704495529661237}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - ( FirstVNF_CPU_Server * ACS ) ) ) ,( Max( ( BR * AMS ),Min( Max( Max( ( ARS - ARS ),RRS ),MDR ) ,Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( BR / FirstVNF_CPU_Server ) ) ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe - MUM ) ,( MUR * RRSe ) ),( ( RRSe * RCSe ) / MUM ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "Max( ( FirstVNF_RAM / ( FirstVNF_CPU * ( FirstVNF_CPU_Server / PN ) ) ),( ( ( Min( RRS ,Const ) * ACS ) - ( MRS + ACS ) ) - Min( FirstVNF_CPU_Server ,ACS ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( MUC ,MUM ),( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS * ARS ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) ) ,( Max( ( BR * Max( AMS,FirstVNF_CPU_Server ) ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( ( ( RRSe * MUM ) - Min( MUR ,DS ) ) / ( ( CS - MUM ) + Max( MUM,MLU ) ) ) + Min( Max( Min( DS ,CS ),( MUC + MUM ) ) ,( ( MUM + MUM ) * ( DS - RMSe ) ) ) )", "obj1": 0.22592592592592592, "obj2": 0.671211149277601}, {"determining": "Min( Min( ( FirstVNF_RAM_Server / ( PN * MRS ) ) ,FirstVNF_RAM_Server ) ,Max( RRS,Const ) )", "choosing": "Max( ( ( Max( CS,RRSe ) / ( ( RMSe + CS ) / Min( CS ,MLU ) ) ) + Max( ( ( CS - ( RMSe + Max( DS,DS ) ) ) * ( MUR / MLU ) ),Min( MUM ,CS ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( MUR + MUC ) / Min( RMSe ,RMSe ) ) ) )", "obj1": 0.17037037037037037, "obj2": 0.7384032513218372}, {"determining": "( ( ( Min( MRS ,PN ) / ARS ) / ( Const * PN ) ) + ( ( AMS * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.2074074074074074, "obj2": 0.691069154813529}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * ( ( Const + MDR ) + ( CRS / FirstVNF_RAM ) ) )", "choosing": "( ( ( RCSe - RMSe ) * CS ) / ( Min( Max( RRSe,MUM ) ,( MUM + ( Max( ( MLU + MUM ),( RCSe + DS ) ) + ( ( RMSe + MUR ) - Min( RMSe ,RMSe ) ) ) ) ) * RMSe ) )", "obj1": 0.17037037037037037, "obj2": 0.7384032513218372}, {"determining": "( ( CRS + FirstVNF_Mem ) + Min( CRS ,Max( ARS,( ( FirstVNF_CPU_Server / ACS ) * Max( AMS,DDR ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( ( ( Min( ( Min( CS ,DS ) * Min( MUC ,RCSe ) ) ,CS ) * RMSe ) + ( MUR * RRSe ) ),Min( Min( DS ,MUC ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.2351851851851852, "obj2": 0.6591724959006369}, {"determining": "( ( ( Const * DDR ) / ( Const * ( Min( Min( ( ( FirstVNF_CPU - FirstVNF_CPU ) * FirstVNF_CPU_Server ) ,AMS ) ,( ARS + RRS ) ) + Min( FirstVNF_RAM ,DDR ) ) ) ) + ( ( BR * ( FirstVNF_CPU_Server + BR ) ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( ( ( ( ( ( MUR / MUC ) * Min( MLU ,DS ) ) * ( ( RRSe * MUM ) - ( MLU + CS ) ) ) / CS ) / MUM ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.2074074074074074, "obj2": 0.691069154813529}, {"determining": "( ( ( Min( MRS ,PN ) / ARS ) / ( Const * PN ) ) + ( ( AMS * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "Max( ( RMSe + Max( ( CS * MLU ),( DS / ( MUM / MUR ) ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( MUR + MUC ) / Min( RMSe ,RMSe ) ) ) )", "obj1": 0.22777777777777777, "obj2": 0.6704495529661237}, {"determining": "( Max( BR,FirstVNF_Mem ) - ( ( MDR - FirstVNF_RAM_Server ) / FirstVNF_RAM ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( RRSe,Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.20925925925925926, "obj2": 0.6843337311326501}, {"determining": "( ( ( Min( ( CRS / FirstVNF_RAM ) ,PN ) / ARS ) / ( Const * PN ) ) + ( ( AMS * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "( ( ( ( Min( DS ,MUM ) * Min( ( DS + MUR ) ,Min( DS ,MUC ) ) ) / Max( ( MLU * RCSe ),( RMSe / MUR ) ) ) - CS ) * Min( RMSe ,Min( DS ,MUC ) ) )", "obj1": 0.11666666666666667, "obj2": 0.8026241645805308}, {"determining": "( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ,FirstVNF_CPU_Server ) * ( ( ( ( Const + MDR ) + ( CRS / FirstVNF_RAM ) ) + MDR ) + ( CRS / FirstVNF_RAM ) ) )", "choosing": "( ( ( RCSe - RMSe ) * CS ) / ( Min( Max( RRSe,MUM ) ,( MUM + ( ( RCSe - RMSe ) * CS ) ) ) * RMSe ) )", "obj1": 0.2222222222222222, "obj2": 0.6754039432538851}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * ( ( Const + ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ,FirstVNF_CPU_Server ) * ( ( Const + MDR ) + ( CRS / FirstVNF_RAM ) ) ) ) + ( CRS / FirstVNF_RAM ) ) )", "choosing": "( ( ( RCSe - RMSe ) * CS ) / Min( Max( RRSe,MUM ) ,( MUM + ( Max( ( MLU + MUM ),( ( MUR * RMSe ) + DS ) ) + ( ( RMSe + MUR ) - Min( RMSe ,RMSe ) ) ) ) ) )", "obj1": 0.17037037037037037, "obj2": 0.7384032513218372}, {"determining": "( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ,FirstVNF_CPU_Server ) * ( ( Const + MDR ) + ( CRS / FirstVNF_RAM ) ) )", "choosing": "( ( ( RCSe - RMSe ) * CS ) / ( Min( Max( RRSe,MUM ) ,( MUM + ( Max( ( MLU + MUM ),( RCSe + DS ) ) + ( ( RMSe + MUR ) - Min( RMSe ,RMSe ) ) ) ) ) * RMSe ) )", "obj1": 0.17037037037037037, "obj2": 0.7384032513218372}, {"determining": "Min( Min( ( Const + FirstVNF_CPU ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) ,( Min( BR ,( ARS + RRS ) ) + Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "Max( ( RMSe + Max( ( CS * MLU ),( DS / ( MUM / MUR ) ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( MUR + ( ( Min( MUM ,RCSe ) * ( CS / MUR ) ) + Min( ( CS + RMSe ) ,( RCSe / CS ) ) ) ) / Min( RMSe ,RMSe ) ) ) )", "obj1": 0.22777777777777777, "obj2": 0.6704495529661237}, {"determining": "( Max( BR,FirstVNF_Mem ) - ( CRS + BR ) )", "choosing": "Max( Max( ( Min( CS ,MUM ) / ( CS * MUM ) ),DS ),( RCSe / RMSe ) )", "obj1": 0.1648148148148148, "obj2": 0.7456786726767188}, {"determining": "Min( Min( ( Const + FirstVNF_CPU ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) ,Max( ( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ),Const ) )", "choosing": "Max( ( RMSe + Max( ( CS * MLU ),RRSe ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( MUR + MUC ) / Min( RMSe ,RMSe ) ) ) )", "obj1": 0.22777777777777777, "obj2": 0.6704495529661237}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "Max( ( RMSe + Max( ( CS * MLU ),( DS / ( MUM / MUR ) ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( MUR + MUC ) / Min( RMSe ,RMSe ) ) ) )", "obj1": 0.22777777777777777, "obj2": 0.6704495529661237}, {"determining": "( Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server * BR ) ) * ( DDR - AMS ) )", "choosing": "( ( RRSe - MLU ) + ( MLU / Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),( Min( CS ,RCSe ) * ( DS / ( Min( ( MUM - RMSe ) ,RRSe ) / MUC ) ) ) ) ) )", "obj1": 0.1388888888888889, "obj2": 0.7677094379011713}, {"determining": "( Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server * BR ) ) * ( DDR - AMS ) )", "choosing": "( ( RRSe - MLU ) + ( MLU / Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),( Min( CS ,RCSe ) * ( DS / ( Min( ( MUM - RMSe ) ,RRSe ) / MUC ) ) ) ) ) )", "obj1": 0.1388888888888889, "obj2": 0.7677094379011713}, {"determining": "( Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server * BR ) ) * ( DDR - AMS ) )", "choosing": "( ( RRSe - MLU ) + ( MLU / Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),( Min( CS ,RCSe ) * ( DS / ( Min( ( MUM - RMSe ) ,RRSe ) / MUC ) ) ) ) ) )", "obj1": 0.1388888888888889, "obj2": 0.7677094379011713}, {"determining": "( Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server * MDR ) ) * Min( Min( Min( FirstVNF_Mem ,MRS ) ,( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - ( Max( AMS,FirstVNF_CPU ) * ( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU / Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),( ( ( MUR / DS ) - RRSe ) - MUC ) ) ) )", "obj1": 0.1388888888888889, "obj2": 0.7677094379011713}, {"determining": "Max( ( ( FirstVNF_CPU * ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) / FirstVNF_RAM ),( ( ( FirstVNF_Mem / ( ARS / ARS ) ) / FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,ACS ) ) )", "choosing": "Max( ( ( DS * ( RMSe - MUR ) ) + Max( ( CS * MLU ),Min( MUM ,CS ) ) ),( Max( ( RCSe / RMSe ),( RCSe / MUC ) ) * ( ( ( MUM / DS ) / MUC ) + RCSe ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8425867877620832}, {"determining": "( Min( ( Max( MDR,DDR ) * ( RRS * Max( ( BR * CRS ),( ( FirstVNF_Mem_Server - Max( ACS,Const ) ) + RRS ) ) ) ) ,Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( BR / FirstVNF_CPU_Server ) ) ) * Max( Max( RRS,Const ),( Min( AMS ,FirstVNF_Mem ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe / MLU ) + ( MLU - Max( Min( ( MUR * RRSe ) ,( RMSe * RRSe ) ),Min( ( CS / MLU ) ,( ( RRSe / RRSe ) / RRSe ) ) ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7202591477210795}, {"determining": "( ( Max( ARS,( DDR / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) - PN ) - ( ( MDR - FirstVNF_RAM_Server ) / FirstVNF_RAM ) )", "choosing": "( ( MUR / ( ( CS / CS ) * Min( ( ( RCSe * MUC ) / ( Max( CS,DS ) - RCSe ) ) ,MUR ) ) ) / ( RCSe * DS ) )", "obj1": 0.10740740740740741, "obj2": 0.8319068328656971}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( BR,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / CS ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.17222222222222222, "obj2": 0.7338127739553719}, {"determining": "( ( ( Min( MRS ,PN ) / ARS ) / ( Const * ( DDR - FirstVNF_CPU_Server ) ) ) + ( ( AMS * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "( ( RRSe - RCSe ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( MUM * RMSe ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.2074074074074074, "obj2": 0.691069154813529}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * ( ( Const + MDR ) + ( CRS / FirstVNF_RAM ) ) )", "choosing": "( ( ( RCSe - RMSe ) * CS ) / ( Min( Max( RRSe,MUM ) ,( MUM + ( Max( ( MLU + MUM ),( ( MUR * RMSe ) + DS ) ) + ( ( RMSe + MUR ) - Min( RMSe ,RMSe ) ) ) ) ) * RMSe ) )", "obj1": 0.17037037037037037, "obj2": 0.7384032513218372}, {"determining": "( Min( ( Max( MDR,DDR ) * ( FirstVNF_RAM_Server * RRS ) ) ,Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( BR / FirstVNF_CPU_Server ) ) ) * Max( ( FirstVNF_Mem * CRS ),( Max( BR,FirstVNF_Mem ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RRSe * RMSe ) ,( ( MUC * Max( RMSe,MUC ) ) * RRSe ) ),Min( ( MUR / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.2074074074074074, "obj2": 0.691069154813529}, {"determining": "Max( Max( Min( ( AMS + BR ) ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ),( ( BR + BR ) / ( Min( Min( Min( ( AMS + ARS ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) - DDR ) ) )", "choosing": "Max( ( RMSe + Max( ( CS * MLU ),Min( MUM ,CS ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( MUR + MUC ) / Min( RMSe ,RMSe ) ) ) )", "obj1": 0.22777777777777777, "obj2": 0.6704495529661237}, {"determining": "( Min( ( CRS + BR ) ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( BR,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,Max( RRS,ACS ) ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( Max( ( ( MUC - MUR ) * Max( DS,CS ) ),( Min( CS ,MUM ) / ( CS * MUM ) ) ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.7138667684944016}, {"determining": "( Min( CRS ,Max( ARS,BR ) ) + ( CRS + BR ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / ( MUC - RMSe ) ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.7138667684944016}, {"determining": "( ( ( Const * CRS ) / ( Const * ( Min( BR ,( ARS + RRS ) ) + Min( FirstVNF_Mem ,DDR ) ) ) ) + ( ( BR * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.2074074074074074, "obj2": 0.691069154813529}, {"determining": "( ( FirstVNF_RAM * ( ACS / FirstVNF_Mem ) ) + ( ( BR * FirstVNF_CPU_Server ) / ( Max( CRS,( RRS * FirstVNF_CPU ) ) / RRS ) ) )", "choosing": "( ( RRSe - MLU ) + ( ( RCSe * DS ) - ( ( DS / MUC ) / Min( ( CS / MLU ) ,( RRSe - DS ) ) ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7202591477210795}], "7": [{"determining": "( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) - ( Min( Min( Min( ( CRS / CRS ) ,RRS ) ,FirstVNF_RAM_Server ) ,( PN / ( ( CRS / MRS ) * FirstVNF_Mem ) ) ) * AMS ) )", "choosing": "Min( Max( MUM,RRSe ) ,Min( ( MUM + ( MUR - Min( ( ( ( DS / RMSe ) + MUR ) + RMSe ) ,MUC ) ) ) ,Max( RCSe,( MUC - MUR ) ) ) )", "obj1": 0.662962962962963, "obj2": 0.32001196441563856}, {"determining": "( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( DDR - MDR ) ) - Max( ( FirstVNF_RAM - FirstVNF_Mem ),Max( MRS,FirstVNF_CPU_Server ) ) ) / ( Min( ( Max( FirstVNF_RAM,CRS ) * Const ) ,Max( FirstVNF_CPU_Server,RRS ) ) + ( ( ACS / PN ) - Min( MRS ,Min( Const ,BR ) ) ) ) )", "choosing": "( ( ( ( RRSe * MUM ) - Min( MUR ,DS ) ) / ( ( CS - MUM ) + Max( MUM,MLU ) ) ) + Min( Max( Min( DS ,RRSe ),( MUC + MUM ) ) ,( ( MUM + MUM ) * ( ( RMSe * ( MLU + MUM ) ) / RMSe ) ) ) )", "obj1": 0.22592592592592592, "obj2": 0.671211149277601}, {"determining": "Min( Min( ( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem ) ) ,FirstVNF_RAM_Server ) ,Max( Const,RRS ) )", "choosing": "Max( ( ( Max( CS,RRSe ) / ( ( CS + RMSe ) / Min( CS ,MLU ) ) ) + Max( ( ( CS - ( Min( ( DS + RRSe ) ,RMSe ) + Max( DS,DS ) ) ) / ( MUR / MLU ) ),Min( MUM ,CS ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( MUR + MUC ) / Min( RMSe ,RMSe ) ) ) )", "obj1": 0.13148148148148148, "obj2": 0.7736690903842448}, {"determining": "( Min( DDR ,FirstVNF_CPU ) * Max( Max( RRS,Const ),( ( BR / FirstVNF_Mem ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR / ( MLU * Min( DS ,MUR ) ) ) / ( ( MUM * ( RCSe / MUC ) ) / ( MUC * ( ( MLU * MLU ) + ( RRSe * ( ( ( MUC + RMSe ) / Max( CS,RMSe ) ) - RCSe ) ) ) ) ) )", "obj1": 0.11296296296296296, "obj2": 0.8253404395750024}, {"determining": "( Max( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( DDR - MDR ) ),Max( ( FirstVNF_RAM - FirstVNF_Mem ),Max( MRS,FirstVNF_CPU_Server ) ) ) / ( Min( ( CRS * Const ) ,Max( FirstVNF_CPU_Server,RRS ) ) + Min( Min( MRS ,FirstVNF_Mem ) ,( ACS / PN ) ) ) )", "choosing": "( ( ( ( RRSe * MUM ) - Min( MUR ,DS ) ) / ( ( CS - MUM ) + Max( MUM,MLU ) ) ) + Min( Max( Min( DS ,CS ),( MUC + MUM ) ) ,( ( MUM + MUM ) * ( DS - RMSe ) ) ) )", "obj1": 0.22592592592592592, "obj2": 0.671211149277601}, {"determining": "( Max( Min( ( RRS - FirstVNF_CPU ) ,DDR ),Max( ( FirstVNF_RAM - FirstVNF_Mem ),( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) / ( ARS / CRS ) )", "choosing": "( ( ( ( RRSe * MUM ) - Max( MUC,MUC ) ) / ( ( CS - MUM ) + Max( MUM,MLU ) ) ) + Min( ( RMSe - Min( ( RRSe - CS ) ,( ( ( RRSe - Min( RCSe ,RCSe ) ) / RCSe ) + DS ) ) ) ,( ( DS - RMSe ) * Max( MUM,MUM ) ) ) )", "obj1": 0.22592592592592592, "obj2": 0.671211149277601}, {"determining": "( Min( ( Max( MDR,DDR ) * ( RRS * FirstVNF_RAM_Server ) ) ,Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( BR / FirstVNF_CPU_Server ) ) ) * Max( Max( RRS,Const ),( Min( BR ,FirstVNF_Mem ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR / ( MLU * Min( DS ,MUR ) ) ) / ( MUC * DS ) )", "obj1": 0.11296296296296296, "obj2": 0.8253404395750024}, {"determining": "( Min( CRS ,Max( ARS,( FirstVNF_CPU / MRS ) ) ) + Min( Max( ( RRS - BR ),( ACS * ARS ) ) ,( ( FirstVNF_RAM_Server - BR ) * ( FirstVNF_Mem / Const ) ) ) )", "choosing": "Max( ( Min( CS ,MUM ) / ( CS * MUM ) ),( ( MUC - Min( ( ( DS / RMSe ) * ( MLU + MLU ) ) ,( RCSe / ( MUC - MUC ) ) ) ) * Max( DS,CS ) ) )", "obj1": 0.2388888888888889, "obj2": 0.6552471684249174}, {"determining": "( ( ( BR * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) + Max( FirstVNF_RAM,CRS ) )", "choosing": "( ( Min( RMSe ,Min( Max( RMSe,CS ) ,MUC ) ) - MLU ) + ( MLU - Max( Min( ( CS / MLU ) ,( DS / RRSe ) ),RRSe ) ) )", "obj1": 0.20925925925925926, "obj2": 0.6843337311326501}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( ( ( ( Const * CRS ) / ( Const * ( Min( BR ,( ARS + RRS ) ) + Min( FirstVNF_Mem ,DDR ) ) ) ) + ( ( BR * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( Min( DS ,MUC ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.2351851851851852, "obj2": 0.6591724959006369}, {"determining": "( Max( FirstVNF_Mem_Server,Max( ( AMS + FirstVNF_Mem_Server ),FirstVNF_Mem ) ) - RRS )", "choosing": "( ( ( ( ( ( MLU - ( MUR + CS ) ) + MUM ) / RMSe ) * ( DS * ( CS * MUC ) ) ) / DS ) - Max( Min( MUM ,CS ),( MUC + MLU ) ) )", "obj1": 0.23333333333333334, "obj2": 0.6592092070835944}, {"determining": "( ( ( Const + MDR ) + ( CRS / FirstVNF_RAM ) ) * Min( Min( Min( Max( ARS,FirstVNF_CPU_Server ) ,( ( RRS * BR ) + ARS ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( DS / MLU ) )", "obj1": 0.20925925925925926, "obj2": 0.6843337311326501}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( ARS,BR ) ) ,( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) ) ,Max( DDR,( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) + ( FirstVNF_Mem * ( BR - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( CS * MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),( ( CS + Min( ( MUM * CS ) ,MUC ) ) * Max( RCSe,RMSe ) ) ) ) )", "obj1": 0.15185185185185185, "obj2": 0.7572886130464167}, {"determining": "( Max( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( DDR - MDR ) ),Max( ( FirstVNF_RAM - FirstVNF_Mem ),Max( MRS,FirstVNF_CPU_Server ) ) ) / ( Min( ( CRS * Const ) ,Max( FirstVNF_CPU_Server,RRS ) ) + Min( Min( MRS ,FirstVNF_Mem ) ,( ACS / PN ) ) ) )", "choosing": "( ( ( ( RRSe * MUM ) - Min( MUR ,DS ) ) / ( ( CS - MUM ) + Max( MUM,MLU ) ) ) + Min( Max( Min( DS ,CS ),( MUC + MUM ) ) ,( ( MUM + MUM ) * ( DS - RMSe ) ) ) )", "obj1": 0.22592592592592592, "obj2": 0.671211149277601}, {"determining": "( Max( BR,( AMS / ARS ) ) - Max( ( MDR - FirstVNF_RAM_Server ),FirstVNF_RAM ) )", "choosing": "( ( MUC * DS ) / ( MUR / ( MLU + Min( DS ,( MUM * ( RMSe / RMSe ) ) ) ) ) )", "obj1": 0.11296296296296296, "obj2": 0.8253404395750024}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( ( ( ( Const * CRS ) / ( Const * ( Min( BR ,( ARS + RRS ) ) + Max( ARS,Const ) ) ) ) + ( ( BR * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( Max( MUC,RCSe ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.2351851851851852, "obj2": 0.6591724959006369}, {"determining": "( Max( ( FirstVNF_RAM / ( FirstVNF_CPU * ( FirstVNF_CPU_Server / PN ) ) ),( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) ) + ( ( AMS * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "( ( ( ( Min( ( ( ( MUM / DS ) / MUC ) + RCSe ) ,MUM ) * Min( ( RCSe + MUR ) ,Min( DS ,MUC ) ) ) / Max( ( MLU * RCSe ),( RMSe / MUR ) ) ) - CS ) * Min( RMSe ,Min( DS ,MUC ) ) )", "obj1": 0.12777777777777777, "obj2": 0.7952244588686673}, {"determining": "( Min( Max( Max( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) + ( CRS + RRS ) ) - Min( ( PN / BR ) ,Max( ( Const / DDR ),BR ) ) ),RRS ),MDR ) ,Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( BR / FirstVNF_CPU_Server ) ) ) * Max( ( ( FirstVNF_Mem_Server / MDR ) * ( DDR - RRS ) ),( Min( BR ,FirstVNF_Mem ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( Max( RRSe,MUR ) / Max( ( ( RCSe + MUM ) * ( MUR / RCSe ) ),MLU ) )", "obj1": 0.13703703703703704, "obj2": 0.7688486505875236}, {"determining": "Max( ( FirstVNF_RAM / ( FirstVNF_CPU * ( FirstVNF_CPU_Server / PN ) ) ),( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) )", "choosing": "Max( ( Max( Max( RMSe,DS ),Max( MUM,RCSe ) ) + Max( ( CS * MLU ),Min( MUM ,CS ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( ( MUM / DS ) / MUC ) + RCSe ) ) )", "obj1": 0.1037037037037037, "obj2": 0.8473408105307324}, {"determining": "( ( ( Min( MRS ,PN ) / ARS ) / Max( ( FirstVNF_Mem + FirstVNF_Mem ),PN ) ) + ( ( AMS * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "( ( ( ( Min( DS ,MUM ) * Min( ( RCSe + RCSe ) ,Min( DS ,MUC ) ) ) / Max( ( MLU * RCSe ),( RMSe / MUR ) ) ) - CS ) * Min( ( MUM * RRSe ) ,Min( DS ,MUC ) ) )", "obj1": 0.11851851851851852, "obj2": 0.8003743714136429}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( BR,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - MRS ) ) ,( Max( ( ( Const - ( FirstVNF_RAM - CRS ) ) * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( ( ( RRSe * MUM ) - Min( MUR ,DS ) ) / ( ( CS - MUM ) + Max( MUM,MLU ) ) ) + Min( Max( Min( DS ,CS ),( MUC + MUM ) ) ,( ( MUM + MUM ) * ( DS - RMSe ) ) ) )", "obj1": 0.22592592592592592, "obj2": 0.671211149277601}, {"determining": "Max( ( FirstVNF_RAM / ( PN + MDR ) ),( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,Min( ARS ,( ( ( Max( AMS,Const ) - BR ) / FirstVNF_Mem ) + ( PN * DDR ) ) ) ) ) )", "choosing": "( Max( RRSe,MLU ) / ( ( CS - MUR ) - ( MLU * MUM ) ) )", "obj1": 0.11481481481481481, "obj2": 0.8242993470717234}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( ( ( ( Const * CRS ) / ( Const * ( Min( BR ,( ARS + RRS ) ) + Min( FirstVNF_Mem ,DDR ) ) ) ) + ( ( BR * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( Min( DS ,MUC ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.2351851851851852, "obj2": 0.6591724959006369}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,( Min( ( Min( FirstVNF_RAM ,ACS ) - ( MRS - PN ) ) ,FirstVNF_CPU_Server ) * ( Max( Const,( ARS - FirstVNF_CPU ) ) + ( CRS / FirstVNF_RAM ) ) ) ) ,( Min( RRS ,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RRSe * Max( Min( ( MUR * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) ,( MUR * RRSe ) ),Min( ( RCSe + ( ( RMSe + DS ) + ( RMSe * Max( DS,CS ) ) ) ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.17777777777777778, "obj2": 0.7207151071387062}, {"determining": "Max( ( Max( RRS,ACS ) * Min( FirstVNF_CPU_Server ,ACS ) ),( Const / MDR ) )", "choosing": "( ( RRSe + MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR + ( Min( CS ,MUM ) / ( RRSe * Max( RRSe,RRSe ) ) ) ) ),( RCSe * DS ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "( ( ( Const + MDR ) + ( ( FirstVNF_RAM_Server + ARS ) * FirstVNF_RAM ) ) * ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( Min( RRSe ,MLU ) + ( Max( RRSe,( ( ( RRSe * ( MUM / ( MLU + MUM ) ) ) - ( MUC / Min( ( MUM / RRSe ) ,RCSe ) ) ) - Min( RCSe ,MLU ) ) ) - MLU ) )", "obj1": 0.20925925925925926, "obj2": 0.6843337311326501}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - ( FirstVNF_CPU_Server * ACS ) ) ) ,( Max( ( BR * AMS ),Min( Max( Max( ( ARS - ARS ),RRS ),MDR ) ,Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( BR / FirstVNF_CPU_Server ) ) ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe - MUM ) ,( MUR * RRSe ) ),( ( RRSe * RCSe ) / MUM ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "Max( ( FirstVNF_RAM / ( FirstVNF_CPU * ( FirstVNF_CPU_Server / PN ) ) ),( ( ( Min( RRS ,Const ) * ACS ) - ( MRS + ACS ) ) - Min( FirstVNF_CPU_Server ,ACS ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( MUC ,MUM ),( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS * ARS ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) ) ,( Max( ( BR * Max( AMS,FirstVNF_CPU_Server ) ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( ( ( RRSe * MUM ) - Min( MUR ,DS ) ) / ( ( CS - MUM ) + Max( MUM,MLU ) ) ) + Min( Max( Min( DS ,CS ),( MUC + MUM ) ) ,( ( MUM + MUM ) * ( DS - RMSe ) ) ) )", "obj1": 0.22592592592592592, "obj2": 0.671211149277601}, {"determining": "( ( CRS + FirstVNF_Mem ) + Min( CRS ,Max( ARS,( ( FirstVNF_CPU_Server / ACS ) * Max( AMS,DDR ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( ( ( Min( ( Min( CS ,DS ) * Min( MUC ,RCSe ) ) ,CS ) * RMSe ) + ( MUR * RRSe ) ),Min( Min( DS ,MUC ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.2351851851851852, "obj2": 0.6591724959006369}, {"determining": "( Max( BR,FirstVNF_Mem ) - ( ( MDR - FirstVNF_RAM_Server ) / FirstVNF_RAM ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( RRSe,Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.20925925925925926, "obj2": 0.6843337311326501}, {"determining": "( ( ( Min( ( CRS / FirstVNF_RAM ) ,PN ) / ARS ) / ( Const * PN ) ) + ( ( AMS * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "( ( ( ( Min( DS ,MUM ) * Min( ( DS + MUR ) ,Min( DS ,MUC ) ) ) / Max( ( MLU * RCSe ),( RMSe / MUR ) ) ) - CS ) * Min( RMSe ,Min( DS ,MUC ) ) )", "obj1": 0.11666666666666667, "obj2": 0.8026241645805308}, {"determining": "Max( ( ( FirstVNF_CPU * ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) / FirstVNF_RAM ),( ( ( FirstVNF_Mem / ( ARS / ARS ) ) / FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,ACS ) ) )", "choosing": "Max( ( ( DS * ( RMSe - MUR ) ) + Max( ( CS * MLU ),Min( MUM ,CS ) ) ),( Max( ( RCSe / RMSe ),( RCSe / MUC ) ) * ( ( ( MUM / DS ) / MUC ) + RCSe ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8425867877620832}, {"determining": "( Min( ( Max( MDR,DDR ) * ( RRS * Max( ( BR * CRS ),( ( FirstVNF_Mem_Server - Max( ACS,Const ) ) + RRS ) ) ) ) ,Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( BR / FirstVNF_CPU_Server ) ) ) * Max( Max( RRS,Const ),( Min( AMS ,FirstVNF_Mem ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe / MLU ) + ( MLU - Max( Min( ( MUR * RRSe ) ,( RMSe * RRSe ) ),Min( ( CS / MLU ) ,( ( RRSe / RRSe ) / RRSe ) ) ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7202591477210795}, {"determining": "( ( Max( ARS,( DDR / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) - PN ) - ( ( MDR - FirstVNF_RAM_Server ) / FirstVNF_RAM ) )", "choosing": "( ( MUR / ( ( CS / CS ) * Min( ( ( RCSe * MUC ) / ( Max( CS,DS ) - RCSe ) ) ,MUR ) ) ) / ( RCSe * DS ) )", "obj1": 0.10740740740740741, "obj2": 0.8319068328656971}, {"determining": "( ( FirstVNF_RAM * ( ACS / FirstVNF_Mem ) ) + ( ( BR * FirstVNF_CPU_Server ) / ( Max( CRS,( RRS * FirstVNF_CPU ) ) / RRS ) ) )", "choosing": "( ( RRSe - MLU ) + ( ( RCSe * DS ) - ( ( DS / MUC ) / Min( ( CS / MLU ) ,( RRSe - DS ) ) ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7202591477210795}, {"determining": "Max( ( FirstVNF_RAM / ( ( FirstVNF_CPU - BR ) / FirstVNF_RAM ) ),( ( ( Min( FirstVNF_Mem_Server ,Const ) * ACS ) - ( MRS + ACS ) ) - Min( FirstVNF_CPU_Server ,ACS ) ) )", "choosing": "( ( RRSe - MLU ) + ( RRSe - Max( CS,( ( CS + RCSe ) * ( MLU * RRSe ) ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "Min( Min( ( FirstVNF_RAM_Server / ( PN * MRS ) ) ,FirstVNF_RAM_Server ) ,Max( Max( Min( ( AMS + BR ) ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ),( ( BR + BR ) / ( ARS - DDR ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ) ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.13518518518518519, "obj2": 0.7689079332089656}, {"determining": "( ( ( Const * CRS ) / ( Const * ( Min( BR ,( ARS + RRS ) ) + Min( FirstVNF_Mem ,DDR ) ) ) ) + ( ( BR * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "Max( ( Max( Max( RMSe,DS ),Max( MUM,Max( ( RMSe + Max( ( CS * MLU ),Min( MUM ,CS ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( MUR + MUC ) / Min( RMSe ,RMSe ) ) ) ) ) ) + Max( ( CS * MLU ),Min( MUM ,CS ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( ( MUM / DS ) / MUC ) + RCSe ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8425867877620832}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( ( ( ( Const * CRS ) / ( Const * ( Min( BR ,( ARS + RRS ) ) + Min( FirstVNF_Mem ,DDR ) ) ) ) + ( ( BR * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.18888888888888888, "obj2": 0.7105909279734545}, {"determining": "( Max( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( DDR - MDR ) ),Min( Min( ( AMS + ARS ) ,Max( BR,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - PN ) ) ) / ( Min( ( CRS * Const ) ,Max( FirstVNF_CPU_Server,RRS ) ) + Min( Min( MRS ,FirstVNF_Mem ) ,( ACS / PN ) ) ) )", "choosing": "( ( ( ( RRSe * MUM ) - Min( MUR ,DS ) ) / ( ( CS - MUM ) + Max( MUM,MLU ) ) ) + Min( Max( Max( ( RMSe * RRSe ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ),( MUC + MUM ) ) ,( ( MUM + MUM ) * ( DS - RMSe ) ) ) )", "obj1": 0.22592592592592592, "obj2": 0.671211149277601}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * Min( Min( ( AMS + ARS ) ,FirstVNF_Mem ) ,( Max( RRS,ACS ) - PN ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( ( RMSe * RRSe ),Min( ( CS / MLU ) ,( Min( MUR ,DS ) / RRSe ) ) ) ) )", "obj1": 0.17592592592592593, "obj2": 0.7233731181402024}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * Min( Min( ( AMS + ARS ) ,Max( BR,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - PN ) ) )", "choosing": "( ( ( ( RRSe * MUM ) - Min( MUR ,DS ) ) / ( ( CS - MUM ) + Max( MUM,MLU ) ) ) + Min( Max( Min( DS ,CS ),( MUC + MUM ) ) ,( ( MUM + MUM ) * ( DS - RMSe ) ) ) )", "obj1": 0.22592592592592592, "obj2": 0.671211149277601}, {"determining": "( ( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( BR,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) ) * Min( Min( Min( ( AMS * ARS ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) ) ,( Max( ( BR * Max( AMS,FirstVNF_CPU_Server ) ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( MUR / ( MLU * Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ) ) ) / Max( ( ( RCSe + MUM ) * ( Max( ( CS * MLU ),Min( MUM ,CS ) ) / MLU ) ),MLU ) )", "obj1": 0.2537037037037037, "obj2": 0.6471225670320588}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,Max( RRS,( Const + MDR ) ) ) ) - Min( ( DDR * RRS ) ,Max( AMS,FirstVNF_CPU ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( Max( ( MLU + MUM ),( RCSe + DS ) ) * RRSe ) ,( MUM * RRSe ) ),Min( ( CS / ( MUC - RMSe ) ) ,( DS / ( ( Max( MLU,MUM ) - MUM ) + Max( ( RMSe / CS ),RMSe ) ) ) ) ) ) )", "obj1": 0.2037037037037037, "obj2": 0.691550943861389}, {"determining": "( Min( DDR ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( ARS,PN ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,( MDR * ARS ) ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( ( Min( DS ,Max( MUC,RRSe ) ) * Max( RMSe,DS ) ) * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / DS ) ,( RMSe * RRSe ) ) ) ) )", "obj1": 0.23703703703703705, "obj2": 0.657990240778808}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( ( ACS * MRS ) + ARS ) ,Max( BR,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - MRS ) ) ,( Max( ( ( Const - ( FirstVNF_RAM - CRS ) ) * AMS ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( ( ( RRSe * MUM ) - ( MUR + MLU ) ) / ( ( CS - MUM ) + Max( MUM,MLU ) ) ) + Min( Max( ( DS * CS ),( MUC + MUM ) ) ,( ( MUM + MUM ) * ( DS - RMSe ) ) ) )", "obj1": 0.22592592592592592, "obj2": 0.671211149277601}, {"determining": "Min( Min( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + FirstVNF_CPU ) ,( ( FirstVNF_Mem_Server * AMS ) / FirstVNF_Mem ) ) ,Max( RRS,Const ) )", "choosing": "( ( ( ( ( RMSe / ( RCSe + ( DS * ( RCSe - MUR ) ) ) ) * RMSe ) - Min( DS ,MUR ) ) / ( ( CS - MUM ) + Max( MUM,MLU ) ) ) + Min( Max( Min( DS ,CS ),( MUC + MUM ) ) ,( ( MUM + MUM ) * ( DS - RMSe ) ) ) )", "obj1": 0.22592592592592592, "obj2": 0.671211149277601}, {"determining": "( ( Max( RRS,ACS ) - PN ) - ( DDR * Min( AMS ,Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - Max( RRSe,Min( ( CS / MLU ) ,( DS / ( ( MUR * ( RMSe / MLU ) ) + RMSe ) ) ) ) ) + ( RRSe - MLU ) )", "obj1": 0.22037037037037038, "obj2": 0.6740012717003959}, {"determining": "Max( ( FirstVNF_RAM / ( ( Const * ( Min( BR ,( ARS + RRS ) ) + Min( FirstVNF_Mem ,DDR ) ) ) * ( FirstVNF_CPU_Server / PN ) ) ),( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) )", "choosing": "Max( ( Max( ( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( Min( DS ,MUC ) ,( DS / RRSe ) ) ) ) ),Max( MUM,RCSe ) ) + Max( ( CS * MLU ),Min( MUM ,CS ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( ( MUM / DS ) / MUC ) + RCSe ) ) )", "obj1": 0.1037037037037037, "obj2": 0.8473408105307324}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( ( ( ( Const * CRS ) / ( Const * ( Min( BR ,( ARS + RRS ) ) + Min( FirstVNF_Mem ,DDR ) ) ) ) + ( ( BR * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( Min( DS ,MUC ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.1648148148148148, "obj2": 0.739562957618667}, {"determining": "( Min( CRS ,Max( ARS,BR ) ) + ( CRS + BR ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( Min( DS ,MUC ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.2351851851851852, "obj2": 0.6591724959006369}, {"determining": "( Max( Min( ( RRS - FirstVNF_CPU ) ,DDR ),Max( ( FirstVNF_RAM - FirstVNF_Mem ),( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) / ( Min( ( CRS * Const ) ,Max( RRS,Const ) ) + Min( Min( MRS ,FirstVNF_Mem ) ,( ACS / PN ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / CS ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.17037037037037037, "obj2": 0.7304416355287372}, {"determining": "( Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server * MDR ) ) * Min( Min( Min( ( AMS + ARS ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),( Min( CS ,RCSe ) * ( DS / ( Min( MUC ,RRSe ) / MUC ) ) ) ) ) )", "obj1": 0.2, "obj2": 0.6978115127844983}, {"determining": "Max( ( FirstVNF_RAM / ( FirstVNF_CPU * ( ( FirstVNF_CPU / RRS ) / FirstVNF_CPU_Server ) ) ),( ( RRS + ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) )", "choosing": "( ( MUR / ( MLU * Min( DS ,Min( MUC ,Max( RRSe,CS ) ) ) ) ) / ( MUC * DS ) )", "obj1": 0.11481481481481481, "obj2": 0.8242993470717234}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) - ( Min( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ,( PN / ( MDR * FirstVNF_Mem ) ) ) * AMS ) )", "choosing": "Min( ( Min( Max( RRSe,MUM ) ,DS ) * RMSe ) ,( ( MUC - MUM ) * RRSe ) )", "obj1": 0.22962962962962963, "obj2": 0.6676261594461511}, {"determining": "( FirstVNF_CPU_Server * ( ( CRS / MRS ) * FirstVNF_Mem ) )", "choosing": "( Min( Max( MUM,RRSe ) ,( ( MUC - MUM ) * RRSe ) ) / ( Min( Max( RRSe,MUM ) ,DS ) * RMSe ) )", "obj1": 0.2222222222222222, "obj2": 0.6735510505516988}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) ) ,( Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * MUM ) ,( MUR * RRSe ) ),( ( CS + RCSe ) * Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( Min( DS ,MUC ) ,( DS / RRSe ) ) ) ) ) ) )", "obj1": 0.1425925925925926, "obj2": 0.7648710848991608}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( ( ( ( Const * CRS ) / ( Const * ( Min( BR ,( ARS + RRS ) ) + Min( FirstVNF_Mem ,DDR ) ) ) ) + ( ( BR * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( Min( DS ,MUC ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.2351851851851852, "obj2": 0.6591724959006369}, {"determining": "( ( FirstVNF_CPU * BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) ) ,( Max( ( BR * AMS ),Min( Max( Max( ( AMS + Const ),RRS ),MDR ) ,Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( BR / FirstVNF_CPU_Server ) ) ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + Max( ( ( CS * Max( RRSe,MUC ) ) / CS ),Min( Max( ( ( MUM + RCSe ) + RCSe ),MLU ) ,( RRSe * RMSe ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "( Min( ( Max( MDR,DDR ) * ( RRS * FirstVNF_RAM_Server ) ) ,Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( BR / FirstVNF_CPU_Server ) ) ) * Max( Max( RRS,Const ),( Min( BR ,FirstVNF_Mem ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( RRSe,Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.20925925925925926, "obj2": 0.6843337311326501}, {"determining": "Max( ( FirstVNF_RAM / Min( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU / FirstVNF_Mem ) ) ,Max( RRS,Const ) ) ),( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) )", "choosing": "Max( ( Max( Max( RMSe,DS ),Max( MUM,RCSe ) ) + Max( ( CS * MLU ),Min( MUM ,CS ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( ( MUM / MUR ) / MUC ) + RCSe ) ) )", "obj1": 0.16111111111111112, "obj2": 0.754336005530028}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7202591477210795}, {"determining": "( ( ( ( ( Min( ( ( FirstVNF_CPU - FirstVNF_CPU ) * FirstVNF_CPU_Server ) ,AMS ) / FirstVNF_RAM ) / PN ) / ARS ) / ( Const * PN ) ) + ( ( AMS * FirstVNF_CPU_Server ) / ( Min( PN ,( FirstVNF_RAM / FirstVNF_CPU ) ) / RRS ) ) )", "choosing": "( ( ( ( Min( DS ,MUM ) * Min( ( Min( ( CS - MLU ) ,( DS / RRSe ) ) + MUR ) ,Min( DS ,MUC ) ) ) / Max( ( MLU * RCSe ),( RCSe / ( DS / RRSe ) ) ) ) - CS ) * Min( RMSe ,Min( DS ,MUC ) ) )", "obj1": 0.12407407407407407, "obj2": 0.800002828524842}, {"determining": "( FirstVNF_CPU_Server * ( ( Const + MDR ) + Min( Min( Min( ( AMS + ARS ) ,Max( BR,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem - FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( RCSe - RMSe ) * MUC ) / ( MLU / MUR ) )", "obj1": 0.22407407407407406, "obj2": 0.6733932642298567}, {"determining": "( ( ( Const * CRS ) / ( Const * ( Min( BR ,( ARS + RRS ) ) + Min( FirstVNF_Mem ,DDR ) ) ) ) + ( ( BR * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7202591477210795}, {"determining": "( Min( ( Max( MDR,DDR ) * ( RRS * FirstVNF_RAM_Server ) ) ,Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( BR / FirstVNF_CPU_Server ) ) ) * Max( Max( RRS,Const ),( Min( BR ,FirstVNF_Mem ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR / ( MLU * Min( DS ,MUR ) ) ) / ( MUC * DS ) )", "obj1": 0.11296296296296296, "obj2": 0.8253404395750024}, {"determining": "( ( Min( ( BR - ( Const - FirstVNF_RAM ) ) ,MDR ) * FirstVNF_Mem_Server ) + ( ( ( FirstVNF_CPU + AMS ) / FirstVNF_Mem_Server ) / ( FirstVNF_CPU / RRS ) ) )", "choosing": "( ( ( ( RCSe / ( RMSe - Min( ( MUR / RRSe ) ,( DS / Min( MLU ,RCSe ) ) ) ) ) / ( CS + RCSe ) ) - DS ) + ( RRSe / DS ) )", "obj1": 0.18333333333333332, "obj2": 0.7202591477210795}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( BR,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - MRS ) ) ,( Max( ( ( Const - ( FirstVNF_RAM - CRS ) ) * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( ( ( RRSe * MUM ) - Min( MUR ,DS ) ) / ( ( CS - MUM ) + Max( MUM,MLU ) ) ) + Min( Max( Min( DS ,CS ),( MUC + MUM ) ) ,( ( MUM + MUM ) * ( DS - RMSe ) ) ) )", "obj1": 0.22592592592592592, "obj2": 0.671211149277601}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( BR,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * MUM ) ,( MUR * RRSe ) ),( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "( Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server * MDR ) ) * Min( Min( Min( ( AMS + ARS ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - MDR ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),( ( MLU * RRSe ) * ( DS / ( Min( MUC ,RRSe ) / MUC ) ) ) ) ) )", "obj1": 0.25555555555555554, "obj2": 0.6460679736115484}, {"determining": "( Max( FirstVNF_RAM_Server,( BR + FirstVNF_CPU ) ) * Min( Min( Min( ( AMS + ARS ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( ( DDR * RRS ) ,Max( AMS,FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUR / ( MLU * RRSe ) ) / Max( ( ( ( ( Min( CS ,Max( MUR,MUR ) ) - CS ) - MUM ) - ( RMSe - CS ) ) * ( RRSe * MLU ) ),MLU ) )", "obj1": 0.13703703703703704, "obj2": 0.7688486505875236}, {"determining": "Max( ( FirstVNF_RAM / ( FirstVNF_CPU * ( FirstVNF_CPU_Server / PN ) ) ),( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) )", "choosing": "( ( MUR / ( MLU * Min( DS ,MUR ) ) ) / ( MUC * DS ) )", "obj1": 0.11481481481481481, "obj2": 0.8242993470717234}, {"determining": "( Min( Max( Max( ( ( RRS + ( CRS + RRS ) ) - Min( ( PN / BR ) ,Max( ( Const / DDR ),BR ) ) ),RRS ),MDR ) ,Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( BR / FirstVNF_CPU_Server ) ) ) * Max( ( ( FirstVNF_Mem_Server / MDR ) * ( DDR - RRS ) ),( Min( BR ,FirstVNF_Mem ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( Max( RRSe,MUR ) / ( ( RCSe + MUM ) * ( Max( ( CS * MLU ),Min( MUM ,CS ) ) / MLU ) ) )", "obj1": 0.1574074074074074, "obj2": 0.755483157509036}, {"determining": "( ( ( Min( MRS ,PN ) / ARS ) / ( Const * PN ) ) + ( ( AMS * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / ( RRS / Min( FirstVNF_Mem ,DDR ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.7113857391524459}, {"determining": "( ( ( ( AMS + MDR ) / ARS ) / ( Const * PN ) ) + ( ( AMS - FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "( ( CS - MLU ) + ( MLU - Max( RRSe,Min( ( MLU / CS ) ,( Max( DS,CS ) / RRSe ) ) ) ) )", "obj1": 0.20925925925925926, "obj2": 0.6843337311326501}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * ( ( Const + MDR ) + ( CRS / FirstVNF_RAM ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( RRSe,Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.20925925925925926, "obj2": 0.6843337311326501}, {"determining": "( Max( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( DDR - MDR ) ),Max( ( FirstVNF_RAM - FirstVNF_Mem ),Max( MRS,FirstVNF_CPU_Server ) ) ) / ( Min( ( Const * CRS ) ,Max( FirstVNF_CPU_Server,RRS ) ) + Min( Min( MRS ,FirstVNF_Mem ) ,( ACS / PN ) ) ) )", "choosing": "( ( ( RMSe - Min( MUR ,DS ) ) / ( ( CS - MUM ) + Max( MUM,MLU ) ) ) + Min( Max( Min( DS ,CS ),( MUC + MUM ) ) ,( ( MUM + MUM ) * ( DS - RMSe ) ) ) )", "obj1": 0.21666666666666667, "obj2": 0.682992984491378}, {"determining": "( Max( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( DDR - MDR ) ),Max( ( FirstVNF_RAM - FirstVNF_Mem ),Max( MRS,FirstVNF_CPU_Server ) ) ) / ( Min( ( CRS * Const ) ,Max( FirstVNF_CPU_Server,RRS ) ) + Min( Min( MRS ,FirstVNF_Mem ) ,( ACS / PN ) ) ) )", "choosing": "( ( ( ( RRSe * MUM ) - Min( MUR ,DS ) ) / ( ( CS - MUM ) + Max( MUM,MLU ) ) ) + Min( Max( Min( DS ,CS ),( MUC + MUM ) ) ,( ( MUM + MUM ) * ( DS - RMSe ) ) ) )", "obj1": 0.22592592592592592, "obj2": 0.671211149277601}, {"determining": "( ( ( Const * CRS ) + ( Const * ( ( MDR / FirstVNF_Mem ) + Min( FirstVNF_Mem ,DDR ) ) ) ) + ( ( BR * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Min( ( MLU * RMSe ) ,Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7202591477210795}, {"determining": "( ( ( Const + MDR ) + ( CRS / FirstVNF_RAM ) ) * Min( Min( Min( ( AMS + ARS ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( RRSe,Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.20925925925925926, "obj2": 0.6843337311326501}, {"determining": "( Max( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( DDR - MDR ) ),Max( ( FirstVNF_RAM - FirstVNF_Mem ),Max( MRS,FirstVNF_CPU_Server ) ) ) / ( Min( ( CRS * Const ) ,Max( FirstVNF_CPU_Server,RRS ) ) + Min( Min( MRS ,FirstVNF_Mem ) ,( ACS / PN ) ) ) )", "choosing": "( ( ( ( RRSe * MUM ) - Min( MUR ,DS ) ) / ( ( CS - MUM ) + Max( MUM,MLU ) ) ) + Min( Max( Min( DS ,CS ),( MUC + MUM ) ) ,( ( MUM + MUM ) * ( DS - RMSe ) ) ) )", "obj1": 0.22592592592592592, "obj2": 0.671211149277601}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * ( Max( Const,MDR ) + ( CRS / FirstVNF_RAM ) ) ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,( ( FirstVNF_Mem_Server / BR ) + AMS ) ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU / Max( Min( ( Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,Min( RRSe ,MLU ) ) ) * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / CS ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.17777777777777778, "obj2": 0.7207151071387062}, {"determining": "( Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server * MDR ) ) * Min( Min( ( ( Min( MRS ,PN ) / ARS ) / ( Const * PN ) ) ,( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - ( Max( AMS,FirstVNF_CPU ) * ( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU / Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),( ( ( MUR / ( ( MUR + MUC ) / Min( RMSe ,RMSe ) ) ) - RRSe ) - MUC ) ) ) )", "obj1": 0.24444444444444444, "obj2": 0.6481847197539339}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * ( ( Const + MDR ) + ( CRS / FirstVNF_RAM ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( RRSe,Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.20925925925925926, "obj2": 0.6843337311326501}, {"determining": "Max( Max( Min( ( AMS + BR ) ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ),( ( BR + BR ) / ( ARS - DDR ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "( ( ( Min( BR ,PN ) / ARS ) / ( ( Min( RRS ,Const ) * ACS ) * PN ) ) + ( ( AMS * FirstVNF_CPU_Server ) / Min( MDR ,AMS ) ) )", "choosing": "( ( ( ( Min( DS ,MUM ) * Min( ( RCSe + MUR ) ,Min( DS ,MUC ) ) ) / Max( ( MUC * RCSe ),( RMSe / ( ( Min( RMSe ,RCSe ) * RCSe ) + Max( ( RRSe * RMSe ),MLU ) ) ) ) ) - CS ) * Min( CS ,Min( DS ,MUC ) ) )", "obj1": 0.11851851851851852, "obj2": 0.8003743714136429}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( ( ( ( Const * CRS ) / ( Const * ( Min( BR ,( ARS + RRS ) ) + Min( FirstVNF_Mem ,DDR ) ) ) ) + ( ( BR * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( Min( DS ,MUC ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.2351851851851852, "obj2": 0.6591724959006369}, {"determining": "( Min( Max( Max( ( RRS + Const ),RRS ),MDR ) ,Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( BR / FirstVNF_CPU_Server ) ) ) * Max( ( Min( FirstVNF_CPU_Server ,ACS ) * ( DDR - RRS ) ),( Min( BR ,FirstVNF_Mem ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RRSe * MUM ) - Min( MUR ,DS ) ) / ( ( CS - MUM ) + Max( MUM,MLU ) ) ) + Min( Max( Min( DS ,CS ),( MUC + MUM ) ) ,( ( MUM + MUM ) * ( DS - RMSe ) ) ) )", "obj1": 0.22592592592592592, "obj2": 0.671211149277601}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * Min( Min( ( AMS + ARS ) ,Max( BR,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - PN ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( RRSe,Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.20925925925925926, "obj2": 0.6843337311326501}, {"determining": "( Min( PN ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( BR,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - ( DDR * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * MUM ) ,( MUR * RRSe ) ),( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ,FirstVNF_CPU_Server ) * ( ( ( ( Const + ( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) + ( CRS / FirstVNF_RAM ) ) + MDR ) + ( CRS / FirstVNF_RAM ) ) )", "choosing": "( ( ( RCSe - RMSe ) * CS ) / ( Min( Max( ( DS / ( Min( MUC ,RRSe ) / MUC ) ),MUM ) ,( MUM + ( ( RCSe - RMSe ) * CS ) ) ) * RMSe ) )", "obj1": 0.22777777777777777, "obj2": 0.6698339155747728}, {"determining": "( Min( CRS ,Max( ARS,BR ) ) + Min( Max( ( FirstVNF_RAM_Server - BR ),( ACS * ARS ) ) ,( ( FirstVNF_RAM_Server - BR ) * ( FirstVNF_Mem / Const ) ) ) )", "choosing": "( ( MUR / ( MLU * Min( DS ,MUR ) ) ) / ( MUC * DS ) )", "obj1": 0.11481481481481481, "obj2": 0.8242993470717234}, {"determining": "Max( ( FirstVNF_RAM / ( FirstVNF_CPU * ( FirstVNF_CPU_Server / PN ) ) ),( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) )", "choosing": "Max( ( ( MUC - Min( ( ( DS / RMSe ) * Min( CS ,( RCSe / ( MUC - RMSe ) ) ) ) ,( RCSe / ( MUC - RMSe ) ) ) ) * Max( DS,CS ) ),( Min( CS ,MUM ) / ( CS * MUM ) ) )", "obj1": 0.2388888888888889, "obj2": 0.6552471684249174}, {"determining": "( Min( ( Max( MDR,DDR ) * ( RRS * FirstVNF_RAM_Server ) ) ,Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( BR / FirstVNF_CPU_Server ) ) ) * Max( ( RRS / Min( FirstVNF_Mem ,DDR ) ),( Min( BR ,FirstVNF_Mem ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),( RRSe - MLU ) ) ) )", "obj1": 0.21851851851851853, "obj2": 0.6801956687465002}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( Min( Max( AMS,FirstVNF_CPU ) ,( ( FirstVNF_Mem / RRS ) * RRS ) ),FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( ( Min( DS ,MUM ) * Min( ( DS + MUR ) ,Min( DS ,MUC ) ) ) / Max( ( MLU * RCSe ),( RMSe / MUR ) ) ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.2074074074074074, "obj2": 0.6900301886026632}, {"determining": "( Max( BR,( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * ( ( Const + MDR ) + ( CRS / FirstVNF_RAM ) ) ) ) - ( CRS + BR ) )", "choosing": "Max( Max( ( DS / ( CS * MUM ) ),DS ),( RCSe / RMSe ) )", "obj1": 0.1388888888888889, "obj2": 0.7673930531741495}, {"determining": "( ( Const + MDR ) * ( ( ARS + BR ) + ( CRS / FirstVNF_RAM ) ) )", "choosing": "( ( Min( ( MLU + Max( RRSe,RRSe ) ) ,( RMSe * Min( MUR ,MUR ) ) ) + ( ( RMSe + MUR ) - Min( RMSe ,RMSe ) ) ) / ( Min( Max( MUM,RRSe ) ,( MUM + ( Min( ( MLU + Min( MUC ,RRSe ) ) ,( RMSe * Min( MUR ,MUR ) ) ) + ( ( RMSe + MUR ) * Min( RMSe ,RMSe ) ) ) ) ) * RMSe ) )", "obj1": 0.16296296296296298, "obj2": 0.7541130504340875}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * ( Max( Const,( DDR - FirstVNF_CPU ) ) + ( FirstVNF_Mem / FirstVNF_RAM ) ) ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( ( Min( ( MUR * RRSe ) ,( RMSe * RRSe ) ) + Min( ( CS / MLU ) ,( RRSe / RRSe ) ) ) * RRSe ) ,( MUR * RRSe ) ),Min( ( ( DS - RRSe ) + ( RRSe + MUM ) ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.1925925925925926, "obj2": 0.7037647594884573}, {"determining": "( Min( ( Max( MDR,DDR ) * ( RRS * FirstVNF_RAM_Server ) ) ,Min( Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ,( BR / FirstVNF_CPU_Server ) ) ) * Max( Max( RRS,Const ),( Min( BR ,FirstVNF_Mem ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - ( RRSe + MUM ) ) )", "obj1": 0.2537037037037037, "obj2": 0.6471225670320588}], "8": [{"determining": "( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) - ( Min( Min( Min( ( CRS / CRS ) ,RRS ) ,FirstVNF_RAM_Server ) ,( PN / ( ( CRS / MRS ) * FirstVNF_Mem ) ) ) * AMS ) )", "choosing": "Min( Max( MUM,RRSe ) ,Min( ( MUM + ( MUR - Min( ( ( ( DS / RMSe ) + MUR ) + RMSe ) ,MUC ) ) ) ,Max( RCSe,( MUC - MUR ) ) ) )", "obj1": 0.662962962962963, "obj2": 0.32001196441563856}, {"determining": "Min( Min( ( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem ) ) ,FirstVNF_RAM_Server ) ,Max( Const,RRS ) )", "choosing": "Max( ( ( Max( CS,RRSe ) / ( ( CS + RMSe ) / Min( CS ,MLU ) ) ) + Max( ( ( CS - ( Min( ( DS + RRSe ) ,RMSe ) + Max( DS,DS ) ) ) / ( MUR / MLU ) ),Min( MUM ,CS ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( MUR + MUC ) / Min( RMSe ,RMSe ) ) ) )", "obj1": 0.13148148148148148, "obj2": 0.7736690903842448}, {"determining": "( ( ( BR * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) + Max( FirstVNF_RAM,CRS ) )", "choosing": "( ( Min( RMSe ,Min( Max( RMSe,CS ) ,MUC ) ) - MLU ) + ( MLU - Max( Min( ( CS / MLU ) ,( DS / RRSe ) ),RRSe ) ) )", "obj1": 0.20925925925925926, "obj2": 0.6843337311326501}, {"determining": "( ( ( Const + MDR ) + ( CRS / FirstVNF_RAM ) ) * Min( Min( Min( Max( ARS,FirstVNF_CPU_Server ) ,( ( RRS * BR ) + ARS ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( DS / MLU ) )", "obj1": 0.20925925925925926, "obj2": 0.6843337311326501}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( ARS,BR ) ) ,( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) ) ,Max( DDR,( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) + ( FirstVNF_Mem * ( BR - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( CS * MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),( ( CS + Min( ( MUM * CS ) ,MUC ) ) * Max( RCSe,RMSe ) ) ) ) )", "obj1": 0.15185185185185185, "obj2": 0.7572886130464167}, {"determining": "( Min( Max( Max( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) + ( CRS + RRS ) ) - Min( ( PN / BR ) ,Max( ( Const / DDR ),BR ) ) ),RRS ),MDR ) ,Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( BR / FirstVNF_CPU_Server ) ) ) * Max( ( ( FirstVNF_Mem_Server / MDR ) * ( DDR - RRS ) ),( Min( BR ,FirstVNF_Mem ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( Max( RRSe,MUR ) / Max( ( ( RCSe + MUM ) * ( MUR / RCSe ) ),MLU ) )", "obj1": 0.13703703703703704, "obj2": 0.7688486505875236}, {"determining": "Max( ( FirstVNF_RAM / ( FirstVNF_CPU * ( FirstVNF_CPU_Server / PN ) ) ),( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) )", "choosing": "Max( ( Max( Max( RMSe,DS ),Max( MUM,RCSe ) ) + Max( ( CS * MLU ),Min( MUM ,CS ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( ( MUM / DS ) / MUC ) + RCSe ) ) )", "obj1": 0.1037037037037037, "obj2": 0.8473408105307324}, {"determining": "( ( ( Min( MRS ,PN ) / ARS ) / Max( ( FirstVNF_Mem + FirstVNF_Mem ),PN ) ) + ( ( AMS * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "( ( ( ( Min( DS ,MUM ) * Min( ( RCSe + RCSe ) ,Min( DS ,MUC ) ) ) / Max( ( MLU * RCSe ),( RMSe / MUR ) ) ) - CS ) * Min( ( MUM * RRSe ) ,Min( DS ,MUC ) ) )", "obj1": 0.11851851851851852, "obj2": 0.8003743714136429}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,( Min( ( Min( FirstVNF_RAM ,ACS ) - ( MRS - PN ) ) ,FirstVNF_CPU_Server ) * ( Max( Const,( ARS - FirstVNF_CPU ) ) + ( CRS / FirstVNF_RAM ) ) ) ) ,( Min( RRS ,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RRSe * Max( Min( ( MUR * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) ,( MUR * RRSe ) ),Min( ( RCSe + ( ( RMSe + DS ) + ( RMSe * Max( DS,CS ) ) ) ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.17777777777777778, "obj2": 0.7207151071387062}, {"determining": "Max( ( Max( RRS,ACS ) * Min( FirstVNF_CPU_Server ,ACS ) ),( Const / MDR ) )", "choosing": "( ( RRSe + MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR + ( Min( CS ,MUM ) / ( RRSe * Max( RRSe,RRSe ) ) ) ) ),( RCSe * DS ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "( ( ( Const + MDR ) + ( ( FirstVNF_RAM_Server + ARS ) * FirstVNF_RAM ) ) * ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( Min( RRSe ,MLU ) + ( Max( RRSe,( ( ( RRSe * ( MUM / ( MLU + MUM ) ) ) - ( MUC / Min( ( MUM / RRSe ) ,RCSe ) ) ) - Min( RCSe ,MLU ) ) ) - MLU ) )", "obj1": 0.20925925925925926, "obj2": 0.6843337311326501}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - ( FirstVNF_CPU_Server * ACS ) ) ) ,( Max( ( BR * AMS ),Min( Max( Max( ( ARS - ARS ),RRS ),MDR ) ,Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( BR / FirstVNF_CPU_Server ) ) ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe - MUM ) ,( MUR * RRSe ) ),( ( RRSe * RCSe ) / MUM ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "Max( ( FirstVNF_RAM / ( FirstVNF_CPU * ( FirstVNF_CPU_Server / PN ) ) ),( ( ( Min( RRS ,Const ) * ACS ) - ( MRS + ACS ) ) - Min( FirstVNF_CPU_Server ,ACS ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( MUC ,MUM ),( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "( Max( BR,FirstVNF_Mem ) - ( ( MDR - FirstVNF_RAM_Server ) / FirstVNF_RAM ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( RRSe,Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.20925925925925926, "obj2": 0.6843337311326501}, {"determining": "( ( ( Min( ( CRS / FirstVNF_RAM ) ,PN ) / ARS ) / ( Const * PN ) ) + ( ( AMS * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "( ( ( ( Min( DS ,MUM ) * Min( ( DS + MUR ) ,Min( DS ,MUC ) ) ) / Max( ( MLU * RCSe ),( RMSe / MUR ) ) ) - CS ) * Min( RMSe ,Min( DS ,MUC ) ) )", "obj1": 0.11666666666666667, "obj2": 0.8026241645805308}, {"determining": "Max( ( ( FirstVNF_CPU * ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) / FirstVNF_RAM ),( ( ( FirstVNF_Mem / ( ARS / ARS ) ) / FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,ACS ) ) )", "choosing": "Max( ( ( DS * ( RMSe - MUR ) ) + Max( ( CS * MLU ),Min( MUM ,CS ) ) ),( Max( ( RCSe / RMSe ),( RCSe / MUC ) ) * ( ( ( MUM / DS ) / MUC ) + RCSe ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8425867877620832}, {"determining": "( ( Max( ARS,( DDR / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) - PN ) - ( ( MDR - FirstVNF_RAM_Server ) / FirstVNF_RAM ) )", "choosing": "( ( MUR / ( ( CS / CS ) * Min( ( ( RCSe * MUC ) / ( Max( CS,DS ) - RCSe ) ) ,MUR ) ) ) / ( RCSe * DS ) )", "obj1": 0.10740740740740741, "obj2": 0.8319068328656971}, {"determining": "Max( ( FirstVNF_RAM / ( ( FirstVNF_CPU - BR ) / FirstVNF_RAM ) ),( ( ( Min( FirstVNF_Mem_Server ,Const ) * ACS ) - ( MRS + ACS ) ) - Min( FirstVNF_CPU_Server ,ACS ) ) )", "choosing": "( ( RRSe - MLU ) + ( RRSe - Max( CS,( ( CS + RCSe ) * ( MLU * RRSe ) ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "Min( Min( ( FirstVNF_RAM_Server / ( PN * MRS ) ) ,FirstVNF_RAM_Server ) ,Max( Max( Min( ( AMS + BR ) ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ),( ( BR + BR ) / ( ARS - DDR ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ) ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.13518518518518519, "obj2": 0.7689079332089656}, {"determining": "( ( ( Const * CRS ) / ( Const * ( Min( BR ,( ARS + RRS ) ) + Min( FirstVNF_Mem ,DDR ) ) ) ) + ( ( BR * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "Max( ( Max( Max( RMSe,DS ),Max( MUM,Max( ( RMSe + Max( ( CS * MLU ),Min( MUM ,CS ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( MUR + MUC ) / Min( RMSe ,RMSe ) ) ) ) ) ) + Max( ( CS * MLU ),Min( MUM ,CS ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( ( MUM / DS ) / MUC ) + RCSe ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8425867877620832}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * Min( Min( ( AMS + ARS ) ,FirstVNF_Mem ) ,( Max( RRS,ACS ) - PN ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( ( RMSe * RRSe ),Min( ( CS / MLU ) ,( Min( MUR ,DS ) / RRSe ) ) ) ) )", "obj1": 0.17592592592592593, "obj2": 0.7233731181402024}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,Max( RRS,( Const + MDR ) ) ) ) - Min( ( DDR * RRS ) ,Max( AMS,FirstVNF_CPU ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( Max( ( MLU + MUM ),( RCSe + DS ) ) * RRSe ) ,( MUM * RRSe ) ),Min( ( CS / ( MUC - RMSe ) ) ,( DS / ( ( Max( MLU,MUM ) - MUM ) + Max( ( RMSe / CS ),RMSe ) ) ) ) ) ) )", "obj1": 0.2037037037037037, "obj2": 0.691550943861389}, {"determining": "Max( ( FirstVNF_RAM / ( ( Const * ( Min( BR ,( ARS + RRS ) ) + Min( FirstVNF_Mem ,DDR ) ) ) * ( FirstVNF_CPU_Server / PN ) ) ),( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) )", "choosing": "Max( ( Max( ( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( Min( DS ,MUC ) ,( DS / RRSe ) ) ) ) ),Max( MUM,RCSe ) ) + Max( ( CS * MLU ),Min( MUM ,CS ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( ( MUM / DS ) / MUC ) + RCSe ) ) )", "obj1": 0.1037037037037037, "obj2": 0.8473408105307324}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( ( ( ( Const * CRS ) / ( Const * ( Min( BR ,( ARS + RRS ) ) + Min( FirstVNF_Mem ,DDR ) ) ) ) + ( ( BR * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( Min( DS ,MUC ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.1648148148148148, "obj2": 0.739562957618667}, {"determining": "( Max( Min( ( RRS - FirstVNF_CPU ) ,DDR ),Max( ( FirstVNF_RAM - FirstVNF_Mem ),( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) / ( Min( ( CRS * Const ) ,Max( RRS,Const ) ) + Min( Min( MRS ,FirstVNF_Mem ) ,( ACS / PN ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / CS ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.17037037037037037, "obj2": 0.7304416355287372}, {"determining": "( Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server * MDR ) ) * Min( Min( Min( ( AMS + ARS ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),( Min( CS ,RCSe ) * ( DS / ( Min( MUC ,RRSe ) / MUC ) ) ) ) ) )", "obj1": 0.2, "obj2": 0.6978115127844983}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) ) ,( Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * MUM ) ,( MUR * RRSe ) ),( ( CS + RCSe ) * Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( Min( DS ,MUC ) ,( DS / RRSe ) ) ) ) ) ) )", "obj1": 0.1425925925925926, "obj2": 0.7648710848991608}, {"determining": "( ( FirstVNF_CPU * BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) ) ,( Max( ( BR * AMS ),Min( Max( Max( ( AMS + Const ),RRS ),MDR ) ,Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( BR / FirstVNF_CPU_Server ) ) ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + Max( ( ( CS * Max( RRSe,MUC ) ) / CS ),Min( Max( ( ( MUM + RCSe ) + RCSe ),MLU ) ,( RRSe * RMSe ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "( Min( ( Max( MDR,DDR ) * ( RRS * FirstVNF_RAM_Server ) ) ,Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( BR / FirstVNF_CPU_Server ) ) ) * Max( Max( RRS,Const ),( Min( BR ,FirstVNF_Mem ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( RRSe,Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.20925925925925926, "obj2": 0.6843337311326501}, {"determining": "Max( ( FirstVNF_RAM / Min( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU / FirstVNF_Mem ) ) ,Max( RRS,Const ) ) ),( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) )", "choosing": "Max( ( Max( Max( RMSe,DS ),Max( MUM,RCSe ) ) + Max( ( CS * MLU ),Min( MUM ,CS ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( ( MUM / MUR ) / MUC ) + RCSe ) ) )", "obj1": 0.16111111111111112, "obj2": 0.754336005530028}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( BR,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * MUM ) ,( MUR * RRSe ) ),( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "( Max( FirstVNF_RAM_Server,( BR + FirstVNF_CPU ) ) * Min( Min( Min( ( AMS + ARS ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( ( DDR * RRS ) ,Max( AMS,FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUR / ( MLU * RRSe ) ) / Max( ( ( ( ( Min( CS ,Max( MUR,MUR ) ) - CS ) - MUM ) - ( RMSe - CS ) ) * ( RRSe * MLU ) ),MLU ) )", "obj1": 0.13703703703703704, "obj2": 0.7688486505875236}, {"determining": "( Min( Max( Max( ( ( RRS + ( CRS + RRS ) ) - Min( ( PN / BR ) ,Max( ( Const / DDR ),BR ) ) ),RRS ),MDR ) ,Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( BR / FirstVNF_CPU_Server ) ) ) * Max( ( ( FirstVNF_Mem_Server / MDR ) * ( DDR - RRS ) ),( Min( BR ,FirstVNF_Mem ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( Max( RRSe,MUR ) / ( ( RCSe + MUM ) * ( Max( ( CS * MLU ),Min( MUM ,CS ) ) / MLU ) ) )", "obj1": 0.1574074074074074, "obj2": 0.755483157509036}, {"determining": "( ( ( ( AMS + MDR ) / ARS ) / ( Const * PN ) ) + ( ( AMS - FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "( ( CS - MLU ) + ( MLU - Max( RRSe,Min( ( MLU / CS ) ,( Max( DS,CS ) / RRSe ) ) ) ) )", "obj1": 0.20925925925925926, "obj2": 0.6843337311326501}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * ( ( Const + MDR ) + ( CRS / FirstVNF_RAM ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( RRSe,Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.20925925925925926, "obj2": 0.6843337311326501}, {"determining": "( ( ( Const + MDR ) + ( CRS / FirstVNF_RAM ) ) * Min( Min( Min( ( AMS + ARS ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( RRSe,Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.20925925925925926, "obj2": 0.6843337311326501}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * ( Max( Const,MDR ) + ( CRS / FirstVNF_RAM ) ) ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,( ( FirstVNF_Mem_Server / BR ) + AMS ) ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU / Max( Min( ( Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,Min( RRSe ,MLU ) ) ) * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / CS ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.17777777777777778, "obj2": 0.7207151071387062}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * ( ( Const + MDR ) + ( CRS / FirstVNF_RAM ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( RRSe,Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.20925925925925926, "obj2": 0.6843337311326501}, {"determining": "Max( Max( Min( ( AMS + BR ) ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ),( ( BR + BR ) / ( ARS - DDR ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "( ( ( Min( BR ,PN ) / ARS ) / ( ( Min( RRS ,Const ) * ACS ) * PN ) ) + ( ( AMS * FirstVNF_CPU_Server ) / Min( MDR ,AMS ) ) )", "choosing": "( ( ( ( Min( DS ,MUM ) * Min( ( RCSe + MUR ) ,Min( DS ,MUC ) ) ) / Max( ( MUC * RCSe ),( RMSe / ( ( Min( RMSe ,RCSe ) * RCSe ) + Max( ( RRSe * RMSe ),MLU ) ) ) ) ) - CS ) * Min( CS ,Min( DS ,MUC ) ) )", "obj1": 0.11851851851851852, "obj2": 0.8003743714136429}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * Min( Min( ( AMS + ARS ) ,Max( BR,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - PN ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( RRSe,Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.20925925925925926, "obj2": 0.6843337311326501}, {"determining": "( Min( PN ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( BR,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - ( DDR * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * MUM ) ,( MUR * RRSe ) ),( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( Min( Max( AMS,FirstVNF_CPU ) ,( ( FirstVNF_Mem / RRS ) * RRS ) ),FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( ( Min( DS ,MUM ) * Min( ( DS + MUR ) ,Min( DS ,MUC ) ) ) / Max( ( MLU * RCSe ),( RMSe / MUR ) ) ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.2074074074074074, "obj2": 0.6900301886026632}, {"determining": "( ( Const + MDR ) * ( ( ARS + BR ) + ( CRS / FirstVNF_RAM ) ) )", "choosing": "( ( Min( ( MLU + Max( RRSe,RRSe ) ) ,( RMSe * Min( MUR ,MUR ) ) ) + ( ( RMSe + MUR ) - Min( RMSe ,RMSe ) ) ) / ( Min( Max( MUM,RRSe ) ,( MUM + ( Min( ( MLU + Min( MUC ,RRSe ) ) ,( RMSe * Min( MUR ,MUR ) ) ) + ( ( RMSe + MUR ) * Min( RMSe ,RMSe ) ) ) ) ) * RMSe ) )", "obj1": 0.16296296296296298, "obj2": 0.7541130504340875}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * ( Max( Const,( DDR - FirstVNF_CPU ) ) + ( FirstVNF_Mem / FirstVNF_RAM ) ) ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( ( Min( ( MUR * RRSe ) ,( RMSe * RRSe ) ) + Min( ( CS / MLU ) ,( RRSe / RRSe ) ) ) * RRSe ) ,( MUR * RRSe ) ),Min( ( ( DS - RRSe ) + ( RRSe + MUM ) ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.1925925925925926, "obj2": 0.7037647594884573}, {"determining": "( ( ( Min( MRS ,PN ) / ARS ) / ( Const * PN ) ) + ( ( AMS * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ) ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.13518518518518519, "obj2": 0.7689079332089656}, {"determining": "Min( Min( ( FirstVNF_RAM_Server / ( PN * MRS ) ) ,FirstVNF_RAM_Server ) ,Max( Max( Min( ( AMS + BR ) ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ),( ( BR + BR ) / ( ARS - DDR ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( RRSe,Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.20925925925925926, "obj2": 0.6843337311326501}, {"determining": "Max( ( FirstVNF_RAM / ( FirstVNF_CPU * ( FirstVNF_CPU_Server / PN ) ) ),( ( ( Min( FirstVNF_Mem_Server ,Const ) * ACS ) - ( MRS + ACS ) ) - Min( FirstVNF_CPU_Server ,ACS ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( CS,( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * ( ( Const + MDR ) + ( CRS / FirstVNF_RAM ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( RRSe,Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.20925925925925926, "obj2": 0.6843337311326501}, {"determining": "( ( Max( RRS,ACS ) - PN ) - ( ( MDR - FirstVNF_RAM_Server ) / FirstVNF_RAM ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( RRSe,Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.20925925925925926, "obj2": 0.6843337311326501}, {"determining": "( Max( Min( ( RRS - FirstVNF_CPU ) ,DDR ),Max( ( FirstVNF_RAM - FirstVNF_Mem ),( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) / ( ARS / CRS ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( RRSe,Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.20925925925925926, "obj2": 0.6843337311326501}, {"determining": "( Max( Min( ( ACS - FirstVNF_CPU ) ,DDR ),Max( ( FirstVNF_RAM - FirstVNF_Mem ),( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) / ( Min( ( CRS * Const ) ,Max( RRS,Const ) ) + Min( Min( MRS ,FirstVNF_Mem ) ,( ACS / PN ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( MUR ,DS ) ) * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / CS ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7100041879611592}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( BR,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - MRS ) ) ,( Max( ( ( Const - ( FirstVNF_RAM - CRS ) ) * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / CS ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.17037037037037037, "obj2": 0.7304416355287372}, {"determining": "( Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server * MDR ) ) * Min( Min( Min( ( AMS + ARS ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),( Min( CS ,RCSe ) * ( DS / ( Min( MUC ,RRSe ) / MUC ) ) ) ) ) )", "obj1": 0.2, "obj2": 0.6978115127844983}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS * ARS ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) ) ,( Max( ( BR * Max( AMS,FirstVNF_CPU_Server ) ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( RRSe,Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.20925925925925926, "obj2": 0.6843337311326501}, {"determining": "( Min( FirstVNF_CPU ,BR ) * ( FirstVNF_RAM / ( FirstVNF_CPU * ( FirstVNF_CPU_Server / PN ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( ( MUC * DS ),( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "( Min( BR ,( Min( MDR ,Const ) + ( AMS + ACS ) ) ) * Min( Min( Min( ( AMS + ARS ) ,Max( BR,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU / Max( Min( ( RMSe * MUM ) ,( MUR * Min( DS ,CS ) ) ),( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "( Min( Max( Max( ( ( RRS + ( CRS + RRS ) ) - Min( ( PN / BR ) ,Max( ( Const / DDR ),BR ) ) ),RRS ),MDR ) ,Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( BR / FirstVNF_CPU_Server ) ) ) * Max( ( ( FirstVNF_Mem_Server / MDR ) * ( DDR - RRS ) ),( Min( BR ,FirstVNF_Mem ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( Min( DS ,MUC ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.13703703703703704, "obj2": 0.7688486505875236}, {"determining": "Max( Max( ( Const / FirstVNF_CPU ),FirstVNF_Mem_Server ),( ( BR + BR ) / ( ARS - DDR ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Max( RMSe,CS ),( ( CS + RCSe ) / ( DS / DS ) ) ) ) )", "obj1": 0.15, "obj2": 0.758703432434648}, {"determining": "Max( Max( Min( ( AMS + BR ) ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ),( ( BR + BR ) / ( ARS - DDR ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) ) ,( Max( ( BR * AMS ),Min( Max( Max( ( RRS + Const ),RRS ),MDR ) ,Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( BR / FirstVNF_CPU_Server ) ) ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * MUM ) ,( MUR * RRSe ) ),( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "( Min( CRS ,Max( ARS,BR ) ) + Min( Max( ( FirstVNF_RAM_Server - BR ),( ACS * ARS ) ) ,( ( FirstVNF_RAM_Server - BR ) * ( FirstVNF_Mem / Const ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / CS ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.17037037037037037, "obj2": 0.7304416355287372}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( ( ( ( Const * CRS ) / ( Const * ( Min( BR ,( ARS + RRS ) ) + Min( FirstVNF_Mem ,DDR ) ) ) ) + ( ( BR * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( RRSe,Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.20925925925925926, "obj2": 0.6843337311326501}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * Min( Min( ( AMS + ARS ) ,FirstVNF_Mem ) ,( Max( RRS,ACS ) - PN ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( ( RMSe * RRSe ),Min( ( CS / MLU ) ,( Min( MUR ,DS ) / RRSe ) ) ) ) )", "obj1": 0.17592592592592593, "obj2": 0.7233731181402024}, {"determining": "Max( ( FirstVNF_RAM / Min( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU / FirstVNF_Mem ) ) ,Max( RRS,Const ) ) ),( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) )", "choosing": "Max( ( Max( Max( RMSe,DS ),Max( MUM,RCSe ) ) + Max( ( CS * MLU ),Min( MUM ,CS ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( ( MUM / MUR ) / MUC ) + RCSe ) ) )", "obj1": 0.16111111111111112, "obj2": 0.754336005530028}, {"determining": "( Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server * MDR ) ) * ( Min( ( Max( MDR,DDR ) * ( RRS * FirstVNF_RAM_Server ) ) ,Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( BR / FirstVNF_CPU_Server ) ) ) * Max( ( RRS / Min( FirstVNF_Mem ,DDR ) ),( Min( BR ,FirstVNF_Mem ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUR / ( MLU * RRSe ) ) / Max( ( ( Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),( RRSe - MLU ) ) + MUM ) * ( MUR / MLU ) ),MLU ) )", "obj1": 0.1388888888888889, "obj2": 0.7668750437960916}, {"determining": "( Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server * MDR ) ) * Min( Min( Min( ( AMS + ARS ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( MUR / ( MLU * RRSe ) ) / Max( ( ( RCSe + MUM ) * ( MUR / MLU ) ),MLU ) )", "obj1": 0.13703703703703704, "obj2": 0.7688486505875236}, {"determining": "( ( ( Const + MDR ) + ( CRS / FirstVNF_RAM ) ) * Min( Min( Min( ( AMS + ARS ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( RRSe,Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.20925925925925926, "obj2": 0.6843337311326501}, {"determining": "Max( ( FirstVNF_RAM / ( FirstVNF_CPU * ( FirstVNF_CPU_Server / ( BR * FirstVNF_Mem ) ) ) ),Min( Max( RRS,ACS ) ,Min( FirstVNF_CPU_Server ,Max( RRS,ACS ) ) ) )", "choosing": "( Max( RCSe,Min( ( CS / MLU ) ,( DS / RRSe ) ) ) / ( MUC * Max( ( RMSe / ( RCSe * CS ) ),RRSe ) ) )", "obj1": 0.1111111111111111, "obj2": 0.8239060137450299}, {"determining": "( ( ( Min( MRS ,PN ) / ARS ) / ( ( Min( RRS ,Const ) * ACS ) * PN ) ) + FirstVNF_RAM )", "choosing": "( ( ( ( Min( DS ,MUM ) * Min( ( RCSe + MUR ) ,Min( MLU ,MUC ) ) ) / Max( ( MLU * RCSe ),( RMSe / MUR ) ) ) - CS ) * Min( CS ,Min( DS ,MUC ) ) )", "obj1": 0.12222222222222222, "obj2": 0.7959981203585883}, {"determining": "( ( ( Min( MRS ,PN ) / ARS ) / ( ( Min( Min( BR ,ARS ) ,Const ) * FirstVNF_CPU ) * PN ) ) + ( ( AMS * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "( Max( RRSe,MLU ) + ( MLU - Max( ( CS - MLU ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.20925925925925926, "obj2": 0.6843337311326501}, {"determining": "( Max( BR,FirstVNF_Mem_Server ) - ( ( MDR - FirstVNF_RAM_Server ) / Max( CRS,DDR ) ) )", "choosing": "( ( ( ( Min( DS ,MUM ) * Min( ( MUR + RCSe ) ,Min( DS ,MUC ) ) ) / Max( ( ( RCSe * MUM ) * RCSe ),( RMSe / MUR ) ) ) - CS ) * Min( CS ,Min( DS ,MUC ) ) )", "obj1": 0.11851851851851852, "obj2": 0.8003743714136429}, {"determining": "( ( ( Min( BR ,PN ) / ARS ) / ( ( Min( RRS ,Const ) * ACS ) * PN ) ) + ( ( AMS * FirstVNF_CPU_Server ) / Min( MDR ,AMS ) ) )", "choosing": "( ( ( ( Min( DS ,MUM ) * Min( ( RCSe + MUR ) ,Min( DS ,MUC ) ) ) / Max( ( MUC * RCSe ),( RMSe / ( ( Min( RMSe ,RCSe ) * RCSe ) + Max( ( RRSe * RMSe ),MLU ) ) ) ) ) - CS ) * Min( CS ,Min( DS ,MUC ) ) )", "obj1": 0.12777777777777777, "obj2": 0.7943753601829965}, {"determining": "( ( ( Min( BR ,PN ) / ARS ) / ( ( Min( RRS ,Const ) * ACS ) * PN ) ) + ( ( AMS * FirstVNF_CPU_Server ) / Min( MDR ,AMS ) ) )", "choosing": "( ( ( ( Min( DS ,MUM ) * Min( ( RCSe + MUR ) ,Min( DS ,MUC ) ) ) / Max( ( MUC * RCSe ),( RMSe / ( ( Min( RMSe ,RCSe ) * RCSe ) + Max( ( RRSe * RMSe ),MLU ) ) ) ) ) - CS ) * Min( CS ,Min( DS ,MUC ) ) )", "obj1": 0.12777777777777777, "obj2": 0.7943753601829965}, {"determining": "( ( ( Min( BR ,PN ) / ARS ) / ( ( Min( RRS ,Const ) * ACS ) * PN ) ) + ( ( AMS * FirstVNF_CPU_Server ) / Min( MDR ,AMS ) ) )", "choosing": "( ( ( ( Min( DS ,MUM ) * Min( ( RCSe + MUR ) ,Min( DS ,MUC ) ) ) / Max( ( MUC * RCSe ),( RMSe / ( ( Min( RMSe ,RCSe ) * RCSe ) + Max( ( RRSe * RMSe ),MLU ) ) ) ) ) - CS ) * Min( CS ,Min( DS ,MUC ) ) )", "obj1": 0.12777777777777777, "obj2": 0.7943753601829965}, {"determining": "( ( ( Min( BR ,PN ) / ARS ) / ( ( Min( RRS ,Const ) * ACS ) * PN ) ) + ( ( AMS * FirstVNF_CPU_Server ) / Min( MDR ,AMS ) ) )", "choosing": "( ( ( ( Min( DS ,MUM ) * Min( ( RCSe + MUR ) ,Min( DS ,MUC ) ) ) / Max( ( MUC * RCSe ),( RMSe / ( ( Min( RMSe ,RCSe ) * RCSe ) + Max( ( RRSe * RMSe ),MLU ) ) ) ) ) - CS ) * Min( CS ,Min( DS ,MUC ) ) )", "obj1": 0.12777777777777777, "obj2": 0.7943753601829965}, {"determining": "( ( ( Min( ( Min( ( ( PN + DDR ) * FirstVNF_CPU_Server ) ,AMS ) / FirstVNF_RAM ) ,PN ) / ARS ) / ( Const * PN ) ) + ( ( AMS * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "( ( MUR / ( MLU * RRSe ) ) / Max( Max( CS,( MUC - MUM ) ),( ( RCSe + MUM ) * ( MUR / MLU ) ) ) )", "obj1": 0.13703703703703704, "obj2": 0.7688486505875236}, {"determining": "( Min( FirstVNF_CPU ,MRS ) * Min( Min( ( Max( RRS,ACS ) - PN ) ,Min( ( AMS + ARS ) ,Max( BR,FirstVNF_CPU_Server ) ) ) ,( FirstVNF_CPU * ( ( FirstVNF_CPU / RRS ) / ( FirstVNF_RAM_Server * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( Max( ( RCSe + DS ),Max( Max( RRSe,MUM ),MUM ) ) * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / ( MUC - RMSe ) ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.2037037037037037, "obj2": 0.691550943861389}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( ( ( AMS + ARS ) / Max( BR,FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM + RRS ) ) ,( Max( ( BR * AMS ),Max( ACS,Max( RRS,( Const + MDR ) ) ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( ( MUR - ( MUC + ( RRSe * RRSe ) ) ) - Max( Min( ( Max( ( MLU + MUM ),( RCSe + DS ) ) * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / Max( MUC,RMSe ) ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.2037037037037037, "obj2": 0.691550943861389}, {"determining": "( ( ( Min( MRS ,PN ) / ARS ) / ( Const * PN ) ) + ( ( AMS * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / ( RRS / Min( FirstVNF_Mem ,DDR ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RRSe * Max( Min( ( MUR * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) ,( MUR * RRSe ) ),Min( ( RCSe + ( ( RMSe + DS ) + ( RMSe * Max( DS,CS ) ) ) ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.19074074074074074, "obj2": 0.7058401628568631}, {"determining": "Max( ( ( ( Min( RRS ,Const ) * ACS ) * PN ) / ( FirstVNF_CPU * ( FirstVNF_CPU_Server / PN ) ) ),( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) )", "choosing": "Max( ( Max( Max( RMSe,DS ),Max( MUM,RCSe ) ) + Max( ( CS * MLU ),( Min( DS ,MUM ) * Min( ( RCSe + MUR ) ,Min( DS ,MUC ) ) ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( ( MUM / DS ) / MUC ) + RCSe ) ) )", "obj1": 0.1037037037037037, "obj2": 0.8473408105307324}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( Min( Max( AMS,FirstVNF_CPU ) ,( ( FirstVNF_Mem / RRS ) * RRS ) ),FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( ( Min( DS ,MUM ) * Min( ( DS + MUR ) ,Min( DS ,MUC ) ) ) / Max( ( MLU * RCSe ),( RMSe / MUR ) ) ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.2074074074074074, "obj2": 0.6900301886026632}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * ( ( Const + MDR ) + ( CRS / FirstVNF_RAM ) ) ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / CS ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.17777777777777778, "obj2": 0.7207151071387062}, {"determining": "( Max( BR,( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * ( ( Const + MDR ) + ( CRS / FirstVNF_RAM ) ) ) ) - ( CRS + BR ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( Max( Min( ( MUR * RRSe ) ,( RMSe * RRSe ) ),Min( ( CS / MLU ) ,( RRSe / RRSe ) ) ) * RRSe ) ,( MUR * RRSe ) ),Min( ( RCSe + ( RRSe + MUM ) ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.1925925925925926, "obj2": 0.7037647594884573}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ( ( FirstVNF_CPU * ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) / FirstVNF_RAM ) ) ,( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * ( ( Const + MDR ) + ( CRS / FirstVNF_RAM ) ) ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) * RRSe ) ,RCSe ),Min( ( CS / CS ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.17777777777777778, "obj2": 0.7207151071387062}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * ( ( Const + MDR ) + ( CRS / FirstVNF_RAM ) ) ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / CS ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.17777777777777778, "obj2": 0.7207151071387062}, {"determining": "( Min( DDR ,BR ) * Min( ( FirstVNF_RAM - DDR ) ,( Max( ( BR * AMS ),Max( ACS,( ARS * MDR ) ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RMSe - MLU ) + ( MLU - Max( Min( ( RMSe * ( MUM - DS ) ) ,( RRSe * MUR ) ),( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "Max( Max( Min( ( ( Max( RRS,( Const * CRS ) ) - BR ) + BR ) ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ),( ( BR + BR ) / ( ARS - DDR ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( ( ( Min( DS ,Max( MUC,RRSe ) ) * Max( RMSe,DS ) ) * RRSe ),( ( CS + RCSe ) * Max( MUC,( CS + Max( Max( RCSe,MLU ),MLU ) ) ) ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "Max( Max( Min( ( AMS + BR ) ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ),( ( BR + BR ) / ( ARS - DDR ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * Min( Min( ( AMS + ARS ) ,FirstVNF_Mem ) ,( Max( RRS,( Max( Const,( ARS - FirstVNF_CPU ) ) + ( CRS / FirstVNF_RAM ) ) ) - PN ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( ( RMSe * RRSe ),Min( Max( Min( ( MUR * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ,( Min( MUR ,DS ) / RRSe ) ) ) ) )", "obj1": 0.17592592592592593, "obj2": 0.7233731181402024}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * Min( Min( ( ( Max( FirstVNF_RAM,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) / FirstVNF_Mem ) + FirstVNF_Mem_Server ) ,FirstVNF_Mem ) ,( Max( RRS,ACS ) - PN ) ) )", "choosing": "( ( Max( MLU,MLU ) / MLU ) + ( MLU - Max( ( RMSe * RRSe ),Min( ( Min( MUR ,DS ) / RRSe ) ,( CS / MLU ) ) ) ) )", "obj1": 0.17592592592592593, "obj2": 0.7233731181402024}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( ( ( ( Const * CRS ) / ( Const * ( Min( BR ,( ARS + RRS ) ) + Max( ARS,Const ) ) ) ) + ( ( BR * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( Max( MUC,RCSe ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.16666666666666666, "obj2": 0.7316306876957634}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * ( ( Const + CRS ) + ( CRS / FirstVNF_RAM ) ) ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * ( PN + ARS ) ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( ( ( Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) * RRSe ) - ( MUR * RRSe ) ),Min( ( CS / CS ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.17777777777777778, "obj2": 0.7207151071387062}, {"determining": "( ( ( Min( MRS ,PN ) / ARS ) / ( Const * PN ) ) + ( ( AMS * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( RRSe,Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.20925925925925926, "obj2": 0.6843337311326501}, {"determining": "( Max( BR,FirstVNF_Mem ) - ( ( MDR - FirstVNF_RAM_Server ) / FirstVNF_RAM ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( RRSe,Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.20925925925925926, "obj2": 0.6843337311326501}, {"determining": "( ( ( Min( ( CRS / FirstVNF_RAM ) ,PN ) / ARS ) / ( Const * PN ) ) + ( ( AMS * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "( ( ( ( Min( DS ,MUM ) * Min( ( DS + MUR ) ,Min( DS ,MUC ) ) ) / Max( ( MLU * RCSe ),( RMSe / MUR ) ) ) - CS ) * Min( RMSe ,Min( DS ,MUC ) ) )", "obj1": 0.11481481481481481, "obj2": 0.8031521982733226}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * Min( Min( ( AMS + ( Max( PN,FirstVNF_CPU_Server ) * DDR ) ) ,Max( BR,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR * MLU ) - MLU ) + ( MLU - Max( RRSe,Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.20925925925925926, "obj2": 0.6843337311326501}, {"determining": "( Max( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( DDR - MDR ) ),Max( ( FirstVNF_RAM - FirstVNF_Mem ),Max( MRS,FirstVNF_CPU_Server ) ) ) / ( Min( ( Const * CRS ) ,Max( FirstVNF_CPU_Server,RRS ) ) + Min( Min( MRS ,FirstVNF_Mem ) ,( ACS / PN ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / CS ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.17037037037037037, "obj2": 0.7304416355287372}, {"determining": "Max( ( FirstVNF_RAM / ( FirstVNF_CPU * ( FirstVNF_CPU_Server / PN ) ) ),( ( ( Min( RRS ,( Min( BR ,FirstVNF_Mem ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) * ACS ) - ( MRS + ACS ) ) - Min( FirstVNF_CPU_Server ,ACS ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( MUC ,MUM ),( ( ( MUC * DS ) + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.11296296296296296, "obj2": 0.8137275166331918}, {"determining": "Max( ( FirstVNF_RAM / ( FirstVNF_CPU * ( FirstVNF_CPU_Server / PN ) ) ),( ( ( Min( RRS ,Const ) * ACS ) - ( MRS + ACS ) ) - Min( FirstVNF_CPU_Server ,ACS ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( MUC ,MUM ),( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}], "9": [{"determining": "( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) - ( Min( Min( Min( ( CRS / CRS ) ,RRS ) ,FirstVNF_RAM_Server ) ,( PN / ( ( CRS / MRS ) * FirstVNF_Mem ) ) ) * AMS ) )", "choosing": "Min( Max( MUM,RRSe ) ,Min( ( MUM + ( MUR - Min( ( ( ( DS / RMSe ) + MUR ) + RMSe ) ,MUC ) ) ) ,Max( RCSe,( MUC - MUR ) ) ) )", "obj1": 0.662962962962963, "obj2": 0.32001196441563856}, {"determining": "Max( ( FirstVNF_RAM / ( FirstVNF_CPU * ( FirstVNF_CPU_Server / PN ) ) ),( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) )", "choosing": "Max( ( Max( Max( RMSe,DS ),Max( MUM,RCSe ) ) + Max( ( CS * MLU ),Min( MUM ,CS ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( ( MUM / DS ) / MUC ) + RCSe ) ) )", "obj1": 0.1037037037037037, "obj2": 0.8473408105307324}, {"determining": "Max( ( Max( RRS,ACS ) * Min( FirstVNF_CPU_Server ,ACS ) ),( Const / MDR ) )", "choosing": "( ( RRSe + MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR + ( Min( CS ,MUM ) / ( RRSe * Max( RRSe,RRSe ) ) ) ) ),( RCSe * DS ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - ( FirstVNF_CPU_Server * ACS ) ) ) ,( Max( ( BR * AMS ),Min( Max( Max( ( ARS - ARS ),RRS ),MDR ) ,Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( BR / FirstVNF_CPU_Server ) ) ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe - MUM ) ,( MUR * RRSe ) ),( ( RRSe * RCSe ) / MUM ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "Max( ( FirstVNF_RAM / ( FirstVNF_CPU * ( FirstVNF_CPU_Server / PN ) ) ),( ( ( Min( RRS ,Const ) * ACS ) - ( MRS + ACS ) ) - Min( FirstVNF_CPU_Server ,ACS ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( MUC ,MUM ),( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "Max( ( ( FirstVNF_CPU * ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) / FirstVNF_RAM ),( ( ( FirstVNF_Mem / ( ARS / ARS ) ) / FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,ACS ) ) )", "choosing": "Max( ( ( DS * ( RMSe - MUR ) ) + Max( ( CS * MLU ),Min( MUM ,CS ) ) ),( Max( ( RCSe / RMSe ),( RCSe / MUC ) ) * ( ( ( MUM / DS ) / MUC ) + RCSe ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8425867877620832}, {"determining": "( ( Max( ARS,( DDR / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) - PN ) - ( ( MDR - FirstVNF_RAM_Server ) / FirstVNF_RAM ) )", "choosing": "( ( MUR / ( ( CS / CS ) * Min( ( ( RCSe * MUC ) / ( Max( CS,DS ) - RCSe ) ) ,MUR ) ) ) / ( RCSe * DS ) )", "obj1": 0.10740740740740741, "obj2": 0.8319068328656971}, {"determining": "Max( ( FirstVNF_RAM / ( ( FirstVNF_CPU - BR ) / FirstVNF_RAM ) ),( ( ( Min( FirstVNF_Mem_Server ,Const ) * ACS ) - ( MRS + ACS ) ) - Min( FirstVNF_CPU_Server ,ACS ) ) )", "choosing": "( ( RRSe - MLU ) + ( RRSe - Max( CS,( ( CS + RCSe ) * ( MLU * RRSe ) ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "Min( Min( ( FirstVNF_RAM_Server / ( PN * MRS ) ) ,FirstVNF_RAM_Server ) ,Max( Max( Min( ( AMS + BR ) ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ),( ( BR + BR ) / ( ARS - DDR ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ) ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.13518518518518519, "obj2": 0.7689079332089656}, {"determining": "( ( ( Const * CRS ) / ( Const * ( Min( BR ,( ARS + RRS ) ) + Min( FirstVNF_Mem ,DDR ) ) ) ) + ( ( BR * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "Max( ( Max( Max( RMSe,DS ),Max( MUM,Max( ( RMSe + Max( ( CS * MLU ),Min( MUM ,CS ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( MUR + MUC ) / Min( RMSe ,RMSe ) ) ) ) ) ) + Max( ( CS * MLU ),Min( MUM ,CS ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( ( MUM / DS ) / MUC ) + RCSe ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8425867877620832}, {"determining": "Max( ( FirstVNF_RAM / ( ( Const * ( Min( BR ,( ARS + RRS ) ) + Min( FirstVNF_Mem ,DDR ) ) ) * ( FirstVNF_CPU_Server / PN ) ) ),( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) )", "choosing": "Max( ( Max( ( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( Min( DS ,MUC ) ,( DS / RRSe ) ) ) ) ),Max( MUM,RCSe ) ) + Max( ( CS * MLU ),Min( MUM ,CS ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( ( MUM / DS ) / MUC ) + RCSe ) ) )", "obj1": 0.1037037037037037, "obj2": 0.8473408105307324}, {"determining": "( Max( Min( ( RRS - FirstVNF_CPU ) ,DDR ),Max( ( FirstVNF_RAM - FirstVNF_Mem ),( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) / ( Min( ( CRS * Const ) ,Max( RRS,Const ) ) + Min( Min( MRS ,FirstVNF_Mem ) ,( ACS / PN ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / CS ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.17037037037037037, "obj2": 0.7304416355287372}, {"determining": "( Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server * MDR ) ) * Min( Min( Min( ( AMS + ARS ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),( Min( CS ,RCSe ) * ( DS / ( Min( MUC ,RRSe ) / MUC ) ) ) ) ) )", "obj1": 0.2, "obj2": 0.6978115127844983}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) ) ,( Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * MUM ) ,( MUR * RRSe ) ),( ( CS + RCSe ) * Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( Min( DS ,MUC ) ,( DS / RRSe ) ) ) ) ) ) )", "obj1": 0.1425925925925926, "obj2": 0.7648710848991608}, {"determining": "( ( FirstVNF_CPU * BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) ) ,( Max( ( BR * AMS ),Min( Max( Max( ( AMS + Const ),RRS ),MDR ) ,Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( BR / FirstVNF_CPU_Server ) ) ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + Max( ( ( CS * Max( RRSe,MUC ) ) / CS ),Min( Max( ( ( MUM + RCSe ) + RCSe ),MLU ) ,( RRSe * RMSe ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( BR,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * MUM ) ,( MUR * RRSe ) ),( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "Max( Max( Min( ( AMS + BR ) ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ),( ( BR + BR ) / ( ARS - DDR ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "( Min( PN ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( BR,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - ( DDR * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * MUM ) ,( MUR * RRSe ) ),( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * ( Max( Const,( DDR - FirstVNF_CPU ) ) + ( FirstVNF_Mem / FirstVNF_RAM ) ) ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( ( Min( ( MUR * RRSe ) ,( RMSe * RRSe ) ) + Min( ( CS / MLU ) ,( RRSe / RRSe ) ) ) * RRSe ) ,( MUR * RRSe ) ),Min( ( ( DS - RRSe ) + ( RRSe + MUM ) ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.1925925925925926, "obj2": 0.7037647594884573}, {"determining": "( ( ( Min( MRS ,PN ) / ARS ) / ( Const * PN ) ) + ( ( AMS * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ) ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.13518518518518519, "obj2": 0.7689079332089656}, {"determining": "Max( ( FirstVNF_RAM / ( FirstVNF_CPU * ( FirstVNF_CPU_Server / PN ) ) ),( ( ( Min( FirstVNF_Mem_Server ,Const ) * ACS ) - ( MRS + ACS ) ) - Min( FirstVNF_CPU_Server ,ACS ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( CS,( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "( Max( Min( ( ACS - FirstVNF_CPU ) ,DDR ),Max( ( FirstVNF_RAM - FirstVNF_Mem ),( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) / ( Min( ( CRS * Const ) ,Max( RRS,Const ) ) + Min( Min( MRS ,FirstVNF_Mem ) ,( ACS / PN ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( MUR ,DS ) ) * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / CS ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7100041879611592}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( BR,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - MRS ) ) ,( Max( ( ( Const - ( FirstVNF_RAM - CRS ) ) * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / CS ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.17037037037037037, "obj2": 0.7304416355287372}, {"determining": "( Min( FirstVNF_CPU ,BR ) * ( FirstVNF_RAM / ( FirstVNF_CPU * ( FirstVNF_CPU_Server / PN ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( ( MUC * DS ),( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "( Min( BR ,( Min( MDR ,Const ) + ( AMS + ACS ) ) ) * Min( Min( Min( ( AMS + ARS ) ,Max( BR,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU / Max( Min( ( RMSe * MUM ) ,( MUR * Min( DS ,CS ) ) ),( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "Max( Max( Min( ( AMS + BR ) ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ),( ( BR + BR ) / ( ARS - DDR ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) ) ,( Max( ( BR * AMS ),Min( Max( Max( ( RRS + Const ),RRS ),MDR ) ,Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( BR / FirstVNF_CPU_Server ) ) ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * MUM ) ,( MUR * RRSe ) ),( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "( Min( CRS ,Max( ARS,BR ) ) + Min( Max( ( FirstVNF_RAM_Server - BR ),( ACS * ARS ) ) ,( ( FirstVNF_RAM_Server - BR ) * ( FirstVNF_Mem / Const ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / CS ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.17037037037037037, "obj2": 0.7304416355287372}, {"determining": "Max( ( FirstVNF_RAM / ( FirstVNF_CPU * ( FirstVNF_CPU_Server / ( BR * FirstVNF_Mem ) ) ) ),Min( Max( RRS,ACS ) ,Min( FirstVNF_CPU_Server ,Max( RRS,ACS ) ) ) )", "choosing": "( Max( RCSe,Min( ( CS / MLU ) ,( DS / RRSe ) ) ) / ( MUC * Max( ( RMSe / ( RCSe * CS ) ),RRSe ) ) )", "obj1": 0.1111111111111111, "obj2": 0.8239060137450299}, {"determining": "( ( ( Min( MRS ,PN ) / ARS ) / ( ( Min( RRS ,Const ) * ACS ) * PN ) ) + FirstVNF_RAM )", "choosing": "( ( ( ( Min( DS ,MUM ) * Min( ( RCSe + MUR ) ,Min( MLU ,MUC ) ) ) / Max( ( MLU * RCSe ),( RMSe / MUR ) ) ) - CS ) * Min( CS ,Min( DS ,MUC ) ) )", "obj1": 0.12222222222222222, "obj2": 0.7959981203585883}, {"determining": "Max( ( ( ( Min( RRS ,Const ) * ACS ) * PN ) / ( FirstVNF_CPU * ( FirstVNF_CPU_Server / PN ) ) ),( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) )", "choosing": "Max( ( Max( Max( RMSe,DS ),Max( MUM,RCSe ) ) + Max( ( CS * MLU ),( Min( DS ,MUM ) * Min( ( RCSe + MUR ) ,Min( DS ,MUC ) ) ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( ( MUM / DS ) / MUC ) + RCSe ) ) )", "obj1": 0.1037037037037037, "obj2": 0.8473408105307324}, {"determining": "( Max( BR,( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * ( ( Const + MDR ) + ( CRS / FirstVNF_RAM ) ) ) ) - ( CRS + BR ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( Max( Min( ( MUR * RRSe ) ,( RMSe * RRSe ) ),Min( ( CS / MLU ) ,( RRSe / RRSe ) ) ) * RRSe ) ,( MUR * RRSe ) ),Min( ( RCSe + ( RRSe + MUM ) ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.1925925925925926, "obj2": 0.7037647594884573}, {"determining": "( Min( DDR ,BR ) * Min( ( FirstVNF_RAM - DDR ) ,( Max( ( BR * AMS ),Max( ACS,( ARS * MDR ) ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RMSe - MLU ) + ( MLU - Max( Min( ( RMSe * ( MUM - DS ) ) ,( RRSe * MUR ) ),( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "Max( Max( Min( ( ( Max( RRS,( Const * CRS ) ) - BR ) + BR ) ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ),( ( BR + BR ) / ( ARS - DDR ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( ( ( Min( DS ,Max( MUC,RRSe ) ) * Max( RMSe,DS ) ) * RRSe ),( ( CS + RCSe ) * Max( MUC,( CS + Max( Max( RCSe,MLU ),MLU ) ) ) ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "Max( Max( Min( ( AMS + BR ) ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ),( ( BR + BR ) / ( ARS - DDR ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( ( ( ( Const * CRS ) / ( Const * ( Min( BR ,( ARS + RRS ) ) + Max( ARS,Const ) ) ) ) + ( ( BR * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( Max( MUC,RCSe ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.16666666666666666, "obj2": 0.7316306876957634}, {"determining": "( ( ( Min( ( CRS / FirstVNF_RAM ) ,PN ) / ARS ) / ( Const * PN ) ) + ( ( AMS * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "( ( ( ( Min( DS ,MUM ) * Min( ( DS + MUR ) ,Min( DS ,MUC ) ) ) / Max( ( MLU * RCSe ),( RMSe / MUR ) ) ) - CS ) * Min( RMSe ,Min( DS ,MUC ) ) )", "obj1": 0.11481481481481481, "obj2": 0.8031521982733226}, {"determining": "( Max( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( DDR - MDR ) ),Max( ( FirstVNF_RAM - FirstVNF_Mem ),Max( MRS,FirstVNF_CPU_Server ) ) ) / ( Min( ( Const * CRS ) ,Max( FirstVNF_CPU_Server,RRS ) ) + Min( Min( MRS ,FirstVNF_Mem ) ,( ACS / PN ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / CS ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.17037037037037037, "obj2": 0.7304416355287372}, {"determining": "Max( ( FirstVNF_RAM / ( FirstVNF_CPU * ( FirstVNF_CPU_Server / PN ) ) ),( ( ( Min( RRS ,( Min( BR ,FirstVNF_Mem ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) * ACS ) - ( MRS + ACS ) ) - Min( FirstVNF_CPU_Server ,ACS ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( MUC ,MUM ),( ( ( MUC * DS ) + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.11296296296296296, "obj2": 0.8137275166331918}, {"determining": "Max( ( FirstVNF_RAM / ( FirstVNF_CPU * ( FirstVNF_CPU_Server / PN ) ) ),( ( ( Min( RRS ,Const ) * ACS ) - ( MRS + ACS ) ) - Min( FirstVNF_CPU_Server ,ACS ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( MUC ,MUM ),( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "( ( ( Min( MRS ,PN ) / ARS ) / ( ( Min( RRS ,( CRS / FirstVNF_RAM ) ) * ACS ) * PN ) ) + FirstVNF_RAM )", "choosing": "( ( ( ( Min( DS ,MUM ) * Min( ( RCSe + MUR ) ,Min( MLU ,( RMSe * RRSe ) ) ) ) / Max( ( MLU * RCSe ),( RMSe / MUR ) ) ) - CS ) * Min( CS ,Min( DS ,MUC ) ) )", "obj1": 0.12777777777777777, "obj2": 0.792471806471367}, {"determining": "( ( ( Min( MRS ,PN ) / ARS ) / ( ( Min( RRS ,Const ) * ACS ) * PN ) ) + FirstVNF_RAM )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / CS ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.13333333333333333, "obj2": 0.7713058075510155}, {"determining": "Min( Min( ( FirstVNF_RAM_Server / ( PN * MRS ) ) ,FirstVNF_RAM_Server ) ,Max( Max( Min( ( AMS + BR ) ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ),( ( BR + BR ) / ( ARS - DDR ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * MUM ) ,( MUR * RRSe ) ),( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "( ( ( Min( MRS ,PN ) / ARS ) / Max( ( FirstVNF_Mem + FirstVNF_Mem ),PN ) ) + ( ( AMS * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( RRSe,Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.19074074074074074, "obj2": 0.704091568917724}, {"determining": "( Min( PN ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( BR,FirstVNF_CPU_Server ) ) ,( Max( Min( ( RRS - FirstVNF_CPU ) ,DDR ),Max( ( FirstVNF_RAM - FirstVNF_Mem ),( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - ( DDR * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * MUM ) ,Max( RRSe,Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ),( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "( Min( PN ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( BR,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - ( DDR * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * MUM ) ,( MUR * RRSe ) ),( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "Max( ( FirstVNF_RAM / ( FirstVNF_CPU * ( FirstVNF_CPU_Server / PN ) ) ),( ( ( Min( RRS ,Const ) * ACS ) - ( MRS + ACS ) ) - Min( FirstVNF_CPU_Server ,ACS ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( MUC ,MUM ),( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.14629629629629629, "obj2": 0.7586500348431677}, {"determining": "Max( ( FirstVNF_RAM / ( FirstVNF_CPU * ACS ) ),( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) )", "choosing": "Max( ( ( Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) * RRSe ) + Max( ( CS * MLU ),Min( MUM ,CS ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( ( MUM / DS ) / MUC ) + RCSe ) ) )", "obj1": 0.1037037037037037, "obj2": 0.8473408105307324}, {"determining": "( ( ( Min( MRS ,PN ) / ARS ) / ( Const * PN ) ) + ( ( AMS * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ) ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.13518518518518519, "obj2": 0.7689079332089656}, {"determining": "( ( ( Min( FirstVNF_CPU ,PN ) / ARS ) / ( Const * PN ) ) + ( ( AMS * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "( ( ( ( Min( DS ,MUM ) * Min( ( DS + MUR ) ,Min( RRSe ,MUC ) ) ) / Max( ( MLU * RCSe ),( RMSe / MUR ) ) ) - CS ) * Min( RMSe ,Min( DS ,MUC ) ) )", "obj1": 0.11666666666666667, "obj2": 0.800352760142057}, {"determining": "( ( ( Const * CRS ) / ( Const * ( Min( BR ,( ARS + RRS ) ) + Min( FirstVNF_Mem ,DDR ) ) ) ) + ( ( BR * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "Max( ( Max( Max( RMSe,DS ),Max( MUM,Max( ( RMSe + Max( ( CS * MLU ),Min( MUM ,CS ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( MUR + MUC ) / Min( RMSe ,RMSe ) ) ) ) ) ) + Max( ( CS * MLU ),Min( MUM ,CS ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( ( MUM / DS ) / MUC ) + RCSe ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8425867877620832}, {"determining": "( Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server * MDR ) ) * ( Min( ( Max( MDR,DDR ) * ( RRS * FirstVNF_RAM_Server ) ) ,Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( BR / FirstVNF_CPU_Server ) ) ) * Max( ( RRS / Min( FirstVNF_Mem ,DDR ) ),( Min( BR ,FirstVNF_Mem ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( ( MUC * DS ),( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - ( FirstVNF_CPU_Server * ACS ) ) ) ,( Max( ( BR * AMS ),Min( Max( Max( ( ARS - ARS ),RRS ),MDR ) ,Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( BR / FirstVNF_CPU_Server ) ) ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( CS,( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( ( ( ( Const * CRS ) / ( Const * ( Min( BR ,( ARS + RRS ) ) + Min( FirstVNF_Mem ,DDR ) ) ) ) + ( ( BR * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( Min( DS ,MUC ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.17592592592592593, "obj2": 0.7160544725365453}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Max( ACS,FirstVNF_RAM_Server ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) * RRSe ) ,RCSe ),( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ( ( FirstVNF_CPU * ( ARS / FirstVNF_CPU_Server ) ) / FirstVNF_RAM ) ) ,( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * ( ( Const + MDR ) + ( CRS / FirstVNF_RAM ) ) ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( ( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * MUM ) ,( MUR * RRSe ) ),( ( CS + RCSe ) * ( DS / DS ) ) ) ) ) - MLU ) + ( MLU - Max( Min( ( Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) * RRSe ) ,RCSe ),Min( ( CS / CS ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.13703703703703704, "obj2": 0.7676945095324562}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( BR,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * MUM ) ,( MUR * RRSe ) ),( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "( Max( Min( ( RRS - FirstVNF_CPU ) ,DDR ),Max( ( FirstVNF_RAM - FirstVNF_Mem ),( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) / ( FirstVNF_CPU + Min( Min( MRS ,FirstVNF_Mem ) ,( ACS / PN ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,Min( DS ,MUC ) ) ) * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / CS ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.1685185185185185, "obj2": 0.7314479926381818}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) ) ,( Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / CS ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.17037037037037037, "obj2": 0.7304416355287372}, {"determining": "( Max( Min( ( RRS - FirstVNF_CPU ) ,DDR ),Max( ( FirstVNF_RAM - FirstVNF_Mem ),( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) / ( Min( ( CRS * Const ) ,Max( RRS,Const ) ) + Min( Min( MRS ,FirstVNF_Mem ) ,( ACS / PN ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * MUM ) ,( MUR * RRSe ) ),( ( CS + RCSe ) * Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( Min( DS ,MUC ) ,( DS / RRSe ) ) ) ) ) ) )", "obj1": 0.1425925925925926, "obj2": 0.7648710848991608}, {"determining": "( ( Const + MDR ) * ( ( Const + MDR ) + ( CRS / FirstVNF_RAM ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * MUM ) ,( MUR * RRSe ) ),( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( BR,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( Const,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Max( RRSe,Min( ( CS / MLU ) ,( DS / RRSe ) ) ),( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( BR,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * MUM ) ,( MUR * RRSe ) ),( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "Max( ( FirstVNF_RAM / ( ( Const * ( Min( BR ,( ARS + RRS ) ) + ( Const * PN ) ) ) * ( FirstVNF_CPU_Server / PN ) ) ),( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) )", "choosing": "Max( ( Max( ( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( Min( DS ,MUC ) ,( DS / RRSe ) ) ) ) ),Max( MUM,RCSe ) ) + Max( ( CS * MLU ),Max( ( MLU * RCSe ),( RMSe / MUR ) ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( ( MUM / DS ) / MUC ) + RCSe ) ) )", "obj1": 0.1037037037037037, "obj2": 0.8473408105307324}, {"determining": "Max( ( FirstVNF_RAM / ( ( Const * ( Min( BR ,( ARS + RRS ) ) + Min( FirstVNF_Mem ,DDR ) ) ) * ( FirstVNF_CPU_Server / PN ) ) ),( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) )", "choosing": "Max( ( Max( ( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( Min( DS ,MUC ) ,( DS / RRSe ) ) ) ) ),Max( MUM,RCSe ) ) + Max( ( CS * MLU ),Min( MUM ,CS ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( ( MUM / DS ) / MUC ) + RCSe ) ) )", "obj1": 0.1037037037037037, "obj2": 0.8473408105307324}, {"determining": "( Max( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( DDR - MDR ) ),Max( ( FirstVNF_RAM - FirstVNF_Mem ),Max( MRS,FirstVNF_CPU_Server ) ) ) / ( Min( ( Const * CRS ) ,Max( FirstVNF_CPU_Server,RRS ) ) + Min( Min( MRS ,FirstVNF_Mem ) ,( ACS / PN ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / CS ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.13333333333333333, "obj2": 0.7713058075510155}, {"determining": "( Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server * MDR ) ) * Min( Min( Min( ( AMS + ARS ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( CS,( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "Max( ( FirstVNF_RAM / ( FirstVNF_CPU * ( FirstVNF_CPU_Server / PN ) ) ),( ( Max( RRS,ACS ) - PN ) - Min( FirstVNF_CPU_Server ,ACS ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( ( ( RRSe - MLU ) + ( MLU - Max( RRSe,Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ) ),( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.15185185185185185, "obj2": 0.7549850154763676}, {"determining": "Max( ( FirstVNF_RAM / ( FirstVNF_CPU * ( FirstVNF_CPU_Server / PN ) ) ),( ( ( Min( FirstVNF_Mem_Server ,Const ) * ACS ) - ( MRS + ACS ) ) - Min( FirstVNF_CPU_Server ,ACS ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( CS,( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "( Min( DDR ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( ARS,PN ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,( MDR * ARS ) ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "Max( ( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem ) ),( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) )", "choosing": "Max( Max( ( ( CS - ( Min( ( DS + RRSe ) ,RMSe ) + Max( DS,DS ) ) ) / ( MUR / MLU ) ),Min( MUM ,CS ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( ( MUM / DS ) / MUC ) + RCSe ) ) )", "obj1": 0.1037037037037037, "obj2": 0.8473408105307324}, {"determining": "Min( Min( ( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem ) ) ,FirstVNF_RAM_Server ) ,Max( Const,RRS ) )", "choosing": "Max( ( Max( Max( RMSe,DS ),Max( MUM,RCSe ) ) + Max( ( CS * MLU ),Min( MUM ,CS ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( ( MUM / DS ) / MUC ) + RCSe ) ) )", "obj1": 0.1037037037037037, "obj2": 0.8473408105307324}, {"determining": "Max( ( FirstVNF_RAM / ( ( Const * ( Min( BR ,( ARS + RRS ) ) + Min( ( Min( RRS ,Const ) * ACS ) ,DDR ) ) ) * ( FirstVNF_CPU_Server / PN ) ) ),( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) )", "choosing": "Max( ( Max( ( ( RRSe - MLU ) + ( MLU - Max( MUM,Min( Min( DS ,MUC ) ,( DS / RRSe ) ) ) ) ),Max( MUM,RCSe ) ) + Max( ( CS * MLU ),Min( MUM ,CS ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( ( MUM / DS ) / MUC ) + RCSe ) ) )", "obj1": 0.1037037037037037, "obj2": 0.8473408105307324}, {"determining": "Max( ( FirstVNF_RAM / ( ( Const * ( Min( BR ,( ARS + RRS ) ) + Min( FirstVNF_Mem ,DDR ) ) ) * ( FirstVNF_CPU_Server / PN ) ) ),( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) )", "choosing": "Max( ( Max( Max( RMSe,DS ),Max( MUM,RCSe ) ) + Max( ( CS * MLU ),( Min( DS ,MUM ) * Min( ( RCSe + MUR ) ,Min( DS ,MUC ) ) ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( ( MUM / DS ) / MUC ) + RCSe ) ) )", "obj1": 0.1037037037037037, "obj2": 0.8473408105307324}, {"determining": "Max( ( ( ( Min( RRS ,Const ) * ACS ) * PN ) / ( FirstVNF_CPU * ( FirstVNF_CPU_Server / PN ) ) ),( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) )", "choosing": "Max( ( Max( ( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( Min( DS ,MUC ) ,( DS / RRSe ) ) ) ) ),Max( MUM,RCSe ) ) + Max( ( CS * MLU ),Min( MUM ,CS ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( ( MUM / DS ) / MUC ) + RCSe ) ) )", "obj1": 0.1037037037037037, "obj2": 0.8473408105307324}, {"determining": "( Min( Max( Max( ( ( RRS + ( CRS + RRS ) ) - Min( ( PN / BR ) ,Max( ( Const / DDR ),BR ) ) ),RRS ),MDR ) ,Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( BR / FirstVNF_CPU_Server ) ) ) * Max( ( ( FirstVNF_Mem_Server / MDR ) * ( DDR - RRS ) ),( Min( BR ,FirstVNF_Mem ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( ( MUC * DS ),( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "( ( ( Const * CRS ) / ( Const * ( Min( BR ,( ARS + RRS ) ) + Min( FirstVNF_Mem ,DDR ) ) ) ) + ( ( BR * FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) )", "choosing": "Max( ( Max( Max( RMSe,DS ),Max( MUM,Max( ( RMSe + Max( ( CS * MLU ),Min( MUM ,CS ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( MUR + MUC ) / Min( RMSe ,RMSe ) ) ) ) ) ) + Max( ( CS * MLU ),Min( MUM ,CS ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( ( MUM / DS ) / MUC ) + RCSe ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8425867877620832}, {"determining": "Max( Max( Min( ( ( Max( RRS,ACS ) - PN ) + BR ) ,FirstVNF_RAM_Server ),FirstVNF_Mem_Server ),( ( BR + BR ) / ( ARS - DDR ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( ( ( Min( DS ,Max( MUC,RRSe ) ) * Max( RMSe,DS ) ) * RRSe ),( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "( Min( FirstVNF_CPU ,BR ) * ( FirstVNF_RAM / ( FirstVNF_CPU * ( FirstVNF_CPU_Server / PN ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( ( MUC * DS ),( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.1574074074074074, "obj2": 0.7490811475492282}, {"determining": "( Max( Min( ( ACS - FirstVNF_CPU ) ,DDR ),Max( ( FirstVNF_RAM - FirstVNF_Mem ),( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) / ( Min( ( CRS * Const ) ,Max( RRS,Const ) ) + Min( Min( MRS ,FirstVNF_Mem ) ,( ACS / PN ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( MUR ,DS ) ) * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / CS ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7100041879611592}, {"determining": "( Min( CRS ,Max( ARS,BR ) ) + Min( Max( ( FirstVNF_RAM_Server - BR ),( ACS * ARS ) ) ,( ( FirstVNF_RAM_Server - BR ) * ( FirstVNF_Mem / Const ) ) ) )", "choosing": "Max( ( Max( ( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( Min( DS ,MUC ) ,( DS / RRSe ) ) ) ) ),Max( MUM,RCSe ) ) + Max( ( CS * MLU ),Min( MUM ,CS ) ) ),( ( ( RCSe / RMSe ) * ( RCSe / MUC ) ) * ( ( ( MUM / DS ) / MUC ) + RCSe ) ) )", "obj1": 0.1037037037037037, "obj2": 0.8473408105307324}, {"determining": "Max( ( FirstVNF_RAM / ( ( Const * ( Min( BR ,( ARS + RRS ) ) + Min( FirstVNF_Mem ,DDR ) ) ) * ( FirstVNF_CPU_Server / PN ) ) ),( Max( RRS,ACS ) - Min( FirstVNF_CPU_Server ,ACS ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / CS ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.17037037037037037, "obj2": 0.7304416355287372}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * FirstVNF_RAM )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( RRSe,Min( ( CS / MLU ) ,( DS / ( RMSe * Max( DS,CS ) ) ) ) ) ) )", "obj1": 0.19814814814814816, "obj2": 0.7029177570534064}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * ( ( Const + MDR ) + ( CRS / FirstVNF_RAM ) ) ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "Max( ( FirstVNF_RAM / ( FirstVNF_CPU * ( FirstVNF_CPU_Server / PN ) ) ),( ( ( Min( RRS ,( Min( BR ,FirstVNF_Mem ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) * ACS ) - ( MRS + ACS ) ) - Min( FirstVNF_CPU_Server ,ACS ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / CS ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.17037037037037037, "obj2": 0.7304416355287372}, {"determining": "( Max( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( DDR - MDR ) ),Max( ( FirstVNF_RAM - FirstVNF_Mem ),Max( MRS,FirstVNF_CPU_Server ) ) ) / ( Min( ( Const * CRS ) ,Max( FirstVNF_CPU_Server,RRS ) ) + Min( Min( MRS ,FirstVNF_Mem ) ,( ACS / PN ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( MUC ,MUM ),( ( ( MUC * DS ) + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.11296296296296296, "obj2": 0.8137275166331918}, {"determining": "( Max( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( DDR - MDR ) ),Max( ( FirstVNF_RAM - FirstVNF_Mem ),Max( MRS,FirstVNF_CPU_Server ) ) ) / Min( Min( ( AMS + ( ( FirstVNF_CPU * ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) / FirstVNF_RAM ) ) ,( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * ( ( Const + MDR ) + ( CRS / FirstVNF_RAM ) ) ) ) ,( Max( RRS,ACS ) - PN ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) * ( RMSe * RRSe ) ) ,( MUR * RRSe ) ),Min( ( CS / CS ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.1388888888888889, "obj2": 0.7654007725045847}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ( ( FirstVNF_CPU * ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) / FirstVNF_RAM ) ) ,( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * ( ( Const + MDR ) + ( CRS / FirstVNF_RAM ) ) ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / CS ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.17037037037037037, "obj2": 0.7304416355287372}, {"determining": "( ( ( ( Max( RRS,ACS ) - PN ) / ARS ) / ( ( Min( RRS ,Const ) * ACS ) * PN ) ) + FirstVNF_RAM )", "choosing": "( ( ( ( Min( DS ,MUM ) * Min( ( RCSe + MUR ) ,Min( MLU ,MUC ) ) ) / Max( ( MLU * RCSe ),( RMSe / MUR ) ) ) - CS ) * Min( ( ( CS + RCSe ) * ( DS / DS ) ) ,Min( DS ,MUC ) ) )", "obj1": 0.11851851851851852, "obj2": 0.7977340320417432}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( BR,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * MUM ) ,( MUR * RRSe ) ),( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "( ( ( Min( MRS ,PN ) / ARS ) / ( ( Min( RRS ,Const ) * ACS ) * PN ) ) + FirstVNF_RAM )", "choosing": "( ( ( ( Min( DS ,MUM ) * Min( ( RCSe + MUR ) ,Min( MLU ,MUC ) ) ) / Max( ( MLU * RCSe ),( RMSe / MUR ) ) ) - CS ) * Min( CS ,Min( DS ,MUC ) ) )", "obj1": 0.12222222222222222, "obj2": 0.7959981203585883}, {"determining": "( Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server * MDR ) ) * ( Min( ( Max( MDR,DDR ) * ( RRS * FirstVNF_RAM_Server ) ) ,Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( BR / FirstVNF_CPU_Server ) ) ) * Max( ( RRS / Min( FirstVNF_Mem ,DDR ) ),( Min( BR ,FirstVNF_Mem ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * MUM ) ,( MUR * RRSe ) ),( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * Min( Min( ( AMS + ARS ) ,FirstVNF_Mem ) ,( Max( RRS,( Max( Const,( ARS - FirstVNF_CPU ) ) + ( CRS / FirstVNF_RAM ) ) ) - PN ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( ( RMSe * RRSe ),Min( Max( Min( ( MUR * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) ,( Min( MUR ,DS ) / RRSe ) ) ) ) )", "obj1": 0.17222222222222222, "obj2": 0.7272006564123948}, {"determining": "( ( ( Min( MRS ,PN ) / ARS ) / ( ( Min( RRS ,Const ) * ACS ) * PN ) ) + FirstVNF_RAM )", "choosing": "( ( ( ( Min( DS ,MUM ) * Min( ( RCSe + MUR ) ,Min( MLU ,MUC ) ) ) / Max( ( MLU * RCSe ),( RMSe / MUR ) ) ) - CS ) * Min( CS ,Min( DS ,MUC ) ) )", "obj1": 0.12222222222222222, "obj2": 0.7959981203585883}, {"determining": "( Min( FirstVNF_CPU ,BR ) * Min( Min( Min( ( AMS + ARS ) ,Max( BR,FirstVNF_CPU_Server ) ) ,( Max( RRS,ACS ) - PN ) ) ,( Max( ( BR * AMS ),Max( ACS,FirstVNF_RAM_Server ) ) - Min( Max( AMS,FirstVNF_CPU ) ,( DDR * RRS ) ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * MUM ) ,( MUR * RRSe ) ),( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "( Max( ACS,FirstVNF_RAM_Server ) * ( FirstVNF_RAM / ( FirstVNF_CPU * ( FirstVNF_CPU_Server / PN ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( ( MUC * DS ),( ( CS + RCSe ) * ( Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / MLU ) ,( DS / RRSe ) ) ) * RRSe ) ) ) ) )", "obj1": 0.13148148148148148, "obj2": 0.773393582166182}, {"determining": "( Min( FirstVNF_CPU ,BR ) * ( FirstVNF_RAM / ( FirstVNF_CPU * ( FirstVNF_CPU_Server / PN ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( ( MUC * DS ),( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * Min( Min( ( AMS + ARS ) ,FirstVNF_Mem ) ,( Max( FirstVNF_CPU_Server,ACS ) - PN ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( ( ( RMSe * RRSe ) * RRSe ),Min( ( CS / MLU ) ,( Min( MUR ,DS ) / RRSe ) ) ) ) )", "obj1": 0.1648148148148148, "obj2": 0.738490579315471}, {"determining": "( Max( Min( ( ACS - FirstVNF_CPU ) ,DDR ),Max( ( FirstVNF_RAM - FirstVNF_Mem ),( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) / ( Min( ( CRS * Const ) ,Max( RRS,Const ) ) + Min( Min( MRS ,FirstVNF_Mem ) ,( ACS / PN ) ) ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),Min( MUR ,DS ) ) * RRSe ) ,( MUR * RRSe ) ),Min( ( CS / CS ) ,( DS / RRSe ) ) ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7100041879611592}, {"determining": "Max( ( Max( RRS,ACS ) * Min( FirstVNF_CPU_Server ,ACS ) ),( Const / MDR ) )", "choosing": "( ( RRSe - MLU ) + ( MLU - Max( Min( ( RMSe * RRSe ) ,( MUR * RRSe ) ),( ( CS + RCSe ) * ( DS / DS ) ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7592109578204033}]}