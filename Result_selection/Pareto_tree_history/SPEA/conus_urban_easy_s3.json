{"1": [{"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) + ( MDR - PN ) )", "choosing": "( ( DS / RCSe ) * ( RCSe - MLU ) )", "obj1": 0.16159695817490494, "obj2": 0.7287825235805406}, {"determining": "Max( ( ARS * FirstVNF_Mem_Server ),Max( FirstVNF_Mem,MDR ) )", "choosing": "Min( ( MUM + RCSe ) ,( MLU / MUR ) )", "obj1": 0.1958174904942966, "obj2": 0.6830552197405497}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU ,( DDR + FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( CS ,RCSe ) ,( ( MUR + ( ( ( Min( ( DS - CS ) ,RCSe ) * RRSe ) + ( ( MLU - MUR ) * ( RMSe * CS ) ) ) + MUR ) ) + ( Min( RMSe ,( MUM / RMSe ) ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( AMS ,MRS ),( CRS * RRS ) )", "choosing": "( ( MLU / RMSe ) / ( MLU / MUC ) )", "obj1": 0.1596958174904943, "obj2": 0.7327707466870389}, {"determining": "( ( DDR - FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,CRS ) )", "choosing": "( Min( RRSe ,CS ) - ( DS + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,( ACS * ( BR * FirstVNF_CPU ) ) ) + ( FirstVNF_CPU - Min( ARS ,DDR ) ) )", "choosing": "( Max( RMSe,DS ) / ( RRSe * ( ( ( RRSe - MUR ) * Max( MLU,CS ) ) / MUM ) ) )", "obj1": 0.039923954372623575, "obj2": 0.8080355601472581}, {"determining": "( ( Max( MDR,AMS ) * BR ) * ( DDR / DDR ) )", "choosing": "( Min( ( ( MUR * ( Min( Min( ( RMSe * MLU ) ,( CS * MUC ) ) ,DS ) * RMSe ) ) * RMSe ) ,CS ) / ( MUM / MUR ) )", "obj1": 0.3269961977186312, "obj2": 0.49547641314578916}, {"determining": "Max( Min( Min( FirstVNF_CPU_Server ,CRS ) ,Max( PN,BR ) ),( ( DDR * DDR ) / ( BR - RRS ) ) )", "choosing": "Min( ( ( CS + MLU ) * MUR ) ,( ( RCSe - DS ) / Max( MLU,MUC ) ) )", "obj1": 0.0741444866920152, "obj2": 0.7832246521453441}, {"determining": "( ( ( FirstVNF_Mem / AMS ) + Max( CRS,RRS ) ) * Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + BR ) * FirstVNF_CPU ) ) )", "choosing": "( Max( Max( MUR,( RMSe / Max( DS,DS ) ) ),CS ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.043726235741444866, "obj2": 0.8076324700888016}, {"determining": "( ( ACS - RRS ) - Max( ( MRS + ( CRS + FirstVNF_RAM ) ),ARS ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + ( DS * MUM ) ),( Max( DS,Min( Min( ( RMSe + DS ) ,Min( MUM ,CS ) ) ,RMSe ) ) * ( CS * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( CS + RCSe ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.7832699619771863, "obj2": 0.09451467040850699}, {"determining": "( Max( PN,( CRS - FirstVNF_Mem ) ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( MUC - MUR ) + ( RCSe / ( MUR / MLU ) ) )", "obj1": 0.9980988593155894, "obj2": 0.0007417885736375986}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( PN,FirstVNF_RAM ) * ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "Max( Max( Min( RCSe ,RCSe ),( RRSe + RMSe ) ),( ( DS / CS ) - Max( MLU,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( PN + MRS ),MDR ) + ( PN - MDR ) )", "choosing": "( ( ( MUC * DS ) + ( MUR - RCSe ) ) - ( ( RCSe * MUR ) * ( RMSe * MLU ) ) )", "obj1": 0.18250950570342206, "obj2": 0.7252801189975931}, {"determining": "( ( ( ACS / PN ) * ( ARS - RRS ) ) + ( ( ( ( FirstVNF_RAM + MRS ) + ( ARS * ARS ) ) + FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe * MUM ) / ( ( CS - RRSe ) + RRSe ) )", "obj1": 0.2262357414448669, "obj2": 0.5276172467395419}, {"determining": "( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) )", "choosing": "( Min( Max( RMSe,RMSe ) ,( DS + CS ) ) / Max( Min( DS ,RCSe ),Max( RCSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( FirstVNF_Mem_Server,FirstVNF_CPU ),( ( FirstVNF_Mem / ACS ) * FirstVNF_RAM ) )", "choosing": "( ( ( MUR * DS ) * Min( MUM ,RRSe ) ) - ( ( ( ( DS - MUM ) + ( MUR + RRSe ) ) + RMSe ) / ( MUR + RMSe ) ) )", "obj1": 0.41254752851711024, "obj2": 0.4949961936433361}, {"determining": "( Min( ( PN / ACS ) ,Max( CRS,MRS ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( RMSe ,RMSe ) ,( RMSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * BR ) / ( AMS * DDR ) )", "choosing": "( ( Min( ( RRSe * CS ) ,( MUM + MUC ) ) * MUM ) + ( ( ( MUM * MUM ) + MUC ) / ( ( DS + CS ) / Max( MUM,MUM ) ) ) )", "obj1": 0.20722433460076045, "obj2": 0.643762953587628}, {"determining": "( Max( CRS,FirstVNF_Mem ) + ( ( DDR / ( AMS * FirstVNF_Mem_Server ) ) * ACS ) )", "choosing": "( ( ( ( DS + MLU ) + Max( MUM,MUC ) ) - ( ( MLU - DS ) / Max( MUR,DS ) ) ) + ( ( ( RCSe * RCSe ) - ( RMSe / DS ) ) - ( Max( CS,MUR ) - Max( MUC,MUC ) ) ) )", "obj1": 0.5190114068441065, "obj2": 0.3822436561855518}, {"determining": "( Max( BR,( Min( RRS ,FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) - ( DDR / BR ) )", "choosing": "( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * Max( Max( MUR,DS ),Min( RMSe ,MUC ) ) ) * ( ( Min( CS ,DS ) * ( MUR * CS ) ) / Max( ( MUR + MUM ),Min( CS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( PN - FirstVNF_RAM_Server ) * ( ACS + FirstVNF_Mem ) ) * Max( ( FirstVNF_Mem_Server * ARS ),( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ,( Min( Max( PN,FirstVNF_CPU ) ,Min( BR ,Const ) ) / ( Max( CRS,FirstVNF_Mem_Server ) - ( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Max( RCSe,( RMSe + RCSe ) ),( MUM - RMSe ) ) + Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * ( FirstVNF_RAM * Const ) ) + ( ( ( RRS * PN ) - ( FirstVNF_Mem_Server / BR ) ) / Min( ( FirstVNF_CPU - BR ) ,( RRS + DDR ) ) ) )", "choosing": "Max( ( Max( ( MUR - RRSe ),RCSe ) - ( ( RCSe + ( RRSe * Min( ( ( RRSe + DS ) * Min( RCSe ,MLU ) ) ,DS ) ) ) * RRSe ) ),( RRSe + MUR ) )", "obj1": 0.9315589353612167, "obj2": 0.04230923278193001}, {"determining": "Min( ( ( Max( BR,ACS ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / Min( ( BR * ARS ) ,( BR * FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_CPU + BR ) / ( DDR / FirstVNF_RAM ) ) / ( ( RRS - MDR ) / ( ACS * MDR ) ) ) )", "choosing": "Min( Max( Min( RRSe ,( DS - CS ) ),RCSe ) ,Min( Max( ( RMSe + CS ),MUM ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS / RRS ) + ( MDR - FirstVNF_CPU ) ) * ( Max( CRS,MDR ) * ( ARS / AMS ) ) ) - Min( Max( Max( FirstVNF_RAM_Server,ARS ),( ACS - MDR ) ) ,Min( ( FirstVNF_RAM_Server / DDR ) ,Max( Const,FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( DS ,Max( RCSe,Max( RRSe,CS ) ) ),( MUC - ( CS / MUM ) ) )", "obj1": 0.9847908745247148, "obj2": 0.009971683969873224}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,Min( ( Min( ( ( Const * FirstVNF_RAM ) + DDR ) ,FirstVNF_RAM ) / FirstVNF_RAM_Server ) ,( Const * PN ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) * Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - ( DS + ( RRSe / ( ( MUM - RCSe ) * ( DS / MUR ) ) ) ) ) ) )", "obj1": 0.42775665399239543, "obj2": 0.4015148371158489}, {"determining": "( Min( FirstVNF_CPU_Server ,Max( FirstVNF_RAM,( ( ( ( MRS * MDR ) / ( ( AMS - FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) ) * FirstVNF_RAM ) + ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) - ARS ) ) ) ) + ( PN + MDR ) )", "choosing": "( ( ( MUM / MUM ) * CS ) * ( Min( ( RMSe * CS ) ,( MLU * MUM ) ) * Max( ( MUC / MLU ),( Min( RCSe ,( RMSe * ( MUM + Min( CS ,RCSe ) ) ) ) * MUC ) ) ) )", "obj1": 0.21482889733840305, "obj2": 0.5763414158924568}, {"determining": "( ( ( ( BR - FirstVNF_RAM ) / ( BR * MRS ) ) - Min( ( MRS + DDR ) ,( PN / BR ) ) ) / Max( ( ( FirstVNF_CPU_Server - BR ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ),( ( MDR + RRS ) - Max( AMS,MDR ) ) ) )", "choosing": "Min( ( ( Min( RRSe ,MUC ) + Min( MUR ,CS ) ) - ( ( RMSe + RCSe ) * ( MUR * RMSe ) ) ) ,( ( Max( RCSe,MUR ) / Max( MUM,MUC ) ) - ( ( MUM / MUM ) - ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,Max( MUM,RRSe ) )", "obj1": 0.9885931558935361, "obj2": 0.00485830559600144}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) * ( ( FirstVNF_CPU_Server + CRS ) - ( Min( BR ,Const ) - DDR ) ) )", "choosing": "( ( ( ( DS / RRSe ) - RCSe ) + MLU ) + Min( Max( ( MUR * MUR ),MUR ) ,MUM ) )", "obj1": 0.7661596958174905, "obj2": 0.19435163513207335}, {"determining": "Max( ( ( Min( MRS ,PN ) / Max( MDR,MRS ) ) * ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,ARS ) ) ),Min( Min( ( FirstVNF_CPU - AMS ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,( ( ARS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem / CRS ) ) ) )", "choosing": "( ( MLU * DS ) / Max( MUC,CS ) )", "obj1": 0.6007604562737643, "obj2": 0.30113532876306554}], "2": [{"determining": "( ( RRS - FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU ,( DDR + FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( CS ,RCSe ) ,( ( MUR + ( ( ( Min( ( DS - CS ) ,RCSe ) * RRSe ) + ( ( MLU - MUR ) * ( RMSe * CS ) ) ) + MUR ) ) + ( Min( RMSe ,( MUM / RMSe ) ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,CRS ) )", "choosing": "( Min( RRSe ,CS ) - ( DS + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,( ACS * ( BR * FirstVNF_CPU ) ) ) + ( FirstVNF_CPU - Min( ARS ,DDR ) ) )", "choosing": "( Max( RMSe,DS ) / ( RRSe * ( ( ( RRSe - MUR ) * Max( MLU,CS ) ) / MUM ) ) )", "obj1": 0.039923954372623575, "obj2": 0.8080355601472581}, {"determining": "( ( Max( MDR,AMS ) * BR ) * ( DDR / DDR ) )", "choosing": "( Min( ( ( MUR * ( Min( Min( ( RMSe * MLU ) ,( CS * MUC ) ) ,DS ) * RMSe ) ) * RMSe ) ,CS ) / ( MUM / MUR ) )", "obj1": 0.3269961977186312, "obj2": 0.49547641314578916}, {"determining": "Max( Min( Min( FirstVNF_CPU_Server ,CRS ) ,Max( PN,BR ) ),( ( DDR * DDR ) / ( BR - RRS ) ) )", "choosing": "Min( ( ( CS + MLU ) * MUR ) ,( ( RCSe - DS ) / Max( MLU,MUC ) ) )", "obj1": 0.0741444866920152, "obj2": 0.7832246521453441}, {"determining": "( ( ( FirstVNF_Mem / AMS ) + Max( CRS,RRS ) ) * Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + BR ) * FirstVNF_CPU ) ) )", "choosing": "( Max( Max( MUR,( RMSe / Max( DS,DS ) ) ),CS ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.043726235741444866, "obj2": 0.8076324700888016}, {"determining": "( ( ACS - RRS ) - Max( ( MRS + ( CRS + FirstVNF_RAM ) ),ARS ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + ( DS * MUM ) ),( Max( DS,Min( Min( ( RMSe + DS ) ,Min( MUM ,CS ) ) ,RMSe ) ) * ( CS * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( CS + RCSe ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.7832699619771863, "obj2": 0.09451467040850699}, {"determining": "( Max( PN,( CRS - FirstVNF_Mem ) ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( MUC - MUR ) + ( RCSe / ( MUR / MLU ) ) )", "obj1": 0.9980988593155894, "obj2": 0.0007417885736375986}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( PN,FirstVNF_RAM ) * ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "Max( Max( Min( RCSe ,RCSe ),( RRSe + RMSe ) ),( ( DS / CS ) - Max( MLU,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / PN ) * ( ARS - RRS ) ) + ( ( ( ( FirstVNF_RAM + MRS ) + ( ARS * ARS ) ) + FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe * MUM ) / ( ( CS - RRSe ) + RRSe ) )", "obj1": 0.2262357414448669, "obj2": 0.5276172467395419}, {"determining": "( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) )", "choosing": "( Min( Max( RMSe,RMSe ) ,( DS + CS ) ) / Max( Min( DS ,RCSe ),Max( RCSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN / ACS ) ,Max( CRS,MRS ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( RMSe ,RMSe ) ,( RMSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,( Min( RRS ,FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) - ( DDR / BR ) )", "choosing": "( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * Max( Max( MUR,DS ),Min( RMSe ,MUC ) ) ) * ( ( Min( CS ,DS ) * ( MUR * CS ) ) / Max( ( MUR + MUM ),Min( CS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( PN - FirstVNF_RAM_Server ) * ( ACS + FirstVNF_Mem ) ) * Max( ( FirstVNF_Mem_Server * ARS ),( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ,( Min( Max( PN,FirstVNF_CPU ) ,Min( BR ,Const ) ) / ( Max( CRS,FirstVNF_Mem_Server ) - ( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Max( RCSe,( RMSe + RCSe ) ),( MUM - RMSe ) ) + Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( BR,ACS ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / Min( ( BR * ARS ) ,( BR * FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_CPU + BR ) / ( DDR / FirstVNF_RAM ) ) / ( ( RRS - MDR ) / ( ACS * MDR ) ) ) )", "choosing": "Min( Max( Min( RRSe ,( DS - CS ) ),RCSe ) ,Min( Max( ( RMSe + CS ),MUM ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,Min( ( Min( ( ( Const * FirstVNF_RAM ) + DDR ) ,FirstVNF_RAM ) / FirstVNF_RAM_Server ) ,( Const * PN ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) * Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - ( DS + ( RRSe / ( ( MUM - RCSe ) * ( DS / MUR ) ) ) ) ) ) )", "obj1": 0.42775665399239543, "obj2": 0.4015148371158489}, {"determining": "( ( ( ( BR - FirstVNF_RAM ) / ( BR * MRS ) ) - Min( ( MRS + DDR ) ,( PN / BR ) ) ) / Max( ( ( FirstVNF_CPU_Server - BR ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ),( ( MDR + RRS ) - Max( AMS,MDR ) ) ) )", "choosing": "Min( ( ( Min( RRSe ,MUC ) + Min( MUR ,CS ) ) - ( ( RMSe + RCSe ) * ( MUR * RMSe ) ) ) ,( ( Max( RCSe,MUR ) / Max( MUM,MUC ) ) - ( ( MUM / MUM ) - ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,Max( MUM,RRSe ) )", "obj1": 0.9885931558935361, "obj2": 0.00485830559600144}, {"determining": "Max( ( ( Min( MRS ,PN ) / Max( MDR,MRS ) ) * ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,ARS ) ) ),Min( Min( ( FirstVNF_CPU - AMS ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,( ( ARS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem / CRS ) ) ) )", "choosing": "( ( MLU * DS ) / Max( MUC,CS ) )", "obj1": 0.6007604562737643, "obj2": 0.30113532876306554}, {"determining": "Min( ( ( ( PN - FirstVNF_RAM_Server ) * ( ACS + FirstVNF_Mem ) ) * Max( Max( FirstVNF_CPU,Const ),( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ,( Min( Max( PN,FirstVNF_CPU ) ,Min( BR ,Const ) ) / ( Max( CRS,FirstVNF_Mem_Server ) - ( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Max( RCSe,( DS + RCSe ) ),( MUM - RMSe ) ) + Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( PN - FirstVNF_RAM_Server ) * ( ACS + FirstVNF_Mem ) ) * Max( ( FirstVNF_Mem_Server * ARS ),( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ,( Min( Max( PN,FirstVNF_CPU ) ,Min( BR ,Const ) ) / ( Max( CRS,FirstVNF_Mem_Server ) - ( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Max( RCSe,( RMSe + RCSe ) ),( MUM - RMSe ) ) + Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ACS * ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ,( ARS - ACS ) )", "choosing": "( ( ( ( MUR * MUC ) * Min( MUR ,MUR ) ) / RCSe ) + Max( ( Max( RRSe,MUC ) - MUR ),RRSe ) )", "obj1": 0.7186311787072244, "obj2": 0.25118502701167406}, {"determining": "Min( ( ACS * DDR ) ,( ARS - ACS ) )", "choosing": "( ( ( ( MUR * MUC ) * DS ) / RCSe ) + Max( ( Max( RRSe,MUC ) - MUR ),RRSe ) )", "obj1": 0.9068441064638784, "obj2": 0.07654557997159764}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( Const * PN ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.42015209125475284, "obj2": 0.4155083539253472}, {"determining": "Min( ( ( Max( BR,ACS ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / Min( ( BR * ARS ) ,( BR * FirstVNF_CPU ) ) ) ,( Max( FirstVNF_RAM_Server,ACS ) / ( ( RRS - MDR ) / ( ACS * MDR ) ) ) )", "choosing": "Min( Max( Min( RRSe ,( DS - CS ) ),( MUC + ( RMSe + MUR ) ) ) ,Min( Max( ( RMSe + CS ),MUM ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( BR,ACS ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / Min( ( BR * ARS ) ,( BR * FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_CPU + BR ) / ( DDR / FirstVNF_RAM ) ) / ( ( RRS - MDR ) / ( ACS * MDR ) ) ) )", "choosing": "Min( Max( Min( RRSe ,( DS - CS ) ),RCSe ) ,Min( Max( ( RMSe + CS ),MUM ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( MRS - FirstVNF_CPU ) * ( FirstVNF_CPU + FirstVNF_CPU ) ) - Min( ( FirstVNF_CPU - CRS ) ,Max( RRS,MDR ) ) ) - CRS ) * Min( MDR ,MRS ) )", "choosing": "( Min( DS ,RMSe ) / ( ( MLU * MLU ) * MUC ) )", "obj1": 0.9657794676806084, "obj2": 0.015973276733872326}, {"determining": "( Max( BR,( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) - ( DDR / BR ) )", "choosing": "( ( RMSe / MLU ) * ( ( Min( CS ,DS ) * ( MUR * CS ) ) / Max( ( MUR + MUM ),Min( CS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,PN ) * ( FirstVNF_Mem_Server - ( DDR / BR ) ) )", "choosing": "( RMSe / ( RMSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,( Min( RRS ,FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) - ( DDR / BR ) )", "choosing": "( ( CS * MUR ) / ( RMSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,Max( FirstVNF_RAM,( ( ( ( MRS * MDR ) / ( ( AMS - FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) ) * FirstVNF_RAM ) + ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) - ARS ) ) ) ) + ( PN + MDR ) )", "choosing": "( ( ( MUM / MUM ) * CS ) * ( Min( ( RMSe * CS ) ,( MLU * MUM ) ) * Max( ( MUC / MLU ),( Min( RCSe ,( RMSe * ( MUM + Min( CS ,RCSe ) ) ) ) * MUC ) ) ) )", "obj1": 0.20342205323193915, "obj2": 0.5703521263176919}, {"determining": "( Min( FirstVNF_CPU_Server ,Max( FirstVNF_RAM,( ( ( ( MRS * MDR ) / ( ( AMS - FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) ) * FirstVNF_RAM ) + ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) - ARS ) ) ) ) + ( PN + MDR ) )", "choosing": "( ( ( MUM / MUM ) * CS ) * ( Min( ( RMSe * CS ) ,( MLU * MUM ) ) * Max( ( MUC / MLU ),( Min( RCSe ,( RMSe * ( MUM + Min( CS ,RCSe ) ) ) ) * MUC ) ) ) )", "obj1": 0.20342205323193915, "obj2": 0.5703521263176919}, {"determining": "( Min( FirstVNF_CPU_Server ,Max( FirstVNF_RAM,( ( ( ( MRS * MDR ) / ( ( AMS - FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) ) * FirstVNF_RAM ) + ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) - ARS ) ) ) ) + ( PN + MDR ) )", "choosing": "( ( ( MUM / MUM ) * CS ) * ( Min( ( RMSe * CS ) ,( MLU * MUM ) ) * Max( ( MUC / MLU ),( Min( RCSe ,( RMSe * ( MUM + Min( CS ,RCSe ) ) ) ) * MUC ) ) ) )", "obj1": 0.20342205323193915, "obj2": 0.5703521263176919}, {"determining": "( ( ( ( ARS / FirstVNF_CPU_Server ) + ( ACS - BR ) ) + ( Max( Const,BR ) / Max( FirstVNF_RAM_Server,ACS ) ) ) / ( AMS * DDR ) )", "choosing": "( ( Min( ( RRSe * CS ) ,( MUM + MUC ) ) * MUM ) + ( ( ( MUM * MUM ) + MUC ) / ( ( DS + CS ) / Max( ( RMSe + MUR ),MUM ) ) ) )", "obj1": 0.20152091254752852, "obj2": 0.6521141000284022}, {"determining": "( ( DDR - CRS ) * ( ( RRS - MDR ) / ( ACS * MDR ) ) )", "choosing": "( ( RMSe + CS ) / ( RCSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( DDR - CRS ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / Min( ( BR * ARS ) ,( BR * FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_CPU + BR ) / ( DDR / FirstVNF_RAM ) ) / ( ( RRS - MDR ) / ( ACS * MDR ) ) ) )", "choosing": "Min( Max( Min( RRSe ,( DS - CS ) ),RCSe ) ,Min( Max( ( Min( DS ,RMSe ) + CS ),MUM ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( BR,ACS ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / Min( ( BR * ARS ) ,( BR * FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_CPU + BR ) / ( DDR / FirstVNF_RAM ) ) / ( ( RRS - MDR ) / ( ACS * MDR ) ) ) )", "choosing": "( Min( DS ,RMSe ) / ( RCSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( Min( FirstVNF_CPU_Server ,CRS ) ,( ( ( Const * FirstVNF_CPU ) * Min( MRS ,Const ) ) / ( ( Const + AMS ) + Max( PN,Const ) ) ) ),( ( DDR * DDR ) / ( BR - RRS ) ) )", "choosing": "Min( MUC ,( ( RCSe - DS ) / Max( MLU,MUC ) ) )", "obj1": 0.060836501901140684, "obj2": 0.7912656914491536}, {"determining": "( ( ( Const * FirstVNF_CPU ) * Min( MRS ,Const ) ) / ( ( Const + AMS ) + Max( PN,Const ) ) )", "choosing": "Min( ( ( CS + MLU ) * MUR ) ,( ( RCSe - DS ) / Max( MLU,MUC ) ) )", "obj1": 0.0741444866920152, "obj2": 0.7832246521453441}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( ACS - MRS ) ) ) + Max( ( ( RRS + DDR ) * MRS ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( MUM / ( MUC * MUM ) ) * Max( ( ( ( RMSe / Max( MUC,RCSe ) ) * ( Min( RCSe ,RRSe ) - RMSe ) ) * RRSe ),DS ) ) ,Max( MUM,RRSe ) )", "obj1": 0.9752851711026616, "obj2": 0.009987810478121662}, {"determining": "( Max( PN,( CRS - FirstVNF_Mem ) ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( MUC - MUR ) + ( RCSe / ( RMSe / MLU ) ) )", "obj1": 0.9980988593155894, "obj2": 0.0007417885736375986}, {"determining": "( ( ( MDR + PN ) * ( ARS - RRS ) ) + ( Max( FirstVNF_Mem,RRS ) / ( MDR / Const ) ) )", "choosing": "( ( MUM / MUM ) / ( RRSe + ( CS - RRSe ) ) )", "obj1": 0.2262357414448669, "obj2": 0.5276172467395419}, {"determining": "Max( Min( Min( FirstVNF_CPU_Server ,CRS ) ,Max( PN,BR ) ),( ( DDR * DDR ) / ( BR - RRS ) ) )", "choosing": "Min( ( ( CS + MLU ) * MUR ) ,( ( RCSe - DS ) / Max( MLU,MUC ) ) )", "obj1": 0.0741444866920152, "obj2": 0.7832246521453441}, {"determining": "Max( PN,Min( ACS ,( RRS * ( MRS + AMS ) ) ) )", "choosing": "( ( ( ( MUR - ( MUC + ( CS + RCSe ) ) ) - ( DS / CS ) ) - Max( DS,MUR ) ) + ( ( RMSe / MLU ) / ( MUR + RCSe ) ) )", "obj1": 0.08365019011406843, "obj2": 0.7154692259159153}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,Min( ( PN + Const ) ,Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Max( RCSe,( CS / ( ( RMSe * RRSe ) * Max( DS,RMSe ) ) ) ) )", "obj1": 0.41254752851711024, "obj2": 0.45839568607376896}, {"determining": "Min( ( PN + Const ) ,Max( BR,FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.42775665399239543, "obj2": 0.4015148371158489}, {"determining": "( ( ( ( MDR - FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,ACS ) ) - ( DDR / BR ) )", "choosing": "( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * ( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( RCSe,MLU ) ) ) ) * ( ( Min( CS ,DS ) * ( MUR * CS ) ) / Max( ( MUR + MUM ),Min( CS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Max( BR,( Min( RRS ,FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) - ( DDR / BR ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * Max( Max( MUR,DS ),Min( RMSe ,MUC ) ) ) * ( ( Min( CS ,DS ) * ( MUR * CS ) ) / Max( ( MUR + MUM ),Min( CS ,RRSe ) ) ) ) ) ) / ( Max( MLU,MUR ) / Max( RCSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,( Min( RRS ,FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) - ( DDR / BR ) )", "choosing": "( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * Max( Max( MUR,DS ),Min( RMSe ,MUC ) ) ) * ( ( Min( CS ,DS ) * ( MUR * CS ) ) / Max( ( MUR + MUM ),Min( CS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / PN ) / ( ( ( DDR - ARS ) - ( AMS * ( ( PN / ( RRS - FirstVNF_RAM ) ) * FirstVNF_RAM_Server ) ) ) / ( ( MRS * Const ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) * ( Max( Const,FirstVNF_Mem ) - Min( ARS ,BR ) ) )", "choosing": "Min( ( ( ( Max( MUC,( ( Max( DS,MLU ) - MUM ) / MLU ) ) - Min( MUC ,( MLU / ( ( MUC / MUM ) / ( MLU / MUC ) ) ) ) ) - MUM ) + ( DS - RRSe ) ) ,( ( MUC / MUM ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,MDR ) * ( MRS - FirstVNF_CPU_Server ) ) - ( Min( ACS ,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ) / ( ( ( MRS * Const ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) / ( ( DDR - ARS ) - ( AMS * PN ) ) ) )", "choosing": "( Min( MUM ,RMSe ) / DS )", "obj1": 0.030418250950570342, "obj2": 0.8191395970744125}, {"determining": "( ( ( ( RRS * PN ) - ( FirstVNF_Mem_Server / BR ) ) / Min( ( FirstVNF_CPU - BR ) ,( RRS + DDR ) ) ) / ( AMS - PN ) )", "choosing": "Min( ( ( MUR * MLU ) + ( MUM - RCSe ) ) ,Min( Min( ( ( RRSe + DS ) * Min( RCSe ,MLU ) ) ,DS ) ,MUM ) )", "obj1": 0.967680608365019, "obj2": 0.01416163317993242}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_CPU ) / ( ( FirstVNF_CPU_Server * Min( Min( MRS ,( FirstVNF_Mem_Server * ( ( Const - CRS ) * FirstVNF_Mem ) ) ) ,RRS ) ) - DDR ) )", "choosing": "( ( CS * RMSe ) - Min( ( CS - RCSe ) ,Max( ( MUC / MUM ),MUC ) ) )", "obj1": 0.9372623574144486, "obj2": 0.02934310681239102}, {"determining": "( Min( RRS ,FirstVNF_Mem_Server ) - Min( CRS ,Const ) )", "choosing": "Min( ( CS - RCSe ) ,( RRSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU ,( DDR + FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( CS ,RCSe ) ,( ( MUR + ( ( ( Min( ( DS - CS ) ,RCSe ) * RRSe ) + ( ( MLU - MUR ) * ( RMSe * CS ) ) ) + MUR ) ) + ( Min( RMSe ,( MUM / RMSe ) ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU ,( DDR + FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( CS ,RCSe ) ,( ( MUR + ( ( ( Min( ( DS - CS ) ,RCSe ) * RRSe ) + ( ( MLU - MUR ) * ( RMSe * CS ) ) ) + MUR ) ) + ( Min( RMSe ,( MUM / RMSe ) ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU ,( DDR + FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( CS ,RCSe ) ,( ( MUR + ( ( ( Min( ( DS - CS ) ,RCSe ) * RRSe ) + ( ( MLU - MUR ) * ( RMSe * CS ) ) ) + MUR ) ) + ( Min( RMSe ,( MUM / RMSe ) ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) - ( Min( MRS ,FirstVNF_RAM ) - CRS ) )", "choosing": "Min( ( CS - RCSe ) ,( ( MUR + ( ( ( Min( ( MLU - MUC ) ,RCSe ) * RRSe ) + ( ( MLU - MUR ) * ( CS * RMSe ) ) ) + MUR ) ) + ( Min( MUC ,( DS - RMSe ) ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR - ( ARS + FirstVNF_RAM_Server ) )", "choosing": "Min( ( CS * MUR ) ,Max( RRSe,( MUC + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) - ( Min( MRS ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) )", "choosing": "Min( ( CS - RCSe ) ,( ( MUR + ( ( ( Min( ( MLU - MUC ) ,( MUR + RCSe ) ) * RRSe ) + ( ( MLU - MUR ) * ( CS * RMSe ) ) ) + MUR ) ) + ( Min( MUC ,( DS - RMSe ) ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) - ( Min( MRS ,FirstVNF_RAM ) - CRS ) )", "choosing": "Min( ( CS - RCSe ) ,( ( MUR + ( ( ( Min( ( MLU - MUC ) ,RCSe ) * RRSe ) + ( ( MLU - MUR ) * ( CS * RMSe ) ) ) + MUR ) ) + ( Min( MUC ,( DS - RMSe ) ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,PN ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_CPU_Server + CRS ) - ( Min( BR ,Const ) - DDR ) ) ) )", "choosing": "( ( DS / RRSe ) / ( RMSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) * ( MRS - ( Min( BR ,Const ) - DDR ) ) )", "choosing": "( ( ( ( DS / ( ( CS * MUR ) / ( RMSe / MLU ) ) ) - RCSe ) + MLU ) + Min( Max( ( MUR * MUR ),MUR ) ,MUM ) )", "obj1": 0.9258555133079848, "obj2": 0.047301558481629646}, {"determining": "Min( ( ( ( PN - FirstVNF_RAM_Server ) * ( ACS + FirstVNF_Mem ) ) * Max( ( FirstVNF_Mem_Server * ( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( BR * FirstVNF_CPU ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) ) ),( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ,( Min( Max( PN,FirstVNF_CPU ) ,Min( BR ,FirstVNF_CPU ) ) / ( Max( CRS,FirstVNF_Mem_Server ) - ( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Max( RCSe,( RMSe + RCSe ) ),( MUM - ( RCSe + ( ( MUC - MUC ) * RMSe ) ) ) ) + Min( MLU ,Min( ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,Max( MUM,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,Max( MUM,RRSe ) )", "obj1": 0.9885931558935361, "obj2": 0.00485830559600144}, {"determining": "Min( ( ( ( PN - FirstVNF_RAM_Server ) * ( ACS + FirstVNF_Mem ) ) * Max( ( FirstVNF_Mem_Server * ARS ),( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ,( Min( Max( PN,FirstVNF_CPU ) ,Min( BR ,Const ) ) / ( Max( CRS,FirstVNF_Mem_Server ) - ( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Max( RCSe,( RMSe + RCSe ) ),( MUM - RMSe ) ) + Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * FirstVNF_CPU ) * Min( MRS ,Const ) ) / ( ( Const + AMS ) + Max( PN,Const ) ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( RCSe,MLU ) ) )", "obj1": 0.24334600760456274, "obj2": 0.5135465063777105}, {"determining": "( ( Min( ARS ,FirstVNF_Mem ) - Min( MDR ,FirstVNF_Mem ) ) * ( CRS - ( CRS / Const ) ) )", "choosing": "Min( ( ( MUC - ( RCSe * RMSe ) ) / RRSe ) ,( MUC + MLU ) )", "obj1": 0.3517110266159696, "obj2": 0.48437363825305485}, {"determining": "( Max( PN,( CRS - ( Max( CRS,FirstVNF_Mem ) + ( ( DDR / ( AMS * FirstVNF_Mem_Server ) ) * ACS ) ) ) ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( RMSe / DS ) - MUR ) + ( RCSe / ( MUR / MLU ) ) )", "obj1": 0.9961977186311787, "obj2": 0.0016659775037294773}, {"determining": "( ( Const * ( FirstVNF_RAM * Const ) ) + ( ( ( RRS * PN ) - ( FirstVNF_Mem_Server / BR ) ) / Min( ( FirstVNF_CPU - BR ) ,( RRS + DDR ) ) ) )", "choosing": "Min( ( MUC + MLU ) ,Min( ( MUC - RCSe ) ,RRSe ) )", "obj1": 0.9163498098859315, "obj2": 0.05371382199145238}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "( Max( RMSe,( RRSe - CS ) ) + ( CS - RRSe ) )", "obj1": 0.9771863117870723, "obj2": 0.009167627969174221}, {"determining": "( ( ( MDR / PN ) * Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) ) + ( Max( FirstVNF_Mem,RRS ) / ( FirstVNF_CPU + BR ) ) )", "choosing": "( Max( Max( ( ( ( RRSe * Max( MUM,RRSe ) ) * MLU ) / ( MUC + MUC ) ),MUR ),DS ) / ( RRSe + ( CS - RRSe ) ) )", "obj1": 0.3041825095057034, "obj2": 0.5110774592493375}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "( Max( Max( ( ( ( RRSe * RRSe ) * MLU ) / ( MUC + MUC ) ),MUR ),DS ) / ( RRSe + ( CS - RRSe ) ) )", "obj1": 0.9828897338403042, "obj2": 0.007910272032073378}, {"determining": "( ( Max( MDR,AMS ) * BR ) * ( DDR / DDR ) )", "choosing": "( Min( ( ( MUR * ( Min( Min( ( RMSe * MLU ) ,( CS * MUC ) ) ,DS ) * RMSe ) ) * RMSe ) ,CS ) / ( MUM / MUR ) )", "obj1": 0.5380228136882129, "obj2": 0.3733108264766951}, {"determining": "( ( Max( MDR,AMS ) * BR ) * ( DDR / DDR ) )", "choosing": "( Min( ( ( MUR * ( Min( Min( ( RMSe * MLU ) ,( CS * MUC ) ) ,DS ) * RMSe ) ) * RMSe ) ,CS ) / ( MUM / MUR ) )", "obj1": 0.5380228136882129, "obj2": 0.3733108264766951}, {"determining": "( ( Max( MDR,AMS ) * BR ) * ( DDR / DDR ) )", "choosing": "( Min( ( ( MUR * ( Min( Min( ( RMSe * MLU ) ,( CS * MUC ) ) ,DS ) * RMSe ) ) * RMSe ) ,CS ) / ( MUM / MUR ) )", "obj1": 0.5380228136882129, "obj2": 0.3733108264766951}, {"determining": "( ( Max( MDR,AMS ) * BR ) * ( DDR / DDR ) )", "choosing": "( Min( ( ( MUR * ( Min( Min( ( RMSe * MLU ) ,( CS * MUC ) ) ,DS ) * RMSe ) ) * RMSe ) ,CS ) / ( MUM / MUR ) )", "obj1": 0.5380228136882129, "obj2": 0.3733108264766951}, {"determining": "( ( ( Const * FirstVNF_CPU ) * Min( MRS ,Const ) ) / ( ( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( PN,FirstVNF_RAM ) * ( FirstVNF_RAM_Server + PN ) ) ) + Max( PN,Const ) ) )", "choosing": "( ( Min( DS ,MLU ) + ( RMSe / MUC ) ) - Max( Max( Min( RCSe ,RCSe ),( RRSe + RMSe ) ),( ( DS / CS ) - Max( MLU,MLU ) ) ) )", "obj1": 0.7547528517110266, "obj2": 0.1774880961668461}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - ( ARS + FirstVNF_RAM_Server ) ) / ( AMS * DDR ) )", "choosing": "( ( Min( ( RRSe * CS ) ,( MUM + MUC ) ) * Min( ( CS * MUR ) ,Max( RRSe,DS ) ) ) + ( ( ( MUM * MUM ) + MUC ) / ( ( DS + CS ) / Max( MUM,MUM ) ) ) )", "obj1": 0.5874524714828897, "obj2": 0.31882702601191365}, {"determining": "( ( ( MDR * MDR ) + ACS ) - ( ARS + FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( RRSe * CS ) ,( MUM + MUC ) ) * MUM ) + ( ( ( DS + CS ) / Max( MUM,MUM ) ) / Max( ( ( DS + Max( ( RRSe + MUR ),RRSe ) ) / MLU ),MLU ) ) )", "obj1": 0.7452471482889734, "obj2": 0.19738202414631884}, {"determining": "( ( AMS * ARS ) - Max( Const,FirstVNF_Mem_Server ) )", "choosing": "( ( Max( MUR,RMSe ) / Max( DS,MLU ) ) / ( ( CS - RCSe ) - Min( Min( ( RRSe / RCSe ) ,MUR ) ,RCSe ) ) )", "obj1": 0.6102661596958175, "obj2": 0.2814090711043409}, {"determining": "( Min( FirstVNF_CPU_Server ,Max( FirstVNF_RAM,( ( ( ( MRS * MDR ) / ( ( AMS - FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) ) * FirstVNF_RAM ) + ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) - ARS ) ) ) ) + ( PN + MDR ) )", "choosing": "( ( ( MUM / MUM ) * CS ) * ( Min( ( RMSe * CS ) ,( MLU * MUM ) ) * Max( ( MUC / MLU ),( Min( RCSe ,( RMSe * ( MUM + Min( CS ,RCSe ) ) ) ) * MUC ) ) ) )", "obj1": 0.20342205323193915, "obj2": 0.5703521263176919}, {"determining": "( ( AMS * ARS ) - Max( Const,FirstVNF_Mem_Server ) )", "choosing": "( ( Max( MUR,RMSe ) / Max( DS,MLU ) ) / ( ( CS - RCSe ) - Min( Min( ( RRSe / RCSe ) ,MUR ) ,RCSe ) ) )", "obj1": 0.6102661596958175, "obj2": 0.2814090711043409}, {"determining": "( Min( FirstVNF_CPU_Server ,Max( FirstVNF_RAM,( ( ( ( MRS * MDR ) / ( ( AMS - FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) ) * FirstVNF_RAM ) + ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) - ARS ) ) ) ) + ( PN + MDR ) )", "choosing": "( ( ( MUM / MUM ) * CS ) * ( Min( ( RMSe * CS ) ,( MLU * MUM ) ) * Max( ( MUC / MLU ),( Min( RCSe ,( RMSe * ( MUM + Min( CS ,RCSe ) ) ) ) * MUC ) ) ) )", "obj1": 0.20342205323193915, "obj2": 0.5703521263176919}, {"determining": "( ( AMS * ARS ) - Max( Const,FirstVNF_Mem_Server ) )", "choosing": "( ( Max( MUR,RMSe ) / Max( DS,MLU ) ) / ( ( CS - RCSe ) - Min( Min( ( RRSe / RCSe ) ,MUR ) ,RCSe ) ) )", "obj1": 0.6102661596958175, "obj2": 0.2814090711043409}, {"determining": "( Min( FirstVNF_CPU_Server ,Max( FirstVNF_RAM,( ( ( ( MRS * MDR ) / ( ( AMS - FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) ) * FirstVNF_RAM ) + ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) - ARS ) ) ) ) + ( PN + MDR ) )", "choosing": "( ( ( MUM / MUM ) * CS ) * ( Min( ( RMSe * CS ) ,( MLU * MUM ) ) * Max( ( MUC / MLU ),( Min( RCSe ,( RMSe * ( MUM + Min( CS ,RCSe ) ) ) ) * MUC ) ) ) )", "obj1": 0.20342205323193915, "obj2": 0.5703521263176919}, {"determining": "( ( AMS * ARS ) - Max( Const,FirstVNF_Mem_Server ) )", "choosing": "( ( Max( MUR,RMSe ) / Max( DS,MLU ) ) / ( ( CS - RCSe ) - Min( Min( ( RRSe / RCSe ) ,MUR ) ,RCSe ) ) )", "obj1": 0.6102661596958175, "obj2": 0.2814090711043409}, {"determining": "( ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,Min( ( Max( ARS,FirstVNF_Mem_Server ) + ACS ) ,( ARS - DDR ) ) ) ) + ( FirstVNF_Mem_Server + MDR ) )", "choosing": "( Min( ( Min( MLU ,( ( DS + CS ) / MUC ) ) - Min( ( RMSe - ( RMSe / ( ( RMSe * RRSe ) * ( MLU * DS ) ) ) ) ,MLU ) ) ,( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) * ( Max( Min( MUC ,MUM ),( MLU * MUC ) ) * Min( ( CS * CS ) ,( MUM * MLU ) ) ) )", "obj1": 0.20342205323193915, "obj2": 0.5703521263176919}, {"determining": "Max( ( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) ),( DDR * PN ) )", "choosing": "( Min( ( ( RMSe * DS ) * ( RRSe - ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) ) ) ,Max( ( MUR - RMSe ),Min( MLU ,DS ) ) ) * Min( ( Min( RMSe ,MLU ) / Min( RCSe ,CS ) ) ,( Min( MLU ,RCSe ) / ( CS * RMSe ) ) ) )", "obj1": 0.5551330798479087, "obj2": 0.3308996101206186}, {"determining": "( ( MRS - FirstVNF_CPU ) + ( ( MDR * PN ) / FirstVNF_RAM ) )", "choosing": "( Max( RMSe,DS ) / ( RRSe * ( Min( CS ,Min( ( RCSe * RMSe ) ,RRSe ) ) / MUM ) ) )", "obj1": 0.9277566539923955, "obj2": 0.033072536940343206}, {"determining": "( Max( PN,( CRS - FirstVNF_Mem ) ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( RMSe / ( DS / MUM ) ) * MUM ) * ( Min( MUC ,MLU ) / RRSe ) )", "obj1": 0.9961977186311787, "obj2": 0.0016659775037294773}, {"determining": "Min( ( ( ACS / BR ) + MDR ) ,Max( Max( CRS,FirstVNF_RAM_Server ),( Const * ARS ) ) )", "choosing": "( ( DS - MUC ) / ( MUC - ( ( ( MUC - CS ) - Min( ( MUC * ( ( MUR * RCSe ) / Min( CS ,MUM ) ) ) ,MUC ) ) * MUM ) ) )", "obj1": 0.4714828897338403, "obj2": 0.38011292919039164}, {"determining": "Min( ( ( ACS / BR ) + MDR ) ,Max( Max( CRS,FirstVNF_RAM_Server ),( Const * ARS ) ) )", "choosing": "( ( DS - MUC ) / ( MUC - ( ( ( MUC - CS ) - Min( ( MUC * ( ( MUR * RCSe ) / Min( CS ,MUM ) ) ) ,MUC ) ) * MUM ) ) )", "obj1": 0.4714828897338403, "obj2": 0.38011292919039164}, {"determining": "Min( ( ( ACS / BR ) + MDR ) ,Max( Max( CRS,FirstVNF_RAM_Server ),( Const * ARS ) ) )", "choosing": "( ( DS - MUC ) / ( MUC - ( ( ( MUC - CS ) - Min( ( MUC * ( ( MUR * RCSe ) / Min( CS ,MUM ) ) ) ,MUC ) ) * MUM ) ) )", "obj1": 0.4714828897338403, "obj2": 0.38011292919039164}, {"determining": "Min( ( RRS + MDR ) ,Max( Max( CRS,FirstVNF_RAM_Server ),( Const * ARS ) ) )", "choosing": "( ( DS - MUC ) / ( ( ( MUC + MUM ) * ( ( Min( DS ,Min( DS ,CS ) ) - ( CS - RCSe ) ) * MUM ) ) / Max( ( Max( ( ( MLU * ( RMSe / CS ) ) / MLU ),MUR ) - MLU ),MLU ) ) )", "obj1": 0.4714828897338403, "obj2": 0.38011292919039164}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,Max( MUM,RRSe ) )", "obj1": 0.9885931558935361, "obj2": 0.00485830559600144}, {"determining": "( Max( FirstVNF_CPU,Const ) * Min( FirstVNF_CPU_Server ,CRS ) )", "choosing": "( Max( DS,RMSe ) / Max( MLU,( ( CS + MLU ) * MUR ) ) )", "obj1": 0.15019011406844107, "obj2": 0.6592471698958161}, {"determining": "( Max( FirstVNF_CPU,Const ) * Min( AMS ,ARS ) )", "choosing": "Min( ( ( CS + MLU ) * MUR ) ,( ( RCSe - DS ) / Max( MLU,MUC ) ) )", "obj1": 0.0741444866920152, "obj2": 0.7832246521453441}, {"determining": "( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) * ( MRS + BR ) ) )", "choosing": "( Max( ( MLU / RMSe ),( DS / RMSe ) ) * Max( MUC,Min( RRSe ,Max( MUM,MUM ) ) ) )", "obj1": 0.043726235741444866, "obj2": 0.8076324700888016}], "3": [{"determining": "( ( RRS - FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU ,( DDR + FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( CS ,RCSe ) ,( ( MUR + ( ( ( Min( ( DS - CS ) ,RCSe ) * RRSe ) + ( ( MLU - MUR ) * ( RMSe * CS ) ) ) + MUR ) ) + ( Min( RMSe ,( MUM / RMSe ) ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,( ACS * ( BR * FirstVNF_CPU ) ) ) + ( FirstVNF_CPU - Min( ARS ,DDR ) ) )", "choosing": "( Max( RMSe,DS ) / ( RRSe * ( ( ( RRSe - MUR ) * Max( MLU,CS ) ) / MUM ) ) )", "obj1": 0.039923954372623575, "obj2": 0.8080355601472581}, {"determining": "( ( ( FirstVNF_Mem / AMS ) + Max( CRS,RRS ) ) * Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + BR ) * FirstVNF_CPU ) ) )", "choosing": "( Max( Max( MUR,( RMSe / Max( DS,DS ) ) ),CS ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.043726235741444866, "obj2": 0.8076324700888016}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( CS + RCSe ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.7832699619771863, "obj2": 0.09451467040850699}, {"determining": "( ( ( ACS / PN ) * ( ARS - RRS ) ) + ( ( ( ( FirstVNF_RAM + MRS ) + ( ARS * ARS ) ) + FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe * MUM ) / ( ( CS - RRSe ) + RRSe ) )", "obj1": 0.2262357414448669, "obj2": 0.5276172467395419}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,Min( ( Min( ( ( Const * FirstVNF_RAM ) + DDR ) ,FirstVNF_RAM ) / FirstVNF_RAM_Server ) ,( Const * PN ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) * Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - ( DS + ( RRSe / ( ( MUM - RCSe ) * ( DS / MUR ) ) ) ) ) ) )", "obj1": 0.42775665399239543, "obj2": 0.4015148371158489}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,Max( MUM,RRSe ) )", "obj1": 0.9885931558935361, "obj2": 0.00485830559600144}, {"determining": "Max( ( ( Min( MRS ,PN ) / Max( MDR,MRS ) ) * ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,ARS ) ) ),Min( Min( ( FirstVNF_CPU - AMS ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,( ( ARS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem / CRS ) ) ) )", "choosing": "( ( MLU * DS ) / Max( MUC,CS ) )", "obj1": 0.6007604562737643, "obj2": 0.30113532876306554}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( Const * PN ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.42015209125475284, "obj2": 0.4155083539253472}, {"determining": "( Min( FirstVNF_CPU_Server ,Max( FirstVNF_RAM,( ( ( ( MRS * MDR ) / ( ( AMS - FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) ) * FirstVNF_RAM ) + ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) - ARS ) ) ) ) + ( PN + MDR ) )", "choosing": "( ( ( MUM / MUM ) * CS ) * ( Min( ( RMSe * CS ) ,( MLU * MUM ) ) * Max( ( MUC / MLU ),( Min( RCSe ,( RMSe * ( MUM + Min( CS ,RCSe ) ) ) ) * MUC ) ) ) )", "obj1": 0.20342205323193915, "obj2": 0.5703521263176919}, {"determining": "( Min( FirstVNF_CPU_Server ,Max( FirstVNF_RAM,( ( ( ( MRS * MDR ) / ( ( AMS - FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) ) * FirstVNF_RAM ) + ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) - ARS ) ) ) ) + ( PN + MDR ) )", "choosing": "( ( ( MUM / MUM ) * CS ) * ( Min( ( RMSe * CS ) ,( MLU * MUM ) ) * Max( ( MUC / MLU ),( Min( RCSe ,( RMSe * ( MUM + Min( CS ,RCSe ) ) ) ) * MUC ) ) ) )", "obj1": 0.20342205323193915, "obj2": 0.5703521263176919}, {"determining": "( Min( FirstVNF_CPU_Server ,Max( FirstVNF_RAM,( ( ( ( MRS * MDR ) / ( ( AMS - FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) ) * FirstVNF_RAM ) + ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) - ARS ) ) ) ) + ( PN + MDR ) )", "choosing": "( ( ( MUM / MUM ) * CS ) * ( Min( ( RMSe * CS ) ,( MLU * MUM ) ) * Max( ( MUC / MLU ),( Min( RCSe ,( RMSe * ( MUM + Min( CS ,RCSe ) ) ) ) * MUC ) ) ) )", "obj1": 0.20342205323193915, "obj2": 0.5703521263176919}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( ACS - MRS ) ) ) + Max( ( ( RRS + DDR ) * MRS ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( MUM / ( MUC * MUM ) ) * Max( ( ( ( RMSe / Max( MUC,RCSe ) ) * ( Min( RCSe ,RRSe ) - RMSe ) ) * RRSe ),DS ) ) ,Max( MUM,RRSe ) )", "obj1": 0.9752851711026616, "obj2": 0.009987810478121662}, {"determining": "( ( ( MDR + PN ) * ( ARS - RRS ) ) + ( Max( FirstVNF_Mem,RRS ) / ( MDR / Const ) ) )", "choosing": "( ( MUM / MUM ) / ( RRSe + ( CS - RRSe ) ) )", "obj1": 0.2262357414448669, "obj2": 0.5276172467395419}, {"determining": "Max( PN,Min( ACS ,( RRS * ( MRS + AMS ) ) ) )", "choosing": "( ( ( ( MUR - ( MUC + ( CS + RCSe ) ) ) - ( DS / CS ) ) - Max( DS,MUR ) ) + ( ( RMSe / MLU ) / ( MUR + RCSe ) ) )", "obj1": 0.08365019011406843, "obj2": 0.7154692259159153}, {"determining": "Min( ( PN + Const ) ,Max( BR,FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.42775665399239543, "obj2": 0.4015148371158489}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_CPU ) / ( ( FirstVNF_CPU_Server * Min( Min( MRS ,( FirstVNF_Mem_Server * ( ( Const - CRS ) * FirstVNF_Mem ) ) ) ,RRS ) ) - DDR ) )", "choosing": "( ( CS * RMSe ) - Min( ( CS - RCSe ) ,Max( ( MUC / MUM ),MUC ) ) )", "obj1": 0.9372623574144486, "obj2": 0.02934310681239102}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,Max( MUM,RRSe ) )", "obj1": 0.9885931558935361, "obj2": 0.00485830559600144}, {"determining": "( ( ( Const * FirstVNF_CPU ) * Min( MRS ,Const ) ) / ( ( Const + AMS ) + Max( PN,Const ) ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( RCSe,MLU ) ) )", "obj1": 0.24334600760456274, "obj2": 0.5135465063777105}, {"determining": "( Max( PN,( CRS - ( Max( CRS,FirstVNF_Mem ) + ( ( DDR / ( AMS * FirstVNF_Mem_Server ) ) * ACS ) ) ) ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( RMSe / DS ) - MUR ) + ( RCSe / ( MUR / MLU ) ) )", "obj1": 0.9961977186311787, "obj2": 0.0016659775037294773}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "( Max( RMSe,( RRSe - CS ) ) + ( CS - RRSe ) )", "obj1": 0.9771863117870723, "obj2": 0.009167627969174221}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "( Max( Max( ( ( ( RRSe * RRSe ) * MLU ) / ( MUC + MUC ) ),MUR ),DS ) / ( RRSe + ( CS - RRSe ) ) )", "obj1": 0.9828897338403042, "obj2": 0.007910272032073378}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - ( ARS + FirstVNF_RAM_Server ) ) / ( AMS * DDR ) )", "choosing": "( ( Min( ( RRSe * CS ) ,( MUM + MUC ) ) * Min( ( CS * MUR ) ,Max( RRSe,DS ) ) ) + ( ( ( MUM * MUM ) + MUC ) / ( ( DS + CS ) / Max( MUM,MUM ) ) ) )", "obj1": 0.5874524714828897, "obj2": 0.31882702601191365}, {"determining": "( ( AMS * ARS ) - Max( Const,FirstVNF_Mem_Server ) )", "choosing": "( ( Max( MUR,RMSe ) / Max( DS,MLU ) ) / ( ( CS - RCSe ) - Min( Min( ( RRSe / RCSe ) ,MUR ) ,RCSe ) ) )", "obj1": 0.6102661596958175, "obj2": 0.2814090711043409}, {"determining": "( Min( FirstVNF_CPU_Server ,Max( FirstVNF_RAM,( ( ( ( MRS * MDR ) / ( ( AMS - FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) ) * FirstVNF_RAM ) + ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) - ARS ) ) ) ) + ( PN + MDR ) )", "choosing": "( ( ( MUM / MUM ) * CS ) * ( Min( ( RMSe * CS ) ,( MLU * MUM ) ) * Max( ( MUC / MLU ),( Min( RCSe ,( RMSe * ( MUM + Min( CS ,RCSe ) ) ) ) * MUC ) ) ) )", "obj1": 0.20342205323193915, "obj2": 0.5703521263176919}, {"determining": "( ( AMS * ARS ) - Max( Const,FirstVNF_Mem_Server ) )", "choosing": "( ( Max( MUR,RMSe ) / Max( DS,MLU ) ) / ( ( CS - RCSe ) - Min( Min( ( RRSe / RCSe ) ,MUR ) ,RCSe ) ) )", "obj1": 0.6102661596958175, "obj2": 0.2814090711043409}, {"determining": "( Min( FirstVNF_CPU_Server ,Max( FirstVNF_RAM,( ( ( ( MRS * MDR ) / ( ( AMS - FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) ) * FirstVNF_RAM ) + ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) - ARS ) ) ) ) + ( PN + MDR ) )", "choosing": "( ( ( MUM / MUM ) * CS ) * ( Min( ( RMSe * CS ) ,( MLU * MUM ) ) * Max( ( MUC / MLU ),( Min( RCSe ,( RMSe * ( MUM + Min( CS ,RCSe ) ) ) ) * MUC ) ) ) )", "obj1": 0.20342205323193915, "obj2": 0.5703521263176919}, {"determining": "( ( AMS * ARS ) - Max( Const,FirstVNF_Mem_Server ) )", "choosing": "( ( Max( MUR,RMSe ) / Max( DS,MLU ) ) / ( ( CS - RCSe ) - Min( Min( ( RRSe / RCSe ) ,MUR ) ,RCSe ) ) )", "obj1": 0.6102661596958175, "obj2": 0.2814090711043409}, {"determining": "( Min( FirstVNF_CPU_Server ,Max( FirstVNF_RAM,( ( ( ( MRS * MDR ) / ( ( AMS - FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) ) * FirstVNF_RAM ) + ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) - ARS ) ) ) ) + ( PN + MDR ) )", "choosing": "( ( ( MUM / MUM ) * CS ) * ( Min( ( RMSe * CS ) ,( MLU * MUM ) ) * Max( ( MUC / MLU ),( Min( RCSe ,( RMSe * ( MUM + Min( CS ,RCSe ) ) ) ) * MUC ) ) ) )", "obj1": 0.20342205323193915, "obj2": 0.5703521263176919}, {"determining": "( ( AMS * ARS ) - Max( Const,FirstVNF_Mem_Server ) )", "choosing": "( ( Max( MUR,RMSe ) / Max( DS,MLU ) ) / ( ( CS - RCSe ) - Min( Min( ( RRSe / RCSe ) ,MUR ) ,RCSe ) ) )", "obj1": 0.6102661596958175, "obj2": 0.2814090711043409}, {"determining": "( ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,Min( ( Max( ARS,FirstVNF_Mem_Server ) + ACS ) ,( ARS - DDR ) ) ) ) + ( FirstVNF_Mem_Server + MDR ) )", "choosing": "( Min( ( Min( MLU ,( ( DS + CS ) / MUC ) ) - Min( ( RMSe - ( RMSe / ( ( RMSe * RRSe ) * ( MLU * DS ) ) ) ) ,MLU ) ) ,( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) * ( Max( Min( MUC ,MUM ),( MLU * MUC ) ) * Min( ( CS * CS ) ,( MUM * MLU ) ) ) )", "obj1": 0.20342205323193915, "obj2": 0.5703521263176919}, {"determining": "Max( ( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) ),( DDR * PN ) )", "choosing": "( Min( ( ( RMSe * DS ) * ( RRSe - ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) ) ) ,Max( ( MUR - RMSe ),Min( MLU ,DS ) ) ) * Min( ( Min( RMSe ,MLU ) / Min( RCSe ,CS ) ) ,( Min( MLU ,RCSe ) / ( CS * RMSe ) ) ) )", "obj1": 0.5551330798479087, "obj2": 0.3308996101206186}, {"determining": "( Max( PN,( CRS - FirstVNF_Mem ) ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( RMSe / ( DS / MUM ) ) * MUM ) * ( Min( MUC ,MLU ) / RRSe ) )", "obj1": 0.9961977186311787, "obj2": 0.0016659775037294773}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,Max( MUM,RRSe ) )", "obj1": 0.9885931558935361, "obj2": 0.00485830559600144}, {"determining": "( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) * ( MRS + BR ) ) )", "choosing": "( Max( ( MLU / RMSe ),( DS / RMSe ) ) * Max( MUC,Min( RRSe ,Max( MUM,MUM ) ) ) )", "obj1": 0.043726235741444866, "obj2": 0.8076324700888016}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,Max( MUM,RRSe ) )", "obj1": 0.9885931558935361, "obj2": 0.00485830559600144}, {"determining": "( ( BR - ( Min( ACS ,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ) / ( ( ( MRS * Const ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) / ( ( DDR - ARS ) - ( AMS * PN ) ) ) )", "choosing": "( Min( ( RMSe / ( RMSe / MLU ) ) ,RMSe ) / DS )", "obj1": 0.030418250950570342, "obj2": 0.8168473991343923}, {"determining": "( ( Min( MDR ,FirstVNF_Mem ) - Min( MDR ,FirstVNF_Mem ) ) * Min( ( DDR - ACS ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC + MLU ) ,Min( ( MUC - CS ) ,RRSe ) )", "obj1": 0.32129277566539927, "obj2": 0.49429650188070606}, {"determining": "( Max( PN,( CRS - ( ( ( Const * FirstVNF_CPU ) * Min( MRS ,Const ) ) / ( ( Const + AMS ) + Max( PN,Const ) ) ) ) ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( RMSe / ( DS / MUM ) ) * MUM ) * ( ( ( CS + MLU ) * MUR ) / RRSe ) )", "obj1": 0.9961977186311787, "obj2": 0.0016659775037294773}, {"determining": "( Max( PN,( CRS - FirstVNF_Mem ) ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "Min( ( ( CS + MLU ) * MUR ) ,( ( RCSe - DS ) / Max( MLU,MUC ) ) )", "obj1": 0.9961977186311787, "obj2": 0.0016659775037294773}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * MRS ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( MUM / ( MUC * MUM ) ) * Max( ( CS * RRSe ),DS ) ) ,Max( MUM,RRSe ) )", "obj1": 0.9752851711026616, "obj2": 0.009987810478121662}, {"determining": "Min( ( RRS + MDR ) ,Max( ( FirstVNF_CPU_Server + Max( FirstVNF_RAM,Min( ( ( PN / FirstVNF_RAM ) * FirstVNF_RAM ) ,( DDR - ARS ) ) ) ),( Const * ARS ) ) )", "choosing": "( ( DS - MUC ) / ( ( ( MUC + MUM ) * ( ( Min( DS ,Min( DS ,CS ) ) - ( CS - ( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) ) * MUM ) ) / Max( ( Max( ( ( MLU * ( RMSe / CS ) ) / MLU ),MUR ) - MLU ),MLU ) ) )", "obj1": 0.11596958174904944, "obj2": 0.6522893459676665}, {"determining": "( ( FirstVNF_CPU_Server + Max( FirstVNF_RAM,Min( ( ( PN / FirstVNF_RAM ) * FirstVNF_RAM ) ,( DDR - ARS ) ) ) ) + ( FirstVNF_Mem_Server + MDR ) )", "choosing": "( Min( ( Min( MLU ,( ( DS + CS ) / MUC ) ) - ( MUM - MUM ) ) ,( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) * ( Min( ( CS * CS ) ,( MUM * MLU ) ) * Max( Min( MUC ,MLU ),( MLU * MUC ) ) ) )", "obj1": 0.20342205323193915, "obj2": 0.5703521263176919}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,Max( MUM,RRSe ) )", "obj1": 0.9885931558935361, "obj2": 0.00485830559600144}, {"determining": "( ( FirstVNF_CPU_Server + Max( FirstVNF_RAM,Min( ( ( PN / FirstVNF_RAM ) * FirstVNF_RAM ) ,( DDR - ARS ) ) ) ) + ( FirstVNF_Mem_Server + MDR ) )", "choosing": "( Min( ( Min( MLU ,( ( DS + CS ) / MUC ) ) - ( MUM - MUM ) ) ,( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) * ( Min( ( CS * CS ) ,( MUM * MLU ) ) * Max( Min( MUC ,MLU ),( MLU * MUC ) ) ) )", "obj1": 0.20342205323193915, "obj2": 0.5703521263176919}, {"determining": "Max( Max( ACS,Max( ( FirstVNF_CPU_Server + ACS ),Min( ( FirstVNF_RAM - FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) ),PN )", "choosing": "( ( ( ( Max( MUR,CS ) - CS ) - ( DS / CS ) ) + Max( DS,MUR ) ) + ( ( ( ( ( MUM * MUM ) + MUC ) / ( ( DS + CS ) / Max( MUM,MUM ) ) ) + ( Min( ( RRSe * CS ) ,( MUM + MUC ) ) * MUM ) ) / ( MUR + RCSe ) ) )", "obj1": 0.08555133079847908, "obj2": 0.7031382057971688}, {"determining": "( ( FirstVNF_CPU_Server + ACS ) - ( ARS + FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUR - CS ) - ( DS / CS ) ) - Max( DS,MUR ) ) + ( ( RMSe / MLU ) / ( MUR + RCSe ) ) )", "obj1": 0.623574144486692, "obj2": 0.2734420368960954}, {"determining": "Min( ( ( PN / FirstVNF_RAM ) / BR ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,Min( ( PN + Const ) ,Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Max( RCSe,( CS / ( ( RMSe * RRSe ) * ( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) ) ) )", "obj1": 0.43155893536121676, "obj2": 0.3726827001414015}, {"determining": "( ( FirstVNF_CPU_Server + Max( FirstVNF_RAM,Min( Max( ( PN / FirstVNF_RAM ),FirstVNF_RAM ) ,( DDR - ARS ) ) ) ) + Min( PN ,MRS ) )", "choosing": "( Min( ( ( MUM - MUM ) - Min( MUR ,( ( DS + CS ) / Max( RRSe,MLU ) ) ) ) ,( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) * ( Min( ( CS * CS ) ,( MUM * MLU ) ) * Max( Min( MUC ,MLU ),( MLU * MUC ) ) ) )", "obj1": 0.20342205323193915, "obj2": 0.5703521263176919}, {"determining": "( ( FirstVNF_CPU_Server + Max( FirstVNF_RAM,Min( ( ( PN / FirstVNF_RAM ) * FirstVNF_RAM ) ,( DDR - ARS ) ) ) ) + ( FirstVNF_Mem_Server + MDR ) )", "choosing": "( Min( ( Min( MLU ,( ( DS + CS ) / MUC ) ) - ( MUM - MUM ) ) ,( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) * ( Min( ( CS * CS ) ,( MUM * MLU ) ) * Max( Min( MUC ,MLU ),( MLU * MUC ) ) ) )", "obj1": 0.20342205323193915, "obj2": 0.5703521263176919}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * MRS ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( MUM / ( MUC * MUM ) ) * Max( ( CS * RRSe ),DS ) ) ,Max( MUM,RRSe ) )", "obj1": 0.9752851711026616, "obj2": 0.009987810478121662}, {"determining": "( ( FirstVNF_CPU_Server + ACS ) - ( ARS + FirstVNF_RAM_Server ) )", "choosing": "( Min( ( Min( MLU ,( ( DS + CS ) / MUC ) ) - ( MUM - MUM ) ) ,( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) * ( Min( ( CS * CS ) ,( MUM * MLU ) ) * Max( Min( MUC ,MLU ),( MLU * MUC ) ) ) )", "obj1": 0.6653992395437263, "obj2": 0.22787979769550784}, {"determining": "( Max( PN,( CRS - FirstVNF_Mem ) ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "( ( Min( ( MUC + MLU ) ,Min( ( MUC - CS ) ,RRSe ) ) - MUR ) + ( RCSe / ( RMSe / MLU ) ) )", "obj1": 0.8231939163498099, "obj2": 0.05246420209092381}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / Min( ( ( PN / FirstVNF_RAM ) * FirstVNF_RAM ) ,( DDR - ARS ) ) ) ,( ( BR * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "( Max( Max( ( ( ( RRSe * ( MLU * MUC ) ) * MLU ) / ( MUC + MUC ) ),MUR ),DS ) / ( RRSe + ( CS - RRSe ) ) )", "obj1": 0.9828897338403042, "obj2": 0.007910272032073378}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "( Max( Max( ( ( ( RRSe * RRSe ) * MLU ) / ( MUC + MUC ) ),MUR ),DS ) / ( RRSe + ( CS - RRSe ) ) )", "obj1": 0.9828897338403042, "obj2": 0.007910272032073378}, {"determining": "Min( AMS ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( Const * PN ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,Min( ( RRSe / RCSe ) ,MUR ) ) ) ) )", "obj1": 0.42015209125475284, "obj2": 0.4155083539253472}, {"determining": "( ( AMS * ARS ) - Max( Const,FirstVNF_Mem_Server ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.6368821292775665, "obj2": 0.25608548835758327}, {"determining": "( ( Min( RRS ,CRS ) + ( FirstVNF_Mem / AMS ) ) * ( ( FirstVNF_RAM_Server * Const ) * ( MRS + Const ) ) )", "choosing": "( Max( ( MLU / Max( ( MLU / RMSe ),( MUC / RMSe ) ) ),( MUC / RMSe ) ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.049429657794676805, "obj2": 0.8071940489685916}, {"determining": "( ( Min( RRS ,CRS ) + ( FirstVNF_Mem / AMS ) ) * ( ( FirstVNF_RAM_Server * Const ) * ( MRS + BR ) ) )", "choosing": "( Max( ( MLU / RMSe ),( MUC / RMSe ) ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.043726235741444866, "obj2": 0.8076324700888016}, {"determining": "( ( Min( RRS ,CRS ) + ( FirstVNF_Mem / AMS ) ) * ( ( FirstVNF_RAM_Server * Const ) * ( MRS + BR ) ) )", "choosing": "( Max( ( MLU / RMSe ),( MUC / RMSe ) ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.043726235741444866, "obj2": 0.8076324700888016}, {"determining": "( ( ( Const * FirstVNF_CPU ) * Min( MRS ,Const ) ) / ( ( Const + AMS ) + Max( PN,Const ) ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( RCSe,MLU ) ) )", "obj1": 0.22053231939163498, "obj2": 0.5290976020993973}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + Min( ( ( Max( BR,ACS ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / Min( ( BR * ARS ) ,( BR * FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_CPU + BR ) / ( DDR / FirstVNF_RAM ) ) / ( ( RRS - MDR ) / ( ACS * MDR ) ) ) ) ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( ( CS * Min( Max( Min( RRSe ,( DS - CS ) ),RCSe ) ,Min( Max( ( RMSe + CS ),MUM ) ,MUM ) ) ),DS ) ) ,Max( MUM,RRSe ) )", "obj1": 0.9885931558935361, "obj2": 0.00485830559600144}, {"determining": "Min( ( PN - Max( RRS,( Const / RRS ) ) ) ,( FirstVNF_RAM_Server - ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Max( ( CS / ( ( RMSe * RRSe ) * Max( DS,RMSe ) ) ),RCSe ) ) - Max( ( MLU + ( Max( RRSe,( RMSe * RMSe ) ) + ( MUR + MUC ) ) ),( ( ( RCSe * MUM ) / MUR ) + MUM ) ) )", "obj1": 0.8288973384030418, "obj2": 0.05169682175588851}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( CRS - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Max( RCSe,( CS / ( ( RMSe * RRSe ) * Max( DS,RMSe ) ) ) ) )", "obj1": 0.5171102661596958, "obj2": 0.3475606367020432}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Max( RCSe,( CS / ( ( RMSe * RRSe ) * Max( DS,RMSe ) ) ) ) )", "obj1": 0.8650190114068441, "obj2": 0.036127461182254586}, {"determining": "( Max( PN,( CRS - ( Max( FirstVNF_RAM,Min( ( ( PN / FirstVNF_RAM ) * FirstVNF_RAM ) ,( DDR - ARS ) ) ) + ( ( DDR / ( AMS * FirstVNF_Mem_Server ) ) * ACS ) ) ) ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( RMSe / DS ) - MUR ) + ( RCSe / ( MUR / ( MUM * MLU ) ) ) )", "obj1": 0.9961977186311787, "obj2": 0.0016659775037294773}, {"determining": "( Max( PN,( ( ACS * RRS ) - Max( ( MRS + FirstVNF_RAM_Server ),ARS ) ) ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( RMSe / ( DS / MUM ) ) * Max( RCSe,RRSe ) ) * ( Min( MUC ,MLU ) / RRSe ) )", "obj1": 0.9961977186311787, "obj2": 0.0016659775037294773}, {"determining": "( Max( PN,( CRS - FirstVNF_Mem ) ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( RMSe / ( DS / MUM ) ) * MUM ) * ( Min( MUC ,MLU ) / RRSe ) )", "obj1": 0.9961977186311787, "obj2": 0.0016659775037294773}, {"determining": "( ( ( MDR + PN ) * ( ARS - RRS ) ) + ( Max( FirstVNF_Mem,RRS ) / ( MDR / Const ) ) )", "choosing": "( ( MUM / MUM ) / ( RRSe + ( CS - RRSe ) ) )", "obj1": 0.2262357414448669, "obj2": 0.5276172467395419}, {"determining": "( Max( FirstVNF_CPU,Const ) * ( ( ( ( ( MRS - FirstVNF_CPU ) * ( FirstVNF_CPU + FirstVNF_CPU ) ) - Min( ( FirstVNF_CPU - CRS ) ,Max( RRS,MDR ) ) ) - CRS ) * Min( MDR ,MRS ) ) )", "choosing": "( Max( DS,RMSe ) / Max( MLU,( ( CS + ( MLU * MLU ) ) * MUR ) ) )", "obj1": 0.9277566539923955, "obj2": 0.0330725369403432}, {"determining": "( ( ( ( ( Const - FirstVNF_CPU ) * ( FirstVNF_CPU + FirstVNF_CPU ) ) - Min( ( FirstVNF_CPU - CRS ) ,Max( RRS,MDR ) ) ) - CRS ) * Min( MDR ,MRS ) )", "choosing": "( Min( DS ,RMSe ) / ( ( MLU * MLU ) * CS ) )", "obj1": 0.967680608365019, "obj2": 0.011005833257046812}, {"determining": "( ( ( ( Max( FirstVNF_Mem_Server,AMS ) - Min( DDR ,( Max( BR,ACS ) + FirstVNF_CPU ) ) ) - Min( ( FirstVNF_CPU - CRS ) ,Max( FirstVNF_CPU,MDR ) ) ) - CRS ) * Min( MDR ,MRS ) )", "choosing": "( Max( CS,RMSe ) / Max( Min( RMSe ,RMSe ),( ( CS + MLU ) * MUR ) ) )", "obj1": 0.9277566539923955, "obj2": 0.0330725369403432}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( ( ARS / BR ) * PN ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,Max( MLU,Max( RRSe,RRSe ) ) )", "obj1": 0.9885931558935361, "obj2": 0.00485830559600144}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "( Max( Max( ( ( ( RRSe * RRSe ) * MLU ) / ( MUC + MUC ) ),MUR ),DS ) / ( RRSe + ( CS - RRSe ) ) )", "obj1": 0.9828897338403042, "obj2": 0.007910272032073378}, {"determining": "( Max( FirstVNF_CPU,Const ) * Min( FirstVNF_CPU_Server ,( ( AMS * ARS ) - Max( Const,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( DS,RMSe ) / Max( MLU,( ( CS + MLU ) * MUR ) ) )", "obj1": 0.7072243346007605, "obj2": 0.19871523126538682}, {"determining": "( ( AMS * ( ( ACS + MRS ) - CRS ) ) - Max( Const,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( CS * DS ) - CS ) + ( RRSe * RRSe ) ),RMSe ) / Max( MLU,( MUR * ( CS + MLU ) ) ) )", "obj1": 0.7072243346007605, "obj2": 0.19871523126538682}, {"determining": "( Max( MDR,AMS ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( RMSe / ( Min( ( RMSe * MLU ) ,( CS * MUC ) ) / MUM ) ) * MUM ) * ( Min( MUC ,MLU ) / RRSe ) )", "obj1": 0.39923954372623577, "obj2": 0.45210484231767595}, {"determining": "( Max( PN,( CRS - FirstVNF_Mem ) ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( RMSe / ( DS / MUM ) ) * MUM ) * ( Min( MUC ,MLU ) / RRSe ) )", "obj1": 0.9961977186311787, "obj2": 0.0016659775037294773}, {"determining": "( ( FirstVNF_CPU_Server + Max( FirstVNF_RAM,Min( ( ( PN / FirstVNF_RAM ) * FirstVNF_RAM ) ,( DDR - ARS ) ) ) ) + ( FirstVNF_Mem_Server + MDR ) )", "choosing": "( Min( ( Min( MLU ,( ( DS + CS ) / MUC ) ) - ( MUM - MUM ) ) ,( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) * ( Min( ( CS * CS ) ,( MUM * MLU ) ) * Max( Min( MUC ,MLU ),( MLU * MUC ) ) ) )", "obj1": 0.20342205323193915, "obj2": 0.5703521263176919}, {"determining": "Max( ( ( Min( MRS ,PN ) / Max( MDR,MRS ) ) * ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,ARS ) ) ),Min( Min( ( FirstVNF_CPU - AMS ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,( ( ARS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem / CRS ) ) ) )", "choosing": "( ( MLU * DS ) / Max( MUC,CS ) )", "obj1": 0.6007604562737643, "obj2": 0.30113532876306554}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( Const * PN ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.42015209125475284, "obj2": 0.4155083539253472}, {"determining": "( ( ( ( Const * PN ) + PN ) * ( ARS - RRS ) ) + ( Max( FirstVNF_Mem,RRS ) / ( MDR / Const ) ) )", "choosing": "( ( MUM / MUM ) / ( CS + ( CS - RRSe ) ) )", "obj1": 0.3269961977186312, "obj2": 0.4665599166210366}, {"determining": "Min( ( FirstVNF_Mem_Server / MDR ) ,( BR * BR ) )", "choosing": "( ( MUM / MUM ) / ( RRSe + ( ( MUM + RRSe ) - RRSe ) ) )", "obj1": 0.2585551330798479, "obj2": 0.500705339760169}, {"determining": "Max( Max( ACS,Max( AMS,RRS ) ),PN )", "choosing": "( ( ( ( MUR - CS ) - ( DS / CS ) ) - Max( DS,MUR ) ) + ( ( RMSe / MLU ) / Min( RRSe ,( DS - RMSe ) ) ) )", "obj1": 0.055133079847908745, "obj2": 0.7206956000648851}, {"determining": "Max( Max( ACS,Max( AMS,PN ) ),PN )", "choosing": "( ( ( ( MUR - CS ) - ( DS / CS ) ) - Max( DS,MUR ) ) + ( ( RMSe / MLU ) / ( MUR + RCSe ) ) )", "obj1": 0.08365019011406843, "obj2": 0.7154692259159153}, {"determining": "( ( ( MDR / PN ) * ( ( ( RRS + ( FirstVNF_RAM_Server - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) * ( MDR / MDR ) ) - ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) ) + ( PN - FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( ( ( ( RRSe * Max( MUM,RRSe ) ) * MLU ) / ( MUC + MUC ) ),RMSe ),DS ) / ( Min( ( RRSe * Max( MLU,MUM ) ) ,DS ) + ( CS - CS ) ) )", "obj1": 0.36311787072243346, "obj2": 0.45693849928299907}, {"determining": "( ( ( Const * FirstVNF_CPU ) * Max( ACS,Min( ARS ,AMS ) ) ) / ( ( ( ( FirstVNF_Mem_Server + RRS ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) / ( Max( PN,FirstVNF_RAM ) * ( FirstVNF_RAM_Server + PN ) ) ) + ( ( RRS + MDR ) - BR ) ) )", "choosing": "( ( Min( ( RRSe - ( MUM - Min( ( RMSe - RMSe ) ,Min( DS ,( MUR * MUR ) ) ) ) ) ,MLU ) + ( MLU / CS ) ) - Max( RRSe,CS ) )", "obj1": 0.714828897338403, "obj2": 0.17003430615060974}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( Const * PN ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RMSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.41254752851711024, "obj2": 0.4275078208976544}, {"determining": "( ( ( Const + Const ) / FirstVNF_RAM ) + ( MRS - FirstVNF_CPU ) )", "choosing": "( Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) - ( Max( Max( CS,RCSe ),( ( Min( CS ,MLU ) - ( Max( Max( RMSe,RMSe ),MLU ) / MLU ) ) * RCSe ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) )", "obj1": 0.9467680608365019, "obj2": 0.022012393458262215}, {"determining": "( Max( PN,( CRS - ( Max( CRS,FirstVNF_Mem ) + Max( Min( Min( FirstVNF_CPU_Server ,CRS ) ,Max( PN,BR ) ),( ( DDR * DDR ) / ( BR - RRS ) ) ) ) ) ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( RMSe / DS ) - MUR ) + ( RCSe / ( ( CS + MLU ) / MLU ) ) )", "obj1": 0.9961977186311787, "obj2": 0.0016659775037294773}, {"determining": "( Max( PN,( CRS - ( Max( CRS,FirstVNF_Mem ) + ( ( DDR / ( AMS * FirstVNF_Mem_Server ) ) * ACS ) ) ) ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( RMSe / DS ) - MUR ) + ( RCSe / ( MUR / MLU ) ) )", "obj1": 0.9961977186311787, "obj2": 0.0016659775037294773}, {"determining": "( ( AMS * ARS ) - Max( Min( ( ( Min( ( Min( FirstVNF_RAM_Server ,PN ) / FirstVNF_Mem_Server ) ,Min( ( ARS / FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) ) - ( MRS - BR ) ) - MRS ) ,( Min( Max( PN,FirstVNF_CPU ) ,Min( BR ,Const ) ) / ( Max( CRS,FirstVNF_Mem_Server ) - ( AMS - FirstVNF_CPU_Server ) ) ) ),FirstVNF_Mem_Server ) )", "choosing": "( ( Max( MUR,RMSe ) / Max( DS,MLU ) ) / ( CS * ( Min( Max( ( MUR * DS ),Max( MLU,( MUM / ( RMSe + DS ) ) ) ) ,MUC ) / ( RCSe + CS ) ) ) )", "obj1": 0.5893536121673004, "obj2": 0.30213191529413574}, {"determining": "( ( AMS * ARS ) - Max( ( ARS + Min( Min( ( ( FirstVNF_CPU / Min( PN ,FirstVNF_Mem ) ) / ( Const / ( FirstVNF_Mem_Server * MRS ) ) ) ,( ( ACS + ACS ) / FirstVNF_RAM_Server ) ) ,Max( Const,( ( ARS * DDR ) / MDR ) ) ) ),FirstVNF_Mem_Server ) )", "choosing": "( ( Max( MUR,RMSe ) / Max( MLU,DS ) ) / ( ( CS - RCSe ) - Min( Min( ( RMSe / RCSe ) ,( MUC / ( MLU - RRSe ) ) ) ,RCSe ) ) )", "obj1": 0.6577946768060836, "obj2": 0.23274545073157624}, {"determining": "( ( ( FirstVNF_Mem_Server * ( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) ) ) + ACS ) - ( ARS + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe * MUM ) + ( ( ( MUM * MUM ) + MUC ) / ( ( DS + CS ) / Max( MUM,MUM ) ) ) )", "obj1": 0.9847908745247148, "obj2": 0.006660554635174984}, {"determining": "( ( FirstVNF_CPU_Server + Max( FirstVNF_RAM,Min( ( ( PN / FirstVNF_RAM ) * BR ) ,( ( CRS * ( Const * ARS ) ) + ARS ) ) ) ) + ( FirstVNF_Mem_Server + MDR ) )", "choosing": "( Min( ( Min( MLU ,( ( DS + CS ) / MUC ) ) - ( MUM - MUM ) ) ,( ( RRSe * ( DS - RCSe ) ) - ( RCSe + RMSe ) ) ) * ( Min( ( CS * CS ) ,( MUM * MLU ) ) * Max( Min( MUC ,RMSe ),( MLU * MUC ) ) ) )", "obj1": 0.17110266159695817, "obj2": 0.5737117302626505}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,Min( ( PN + Const ) ,Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( Min( MLU ,( ( DS + CS ) / MUC ) ) - ( MUM - MUM ) ) ,( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) * ( Min( ( CS * CS ) ,( MUM * MLU ) ) * Max( Min( MUC ,MLU ),( MLU * MUC ) ) ) )", "obj1": 0.20342205323193915, "obj2": 0.5703521263176919}, {"determining": "( Max( PN,( CRS - ( Max( PN,( CRS - FirstVNF_Mem ) ) + ( ( DDR / ( AMS * FirstVNF_Mem_Server ) ) * ACS ) ) ) ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( RMSe / DS ) - MUR ) + ( RCSe / ( MUC - MUR ) ) )", "obj1": 0.9961977186311787, "obj2": 0.0016659775037294773}, {"determining": "( ( Min( RRS ,CRS ) + ( FirstVNF_Mem / AMS ) ) * ( ( Max( PN,( Min( Const ,Min( MDR ,FirstVNF_RAM ) ) - Max( RRS,ARS ) ) ) + FirstVNF_RAM_Server ) * ( MRS + DDR ) ) )", "choosing": "( Max( ( MUM * Max( RCSe,( ( RRSe * RCSe ) + ( RMSe - RRSe ) ) ) ),Min( Min( MUC ,( MUM / RRSe ) ) ,RRSe ) ) * Max( ( MUC / MUC ),Max( RCSe,Max( Min( Max( Min( ( RCSe * MUC ) ,Max( RCSe,MUM ) ),RRSe ) ,MUC ),RCSe ) ) ) )", "obj1": 0.03802281368821293, "obj2": 0.8150216708283575}, {"determining": "( ( ( ( ( MRS - FirstVNF_CPU ) * ( FirstVNF_CPU + FirstVNF_CPU ) ) - Min( ( FirstVNF_CPU - CRS ) ,Max( RRS,MDR ) ) ) - CRS ) * ( ( ACS / BR ) + MDR ) )", "choosing": "( Min( DS ,RMSe ) / ( ( MUC * MLU ) * MUC ) )", "obj1": 0.9657794676806084, "obj2": 0.015352591680390295}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_CPU ) / ( Min( CRS ,Const ) - DDR ) )", "choosing": "( Max( CS,RMSe ) - Min( ( CS - RCSe ) ,( RRSe + RMSe ) ) )", "obj1": 0.9372623574144486, "obj2": 0.02934310681239102}], "4": [{"determining": "( ( RRS - FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU ,( DDR + FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( CS ,RCSe ) ,( ( MUR + ( ( ( Min( ( DS - CS ) ,RCSe ) * RRSe ) + ( ( MLU - MUR ) * ( RMSe * CS ) ) ) + MUR ) ) + ( Min( RMSe ,( MUM / RMSe ) ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,( ACS * ( BR * FirstVNF_CPU ) ) ) + ( FirstVNF_CPU - Min( ARS ,DDR ) ) )", "choosing": "( Max( RMSe,DS ) / ( RRSe * ( ( ( RRSe - MUR ) * Max( MLU,CS ) ) / MUM ) ) )", "obj1": 0.039923954372623575, "obj2": 0.8080355601472581}, {"determining": "( ( ( FirstVNF_Mem / AMS ) + Max( CRS,RRS ) ) * Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + BR ) * FirstVNF_CPU ) ) )", "choosing": "( Max( Max( MUR,( RMSe / Max( DS,DS ) ) ),CS ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.043726235741444866, "obj2": 0.8076324700888016}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( CS + RCSe ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.7832699619771863, "obj2": 0.09451467040850699}, {"determining": "( ( ( ACS / PN ) * ( ARS - RRS ) ) + ( ( ( ( FirstVNF_RAM + MRS ) + ( ARS * ARS ) ) + FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe * MUM ) / ( ( CS - RRSe ) + RRSe ) )", "obj1": 0.2262357414448669, "obj2": 0.5276172467395419}, {"determining": "( Min( FirstVNF_CPU_Server ,Max( FirstVNF_RAM,( ( ( ( MRS * MDR ) / ( ( AMS - FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) ) * FirstVNF_RAM ) + ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) - ARS ) ) ) ) + ( PN + MDR ) )", "choosing": "( ( ( MUM / MUM ) * CS ) * ( Min( ( RMSe * CS ) ,( MLU * MUM ) ) * Max( ( MUC / MLU ),( Min( RCSe ,( RMSe * ( MUM + Min( CS ,RCSe ) ) ) ) * MUC ) ) ) )", "obj1": 0.20342205323193915, "obj2": 0.5703521263176919}, {"determining": "( Min( FirstVNF_CPU_Server ,Max( FirstVNF_RAM,( ( ( ( MRS * MDR ) / ( ( AMS - FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) ) * FirstVNF_RAM ) + ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) - ARS ) ) ) ) + ( PN + MDR ) )", "choosing": "( ( ( MUM / MUM ) * CS ) * ( Min( ( RMSe * CS ) ,( MLU * MUM ) ) * Max( ( MUC / MLU ),( Min( RCSe ,( RMSe * ( MUM + Min( CS ,RCSe ) ) ) ) * MUC ) ) ) )", "obj1": 0.20342205323193915, "obj2": 0.5703521263176919}, {"determining": "( Min( FirstVNF_CPU_Server ,Max( FirstVNF_RAM,( ( ( ( MRS * MDR ) / ( ( AMS - FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) ) * FirstVNF_RAM ) + ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) - ARS ) ) ) ) + ( PN + MDR ) )", "choosing": "( ( ( MUM / MUM ) * CS ) * ( Min( ( RMSe * CS ) ,( MLU * MUM ) ) * Max( ( MUC / MLU ),( Min( RCSe ,( RMSe * ( MUM + Min( CS ,RCSe ) ) ) ) * MUC ) ) ) )", "obj1": 0.20342205323193915, "obj2": 0.5703521263176919}, {"determining": "( ( ( MDR + PN ) * ( ARS - RRS ) ) + ( Max( FirstVNF_Mem,RRS ) / ( MDR / Const ) ) )", "choosing": "( ( MUM / MUM ) / ( RRSe + ( CS - RRSe ) ) )", "obj1": 0.2262357414448669, "obj2": 0.5276172467395419}, {"determining": "( Min( FirstVNF_CPU_Server ,Max( FirstVNF_RAM,( ( ( ( MRS * MDR ) / ( ( AMS - FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) ) * FirstVNF_RAM ) + ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) - ARS ) ) ) ) + ( PN + MDR ) )", "choosing": "( ( ( MUM / MUM ) * CS ) * ( Min( ( RMSe * CS ) ,( MLU * MUM ) ) * Max( ( MUC / MLU ),( Min( RCSe ,( RMSe * ( MUM + Min( CS ,RCSe ) ) ) ) * MUC ) ) ) )", "obj1": 0.20342205323193915, "obj2": 0.5703521263176919}, {"determining": "( Min( FirstVNF_CPU_Server ,Max( FirstVNF_RAM,( ( ( ( MRS * MDR ) / ( ( AMS - FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) ) * FirstVNF_RAM ) + ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) - ARS ) ) ) ) + ( PN + MDR ) )", "choosing": "( ( ( MUM / MUM ) * CS ) * ( Min( ( RMSe * CS ) ,( MLU * MUM ) ) * Max( ( MUC / MLU ),( Min( RCSe ,( RMSe * ( MUM + Min( CS ,RCSe ) ) ) ) * MUC ) ) ) )", "obj1": 0.20342205323193915, "obj2": 0.5703521263176919}, {"determining": "( Min( FirstVNF_CPU_Server ,Max( FirstVNF_RAM,( ( ( ( MRS * MDR ) / ( ( AMS - FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) ) * FirstVNF_RAM ) + ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) - ARS ) ) ) ) + ( PN + MDR ) )", "choosing": "( ( ( MUM / MUM ) * CS ) * ( Min( ( RMSe * CS ) ,( MLU * MUM ) ) * Max( ( MUC / MLU ),( Min( RCSe ,( RMSe * ( MUM + Min( CS ,RCSe ) ) ) ) * MUC ) ) ) )", "obj1": 0.20342205323193915, "obj2": 0.5703521263176919}, {"determining": "( ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,Min( ( Max( ARS,FirstVNF_Mem_Server ) + ACS ) ,( ARS - DDR ) ) ) ) + ( FirstVNF_Mem_Server + MDR ) )", "choosing": "( Min( ( Min( MLU ,( ( DS + CS ) / MUC ) ) - Min( ( RMSe - ( RMSe / ( ( RMSe * RRSe ) * ( MLU * DS ) ) ) ) ,MLU ) ) ,( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) * ( Max( Min( MUC ,MUM ),( MLU * MUC ) ) * Min( ( CS * CS ) ,( MUM * MLU ) ) ) )", "obj1": 0.20342205323193915, "obj2": 0.5703521263176919}, {"determining": "( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) * ( MRS + BR ) ) )", "choosing": "( Max( ( MLU / RMSe ),( DS / RMSe ) ) * Max( MUC,Min( RRSe ,Max( MUM,MUM ) ) ) )", "obj1": 0.043726235741444866, "obj2": 0.8076324700888016}, {"determining": "( ( BR - ( Min( ACS ,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ) / ( ( ( MRS * Const ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) / ( ( DDR - ARS ) - ( AMS * PN ) ) ) )", "choosing": "( Min( ( RMSe / ( RMSe / MLU ) ) ,RMSe ) / DS )", "obj1": 0.030418250950570342, "obj2": 0.8168473991343923}, {"determining": "Min( ( RRS + MDR ) ,Max( ( FirstVNF_CPU_Server + Max( FirstVNF_RAM,Min( ( ( PN / FirstVNF_RAM ) * FirstVNF_RAM ) ,( DDR - ARS ) ) ) ),( Const * ARS ) ) )", "choosing": "( ( DS - MUC ) / ( ( ( MUC + MUM ) * ( ( Min( DS ,Min( DS ,CS ) ) - ( CS - ( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) ) * MUM ) ) / Max( ( Max( ( ( MLU * ( RMSe / CS ) ) / MLU ),MUR ) - MLU ),MLU ) ) )", "obj1": 0.11596958174904944, "obj2": 0.6522893459676665}, {"determining": "( ( FirstVNF_CPU_Server + Max( FirstVNF_RAM,Min( ( ( PN / FirstVNF_RAM ) * FirstVNF_RAM ) ,( DDR - ARS ) ) ) ) + ( FirstVNF_Mem_Server + MDR ) )", "choosing": "( Min( ( Min( MLU ,( ( DS + CS ) / MUC ) ) - ( MUM - MUM ) ) ,( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) * ( Min( ( CS * CS ) ,( MUM * MLU ) ) * Max( Min( MUC ,MLU ),( MLU * MUC ) ) ) )", "obj1": 0.20342205323193915, "obj2": 0.5703521263176919}, {"determining": "( ( FirstVNF_CPU_Server + Max( FirstVNF_RAM,Min( ( ( PN / FirstVNF_RAM ) * FirstVNF_RAM ) ,( DDR - ARS ) ) ) ) + ( FirstVNF_Mem_Server + MDR ) )", "choosing": "( Min( ( Min( MLU ,( ( DS + CS ) / MUC ) ) - ( MUM - MUM ) ) ,( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) * ( Min( ( CS * CS ) ,( MUM * MLU ) ) * Max( Min( MUC ,MLU ),( MLU * MUC ) ) ) )", "obj1": 0.20342205323193915, "obj2": 0.5703521263176919}, {"determining": "Max( Max( ACS,Max( ( FirstVNF_CPU_Server + ACS ),Min( ( FirstVNF_RAM - FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) ),PN )", "choosing": "( ( ( ( Max( MUR,CS ) - CS ) - ( DS / CS ) ) + Max( DS,MUR ) ) + ( ( ( ( ( MUM * MUM ) + MUC ) / ( ( DS + CS ) / Max( MUM,MUM ) ) ) + ( Min( ( RRSe * CS ) ,( MUM + MUC ) ) * MUM ) ) / ( MUR + RCSe ) ) )", "obj1": 0.08555133079847908, "obj2": 0.7031382057971688}, {"determining": "( ( FirstVNF_CPU_Server + ACS ) - ( ARS + FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUR - CS ) - ( DS / CS ) ) - Max( DS,MUR ) ) + ( ( RMSe / MLU ) / ( MUR + RCSe ) ) )", "obj1": 0.623574144486692, "obj2": 0.2734420368960954}, {"determining": "Min( ( ( PN / FirstVNF_RAM ) / BR ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,Min( ( PN + Const ) ,Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Max( RCSe,( CS / ( ( RMSe * RRSe ) * ( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) ) ) )", "obj1": 0.43155893536121676, "obj2": 0.3726827001414015}, {"determining": "( ( FirstVNF_CPU_Server + Max( FirstVNF_RAM,Min( Max( ( PN / FirstVNF_RAM ),FirstVNF_RAM ) ,( DDR - ARS ) ) ) ) + Min( PN ,MRS ) )", "choosing": "( Min( ( ( MUM - MUM ) - Min( MUR ,( ( DS + CS ) / Max( RRSe,MLU ) ) ) ) ,( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) * ( Min( ( CS * CS ) ,( MUM * MLU ) ) * Max( Min( MUC ,MLU ),( MLU * MUC ) ) ) )", "obj1": 0.20342205323193915, "obj2": 0.5703521263176919}, {"determining": "( ( FirstVNF_CPU_Server + Max( FirstVNF_RAM,Min( ( ( PN / FirstVNF_RAM ) * FirstVNF_RAM ) ,( DDR - ARS ) ) ) ) + ( FirstVNF_Mem_Server + MDR ) )", "choosing": "( Min( ( Min( MLU ,( ( DS + CS ) / MUC ) ) - ( MUM - MUM ) ) ,( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) * ( Min( ( CS * CS ) ,( MUM * MLU ) ) * Max( Min( MUC ,MLU ),( MLU * MUC ) ) ) )", "obj1": 0.20342205323193915, "obj2": 0.5703521263176919}, {"determining": "( ( FirstVNF_CPU_Server + ACS ) - ( ARS + FirstVNF_RAM_Server ) )", "choosing": "( Min( ( Min( MLU ,( ( DS + CS ) / MUC ) ) - ( MUM - MUM ) ) ,( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) * ( Min( ( CS * CS ) ,( MUM * MLU ) ) * Max( Min( MUC ,MLU ),( MLU * MUC ) ) ) )", "obj1": 0.6653992395437263, "obj2": 0.22787979769550784}, {"determining": "( Max( PN,( CRS - FirstVNF_Mem ) ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "( ( Min( ( MUC + MLU ) ,Min( ( MUC - CS ) ,RRSe ) ) - MUR ) + ( RCSe / ( RMSe / MLU ) ) )", "obj1": 0.8231939163498099, "obj2": 0.05246420209092381}, {"determining": "( ( AMS * ARS ) - Max( Const,FirstVNF_Mem_Server ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.6368821292775665, "obj2": 0.25608548835758327}, {"determining": "( ( Min( RRS ,CRS ) + ( FirstVNF_Mem / AMS ) ) * ( ( FirstVNF_RAM_Server * Const ) * ( MRS + BR ) ) )", "choosing": "( Max( ( MLU / RMSe ),( MUC / RMSe ) ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.043726235741444866, "obj2": 0.8076324700888016}, {"determining": "( ( Min( RRS ,CRS ) + ( FirstVNF_Mem / AMS ) ) * ( ( FirstVNF_RAM_Server * Const ) * ( MRS + BR ) ) )", "choosing": "( Max( ( MLU / RMSe ),( MUC / RMSe ) ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.043726235741444866, "obj2": 0.8076324700888016}, {"determining": "( ( ( Const * FirstVNF_CPU ) * Min( MRS ,Const ) ) / ( ( Const + AMS ) + Max( PN,Const ) ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( RCSe,MLU ) ) )", "obj1": 0.22053231939163498, "obj2": 0.5290976020993973}, {"determining": "( ( ( MDR + PN ) * ( ARS - RRS ) ) + ( Max( FirstVNF_Mem,RRS ) / ( MDR / Const ) ) )", "choosing": "( ( MUM / MUM ) / ( RRSe + ( CS - RRSe ) ) )", "obj1": 0.2262357414448669, "obj2": 0.5276172467395419}, {"determining": "( Max( FirstVNF_CPU,Const ) * Min( FirstVNF_CPU_Server ,( ( AMS * ARS ) - Max( Const,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( DS,RMSe ) / Max( MLU,( ( CS + MLU ) * MUR ) ) )", "obj1": 0.7072243346007605, "obj2": 0.19871523126538682}, {"determining": "( ( AMS * ( ( ACS + MRS ) - CRS ) ) - Max( Const,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( CS * DS ) - CS ) + ( RRSe * RRSe ) ),RMSe ) / Max( MLU,( MUR * ( CS + MLU ) ) ) )", "obj1": 0.7072243346007605, "obj2": 0.19871523126538682}, {"determining": "( ( FirstVNF_CPU_Server + Max( FirstVNF_RAM,Min( ( ( PN / FirstVNF_RAM ) * FirstVNF_RAM ) ,( DDR - ARS ) ) ) ) + ( FirstVNF_Mem_Server + MDR ) )", "choosing": "( Min( ( Min( MLU ,( ( DS + CS ) / MUC ) ) - ( MUM - MUM ) ) ,( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) * ( Min( ( CS * CS ) ,( MUM * MLU ) ) * Max( Min( MUC ,MLU ),( MLU * MUC ) ) ) )", "obj1": 0.20342205323193915, "obj2": 0.5703521263176919}, {"determining": "Min( ( FirstVNF_Mem_Server / MDR ) ,( BR * BR ) )", "choosing": "( ( MUM / MUM ) / ( RRSe + ( ( MUM + RRSe ) - RRSe ) ) )", "obj1": 0.2585551330798479, "obj2": 0.500705339760169}, {"determining": "Max( Max( ACS,Max( AMS,RRS ) ),PN )", "choosing": "( ( ( ( MUR - CS ) - ( DS / CS ) ) - Max( DS,MUR ) ) + ( ( RMSe / MLU ) / Min( RRSe ,( DS - RMSe ) ) ) )", "obj1": 0.055133079847908745, "obj2": 0.7206956000648851}, {"determining": "( ( ( MDR / PN ) * ( ( ( RRS + ( FirstVNF_RAM_Server - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) * ( MDR / MDR ) ) - ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) ) + ( PN - FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( ( ( ( RRSe * Max( MUM,RRSe ) ) * MLU ) / ( MUC + MUC ) ),RMSe ),DS ) / ( Min( ( RRSe * Max( MLU,MUM ) ) ,DS ) + ( CS - CS ) ) )", "obj1": 0.36311787072243346, "obj2": 0.45693849928299907}, {"determining": "( ( ( Const * FirstVNF_CPU ) * Max( ACS,Min( ARS ,AMS ) ) ) / ( ( ( ( FirstVNF_Mem_Server + RRS ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) / ( Max( PN,FirstVNF_RAM ) * ( FirstVNF_RAM_Server + PN ) ) ) + ( ( RRS + MDR ) - BR ) ) )", "choosing": "( ( Min( ( RRSe - ( MUM - Min( ( RMSe - RMSe ) ,Min( DS ,( MUR * MUR ) ) ) ) ) ,MLU ) + ( MLU / CS ) ) - Max( RRSe,CS ) )", "obj1": 0.714828897338403, "obj2": 0.17003430615060974}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( Const * PN ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RMSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.41254752851711024, "obj2": 0.4275078208976544}, {"determining": "( ( AMS * ARS ) - Max( ( ARS + Min( Min( ( ( FirstVNF_CPU / Min( PN ,FirstVNF_Mem ) ) / ( Const / ( FirstVNF_Mem_Server * MRS ) ) ) ,( ( ACS + ACS ) / FirstVNF_RAM_Server ) ) ,Max( Const,( ( ARS * DDR ) / MDR ) ) ) ),FirstVNF_Mem_Server ) )", "choosing": "( ( Max( MUR,RMSe ) / Max( MLU,DS ) ) / ( ( CS - RCSe ) - Min( Min( ( RMSe / RCSe ) ,( MUC / ( MLU - RRSe ) ) ) ,RCSe ) ) )", "obj1": 0.6577946768060836, "obj2": 0.23274545073157624}, {"determining": "( ( FirstVNF_CPU_Server + Max( FirstVNF_RAM,Min( ( ( PN / FirstVNF_RAM ) * BR ) ,( ( CRS * ( Const * ARS ) ) + ARS ) ) ) ) + ( FirstVNF_Mem_Server + MDR ) )", "choosing": "( Min( ( Min( MLU ,( ( DS + CS ) / MUC ) ) - ( MUM - MUM ) ) ,( ( RRSe * ( DS - RCSe ) ) - ( RCSe + RMSe ) ) ) * ( Min( ( CS * CS ) ,( MUM * MLU ) ) * Max( Min( MUC ,RMSe ),( MLU * MUC ) ) ) )", "obj1": 0.17110266159695817, "obj2": 0.5737117302626505}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,Min( ( PN + Const ) ,Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( Min( MLU ,( ( DS + CS ) / MUC ) ) - ( MUM - MUM ) ) ,( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) * ( Min( ( CS * CS ) ,( MUM * MLU ) ) * Max( Min( MUC ,MLU ),( MLU * MUC ) ) ) )", "obj1": 0.20342205323193915, "obj2": 0.5703521263176919}, {"determining": "( ( Min( RRS ,CRS ) + ( FirstVNF_Mem / AMS ) ) * ( ( Max( PN,( Min( Const ,Min( MDR ,FirstVNF_RAM ) ) - Max( RRS,ARS ) ) ) + FirstVNF_RAM_Server ) * ( MRS + DDR ) ) )", "choosing": "( Max( ( MUM * Max( RCSe,( ( RRSe * RCSe ) + ( RMSe - RRSe ) ) ) ),Min( Min( MUC ,( MUM / RRSe ) ) ,RRSe ) ) * Max( ( MUC / MUC ),Max( RCSe,Max( Min( Max( Min( ( RCSe * MUC ) ,Max( RCSe,MUM ) ),RRSe ) ,MUC ),RCSe ) ) ) )", "obj1": 0.03802281368821293, "obj2": 0.8150216708283575}, {"determining": "( Max( PN,( CRS - FirstVNF_Mem ) ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "( ( Min( ( MUC + MLU ) ,Min( ( MUC - CS ) ,RRSe ) ) - MUR ) + ( RCSe / ( RMSe / MLU ) ) )", "obj1": 0.8231939163498099, "obj2": 0.05246420209092381}, {"determining": "( ( FirstVNF_CPU_Server + Max( FirstVNF_RAM,Min( ( ( PN / FirstVNF_RAM ) * FirstVNF_RAM ) ,( DDR - ARS ) ) ) ) + ( FirstVNF_Mem_Server + MDR ) )", "choosing": "( Min( ( Min( MLU ,( ( DS + CS ) / MUC ) ) - ( MUM - MUM ) ) ,( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) * ( Min( ( CS * CS ) ,( MUM * MLU ) ) * Max( Min( MUC ,MLU ),( MLU * MUC ) ) ) )", "obj1": 0.20342205323193915, "obj2": 0.5703521263176919}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,Max( MUM,RRSe ) )", "obj1": 0.870722433460076, "obj2": 0.03304601586691669}, {"determining": "Max( Max( ACS,Max( AMS,PN ) ),FirstVNF_RAM )", "choosing": "( ( ( ( MUR - CS ) - ( DS / CS ) ) - Max( DS,MUR ) ) + ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) )", "obj1": 0.14638783269961977, "obj2": 0.603146016105715}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( ( ARS / BR ) * PN ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,Max( MLU,Max( RRSe,RRSe ) ) )", "obj1": 0.41634980988593157, "obj2": 0.397315613954679}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( ( ARS / BR ) * PN ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,Max( MLU,Max( RRSe,RRSe ) ) )", "obj1": 0.41634980988593157, "obj2": 0.397315613954679}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( ( ARS / BR ) * PN ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,Max( MLU,Max( RRSe,RRSe ) ) )", "obj1": 0.41634980988593157, "obj2": 0.397315613954679}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( ( ARS / BR ) * PN ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,Max( MLU,Max( RRSe,RRSe ) ) )", "obj1": 0.41634980988593157, "obj2": 0.397315613954679}, {"determining": "( ( ( ( AMS * ARS ) - Max( Const,FirstVNF_Mem_Server ) ) + Max( FirstVNF_RAM,Min( ( ( PN / FirstVNF_RAM ) * FirstVNF_RAM ) ,( DDR - ARS ) ) ) ) + ( FirstVNF_Mem_Server + MDR ) )", "choosing": "( Min( ( Min( MLU ,( ( DS + CS ) / MUC ) ) - ( MUM - MUM ) ) ,( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) * ( Min( ( CS * CS ) ,( MUM * MLU ) ) * Max( Min( MUC ,MLU ),( Max( DS,RMSe ) * MUC ) ) ) )", "obj1": 0.21863117870722434, "obj2": 0.5660746805581099}, {"determining": "( ( AMS * ARS ) - Max( Const,FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,RMSe ) / Max( MLU,( ( CS + MLU ) * MUR ) ) )", "obj1": 0.7015209125475285, "obj2": 0.20676140815700553}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( ( ARS / BR ) * PN ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,Max( MUM,RRSe ) )", "obj1": 0.41634980988593157, "obj2": 0.397315613954679}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( Const * PN ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RMSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.3688212927756654, "obj2": 0.45184581734255863}, {"determining": "( ( ( MDR / PN ) * ( ARS - RRS ) ) + ( Max( FirstVNF_Mem,RRS ) / ( FirstVNF_CPU + BR ) ) )", "choosing": "( Min( ( Min( MLU ,( ( DS + CS ) / MUC ) ) - ( MUM - MUM ) ) ,( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) * ( Min( ( CS * CS ) ,( MUM * MLU ) ) * Max( Min( MUC ,MLU ),( MLU * MUC ) ) ) )", "obj1": 0.20342205323193915, "obj2": 0.5703521263176919}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( DDR - FirstVNF_RAM ) )", "choosing": "( ( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS - CS ) ,( MUC + RRSe ) ) ) - Max( RCSe,( CS / ( ( RMSe * RRSe ) * Max( ( ( CS + MLU ) / MLU ),RMSe ) ) ) ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,( MUC * RMSe ) ) ) )", "obj1": 0.8288973384030418, "obj2": 0.050561440796509406}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( ( ARS / BR ) * PN ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,Max( MLU,Max( RRSe,RRSe ) ) )", "obj1": 0.41634980988593157, "obj2": 0.397315613954679}, {"determining": "Max( Min( MDR ,FirstVNF_Mem ),PN )", "choosing": "( ( ( ( Min( ( MUC - CS ) ,RRSe ) - CS ) - ( DS / CS ) ) - Max( DS,MUR ) ) + ( ( RMSe / MLU ) / Min( RRSe ,( DS - RMSe ) ) ) )", "obj1": 0.09505703422053231, "obj2": 0.666544384191813}, {"determining": "( Max( PN,( CRS - FirstVNF_Mem ) ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR - CS ) - ( DS / CS ) ) - Max( DS,MUR ) ) + ( ( RMSe / MLU ) / Min( RRSe ,( DS - RMSe ) ) ) )", "obj1": 0.7167300380228137, "obj2": 0.1020487637147261}, {"determining": "Min( ( PN + Const ) ,Max( BR,FirstVNF_CPU_Server ) )", "choosing": "( ( DS - MUC ) / ( ( ( MUC + MUM ) * ( ( Min( DS ,Min( DS ,CS ) ) - ( CS - ( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) ) * MUM ) ) / Max( ( Max( ( ( MLU * ( RMSe / CS ) ) / MLU ),MUR ) - MLU ),MLU ) ) )", "obj1": 0.11596958174904944, "obj2": 0.6522893459676665}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,Min( ( ( PN / FirstVNF_RAM ) / BR ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,Min( ( PN + Const ) ,Max( BR,FirstVNF_CPU_Server ) ) ) ) ) + Max( ( ( RRS + Min( ( ( Max( BR,ACS ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / Min( ( BR * ARS ) ,( BR * FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_CPU + BR ) / ( DDR / FirstVNF_RAM ) ) / ( ( RRS - MDR ) / ( ACS * MDR ) ) ) ) ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( ( CS * Min( Max( Min( RRSe ,( DS - CS ) ),RCSe ) ,Min( Max( ( RMSe + CS ),MUM ) ,MUM ) ) ),DS ) ) ,Max( ( ( MUR - RRSe ) - ( RCSe + RMSe ) ),RRSe ) )", "obj1": 0.1958174904942966, "obj2": 0.5729418974127711}, {"determining": "Min( ( ( PN / FirstVNF_RAM ) / BR ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,Min( ( PN + Const ) ,Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Max( RCSe,( CS / ( ( RMSe * RRSe ) * ( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) ) ) )", "obj1": 0.4543726235741445, "obj2": 0.3703798686769808}, {"determining": "Max( Max( ACS,Max( ( FirstVNF_CPU_Server + Min( MDR ,MRS ) ),PN ) ),PN )", "choosing": "( ( ( ( MUR - CS ) - ( DS / CS ) ) - Max( DS,MUR ) ) + ( ( ( Min( ( RRSe * CS ) ,( MUM + CS ) ) * MUM ) + ( ( ( MUM * MUM ) + MUC ) / ( ( DS + CS ) / Max( MUM,MUM ) ) ) ) / ( MUR + RCSe ) ) )", "obj1": 0.08935361216730038, "obj2": 0.6971204635885265}, {"determining": "Max( Max( ACS,Max( ( FirstVNF_CPU_Server + ACS ),PN ) ),PN )", "choosing": "( ( ( ( MUR - CS ) - ( DS / CS ) ) - Max( DS,MUR ) ) + ( ( ( Min( ( RRSe * CS ) ,( MUM + MUC ) ) * MUM ) + ( ( ( MUM * MUM ) + MUC ) / ( ( DS + CS ) / Max( MUM,MUM ) ) ) ) / ( MUR + RCSe ) ) )", "obj1": 0.07984790874524715, "obj2": 0.7130116599123836}, {"determining": "( ( CRS - FirstVNF_Mem ) + ( Max( FirstVNF_Mem,RRS ) / ( MDR / Const ) ) )", "choosing": "( ( MUM / MUM ) / ( ( ( RMSe / ( DS / MUM ) ) * MUM ) + ( CS - RRSe ) ) )", "obj1": 0.591254752851711, "obj2": 0.2880605156035877}, {"determining": "( ( ( MDR + PN ) * ( ARS - RRS ) ) + ( Max( FirstVNF_Mem,RRS ) / ( MDR / Const ) ) )", "choosing": "( ( MUM / MUM ) / ( RRSe + ( CS - RRSe ) ) )", "obj1": 0.2262357414448669, "obj2": 0.5276172467395419}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( Min( MLU ,( ( DS + CS ) / MUC ) ) - ( MUM - MUM ) ) ,( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) * ( Min( ( CS * CS ) ,( MUM * MLU ) ) * Max( Min( MUC ,MLU ),( MLU * MUC ) ) ) )", "obj1": 0.8650190114068441, "obj2": 0.034935366086219145}, {"determining": "( ( Min( RRS ,CRS ) + ( FirstVNF_Mem / AMS ) ) * ( ( FirstVNF_RAM_Server * Const ) * ( MRS + BR ) ) )", "choosing": "( Max( ( MLU / RMSe ),( MUC / RMSe ) ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.04752851711026616, "obj2": 0.8050870132140705}, {"determining": "( ( Min( RRS ,CRS ) + ( FirstVNF_Mem / AMS ) ) * ( ( FirstVNF_RAM_Server * Const ) * ( MRS + BR ) ) )", "choosing": "( Max( ( MLU / RMSe ),( MUC / RMSe ) ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.043726235741444866, "obj2": 0.8076324700888016}, {"determining": "Max( ( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) ),( DDR * PN ) )", "choosing": "( Min( ( Min( MLU ,( ( DS + CS ) / MUC ) ) - ( MUM - MUM ) ) ,( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) * ( Min( ( CS * CS ) ,( MUM * MLU ) ) * Max( Min( MUC ,MLU ),( MLU * MUC ) ) ) )", "obj1": 0.20342205323193915, "obj2": 0.5703521263176919}, {"determining": "( ( ( Const * FirstVNF_CPU ) * Min( MRS ,Const ) ) / ( ( Const + AMS ) + MRS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / ( RMSe / ( DS / MUM ) ) ) )", "obj1": 0.3726235741444867, "obj2": 0.43806601501104864}, {"determining": "( ( FirstVNF_CPU_Server + Max( FirstVNF_RAM,Min( ( ( PN / FirstVNF_RAM ) * FirstVNF_RAM ) ,( DDR - ARS ) ) ) ) + ( FirstVNF_Mem_Server + MDR ) )", "choosing": "( Min( ( Min( MLU ,( ( DS + CS ) / MUC ) ) - ( MUM - MUM ) ) ,( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) * ( Min( ( CS * CS ) ,( MUM * MLU ) ) * Max( Min( MUC ,MLU ),( MLU * MUC ) ) ) )", "obj1": 0.20342205323193915, "obj2": 0.5703521263176919}, {"determining": "( ( ( MRS + FirstVNF_RAM_Server ) + ( MDR / FirstVNF_CPU ) ) - Max( FirstVNF_Mem_Server,Const ) )", "choosing": "( ( ( CS - RCSe ) - Min( Min( ( RRSe / CS ) ,Min( RRSe ,RCSe ) ) ,RCSe ) ) / ( Max( MUR,RMSe ) / Max( DS,MLU ) ) )", "obj1": 0.6577946768060836, "obj2": 0.23274545073157624}, {"determining": "( ( AMS * ARS ) - Max( Const,FirstVNF_Mem_Server ) )", "choosing": "( ( Max( MUR,RMSe ) / Max( DS,MLU ) ) / ( ( CS - RCSe ) - Min( Min( ( RRSe / RCSe ) ,MUR ) ,RCSe ) ) )", "obj1": 0.6577946768060836, "obj2": 0.23274545073157624}, {"determining": "( Max( RRS,( Const / FirstVNF_RAM ) ) + Min( Max( FirstVNF_Mem,RRS ) ,( MDR / Const ) ) )", "choosing": "( ( MUM / MUM ) / ( MUR + ( CS - ( DS * RMSe ) ) ) )", "obj1": 0.32509505703422054, "obj2": 0.46618429250235977}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) / ( ( Const + AMS ) + Max( PN,Const ) ) )", "choosing": "( ( Min( RCSe ,RMSe ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( RCSe,MLU ) ) )", "obj1": 0.22053231939163498, "obj2": 0.5290976020993973}, {"determining": "( Min( ( ( PN / FirstVNF_RAM ) * FirstVNF_RAM ) ,( DDR - ARS ) ) + ( Max( FirstVNF_Mem,RRS ) / ( MDR / Const ) ) )", "choosing": "( MUC / ( RRSe + ( CS - RRSe ) ) )", "obj1": 0.5608365019011406, "obj2": 0.2916001767759768}, {"determining": "( ( FirstVNF_CPU_Server + Max( FirstVNF_RAM,Min( ( ( PN / FirstVNF_RAM ) * FirstVNF_RAM ) ,( DDR - ARS ) ) ) ) + ( FirstVNF_Mem_Server + MDR ) )", "choosing": "( ( MUM / MUM ) / ( RRSe + ( CS - RRSe ) ) )", "obj1": 0.23954372623574144, "obj2": 0.5117182342512997}, {"determining": "( ( ( Const * FirstVNF_CPU ) * Min( MRS ,Const ) ) / ( FirstVNF_CPU_Server + Max( PN,Const ) ) )", "choosing": "( ( Min( Max( ( RMSe + CS ),MUM ) ,MUM ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( RCSe,MLU ) ) )", "obj1": 0.34980988593155893, "obj2": 0.46544407038603786}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( ( ARS / BR ) * PN ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,Max( MLU,Max( RRSe,RRSe ) ) )", "obj1": 0.5057034220532319, "obj2": 0.3508195460219722}, {"determining": "( ( AMS * ARS ) - Max( Const,FirstVNF_Mem_Server ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.6368821292775665, "obj2": 0.25608548835758327}, {"determining": "( ( FirstVNF_CPU_Server + ACS ) - ( ARS + FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUR - CS ) - ( DS / CS ) ) - Max( DS,MUR ) ) + ( ( RMSe / MLU ) / ( MUR + RCSe ) ) )", "obj1": 0.623574144486692, "obj2": 0.2734420368960954}, {"determining": "( ( ( Const * FirstVNF_CPU ) * Min( MRS ,Min( FirstVNF_RAM_Server ,PN ) ) ) / ( ( Const + AMS ) + Max( PN,Const ) ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( RCSe,Max( ( MUR * DS ),Max( MLU,( MUM / ( RMSe + DS ) ) ) ) ) ) )", "obj1": 0.27566539923954375, "obj2": 0.4888977389402355}, {"determining": "( ( ( MDR + PN ) * ( ARS - RRS ) ) + ( Max( FirstVNF_Mem,RRS ) / ( MDR / Const ) ) )", "choosing": "( Min( ( Min( MLU ,( ( DS + CS ) / MUC ) ) - ( MUM - MUM ) ) ,( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) * ( Min( ( CS * CS ) ,( MUM * MLU ) ) * Max( Min( MUC ,MLU ),( MLU * MUC ) ) ) )", "obj1": 0.20342205323193915, "obj2": 0.5703521263176919}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,Min( Min( Min( RRS ,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ,Min( ( Const + PN ) ,Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RRSe - MUM ) / ( RRSe + ( CS - MUC ) ) )", "obj1": 0.2262357414448669, "obj2": 0.5276172467395419}, {"determining": "( ( AMS * ARS ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( ( CS * ( ( MLU * CS ) / ( MUR * DS ) ) ),DS ) ) ,Max( MLU,Max( RRSe,RRSe ) ) )", "obj1": 0.5171102661596958, "obj2": 0.30265519925552153}, {"determining": "( Min( ( ( ( ACS + FirstVNF_CPU_Server ) + MDR ) / ( MRS / PN ) ) ,( ( ( ARS / BR ) * PN ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + ( ( AMS / CRS ) / FirstVNF_RAM ) ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( ( CS * ( RRSe / MUC ) ),DS ) ) ,Max( ( ( DS + CS ) / Max( MUM,MUM ) ),Max( RRSe,RRSe ) ) )", "obj1": 0.41634980988593157, "obj2": 0.397315613954679}, {"determining": "Max( Max( ACS,Max( AMS,( ( ARS + ( ( FirstVNF_CPU_Server - BR ) - FirstVNF_Mem_Server ) ) / ( Const / FirstVNF_RAM_Server ) ) ) ),PN )", "choosing": "( ( Max( RRSe,MUR ) - ( ( MUR - CS ) - ( DS / CS ) ) ) + ( ( MUM + ( MUR - CS ) ) / Min( RRSe ,( DS - RMSe ) ) ) )", "obj1": 0.06653992395437262, "obj2": 0.7179234728543381}, {"determining": "( Max( PN,( CRS - FirstVNF_Mem ) ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Max( RCSe,( CS / ( ( RMSe * RRSe ) * ( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) ) ) )", "obj1": 0.8307984790874525, "obj2": 0.04958540394290161}, {"determining": "( ( ( MDR + PN ) * ( ARS - RRS ) ) + ( Max( FirstVNF_Mem,RRS ) / ( MDR / Const ) ) )", "choosing": "( ( MUM / MUM ) / ( RRSe + ( CS - RRSe ) ) )", "obj1": 0.25665399239543724, "obj2": 0.5043397368681092}, {"determining": "( ( AMS * AMS ) - Max( Const,( ACS * AMS ) ) )", "choosing": "( ( Max( MUR,RMSe ) / ( DS - MLU ) ) / ( ( CS - RCSe ) - Min( Min( ( RRSe / Min( Max( Min( MLU ,RRSe ),RCSe ) ,DS ) ) ,MUR ) ,RCSe ) ) )", "obj1": 0.6007604562737643, "obj2": 0.28692291177048007}, {"determining": "( ( AMS * ARS ) - Max( Const,FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Max( ( CS / ( ( RMSe * RRSe ) * Max( DS,RMSe ) ) ),RCSe ) ) - Max( ( MLU + ( Max( RRSe,( RMSe * RMSe ) ) + ( MUR + MUC ) ) ),( ( ( RCSe * MUM ) / MUR ) + MUM ) ) )", "obj1": 0.6806083650190115, "obj2": 0.2267085658718396}, {"determining": "( ( ( Const + PN ) * ( ARS - RRS ) ) + ( Max( ( ( ACS - FirstVNF_CPU_Server ) / Min( ( FirstVNF_Mem_Server * ACS ) ,( BR - RRS ) ) ),RRS ) - ARS ) )", "choosing": "( ( ( MUM - RMSe ) + ( RRSe - CS ) ) / Min( Min( DS ,MLU ) ,( RCSe - ( RRSe + CS ) ) ) )", "obj1": 0.2262357414448669, "obj2": 0.5276172467395419}, {"determining": "Max( ( Min( ( FirstVNF_CPU_Server + Max( FirstVNF_RAM,Min( ( ( PN / FirstVNF_RAM ) * FirstVNF_RAM ) ,( DDR - ARS ) ) ) ) ,( ( BR * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) ),( DDR * PN ) )", "choosing": "( Min( ( ( RMSe * DS ) * ( RRSe - ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) ) ) ,Max( ( MUR - RMSe ),Min( MLU ,DS ) ) ) * Min( ( ( Min( MLU ,( ( DS + CS ) / MUC ) ) - ( MUM - MUM ) ) / Min( RCSe ,CS ) ) ,( Min( MLU ,RCSe ) / ( CS * RMSe ) ) ) )", "obj1": 0.6045627376425855, "obj2": 0.27537716413241786}, {"determining": "( ( FirstVNF_CPU_Server + Max( FirstVNF_RAM,Min( ( ( PN / FirstVNF_RAM ) * FirstVNF_RAM ) ,( DDR - ARS ) ) ) ) + ( FirstVNF_Mem_Server + MDR ) )", "choosing": "( Min( ( Min( MLU ,( ( DS + CS ) / MUC ) ) - ( MUM - MUM ) ) ,( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) * ( Min( ( CS * CS ) ,( MUM * MLU ) ) * Max( Min( MUC ,MLU ),( MLU * MUC ) ) ) )", "obj1": 0.20342205323193915, "obj2": 0.5703521263176919}, {"determining": "Min( ( RRS + MDR ) ,Max( ( FirstVNF_CPU_Server + Max( FirstVNF_RAM,Min( ( ( PN / FirstVNF_RAM ) * FirstVNF_RAM ) ,( DDR - ARS ) ) ) ),( Const * ARS ) ) )", "choosing": "( ( DS - MUC ) / ( ( ( MUC + MUM ) * ( ( Min( DS ,Min( DS ,CS ) ) - ( CS - ( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) ) * MUM ) ) / Max( ( Max( ( ( MLU * ( RMSe / CS ) ) / MLU ),MUR ) - MLU ),MLU ) ) )", "obj1": 0.11596958174904944, "obj2": 0.6522893459676665}, {"determining": "( ( ( FirstVNF_Mem / AMS ) + Max( CRS,RRS ) ) * Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + BR ) * FirstVNF_CPU ) ) )", "choosing": "( Max( Max( MUR,( RMSe / Max( DS,DS ) ) ),CS ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.049429657794676805, "obj2": 0.8046536486389623}, {"determining": "( ( ( FirstVNF_Mem / AMS ) + Max( CRS,RRS ) ) * Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + BR ) * FirstVNF_CPU ) ) )", "choosing": "( Max( Max( MUR,( RMSe / Max( DS,DS ) ) ),CS ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.049429657794676805, "obj2": 0.8046536486389623}, {"determining": "( ( ( FirstVNF_Mem / AMS ) + Max( CRS,RRS ) ) * Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + BR ) * FirstVNF_CPU ) ) )", "choosing": "( Max( Max( MUR,( RMSe / Max( DS,DS ) ) ),CS ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.049429657794676805, "obj2": 0.8046536486389623}, {"determining": "( Min( ( Min( FirstVNF_RAM_Server ,ARS ) / CRS ) ,Const ) * ( Max( CRS,RRS ) + ( FirstVNF_Mem / AMS ) ) )", "choosing": "( ( ( MUC / RMSe ) / ( DS / ( MUC + RCSe ) ) ) * Min( MUC ,MUM ) )", "obj1": 0.049429657794676805, "obj2": 0.8046536486389623}], "5": [{"determining": "( ( RRS - FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU ,( DDR + FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( CS ,RCSe ) ,( ( MUR + ( ( ( Min( ( DS - CS ) ,RCSe ) * RRSe ) + ( ( MLU - MUR ) * ( RMSe * CS ) ) ) + MUR ) ) + ( Min( RMSe ,( MUM / RMSe ) ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,( ACS * ( BR * FirstVNF_CPU ) ) ) + ( FirstVNF_CPU - Min( ARS ,DDR ) ) )", "choosing": "( Max( RMSe,DS ) / ( RRSe * ( ( ( RRSe - MUR ) * Max( MLU,CS ) ) / MUM ) ) )", "obj1": 0.039923954372623575, "obj2": 0.8080355601472581}, {"determining": "( ( ( FirstVNF_Mem / AMS ) + Max( CRS,RRS ) ) * Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + BR ) * FirstVNF_CPU ) ) )", "choosing": "( Max( Max( MUR,( RMSe / Max( DS,DS ) ) ),CS ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.043726235741444866, "obj2": 0.8076324700888016}, {"determining": "( ( ( ACS / PN ) * ( ARS - RRS ) ) + ( ( ( ( FirstVNF_RAM + MRS ) + ( ARS * ARS ) ) + FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe * MUM ) / ( ( CS - RRSe ) + RRSe ) )", "obj1": 0.2262357414448669, "obj2": 0.5276172467395419}, {"determining": "( ( ( MDR + PN ) * ( ARS - RRS ) ) + ( Max( FirstVNF_Mem,RRS ) / ( MDR / Const ) ) )", "choosing": "( ( MUM / MUM ) / ( RRSe + ( CS - RRSe ) ) )", "obj1": 0.2262357414448669, "obj2": 0.5276172467395419}, {"determining": "( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) * ( MRS + BR ) ) )", "choosing": "( Max( ( MLU / RMSe ),( DS / RMSe ) ) * Max( MUC,Min( RRSe ,Max( MUM,MUM ) ) ) )", "obj1": 0.043726235741444866, "obj2": 0.8076324700888016}, {"determining": "( ( BR - ( Min( ACS ,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ) / ( ( ( MRS * Const ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) / ( ( DDR - ARS ) - ( AMS * PN ) ) ) )", "choosing": "( Min( ( RMSe / ( RMSe / MLU ) ) ,RMSe ) / DS )", "obj1": 0.030418250950570342, "obj2": 0.8168473991343923}, {"determining": "Min( ( RRS + MDR ) ,Max( ( FirstVNF_CPU_Server + Max( FirstVNF_RAM,Min( ( ( PN / FirstVNF_RAM ) * FirstVNF_RAM ) ,( DDR - ARS ) ) ) ),( Const * ARS ) ) )", "choosing": "( ( DS - MUC ) / ( ( ( MUC + MUM ) * ( ( Min( DS ,Min( DS ,CS ) ) - ( CS - ( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) ) * MUM ) ) / Max( ( Max( ( ( MLU * ( RMSe / CS ) ) / MLU ),MUR ) - MLU ),MLU ) ) )", "obj1": 0.11596958174904944, "obj2": 0.6522893459676665}, {"determining": "Min( ( ( PN / FirstVNF_RAM ) / BR ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,Min( ( PN + Const ) ,Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Max( RCSe,( CS / ( ( RMSe * RRSe ) * ( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) ) ) )", "obj1": 0.43155893536121676, "obj2": 0.3726827001414015}, {"determining": "( ( Min( RRS ,CRS ) + ( FirstVNF_Mem / AMS ) ) * ( ( FirstVNF_RAM_Server * Const ) * ( MRS + BR ) ) )", "choosing": "( Max( ( MLU / RMSe ),( MUC / RMSe ) ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.043726235741444866, "obj2": 0.8076324700888016}, {"determining": "( ( Min( RRS ,CRS ) + ( FirstVNF_Mem / AMS ) ) * ( ( FirstVNF_RAM_Server * Const ) * ( MRS + BR ) ) )", "choosing": "( Max( ( MLU / RMSe ),( MUC / RMSe ) ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.043726235741444866, "obj2": 0.8076324700888016}, {"determining": "( ( ( Const * FirstVNF_CPU ) * Min( MRS ,Const ) ) / ( ( Const + AMS ) + Max( PN,Const ) ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( RCSe,MLU ) ) )", "obj1": 0.22053231939163498, "obj2": 0.5290976020993973}, {"determining": "( ( ( MDR + PN ) * ( ARS - RRS ) ) + ( Max( FirstVNF_Mem,RRS ) / ( MDR / Const ) ) )", "choosing": "( ( MUM / MUM ) / ( RRSe + ( CS - RRSe ) ) )", "obj1": 0.2262357414448669, "obj2": 0.5276172467395419}, {"determining": "( ( ( MDR / PN ) * ( ( ( RRS + ( FirstVNF_RAM_Server - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) * ( MDR / MDR ) ) - ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) ) + ( PN - FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( ( ( ( RRSe * Max( MUM,RRSe ) ) * MLU ) / ( MUC + MUC ) ),RMSe ),DS ) / ( Min( ( RRSe * Max( MLU,MUM ) ) ,DS ) + ( CS - CS ) ) )", "obj1": 0.36311787072243346, "obj2": 0.45693849928299907}, {"determining": "( ( FirstVNF_CPU_Server + Max( FirstVNF_RAM,Min( ( ( PN / FirstVNF_RAM ) * BR ) ,( ( CRS * ( Const * ARS ) ) + ARS ) ) ) ) + ( FirstVNF_Mem_Server + MDR ) )", "choosing": "( Min( ( Min( MLU ,( ( DS + CS ) / MUC ) ) - ( MUM - MUM ) ) ,( ( RRSe * ( DS - RCSe ) ) - ( RCSe + RMSe ) ) ) * ( Min( ( CS * CS ) ,( MUM * MLU ) ) * Max( Min( MUC ,RMSe ),( MLU * MUC ) ) ) )", "obj1": 0.17110266159695817, "obj2": 0.5737117302626505}, {"determining": "Max( Max( ACS,Max( AMS,PN ) ),FirstVNF_RAM )", "choosing": "( ( ( ( MUR - CS ) - ( DS / CS ) ) - Max( DS,MUR ) ) + ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) )", "obj1": 0.14638783269961977, "obj2": 0.603146016105715}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( ( ARS / BR ) * PN ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,Max( MLU,Max( RRSe,RRSe ) ) )", "obj1": 0.41634980988593157, "obj2": 0.397315613954679}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( ( ARS / BR ) * PN ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,Max( MLU,Max( RRSe,RRSe ) ) )", "obj1": 0.41634980988593157, "obj2": 0.397315613954679}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( ( ARS / BR ) * PN ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,Max( MLU,Max( RRSe,RRSe ) ) )", "obj1": 0.41634980988593157, "obj2": 0.397315613954679}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( ( ARS / BR ) * PN ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,Max( MLU,Max( RRSe,RRSe ) ) )", "obj1": 0.41634980988593157, "obj2": 0.397315613954679}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( ( ARS / BR ) * PN ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,Max( MUM,RRSe ) )", "obj1": 0.41634980988593157, "obj2": 0.397315613954679}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( ( ARS / BR ) * PN ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,Max( MLU,Max( RRSe,RRSe ) ) )", "obj1": 0.41634980988593157, "obj2": 0.397315613954679}, {"determining": "Max( Min( MDR ,FirstVNF_Mem ),PN )", "choosing": "( ( ( ( Min( ( MUC - CS ) ,RRSe ) - CS ) - ( DS / CS ) ) - Max( DS,MUR ) ) + ( ( RMSe / MLU ) / Min( RRSe ,( DS - RMSe ) ) ) )", "obj1": 0.09505703422053231, "obj2": 0.666544384191813}, {"determining": "Min( ( PN + Const ) ,Max( BR,FirstVNF_CPU_Server ) )", "choosing": "( ( DS - MUC ) / ( ( ( MUC + MUM ) * ( ( Min( DS ,Min( DS ,CS ) ) - ( CS - ( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) ) * MUM ) ) / Max( ( Max( ( ( MLU * ( RMSe / CS ) ) / MLU ),MUR ) - MLU ),MLU ) ) )", "obj1": 0.11596958174904944, "obj2": 0.6522893459676665}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,Min( ( ( PN / FirstVNF_RAM ) / BR ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,Min( ( PN + Const ) ,Max( BR,FirstVNF_CPU_Server ) ) ) ) ) + Max( ( ( RRS + Min( ( ( Max( BR,ACS ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / Min( ( BR * ARS ) ,( BR * FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_CPU + BR ) / ( DDR / FirstVNF_RAM ) ) / ( ( RRS - MDR ) / ( ACS * MDR ) ) ) ) ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( ( CS * Min( Max( Min( RRSe ,( DS - CS ) ),RCSe ) ,Min( Max( ( RMSe + CS ),MUM ) ,MUM ) ) ),DS ) ) ,Max( ( ( MUR - RRSe ) - ( RCSe + RMSe ) ),RRSe ) )", "obj1": 0.1958174904942966, "obj2": 0.5729418974127711}, {"determining": "Min( ( ( PN / FirstVNF_RAM ) / BR ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,Min( ( PN + Const ) ,Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Max( RCSe,( CS / ( ( RMSe * RRSe ) * ( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) ) ) )", "obj1": 0.4543726235741445, "obj2": 0.3703798686769808}, {"determining": "Max( Max( ACS,Max( ( FirstVNF_CPU_Server + ACS ),PN ) ),PN )", "choosing": "( ( ( ( MUR - CS ) - ( DS / CS ) ) - Max( DS,MUR ) ) + ( ( ( Min( ( RRSe * CS ) ,( MUM + MUC ) ) * MUM ) + ( ( ( MUM * MUM ) + MUC ) / ( ( DS + CS ) / Max( MUM,MUM ) ) ) ) / ( MUR + RCSe ) ) )", "obj1": 0.07984790874524715, "obj2": 0.7130116599123836}, {"determining": "( ( ( MDR + PN ) * ( ARS - RRS ) ) + ( Max( FirstVNF_Mem,RRS ) / ( MDR / Const ) ) )", "choosing": "( ( MUM / MUM ) / ( RRSe + ( CS - RRSe ) ) )", "obj1": 0.2262357414448669, "obj2": 0.5276172467395419}, {"determining": "( ( Min( RRS ,CRS ) + ( FirstVNF_Mem / AMS ) ) * ( ( FirstVNF_RAM_Server * Const ) * ( MRS + BR ) ) )", "choosing": "( Max( ( MLU / RMSe ),( MUC / RMSe ) ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.04752851711026616, "obj2": 0.8050870132140705}, {"determining": "( ( Min( RRS ,CRS ) + ( FirstVNF_Mem / AMS ) ) * ( ( FirstVNF_RAM_Server * Const ) * ( MRS + BR ) ) )", "choosing": "( Max( ( MLU / RMSe ),( MUC / RMSe ) ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.043726235741444866, "obj2": 0.8076324700888016}, {"determining": "( Max( RRS,( Const / FirstVNF_RAM ) ) + Min( Max( FirstVNF_Mem,RRS ) ,( MDR / Const ) ) )", "choosing": "( ( MUM / MUM ) / ( MUR + ( CS - ( DS * RMSe ) ) ) )", "obj1": 0.32509505703422054, "obj2": 0.46618429250235977}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) / ( ( Const + AMS ) + Max( PN,Const ) ) )", "choosing": "( ( Min( RCSe ,RMSe ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( RCSe,MLU ) ) )", "obj1": 0.22053231939163498, "obj2": 0.5290976020993973}, {"determining": "( ( FirstVNF_CPU_Server + Max( FirstVNF_RAM,Min( ( ( PN / FirstVNF_RAM ) * FirstVNF_RAM ) ,( DDR - ARS ) ) ) ) + ( FirstVNF_Mem_Server + MDR ) )", "choosing": "( ( MUM / MUM ) / ( RRSe + ( CS - RRSe ) ) )", "obj1": 0.23954372623574144, "obj2": 0.5117182342512997}, {"determining": "( ( ( Const * FirstVNF_CPU ) * Min( MRS ,Min( FirstVNF_RAM_Server ,PN ) ) ) / ( ( Const + AMS ) + Max( PN,Const ) ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( RCSe,Max( ( MUR * DS ),Max( MLU,( MUM / ( RMSe + DS ) ) ) ) ) ) )", "obj1": 0.27566539923954375, "obj2": 0.4888977389402355}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,Min( Min( Min( RRS ,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ,Min( ( Const + PN ) ,Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RRSe - MUM ) / ( RRSe + ( CS - MUC ) ) )", "obj1": 0.2262357414448669, "obj2": 0.5276172467395419}, {"determining": "( ( AMS * ARS ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( ( CS * ( ( MLU * CS ) / ( MUR * DS ) ) ),DS ) ) ,Max( MLU,Max( RRSe,RRSe ) ) )", "obj1": 0.5171102661596958, "obj2": 0.30265519925552153}, {"determining": "( Min( ( ( ( ACS + FirstVNF_CPU_Server ) + MDR ) / ( MRS / PN ) ) ,( ( ( ARS / BR ) * PN ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + ( ( AMS / CRS ) / FirstVNF_RAM ) ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( ( CS * ( RRSe / MUC ) ),DS ) ) ,Max( ( ( DS + CS ) / Max( MUM,MUM ) ),Max( RRSe,RRSe ) ) )", "obj1": 0.41634980988593157, "obj2": 0.397315613954679}, {"determining": "Max( Max( ACS,Max( AMS,( ( ARS + ( ( FirstVNF_CPU_Server - BR ) - FirstVNF_Mem_Server ) ) / ( Const / FirstVNF_RAM_Server ) ) ) ),PN )", "choosing": "( ( Max( RRSe,MUR ) - ( ( MUR - CS ) - ( DS / CS ) ) ) + ( ( MUM + ( MUR - CS ) ) / Min( RRSe ,( DS - RMSe ) ) ) )", "obj1": 0.06653992395437262, "obj2": 0.7179234728543381}, {"determining": "( ( ( Const + PN ) * ( ARS - RRS ) ) + ( Max( ( ( ACS - FirstVNF_CPU_Server ) / Min( ( FirstVNF_Mem_Server * ACS ) ,( BR - RRS ) ) ),RRS ) - ARS ) )", "choosing": "( ( ( MUM - RMSe ) + ( RRSe - CS ) ) / Min( Min( DS ,MLU ) ,( RCSe - ( RRSe + CS ) ) ) )", "obj1": 0.2262357414448669, "obj2": 0.5276172467395419}, {"determining": "Max( ( Min( ( FirstVNF_CPU_Server + Max( FirstVNF_RAM,Min( ( ( PN / FirstVNF_RAM ) * FirstVNF_RAM ) ,( DDR - ARS ) ) ) ) ,( ( BR * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) ),( DDR * PN ) )", "choosing": "( Min( ( ( RMSe * DS ) * ( RRSe - ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) ) ) ,Max( ( MUR - RMSe ),Min( MLU ,DS ) ) ) * Min( ( ( Min( MLU ,( ( DS + CS ) / MUC ) ) - ( MUM - MUM ) ) / Min( RCSe ,CS ) ) ,( Min( MLU ,RCSe ) / ( CS * RMSe ) ) ) )", "obj1": 0.6045627376425855, "obj2": 0.27537716413241786}, {"determining": "Min( ( RRS + MDR ) ,Max( ( FirstVNF_CPU_Server + Max( FirstVNF_RAM,Min( ( ( PN / FirstVNF_RAM ) * FirstVNF_RAM ) ,( DDR - ARS ) ) ) ),( Const * ARS ) ) )", "choosing": "( ( DS - MUC ) / ( ( ( MUC + MUM ) * ( ( Min( DS ,Min( DS ,CS ) ) - ( CS - ( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) ) * MUM ) ) / Max( ( Max( ( ( MLU * ( RMSe / CS ) ) / MLU ),MUR ) - MLU ),MLU ) ) )", "obj1": 0.11596958174904944, "obj2": 0.6522893459676665}, {"determining": "( ( ( FirstVNF_Mem / AMS ) + Max( CRS,RRS ) ) * Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + BR ) * FirstVNF_CPU ) ) )", "choosing": "( Max( Max( MUR,( RMSe / Max( DS,DS ) ) ),CS ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.049429657794676805, "obj2": 0.8046536486389623}, {"determining": "( ( ( FirstVNF_Mem / AMS ) + Max( CRS,RRS ) ) * Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + BR ) * FirstVNF_CPU ) ) )", "choosing": "( Max( Max( MUR,( RMSe / Max( DS,DS ) ) ),CS ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.049429657794676805, "obj2": 0.8046536486389623}, {"determining": "( ( ( FirstVNF_Mem / AMS ) + Max( CRS,RRS ) ) * Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + BR ) * FirstVNF_CPU ) ) )", "choosing": "( Max( Max( MUR,( RMSe / Max( DS,DS ) ) ),CS ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.049429657794676805, "obj2": 0.8046536486389623}, {"determining": "( Min( ( Min( FirstVNF_RAM_Server ,ARS ) / CRS ) ,Const ) * ( Max( CRS,RRS ) + ( FirstVNF_Mem / AMS ) ) )", "choosing": "( ( ( MUC / RMSe ) / ( DS / ( MUC + RCSe ) ) ) * Min( MUC ,MUM ) )", "obj1": 0.049429657794676805, "obj2": 0.8046536486389623}, {"determining": "( ( Min( RRS ,CRS ) + ( Const * PN ) ) * ( ( FirstVNF_RAM_Server * Const ) * ( MRS + BR ) ) )", "choosing": "( Max( ( MLU / RMSe ),( MUC / RMSe ) ) * Min( ( DS / CS ) ,( MUC + RRSe ) ) )", "obj1": 0.4866920152091255, "obj2": 0.34660051573884215}, {"determining": "Max( Max( ACS,Max( ( Min( ( ( ( FirstVNF_CPU_Server + ACS ) + MDR ) / ( MRS / PN ) ) ,( ( ( ARS / BR ) * PN ) - ( FirstVNF_RAM_Server / PN ) ) ) + ACS ),PN ) ),PN )", "choosing": "( ( ( ( MUR - CS ) - ( DS / CS ) ) - Max( DS,MUR ) ) + ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) )", "obj1": 0.16159695817490494, "obj2": 0.5989789439848968}, {"determining": "( Min( ( ( ( FirstVNF_CPU_Server + ACS ) + MDR ) / ( MRS / PN ) ) ,( ( ( ARS / BR ) * PN ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,Max( ( ( DS + CS ) / Max( MUM,MUM ) ),Max( RRSe,RRSe ) ) )", "obj1": 0.41634980988593157, "obj2": 0.397315613954679}, {"determining": "( Max( PN,( CRS - Min( ( ( PN / FirstVNF_RAM ) * FirstVNF_RAM ) ,( DDR - ARS ) ) ) ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "( ( Min( ( MUC + MLU ) ,Min( ( MLU - CS ) ,RRSe ) ) - MUR ) + ( RCSe / ( RMSe / MLU ) ) )", "obj1": 0.3060836501901141, "obj2": 0.4790978100459626}, {"determining": "Max( Max( ACS,Max( AMS,RRS ) ),PN )", "choosing": "( ( ( ( MUR - CS ) - ( DS / CS ) ) - Max( DS,MUR ) ) + ( ( RMSe / MLU ) / Min( RRSe ,( DS - RMSe ) ) ) )", "obj1": 0.055133079847908745, "obj2": 0.7200147634602193}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( ( ARS / BR ) * PN ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,Max( MLU,Max( RRSe,RRSe ) ) )", "obj1": 0.41634980988593157, "obj2": 0.397315613954679}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( ( ARS / BR ) * PN ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,Max( MLU,Max( RRSe,RRSe ) ) )", "obj1": 0.41634980988593157, "obj2": 0.397315613954679}, {"determining": "( ( MDR + PN ) + ( FirstVNF_Mem_Server + MDR ) )", "choosing": "( Min( ( Min( MLU ,( ( DS + CS ) / MUC ) ) - ( MUM - MUM ) ) ,( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) * ( Min( ( CS * CS ) ,( MUM * MLU ) ) * RRSe ) )", "obj1": 0.21292775665399238, "obj2": 0.5560542339701242}, {"determining": "( ( ( MDR + PN ) * ( ARS - RRS ) ) + ( Max( FirstVNF_Mem,RRS ) / ( MDR / Const ) ) )", "choosing": "( ( MUM / MUM ) / ( RRSe + ( CS - RRSe ) ) )", "obj1": 0.2414448669201521, "obj2": 0.5109631259751556}, {"determining": "( ( AMS * ARS ) - Max( ( FirstVNF_RAM + Min( Min( ( ( FirstVNF_CPU / Min( PN ,FirstVNF_Mem ) ) / ( Const / ( FirstVNF_Mem_Server * MRS ) ) ) ,( ( ACS + ACS ) / FirstVNF_RAM_Server ) ) ,Max( Const,( ( ARS * DDR ) / MDR ) ) ) ),FirstVNF_Mem_Server ) )", "choosing": "( ( Max( MUR,RMSe ) / Max( MLU,DS ) ) / ( ( CS - RCSe ) - Min( Min( ( RMSe / RCSe ) ,( ( ( MUR - RRSe ) - ( RCSe + RMSe ) ) / ( MLU - RRSe ) ) ) ,RCSe ) ) )", "obj1": 0.3688212927756654, "obj2": 0.4199699288317302}, {"determining": "( ( AMS * ARS ) + Max( ( ( RRS + DDR ) * ( FirstVNF_Mem / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( ( CS * ( ( MLU * CS ) / ( MUR * DS ) ) ),DS ) ) ,Max( ( ( MUM / MUM ) / ( ( ( RMSe / ( DS / MUM ) ) * MUM ) + ( CS - RRSe ) ) ),Max( RRSe,RRSe ) ) )", "obj1": 0.5456273764258555, "obj2": 0.28410655422354153}, {"determining": "( ( CRS - FirstVNF_Mem ) + ( Max( FirstVNF_Mem,MDR ) / ( MDR / Const ) ) )", "choosing": "( ( MUM / MUM ) / ( MLU + ( CS - RRSe ) ) )", "obj1": 0.5627376425855514, "obj2": 0.281665859642318}, {"determining": "( ( Min( RRS ,CRS ) + ( FirstVNF_Mem / AMS ) ) * ( ( FirstVNF_RAM_Server * Const ) * ( MRS + BR ) ) )", "choosing": "( Max( ( MLU / RMSe ),( MUC / RMSe ) ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.043726235741444866, "obj2": 0.8076324700888016}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,Min( ( ( PN / FirstVNF_RAM ) / BR ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,Min( ( PN + Const ) ,Max( BR,FirstVNF_CPU_Server ) ) ) ) ) + Max( ( ( RRS + Min( ( ( Max( BR,ACS ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / Min( ( BR * ARS ) ,( BR * FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_CPU + BR ) / ( DDR / FirstVNF_RAM ) ) / ( ( RRS - MDR ) / ( ACS * MDR ) ) ) ) ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( ( CS * Min( Max( Min( RRSe ,( DS - CS ) ),RCSe ) ,Min( Max( ( RMSe + CS ),MUM ) ,MUM ) ) ),DS ) ) ,Max( ( ( MUR - RRSe ) - ( RCSe + RMSe ) ),RRSe ) )", "obj1": 0.1958174904942966, "obj2": 0.5729418974127711}, {"determining": "Max( Max( ACS,Max( ( FirstVNF_CPU_Server + ( ( ( Const * FirstVNF_CPU ) * Min( MRS ,Const ) ) / ( ( Const + AMS ) + MRS ) ) ),Min( ( FirstVNF_RAM - FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) ),PN )", "choosing": "( ( ( ( Max( MUR,CS ) - CS ) - ( DS / CS ) ) + Max( DS,MUR ) ) + ( ( ( ( ( MUM * MUM ) + MUC ) / ( ( DS + CS ) / Max( MUM,MUM ) ) ) + ( Min( ( RRSe * CS ) ,( MUM + MUC ) ) * ( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / ( RMSe / ( DS / MUM ) ) ) ) ) ) / ( MUR + RCSe ) ) )", "obj1": 0.38783269961977185, "obj2": 0.406756832388153}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( ( ARS / BR ) * PN ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "( Min( ( Min( MLU ,( ( DS + CS ) / MUC ) ) - ( MUM - MUM ) ) ,( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) * ( Min( ( CS * CS ) ,( MUM * MLU ) ) * Max( Min( MUC ,MLU ),( MLU * MUC ) ) ) )", "obj1": 0.4049429657794677, "obj2": 0.40312807028557984}, {"determining": "Max( Min( MDR ,( Const * FirstVNF_CPU ) ),PN )", "choosing": "( ( ( ( Min( ( MUC - ( RMSe + CS ) ) ,RRSe ) - CS ) - ( DS / CS ) ) - Max( DS,MUR ) ) + ( ( RMSe / MLU ) / Min( RRSe ,( DS - RMSe ) ) ) )", "obj1": 0.13688212927756654, "obj2": 0.6235427684411763}, {"determining": "( ( ( Const * FirstVNF_CPU ) * Min( MRS ,Const ) ) / ( FirstVNF_CPU_Server + Max( PN,Const ) ) )", "choosing": "( ( ( ( Min( ( MUC - CS ) ,RRSe ) - CS ) - ( DS / CS ) ) - Max( DS,MUR ) ) + ( ( RMSe / MLU ) / Min( RRSe ,( DS - RMSe ) ) ) )", "obj1": 0.08365019011406843, "obj2": 0.6791626023122025}, {"determining": "( ( ( FirstVNF_Mem_Server + MDR ) * ( ARS - RRS ) ) + ( Max( FirstVNF_Mem,RRS ) / ( MDR / Const ) ) )", "choosing": "( ( MUM / Max( ( MUC / MLU ),( Min( RCSe ,( RMSe * MUM ) ) * MUC ) ) ) / ( CS + ( CS - RRSe ) ) )", "obj1": 0.33460076045627374, "obj2": 0.4585574938474609}, {"determining": "( Min( FirstVNF_CPU_Server ,Max( FirstVNF_RAM,( ( ( ( MRS * MDR ) / ( ( AMS - FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) ) * FirstVNF_RAM ) + ( DDR - ARS ) ) ) ) + ( FirstVNF_Mem_Server + MDR ) )", "choosing": "( ( MUM / MUM ) / ( CS + ( CS - RRSe ) ) )", "obj1": 0.32509505703422054, "obj2": 0.46618429250235977}, {"determining": "( ( FirstVNF_CPU - MRS ) + Min( ARS ,( ACS / ( BR * FirstVNF_CPU ) ) ) )", "choosing": "( Min( ( Min( MLU ,( ( DS + CS ) / MUC ) ) - ( MUM - MUM ) ) ,( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) * ( Min( ( CS * CS ) ,( MUM * MLU ) ) * Max( Min( MUC ,RMSe ),( MLU * MUC ) ) ) )", "obj1": 0.17110266159695817, "obj2": 0.5737117302626505}, {"determining": "Max( Min( ( ( ( MDR + PN ) * ( ARS - RRS ) ) + ( Max( FirstVNF_Mem,RRS ) / ( MDR / Const ) ) ) ,FirstVNF_Mem ),PN )", "choosing": "( ( ( ( Min( ( MUC - CS ) ,RRSe ) - CS ) - ( DS / CS ) ) - Max( DS,MUR ) ) + ( ( RMSe / MLU ) / Min( RRSe ,( DS - RMSe ) ) ) )", "obj1": 0.09505703422053231, "obj2": 0.666544384191813}, {"determining": "( ( ( MDR + PN ) * ( ARS - RRS ) ) + ( Max( FirstVNF_Mem,RRS ) / ( MDR / Const ) ) )", "choosing": "( ( MUM / MUM ) / ( RRSe + ( CS - RRSe ) ) )", "obj1": 0.2262357414448669, "obj2": 0.5276172467395419}, {"determining": "Max( Min( MDR ,FirstVNF_Mem ),PN )", "choosing": "( ( ( ( Min( ( MUC - CS ) ,RRSe ) - CS ) - ( DS / CS ) ) - Max( DS,MUR ) ) + ( ( RMSe / MLU ) / Min( RRSe ,( DS - RMSe ) ) ) )", "obj1": 0.09505703422053231, "obj2": 0.666544384191813}, {"determining": "Max( Max( ACS,Max( ( FirstVNF_CPU_Server + ACS ),Min( ( FirstVNF_RAM - FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) ),PN )", "choosing": "( Max( ( DS / ( MUC + RCSe ) ),( MUC / RMSe ) ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.049429657794676805, "obj2": 0.8046536486389623}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( Const * PN ) ) )", "choosing": "( ( MUM / MUM ) / ( RRSe + ( CS - RRSe ) ) )", "obj1": 0.2262357414448669, "obj2": 0.5276172467395419}, {"determining": "( Max( FirstVNF_RAM,Min( ( ( PN / FirstVNF_RAM ) * FirstVNF_RAM ) ,( DDR - ARS ) ) ) * Min( FirstVNF_CPU_Server ,( ( AMS * ARS ) - Max( Const,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( DS,RMSe ) / CS )", "obj1": 0.6064638783269962, "obj2": 0.26643686593112387}, {"determining": "( Max( FirstVNF_CPU,Const ) * Min( FirstVNF_CPU_Server ,( ( AMS * ARS ) - Max( Const,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / MUM ) / ( RRSe + ( CS - RRSe ) ) )", "obj1": 0.23954372623574144, "obj2": 0.5117182342512997}, {"determining": "( ( ( MDR / PN ) * ( ARS - RRS ) ) + ( ( ( ( MRS * MDR ) / ( ( AMS - FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) ) * FirstVNF_RAM ) * FirstVNF_Mem_Server ) )", "choosing": "( ( MUM / MUM ) / ( RRSe + ( CS - RRSe ) ) )", "obj1": 0.24714828897338403, "obj2": 0.5074095325353756}, {"determining": "( ( ( MDR + PN ) * ( ARS - RRS ) ) + ( Max( FirstVNF_Mem,RRS ) / ( MDR / Const ) ) )", "choosing": "( ( MUM / MUM ) / ( RRSe + ( CS - RRSe ) ) )", "obj1": 0.25475285171102663, "obj2": 0.49987789522215476}, {"determining": "Min( ( ( PN / FirstVNF_RAM ) / BR ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,Min( ( PN + Const ) ,Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Max( RCSe,( CS / ( ( RMSe * RRSe ) * ( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) ) ) )", "obj1": 0.45627376425855515, "obj2": 0.3663138951429343}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( ( ARS / BR ) * PN ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,Max( MLU,Max( RRSe,RRSe ) ) )", "obj1": 0.41634980988593157, "obj2": 0.397315613954679}, {"determining": "Min( ( RRS + MDR ) ,Max( ( FirstVNF_CPU_Server + Max( FirstVNF_RAM,Min( ( ( PN / FirstVNF_RAM ) * FirstVNF_RAM ) ,( DDR - ARS ) ) ) ),( Const * ARS ) ) )", "choosing": "( Max( ( MLU / RMSe ),( MUC / RMSe ) ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.04752851711026616, "obj2": 0.8050870132140705}, {"determining": "( ( Min( RRS ,CRS ) + ( FirstVNF_Mem / AMS ) ) * ( ( FirstVNF_RAM_Server * Const ) * ( MRS + BR ) ) )", "choosing": "( ( DS - MUC ) / ( ( ( MUC + MUM ) * ( ( Min( DS ,Min( DS ,CS ) ) - ( CS - ( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) ) * MUM ) ) / Max( ( Max( ( ( MLU * ( RMSe / CS ) ) / MLU ),MUR ) - MLU ),MLU ) ) )", "obj1": 0.11596958174904944, "obj2": 0.6522893459676665}, {"determining": "( ( BR - ( Min( ACS ,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ) / ( ( ( MRS * Const ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) / ( ( DDR - ARS ) - ( AMS * PN ) ) ) )", "choosing": "( Min( ( RMSe / ( RMSe / MLU ) ) ,RMSe ) / DS )", "obj1": 0.030418250950570342, "obj2": 0.8168473991343923}, {"determining": "Min( ( RRS + MDR ) ,Max( ( FirstVNF_CPU_Server + Max( FirstVNF_RAM,Min( ( ( PN / FirstVNF_RAM ) * FirstVNF_RAM ) ,( DDR - ARS ) ) ) ),( Const * ARS ) ) )", "choosing": "( ( DS - MUC ) / ( ( ( MUC + MUM ) * ( ( Min( DS ,Min( DS ,CS ) ) - ( CS - ( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) ) * MUM ) ) / Max( ( Max( ( ( MLU * ( RMSe / CS ) ) / MLU ),MUR ) - MLU ),MLU ) ) )", "obj1": 0.11596958174904944, "obj2": 0.6522893459676665}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( ( ARS / BR ) * PN ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,Max( MLU,Max( RRSe,RRSe ) ) )", "obj1": 0.41634980988593157, "obj2": 0.397315613954679}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( ( ARS / BR ) * PN ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,Max( MLU,Max( RRSe,RRSe ) ) )", "obj1": 0.47338403041825095, "obj2": 0.35593891790914417}, {"determining": "( ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,( ( AMS * ARS ) - Max( Const,FirstVNF_Mem_Server ) ) ) ) + ( FirstVNF_Mem_Server + MDR ) )", "choosing": "( Min( ( Min( MLU ,Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) ) - Min( ( RMSe - ( RMSe / ( ( RMSe * RRSe ) * ( MLU * DS ) ) ) ) ,MLU ) ) ,( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) * ( Max( Min( MUC ,MUM ),( MLU * MUC ) ) * Min( ( CS * CS ) ,( MUM * MLU ) ) ) )", "obj1": 0.20152091254752852, "obj2": 0.5631694419248413}, {"determining": "( ( ( MDR + PN ) * ( ARS - RRS ) ) + ( Max( FirstVNF_Mem,RRS ) / ( ( ( FirstVNF_RAM_Server + BR ) * FirstVNF_CPU ) / Const ) ) )", "choosing": "( ( RMSe / Max( DS,DS ) ) / ( RRSe + ( CS - RRSe ) ) )", "obj1": 0.053231939163498096, "obj2": 0.7650846585755579}, {"determining": "( ( Max( CRS,RRS ) + ( FirstVNF_Mem / ( ( MDR / PN ) * ( ARS - RRS ) ) ) ) * Min( FirstVNF_RAM_Server ,Const ) )", "choosing": "( Max( ( DS / ( ( RRSe + ( CS - RRSe ) ) + RCSe ) ),( MUC / RMSe ) ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.03231939163498099, "obj2": 0.8120350093797528}, {"determining": "( ( ( MDR / PN ) * ( ARS - RRS ) ) + ( ( ( ( FirstVNF_RAM + MRS ) + FirstVNF_CPU ) + FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( ( DS / ( MUC + RCSe ) ),( MUC / RMSe ) ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.049429657794676805, "obj2": 0.8046536486389623}, {"determining": "( ( ( FirstVNF_Mem / AMS ) + Max( CRS,RRS ) ) * Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + BR ) * FirstVNF_CPU ) ) )", "choosing": "( Max( Max( MUR,( RMSe / Max( DS,DS ) ) ),CS ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.026615969581749048, "obj2": 0.8215676608783432}, {"determining": "( ( ( ( AMS * ARS ) - Max( Const,FirstVNF_Mem_Server ) ) + Max( FirstVNF_RAM,Min( ( ( PN / FirstVNF_RAM ) * FirstVNF_RAM ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) + ( FirstVNF_Mem_Server + MDR ) )", "choosing": "( Min( ( Min( MLU ,( ( DS + CS ) / MUC ) ) - ( ( ( ( MUR - CS ) - ( DS / CS ) ) - Max( DS,MUR ) ) + ( ( RMSe / MLU ) / ( MUR + RCSe ) ) ) ) ,( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) * ( Min( ( CS * CS ) ,( MUM * MLU ) ) * Max( Min( MUC ,MLU ),( Max( DS,RMSe ) * MUC ) ) ) )", "obj1": 0.19961977186311788, "obj2": 0.5638027478061288}, {"determining": "Min( ( ( PN / FirstVNF_RAM ) / BR ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,Min( ( PN + Const ) ,Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - MUC ) / ( ( ( MUC + MUM ) * ( ( Min( DS ,Min( DS ,CS ) ) - ( CS - ( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) ) * MUM ) ) / Max( ( Max( ( ( MLU * ( RMSe / CS ) ) / MLU ),MUR ) - MLU ),MLU ) ) )", "obj1": 0.11596958174904944, "obj2": 0.6522893459676665}, {"determining": "Min( ( RRS + MDR ) ,Max( ( FirstVNF_CPU_Server + Max( FirstVNF_RAM,Min( ( ( PN / FirstVNF_RAM ) * FirstVNF_RAM ) ,( DDR - ARS ) ) ) ),( Const * ARS ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Max( RCSe,( CS / ( ( RMSe * RRSe ) * ( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) ) ) )", "obj1": 0.43155893536121676, "obj2": 0.3726827001414015}, {"determining": "( Max( PN,( CRS - FirstVNF_Mem ) ) - ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) * ( MRS + BR ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Max( RCSe,( CS / ( ( RMSe * RRSe ) * ( ( MUR - RRSe ) - ( MUM + RMSe ) ) ) ) ) )", "obj1": 0.4695817490494297, "obj2": 0.3559941037338418}, {"determining": "Max( Max( ACS,Max( AMS,( ( ARS + ( ( FirstVNF_CPU_Server - BR ) - FirstVNF_Mem_Server ) ) / ( Const / FirstVNF_RAM_Server ) ) ) ),PN )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Max( RCSe,( CS / ( ( RMSe * RRSe ) * ( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) ) ) )", "obj1": 0.43155893536121676, "obj2": 0.3726827001414015}, {"determining": "( ( ( ( RRS - FirstVNF_Mem_Server ) - ( Min( FirstVNF_CPU ,( MDR + CRS ) ) - FirstVNF_RAM_Server ) ) + Max( FirstVNF_RAM,Min( ( ( PN / FirstVNF_RAM ) * FirstVNF_RAM ) ,( DDR - ARS ) ) ) ) + ( FirstVNF_Mem_Server + MDR ) )", "choosing": "( Min( ( Min( MLU ,( ( DS + CS ) / ( Min( ( DS - CS ) ,RCSe ) * RRSe ) ) ) - ( MUM - MUM ) ) ,( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) * ( Min( ( CS * CS ) ,( MUM * MLU ) ) * Max( Min( MUC ,MLU ),( MLU * MUC ) ) ) )", "obj1": 0.12927756653992395, "obj2": 0.643325730033473}, {"determining": "( ( ( Const * FirstVNF_CPU ) * Min( MRS ,Const ) ) / ( FirstVNF_CPU_Server + Max( PN,Const ) ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( RCSe,Max( ( MUR * DS ),Max( MLU,( MUM / ( RMSe + DS ) ) ) ) ) ) )", "obj1": 0.24334600760456274, "obj2": 0.5096489290480997}, {"determining": "( Min( ( ( ( ACS + FirstVNF_CPU_Server ) + MDR ) / ( MRS / PN ) ) ,( ( ( ARS / BR ) * PN ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + ( ( AMS / CRS ) / FirstVNF_RAM ) ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Max( RCSe,( CS / ( ( RMSe * RRSe ) * ( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) ) ) )", "obj1": 0.42395437262357416, "obj2": 0.3899358774662924}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( ( ARS / BR ) * PN ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,Max( MLU,Max( RRSe,RRSe ) ) )", "obj1": 0.41634980988593157, "obj2": 0.397315613954679}, {"determining": "Min( ( ( PN / FirstVNF_RAM ) / BR ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,Min( ( PN + Const ) ,DDR ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Max( RCSe,( CS / ( ( RMSe * RRSe ) * ( ( MUR - RRSe ) - ( RCSe + Max( MLU,Max( RRSe,RRSe ) ) ) ) ) ) ) )", "obj1": 0.4600760456273764, "obj2": 0.357637104645757}, {"determining": "Min( ( ( PN / FirstVNF_RAM ) / BR ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,Min( ( PN + Const ) ,Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Max( RCSe,( CS / ( ( RMSe * RRSe ) * ( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) ) ) )", "obj1": 0.43155893536121676, "obj2": 0.3726827001414015}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( ( ARS / BR ) * PN ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,Max( MLU,Max( RRSe,RRSe ) ) )", "obj1": 0.41634980988593157, "obj2": 0.397315613954679}]}