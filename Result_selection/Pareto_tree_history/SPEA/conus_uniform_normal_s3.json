{"1": [{"determining": "Max( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ),( RRS / ARS ) )", "choosing": "( Max( RRSe,MUC ) * ( RCSe / DS ) )", "obj1": 0.1320754716981132, "obj2": 0.7679918210236351}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server + Const ) )", "choosing": "( ( RCSe + MUR ) + ( MUM * RMSe ) )", "obj1": 0.42452830188679247, "obj2": 0.5107182503193833}, {"determining": "( ( FirstVNF_RAM * FirstVNF_Mem ) - Min( FirstVNF_Mem ,Const ) )", "choosing": "( Min( CS ,RCSe ) / ( RCSe - MUM ) )", "obj1": 0.7132075471698113, "obj2": 0.27611375063396926}, {"determining": "( ( AMS + MDR ) - ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + MUR ) * ( MUM / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( PN + FirstVNF_CPU ),( Const + AMS ) )", "choosing": "( ( DS + CS ) * Max( MUC,DS ) )", "obj1": 0.5113207547169811, "obj2": 0.4527190466394442}, {"determining": "( Max( ACS,FirstVNF_Mem ) / ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( MUR + MUC ) * ( DS - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,( MRS - MRS ) )", "choosing": "Max( ( RMSe - DS ),( DS / DS ) )", "obj1": 0.11509433962264151, "obj2": 0.774687751500611}, {"determining": "( ( FirstVNF_Mem + MRS ) - Min( PN ,FirstVNF_RAM ) )", "choosing": "( ( MUC * DS ) / ( RRSe * MUM ) )", "obj1": 0.5754716981132075, "obj2": 0.3477789742361851}, {"determining": "Min( ( AMS * FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - FirstVNF_RAM ) )", "choosing": "( ( RMSe / MUC ) - ( DS - MLU ) )", "obj1": 0.3905660377358491, "obj2": 0.5363622800660739}, {"determining": "( Max( RRS,Const ) + Min( ACS ,MDR ) )", "choosing": "Max( ( MUR / CS ),( RCSe - MLU ) )", "obj1": 0.39245283018867927, "obj2": 0.5110067691043119}, {"determining": "( Min( ( AMS + FirstVNF_Mem ) ,Min( PN ,PN ) ) + Min( Max( Const,FirstVNF_RAM_Server ) ,Min( CRS ,RRS ) ) )", "choosing": "Max( ( ( MUC * DS ) * ( MUM - CS ) ),( ( DS - MUC ) * Max( MUC,MUM ) ) )", "obj1": 0.44339622641509435, "obj2": 0.45851311855433635}, {"determining": "( ( ( MDR / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) / ( Max( AMS,RRS ) / ( BR + DDR ) ) )", "choosing": "Max( Min( MUC ,RMSe ),( ( MUR + DS ) * MUC ) )", "obj1": 0.5867924528301887, "obj2": 0.3355333022637175}, {"determining": "( Max( CRS,AMS ) / Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe / MUM ) * ( Min( DS ,DS ) - Max( RRSe,CS ) ) )", "obj1": 0.31886792452830187, "obj2": 0.5662638527976604}, {"determining": "( ( FirstVNF_RAM_Server + RRS ) + ( CRS / MRS ) )", "choosing": "( Max( Min( MUR ,DS ),( DS + CS ) ) / ( Min( RMSe ,RMSe ) * Max( RRSe,RCSe ) ) )", "obj1": 0.29245283018867924, "obj2": 0.6570405557154982}, {"determining": "( ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server / ACS ) ) + ( Min( CRS ,PN ) / ( FirstVNF_Mem_Server + ARS ) ) )", "choosing": "Max( ( MUR + Min( MUC ,RRSe ) ),( Max( CS,RCSe ) - MLU ) )", "obj1": 0.4320754716981132, "obj2": 0.5052407396570108}, {"determining": "Max( Max( ( AMS + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "Max( ( ( MLU / RRSe ) / ( MUM / RCSe ) ),( ( RRSe + RRSe ) / Max( RRSe,CS ) ) )", "obj1": 0.35094339622641507, "obj2": 0.5389241394137455}, {"determining": "Min( ( ( FirstVNF_Mem_Server / DDR ) - ( RRS + MRS ) ) ,Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( BR / MRS ) ) )", "choosing": "Min( ( Max( RMSe,RRSe ) / ( RRSe * RMSe ) ) ,( ( MUM + RMSe ) / Min( RRSe ,RCSe ) ) )", "obj1": 0.30754716981132074, "obj2": 0.6031099476521541}, {"determining": "( ( ( FirstVNF_Mem_Server * ACS ) - ( FirstVNF_RAM / CRS ) ) / ( ( FirstVNF_RAM / CRS ) * Min( RRS ,RRS ) ) )", "choosing": "( ( RMSe / MLU ) / Max( ( RRSe * MLU ),Min( RCSe ,RMSe ) ) )", "obj1": 0.2358490566037736, "obj2": 0.6789067363807962}, {"determining": "( Max( ( ACS - ARS ),Max( BR,FirstVNF_Mem ) ) + ( ( Const + RRS ) / ( BR * ACS ) ) )", "choosing": "Min( ( CS + MUR ) ,Min( RCSe ,DS ) )", "obj1": 0.5566037735849056, "obj2": 0.3624940870037373}, {"determining": "( ( Const + Const ) * ( CRS + ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUC + DS ) * ( RMSe + MUC ) ) + Max( MLU,CS ) )", "obj1": 0.6132075471698113, "obj2": 0.2962539995547587}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) * ( MRS / MDR ) ) + ( ( MRS - ARS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) / ( ( ( MDR + MRS ) * ( ACS - MRS ) ) * Max( Max( FirstVNF_Mem,FirstVNF_CPU ),( FirstVNF_Mem * BR ) ) ) )", "choosing": "( ( Max( ( RMSe + CS ),( RRSe + RCSe ) ) + ( ( RRSe + DS ) + ( RRSe / MLU ) ) ) * Min( Min( ( MUC + MLU ) ,Max( RCSe,RRSe ) ) ,( ( MLU - RCSe ) / ( CS * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR - FirstVNF_RAM_Server ) - Min( FirstVNF_RAM_Server ,Const ) ) + ( Min( FirstVNF_CPU_Server ,BR ) * ( CRS / FirstVNF_CPU_Server ) ) ) - Max( Max( ( ACS + FirstVNF_Mem ),Min( RRS ,FirstVNF_Mem ) ),( ( AMS / ACS ) * Max( CRS,MRS ) ) ) )", "choosing": "( ( ( ( DS + CS ) * ( RCSe + RMSe ) ) - ( ( RCSe - MLU ) / ( RRSe - MUC ) ) ) * Min( Min( ( MUR + MUR ) ,( RMSe - MLU ) ) ,( Min( MLU ,CS ) * ( MUM + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( AMS ,Const ),( MRS - ACS ) ) + ( ( FirstVNF_RAM * MRS ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) / Min( Min( ( FirstVNF_CPU - AMS ) ,( BR + PN ) ) ,( Max( ARS,RRS ) - Max( ACS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( ( MLU / RMSe ) + ( MUC * MUC ) ) ,Min( Min( RMSe ,MUR ) ,( CS * RCSe ) ) ) * Max( ( ( RCSe / MUC ) - ( DS - RRSe ) ),Min( ( MUM / RMSe ) ,Max( CS,CS ) ) ) )", "obj1": 0.6924528301886792, "obj2": 0.28659533006115967}, {"determining": "Min( ( Max( ( ARS - DDR ),Max( MRS,AMS ) ) * Max( Max( MRS,FirstVNF_CPU ),Max( Const,Const ) ) ) ,( ( ( MDR * FirstVNF_CPU_Server ) * Max( MRS,MRS ) ) - ( ( FirstVNF_CPU + BR ) / ( BR + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC / RRSe ) + ( ( ( MUR - CS ) / RCSe ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( FirstVNF_Mem / ACS ) ,( AMS + FirstVNF_Mem ) ),( Max( MRS,FirstVNF_CPU_Server ) / ( MDR + MRS ) ) ) * ( Max( Min( FirstVNF_CPU_Server ,CRS ),( MDR - MRS ) ) - Min( Min( FirstVNF_Mem_Server ,ARS ) ,Min( Const ,CRS ) ) ) )", "choosing": "( ( Min( Min( RMSe ,MUC ) ,Min( RRSe ,MUR ) ) / ( Min( MUM ,MUC ) / ( MUR - MLU ) ) ) - ( Min( ( MUR * MUR ) ,( CS / MUR ) ) * ( ( RCSe - MUM ) - Min( CS ,RRSe ) ) ) )", "obj1": 0.2509433962264151, "obj2": 0.6788421896440237}, {"determining": "( ( ( ( DDR - FirstVNF_Mem_Server ) * ( ARS / ARS ) ) / ( Max( CRS,FirstVNF_RAM ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) / Max( ( ( ACS + PN ) * ( FirstVNF_CPU - CRS ) ),( Max( FirstVNF_RAM_Server,MRS ) + Max( FirstVNF_CPU_Server,MDR ) ) ) )", "choosing": "Min( Min( MUR ,( ( MLU - RCSe ) / RCSe ) ) ,Min( RCSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * Min( BR ,FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( Min( Min( DS ,DS ) ,( MUR + DS ) ) * ( ( RRSe / MUR ) - ( DS - DS ) ) ) + Max( ( ( MUC * MUC ) * Max( RMSe,MUM ) ),Max( Max( MUR,MLU ),( DS / RMSe ) ) ) )", "obj1": 0.7962264150943397, "obj2": 0.13731721947997294}, {"determining": "( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.14339622641509434, "obj2": 0.7584018956611637}, {"determining": "( ( ( ( ACS + BR ) - ( BR / DDR ) ) + Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) / ( Max( ( FirstVNF_RAM / AMS ),( CRS + MDR ) ) + Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( AMS + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Max( RMSe,( DS - RCSe ) ),( DS + Min( ( DS * RRSe ) ,MLU ) ) )", "obj1": 0.42641509433962266, "obj2": 0.508490847910814}, {"determining": "( Min( ( ( FirstVNF_RAM * RRS ) * Const ) ,Const ) / Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( ( MUR + RCSe ) * ( MUM - Max( Min( RCSe ,RCSe ),MLU ) ) )", "obj1": 0.3150943396226415, "obj2": 0.5951483456452916}, {"determining": "( Min( Min( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( BR - FirstVNF_RAM_Server ) ,( FirstVNF_RAM + FirstVNF_Mem ) ) ) - ( Min( ( ARS - ACS ) ,Min( FirstVNF_CPU ,PN ) ) * Max( ( Const * FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( DS - MLU ) - ( DS + RMSe ) ),Max( Min( MLU ,MUR ),( MUM - RMSe ) ) ) / ( Max( ( CS * DS ),Min( MLU ,MUR ) ) + Min( ( DS * MUM ) ,( DS + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "2": [{"determining": "( ( AMS + MDR ) - ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + MUR ) * ( MUM / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,( MRS - MRS ) )", "choosing": "Max( ( RMSe - DS ),( DS / DS ) )", "obj1": 0.11509433962264151, "obj2": 0.774687751500611}, {"determining": "( ( FirstVNF_Mem + MRS ) - Min( PN ,FirstVNF_RAM ) )", "choosing": "( ( MUC * DS ) / ( RRSe * MUM ) )", "obj1": 0.5754716981132075, "obj2": 0.3477789742361851}, {"determining": "( Max( RRS,Const ) + Min( ACS ,MDR ) )", "choosing": "Max( ( MUR / CS ),( RCSe - MLU ) )", "obj1": 0.39245283018867927, "obj2": 0.5110067691043119}, {"determining": "( ( ( MDR / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) / ( Max( AMS,RRS ) / ( BR + DDR ) ) )", "choosing": "Max( Min( MUC ,RMSe ),( ( MUR + DS ) * MUC ) )", "obj1": 0.5867924528301887, "obj2": 0.3355333022637175}, {"determining": "( Max( CRS,AMS ) / Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe / MUM ) * ( Min( DS ,DS ) - Max( RRSe,CS ) ) )", "obj1": 0.31886792452830187, "obj2": 0.5662638527976604}, {"determining": "Max( Max( ( AMS + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "Max( ( ( MLU / RRSe ) / ( MUM / RCSe ) ),( ( RRSe + RRSe ) / Max( RRSe,CS ) ) )", "obj1": 0.35094339622641507, "obj2": 0.5389241394137455}, {"determining": "Min( ( ( FirstVNF_Mem_Server / DDR ) - ( RRS + MRS ) ) ,Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( BR / MRS ) ) )", "choosing": "Min( ( Max( RMSe,RRSe ) / ( RRSe * RMSe ) ) ,( ( MUM + RMSe ) / Min( RRSe ,RCSe ) ) )", "obj1": 0.30754716981132074, "obj2": 0.6031099476521541}, {"determining": "( Max( ( ACS - ARS ),Max( BR,FirstVNF_Mem ) ) + ( ( Const + RRS ) / ( BR * ACS ) ) )", "choosing": "Min( ( CS + MUR ) ,Min( RCSe ,DS ) )", "obj1": 0.5566037735849056, "obj2": 0.3624940870037373}, {"determining": "( ( Const + Const ) * ( CRS + ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUC + DS ) * ( RMSe + MUC ) ) + Max( MLU,CS ) )", "obj1": 0.6132075471698113, "obj2": 0.2962539995547587}, {"determining": "( ( Max( Min( AMS ,Const ),( MRS - ACS ) ) + ( ( FirstVNF_RAM * MRS ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) / Min( Min( ( FirstVNF_CPU - AMS ) ,( BR + PN ) ) ,( Max( ARS,RRS ) - Max( ACS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( ( MLU / RMSe ) + ( MUC * MUC ) ) ,Min( Min( RMSe ,MUR ) ,( CS * RCSe ) ) ) * Max( ( ( RCSe / MUC ) - ( DS - RRSe ) ),Min( ( MUM / RMSe ) ,Max( CS,CS ) ) ) )", "obj1": 0.6924528301886792, "obj2": 0.28659533006115967}, {"determining": "( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * Min( BR ,FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( Min( Min( DS ,DS ) ,( MUR + DS ) ) * ( ( RRSe / MUR ) - ( DS - DS ) ) ) + Max( ( ( MUC * MUC ) * Max( RMSe,MUM ) ),Max( Max( MUR,MLU ),( DS / RMSe ) ) ) )", "obj1": 0.7962264150943397, "obj2": 0.13731721947997294}, {"determining": "( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.14339622641509434, "obj2": 0.7584018956611637}, {"determining": "( Min( ( ( FirstVNF_RAM * RRS ) * Const ) ,Const ) / Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( ( MUR + RCSe ) * ( MUM - Max( Min( RCSe ,RCSe ),MLU ) ) )", "obj1": 0.3150943396226415, "obj2": 0.5951483456452916}, {"determining": "( ( Min( ( FirstVNF_RAM_Server - DDR ) ,( MRS + FirstVNF_RAM ) ) + RRS ) + ( CRS / MRS ) )", "choosing": "( Max( Min( MUR ,DS ),( DS + CS ) ) / ( Min( RMSe ,CS ) * Max( RRSe,RCSe ) ) )", "obj1": 0.3452830188679245, "obj2": 0.5514766325431357}, {"determining": "( Min( CRS ,AMS ) / ( ( ( FirstVNF_Mem_Server * ACS ) - ( FirstVNF_RAM / CRS ) ) / ( ( FirstVNF_RAM / CRS ) * Min( RRS ,RRS ) ) ) )", "choosing": "( ( RRSe / MUM ) * ( Max( DS,Min( RCSe ,RMSe ) ) - Max( RRSe,CS ) ) )", "obj1": 0.38113207547169814, "obj2": 0.5177215213814207}, {"determining": "( Min( CRS ,CRS ) / Max( FirstVNF_Mem_Server,CRS ) )", "choosing": "( ( RMSe / MLU ) / ( ( RRSe * MLU ) - Min( RCSe ,RMSe ) ) )", "obj1": 0.2037735849056604, "obj2": 0.7026588940424434}, {"determining": "( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * Min( BR ,FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "Max( ( RMSe - DS ),( DS / DS ) )", "obj1": 0.4339622641509434, "obj2": 0.454966112845125}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,( MRS - MRS ) )", "choosing": "( ( Min( Min( DS ,DS ) ,( MUR + DS ) ) * ( ( RRSe / MUR ) - ( DS - DS ) ) ) + Max( ( ( MUC * MUC ) * Max( RMSe,MUM ) ),Max( Max( MUR,MLU ),( DS - RMSe ) ) ) )", "obj1": 0.7566037735849057, "obj2": 0.17481539568151117}, {"determining": "( Min( ( ( FirstVNF_RAM * RRS ) * Const ) ,Const ) / Max( FirstVNF_RAM_Server,( PN + FirstVNF_CPU ) ) )", "choosing": "( ( MUR + RCSe ) * ( MUM - Max( ( ( DS + CS ) * Max( MUC,DS ) ),MLU ) ) )", "obj1": 0.2320754716981132, "obj2": 0.6726142341417612}, {"determining": "( Min( ( ( FirstVNF_RAM * RRS ) * Const ) ,Const ) / Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( ( MUR + RCSe ) * ( MUM - Max( Min( RCSe ,RCSe ),MLU ) ) )", "obj1": 0.3150943396226415, "obj2": 0.5951483456452916}, {"determining": "( ( ( ( FirstVNF_CPU_Server / DDR ) + ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) + ( ( PN / RRS ) * Max( FirstVNF_RAM_Server,MDR ) ) ) + Min( Min( Min( FirstVNF_CPU ,Const ) ,( DDR + MRS ) ) ,( ( MDR - ARS ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( MLU / RRSe ) - ( MUM / RCSe ) ),( ( RRSe + RRSe ) / Max( RRSe,CS ) ) )", "obj1": 0.35094339622641507, "obj2": 0.5389241394137455}, {"determining": "( Max( CRS,MRS ) / ( MRS - DDR ) )", "choosing": "( ( DS / RCSe ) / ( Min( MLU ,CS ) * ( MUM * MUM ) ) )", "obj1": 0.44528301886792454, "obj2": 0.4381278071367718}, {"determining": "( Max( RRS,Const ) + Min( ACS ,MDR ) )", "choosing": "Max( ( MUR / CS ),( RCSe - MLU ) )", "obj1": 0.39245283018867927, "obj2": 0.5110067691043119}, {"determining": "( ( Min( ( ( FirstVNF_RAM * RRS ) * Const ) ,Const ) + ACS ) / ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( MUR - MLU ) * ( MUR + RMSe ) )", "obj1": 0.269811320754717, "obj2": 0.6397464830337117}, {"determining": "( Max( RRS,Const ) + Min( ACS ,MDR ) )", "choosing": "Max( ( MUR / CS ),( RCSe - MLU ) )", "obj1": 0.42830188679245285, "obj2": 0.47662170561457173}, {"determining": "( ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) + Min( ACS ,MDR ) )", "choosing": "Max( ( MUR / CS ),( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) - MLU ) )", "obj1": 0.1320754716981132, "obj2": 0.7630214203136174}, {"determining": "( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.13773584905660377, "obj2": 0.7614489784334377}, {"determining": "Min( ( ( FirstVNF_RAM / DDR ) * ( RRS + MRS ) ) ,Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( BR / MRS ) ) )", "choosing": "Min( ( Max( MUC,RRSe ) / ( RRSe * RMSe ) ) ,( ( MUM + RMSe ) * Min( RRSe ,RCSe ) ) )", "obj1": 0.3113207547169811, "obj2": 0.6024791457569735}, {"determining": "( ( ( ( FirstVNF_CPU_Server / DDR ) + ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) + ( ( CRS / RRS ) * Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) + Min( Min( Min( FirstVNF_CPU ,Const ) ,( DDR + MRS ) ) ,( ( MDR - ARS ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( MUR ,( MUM + MUC ) ) - ( ( RCSe / MUR ) / ( CS * ( MUR - RCSe ) ) ) ) / Max( MUC,RRSe ) )", "obj1": 0.2792452830188679, "obj2": 0.6292054969247682}, {"determining": "Min( Min( ( ( ARS - FirstVNF_CPU ) * MRS ) ,CRS ) ,( ( MDR + BR ) - CRS ) )", "choosing": "( Min( ( Max( ( ( ( ( RMSe / MLU ) + Min( MLU ,RRSe ) ) - ( ( CS + MUR ) / ( DS * RCSe ) ) ) - Max( Min( ( RMSe + MUR ) ,( CS + DS ) ),( ( RMSe * MUR ) * Min( RCSe ,DS ) ) ) ),Min( ( ( Min( MUM ,DS ) - Min( MUC ,DS ) ) * ( ( RRSe + MUM ) * ( DS - RCSe ) ) ) ,( ( Max( RMSe,RCSe ) + ( CS * MUC ) ) + ( ( RMSe - MUC ) - Min( DS ,MUR ) ) ) ) ) - ( ( ( ( ( RRSe * MUC ) - ( RRSe - RCSe ) ) - ( ( CS + DS ) * ( DS * MUC ) ) ) * Max( Max( ( DS / RRSe ),( RMSe - DS ) ),( ( CS - CS ) * Min( DS ,MUM ) ) ) ) * Max( Max( ( ( RMSe / MUR ) - Max( DS,CS ) ),( Max( MUM,MLU ) - ( MUM / MLU ) ) ),( ( Min( MUR ,CS ) / Min( RMSe ,CS ) ) * ( ( DS + CS ) / ( MUC - RMSe ) ) ) ) ) ) ,( ( ( Max( Min( ( MUC / CS ) ,( RMSe * CS ) ),( Min( MUM ,RCSe ) + Min( CS ,MLU ) ) ) + Max( ( ( RMSe / MUM ) + Max( RRSe,MUR ) ),( ( MLU / MUR ) + ( MUC / RMSe ) ) ) ) + Max( Min( ( ( RRSe / RRSe ) * ( CS / RMSe ) ) ,Max( ( RRSe / MUM ),Max( MUC,MUM ) ) ),( ( ( MUR - RMSe ) + ( MUC - RRSe ) ) - Max( ( RMSe * RRSe ),( RCSe + MUR ) ) ) ) ) / ( ( Max( ( ( MUM / MUM ) + ( CS + RCSe ) ),Min( ( MUC / RRSe ) ,( RMSe / MUC ) ) ) - ( Min( ( MUC / MUR ) ,( MUC + MLU ) ) * Min( ( DS - RMSe ) ,Min( RCSe ,RRSe ) ) ) ) * ( ( ( ( RCSe - MUM ) / Max( MUR,MLU ) ) + ( Max( RCSe,CS ) / Min( RMSe ,DS ) ) ) * ( ( Max( RRSe,RCSe ) - Max( MUR,RCSe ) ) + Max( ( MUC - MUM ),( CS - CS ) ) ) ) ) ) ) - Min( ( ( Min( ( ( ( DS - RMSe ) * ( DS / MLU ) ) - ( Min( RMSe ,RCSe ) * ( MUM + MUR ) ) ) ,Max( ( ( CS * MUC ) + Max( MUC,DS ) ),Max( ( MLU / MUM ),( RRSe + RMSe ) ) ) ) - ( Min( ( ( DS - RMSe ) + ( DS - RMSe ) ) ,( Min( RCSe ,CS ) * ( MLU - CS ) ) ) / Max( ( Min( MLU ,RMSe ) + ( RCSe + MUC ) ),Max( Min( CS ,DS ),Min( DS ,DS ) ) ) ) ) - ( ( ( ( Max( MUR,RMSe ) / ( RCSe + MUC ) ) - ( ( DS * RMSe ) * ( MUM * RMSe ) ) ) * ( Max( Min( MLU ,MUM ),( MUM * MUC ) ) + ( ( RCSe * RMSe ) / ( MUC / RMSe ) ) ) ) + Min( ( Min( ( RCSe * DS ) ,( MUM - MUC ) ) - Min( ( MUC * MUR ) ,( MUC + MUR ) ) ) ,Min( ( Max( RMSe,MLU ) * ( RRSe * RMSe ) ) ,Max( ( RMSe / MUC ),( CS - RMSe ) ) ) ) ) ) ,( ( ( ( Max( ( RCSe * MLU ),( MUC * MUR ) ) * Max( Max( MUR,CS ),( MUR * DS ) ) ) * ( Max( ( MUM + DS ),( MUM * DS ) ) * ( ( MLU * MLU ) * ( RRSe / RCSe ) ) ) ) / ( Min( Max( Max( DS,MUM ),( CS + RCSe ) ) ,( Max( CS,MUM ) - ( MUR + RCSe ) ) ) / ( ( Min( RRSe ,RRSe ) * Min( RCSe ,RCSe ) ) * Min( ( MUM / CS ) ,( RRSe + MLU ) ) ) ) ) / ( ( Max( ( Min( MUC ,RRSe ) * ( RMSe * MUM ) ),Min( Min( MUC ,CS ) ,Max( MUR,MLU ) ) ) + ( ( Max( MUC,MLU ) * Max( RRSe,MLU ) ) / ( ( RMSe + RRSe ) - ( MUC * DS ) ) ) ) * Max( Min( Max( ( MLU / MUR ),( CS + MUM ) ) ,( Max( MUM,RRSe ) * ( MLU / MUC ) ) ),( ( ( RMSe * MUM ) + Max( RCSe,CS ) ) / Max( ( DS * RRSe ),( MLU - CS ) ) ) ) ) ) ) )", "obj1": 0.5490566037735849, "obj2": 0.3648818431112179}, {"determining": "( ( CRS - AMS ) / FirstVNF_RAM )", "choosing": "( Max( RRSe,DS ) * ( Max( DS,MLU ) - Max( RRSe,CS ) ) )", "obj1": 0.2849056603773585, "obj2": 0.6206589219707865}, {"determining": "( Min( CRS ,AMS ) / Max( FirstVNF_Mem_Server,CRS ) )", "choosing": "( ( RRSe / MUM ) * ( Max( DS,MLU ) - Max( RRSe,CS ) ) )", "obj1": 0.31886792452830187, "obj2": 0.5662638527976604}, {"determining": "( Max( ( ACS - ARS ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ACS ) ) )", "choosing": "Min( ( CS + MUR ) ,( RCSe + DS ) )", "obj1": 0.5566037735849056, "obj2": 0.3624940870037373}, {"determining": "( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * Min( BR ,FirstVNF_CPU ) ) ) - ( ( CRS - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( Min( Min( DS ,DS ) ,( MUR + DS ) ) * ( ( RRSe / MUR ) - ( Max( CS,RCSe ) + ( MLU * MUM ) ) ) ) + Max( ( ( MUC * MUC ) * Max( RMSe,MUM ) ),Max( Max( MUR,MLU ),( DS / RMSe ) ) ) )", "obj1": 0.1830188679245283, "obj2": 0.7069691935569408}, {"determining": "( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * Min( BR ,FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( Min( Min( DS ,DS ) ,( MUR + DS ) ) * ( ( RRSe / MUR ) - ( DS - DS ) ) ) + Max( ( ( MUC * MUC ) * Max( RMSe,MUM ) ),Max( Max( MUR,MLU ),( DS / RMSe ) ) ) )", "obj1": 0.7962264150943397, "obj2": 0.13731721947997294}, {"determining": "( ( Const + Const ) * Max( Max( ( AMS + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) ) )", "choosing": "( ( ( MUC + DS ) * ( RMSe + MUC ) ) + Max( RRSe,CS ) )", "obj1": 0.5811320754716981, "obj2": 0.34462858742278435}, {"determining": "Max( Max( ( AMS + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ),Min( Min( ACS ,ARS ) ,( FirstVNF_Mem_Server - BR ) ) )", "choosing": "Max( ( ( ( MUC + DS ) * ( RMSe + MUC ) ) + Max( RCSe,CS ) ),( ( RRSe + RRSe ) / Max( RMSe,CS ) ) )", "obj1": 0.5188679245283019, "obj2": 0.40826292290842287}, {"determining": "Max( Max( ( AMS + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + DS ) * ( RMSe + MUC ) ) + Max( MLU,CS ) )", "obj1": 0.6132075471698113, "obj2": 0.2962539995547587}, {"determining": "( ( Const + Const ) * ( CRS - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( MLU / RRSe ) / ( MUM + RCSe ) ),( ( RRSe + RRSe ) / Max( RRSe,CS ) ) )", "obj1": 0.35094339622641507, "obj2": 0.5389241394137455}, {"determining": "( ( RRS / FirstVNF_RAM_Server ) / ( MRS - DDR ) )", "choosing": "( ( DS * Min( RMSe ,MUR ) ) / Min( MLU ,MUR ) )", "obj1": 0.5037735849056604, "obj2": 0.40865396641741725}, {"determining": "( ( FirstVNF_RAM_Server + RRS ) + ( CRS / ( RRS / FirstVNF_CPU ) ) )", "choosing": "( Max( Min( MUR ,DS ),RCSe ) / ( Min( RMSe ,RMSe ) * Max( RRSe,RCSe ) ) )", "obj1": 0.28867924528301886, "obj2": 0.6146350145960117}, {"determining": "( Max( RRS,PN ) + Min( ACS ,MDR ) )", "choosing": "Max( ( MUR / CS ),( CS - MLU ) )", "obj1": 0.4, "obj2": 0.49031482680800326}, {"determining": "( Max( RRS,Const ) + Min( ACS ,MDR ) )", "choosing": "Max( ( MUR / CS ),( RCSe - MLU ) )", "obj1": 0.42641509433962266, "obj2": 0.4787994885767018}, {"determining": "( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( ( ( RRS / FirstVNF_CPU ) / Min( MRS ,DDR ) ),RRS ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,( ( DS / RCSe ) / Min( MLU ,MUR ) ) ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.14528301886792452, "obj2": 0.7517820439417614}, {"determining": "( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.16037735849056603, "obj2": 0.7445801910984938}, {"determining": "Min( ( FirstVNF_RAM_Server - DDR ) ,( CRS + FirstVNF_RAM ) )", "choosing": "( ( MUC - MUM ) * ( MLU - CS ) )", "obj1": 0.2981132075471698, "obj2": 0.6033446595990157}, {"determining": "Min( ( ( FirstVNF_Mem_Server / DDR ) - ( RRS / MRS ) ) ,( ( FirstVNF_RAM * FirstVNF_Mem ) - Min( FirstVNF_Mem ,Const ) ) )", "choosing": "Min( ( Max( RMSe,RMSe ) / ( RRSe * RMSe ) ) ,( ( MUM + RMSe ) / Min( RRSe ,RCSe ) ) )", "obj1": 0.7075471698113207, "obj2": 0.2654069769629585}, {"determining": "Min( ( ( FirstVNF_Mem_Server / DDR ) - ( RRS + MRS ) ) ,Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( BR / MRS ) ) )", "choosing": "Min( ( Max( RMSe,RRSe ) / ( RRSe * RMSe ) ) ,( ( MUM + RMSe ) / Min( RRSe ,RCSe ) ) )", "obj1": 0.30754716981132074, "obj2": 0.6031099476521541}, {"determining": "( ( Max( Max( Const,PN ),( RRS * CRS ) ) / ( Max( CRS,FirstVNF_RAM ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) / Max( ( ( ACS + PN ) * ( FirstVNF_CPU - CRS ) ),( Max( FirstVNF_RAM_Server,MRS ) + Max( FirstVNF_CPU_Server,MDR ) ) ) )", "choosing": "Min( Min( MUR ,( ( MLU - RCSe ) / RCSe ) ) ,RRSe )", "obj1": 0.2660377358490566, "obj2": 0.6437335032556823}, {"determining": "( Min( MRS ,PN ) * ( FirstVNF_RAM + ( MRS / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * DS ) / ( RRSe * MUM ) )", "obj1": 0.560377358490566, "obj2": 0.35699265123212315}], "3": [{"determining": "( ( AMS + MDR ) - ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + MUR ) * ( MUM / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem + MRS ) - Min( PN ,FirstVNF_RAM ) )", "choosing": "( ( MUC * DS ) / ( RRSe * MUM ) )", "obj1": 0.5754716981132075, "obj2": 0.3477789742361851}, {"determining": "( Max( CRS,AMS ) / Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe / MUM ) * ( Min( DS ,DS ) - Max( RRSe,CS ) ) )", "obj1": 0.31886792452830187, "obj2": 0.5662638527976604}, {"determining": "Max( Max( ( AMS + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "Max( ( ( MLU / RRSe ) / ( MUM / RCSe ) ),( ( RRSe + RRSe ) / Max( RRSe,CS ) ) )", "obj1": 0.35094339622641507, "obj2": 0.5389241394137455}, {"determining": "Min( ( ( FirstVNF_Mem_Server / DDR ) - ( RRS + MRS ) ) ,Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( BR / MRS ) ) )", "choosing": "Min( ( Max( RMSe,RRSe ) / ( RRSe * RMSe ) ) ,( ( MUM + RMSe ) / Min( RRSe ,RCSe ) ) )", "obj1": 0.30754716981132074, "obj2": 0.6031099476521541}, {"determining": "( ( Const + Const ) * ( CRS + ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUC + DS ) * ( RMSe + MUC ) ) + Max( MLU,CS ) )", "obj1": 0.6132075471698113, "obj2": 0.2962539995547587}, {"determining": "( Min( CRS ,CRS ) / Max( FirstVNF_Mem_Server,CRS ) )", "choosing": "( ( RMSe / MLU ) / ( ( RRSe * MLU ) - Min( RCSe ,RMSe ) ) )", "obj1": 0.2037735849056604, "obj2": 0.7026588940424434}, {"determining": "( Min( ( ( FirstVNF_RAM * RRS ) * Const ) ,Const ) / Max( FirstVNF_RAM_Server,( PN + FirstVNF_CPU ) ) )", "choosing": "( ( MUR + RCSe ) * ( MUM - Max( ( ( DS + CS ) * Max( MUC,DS ) ),MLU ) ) )", "obj1": 0.2320754716981132, "obj2": 0.6726142341417612}, {"determining": "( ( ( ( FirstVNF_CPU_Server / DDR ) + ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) + ( ( PN / RRS ) * Max( FirstVNF_RAM_Server,MDR ) ) ) + Min( Min( Min( FirstVNF_CPU ,Const ) ,( DDR + MRS ) ) ,( ( MDR - ARS ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( MLU / RRSe ) - ( MUM / RCSe ) ),( ( RRSe + RRSe ) / Max( RRSe,CS ) ) )", "obj1": 0.35094339622641507, "obj2": 0.5389241394137455}, {"determining": "( Max( CRS,MRS ) / ( MRS - DDR ) )", "choosing": "( ( DS / RCSe ) / ( Min( MLU ,CS ) * ( MUM * MUM ) ) )", "obj1": 0.44528301886792454, "obj2": 0.4381278071367718}, {"determining": "Min( Min( ( ( ARS - FirstVNF_CPU ) * MRS ) ,CRS ) ,( ( MDR + BR ) - CRS ) )", "choosing": "( Min( ( Max( ( ( ( ( RMSe / MLU ) + Min( MLU ,RRSe ) ) - ( ( CS + MUR ) / ( DS * RCSe ) ) ) - Max( Min( ( RMSe + MUR ) ,( CS + DS ) ),( ( RMSe * MUR ) * Min( RCSe ,DS ) ) ) ),Min( ( ( Min( MUM ,DS ) - Min( MUC ,DS ) ) * ( ( RRSe + MUM ) * ( DS - RCSe ) ) ) ,( ( Max( RMSe,RCSe ) + ( CS * MUC ) ) + ( ( RMSe - MUC ) - Min( DS ,MUR ) ) ) ) ) - ( ( ( ( ( RRSe * MUC ) - ( RRSe - RCSe ) ) - ( ( CS + DS ) * ( DS * MUC ) ) ) * Max( Max( ( DS / RRSe ),( RMSe - DS ) ),( ( CS - CS ) * Min( DS ,MUM ) ) ) ) * Max( Max( ( ( RMSe / MUR ) - Max( DS,CS ) ),( Max( MUM,MLU ) - ( MUM / MLU ) ) ),( ( Min( MUR ,CS ) / Min( RMSe ,CS ) ) * ( ( DS + CS ) / ( MUC - RMSe ) ) ) ) ) ) ,( ( ( Max( Min( ( MUC / CS ) ,( RMSe * CS ) ),( Min( MUM ,RCSe ) + Min( CS ,MLU ) ) ) + Max( ( ( RMSe / MUM ) + Max( RRSe,MUR ) ),( ( MLU / MUR ) + ( MUC / RMSe ) ) ) ) + Max( Min( ( ( RRSe / RRSe ) * ( CS / RMSe ) ) ,Max( ( RRSe / MUM ),Max( MUC,MUM ) ) ),( ( ( MUR - RMSe ) + ( MUC - RRSe ) ) - Max( ( RMSe * RRSe ),( RCSe + MUR ) ) ) ) ) / ( ( Max( ( ( MUM / MUM ) + ( CS + RCSe ) ),Min( ( MUC / RRSe ) ,( RMSe / MUC ) ) ) - ( Min( ( MUC / MUR ) ,( MUC + MLU ) ) * Min( ( DS - RMSe ) ,Min( RCSe ,RRSe ) ) ) ) * ( ( ( ( RCSe - MUM ) / Max( MUR,MLU ) ) + ( Max( RCSe,CS ) / Min( RMSe ,DS ) ) ) * ( ( Max( RRSe,RCSe ) - Max( MUR,RCSe ) ) + Max( ( MUC - MUM ),( CS - CS ) ) ) ) ) ) ) - Min( ( ( Min( ( ( ( DS - RMSe ) * ( DS / MLU ) ) - ( Min( RMSe ,RCSe ) * ( MUM + MUR ) ) ) ,Max( ( ( CS * MUC ) + Max( MUC,DS ) ),Max( ( MLU / MUM ),( RRSe + RMSe ) ) ) ) - ( Min( ( ( DS - RMSe ) + ( DS - RMSe ) ) ,( Min( RCSe ,CS ) * ( MLU - CS ) ) ) / Max( ( Min( MLU ,RMSe ) + ( RCSe + MUC ) ),Max( Min( CS ,DS ),Min( DS ,DS ) ) ) ) ) - ( ( ( ( Max( MUR,RMSe ) / ( RCSe + MUC ) ) - ( ( DS * RMSe ) * ( MUM * RMSe ) ) ) * ( Max( Min( MLU ,MUM ),( MUM * MUC ) ) + ( ( RCSe * RMSe ) / ( MUC / RMSe ) ) ) ) + Min( ( Min( ( RCSe * DS ) ,( MUM - MUC ) ) - Min( ( MUC * MUR ) ,( MUC + MUR ) ) ) ,Min( ( Max( RMSe,MLU ) * ( RRSe * RMSe ) ) ,Max( ( RMSe / MUC ),( CS - RMSe ) ) ) ) ) ) ,( ( ( ( Max( ( RCSe * MLU ),( MUC * MUR ) ) * Max( Max( MUR,CS ),( MUR * DS ) ) ) * ( Max( ( MUM + DS ),( MUM * DS ) ) * ( ( MLU * MLU ) * ( RRSe / RCSe ) ) ) ) / ( Min( Max( Max( DS,MUM ),( CS + RCSe ) ) ,( Max( CS,MUM ) - ( MUR + RCSe ) ) ) / ( ( Min( RRSe ,RRSe ) * Min( RCSe ,RCSe ) ) * Min( ( MUM / CS ) ,( RRSe + MLU ) ) ) ) ) / ( ( Max( ( Min( MUC ,RRSe ) * ( RMSe * MUM ) ),Min( Min( MUC ,CS ) ,Max( MUR,MLU ) ) ) + ( ( Max( MUC,MLU ) * Max( RRSe,MLU ) ) / ( ( RMSe + RRSe ) - ( MUC * DS ) ) ) ) * Max( Min( Max( ( MLU / MUR ),( CS + MUM ) ) ,( Max( MUM,RRSe ) * ( MLU / MUC ) ) ),( ( ( RMSe * MUM ) + Max( RCSe,CS ) ) / Max( ( DS * RRSe ),( MLU - CS ) ) ) ) ) ) ) )", "obj1": 0.5490566037735849, "obj2": 0.3648818431112179}, {"determining": "( ( CRS - AMS ) / FirstVNF_RAM )", "choosing": "( Max( RRSe,DS ) * ( Max( DS,MLU ) - Max( RRSe,CS ) ) )", "obj1": 0.2849056603773585, "obj2": 0.6206589219707865}, {"determining": "( Min( CRS ,AMS ) / Max( FirstVNF_Mem_Server,CRS ) )", "choosing": "( ( RRSe / MUM ) * ( Max( DS,MLU ) - Max( RRSe,CS ) ) )", "obj1": 0.31886792452830187, "obj2": 0.5662638527976604}, {"determining": "( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * Min( BR ,FirstVNF_CPU ) ) ) - ( ( CRS - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( ( Min( Min( DS ,DS ) ,( MUR + DS ) ) * ( ( RRSe / MUR ) - ( Max( CS,RCSe ) + ( MLU * MUM ) ) ) ) + Max( ( ( MUC * MUC ) * Max( RMSe,MUM ) ),Max( Max( MUR,MLU ),( DS / RMSe ) ) ) )", "obj1": 0.1830188679245283, "obj2": 0.7069691935569408}, {"determining": "( ( Const + Const ) * Max( Max( ( AMS + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) ) )", "choosing": "( ( ( MUC + DS ) * ( RMSe + MUC ) ) + Max( RRSe,CS ) )", "obj1": 0.5811320754716981, "obj2": 0.34462858742278435}, {"determining": "Max( Max( ( AMS + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + DS ) * ( RMSe + MUC ) ) + Max( MLU,CS ) )", "obj1": 0.6132075471698113, "obj2": 0.2962539995547587}, {"determining": "( ( Const + Const ) * ( CRS - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( MLU / RRSe ) / ( MUM + RCSe ) ),( ( RRSe + RRSe ) / Max( RRSe,CS ) ) )", "obj1": 0.35094339622641507, "obj2": 0.5389241394137455}, {"determining": "( ( RRS / FirstVNF_RAM_Server ) / ( MRS - DDR ) )", "choosing": "( ( DS * Min( RMSe ,MUR ) ) / Min( MLU ,MUR ) )", "obj1": 0.5037735849056604, "obj2": 0.40865396641741725}, {"determining": "( ( FirstVNF_RAM_Server + RRS ) + ( CRS / ( RRS / FirstVNF_CPU ) ) )", "choosing": "( Max( Min( MUR ,DS ),RCSe ) / ( Min( RMSe ,RMSe ) * Max( RRSe,RCSe ) ) )", "obj1": 0.28867924528301886, "obj2": 0.6146350145960117}, {"determining": "( Max( RRS,PN ) + Min( ACS ,MDR ) )", "choosing": "Max( ( MUR / CS ),( CS - MLU ) )", "obj1": 0.4, "obj2": 0.49031482680800326}, {"determining": "( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.16037735849056603, "obj2": 0.7445801910984938}, {"determining": "Min( ( FirstVNF_RAM_Server - DDR ) ,( CRS + FirstVNF_RAM ) )", "choosing": "( ( MUC - MUM ) * ( MLU - CS ) )", "obj1": 0.2981132075471698, "obj2": 0.6033446595990157}, {"determining": "Min( ( ( FirstVNF_Mem_Server / DDR ) - ( RRS + MRS ) ) ,Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( BR / MRS ) ) )", "choosing": "Min( ( Max( RMSe,RRSe ) / ( RRSe * RMSe ) ) ,( ( MUM + RMSe ) / Min( RRSe ,RCSe ) ) )", "obj1": 0.30754716981132074, "obj2": 0.6031099476521541}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + DS ) * ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.09245283018867924, "obj2": 0.7802678146335343}, {"determining": "( Min( Min( AMS ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( ( MUC + DS ) * ( RMSe + MUC ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.5962264150943396, "obj2": 0.31575156750630373}, {"determining": "( ( CRS / MDR ) / FirstVNF_Mem_Server )", "choosing": "( ( RRSe / DS ) * ( ( MUC - RCSe ) * ( RCSe - CS ) ) )", "obj1": 0.27169811320754716, "obj2": 0.6235004754179225}, {"determining": "( Min( CRS ,AMS ) / FirstVNF_RAM )", "choosing": "( ( RRSe / DS ) * ( Max( DS,MLU ) - Max( RRSe,CS ) ) )", "obj1": 0.26037735849056604, "obj2": 0.6300323415813085}, {"determining": "Max( Max( ( AMS + Max( BR,FirstVNF_Mem ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ),Min( Min( ACS ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server - BR ) ) )", "choosing": "Max( ( ( ( MUC + DS ) * ( DS + MUC ) ) + Max( MLU,CS ) ),( ( RRSe + RRSe ) / Max( RMSe,CS ) ) )", "obj1": 0.5547169811320755, "obj2": 0.35539077573045535}, {"determining": "( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.13018867924528302, "obj2": 0.7634132124873214}, {"determining": "( ( Min( ( FirstVNF_RAM_Server - DDR ) ,( MRS + FirstVNF_RAM ) ) + RRS ) + ( CRS / ( Min( ( ( FirstVNF_RAM * RRS ) * Const ) ,Const ) / Max( FirstVNF_RAM_Server,ARS ) ) ) )", "choosing": "( ( MUM - Max( Min( RCSe ,RCSe ),MLU ) ) / ( Min( RMSe ,CS ) * Max( RRSe,RCSe ) ) )", "obj1": 0.3113207547169811, "obj2": 0.5974281149206229}, {"determining": "( Min( Min( DDR ,( ( FirstVNF_RAM * RRS ) * Const ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( Min( RCSe ,RCSe ),MLU ) ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.11320754716981132, "obj2": 0.7672914896950755}, {"determining": "( Min( ( ( FirstVNF_RAM * RRS ) * Const ) ,Const ) / Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.1320754716981132, "obj2": 0.7539714370821259}, {"determining": "( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * Min( BR ,FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( Max( RRSe,DS ) * ( Max( DS,MLU ) - Max( RRSe,CS ) ) )", "obj1": 0.42452830188679247, "obj2": 0.4493041243648612}, {"determining": "( Max( BR,PN ) + Min( ACS ,MDR ) )", "choosing": "Max( ( MUR / CS ),( RCSe + DS ) )", "obj1": 0.5056603773584906, "obj2": 0.4040779030138923}, {"determining": "( Max( ( ACS - ARS ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ACS ) ) )", "choosing": "Max( ( MUR / CS ),( CS - MLU ) )", "obj1": 0.4, "obj2": 0.49031482680800326}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,( MRS - MRS ) )", "choosing": "( ( ( MUC + DS ) * ( RMSe + MUC ) ) + Max( RRSe,CS ) )", "obj1": 0.5811320754716981, "obj2": 0.34462858742278435}, {"determining": "Min( ( ( FirstVNF_Mem_Server / DDR ) - ( BR + MRS ) ) ,Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( BR / MRS ) ) )", "choosing": "Min( ( Max( RMSe,RRSe ) / ( RRSe * RMSe ) ) ,( ( MUM + RMSe ) / Min( RRSe ,Min( ( CS + MUR ) ,( RCSe + DS ) ) ) ) )", "obj1": 0.2830188679245283, "obj2": 0.6233046670294884}, {"determining": "( Max( ( ACS - ARS ),Max( BR,FirstVNF_Mem ) ) + ( ( ARS + RRS ) / ( BR * ACS ) ) )", "choosing": "Min( ( CS + MUR ) ,( RCSe + DS ) )", "obj1": 0.5679245283018868, "obj2": 0.35298134273607357}, {"determining": "Max( Max( ( AMS + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ),Min( Min( ACS ,FirstVNF_RAM_Server ) ,( CRS - AMS ) ) )", "choosing": "Max( ( Max( DS,MLU ) - Max( RRSe,CS ) ),( ( RRSe + RRSe ) / Max( RMSe,CS ) ) )", "obj1": 0.39245283018867927, "obj2": 0.5047961242444847}, {"determining": "( Max( ( AMS + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) / FirstVNF_RAM )", "choosing": "( Max( RRSe,DS ) * ( ( ( ( MUC + DS ) * ( RMSe + MUC ) ) + Max( MLU,CS ) ) - Max( RRSe,CS ) ) )", "obj1": 0.5, "obj2": 0.41632573091970315}, {"determining": "( ( Min( ( ( FirstVNF_RAM * RRS ) * Const ) ,Const ) + ACS ) / ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Max( ( ( ( MUC + DS ) * ( RMSe + MUC ) ) + Max( MLU,CS ) ),( ( RRSe + RRSe ) / Max( RMSe,CS ) ) )", "obj1": 0.5622641509433962, "obj2": 0.3530107319862508}, {"determining": "( Max( CRS,MRS ) / Min( MRS ,DDR ) )", "choosing": "( ( DS / RCSe ) / ( Min( MLU ,CS ) * ( MUM + MUM ) ) )", "obj1": 0.44528301886792454, "obj2": 0.4381278071367718}, {"determining": "( Min( CRS ,AMS ) / Min( ( ( ARS - FirstVNF_CPU ) * MRS ) ,CRS ) )", "choosing": "( ( RRSe / MUM ) * Min( ( Max( ( ( ( ( RMSe / MLU ) + Min( MLU ,RRSe ) ) - ( ( CS + MUR ) / ( DS * RCSe ) ) ) - Max( Min( ( RMSe + MUR ) ,( CS + DS ) ),( ( RMSe * MUR ) * Min( RCSe ,DS ) ) ) ),Min( ( ( Min( MUM ,DS ) - Min( MUC ,DS ) ) * ( ( RRSe + MUM ) * ( DS - RCSe ) ) ) ,( ( Max( RMSe,RCSe ) + ( CS * MUC ) ) + ( ( RMSe - MUC ) - Min( DS ,MUR ) ) ) ) ) - ( ( ( ( ( RRSe * MUC ) - ( RRSe - RCSe ) ) - ( ( CS + DS ) * ( DS * MUC ) ) ) * Max( Max( ( DS / RRSe ),( RMSe - DS ) ),( ( CS - CS ) * Min( DS ,MUM ) ) ) ) * Max( Max( ( ( RMSe / MUR ) - Max( DS,CS ) ),( Max( MUM,MLU ) - ( MUM / MLU ) ) ),( ( Min( MUR ,CS ) / Min( RMSe ,CS ) ) * ( ( DS + CS ) / ( MUC - RMSe ) ) ) ) ) ) ,( ( ( Max( Min( ( MUC / CS ) ,( RMSe * CS ) ),( Min( MUM ,RCSe ) + Min( CS ,MLU ) ) ) + Max( ( ( RMSe / MUM ) + Max( RRSe,MUR ) ),( ( MLU / MUR ) + ( MUC / RMSe ) ) ) ) + Max( Min( ( ( RRSe / RRSe ) * ( CS / RMSe ) ) ,Max( ( RRSe / MUM ),Max( MUC,MUM ) ) ),( ( ( MUR - RMSe ) + ( MUC - RRSe ) ) - Max( ( RMSe * RRSe ),( RCSe + MUR ) ) ) ) ) / ( ( Max( ( ( MUM / MUM ) + ( CS + RCSe ) ),Min( ( MUC / RRSe ) ,( RMSe / MUC ) ) ) - ( Min( ( MUC / MUR ) ,( MUC + MLU ) ) * Min( ( DS - RMSe ) ,Min( RCSe ,RRSe ) ) ) ) * ( ( ( ( RCSe - MUM ) / Max( MUR,MLU ) ) + ( Max( RCSe,CS ) / Min( RMSe ,DS ) ) ) * ( ( Max( RRSe,RCSe ) - Max( MUR,RCSe ) ) + Max( ( MUC - MUM ),( CS - CS ) ) ) ) ) ) ) )", "obj1": 0.5245283018867924, "obj2": 0.3899865127266965}, {"determining": "Min( Min( ( ( ARS - FirstVNF_CPU ) * MRS ) ,CRS ) ,( ( MDR + BR ) - CRS ) )", "choosing": "( ( RRSe / MUM ) * ( Max( DS,MLU ) - Max( RRSe,CS ) ) )", "obj1": 0.36792452830188677, "obj2": 0.5143425906770343}, {"determining": "( Max( RRS,Const ) + ( RRS / MRS ) )", "choosing": "Max( ( MUR / CS ),Min( ( Max( RMSe,RMSe ) / ( RRSe * RMSe ) ) ,( ( MUM + RMSe ) / Min( RRSe ,RCSe ) ) ) )", "obj1": 0.33962264150943394, "obj2": 0.5438641200549839}, {"determining": "( Min( CRS ,AMS ) / Max( FirstVNF_Mem_Server,CRS ) )", "choosing": "( ( RRSe / MUM ) * ( Max( DS,MLU ) - Max( RRSe,CS ) ) )", "obj1": 0.3132075471698113, "obj2": 0.5914596911465636}, {"determining": "( Min( Min( Max( AMS,RRS ) ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + MUR )", "obj1": 0.14339622641509434, "obj2": 0.7459634227386568}, {"determining": "( ( ( MDR / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) / ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) )", "choosing": "Max( Min( MUC ,RMSe ),( ( ( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) ) + DS ) * MUC ) )", "obj1": 0.08867924528301886, "obj2": 0.7833492592942242}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,( CRS + ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( Min( DS ,DS ) ,( MUR + DS ) ) * ( ( RRSe / MUR ) - ( DS - DS ) ) ) + Max( ( ( MUC * MUC ) * Max( RMSe,MUM ) ),Max( Max( ( ( MLU / RRSe ) / ( MUM / RCSe ) ),( ( RRSe + RRSe ) / Max( RRSe,CS ) ) ),( DS / RMSe ) ) ) )", "obj1": 0.5867924528301887, "obj2": 0.3172602179437497}, {"determining": "( ( Const + Const ) * ( CRS + ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( MLU / RRSe ) / ( MUM / RCSe ) ),( ( RRSe + RRSe ) / Max( RRSe,CS ) ) )", "obj1": 0.35094339622641507, "obj2": 0.5389241394137455}, {"determining": "( Min( CRS ,AMS ) / Min( FirstVNF_Mem_Server ,CRS ) )", "choosing": "( ( RRSe / MUM ) * ( Max( DS,MLU ) - Max( RMSe,CS ) ) )", "obj1": 0.31886792452830187, "obj2": 0.5662638527976604}], "4": [{"determining": "( ( AMS + MDR ) - ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + MUR ) * ( MUM / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,CRS ) / Max( FirstVNF_Mem_Server,CRS ) )", "choosing": "( ( RMSe / MLU ) / ( ( RRSe * MLU ) - Min( RCSe ,RMSe ) ) )", "obj1": 0.2037735849056604, "obj2": 0.7026588940424434}, {"determining": "( ( CRS - AMS ) / FirstVNF_RAM )", "choosing": "( Max( RRSe,DS ) * ( Max( DS,MLU ) - Max( RRSe,CS ) ) )", "obj1": 0.2849056603773585, "obj2": 0.6206589219707865}, {"determining": "( ( RRS / FirstVNF_RAM_Server ) / ( MRS - DDR ) )", "choosing": "( ( DS * Min( RMSe ,MUR ) ) / Min( MLU ,MUR ) )", "obj1": 0.5037735849056604, "obj2": 0.40865396641741725}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + DS ) * ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.09245283018867924, "obj2": 0.7802678146335343}, {"determining": "( ( CRS / MDR ) / FirstVNF_Mem_Server )", "choosing": "( ( RRSe / DS ) * ( ( MUC - RCSe ) * ( RCSe - CS ) ) )", "obj1": 0.27169811320754716, "obj2": 0.6235004754179225}, {"determining": "( Min( CRS ,AMS ) / FirstVNF_RAM )", "choosing": "( ( RRSe / DS ) * ( Max( DS,MLU ) - Max( RRSe,CS ) ) )", "obj1": 0.26037735849056604, "obj2": 0.6300323415813085}, {"determining": "( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * Min( BR ,FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( Max( RRSe,DS ) * ( Max( DS,MLU ) - Max( RRSe,CS ) ) )", "obj1": 0.42452830188679247, "obj2": 0.4493041243648612}, {"determining": "( Max( BR,PN ) + Min( ACS ,MDR ) )", "choosing": "Max( ( MUR / CS ),( RCSe + DS ) )", "obj1": 0.5056603773584906, "obj2": 0.4040779030138923}, {"determining": "Min( ( ( FirstVNF_Mem_Server / DDR ) - ( BR + MRS ) ) ,Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( BR / MRS ) ) )", "choosing": "Min( ( Max( RMSe,RRSe ) / ( RRSe * RMSe ) ) ,( ( MUM + RMSe ) / Min( RRSe ,Min( ( CS + MUR ) ,( RCSe + DS ) ) ) ) )", "obj1": 0.2830188679245283, "obj2": 0.6233046670294884}, {"determining": "( Max( ( AMS + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) / FirstVNF_RAM )", "choosing": "( Max( RRSe,DS ) * ( ( ( ( MUC + DS ) * ( RMSe + MUC ) ) + Max( MLU,CS ) ) - Max( RRSe,CS ) ) )", "obj1": 0.5, "obj2": 0.41632573091970315}, {"determining": "Min( Min( ( ( ARS - FirstVNF_CPU ) * MRS ) ,CRS ) ,( ( MDR + BR ) - CRS ) )", "choosing": "( ( RRSe / MUM ) * ( Max( DS,MLU ) - Max( RRSe,CS ) ) )", "obj1": 0.36792452830188677, "obj2": 0.5143425906770343}, {"determining": "( Max( RRS,Const ) + ( RRS / MRS ) )", "choosing": "Max( ( MUR / CS ),Min( ( Max( RMSe,RMSe ) / ( RRSe * RMSe ) ) ,( ( MUM + RMSe ) / Min( RRSe ,RCSe ) ) ) )", "obj1": 0.33962264150943394, "obj2": 0.5438641200549839}, {"determining": "( Min( Min( Max( AMS,RRS ) ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + MUR )", "obj1": 0.14339622641509434, "obj2": 0.7459634227386568}, {"determining": "( ( ( MDR / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) / ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) )", "choosing": "Max( Min( MUC ,RMSe ),( ( ( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) ) + DS ) * MUC ) )", "obj1": 0.08867924528301886, "obj2": 0.7833492592942242}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,( MRS - MRS ) )", "choosing": "Max( ( ( MLU / RRSe ) / ( MUM + RCSe ) ),( ( RRSe + RRSe ) - Max( RRSe,CS ) ) )", "obj1": 0.41509433962264153, "obj2": 0.4755245193371149}, {"determining": "( Min( ( ( FirstVNF_RAM * RRS ) * Const ) ,Const ) / Max( FirstVNF_RAM_Server,( PN + FirstVNF_CPU ) ) )", "choosing": "Max( ( MUR / CS ),( RCSe + DS ) )", "obj1": 0.5056603773584906, "obj2": 0.4040779030138923}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,( Min( Max( AMS,RRS ) ,( Const + FirstVNF_CPU_Server ) ) - MRS ) )", "choosing": "( ( ( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + DS ) * ( RMSe + MUC ) ) + Max( RRSe,CS ) )", "obj1": 0.07547169811320754, "obj2": 0.79563584123419}, {"determining": "( ( FirstVNF_RAM_Server + RRS ) / Max( FirstVNF_Mem_Server,CRS ) )", "choosing": "( ( RMSe / MLU ) / MUR )", "obj1": 0.22830188679245284, "obj2": 0.6787085645844326}, {"determining": "( AMS + Min( ACS ,MDR ) )", "choosing": "Max( ( MUR / CS ),( ( ( RRSe / MUM ) * ( Max( DS,MLU ) - Max( RRSe,CS ) ) ) + DS ) )", "obj1": 0.46037735849056605, "obj2": 0.4350185986875067}, {"determining": "( Min( CRS ,AMS ) / Max( FirstVNF_Mem_Server,CRS ) )", "choosing": "Max( ( MUR / CS ),( RCSe + DS ) )", "obj1": 0.5056603773584906, "obj2": 0.4040779030138923}, {"determining": "( ( ( ( FirstVNF_CPU_Server / DDR ) + ( ( Max( CRS,MRS ) / Min( MRS ,DDR ) ) / FirstVNF_RAM_Server ) ) + ( ( PN / RRS ) * Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) + Min( Min( Min( FirstVNF_CPU ,Const ) ,( DDR + MRS ) ) ,( ( MDR - ARS ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( MLU / RRSe ) / ( Min( MLU ,CS ) * ( MUM + MUM ) ) ),( ( RRSe + RRSe ) / Max( RRSe,CS ) ) )", "obj1": 0.4, "obj2": 0.47886984207681843}, {"determining": "( Max( CRS,ARS ) / Min( MRS ,DDR ) )", "choosing": "Max( ( ( RCSe / RRSe ) / ( MUM / RCSe ) ),( ( RRSe + RRSe ) / Max( RRSe,CS ) ) )", "obj1": 0.38301886792452833, "obj2": 0.49532194699422744}, {"determining": "( ( ( ( FirstVNF_CPU_Server / DDR ) + ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) + ( ( PN / RRS ) * Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) + Min( Min( Min( FirstVNF_CPU ,Const ) ,( DDR + MRS ) ) ,( ( MDR - ARS ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS / RCSe ) / ( Min( MLU ,CS ) * ( MUM + MUM ) ) )", "obj1": 0.469811320754717, "obj2": 0.42360894806623545}, {"determining": "( ( Const + FirstVNF_CPU_Server ) + ( CRS / ( RRS / FirstVNF_CPU ) ) )", "choosing": "( Max( Min( MUR ,DS ),RCSe ) / ( Min( RMSe ,RMSe ) * DS ) )", "obj1": 0.10754716981132076, "obj2": 0.7582786184773601}, {"determining": "( Min( CRS ,AMS ) / FirstVNF_RAM )", "choosing": "( ( RRSe / DS ) * ( Max( DS,MLU ) - Max( RRSe,CS ) ) )", "obj1": 0.25849056603773585, "obj2": 0.631017516024629}, {"determining": "( Max( CRS,MRS ) / ( Min( CRS ,AMS ) / Max( FirstVNF_Mem_Server,CRS ) ) )", "choosing": "( ( DS / RCSe ) / ( Min( MLU ,CS ) * DS ) )", "obj1": 0.30754716981132074, "obj2": 0.575805139104402}, {"determining": "Max( ( ( MDR + MDR ) - ( FirstVNF_CPU / FirstVNF_Mem_Server ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "Max( ( ( MLU + MUM ) / ( MUM / RCSe ) ),( ( RRSe + RRSe ) / Max( RRSe,CS ) ) )", "obj1": 0.38113207547169814, "obj2": 0.4970412695086022}, {"determining": "( Min( ( ( FirstVNF_RAM * RRS ) * Const ) ,Const ) / Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.12452830188679245, "obj2": 0.7530870555803866}, {"determining": "Min( Min( ( ( ARS - FirstVNF_CPU ) * MRS ) ,CRS ) ,( ( MDR + BR ) - CRS ) )", "choosing": "( ( RRSe / MUM ) * Min( ( Max( ( ( ( ( RMSe / MLU ) + Min( MLU ,RRSe ) ) - ( ( CS + MUR ) / ( DS * RCSe ) ) ) - Max( Min( ( RMSe + MUR ) ,( CS + DS ) ),( ( RMSe * MUR ) * Min( RCSe ,DS ) ) ) ),Min( ( ( Min( MUM ,DS ) - Min( MUC ,DS ) ) * ( ( RRSe + MUM ) * ( DS - RCSe ) ) ) ,( ( Max( RMSe,RCSe ) + ( CS * MUC ) ) + ( ( RMSe - MUC ) - Min( DS ,MUR ) ) ) ) ) - ( ( ( ( ( RRSe * MUC ) - ( RRSe - RCSe ) ) - ( ( CS + DS ) * ( DS * MUC ) ) ) * Max( Max( ( DS / RRSe ),( RMSe - DS ) ),( ( CS - CS ) * Min( DS ,MUM ) ) ) ) * Max( Max( ( ( RMSe / MUR ) - Max( DS,CS ) ),( Max( MUM,MLU ) - ( MUM / MLU ) ) ),( ( Min( MUR ,CS ) / Min( RMSe ,CS ) ) * ( ( DS + CS ) / ( MUC - RMSe ) ) ) ) ) ) ,( ( ( Max( Min( ( MUC / CS ) ,( RMSe * CS ) ),( Min( MUM ,RCSe ) + Min( CS ,MLU ) ) ) + Max( ( ( RMSe / MUM ) + Max( RRSe,MUR ) ),( ( MLU / MUR ) + ( MUC / RMSe ) ) ) ) + Max( Min( ( ( RRSe / RRSe ) * ( CS / RMSe ) ) ,Max( ( RRSe / MUM ),Max( MUC,MUM ) ) ),( ( ( MUR - RMSe ) + ( MUC - RRSe ) ) - Max( ( RMSe * RRSe ),( RCSe + MUR ) ) ) ) ) / ( ( Max( ( ( MUM / MUM ) + ( CS + RCSe ) ),Min( ( MUC / RRSe ) ,( RMSe / MUC ) ) ) - ( Min( ( MUC / MUR ) ,( MUC + MLU ) ) * Min( ( DS - RMSe ) ,Min( RCSe ,RRSe ) ) ) ) * ( ( ( ( RCSe - MUM ) / Max( MUR,MLU ) ) + ( Max( RCSe,CS ) / Min( RMSe ,DS ) ) ) * ( ( Max( RRSe,RCSe ) - Max( MUR,RCSe ) ) + Max( ( MUC - MUM ),( CS - CS ) ) ) ) ) ) ) )", "obj1": 0.47547169811320755, "obj2": 0.42330738644079696}, {"determining": "Min( ( ( FirstVNF_Mem_Server / DDR ) - ( RRS + MRS ) ) ,Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( BR / MRS ) ) )", "choosing": "Max( ( MUR / CS ),Min( ( Max( RMSe,RMSe ) / ( RRSe * RMSe ) ) ,( ( MUM + RMSe ) / Min( RRSe ,RCSe ) ) ) )", "obj1": 0.33962264150943394, "obj2": 0.5438641200549839}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / Max( FirstVNF_Mem_Server,CRS ) )", "choosing": "( ( RRSe / MUM ) * ( Max( ( ( MLU / RRSe ) / ( MUM / RCSe ) ),( ( RRSe + RRSe ) / Max( RRSe,CS ) ) ) - Max( RRSe,CS ) ) )", "obj1": 0.3150943396226415, "obj2": 0.5497413787157134}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem - AMS ) ) )", "choosing": "( ( ( RCSe + DS ) * ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.09245283018867924, "obj2": 0.7802678146335343}, {"determining": "( ( Min( ( Min( Max( ( ( MDR / FirstVNF_CPU ) / Max( MDR,FirstVNF_CPU_Server ) ),( ( ARS - BR ) * ( MDR - FirstVNF_Mem ) ) ) ,( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) / Min( FirstVNF_CPU_Server ,Const ) ) - Min( Max( RRS,MDR ) ,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) * Max( ( ( ( FirstVNF_Mem_Server * MRS ) / ( ARS - FirstVNF_Mem_Server ) ) * Min( ( AMS + FirstVNF_Mem ) ,Min( DDR ,MRS ) ) ),( ( ( AMS / ACS ) / ( CRS - FirstVNF_RAM ) ) / ( Max( FirstVNF_Mem,CRS ) - ( Const / RRS ) ) ) ) ) ,( ( ( ( ( PN / ARS ) + Min( FirstVNF_Mem ,PN ) ) + ( Max( RRS,RRS ) + Min( FirstVNF_CPU_Server ,ACS ) ) ) - ( ( ( AMS - PN ) / ( ACS * AMS ) ) / ( Max( MDR,FirstVNF_RAM ) * Max( AMS,ACS ) ) ) ) / ( ( ( Min( FirstVNF_CPU_Server ,AMS ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) + ( Max( BR,BR ) * Min( ACS ,FirstVNF_CPU ) ) ) * ( ( ( ACS * ACS ) * Max( MRS,FirstVNF_CPU ) ) + ( Min( FirstVNF_CPU_Server ,MDR ) * ( ARS * ACS ) ) ) ) ) ) + Min( Min( ( Max( ( Min( FirstVNF_RAM ,ARS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM / Const ) + Min( FirstVNF_RAM_Server ,PN ) ) ) + ( ( ( ARS - MDR ) * ( AMS / Const ) ) - ( ( CRS * ARS ) * ( MRS * FirstVNF_Mem_Server ) ) ) ) ,( ( ( ( ACS - MDR ) + ( CRS - FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_CPU_Server ,BR ) - ( MDR + BR ) ) ) - Min( ( ( FirstVNF_Mem_Server / AMS ) / ( FirstVNF_CPU * CRS ) ) ,Min( ( DDR + AMS ) ,Max( ARS,CRS ) ) ) ) ) ,( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) - ( BR - RRS ) ) * ( ( FirstVNF_Mem_Server / CRS ) * ( ARS / CRS ) ) ) / ( ( Max( RRS,FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) / Min( ( MRS / MDR ) ,( PN * FirstVNF_Mem_Server ) ) ) ) / Max( ( ( ( BR / Const ) / ( Const / ACS ) ) + ( ( Const - FirstVNF_CPU ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ),Max( Min( Max( FirstVNF_CPU,BR ) ,( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ),Min( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,ACS ) ) ) ) ) ) ) + Min( ( ( ( ( ( Min( FirstVNF_CPU_Server ,Const ) + Min( ACS ,FirstVNF_Mem_Server ) ) + ( ( PN - ACS ) + ( RRS * Const ) ) ) + Max( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) * ( AMS * FirstVNF_RAM_Server ) ),( ( AMS - FirstVNF_CPU ) - ( Const / BR ) ) ) ) + Min( Min( Min( ( AMS / FirstVNF_Mem ) ,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ,( Max( ACS,FirstVNF_RAM ) + Max( DDR,PN ) ) ) ,( ( ( Const / MRS ) * ( FirstVNF_RAM + CRS ) ) / Min( ( FirstVNF_RAM_Server * ACS ) ,( MDR / RRS ) ) ) ) ) - ( Max( Min( Max( ( DDR + CRS ),( ARS / MRS ) ) ,Min( ( PN / MRS ) ,( FirstVNF_CPU_Server / PN ) ) ),( ( Max( AMS,FirstVNF_RAM_Server ) / Max( Const,PN ) ) + Min( ( FirstVNF_RAM - ARS ) ,( FirstVNF_RAM * AMS ) ) ) ) - Max( ( Min( ( AMS / ACS ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - ( ( PN / FirstVNF_CPU ) - ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ),( ( ( CRS * ACS ) * ( FirstVNF_CPU_Server + MDR ) ) / Max( Min( FirstVNF_CPU ,DDR ),Max( PN,AMS ) ) ) ) ) ) ,( ( ( ( ( ( MRS / BR ) + ( PN / AMS ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_Mem ),( ARS + ACS ) ) ) - ( ( ( FirstVNF_Mem_Server - CRS ) - ( FirstVNF_Mem_Server * DDR ) ) * Max( ( MRS * CRS ),( MDR + CRS ) ) ) ) * Min( Min( ( Min( RRS ,PN ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ,( ( FirstVNF_CPU + Const ) + ( FirstVNF_CPU + ACS ) ) ) ,Min( ( ( Const * MRS ) * ( CRS + MRS ) ) ,Max( Min( MDR ,MRS ),( RRS - FirstVNF_RAM ) ) ) ) ) * ( Min( ( ( ( CRS - FirstVNF_RAM_Server ) + ( ACS / FirstVNF_Mem ) ) * ( Min( PN ,BR ) * ( FirstVNF_RAM_Server - RRS ) ) ) ,( ( ( RRS - ARS ) * ( Const * FirstVNF_CPU ) ) / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) / ( Min( ( Max( FirstVNF_RAM_Server,MRS ) * ( MRS * FirstVNF_CPU_Server ) ) ,Max( ( FirstVNF_RAM_Server + PN ),Max( FirstVNF_Mem_Server,RRS ) ) ) - ( ( Max( DDR,ACS ) - Min( RRS ,FirstVNF_Mem_Server ) ) + ( Max( CRS,FirstVNF_CPU ) / ( ARS - AMS ) ) ) ) ) ) ) )", "choosing": "Max( ( MUR + MUR ),( ( MUC / MUR ) / Min( MUM ,( DS / MUM ) ) ) )", "obj1": 0.28679245283018867, "obj2": 0.575861214920146}, {"determining": "( ( FirstVNF_RAM_Server + ( MDR + ACS ) ) + ( CRS + ( RRS / FirstVNF_CPU ) ) )", "choosing": "( Max( ( MUR + DS ),RCSe ) / ( Max( DS,MLU ) * Max( RRSe,RCSe ) ) )", "obj1": 0.17358490566037735, "obj2": 0.7063299428268437}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06415094339622641, "obj2": 0.805777309085478}, {"determining": "( ( Const + Const ) * Max( Max( ( AMS + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_RAM ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) ) )", "choosing": "( ( ( MUC + DS ) * ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RRSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.10377358490566038, "obj2": 0.7727914316980405}, {"determining": "( Min( ( ( ARS - FirstVNF_CPU ) * MDR ) ,CRS ) / Min( MRS ,DDR ) )", "choosing": "( RCSe / ( Min( MLU ,CS ) * ( MUM + MUM ) ) )", "obj1": 0.37358490566037733, "obj2": 0.5113975788062296}, {"determining": "( Max( CRS,MRS ) / Min( MRS ,DDR ) )", "choosing": "( ( DS / RCSe ) / ( Min( MLU ,CS ) * ( MUM + MUM ) ) )", "obj1": 0.4377358490566038, "obj2": 0.436348433399685}, {"determining": "Min( Min( ( ( ARS - FirstVNF_CPU ) * MRS ) ,CRS ) ,( ( MDR + BR ) - CRS ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( Min( RCSe ,RCSe ),MLU ) ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.2320754716981132, "obj2": 0.6431229732616642}, {"determining": "( Const * Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( ( ( MUC * CS ) + ( MUM * RRSe ) ) * RMSe ) * Min( MUM ,DS ) ) ) + MUR )", "obj1": 0.1490566037735849, "obj2": 0.7221592757002525}, {"determining": "Min( ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) + Min( BR ,FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ,( ( MDR + BR ) - CRS ) )", "choosing": "( ( Max( DS,MLU ) - Max( CS,CS ) ) * ( Max( DS,MLU ) / Max( RRSe,CS ) ) )", "obj1": 0.3452830188679245, "obj2": 0.5208801855266881}, {"determining": "( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * Min( BR ,FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) )", "choosing": "( Max( RRSe,DS ) * ( Max( DS,MLU ) - Max( RRSe,CS ) ) )", "obj1": 0.42452830188679247, "obj2": 0.4493041243648612}, {"determining": "Min( Min( ( ( ARS - FirstVNF_CPU ) * MRS ) ,CRS ) ,( ( MDR + BR ) - CRS ) )", "choosing": "( ( RRSe / MUM ) * ( Max( DS,MLU ) - Max( RRSe,CS ) ) )", "obj1": 0.36792452830188677, "obj2": 0.5143425906770343}, {"determining": "Min( Min( ( ( ARS - FirstVNF_CPU ) * MRS ) ,CRS ) ,( ( Min( ( ( FirstVNF_RAM * RRS ) * Const ) ,Const ) + ACS ) - CRS ) )", "choosing": "( ( RRSe / MUM ) * ( Max( DS,( RMSe + MUC ) ) - Max( RRSe,CS ) ) )", "obj1": 0.5188679245283019, "obj2": 0.3850914881641268}, {"determining": "Min( Min( ( ( ARS - FirstVNF_CPU ) * MRS ) ,CRS ) ,( ( MDR + BR ) - CRS ) )", "choosing": "( ( RRSe / MUM ) * ( Max( DS,MLU ) - Max( RRSe,CS ) ) )", "obj1": 0.36792452830188677, "obj2": 0.5143425906770343}, {"determining": "( ( ( MDR / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) / ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) )", "choosing": "Max( Min( MUC ,RMSe ),( ( ( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) ) + DS ) * MUC ) )", "obj1": 0.08867924528301886, "obj2": 0.7833492592942242}, {"determining": "( Max( BR,PN ) + Min( ACS ,MDR ) )", "choosing": "Max( ( MUR / CS ),( RCSe + DS ) )", "obj1": 0.5056603773584906, "obj2": 0.4040779030138923}, {"determining": "( ( RRS / FirstVNF_RAM_Server ) / ( MRS - DDR ) )", "choosing": "( ( RRSe / DS ) * ( ( MUC - MUM ) * ( MLU - CS ) ) )", "obj1": 0.27169811320754716, "obj2": 0.6235004754179225}, {"determining": "( ( RRS / FirstVNF_RAM_Server ) / ( Min( CRS ,AMS ) / ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS * Min( RMSe ,( ( RRSe / MUM ) * ( Max( RMSe,DS ) - Max( RRSe,CS ) ) ) ) ) / Min( MLU ,MUR ) )", "obj1": 0.13584905660377358, "obj2": 0.7471299836932287}, {"determining": "( Min( ( ( RRS / FirstVNF_RAM_Server ) / ( MRS - DDR ) ) ,AMS ) / Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe / MUM ) * ( Max( DS,DS ) - Max( RRSe,CS ) ) )", "obj1": 0.4849056603773585, "obj2": 0.4206628716589523}], "5": [{"determining": "( ( AMS + MDR ) - ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + MUR ) * ( MUM / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / MDR ) / FirstVNF_Mem_Server )", "choosing": "( ( RRSe / DS ) * ( ( MUC - RCSe ) * ( RCSe - CS ) ) )", "obj1": 0.27169811320754716, "obj2": 0.6235004754179225}, {"determining": "Min( Min( ( ( ARS - FirstVNF_CPU ) * MRS ) ,CRS ) ,( ( MDR + BR ) - CRS ) )", "choosing": "( ( RRSe / MUM ) * ( Max( DS,MLU ) - Max( RRSe,CS ) ) )", "obj1": 0.36792452830188677, "obj2": 0.5143425906770343}, {"determining": "( Max( RRS,Const ) + ( RRS / MRS ) )", "choosing": "Max( ( MUR / CS ),Min( ( Max( RMSe,RMSe ) / ( RRSe * RMSe ) ) ,( ( MUM + RMSe ) / Min( RRSe ,RCSe ) ) ) )", "obj1": 0.33962264150943394, "obj2": 0.5438641200549839}, {"determining": "( Max( CRS,ARS ) / Min( MRS ,DDR ) )", "choosing": "Max( ( ( RCSe / RRSe ) / ( MUM / RCSe ) ),( ( RRSe + RRSe ) / Max( RRSe,CS ) ) )", "obj1": 0.38301886792452833, "obj2": 0.49532194699422744}, {"determining": "( ( Const + FirstVNF_CPU_Server ) + ( CRS / ( RRS / FirstVNF_CPU ) ) )", "choosing": "( Max( Min( MUR ,DS ),RCSe ) / ( Min( RMSe ,RMSe ) * DS ) )", "obj1": 0.10754716981132076, "obj2": 0.7582786184773601}, {"determining": "Max( ( ( MDR + MDR ) - ( FirstVNF_CPU / FirstVNF_Mem_Server ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "Max( ( ( MLU + MUM ) / ( MUM / RCSe ) ),( ( RRSe + RRSe ) / Max( RRSe,CS ) ) )", "obj1": 0.38113207547169814, "obj2": 0.4970412695086022}, {"determining": "Min( ( ( FirstVNF_Mem_Server / DDR ) - ( RRS + MRS ) ) ,Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( BR / MRS ) ) )", "choosing": "Max( ( MUR / CS ),Min( ( Max( RMSe,RMSe ) / ( RRSe * RMSe ) ) ,( ( MUM + RMSe ) / Min( RRSe ,RCSe ) ) ) )", "obj1": 0.33962264150943394, "obj2": 0.5438641200549839}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / Max( FirstVNF_Mem_Server,CRS ) )", "choosing": "( ( RRSe / MUM ) * ( Max( ( ( MLU / RRSe ) / ( MUM / RCSe ) ),( ( RRSe + RRSe ) / Max( RRSe,CS ) ) ) - Max( RRSe,CS ) ) )", "obj1": 0.3150943396226415, "obj2": 0.5497413787157134}, {"determining": "( ( Min( ( Min( Max( ( ( MDR / FirstVNF_CPU ) / Max( MDR,FirstVNF_CPU_Server ) ),( ( ARS - BR ) * ( MDR - FirstVNF_Mem ) ) ) ,( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) / Min( FirstVNF_CPU_Server ,Const ) ) - Min( Max( RRS,MDR ) ,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) * Max( ( ( ( FirstVNF_Mem_Server * MRS ) / ( ARS - FirstVNF_Mem_Server ) ) * Min( ( AMS + FirstVNF_Mem ) ,Min( DDR ,MRS ) ) ),( ( ( AMS / ACS ) / ( CRS - FirstVNF_RAM ) ) / ( Max( FirstVNF_Mem,CRS ) - ( Const / RRS ) ) ) ) ) ,( ( ( ( ( PN / ARS ) + Min( FirstVNF_Mem ,PN ) ) + ( Max( RRS,RRS ) + Min( FirstVNF_CPU_Server ,ACS ) ) ) - ( ( ( AMS - PN ) / ( ACS * AMS ) ) / ( Max( MDR,FirstVNF_RAM ) * Max( AMS,ACS ) ) ) ) / ( ( ( Min( FirstVNF_CPU_Server ,AMS ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) + ( Max( BR,BR ) * Min( ACS ,FirstVNF_CPU ) ) ) * ( ( ( ACS * ACS ) * Max( MRS,FirstVNF_CPU ) ) + ( Min( FirstVNF_CPU_Server ,MDR ) * ( ARS * ACS ) ) ) ) ) ) + Min( Min( ( Max( ( Min( FirstVNF_RAM ,ARS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM / Const ) + Min( FirstVNF_RAM_Server ,PN ) ) ) + ( ( ( ARS - MDR ) * ( AMS / Const ) ) - ( ( CRS * ARS ) * ( MRS * FirstVNF_Mem_Server ) ) ) ) ,( ( ( ( ACS - MDR ) + ( CRS - FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_CPU_Server ,BR ) - ( MDR + BR ) ) ) - Min( ( ( FirstVNF_Mem_Server / AMS ) / ( FirstVNF_CPU * CRS ) ) ,Min( ( DDR + AMS ) ,Max( ARS,CRS ) ) ) ) ) ,( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) - ( BR - RRS ) ) * ( ( FirstVNF_Mem_Server / CRS ) * ( ARS / CRS ) ) ) / ( ( Max( RRS,FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) / Min( ( MRS / MDR ) ,( PN * FirstVNF_Mem_Server ) ) ) ) / Max( ( ( ( BR / Const ) / ( Const / ACS ) ) + ( ( Const - FirstVNF_CPU ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ),Max( Min( Max( FirstVNF_CPU,BR ) ,( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ),Min( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,ACS ) ) ) ) ) ) ) + Min( ( ( ( ( ( Min( FirstVNF_CPU_Server ,Const ) + Min( ACS ,FirstVNF_Mem_Server ) ) + ( ( PN - ACS ) + ( RRS * Const ) ) ) + Max( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) * ( AMS * FirstVNF_RAM_Server ) ),( ( AMS - FirstVNF_CPU ) - ( Const / BR ) ) ) ) + Min( Min( Min( ( AMS / FirstVNF_Mem ) ,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ,( Max( ACS,FirstVNF_RAM ) + Max( DDR,PN ) ) ) ,( ( ( Const / MRS ) * ( FirstVNF_RAM + CRS ) ) / Min( ( FirstVNF_RAM_Server * ACS ) ,( MDR / RRS ) ) ) ) ) - ( Max( Min( Max( ( DDR + CRS ),( ARS / MRS ) ) ,Min( ( PN / MRS ) ,( FirstVNF_CPU_Server / PN ) ) ),( ( Max( AMS,FirstVNF_RAM_Server ) / Max( Const,PN ) ) + Min( ( FirstVNF_RAM - ARS ) ,( FirstVNF_RAM * AMS ) ) ) ) - Max( ( Min( ( AMS / ACS ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - ( ( PN / FirstVNF_CPU ) - ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ),( ( ( CRS * ACS ) * ( FirstVNF_CPU_Server + MDR ) ) / Max( Min( FirstVNF_CPU ,DDR ),Max( PN,AMS ) ) ) ) ) ) ,( ( ( ( ( ( MRS / BR ) + ( PN / AMS ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_Mem ),( ARS + ACS ) ) ) - ( ( ( FirstVNF_Mem_Server - CRS ) - ( FirstVNF_Mem_Server * DDR ) ) * Max( ( MRS * CRS ),( MDR + CRS ) ) ) ) * Min( Min( ( Min( RRS ,PN ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ,( ( FirstVNF_CPU + Const ) + ( FirstVNF_CPU + ACS ) ) ) ,Min( ( ( Const * MRS ) * ( CRS + MRS ) ) ,Max( Min( MDR ,MRS ),( RRS - FirstVNF_RAM ) ) ) ) ) * ( Min( ( ( ( CRS - FirstVNF_RAM_Server ) + ( ACS / FirstVNF_Mem ) ) * ( Min( PN ,BR ) * ( FirstVNF_RAM_Server - RRS ) ) ) ,( ( ( RRS - ARS ) * ( Const * FirstVNF_CPU ) ) / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) / ( Min( ( Max( FirstVNF_RAM_Server,MRS ) * ( MRS * FirstVNF_CPU_Server ) ) ,Max( ( FirstVNF_RAM_Server + PN ),Max( FirstVNF_Mem_Server,RRS ) ) ) - ( ( Max( DDR,ACS ) - Min( RRS ,FirstVNF_Mem_Server ) ) + ( Max( CRS,FirstVNF_CPU ) / ( ARS - AMS ) ) ) ) ) ) ) )", "choosing": "Max( ( MUR + MUR ),( ( MUC / MUR ) / Min( MUM ,( DS / MUM ) ) ) )", "obj1": 0.28679245283018867, "obj2": 0.575861214920146}, {"determining": "( ( FirstVNF_RAM_Server + ( MDR + ACS ) ) + ( CRS + ( RRS / FirstVNF_CPU ) ) )", "choosing": "( Max( ( MUR + DS ),RCSe ) / ( Max( DS,MLU ) * Max( RRSe,RCSe ) ) )", "obj1": 0.17358490566037735, "obj2": 0.7063299428268437}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06415094339622641, "obj2": 0.805777309085478}, {"determining": "( ( Const + Const ) * Max( Max( ( AMS + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_RAM ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) ) )", "choosing": "( ( ( MUC + DS ) * ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RRSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.10377358490566038, "obj2": 0.7727914316980405}, {"determining": "( Min( ( ( ARS - FirstVNF_CPU ) * MDR ) ,CRS ) / Min( MRS ,DDR ) )", "choosing": "( RCSe / ( Min( MLU ,CS ) * ( MUM + MUM ) ) )", "obj1": 0.37358490566037733, "obj2": 0.5113975788062296}, {"determining": "Min( Min( ( ( ARS - FirstVNF_CPU ) * MRS ) ,CRS ) ,( ( MDR + BR ) - CRS ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( Min( RCSe ,RCSe ),MLU ) ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.2320754716981132, "obj2": 0.6431229732616642}, {"determining": "Min( ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) + Min( BR ,FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ,( ( MDR + BR ) - CRS ) )", "choosing": "( ( Max( DS,MLU ) - Max( CS,CS ) ) * ( Max( DS,MLU ) / Max( RRSe,CS ) ) )", "obj1": 0.3452830188679245, "obj2": 0.5208801855266881}, {"determining": "Min( Min( ( ( ARS - FirstVNF_CPU ) * MRS ) ,CRS ) ,( ( MDR + BR ) - CRS ) )", "choosing": "( ( RRSe / MUM ) * ( Max( DS,MLU ) - Max( RRSe,CS ) ) )", "obj1": 0.36792452830188677, "obj2": 0.5143425906770343}, {"determining": "Min( Min( ( ( ARS - FirstVNF_CPU ) * MRS ) ,CRS ) ,( ( MDR + BR ) - CRS ) )", "choosing": "( ( RRSe / MUM ) * ( Max( DS,MLU ) - Max( RRSe,CS ) ) )", "obj1": 0.36792452830188677, "obj2": 0.5143425906770343}, {"determining": "( ( RRS / FirstVNF_RAM_Server ) / ( MRS - DDR ) )", "choosing": "( ( RRSe / DS ) * ( ( MUC - MUM ) * ( MLU - CS ) ) )", "obj1": 0.27169811320754716, "obj2": 0.6235004754179225}, {"determining": "( ( RRS / FirstVNF_RAM_Server ) / ( Min( CRS ,AMS ) / ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS * Min( RMSe ,( ( RRSe / MUM ) * ( Max( RMSe,DS ) - Max( RRSe,CS ) ) ) ) ) / Min( MLU ,MUR ) )", "obj1": 0.13584905660377358, "obj2": 0.7471299836932287}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06415094339622641, "obj2": 0.805777309085478}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06037735849056604, "obj2": 0.8155790379467882}, {"determining": "( Max( CRS,MRS ) / Min( MRS ,DDR ) )", "choosing": "Max( ( ( MLU / RRSe ) / ( MUM / RCSe ) ),( ( RRSe + RRSe ) / Max( RRSe,CS ) ) )", "obj1": 0.38301886792452833, "obj2": 0.49532194699422744}, {"determining": "( ( RRS / FirstVNF_RAM_Server ) / ( Min( CRS ,AMS ) / Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS * Min( RMSe ,( ( RRSe / MUM ) * ( Max( DS,DS ) - Max( RRSe,CS ) ) ) ) ) / Min( MLU ,MUR ) )", "obj1": 0.13584905660377358, "obj2": 0.7471299836932287}, {"determining": "( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,MDR ) / FirstVNF_RAM )", "choosing": "( ( RRSe / DS ) * ( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) ) )", "obj1": 0.06981132075471698, "obj2": 0.7988965944240042}, {"determining": "( ( ( MDR / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) / ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) )", "choosing": "( ( RRSe / DS ) * ( ( MUC - MUM ) * ( MLU - CS ) ) )", "obj1": 0.27169811320754716, "obj2": 0.6235004754179225}, {"determining": "( ( Const + FirstVNF_CPU_Server ) + ( CRS / ( Min( ( ( FirstVNF_RAM * RRS ) * Const ) ,Const ) + ACS ) ) )", "choosing": "( Max( Min( ( Max( DS,( RMSe + MUC ) ) - Max( RRSe,CS ) ) ,DS ),RCSe ) / ( Min( RMSe ,RMSe ) * DS ) )", "obj1": 0.10754716981132076, "obj2": 0.7582786184773601}, {"determining": "( Const * Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( ( ( Max( RRSe,CS ) * CS ) + ( MUM * RRSe ) ) * RMSe ) * Min( MUM ,DS ) ) ) + MUR )", "obj1": 0.14150943396226415, "obj2": 0.7197456546289022}, {"determining": "( Const * Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( DS * Min( RMSe ,( ( RRSe / MUM ) * ( Max( DS,DS ) - Max( RRSe,CS ) ) ) ) ) / Min( MLU ,MUR ) )", "obj1": 0.13584905660377358, "obj2": 0.7471299836932287}, {"determining": "( ( Const + Const ) * Max( Max( ( AMS + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) ) )", "choosing": "( ( ( MUC + DS ) * ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.10377358490566038, "obj2": 0.7727914316980405}, {"determining": "( ( Const + Const ) * Max( Max( ( AMS + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) ) )", "choosing": "( ( ( MUC + DS ) * ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.10377358490566038, "obj2": 0.7727914316980405}, {"determining": "( ( FirstVNF_RAM_Server + ( MDR + BR ) ) + ( CRS / Max( ( RRS / FirstVNF_RAM_Server ),( Min( CRS ,AMS ) / Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( Min( MUR ,DS ),RCSe ) / ( Max( DS,MLU ) * Max( ( DS * ( RMSe - ( ( RRSe / MUM ) * ( Max( DS,DS ) - Max( RRSe,CS ) ) ) ) ),RCSe ) ) )", "obj1": 0.1660377358490566, "obj2": 0.717698575225075}, {"determining": "( ( RRS / FirstVNF_RAM_Server ) / ( Min( CRS ,AMS ) / Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS * Min( RMSe ,( ( RRSe / MUM ) * ( Max( DS,DS ) - Max( RRSe,RMSe ) ) ) ) ) / Min( MLU ,MUR ) )", "obj1": 0.13584905660377358, "obj2": 0.7471299836932287}, {"determining": "( ( FirstVNF_RAM_Server + ( MDR + BR ) ) + ( CRS / ( RRS / FirstVNF_CPU ) ) )", "choosing": "( Max( Min( MUR ,DS ),RCSe ) / ( Max( DS,MLU ) * Max( RRSe,RCSe ) ) )", "obj1": 0.17358490566037735, "obj2": 0.7063299428268437}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.0660377358490566, "obj2": 0.8032718896837286}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / Max( FirstVNF_Mem_Server,CRS ) )", "choosing": "( ( RRSe / MUM ) * ( Max( ( ( MLU / RRSe ) / ( MUM / RCSe ) ),( ( RRSe + RRSe ) / Max( RRSe,CS ) ) ) - Max( RRSe,CS ) ) )", "obj1": 0.30754716981132074, "obj2": 0.5709520060816711}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),( AMS + Min( ACS ,MDR ) ) ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( ( ( RRSe / MUM ) * ( Max( DS,MLU ) - Max( RRSe,CS ) ) ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.11509433962264151, "obj2": 0.7471951717765636}, {"determining": "Min( Min( ( ( ARS - FirstVNF_CPU ) * MRS ) ,CRS ) ,( ( MDR + BR ) - CRS ) )", "choosing": "( ( ( MUC + DS ) * ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.17735849056603772, "obj2": 0.6748472286230803}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,( MRS - MRS ) )", "choosing": "Max( Min( MUC ,RMSe ),( ( ( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) ) + DS ) * MUC ) )", "obj1": 0.08679245283018867, "obj2": 0.7802358439988304}, {"determining": "( ( Min( ( Min( Max( ( ( MDR / FirstVNF_CPU ) / Max( MDR,FirstVNF_CPU_Server ) ),( ( ARS - BR ) * ( MDR - FirstVNF_Mem ) ) ) ,( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) / Min( FirstVNF_CPU_Server ,Const ) ) - Min( Max( RRS,MDR ) ,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) * Max( ( ( ( FirstVNF_Mem_Server * MRS ) / ( ARS - FirstVNF_Mem_Server ) ) * Min( ( AMS + FirstVNF_Mem ) ,Min( DDR ,MRS ) ) ),( ( ( AMS / ACS ) / ( CRS - FirstVNF_RAM ) ) / ( Max( FirstVNF_Mem,CRS ) - ( Const / RRS ) ) ) ) ) ,( ( ( ( ( PN / FirstVNF_Mem_Server ) + Min( FirstVNF_Mem ,PN ) ) + ( Max( RRS,RRS ) + Min( FirstVNF_CPU_Server ,ACS ) ) ) - ( ( ( AMS - PN ) / ( ACS * AMS ) ) / ( Max( MDR,FirstVNF_RAM ) * Max( AMS,ACS ) ) ) ) / ( ( ( Min( FirstVNF_CPU_Server ,AMS ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) + ( Max( BR,BR ) * Min( ACS ,FirstVNF_CPU ) ) ) * ( ( ( ACS * ACS ) * Max( MRS,FirstVNF_CPU ) ) + ( Min( FirstVNF_CPU_Server ,MDR ) * ( ARS * ACS ) ) ) ) ) ) + ( Min( ( Max( ( Min( FirstVNF_RAM ,ARS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM / Const ) + Min( FirstVNF_RAM_Server ,PN ) ) ) + ( ( ( ARS - MDR ) * ( AMS / Const ) ) - ( ( CRS * ARS ) * ( MRS * FirstVNF_Mem_Server ) ) ) ) ,( ( ( ( ACS - MDR ) + ( CRS - FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_CPU_Server ,BR ) - ( MDR + BR ) ) ) - Min( ( ( FirstVNF_Mem_Server / AMS ) / ( FirstVNF_CPU * CRS ) ) ,Min( ( DDR + AMS ) ,Max( ARS,CRS ) ) ) ) ) - ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) - ( BR - RRS ) ) * ( ( FirstVNF_Mem_Server / CRS ) * ( ARS / CRS ) ) ) / ( ( Max( RRS,FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) / Min( ( MRS / MDR ) ,( PN * FirstVNF_Mem_Server ) ) ) ) / Max( ( ( ( BR / Const ) / ( Const / ACS ) ) + ( ( Const - FirstVNF_CPU ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ),Max( Min( Max( FirstVNF_CPU,BR ) ,( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ),Min( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,ACS ) ) ) ) ) ) ) + Min( ( ( ( ( ( Min( FirstVNF_CPU_Server ,Const ) + Min( ACS ,FirstVNF_Mem_Server ) ) + ( ( PN - ACS ) + ( RRS * Const ) ) ) + Max( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) * ( AMS * FirstVNF_RAM_Server ) ),( ( AMS - FirstVNF_CPU ) - ( Const / BR ) ) ) ) + Min( Min( Min( ( AMS / FirstVNF_Mem ) ,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ,( Max( ACS,FirstVNF_RAM ) + Max( DDR,PN ) ) ) ,( ( ( Const / MRS ) * ( FirstVNF_RAM + CRS ) ) / Min( ( FirstVNF_RAM_Server * ACS ) ,( MDR / RRS ) ) ) ) ) - ( Max( Min( Max( ( DDR + CRS ),( ARS / MRS ) ) ,Min( ( PN / MRS ) ,( FirstVNF_CPU_Server / PN ) ) ),( ( Max( AMS,FirstVNF_RAM_Server ) / Max( Const,PN ) ) + Min( ( FirstVNF_RAM - ARS ) ,( FirstVNF_RAM * AMS ) ) ) ) - Max( ( Min( ( AMS / ACS ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - ( ( PN / FirstVNF_CPU ) - ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ),( ( ( CRS * ACS ) * ( FirstVNF_CPU_Server + MDR ) ) / Max( Min( FirstVNF_CPU ,DDR ),Max( PN,AMS ) ) ) ) ) ) ,Min( Max( AMS,RRS ) ,( Const + FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( MUR + RRSe ),( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / MUR ) - Min( MUM ,( DS / MUM ) ) ) )", "obj1": 0.27735849056603773, "obj2": 0.5853012252664068}, {"determining": "( ( Min( ( Min( Max( ( ( MDR / FirstVNF_CPU ) / Max( MDR,FirstVNF_CPU_Server ) ),( ( ARS - BR ) * ( MDR - FirstVNF_Mem ) ) ) ,( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) / Min( FirstVNF_CPU_Server ,Const ) ) - Min( Max( RRS,MDR ) ,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) * Max( ( ( ( FirstVNF_Mem_Server * MRS ) / ( ARS - FirstVNF_Mem_Server ) ) * Min( ( AMS + FirstVNF_Mem ) ,Min( DDR ,MRS ) ) ),( ( ( AMS / ACS ) / ( CRS - FirstVNF_RAM ) ) / ( Max( FirstVNF_Mem,CRS ) - ( Const / RRS ) ) ) ) ) ,( ( ( ( ( PN / ARS ) + Min( FirstVNF_Mem ,PN ) ) + ( Max( RRS,RRS ) + Min( FirstVNF_CPU_Server ,ACS ) ) ) - ( ( ( AMS - PN ) / ( ACS * AMS ) ) / ( Max( MDR,FirstVNF_RAM ) * Max( AMS,ACS ) ) ) ) / ( ( ( Min( FirstVNF_CPU_Server ,AMS ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) + ( Max( BR,BR ) * Min( ACS ,FirstVNF_CPU ) ) ) * ( ( ( ACS * ACS ) * Max( MRS,FirstVNF_CPU ) ) + ( Min( FirstVNF_CPU_Server ,MDR ) * ( ARS * ACS ) ) ) ) ) ) + ( Min( ( Max( ( Min( FirstVNF_RAM ,ARS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM / Const ) + Min( FirstVNF_RAM_Server ,PN ) ) ) + ( ( ( ARS - MDR ) * ( AMS / Const ) ) - ( ( CRS * ARS ) * ( MRS * FirstVNF_Mem_Server ) ) ) ) ,( ( ( ( ACS - MDR ) + ( CRS - FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_CPU_Server ,BR ) - ( MDR + BR ) ) ) - Min( ( ( FirstVNF_Mem_Server / AMS ) / ( FirstVNF_CPU * CRS ) ) ,Min( ( DDR + AMS ) ,Max( ARS,CRS ) ) ) ) ) - ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) - ( BR - RRS ) ) * ( ( FirstVNF_Mem_Server / CRS ) * ( ARS / CRS ) ) ) / ( ( Max( RRS,FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) / Min( ( MRS / MDR ) ,( PN * FirstVNF_Mem_Server ) ) ) ) / Max( ( ( ( BR / Const ) / ( Const / ACS ) ) + ( ( Const - FirstVNF_CPU ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ),Max( Min( Max( FirstVNF_CPU,BR ) ,( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ),Min( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,ACS ) ) ) ) ) ) ) + Min( ( ( ( ( ( Min( FirstVNF_CPU_Server ,Const ) + Min( ACS ,FirstVNF_Mem_Server ) ) + ( ( PN - ACS ) + ( RRS * Const ) ) ) + Max( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) * ( AMS * FirstVNF_RAM_Server ) ),( ( AMS - FirstVNF_CPU ) - ( Const / BR ) ) ) ) + Min( Min( Min( ( AMS / FirstVNF_Mem ) ,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ,( Max( ACS,FirstVNF_RAM ) + Max( DDR,PN ) ) ) ,( ( ( Const / MRS ) * ( FirstVNF_RAM + CRS ) ) / Min( ( FirstVNF_RAM_Server * ACS ) ,( MDR / RRS ) ) ) ) ) - ( Max( Min( Max( ( DDR + CRS ),( ARS / MRS ) ) ,Min( ( PN / MRS ) ,( FirstVNF_CPU_Server / PN ) ) ),( ( Max( AMS,FirstVNF_RAM_Server ) / Max( Const,PN ) ) + Min( ( FirstVNF_RAM - ARS ) ,( FirstVNF_RAM * AMS ) ) ) ) - Max( ( Min( ( AMS / ACS ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - ( ( PN / FirstVNF_CPU ) - ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ),( ( ( CRS * ACS ) * ( FirstVNF_CPU_Server + MDR ) ) / Max( Min( FirstVNF_CPU ,DDR ),Max( PN,AMS ) ) ) ) ) ) ,( ( ( ( ( ( MRS / BR ) + ( PN / AMS ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_Mem ),( ARS + ACS ) ) ) - ( ( ( FirstVNF_Mem_Server - CRS ) - ( FirstVNF_Mem_Server * DDR ) ) * Max( ( MRS * CRS ),( MDR + CRS ) ) ) ) * Min( Min( ( Min( RRS ,PN ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ,( ( FirstVNF_CPU + Const ) + ( FirstVNF_CPU + ACS ) ) ) ,Min( ( ( Const * MRS ) * ( CRS + MRS ) ) ,Max( Min( MDR ,MRS ),( RRS - FirstVNF_RAM ) ) ) ) ) * ( Min( ( ( ( CRS - FirstVNF_RAM_Server ) + ( ACS / FirstVNF_Mem ) ) * ( Min( PN ,BR ) * ( FirstVNF_RAM_Server - RRS ) ) ) ,( ( ( RRS - ARS ) * ( Const * FirstVNF_CPU ) ) / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) / ( Min( ( Max( FirstVNF_RAM_Server,MRS ) * ( MRS * FirstVNF_CPU_Server ) ) ,Max( ( FirstVNF_RAM_Server + PN ),Max( FirstVNF_Mem_Server,RRS ) ) ) - ( ( Max( DDR,ACS ) - Min( RRS ,FirstVNF_Mem_Server ) ) + ( Max( CRS,FirstVNF_CPU ) / ( ARS - AMS ) ) ) ) ) ) ) )", "choosing": "Max( ( MUR + RRSe ),( ( MUC / MUR ) / Min( MUM ,( DS / MUM ) ) ) )", "obj1": 0.28679245283018867, "obj2": 0.575861214920146}, {"determining": "( Max( CRS,MRS ) / Min( MRS ,DDR ) )", "choosing": "Max( ( ( MLU / RRSe ) / ( MUM / RCSe ) ),( ( RRSe + RRSe ) / Max( RRSe,CS ) ) )", "obj1": 0.33773584905660375, "obj2": 0.5460398466785811}, {"determining": "Min( Min( ( ( ARS - FirstVNF_CPU ) * MRS ) ,CRS ) ,MDR )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( Min( DS ,RCSe ),MLU ) ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.22641509433962265, "obj2": 0.6523885022143355}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06037735849056604, "obj2": 0.8155790379467882}, {"determining": "Min( Min( ( ( ARS - FirstVNF_CPU ) * MRS ) ,CRS ) ,Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) )", "choosing": "( ( RRSe / MUM ) * ( Max( Min( MUM ,DS ),MLU ) - Max( RRSe,CS ) ) )", "obj1": 0.36792452830188677, "obj2": 0.5143425906770343}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06037735849056604, "obj2": 0.8155790379467882}, {"determining": "Min( Min( ( ( ARS - FirstVNF_CPU ) * MRS ) ,CRS ) ,( ( MDR + BR ) - CRS ) )", "choosing": "( ( RRSe / MUM ) * ( Max( DS,MLU ) - Max( RRSe,CS ) ) )", "obj1": 0.36792452830188677, "obj2": 0.5143425906770343}, {"determining": "( ( Const + FirstVNF_CPU_Server ) + ( CRS / ( RRS / FirstVNF_CPU ) ) )", "choosing": "( Max( Min( MUR ,DS ),RCSe ) / ( Min( RMSe ,RMSe ) * DS ) )", "obj1": 0.10754716981132076, "obj2": 0.7582786184773601}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,( Min( Max( AMS,RRS ) ,( Const + FirstVNF_CPU_Server ) ) - MRS ) )", "choosing": "( ( ( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + DS ) * ( RMSe + MUC ) ) + Max( RRSe,CS ) )", "obj1": 0.07358490566037736, "obj2": 0.7940808453524227}, {"determining": "( ( ( MDR / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) / ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) )", "choosing": "Max( Min( MUC ,RMSe ),( ( ( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) ) + DS ) * MUC ) )", "obj1": 0.1018867924528302, "obj2": 0.7733645211465336}, {"determining": "( Min( ( ( ARS - FirstVNF_CPU ) * MRS ) ,CRS ) * Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( ( Min( MUC ,( ( RRSe / MUM ) * ( Max( DS,MLU ) - Max( RRSe,CS ) ) ) ) + ( RRSe * MUM ) ) / ( ( ( ( MUC * CS ) + ( MUM * RRSe ) ) * RMSe ) * Min( MUM ,DS ) ) ) + MUR )", "obj1": 0.2490566037735849, "obj2": 0.6250784293076009}], "6": [{"determining": "( ( AMS + MDR ) - ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + MUR ) * ( MUM / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Min( Max( ( ( MDR / FirstVNF_CPU ) / Max( MDR,FirstVNF_CPU_Server ) ),( ( ARS - BR ) * ( MDR - FirstVNF_Mem ) ) ) ,( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) / Min( FirstVNF_CPU_Server ,Const ) ) - Min( Max( RRS,MDR ) ,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) * Max( ( ( ( FirstVNF_Mem_Server * MRS ) / ( ARS - FirstVNF_Mem_Server ) ) * Min( ( AMS + FirstVNF_Mem ) ,Min( DDR ,MRS ) ) ),( ( ( AMS / ACS ) / ( CRS - FirstVNF_RAM ) ) / ( Max( FirstVNF_Mem,CRS ) - ( Const / RRS ) ) ) ) ) ,( ( ( ( ( PN / ARS ) + Min( FirstVNF_Mem ,PN ) ) + ( Max( RRS,RRS ) + Min( FirstVNF_CPU_Server ,ACS ) ) ) - ( ( ( AMS - PN ) / ( ACS * AMS ) ) / ( Max( MDR,FirstVNF_RAM ) * Max( AMS,ACS ) ) ) ) / ( ( ( Min( FirstVNF_CPU_Server ,AMS ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) + ( Max( BR,BR ) * Min( ACS ,FirstVNF_CPU ) ) ) * ( ( ( ACS * ACS ) * Max( MRS,FirstVNF_CPU ) ) + ( Min( FirstVNF_CPU_Server ,MDR ) * ( ARS * ACS ) ) ) ) ) ) + Min( Min( ( Max( ( Min( FirstVNF_RAM ,ARS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM / Const ) + Min( FirstVNF_RAM_Server ,PN ) ) ) + ( ( ( ARS - MDR ) * ( AMS / Const ) ) - ( ( CRS * ARS ) * ( MRS * FirstVNF_Mem_Server ) ) ) ) ,( ( ( ( ACS - MDR ) + ( CRS - FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_CPU_Server ,BR ) - ( MDR + BR ) ) ) - Min( ( ( FirstVNF_Mem_Server / AMS ) / ( FirstVNF_CPU * CRS ) ) ,Min( ( DDR + AMS ) ,Max( ARS,CRS ) ) ) ) ) ,( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) - ( BR - RRS ) ) * ( ( FirstVNF_Mem_Server / CRS ) * ( ARS / CRS ) ) ) / ( ( Max( RRS,FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) / Min( ( MRS / MDR ) ,( PN * FirstVNF_Mem_Server ) ) ) ) / Max( ( ( ( BR / Const ) / ( Const / ACS ) ) + ( ( Const - FirstVNF_CPU ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ),Max( Min( Max( FirstVNF_CPU,BR ) ,( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ),Min( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,ACS ) ) ) ) ) ) ) + Min( ( ( ( ( ( Min( FirstVNF_CPU_Server ,Const ) + Min( ACS ,FirstVNF_Mem_Server ) ) + ( ( PN - ACS ) + ( RRS * Const ) ) ) + Max( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) * ( AMS * FirstVNF_RAM_Server ) ),( ( AMS - FirstVNF_CPU ) - ( Const / BR ) ) ) ) + Min( Min( Min( ( AMS / FirstVNF_Mem ) ,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ,( Max( ACS,FirstVNF_RAM ) + Max( DDR,PN ) ) ) ,( ( ( Const / MRS ) * ( FirstVNF_RAM + CRS ) ) / Min( ( FirstVNF_RAM_Server * ACS ) ,( MDR / RRS ) ) ) ) ) - ( Max( Min( Max( ( DDR + CRS ),( ARS / MRS ) ) ,Min( ( PN / MRS ) ,( FirstVNF_CPU_Server / PN ) ) ),( ( Max( AMS,FirstVNF_RAM_Server ) / Max( Const,PN ) ) + Min( ( FirstVNF_RAM - ARS ) ,( FirstVNF_RAM * AMS ) ) ) ) - Max( ( Min( ( AMS / ACS ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - ( ( PN / FirstVNF_CPU ) - ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ),( ( ( CRS * ACS ) * ( FirstVNF_CPU_Server + MDR ) ) / Max( Min( FirstVNF_CPU ,DDR ),Max( PN,AMS ) ) ) ) ) ) ,( ( ( ( ( ( MRS / BR ) + ( PN / AMS ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_Mem ),( ARS + ACS ) ) ) - ( ( ( FirstVNF_Mem_Server - CRS ) - ( FirstVNF_Mem_Server * DDR ) ) * Max( ( MRS * CRS ),( MDR + CRS ) ) ) ) * Min( Min( ( Min( RRS ,PN ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ,( ( FirstVNF_CPU + Const ) + ( FirstVNF_CPU + ACS ) ) ) ,Min( ( ( Const * MRS ) * ( CRS + MRS ) ) ,Max( Min( MDR ,MRS ),( RRS - FirstVNF_RAM ) ) ) ) ) * ( Min( ( ( ( CRS - FirstVNF_RAM_Server ) + ( ACS / FirstVNF_Mem ) ) * ( Min( PN ,BR ) * ( FirstVNF_RAM_Server - RRS ) ) ) ,( ( ( RRS - ARS ) * ( Const * FirstVNF_CPU ) ) / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) / ( Min( ( Max( FirstVNF_RAM_Server,MRS ) * ( MRS * FirstVNF_CPU_Server ) ) ,Max( ( FirstVNF_RAM_Server + PN ),Max( FirstVNF_Mem_Server,RRS ) ) ) - ( ( Max( DDR,ACS ) - Min( RRS ,FirstVNF_Mem_Server ) ) + ( Max( CRS,FirstVNF_CPU ) / ( ARS - AMS ) ) ) ) ) ) ) )", "choosing": "Max( ( MUR + MUR ),( ( MUC / MUR ) / Min( MUM ,( DS / MUM ) ) ) )", "obj1": 0.28679245283018867, "obj2": 0.575861214920146}, {"determining": "( ( FirstVNF_RAM_Server + ( MDR + ACS ) ) + ( CRS + ( RRS / FirstVNF_CPU ) ) )", "choosing": "( Max( ( MUR + DS ),RCSe ) / ( Max( DS,MLU ) * Max( RRSe,RCSe ) ) )", "obj1": 0.17358490566037735, "obj2": 0.7063299428268437}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06415094339622641, "obj2": 0.805777309085478}, {"determining": "Min( ( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) + Min( BR ,FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ,( ( MDR + BR ) - CRS ) )", "choosing": "( ( Max( DS,MLU ) - Max( CS,CS ) ) * ( Max( DS,MLU ) / Max( RRSe,CS ) ) )", "obj1": 0.3452830188679245, "obj2": 0.5208801855266881}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06415094339622641, "obj2": 0.805777309085478}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06037735849056604, "obj2": 0.8155790379467882}, {"determining": "( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,MDR ) / FirstVNF_RAM )", "choosing": "( ( RRSe / DS ) * ( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) ) )", "obj1": 0.06981132075471698, "obj2": 0.7988965944240042}, {"determining": "( Const * Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( ( ( Max( RRSe,CS ) * CS ) + ( MUM * RRSe ) ) * RMSe ) * Min( MUM ,DS ) ) ) + MUR )", "obj1": 0.14150943396226415, "obj2": 0.7197456546289022}, {"determining": "( ( FirstVNF_RAM_Server + ( MDR + BR ) ) + ( CRS / Max( ( RRS / FirstVNF_RAM_Server ),( Min( CRS ,AMS ) / Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( Min( MUR ,DS ),RCSe ) / ( Max( DS,MLU ) * Max( ( DS * ( RMSe - ( ( RRSe / MUM ) * ( Max( DS,DS ) - Max( RRSe,CS ) ) ) ) ),RCSe ) ) )", "obj1": 0.1660377358490566, "obj2": 0.717698575225075}, {"determining": "( ( FirstVNF_RAM_Server + ( MDR + BR ) ) + ( CRS / ( RRS / FirstVNF_CPU ) ) )", "choosing": "( Max( Min( MUR ,DS ),RCSe ) / ( Max( DS,MLU ) * Max( RRSe,RCSe ) ) )", "obj1": 0.17358490566037735, "obj2": 0.7063299428268437}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.0660377358490566, "obj2": 0.8032718896837286}, {"determining": "Min( Min( ( ( ARS - FirstVNF_CPU ) * MRS ) ,CRS ) ,( ( MDR + BR ) - CRS ) )", "choosing": "( ( ( MUC + DS ) * ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.17735849056603772, "obj2": 0.6748472286230803}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,( MRS - MRS ) )", "choosing": "Max( Min( MUC ,RMSe ),( ( ( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) ) + DS ) * MUC ) )", "obj1": 0.08679245283018867, "obj2": 0.7802358439988304}, {"determining": "( ( Min( ( Min( Max( ( ( MDR / FirstVNF_CPU ) / Max( MDR,FirstVNF_CPU_Server ) ),( ( ARS - BR ) * ( MDR - FirstVNF_Mem ) ) ) ,( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) / Min( FirstVNF_CPU_Server ,Const ) ) - Min( Max( RRS,MDR ) ,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) * Max( ( ( ( FirstVNF_Mem_Server * MRS ) / ( ARS - FirstVNF_Mem_Server ) ) * Min( ( AMS + FirstVNF_Mem ) ,Min( DDR ,MRS ) ) ),( ( ( AMS / ACS ) / ( CRS - FirstVNF_RAM ) ) / ( Max( FirstVNF_Mem,CRS ) - ( Const / RRS ) ) ) ) ) ,( ( ( ( ( PN / FirstVNF_Mem_Server ) + Min( FirstVNF_Mem ,PN ) ) + ( Max( RRS,RRS ) + Min( FirstVNF_CPU_Server ,ACS ) ) ) - ( ( ( AMS - PN ) / ( ACS * AMS ) ) / ( Max( MDR,FirstVNF_RAM ) * Max( AMS,ACS ) ) ) ) / ( ( ( Min( FirstVNF_CPU_Server ,AMS ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) + ( Max( BR,BR ) * Min( ACS ,FirstVNF_CPU ) ) ) * ( ( ( ACS * ACS ) * Max( MRS,FirstVNF_CPU ) ) + ( Min( FirstVNF_CPU_Server ,MDR ) * ( ARS * ACS ) ) ) ) ) ) + ( Min( ( Max( ( Min( FirstVNF_RAM ,ARS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM / Const ) + Min( FirstVNF_RAM_Server ,PN ) ) ) + ( ( ( ARS - MDR ) * ( AMS / Const ) ) - ( ( CRS * ARS ) * ( MRS * FirstVNF_Mem_Server ) ) ) ) ,( ( ( ( ACS - MDR ) + ( CRS - FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_CPU_Server ,BR ) - ( MDR + BR ) ) ) - Min( ( ( FirstVNF_Mem_Server / AMS ) / ( FirstVNF_CPU * CRS ) ) ,Min( ( DDR + AMS ) ,Max( ARS,CRS ) ) ) ) ) - ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) - ( BR - RRS ) ) * ( ( FirstVNF_Mem_Server / CRS ) * ( ARS / CRS ) ) ) / ( ( Max( RRS,FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) / Min( ( MRS / MDR ) ,( PN * FirstVNF_Mem_Server ) ) ) ) / Max( ( ( ( BR / Const ) / ( Const / ACS ) ) + ( ( Const - FirstVNF_CPU ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ),Max( Min( Max( FirstVNF_CPU,BR ) ,( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ),Min( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,ACS ) ) ) ) ) ) ) + Min( ( ( ( ( ( Min( FirstVNF_CPU_Server ,Const ) + Min( ACS ,FirstVNF_Mem_Server ) ) + ( ( PN - ACS ) + ( RRS * Const ) ) ) + Max( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) * ( AMS * FirstVNF_RAM_Server ) ),( ( AMS - FirstVNF_CPU ) - ( Const / BR ) ) ) ) + Min( Min( Min( ( AMS / FirstVNF_Mem ) ,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ,( Max( ACS,FirstVNF_RAM ) + Max( DDR,PN ) ) ) ,( ( ( Const / MRS ) * ( FirstVNF_RAM + CRS ) ) / Min( ( FirstVNF_RAM_Server * ACS ) ,( MDR / RRS ) ) ) ) ) - ( Max( Min( Max( ( DDR + CRS ),( ARS / MRS ) ) ,Min( ( PN / MRS ) ,( FirstVNF_CPU_Server / PN ) ) ),( ( Max( AMS,FirstVNF_RAM_Server ) / Max( Const,PN ) ) + Min( ( FirstVNF_RAM - ARS ) ,( FirstVNF_RAM * AMS ) ) ) ) - Max( ( Min( ( AMS / ACS ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - ( ( PN / FirstVNF_CPU ) - ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ),( ( ( CRS * ACS ) * ( FirstVNF_CPU_Server + MDR ) ) / Max( Min( FirstVNF_CPU ,DDR ),Max( PN,AMS ) ) ) ) ) ) ,Min( Max( AMS,RRS ) ,( Const + FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( MUR + RRSe ),( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / MUR ) - Min( MUM ,( DS / MUM ) ) ) )", "obj1": 0.27735849056603773, "obj2": 0.5853012252664068}, {"determining": "( ( Min( ( Min( Max( ( ( MDR / FirstVNF_CPU ) / Max( MDR,FirstVNF_CPU_Server ) ),( ( ARS - BR ) * ( MDR - FirstVNF_Mem ) ) ) ,( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) / Min( FirstVNF_CPU_Server ,Const ) ) - Min( Max( RRS,MDR ) ,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) * Max( ( ( ( FirstVNF_Mem_Server * MRS ) / ( ARS - FirstVNF_Mem_Server ) ) * Min( ( AMS + FirstVNF_Mem ) ,Min( DDR ,MRS ) ) ),( ( ( AMS / ACS ) / ( CRS - FirstVNF_RAM ) ) / ( Max( FirstVNF_Mem,CRS ) - ( Const / RRS ) ) ) ) ) ,( ( ( ( ( PN / ARS ) + Min( FirstVNF_Mem ,PN ) ) + ( Max( RRS,RRS ) + Min( FirstVNF_CPU_Server ,ACS ) ) ) - ( ( ( AMS - PN ) / ( ACS * AMS ) ) / ( Max( MDR,FirstVNF_RAM ) * Max( AMS,ACS ) ) ) ) / ( ( ( Min( FirstVNF_CPU_Server ,AMS ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) + ( Max( BR,BR ) * Min( ACS ,FirstVNF_CPU ) ) ) * ( ( ( ACS * ACS ) * Max( MRS,FirstVNF_CPU ) ) + ( Min( FirstVNF_CPU_Server ,MDR ) * ( ARS * ACS ) ) ) ) ) ) + ( Min( ( Max( ( Min( FirstVNF_RAM ,ARS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM / Const ) + Min( FirstVNF_RAM_Server ,PN ) ) ) + ( ( ( ARS - MDR ) * ( AMS / Const ) ) - ( ( CRS * ARS ) * ( MRS * FirstVNF_Mem_Server ) ) ) ) ,( ( ( ( ACS - MDR ) + ( CRS - FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_CPU_Server ,BR ) - ( MDR + BR ) ) ) - Min( ( ( FirstVNF_Mem_Server / AMS ) / ( FirstVNF_CPU * CRS ) ) ,Min( ( DDR + AMS ) ,Max( ARS,CRS ) ) ) ) ) - ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) - ( BR - RRS ) ) * ( ( FirstVNF_Mem_Server / CRS ) * ( ARS / CRS ) ) ) / ( ( Max( RRS,FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) / Min( ( MRS / MDR ) ,( PN * FirstVNF_Mem_Server ) ) ) ) / Max( ( ( ( BR / Const ) / ( Const / ACS ) ) + ( ( Const - FirstVNF_CPU ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ),Max( Min( Max( FirstVNF_CPU,BR ) ,( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ),Min( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,ACS ) ) ) ) ) ) ) + Min( ( ( ( ( ( Min( FirstVNF_CPU_Server ,Const ) + Min( ACS ,FirstVNF_Mem_Server ) ) + ( ( PN - ACS ) + ( RRS * Const ) ) ) + Max( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) * ( AMS * FirstVNF_RAM_Server ) ),( ( AMS - FirstVNF_CPU ) - ( Const / BR ) ) ) ) + Min( Min( Min( ( AMS / FirstVNF_Mem ) ,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ,( Max( ACS,FirstVNF_RAM ) + Max( DDR,PN ) ) ) ,( ( ( Const / MRS ) * ( FirstVNF_RAM + CRS ) ) / Min( ( FirstVNF_RAM_Server * ACS ) ,( MDR / RRS ) ) ) ) ) - ( Max( Min( Max( ( DDR + CRS ),( ARS / MRS ) ) ,Min( ( PN / MRS ) ,( FirstVNF_CPU_Server / PN ) ) ),( ( Max( AMS,FirstVNF_RAM_Server ) / Max( Const,PN ) ) + Min( ( FirstVNF_RAM - ARS ) ,( FirstVNF_RAM * AMS ) ) ) ) - Max( ( Min( ( AMS / ACS ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - ( ( PN / FirstVNF_CPU ) - ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ),( ( ( CRS * ACS ) * ( FirstVNF_CPU_Server + MDR ) ) / Max( Min( FirstVNF_CPU ,DDR ),Max( PN,AMS ) ) ) ) ) ) ,( ( ( ( ( ( MRS / BR ) + ( PN / AMS ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_Mem ),( ARS + ACS ) ) ) - ( ( ( FirstVNF_Mem_Server - CRS ) - ( FirstVNF_Mem_Server * DDR ) ) * Max( ( MRS * CRS ),( MDR + CRS ) ) ) ) * Min( Min( ( Min( RRS ,PN ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ,( ( FirstVNF_CPU + Const ) + ( FirstVNF_CPU + ACS ) ) ) ,Min( ( ( Const * MRS ) * ( CRS + MRS ) ) ,Max( Min( MDR ,MRS ),( RRS - FirstVNF_RAM ) ) ) ) ) * ( Min( ( ( ( CRS - FirstVNF_RAM_Server ) + ( ACS / FirstVNF_Mem ) ) * ( Min( PN ,BR ) * ( FirstVNF_RAM_Server - RRS ) ) ) ,( ( ( RRS - ARS ) * ( Const * FirstVNF_CPU ) ) / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) / ( Min( ( Max( FirstVNF_RAM_Server,MRS ) * ( MRS * FirstVNF_CPU_Server ) ) ,Max( ( FirstVNF_RAM_Server + PN ),Max( FirstVNF_Mem_Server,RRS ) ) ) - ( ( Max( DDR,ACS ) - Min( RRS ,FirstVNF_Mem_Server ) ) + ( Max( CRS,FirstVNF_CPU ) / ( ARS - AMS ) ) ) ) ) ) ) )", "choosing": "Max( ( MUR + RRSe ),( ( MUC / MUR ) / Min( MUM ,( DS / MUM ) ) ) )", "obj1": 0.28679245283018867, "obj2": 0.575861214920146}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06037735849056604, "obj2": 0.8155790379467882}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06037735849056604, "obj2": 0.8155790379467882}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,( Min( Max( AMS,RRS ) ,( Const + FirstVNF_CPU_Server ) ) - MRS ) )", "choosing": "( ( ( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + DS ) * ( RMSe + MUC ) ) + Max( RRSe,CS ) )", "obj1": 0.07358490566037736, "obj2": 0.7940808453524227}, {"determining": "( ( ( MDR / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) / ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * ( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "Max( Min( MUC ,RMSe ),( ( ( ( ( Min( MUC ,MUC ) + MLU ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) ) + DS ) * MUC ) )", "obj1": 0.30754716981132074, "obj2": 0.5232576507916822}, {"determining": "Max( Max( AMS,( AMS + Min( ACS ,MDR ) ) ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( ( ( RRSe / MUM ) * ( Max( DS,MLU ) - Max( RRSe,CS ) ) ) + ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.09811320754716982, "obj2": 0.767210026177164}, {"determining": "( ( Min( ( Min( Max( ( ( MDR / FirstVNF_CPU ) / Max( MDR,FirstVNF_CPU_Server ) ),( ( ARS - BR ) * ( MDR - FirstVNF_Mem ) ) ) ,( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) / Min( FirstVNF_CPU_Server ,Const ) ) - Min( Max( RRS,MDR ) ,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) * Max( ( ( ( FirstVNF_Mem_Server * MRS ) / ( ARS - FirstVNF_Mem_Server ) ) * Min( ( AMS + FirstVNF_Mem ) ,Min( DDR ,MRS ) ) ),( ( ( AMS / ACS ) / ( CRS - FirstVNF_RAM ) ) / ( Max( FirstVNF_Mem,CRS ) - ( Const / RRS ) ) ) ) ) ,( ( ( ( ( PN / ARS ) + Min( FirstVNF_Mem ,PN ) ) + ( Max( RRS,RRS ) + Min( FirstVNF_CPU_Server ,ACS ) ) ) - ( ( ( AMS - PN ) / ( ACS * AMS ) ) / ( Max( MDR,FirstVNF_RAM ) * Max( AMS,ACS ) ) ) ) / ( ( ( Min( FirstVNF_CPU_Server ,AMS ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) + ( Max( BR,BR ) * Min( ACS ,FirstVNF_CPU ) ) ) * ( ( ( ACS * ACS ) * Max( MRS,FirstVNF_CPU ) ) + ( Min( FirstVNF_CPU_Server ,MDR ) * ( ARS * ACS ) ) ) ) ) ) + ( Min( ( Max( ( Min( FirstVNF_RAM ,ARS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM / Const ) + Min( FirstVNF_RAM_Server ,PN ) ) ) + ( ( ( ARS - MDR ) * ( AMS / Const ) ) - ( ( CRS * ARS ) * ( MRS * FirstVNF_Mem_Server ) ) ) ) ,( ( ( ( ACS - MDR ) + ( CRS - FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_CPU_Server ,BR ) - ( MDR + BR ) ) ) - Min( ( ( FirstVNF_Mem_Server / AMS ) / ( FirstVNF_CPU * CRS ) ) ,Min( ( DDR + AMS ) ,Max( ARS,CRS ) ) ) ) ) - ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) - ( BR - RRS ) ) * ( ( FirstVNF_Mem_Server / CRS ) * ( ARS / CRS ) ) ) / ( ( Max( RRS,FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) / Min( ( MRS / MDR ) ,( PN * FirstVNF_Mem_Server ) ) ) ) / Max( ( ( ( BR / Const ) / ( Const / ACS ) ) + ( ( Const - FirstVNF_CPU ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ),Max( Min( Max( FirstVNF_CPU,BR ) ,( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ),Min( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,ACS ) ) ) ) ) ) ) + Min( ( ( ( ( ( Min( FirstVNF_CPU_Server ,Const ) + Min( ACS ,FirstVNF_Mem_Server ) ) + ( ( PN - ACS ) + ( RRS * Const ) ) ) + Max( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) * ( AMS * FirstVNF_RAM_Server ) ),( ( AMS - FirstVNF_CPU ) - ( Const / BR ) ) ) ) + Min( Min( Min( ( AMS / FirstVNF_Mem ) ,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ,( Max( ACS,FirstVNF_RAM ) + Max( DDR,PN ) ) ) ,( ( ( Const / MRS ) * ( FirstVNF_RAM + CRS ) ) / Min( ( FirstVNF_RAM_Server * ACS ) ,( MDR / RRS ) ) ) ) ) - ( Max( Min( Max( ( DDR + CRS ),( ARS / MRS ) ) ,Min( ( PN / MRS ) ,( FirstVNF_CPU_Server / PN ) ) ),( ( Max( AMS,FirstVNF_RAM_Server ) / Max( Const,PN ) ) + Min( ( FirstVNF_RAM - ARS ) ,( FirstVNF_RAM * AMS ) ) ) ) - Max( ( Min( ( AMS / ACS ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - ( ( PN / FirstVNF_CPU ) - ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ),( ( ( CRS * ACS ) * ( FirstVNF_CPU_Server + MDR ) ) / Max( Min( FirstVNF_CPU ,DDR ),Max( PN,AMS ) ) ) ) ) ) ,Min( Max( AMS,RRS ) ,( Const + FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( MUR + RRSe ),( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / MUR ) / Min( MUM ,( DS / MUM ) ) ) )", "obj1": 0.2509433962264151, "obj2": 0.603247780659594}, {"determining": "( ( Min( ( Min( Max( ( ( MDR / FirstVNF_CPU ) / Max( MDR,FirstVNF_CPU_Server ) ),( ( ARS - BR ) * ( MDR - FirstVNF_Mem ) ) ) ,( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) / Min( FirstVNF_CPU_Server ,Const ) ) - Min( Max( RRS,MDR ) ,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) * Max( ( ( ( FirstVNF_Mem_Server * MRS ) / ( ARS - FirstVNF_Mem_Server ) ) * Min( ( AMS + FirstVNF_Mem ) ,Min( DDR ,MRS ) ) ),( ( ( AMS / ACS ) / ( CRS - FirstVNF_RAM ) ) / ( Max( FirstVNF_Mem,CRS ) - ( Const / RRS ) ) ) ) ) ,( ( ( ( ( PN / ARS ) + Min( FirstVNF_Mem ,PN ) ) + ( Max( RRS,RRS ) + Min( FirstVNF_CPU_Server ,ACS ) ) ) - ( ( ( AMS - PN ) / ( ACS * AMS ) ) / ( Max( MDR,FirstVNF_RAM ) * Max( AMS,ACS ) ) ) ) / ( ( ( Min( FirstVNF_CPU_Server ,AMS ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) + ( Max( BR,BR ) * Min( ACS ,FirstVNF_CPU ) ) ) * ( ( ( ACS * ACS ) * Max( MRS,FirstVNF_CPU ) ) + ( Min( FirstVNF_CPU_Server ,MDR ) * ( ARS * ACS ) ) ) ) ) ) + ( Min( ( Max( ( Min( FirstVNF_RAM ,ARS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM / Const ) + Min( FirstVNF_RAM_Server ,PN ) ) ) + ( ( ( ARS - MDR ) * ( AMS / Const ) ) - ( ( CRS * ARS ) * ( MRS * FirstVNF_Mem_Server ) ) ) ) ,( ( ( ( ACS - MDR ) + ( CRS - FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_CPU_Server ,BR ) - ( MDR + BR ) ) ) - Min( ( ( FirstVNF_Mem_Server / AMS ) / ( FirstVNF_CPU * CRS ) ) ,Min( ( DDR + AMS ) ,Max( ARS,CRS ) ) ) ) ) - ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) - ( BR - RRS ) ) * ( ( FirstVNF_Mem_Server / CRS ) * ( ARS / CRS ) ) ) / ( ( Max( RRS,FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) / Min( ( MRS / MDR ) ,( PN * FirstVNF_Mem_Server ) ) ) ) / Max( ( ( ( BR / Const ) / ( Const / ACS ) ) + ( ( Const - FirstVNF_CPU ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ),Max( Min( Max( FirstVNF_CPU,BR ) ,( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ),Min( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,ACS ) ) ) ) ) ) ) + FirstVNF_CPU )", "choosing": "Max( ( MUR + RRSe ),( ( ( MUC + DS ) * ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) ) )", "obj1": 0.27169811320754716, "obj2": 0.5912794031783984}, {"determining": "( ( Min( ( Min( Max( ( ( MDR / FirstVNF_CPU ) / Max( MDR,FirstVNF_CPU_Server ) ),( ( ARS - BR ) * ( MDR - FirstVNF_Mem ) ) ) ,( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) / Min( FirstVNF_CPU_Server ,Const ) ) - Min( Max( RRS,MDR ) ,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) * Max( ( ( ( FirstVNF_Mem_Server * MRS ) / ( ARS - FirstVNF_Mem_Server ) ) * Min( ( AMS + FirstVNF_Mem ) ,Min( DDR ,MRS ) ) ),( ( ( AMS / ACS ) / ( CRS - FirstVNF_RAM ) ) / ( Max( FirstVNF_Mem,CRS ) - ( Const / RRS ) ) ) ) ) ,( ( ( ( ( PN / ARS ) + Min( FirstVNF_Mem ,PN ) ) + ( Max( RRS,RRS ) + Min( FirstVNF_CPU_Server ,ACS ) ) ) - ( ( ( AMS - PN ) / ( ACS * AMS ) ) / ( Max( MDR,FirstVNF_RAM ) * Max( AMS,ACS ) ) ) ) / ( ( ( Min( FirstVNF_CPU_Server ,AMS ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) + ( Max( BR,BR ) * Min( ACS ,FirstVNF_CPU ) ) ) * ( ( ( ACS * ACS ) * Max( MRS,FirstVNF_CPU ) ) + ( Min( FirstVNF_CPU_Server ,MDR ) * ( ARS * ACS ) ) ) ) ) ) + ( Min( ( Max( ( Min( FirstVNF_RAM ,ARS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM / Const ) + Min( FirstVNF_RAM_Server ,PN ) ) ) + ( ( ( ARS - MDR ) * ( AMS / Const ) ) - ( ( CRS * ARS ) * ( MRS * FirstVNF_Mem_Server ) ) ) ) ,( ( ( ( ACS - MDR ) + ( CRS - FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_CPU_Server ,BR ) - ( MDR + BR ) ) ) - Min( ( ( FirstVNF_Mem_Server / AMS ) / ( FirstVNF_CPU * CRS ) ) ,Min( ( DDR + AMS ) ,Max( ARS,CRS ) ) ) ) ) - ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) - ( BR - RRS ) ) * ( ( FirstVNF_Mem_Server / CRS ) * ( ARS / CRS ) ) ) / ( ( Max( RRS,FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) / Min( ( MRS / MDR ) ,( PN * FirstVNF_Mem_Server ) ) ) ) / Max( ( ( ( BR / Const ) / ( Const / ACS ) ) + ( ( Const - FirstVNF_CPU ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ),Max( Min( Max( FirstVNF_CPU,BR ) ,( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ),Min( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,ACS ) ) ) ) ) ) ) + Min( ( ( ( ( ( Min( FirstVNF_CPU_Server ,Const ) + Min( ACS ,FirstVNF_Mem_Server ) ) + ( ( PN - ACS ) + ( RRS * Const ) ) ) + Max( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) * ( AMS * FirstVNF_RAM_Server ) ),( ( AMS - FirstVNF_CPU ) - ( Const / BR ) ) ) ) + Min( Min( Min( ( AMS / FirstVNF_Mem ) ,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ,( Max( ACS,FirstVNF_RAM ) + Max( DDR,PN ) ) ) ,( ( ( Const / MRS ) * ( FirstVNF_RAM + CRS ) ) / Min( ( FirstVNF_RAM_Server * ACS ) ,( MDR / RRS ) ) ) ) ) - ( Max( Min( Max( ( DDR + CRS ),( ARS / MRS ) ) ,Min( ( PN / MRS ) ,( FirstVNF_CPU_Server / PN ) ) ),( ( Max( AMS,FirstVNF_RAM_Server ) / Max( Const,PN ) ) + Min( ( FirstVNF_RAM - ARS ) ,( FirstVNF_RAM * AMS ) ) ) ) - Max( ( Min( ( AMS / ACS ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - ( ( PN / FirstVNF_CPU ) - ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ),( ( ( CRS * ACS ) * ( FirstVNF_CPU_Server + MDR ) ) / Max( Min( FirstVNF_CPU ,DDR ),Max( PN,AMS ) ) ) ) ) ) ,( ( ( ( ( ( MRS / BR ) + ( PN / AMS ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_Mem ),( ARS + ACS ) ) ) - ( ( ( FirstVNF_Mem_Server - CRS ) - ( FirstVNF_Mem_Server * DDR ) ) * Max( ( MRS * CRS ),( MDR + CRS ) ) ) ) * Min( Min( ( Min( RRS ,PN ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ,( ( FirstVNF_CPU + Const ) + ( FirstVNF_CPU + ACS ) ) ) ,Min( ( ( Const * MRS ) * ( CRS + MRS ) ) ,Max( Min( MDR ,MRS ),( RRS - FirstVNF_RAM ) ) ) ) ) * ( Min( ( ( ( CRS - FirstVNF_RAM_Server ) + ( ACS / FirstVNF_Mem ) ) * ( Min( PN ,BR ) * ( FirstVNF_RAM_Server - RRS ) ) ) ,( ( ( RRS - ARS ) * ( Const * FirstVNF_CPU ) ) / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) / ( Min( ( Max( FirstVNF_RAM_Server,MRS ) * ( MRS * FirstVNF_CPU_Server ) ) ,Max( ( FirstVNF_RAM_Server + PN ),Max( FirstVNF_Mem_Server,RRS ) ) ) - ( ( Max( DDR,ACS ) - Min( RRS ,FirstVNF_Mem_Server ) ) + ( Max( CRS,FirstVNF_CPU ) / ( ARS - AMS ) ) ) ) ) ) ) )", "choosing": "Max( ( MUR + RRSe ),( ( MUC / MUR ) / Min( MUM ,( DS / MUM ) ) ) )", "obj1": 0.28679245283018867, "obj2": 0.575861214920146}, {"determining": "Min( Min( ( ( ARS - FirstVNF_CPU ) * MRS ) ,CRS ) ,( ( MDR + BR ) - CRS ) )", "choosing": "( ( DS * Min( RMSe ,( ( RRSe / MUM ) * ( Max( DS,DS ) - Max( RRSe,CS ) ) ) ) ) / Min( MLU ,MUR ) )", "obj1": 0.22641509433962265, "obj2": 0.6341252226923545}, {"determining": "Min( Min( ( ( ARS - FirstVNF_CPU ) * MRS ) ,CRS ) ,MDR )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( Min( DS ,RCSe ),MLU ) ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.1339622641509434, "obj2": 0.7385810906417783}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,( Min( Max( AMS,RRS ) ,( Const + FirstVNF_CPU_Server ) ) - MRS ) )", "choosing": "( ( ( ( ( Min( MUC ,MUC ) + ( RRSe + MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + DS ) * ( RMSe + MUC ) ) + Max( RRSe,CS ) )", "obj1": 0.07358490566037736, "obj2": 0.7940808453524227}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.0660377358490566, "obj2": 0.8032718896837286}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + MRS ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),( AMS + Min( ACS ,MDR ) ) ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( ( ( RRSe / MUM ) * ( Max( DS,MLU ) - Max( RRSe,CS ) ) ) + ( RRSe * MUM ) ) / ( ( ( MUC * CS ) + ( MUM * RRSe ) ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.10377358490566038, "obj2": 0.743967369039586}, {"determining": "( ( Min( ( Min( Max( ( ( MDR / FirstVNF_CPU ) / Max( MDR,FirstVNF_CPU_Server ) ),( ( ARS - BR ) * ( MDR - FirstVNF_Mem ) ) ) ,( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) / Min( FirstVNF_CPU_Server ,Const ) ) - Min( Max( RRS,MDR ) ,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) * Max( ( ( ( FirstVNF_Mem_Server * MRS ) / ( ARS - FirstVNF_Mem_Server ) ) * Min( ( AMS + FirstVNF_Mem ) ,Min( DDR ,MRS ) ) ),( ( ( AMS / ACS ) / ( CRS - FirstVNF_RAM ) ) / ( Max( FirstVNF_Mem,CRS ) - ( Const / RRS ) ) ) ) ) ,( ( ( ( ( PN / ARS ) + Min( FirstVNF_Mem ,PN ) ) + ( Max( RRS,RRS ) + Min( FirstVNF_CPU_Server ,ACS ) ) ) - ( ( ( AMS - PN ) / ( ACS * AMS ) ) / ( Max( MDR,FirstVNF_RAM ) * Max( AMS,ACS ) ) ) ) / ( ( ( Min( FirstVNF_CPU_Server ,AMS ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) + ( Max( BR,BR ) * Min( ACS ,FirstVNF_CPU ) ) ) * ( ( ( ACS * ACS ) * Max( MRS,FirstVNF_CPU ) ) + ( Min( FirstVNF_CPU_Server ,MDR ) * ( ARS * ACS ) ) ) ) ) ) + ( Min( ( Max( ( Min( FirstVNF_RAM ,ARS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM / Const ) + Min( FirstVNF_RAM_Server ,PN ) ) ) + ( ( ( ARS - MDR ) * ( AMS / Const ) ) - ( ( CRS * ARS ) * ( MRS * FirstVNF_Mem_Server ) ) ) ) ,( ( ( ( ACS - MDR ) + ( CRS - FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_CPU_Server ,BR ) - ( MDR + BR ) ) ) - Min( ( ( FirstVNF_Mem_Server / AMS ) / ( FirstVNF_CPU * CRS ) ) ,Min( ( DDR + AMS ) ,Max( ARS,CRS ) ) ) ) ) - ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) - ( BR - RRS ) ) * ( ( FirstVNF_Mem_Server / CRS ) * ( ARS / CRS ) ) ) / ( ( Max( RRS,FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) / Min( ( MRS / MDR ) ,( PN * FirstVNF_Mem_Server ) ) ) ) / Max( ( ( ( BR / Const ) / ( Const / ACS ) ) + ( ( Const - FirstVNF_CPU ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ),Max( Min( Max( FirstVNF_CPU,BR ) ,( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ),Min( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,ACS ) ) ) ) ) ) ) + Min( ( ( ( ( ( Min( FirstVNF_CPU_Server ,Const ) + Min( ACS ,FirstVNF_Mem_Server ) ) + ( ( PN - ACS ) + ( RRS * Const ) ) ) + Max( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) * ( AMS * FirstVNF_RAM_Server ) ),( ( AMS - FirstVNF_CPU ) - ( Const / BR ) ) ) ) + Min( Min( Min( ( AMS / FirstVNF_Mem ) ,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ,( Max( ACS,FirstVNF_RAM ) + Max( DDR,PN ) ) ) ,( ( ( Const / MRS ) * ( FirstVNF_RAM + CRS ) ) / Min( ( FirstVNF_RAM_Server * ACS ) ,( MDR / RRS ) ) ) ) ) - ( Max( Min( Max( ( DDR + CRS ),( ARS / MRS ) ) ,Min( ( PN / MRS ) ,( FirstVNF_CPU_Server / PN ) ) ),( ( Max( AMS,FirstVNF_RAM_Server ) / Max( Const,PN ) ) + Min( ( FirstVNF_RAM - ARS ) ,( FirstVNF_RAM * AMS ) ) ) ) - Max( ( Min( ( AMS / ACS ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - ( ( PN / FirstVNF_CPU ) - ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ),( ( ( CRS * ACS ) * ( FirstVNF_CPU_Server + MDR ) ) / Max( Min( FirstVNF_CPU ,DDR ),Max( PN,AMS ) ) ) ) ) ) ,( ( ( ( ( ( MRS / BR ) + ( PN / AMS ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_Mem ),( ARS + ACS ) ) ) - ( ( ( FirstVNF_Mem_Server - CRS ) - ( FirstVNF_Mem_Server * DDR ) ) * Max( ( MRS * CRS ),( MDR + CRS ) ) ) ) * Min( Min( ( Min( RRS ,PN ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ,( ( FirstVNF_CPU + Const ) + ( FirstVNF_CPU + ACS ) ) ) ,Min( ( ( Const * MRS ) * ( CRS + MRS ) ) ,Max( Min( MDR ,MRS ),( RRS - FirstVNF_RAM ) ) ) ) ) * ( Min( ( ( ( CRS - FirstVNF_RAM_Server ) + ( ACS / FirstVNF_Mem ) ) * ( Min( PN ,BR ) * ( FirstVNF_RAM_Server - RRS ) ) ) ,( ( ( RRS - ARS ) * ( Const * FirstVNF_CPU ) ) / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) / ( Min( ( Max( FirstVNF_RAM_Server,MRS ) * ( MRS * FirstVNF_CPU_Server ) ) ,Max( ( FirstVNF_RAM_Server + PN ),Max( FirstVNF_Mem_Server,RRS ) ) ) - ( ( Max( DDR,ACS ) - Min( RRS ,FirstVNF_Mem_Server ) ) + ( Max( CRS,FirstVNF_CPU ) / ( ARS - AMS ) ) ) ) ) ) ) )", "choosing": "Max( ( MUR + RRSe ),( ( MUC / MUR ) / Min( MUM ,( DS / MUM ) ) ) )", "obj1": 0.28679245283018867, "obj2": 0.575861214920146}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,( Min( Max( AMS,RRS ) ,( Const + FirstVNF_CPU_Server ) ) - MRS ) )", "choosing": "( ( ( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + DS ) * ( RMSe + MUC ) ) + Max( RRSe,CS ) )", "obj1": 0.07358490566037736, "obj2": 0.7940808453524227}, {"determining": "( ( Const + Const ) * Max( Max( ( AMS + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ),Min( Min( ACS ,( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * Min( BR ,FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ,( FirstVNF_Mem_Server - AMS ) ) ) )", "choosing": "( ( ( MUC + DS ) * ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,( Max( DS,MLU ) - Max( RRSe,CS ) ) ) )", "obj1": 0.09245283018867924, "obj2": 0.7766601972005001}, {"determining": "( ( Min( ( Min( Max( ( ( MDR / FirstVNF_CPU ) / Max( MDR,FirstVNF_CPU_Server ) ),( ( ARS - BR ) * ( MDR - FirstVNF_Mem ) ) ) ,( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) / Min( FirstVNF_CPU_Server ,Const ) ) - Min( Max( RRS,MDR ) ,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) * Max( ( ( ( FirstVNF_Mem_Server * MRS ) / ( ARS - FirstVNF_Mem_Server ) ) * Min( ( AMS + FirstVNF_Mem ) ,Min( DDR ,MRS ) ) ),( ( ( AMS / ACS ) / ( CRS - FirstVNF_RAM ) ) / ( Const + FirstVNF_CPU_Server ) ) ) ) ,( ( ( ( ( PN / ARS ) + Min( FirstVNF_Mem ,PN ) ) + ( Max( RRS,RRS ) + Min( FirstVNF_CPU_Server ,ACS ) ) ) - ( ( ( AMS - PN ) / ( ACS * AMS ) ) / ( Max( MDR,FirstVNF_RAM ) * Max( AMS,ACS ) ) ) ) / ( ( ( Min( FirstVNF_CPU_Server ,AMS ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) + ( Max( BR,BR ) * Min( ACS ,FirstVNF_CPU ) ) ) * ( ( ( ACS * ACS ) * Max( MRS,FirstVNF_CPU ) ) + ( Min( FirstVNF_CPU_Server ,MDR ) * ( ARS * ACS ) ) ) ) ) ) + ( Min( ( Max( ( Min( FirstVNF_RAM ,ARS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM / Const ) + Min( FirstVNF_RAM_Server ,PN ) ) ) + ( ( ( ARS - MDR ) * ( AMS / Const ) ) - ( ( CRS * ARS ) * ( MRS * FirstVNF_Mem_Server ) ) ) ) ,( ( ( ( ACS - MDR ) + ( CRS - FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_CPU_Server ,BR ) - ( MDR + BR ) ) ) - Min( ( ( FirstVNF_Mem_Server / AMS ) / ( FirstVNF_CPU * CRS ) ) ,Min( ( DDR + AMS ) ,Max( ARS,CRS ) ) ) ) ) - ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) - ( BR - RRS ) ) * ( ( FirstVNF_Mem_Server / CRS ) * ( ARS / CRS ) ) ) / ( ( Max( RRS,FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) / Min( ( MRS / MDR ) ,( PN * FirstVNF_Mem_Server ) ) ) ) / Max( ( ( ( BR / Const ) / ( Const / ACS ) ) + ( ( Const - FirstVNF_CPU ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ),Max( Min( Max( FirstVNF_CPU,BR ) ,( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ),Min( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,ACS ) ) ) ) ) ) ) + Min( ( ( ( ( ( Min( FirstVNF_CPU_Server ,Const ) + Min( ACS ,FirstVNF_Mem_Server ) ) + ( ( PN - ACS ) + ( RRS * Const ) ) ) + Max( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) * ( AMS * FirstVNF_RAM_Server ) ),( ( AMS - FirstVNF_CPU ) - ( Const / BR ) ) ) ) + Min( Min( Min( ( AMS / FirstVNF_Mem ) ,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ,( Max( ACS,FirstVNF_RAM ) + Max( DDR,PN ) ) ) ,( ( ( Const / MRS ) * ( FirstVNF_RAM + CRS ) ) / Min( ( FirstVNF_RAM_Server * ACS ) ,( MDR / RRS ) ) ) ) ) - ( Max( Min( Max( ( DDR + CRS ),( ARS / MRS ) ) ,Min( ( PN / MRS ) ,( FirstVNF_CPU_Server / PN ) ) ),( ( Max( AMS,FirstVNF_RAM_Server ) / Max( Const,PN ) ) + Min( ( FirstVNF_RAM - ARS ) ,( FirstVNF_RAM * AMS ) ) ) ) - Max( ( Min( ( AMS / ACS ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - ( ( PN / FirstVNF_CPU ) - ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ),( ( ( CRS * ACS ) * ( FirstVNF_CPU_Server + MDR ) ) / Max( Min( FirstVNF_CPU ,DDR ),Max( PN,AMS ) ) ) ) ) ) ,( ( ( ( ( ( MRS / BR ) + ( PN / AMS ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_Mem ),( ARS + ACS ) ) ) - ( ( ( FirstVNF_Mem_Server - CRS ) - ( FirstVNF_Mem_Server * DDR ) ) * Max( ( MRS * CRS ),( MDR + CRS ) ) ) ) * Min( Min( ( Min( RRS ,PN ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ,( ( FirstVNF_CPU + Const ) + ( FirstVNF_CPU + ACS ) ) ) ,Min( ( ( Const * MRS ) * ( CRS + MRS ) ) ,Max( Min( MDR ,MRS ),( RRS - FirstVNF_RAM ) ) ) ) ) * ( Min( ( ( ( CRS - FirstVNF_RAM_Server ) + ( ACS / FirstVNF_Mem ) ) * ( Min( PN ,BR ) * ( FirstVNF_RAM_Server - RRS ) ) ) ,( ( ( RRS - ARS ) * ( Const * FirstVNF_CPU ) ) / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) / ( Min( ( Max( FirstVNF_RAM_Server,MRS ) * ( MRS * FirstVNF_CPU_Server ) ) ,Max( ( FirstVNF_RAM_Server + PN ),Max( FirstVNF_Mem_Server,RRS ) ) ) - ( ( Max( DDR,ACS ) - Min( RRS ,FirstVNF_Mem_Server ) ) + ( Max( CRS,FirstVNF_CPU ) / ( ARS - AMS ) ) ) ) ) ) ) )", "choosing": "Max( ( Max( Min( MUR ,DS ),RCSe ) / ( Min( RMSe ,RMSe ) * DS ) ),( ( MUC / MUR ) / Min( MUM ,( DS / MUM ) ) ) )", "obj1": 0.2622641509433962, "obj2": 0.5956765498685777}, {"determining": "( ( Min( ( Min( Max( ( ( MDR / FirstVNF_CPU ) / Max( MDR,FirstVNF_CPU_Server ) ),( ( ARS - BR ) * ( MDR - FirstVNF_Mem ) ) ) ,( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) / Min( FirstVNF_CPU_Server ,Const ) ) - Min( Max( RRS,MDR ) ,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) * Max( ( ( ( FirstVNF_Mem_Server * MRS ) / ( ARS - FirstVNF_Mem_Server ) ) * Min( ( AMS + FirstVNF_Mem ) ,Min( DDR ,MRS ) ) ),( ( ( AMS / ACS ) / ( CRS - FirstVNF_RAM ) ) / ( Max( FirstVNF_Mem,CRS ) - ( Const / RRS ) ) ) ) ) ,( ( ( ( ( PN / ARS ) + Min( FirstVNF_Mem ,PN ) ) + ( Max( RRS,RRS ) + Min( FirstVNF_CPU_Server ,ACS ) ) ) - ( ( ( AMS - PN ) / ( ACS * AMS ) ) / ( Max( MDR,FirstVNF_RAM ) * Max( AMS,ACS ) ) ) ) / ( ( ( Min( FirstVNF_CPU_Server ,AMS ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) + ( Max( BR,BR ) * Min( ACS ,FirstVNF_CPU ) ) ) * ( ( ( ACS * ACS ) * Max( MRS,FirstVNF_CPU ) ) + ( Min( FirstVNF_CPU_Server ,MDR ) * ( ARS * ACS ) ) ) ) ) ) + ( Min( ( Max( ( Min( FirstVNF_RAM ,ARS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM / Const ) + Min( FirstVNF_RAM_Server ,PN ) ) ) + ( ( ( ARS - MDR ) * ( AMS / Const ) ) - ( ( CRS * ARS ) * ( MRS * FirstVNF_Mem_Server ) ) ) ) ,( ( ( ( ACS - MDR ) + ( CRS - FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_CPU_Server ,BR ) - ( MDR + BR ) ) ) - Min( ( ( FirstVNF_Mem_Server / AMS ) / ( FirstVNF_CPU * CRS ) ) ,Min( ( DDR + AMS ) ,Max( ARS,CRS ) ) ) ) ) - ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) - ( BR - RRS ) ) * ( ( FirstVNF_Mem_Server / CRS ) * ( ARS / CRS ) ) ) / ( ( Max( RRS,FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) / Min( ( MRS / MDR ) ,( PN * FirstVNF_Mem_Server ) ) ) ) / Max( ( ( ( BR / Const ) / ( Const / ACS ) ) + ( ( Const - FirstVNF_CPU ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ),Max( Min( Max( FirstVNF_CPU,BR ) ,( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ),Min( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,ACS ) ) ) ) ) ) ) + Min( ( ( ( ( ( Min( FirstVNF_CPU_Server ,Const ) + Min( ACS ,FirstVNF_Mem_Server ) ) + ( ( PN - ACS ) + ( RRS * Const ) ) ) + Max( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) * ( AMS * FirstVNF_RAM_Server ) ),( ( AMS - FirstVNF_CPU ) - ( Const / BR ) ) ) ) + Min( Min( Min( ( AMS / FirstVNF_Mem ) ,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ,( Max( ACS,FirstVNF_RAM ) + Max( DDR,PN ) ) ) ,( ( ( Const / MRS ) * ( FirstVNF_RAM + CRS ) ) / Min( ( FirstVNF_RAM_Server * ACS ) ,( MDR / RRS ) ) ) ) ) - ( Max( Min( Max( ( DDR + CRS ),( ARS / MRS ) ) ,Min( ( PN / MRS ) ,( FirstVNF_CPU_Server / PN ) ) ),( ( Max( AMS,FirstVNF_RAM_Server ) / Max( Const,PN ) ) + Min( ( FirstVNF_RAM - ARS ) ,( FirstVNF_RAM * AMS ) ) ) ) - Max( ( Min( ( AMS / ACS ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - ( ( PN / FirstVNF_CPU ) - ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ),( ( ( CRS * ACS ) * ( FirstVNF_CPU_Server + MDR ) ) / Max( Min( FirstVNF_CPU ,DDR ),Max( PN,AMS ) ) ) ) ) ) ,( ( ( ( ( ( MRS / BR ) + ( PN / AMS ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_Mem ),( ARS + ACS ) ) ) - ( ( ( FirstVNF_Mem_Server - CRS ) - ( FirstVNF_Mem_Server * DDR ) ) * Max( ( MRS * CRS ),( MDR + CRS ) ) ) ) * Min( Min( ( Min( RRS ,PN ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ,( ( FirstVNF_CPU + Const ) + ( FirstVNF_CPU + ACS ) ) ) ,Min( ( ( Const * MRS ) * ( CRS + MRS ) ) ,Max( Min( MDR ,MRS ),( RRS - FirstVNF_RAM ) ) ) ) ) * ( Min( ( ( ( CRS - FirstVNF_RAM_Server ) + ( ACS / FirstVNF_Mem ) ) * ( Min( PN ,BR ) * ( FirstVNF_RAM_Server - RRS ) ) ) ,( ( ( RRS - ARS ) * ( Const * FirstVNF_CPU ) ) / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) / ( Min( ( Max( FirstVNF_RAM_Server,MRS ) * ( MRS * FirstVNF_CPU_Server ) ) ,Max( ( FirstVNF_RAM_Server + PN ),Max( FirstVNF_Mem_Server,RRS ) ) ) - ( ( Max( DDR,ACS ) - Min( RRS ,FirstVNF_Mem_Server ) ) + ( Max( CRS,FirstVNF_CPU ) / ( ARS - AMS ) ) ) ) ) ) ) )", "choosing": "Max( ( MUR + RRSe ),( ( MUC / MUR ) / Min( MUM ,( DS / MUM ) ) ) )", "obj1": 0.2641509433962264, "obj2": 0.5920634604116176}, {"determining": "Max( Max( ( AMS + ( Min( ( Const + FirstVNF_CPU_Server ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),( AMS + Min( ACS ,MDR ) ) ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( ( ( MLU / MUM ) * ( Max( DS,MLU ) - Max( RRSe,CS ) ) ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.15660377358490565, "obj2": 0.7177196541296259}, {"determining": "Max( Max( ( AMS + Max( Min( Max( DDR,( Const + FirstVNF_CPU_Server ) ) ,AMS ),Max( FirstVNF_RAM,RRS ) ) ),( AMS + Min( ACS ,MDR ) ) ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( RRSe / DS ) * ( ( ( Min( MUC ,MUC ) + ( RRSe - MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,RCSe ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) ) )", "obj1": 0.06981132075471698, "obj2": 0.7988965944240042}, {"determining": "Min( Min( ( ( ARS - FirstVNF_CPU ) * MRS ) ,CRS ) ,( ( MDR + BR ) - CRS ) )", "choosing": "( Max( Min( MUR ,DS ),RCSe ) / ( Min( RMSe ,RMSe ) * DS ) )", "obj1": 0.17547169811320754, "obj2": 0.6870638979823729}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06037735849056604, "obj2": 0.8155790379467882}, {"determining": "Max( ( ( MDR + MDR ) - ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "Max( Min( MUC ,RMSe ),( ( ( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) ) + DS ) * MUC ) )", "obj1": 0.1509433962264151, "obj2": 0.7184946397573468}, {"determining": "( Min( CRS ,MDR ) / FirstVNF_Mem_Server )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06037735849056604, "obj2": 0.8155790379467882}, {"determining": "Min( Min( ( ( ARS - FirstVNF_CPU ) * MRS ) ,CRS ) ,( ( MDR + BR ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / Max( ( RCSe * RMSe ),Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.21132075471698114, "obj2": 0.6438134818958913}, {"determining": "Max( Max( ( AMS + ( ( CRS + ( RRS / FirstVNF_CPU ) ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + MUR ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.0830188679245283, "obj2": 0.7918225559144707}, {"determining": "( ( FirstVNF_RAM_Server + ( MDR + BR ) ) + ( CRS + ( RRS / FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM + MUM ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06037735849056604, "obj2": 0.8155790379467882}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),( AMS + Min( ACS ,MDR ) ) ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.062264150943396226, "obj2": 0.8131777984713038}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,Min( FirstVNF_Mem_Server ,AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( ( ( RRSe / MUM ) * ( Max( DS,MLU ) - Max( RRSe,CS ) ) ) + ( RRSe * RRSe ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.1320754716981132, "obj2": 0.740497918547406}, {"determining": "( ( Min( ( Min( Max( ( ( MDR / FirstVNF_CPU ) / Max( MDR,FirstVNF_CPU_Server ) ),( ( ARS - BR ) * ( MDR - FirstVNF_Mem ) ) ) ,( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) / Min( FirstVNF_CPU_Server ,Const ) ) - Min( Max( RRS,MDR ) ,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) * Max( ( ( ( FirstVNF_Mem_Server * MRS ) / ( ARS - FirstVNF_Mem_Server ) ) * Min( ( AMS + FirstVNF_Mem ) ,Min( DDR ,MRS ) ) ),( ( ( AMS / ACS ) / ( CRS - FirstVNF_RAM ) ) / ( Max( FirstVNF_Mem,CRS ) - ( Const / RRS ) ) ) ) ) ,( ( ( ( ( PN / ARS ) + Min( FirstVNF_Mem ,PN ) ) + ( Max( RRS,RRS ) + Min( FirstVNF_CPU_Server ,ACS ) ) ) - ( ( ( AMS - PN ) / ( ACS * AMS ) ) / ( Max( MDR,FirstVNF_RAM ) * Max( AMS,ACS ) ) ) ) / ( ( ( Min( FirstVNF_CPU_Server ,AMS ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) + ( Max( BR,BR ) * Min( ACS ,FirstVNF_CPU ) ) ) * ( ( ( ACS * ACS ) * Max( MRS,FirstVNF_CPU ) ) + ( Min( FirstVNF_CPU_Server ,MDR ) * ( ARS * ACS ) ) ) ) ) ) + ( Min( ( Max( ( Min( FirstVNF_RAM ,ARS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM / Const ) + Min( FirstVNF_RAM_Server ,PN ) ) ) + ( ( ( ARS - MDR ) * ( AMS / Const ) ) - ( ( CRS * ARS ) * ( MRS * FirstVNF_Mem_Server ) ) ) ) ,( ( ( ( ACS - MDR ) + ( CRS - FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_CPU_Server ,BR ) - ( MDR + BR ) ) ) - Min( ( ( FirstVNF_Mem_Server / AMS ) / ( FirstVNF_CPU * CRS ) ) ,Min( ( DDR + AMS ) ,Max( ARS,CRS ) ) ) ) ) - ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) - ( BR - RRS ) ) * ( ( FirstVNF_Mem_Server / CRS ) * ( ARS / CRS ) ) ) / ( ( Max( RRS,FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) / Min( ( MRS / MDR ) ,( PN * FirstVNF_Mem_Server ) ) ) ) / Max( ( ( ( BR / Const ) / ( Const / ACS ) ) + ( ( Const - FirstVNF_CPU ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ),Max( Min( Max( FirstVNF_CPU,BR ) ,( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ),Min( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,ACS ) ) ) ) ) ) ) + Min( ( ( ( ( ( Min( FirstVNF_CPU_Server ,Const ) + Min( ACS ,FirstVNF_Mem_Server ) ) + ( ( PN - ACS ) + ( RRS * Const ) ) ) + Max( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) * ( AMS * FirstVNF_RAM_Server ) ),( ( AMS - FirstVNF_CPU ) - ( Const / BR ) ) ) ) + Min( Min( Min( ( AMS / FirstVNF_Mem ) ,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ,( Max( ACS,FirstVNF_RAM ) + Max( DDR,PN ) ) ) ,( ( ( Const / MRS ) * ( FirstVNF_RAM + CRS ) ) / Min( ( FirstVNF_RAM_Server * ACS ) ,( MDR / RRS ) ) ) ) ) - ( Max( Min( Max( ( DDR + CRS ),( ARS / MRS ) ) ,Min( ( PN / MRS ) ,( FirstVNF_CPU_Server / PN ) ) ),( ( Max( AMS,FirstVNF_RAM_Server ) / Max( Const,PN ) ) + Min( ( FirstVNF_RAM - ARS ) ,( FirstVNF_RAM * AMS ) ) ) ) - Max( ( Min( ( AMS / ACS ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - ( ( PN / FirstVNF_CPU ) - ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ),( ( ( CRS * ACS ) * ( FirstVNF_CPU_Server + MDR ) ) / Max( Min( FirstVNF_CPU ,DDR ),Max( PN,AMS ) ) ) ) ) ) ,Min( Max( AMS,RRS ) ,( Const + FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( MUR + RRSe ),( ( MUC / MUR ) / Min( MUM ,( DS / MUM ) ) ) )", "obj1": 0.28679245283018867, "obj2": 0.575861214920146}, {"determining": "( ( Min( ( Min( Max( ( ( MDR / FirstVNF_CPU ) / Max( MDR,FirstVNF_CPU_Server ) ),( ( ARS - BR ) * ( MDR - FirstVNF_Mem ) ) ) ,( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) / Min( FirstVNF_CPU_Server ,Const ) ) - Min( Max( RRS,MDR ) ,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) * Max( ( ( ( FirstVNF_Mem_Server * MRS ) / ( ARS - FirstVNF_Mem_Server ) ) * Min( ( AMS + FirstVNF_Mem ) ,Min( DDR ,MRS ) ) ),( ( ( AMS / ACS ) / ( CRS - FirstVNF_RAM ) ) / ( Max( FirstVNF_Mem,CRS ) - ( Const / RRS ) ) ) ) ) ,( ( ( ( ( PN / ARS ) + Min( FirstVNF_Mem ,PN ) ) + ( Max( RRS,RRS ) + Min( FirstVNF_CPU_Server ,ACS ) ) ) - ( ( ( AMS - PN ) / ( ACS * AMS ) ) / ( Max( MDR,FirstVNF_RAM ) * Max( AMS,ACS ) ) ) ) / ( ( ( Min( FirstVNF_CPU_Server ,AMS ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) + ( Max( BR,BR ) * Min( ACS ,FirstVNF_CPU ) ) ) * ( ( ( ACS * ACS ) * Max( MRS,FirstVNF_CPU ) ) + ( Min( FirstVNF_CPU_Server ,MDR ) * ( ARS * ACS ) ) ) ) ) ) + ( Min( ( Max( ( Min( FirstVNF_RAM ,ARS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM / Const ) + Min( FirstVNF_RAM_Server ,PN ) ) ) + ( ( ( ARS - MDR ) * ( AMS / Const ) ) - ( ( CRS * ARS ) * ( MRS * FirstVNF_Mem_Server ) ) ) ) ,( ( ( ( ACS - MDR ) + ( CRS - FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_CPU_Server ,BR ) - ( MDR + BR ) ) ) - Min( ( ( FirstVNF_Mem_Server / AMS ) / ( FirstVNF_CPU * CRS ) ) ,Min( ( DDR + AMS ) ,Max( ARS,CRS ) ) ) ) ) - ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) - ( BR - RRS ) ) * ( ( FirstVNF_Mem_Server / CRS ) * ( ARS / CRS ) ) ) / ( ( Max( RRS,FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) / Min( ( MRS / MDR ) ,( PN * FirstVNF_Mem_Server ) ) ) ) / Max( ( ( ( BR / Const ) / ( Const / ACS ) ) + ( ( Const - FirstVNF_CPU ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ),Max( Min( Max( FirstVNF_CPU,BR ) ,( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ),Min( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,ACS ) ) ) ) ) ) ) + Min( ( ( ( ( ( Min( FirstVNF_CPU_Server ,Const ) + Min( ACS ,FirstVNF_Mem_Server ) ) + ( ( PN - ACS ) + ( RRS * Const ) ) ) + Max( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) * ( AMS * FirstVNF_RAM_Server ) ),( ( AMS - FirstVNF_CPU ) - ( Const / BR ) ) ) ) + Min( Min( Min( ( AMS / FirstVNF_Mem ) ,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ,( Max( ACS,FirstVNF_RAM ) + Max( DDR,PN ) ) ) ,( ( ( Const / MRS ) * ( FirstVNF_RAM + CRS ) ) / Min( ( FirstVNF_RAM_Server * ACS ) ,( MDR / RRS ) ) ) ) ) - ( Max( Min( Max( ( DDR + CRS ),( ARS / MRS ) ) ,Min( ( PN / MRS ) ,( FirstVNF_CPU_Server / PN ) ) ),( ( Max( AMS,FirstVNF_RAM_Server ) / Max( Const,PN ) ) + Min( ( FirstVNF_RAM - ARS ) ,( FirstVNF_RAM * AMS ) ) ) ) - Max( ( Min( ( AMS / ACS ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - ( ( PN / FirstVNF_CPU ) - ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ),( ( ( CRS * ACS ) * ( FirstVNF_CPU_Server + MDR ) ) / Max( Min( FirstVNF_CPU ,DDR ),Max( PN,AMS ) ) ) ) ) ) ,( ( ( ( ( ( MRS / BR ) + ( PN / AMS ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_Mem ),( ARS + ACS ) ) ) - ( ( ( FirstVNF_Mem_Server - CRS ) - ( FirstVNF_Mem_Server * DDR ) ) * Max( ( MRS * CRS ),( MDR + CRS ) ) ) ) * Min( Min( ( Min( RRS ,PN ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ,( ( FirstVNF_CPU + Const ) + ( FirstVNF_CPU + ACS ) ) ) ,Min( ( ( Const * MRS ) * ( CRS + MRS ) ) ,Max( Min( MDR ,MRS ),( RRS - FirstVNF_RAM ) ) ) ) ) * ( Min( ( ( ( CRS - FirstVNF_RAM_Server ) + ( ACS / FirstVNF_Mem ) ) * ( Min( PN ,BR ) * ( FirstVNF_RAM_Server - RRS ) ) ) ,( ( ( RRS - ARS ) * ( Const * FirstVNF_CPU ) ) / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) / ( Min( ( Max( FirstVNF_RAM_Server,MRS ) * ( MRS * FirstVNF_CPU_Server ) ) ,Max( ( FirstVNF_RAM_Server + PN ),Max( FirstVNF_Mem_Server,RRS ) ) ) - ( ( Max( DDR,ACS ) - Min( RRS ,FirstVNF_Mem_Server ) ) + ( Max( CRS,FirstVNF_CPU ) / ( ARS - AMS ) ) ) ) ) ) ) )", "choosing": "Max( ( MUR + RRSe ),( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / MUR ) / Min( MUM ,( DS / MUM ) ) ) )", "obj1": 0.27735849056603773, "obj2": 0.5853012252664068}, {"determining": "Min( ( ARS - FirstVNF_CPU ) ,( ( MDR + BR ) - CRS ) )", "choosing": "( ( ( MUC + DS ) * ( ( Min( Max( RRSe,CS ) ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.16792452830188678, "obj2": 0.7073581850336803}, {"determining": "Min( Min( ( ( ARS - FirstVNF_CPU ) * MRS ) ,CRS ) ,( ( MDR * BR ) - CRS ) )", "choosing": "( ( ( RCSe + DS ) * ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.17735849056603772, "obj2": 0.6748472286230803}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.0660377358490566, "obj2": 0.8032718896837286}, {"determining": "( ( Min( ( Min( Max( ( ( MDR / FirstVNF_CPU ) / Max( MDR,FirstVNF_CPU_Server ) ),( ( ARS - BR ) * ( MDR - FirstVNF_Mem ) ) ) ,( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) / Min( FirstVNF_CPU_Server ,Const ) ) - Min( Max( RRS,MDR ) ,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) * Max( ( ( ( FirstVNF_Mem_Server * MRS ) / ( ARS - FirstVNF_Mem_Server ) ) * Min( ( AMS + FirstVNF_Mem ) ,Min( DDR ,MRS ) ) ),( ( ( AMS / ACS ) / ( CRS - FirstVNF_RAM ) ) / ( Max( FirstVNF_Mem,CRS ) - ( Const / RRS ) ) ) ) ) ,( ( ( ( ( PN / ARS ) + Min( FirstVNF_Mem ,PN ) ) + ( Max( RRS,RRS ) + Min( FirstVNF_CPU_Server ,ACS ) ) ) - ( ( ( AMS - PN ) / ( ACS * AMS ) ) / ( Max( MDR,FirstVNF_RAM ) * Max( AMS,ACS ) ) ) ) / ( ( ( Min( FirstVNF_CPU_Server ,AMS ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) + ( Max( BR,BR ) * Min( ACS ,FirstVNF_CPU ) ) ) * ( ( ( ACS * ACS ) * Max( MRS,FirstVNF_CPU ) ) + ( Min( FirstVNF_CPU_Server ,MDR ) * ( ARS * ACS ) ) ) ) ) ) + ( Min( ( Max( ( Min( FirstVNF_RAM ,ARS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM / Const ) + Min( FirstVNF_RAM_Server ,PN ) ) ) + ( ( ( ARS - MDR ) * ( AMS / Const ) ) - ( ( CRS * ARS ) * ( MRS * FirstVNF_Mem_Server ) ) ) ) ,( ( ( ( ACS - MDR ) + ( CRS - FirstVNF_RAM_Server ) ) - ( Min( FirstVNF_CPU_Server ,BR ) - ( MDR + BR ) ) ) - Min( ( ( FirstVNF_Mem_Server / AMS ) / ( FirstVNF_CPU * CRS ) ) ,Min( ( DDR + AMS ) ,Max( ARS,CRS ) ) ) ) ) - ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) - ( BR - RRS ) ) * ( ( FirstVNF_Mem_Server / CRS ) * ( ARS / CRS ) ) ) / ( ( Max( RRS,FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) / Min( ( MRS / MDR ) ,( PN * FirstVNF_Mem_Server ) ) ) ) / Max( ( ( ( BR / Const ) / ( Const / ACS ) ) + ( ( Const - FirstVNF_CPU ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ),Max( Min( Max( FirstVNF_CPU,BR ) ,( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ),Min( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,ACS ) ) ) ) ) ) ) + Min( ( ( ( ( ( Min( FirstVNF_CPU_Server ,Const ) + Min( ACS ,FirstVNF_Mem_Server ) ) + ( ( PN - ACS ) + ( RRS * Const ) ) ) + Max( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) * ( AMS * FirstVNF_RAM_Server ) ),( ( AMS - FirstVNF_CPU ) - ( Const / BR ) ) ) ) + Min( Min( Min( ( AMS / FirstVNF_Mem ) ,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ,( Max( ACS,FirstVNF_RAM ) + Max( DDR,PN ) ) ) ,( ( ( Const / MRS ) * ( FirstVNF_RAM + CRS ) ) / Min( ( FirstVNF_RAM_Server * ACS ) ,( MDR / RRS ) ) ) ) ) - ( Max( Min( Max( ( DDR + CRS ),( ARS / MRS ) ) ,Min( ( PN / MRS ) ,( FirstVNF_CPU_Server / PN ) ) ),( ( Max( AMS,FirstVNF_RAM_Server ) / Max( Const,PN ) ) + Min( ( FirstVNF_RAM - ARS ) ,( FirstVNF_RAM * AMS ) ) ) ) - Max( ( Min( ( AMS / ACS ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - ( ( PN / FirstVNF_CPU ) - ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ),( ( ( CRS * ACS ) * ( FirstVNF_CPU_Server + MDR ) ) / Max( Min( FirstVNF_CPU ,DDR ),Max( PN,AMS ) ) ) ) ) ) ,( ( ( ( ( ( MRS / BR ) + ( PN / AMS ) ) + Max( ( FirstVNF_CPU_Server + FirstVNF_Mem ),( ARS + ACS ) ) ) - ( ( ( FirstVNF_Mem_Server - CRS ) - ( FirstVNF_Mem_Server * DDR ) ) * Max( ( MRS * CRS ),( MDR + CRS ) ) ) ) * Min( Min( ( Min( RRS ,PN ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ,( ( FirstVNF_CPU + Const ) + ( FirstVNF_CPU + ACS ) ) ) ,Min( ( ( Const * MRS ) * ( CRS + MRS ) ) ,Max( Min( MDR ,MRS ),( RRS - FirstVNF_RAM ) ) ) ) ) * ( Min( ( ( ( CRS - FirstVNF_RAM_Server ) + ( ACS / FirstVNF_Mem ) ) * ( Min( PN ,BR ) * ( FirstVNF_RAM_Server - RRS ) ) ) ,( ( ( RRS - ARS ) * ( Const * FirstVNF_CPU ) ) / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) / ( Min( ( Max( FirstVNF_RAM_Server,MRS ) * ( MRS * FirstVNF_CPU_Server ) ) ,Max( ( FirstVNF_RAM_Server + PN ),Max( FirstVNF_Mem_Server,RRS ) ) ) - ( ( Max( DDR,ACS ) - Min( RRS ,FirstVNF_Mem_Server ) ) + ( Max( CRS,FirstVNF_CPU ) / ( ARS - AMS ) ) ) ) ) ) ) )", "choosing": "( ( DS * Min( RMSe ,( ( RRSe / MUM ) * ( Max( DS,DS ) - Max( RRSe,RMSe ) ) ) ) ) / Min( MLU ,MUR ) )", "obj1": 0.24716981132075472, "obj2": 0.6167632295937994}], "7": [{"determining": "( ( AMS + MDR ) - ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + MUR ) * ( MUM / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06415094339622641, "obj2": 0.805777309085478}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06415094339622641, "obj2": 0.805777309085478}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06037735849056604, "obj2": 0.8155790379467882}, {"determining": "( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,MDR ) / FirstVNF_RAM )", "choosing": "( ( RRSe / DS ) * ( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) ) )", "obj1": 0.06981132075471698, "obj2": 0.7988965944240042}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.0660377358490566, "obj2": 0.8032718896837286}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06037735849056604, "obj2": 0.8155790379467882}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06037735849056604, "obj2": 0.8155790379467882}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,( Min( Max( AMS,RRS ) ,( Const + FirstVNF_CPU_Server ) ) - MRS ) )", "choosing": "( ( ( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + DS ) * ( RMSe + MUC ) ) + Max( RRSe,CS ) )", "obj1": 0.07358490566037736, "obj2": 0.7940808453524227}, {"determining": "Max( Max( AMS,( AMS + Min( ACS ,MDR ) ) ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( ( ( RRSe / MUM ) * ( Max( DS,MLU ) - Max( RRSe,CS ) ) ) + ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.09811320754716982, "obj2": 0.767210026177164}, {"determining": "Min( Min( ( ( ARS - FirstVNF_CPU ) * MRS ) ,CRS ) ,MDR )", "choosing": "( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( Max( Min( DS ,RCSe ),MLU ) ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) )", "obj1": 0.1339622641509434, "obj2": 0.7385810906417783}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,( Min( Max( AMS,RRS ) ,( Const + FirstVNF_CPU_Server ) ) - MRS ) )", "choosing": "( ( ( ( ( Min( MUC ,MUC ) + ( RRSe + MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + DS ) * ( RMSe + MUC ) ) + Max( RRSe,CS ) )", "obj1": 0.07358490566037736, "obj2": 0.7940808453524227}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.0660377358490566, "obj2": 0.8032718896837286}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + MRS ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),( AMS + Min( ACS ,MDR ) ) ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( ( ( RRSe / MUM ) * ( Max( DS,MLU ) - Max( RRSe,CS ) ) ) + ( RRSe * MUM ) ) / ( ( ( MUC * CS ) + ( MUM * RRSe ) ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.10377358490566038, "obj2": 0.743967369039586}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,( Min( Max( AMS,RRS ) ,( Const + FirstVNF_CPU_Server ) ) - MRS ) )", "choosing": "( ( ( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + DS ) * ( RMSe + MUC ) ) + Max( RRSe,CS ) )", "obj1": 0.07358490566037736, "obj2": 0.7940808453524227}, {"determining": "( ( Const + Const ) * Max( Max( ( AMS + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ),Min( Min( ACS ,( ( Min( ( Const + FirstVNF_RAM ) ,( Const * RRS ) ) - ( ( DDR * CRS ) * Min( BR ,FirstVNF_CPU ) ) ) - ( ( ( ARS + FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) / ( Min( RRS ,MRS ) + Max( FirstVNF_RAM,ACS ) ) ) ) ) ,( FirstVNF_Mem_Server - AMS ) ) ) )", "choosing": "( ( ( MUC + DS ) * ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,( Max( DS,MLU ) - Max( RRSe,CS ) ) ) )", "obj1": 0.09245283018867924, "obj2": 0.7766601972005001}, {"determining": "Max( Max( ( AMS + Max( Min( Max( DDR,( Const + FirstVNF_CPU_Server ) ) ,AMS ),Max( FirstVNF_RAM,RRS ) ) ),( AMS + Min( ACS ,MDR ) ) ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( RRSe / DS ) * ( ( ( Min( MUC ,MUC ) + ( RRSe - MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,RCSe ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) ) )", "obj1": 0.06981132075471698, "obj2": 0.7988965944240042}, {"determining": "Min( Min( ( ( ARS - FirstVNF_CPU ) * MRS ) ,CRS ) ,( ( MDR + BR ) - CRS ) )", "choosing": "( Max( Min( MUR ,DS ),RCSe ) / ( Min( RMSe ,RMSe ) * DS ) )", "obj1": 0.17547169811320754, "obj2": 0.6870638979823729}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06037735849056604, "obj2": 0.8155790379467882}, {"determining": "( Min( CRS ,MDR ) / FirstVNF_Mem_Server )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06037735849056604, "obj2": 0.8155790379467882}, {"determining": "( ( FirstVNF_RAM_Server + ( MDR + BR ) ) + ( CRS + ( RRS / FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM + MUM ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06037735849056604, "obj2": 0.8155790379467882}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),( AMS + Min( ACS ,MDR ) ) ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.062264150943396226, "obj2": 0.8131777984713038}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,Min( FirstVNF_Mem_Server ,AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( ( ( RRSe / MUM ) * ( Max( DS,MLU ) - Max( RRSe,CS ) ) ) + ( RRSe * RRSe ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.1320754716981132, "obj2": 0.740497918547406}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.0660377358490566, "obj2": 0.8032718896837286}, {"determining": "Min( Min( ( ( ARS - FirstVNF_CPU ) * MRS ) ,CRS ) ,( ( MDR + BR ) - CRS ) )", "choosing": "( Max( Min( MUR ,DS ),RCSe ) / ( Min( RMSe ,RMSe ) * DS ) )", "obj1": 0.17547169811320754, "obj2": 0.6870638979823729}, {"determining": "( ( ( MDR / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) / ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * ( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06037735849056604, "obj2": 0.8155790379467882}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,( Min( Max( AMS,RRS ) ,( Const + FirstVNF_CPU_Server ) ) - MRS ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06037735849056604, "obj2": 0.8155790379467882}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + DS ) * ( RMSe + MUC ) ) + Max( RRSe,CS ) )", "obj1": 0.07358490566037736, "obj2": 0.7940808453524227}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06037735849056604, "obj2": 0.8155790379467882}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( ( ( RRSe / MUM ) * ( Max( DS,MLU ) - Max( RRSe,CS ) ) ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.1320754716981132, "obj2": 0.740497918547406}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + Max( FirstVNF_RAM,RRS ) ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( ( ( RRSe / MUM ) * ( Max( DS,MLU ) - Max( RRSe,CS ) ) ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,DS ) )", "obj1": 0.13584905660377358, "obj2": 0.7371535075316502}, {"determining": "Max( Max( ( AMS + ( Min( ( Const + FirstVNF_CPU_Server ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),( AMS + Min( ACS ,MDR ) ) ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( ( ( RRSe / MUM ) * ( Max( DS,MLU ) - Max( RRSe,CS ) ) ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.1320754716981132, "obj2": 0.740497918547406}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,( Min( Max( AMS,RRS ) ,( Const + FirstVNF_CPU_Server ) ) - MRS ) )", "choosing": "( ( ( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + DS ) * ( RMSe + MUC ) ) + Max( RRSe,CS ) )", "obj1": 0.07358490566037736, "obj2": 0.7940808453524227}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06037735849056604, "obj2": 0.8155790379467882}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06037735849056604, "obj2": 0.8155790379467882}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06037735849056604, "obj2": 0.8155790379467882}, {"determining": "Min( ( ARS - FirstVNF_CPU ) ,( ( MDR + BR ) - CRS ) )", "choosing": "( ( ( MUC + DS ) * ( ( Min( Max( RRSe,CS ) ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.1660377358490566, "obj2": 0.694110058427744}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + DS ) * ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.09056603773584905, "obj2": 0.7777015162701244}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + DS ) * ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.09056603773584905, "obj2": 0.7777015162701244}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,( MRS - MRS ) )", "choosing": "Max( Min( MUC ,RMSe ),( ( ( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) ) + DS ) * MUC ) )", "obj1": 0.08679245283018867, "obj2": 0.7797101844354503}, {"determining": "Max( Max( AMS,( AMS + Min( ACS ,MDR ) ) ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( ( ( RRSe / MUM ) * ( Max( DS,MLU ) - Max( RRSe,CS ) ) ) + ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.09811320754716982, "obj2": 0.767210026177164}, {"determining": "Min( Min( ( ( ARS - FirstVNF_CPU ) * MRS ) ,CRS ) ,( ( MDR + BR ) - CRS ) )", "choosing": "( ( ( MUC + DS ) * ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.14150943396226415, "obj2": 0.7128211993716089}, {"determining": "( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,Max( Max( AMS,( AMS + Min( ACS ,MDR ) ) ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) / FirstVNF_RAM )", "choosing": "( ( ( ( ( RRSe / MUM ) * ( Max( DS,MLU ) - Max( RRSe,CS ) ) ) + ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) ) / DS ) * ( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) ) )", "obj1": 0.07924528301886792, "obj2": 0.7839258590682741}, {"determining": "Max( Max( AMS,( AMS + Min( ACS ,MDR ) ) ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( RRSe / DS ) * ( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) ) )", "obj1": 0.06981132075471698, "obj2": 0.7988965944240042}, {"determining": "( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,MDR ) / FirstVNF_Mem_Server )", "choosing": "( ( ( MUM + DS ) * ( ( ( ( RRSe / MUR ) * ( Max( DS,MLU ) - Max( RRSe,CS ) ) ) + ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.09811320754716982, "obj2": 0.767210026177164}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.0660377358490566, "obj2": 0.8032718896837286}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,( Min( Max( AMS,RRS ) ,( Const + FirstVNF_CPU_Server ) ) - MRS ) )", "choosing": "( ( ( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + DS ) * ( RMSe + MUC ) ) + Max( RRSe,CS ) )", "obj1": 0.07358490566037736, "obj2": 0.7940808453524227}, {"determining": "( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,MDR ) / FirstVNF_RAM )", "choosing": "( ( RRSe / DS ) * ( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,MLU ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) ) )", "obj1": 0.06981132075471698, "obj2": 0.7988965944240042}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( RRSe / DS ) * ( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,RCSe ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) ) )", "obj1": 0.06792452830188679, "obj2": 0.800759909754145}, {"determining": "Max( ( ( MDR + MDR ) - ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ),Min( Max( ACS,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( DS * Min( RMSe ,( ( RRSe / MUM ) * ( Max( DS,DS ) - Max( RRSe,RRSe ) ) ) ) ) / Min( MLU ,MUR ) )", "obj1": 0.15660377358490565, "obj2": 0.711051728696267}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06415094339622641, "obj2": 0.805777309085478}], "8": [{"determining": "( ( AMS + MDR ) - ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + MUR ) * ( MUM / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06415094339622641, "obj2": 0.805777309085478}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06415094339622641, "obj2": 0.805777309085478}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06037735849056604, "obj2": 0.8155790379467882}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.0660377358490566, "obj2": 0.8032718896837286}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06037735849056604, "obj2": 0.8155790379467882}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06037735849056604, "obj2": 0.8155790379467882}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.0660377358490566, "obj2": 0.8032718896837286}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06037735849056604, "obj2": 0.8155790379467882}, {"determining": "( Min( CRS ,MDR ) / FirstVNF_Mem_Server )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06037735849056604, "obj2": 0.8155790379467882}, {"determining": "( ( FirstVNF_RAM_Server + ( MDR + BR ) ) + ( CRS + ( RRS / FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM + MUM ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06037735849056604, "obj2": 0.8155790379467882}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),( AMS + Min( ACS ,MDR ) ) ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.062264150943396226, "obj2": 0.8131777984713038}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.0660377358490566, "obj2": 0.8032718896837286}, {"determining": "( ( ( MDR / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) / ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * ( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06037735849056604, "obj2": 0.8155790379467882}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,( Min( Max( AMS,RRS ) ,( Const + FirstVNF_CPU_Server ) ) - MRS ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06037735849056604, "obj2": 0.8155790379467882}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06037735849056604, "obj2": 0.8155790379467882}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06037735849056604, "obj2": 0.8155790379467882}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06037735849056604, "obj2": 0.8155790379467882}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06037735849056604, "obj2": 0.8155790379467882}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.0660377358490566, "obj2": 0.8032718896837286}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( RRSe / DS ) * ( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,RCSe ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) ) )", "obj1": 0.06792452830188679, "obj2": 0.800759909754145}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06415094339622641, "obj2": 0.805777309085478}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06037735849056604, "obj2": 0.8155790379467882}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06037735849056604, "obj2": 0.8155790379467882}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,ARS ) ) ),FirstVNF_Mem_Server ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + DS ) * ( ( Min( RMSe ,MUC ) + ( CS * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06415094339622641, "obj2": 0.805777309085478}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.0660377358490566, "obj2": 0.8032718896837286}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),( AMS + Min( ACS ,MDR ) ) ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.062264150943396226, "obj2": 0.8131777984713038}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06037735849056604, "obj2": 0.8155790379467882}, {"determining": "Max( Max( AMS,( AMS + Min( ACS ,MDR ) ) ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06037735849056604, "obj2": 0.8155790379467882}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06037735849056604, "obj2": 0.8155790379467882}, {"determining": "Max( Max( ( AMS + Max( Min( Max( DDR,( Const + FirstVNF_CPU_Server ) ) ,AMS ),Max( FirstVNF_RAM,RRS ) ) ),( AMS + Min( ACS ,MDR ) ) ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06037735849056604, "obj2": 0.8155790379467882}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06037735849056604, "obj2": 0.8155790379467882}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06037735849056604, "obj2": 0.8155790379467882}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06037735849056604, "obj2": 0.8155790379467882}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06037735849056604, "obj2": 0.8155790379467882}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06037735849056604, "obj2": 0.8155790379467882}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06037735849056604, "obj2": 0.8155790379467882}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,( Min( Max( AMS,RRS ) ,( Const + FirstVNF_CPU_Server ) ) - MRS ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06037735849056604, "obj2": 0.8155790379467882}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.0660377358490566, "obj2": 0.8032718896837286}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + MRS ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),( AMS + Min( ACS ,MDR ) ) ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06037735849056604, "obj2": 0.8155790379467882}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06037735849056604, "obj2": 0.8155790379467882}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06037735849056604, "obj2": 0.8155790379467882}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06037735849056604, "obj2": 0.8155790379467882}, {"determining": "Max( Max( ( AMS + ( Min( ( DDR - ( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( CS + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06037735849056604, "obj2": 0.8155790379467882}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,Min( FirstVNF_Mem_Server ,AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,MUR ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06037735849056604, "obj2": 0.8155790379467882}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06037735849056604, "obj2": 0.8155790379467882}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06415094339622641, "obj2": 0.805777309085478}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,( MRS - MRS ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.0660377358490566, "obj2": 0.8032718896837286}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06037735849056604, "obj2": 0.8155790379467882}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.0660377358490566, "obj2": 0.8032718896837286}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.0660377358490566, "obj2": 0.8032718896837286}], "9": [{"determining": "( ( AMS + MDR ) - ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + MUR ) * ( MUM / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06415094339622641, "obj2": 0.805777309085478}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06415094339622641, "obj2": 0.805777309085478}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.0660377358490566, "obj2": 0.8032718896837286}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.0660377358490566, "obj2": 0.8032718896837286}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.0660377358490566, "obj2": 0.8032718896837286}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.0660377358490566, "obj2": 0.8032718896837286}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( RRSe / DS ) * ( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,RCSe ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) ) )", "obj1": 0.06792452830188679, "obj2": 0.800759909754145}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06415094339622641, "obj2": 0.805777309085478}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,ARS ) ) ),FirstVNF_Mem_Server ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + DS ) * ( ( Min( RMSe ,MUC ) + ( CS * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06415094339622641, "obj2": 0.805777309085478}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.0660377358490566, "obj2": 0.8032718896837286}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.0660377358490566, "obj2": 0.8032718896837286}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06415094339622641, "obj2": 0.805777309085478}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,( MRS - MRS ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.0660377358490566, "obj2": 0.8032718896837286}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.0660377358490566, "obj2": 0.8032718896837286}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.0660377358490566, "obj2": 0.8032718896837286}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * ACS ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Max( MLU,CS ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.1018867924528302, "obj2": 0.778272654140776}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Max( ( ACS - ACS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) / Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.0660377358490566, "obj2": 0.8032718896837286}, {"determining": "Max( Max( Min( DDR ,( Const + FirstVNF_CPU_Server ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.14150943396226415, "obj2": 0.7580127972022807}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,( MRS - MRS ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.0660377358490566, "obj2": 0.8032718896837286}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06415094339622641, "obj2": 0.805777309085478}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.0660377358490566, "obj2": 0.8032718896837286}, {"determining": "( ( Min( ( ( ( Max( ( BR * ACS ),Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) + ( Max( ACS,PN ) * ( FirstVNF_RAM / MRS ) ) ) / Min( Max( ( PN / FirstVNF_CPU_Server ),( MDR / FirstVNF_Mem_Server ) ) ,( ( BR - DDR ) * Min( ACS ,MDR ) ) ) ) * ( ( ( Max( RRS,Const ) * ( ARS + ARS ) ) / Min( Max( MDR,MRS ) ,( FirstVNF_CPU - CRS ) ) ) + ( ( Min( AMS ,FirstVNF_CPU_Server ) / ( FirstVNF_Mem + ACS ) ) * Max( Max( DDR,FirstVNF_RAM_Server ),( FirstVNF_CPU - PN ) ) ) ) ) ,( ( Max( ( Min( MDR ,RRS ) * ( FirstVNF_RAM_Server - DDR ) ),( ( PN / DDR ) / Min( PN ,FirstVNF_RAM_Server ) ) ) / ( Max( ( MDR * ACS ),( AMS * FirstVNF_Mem_Server ) ) - ( Min( RRS ,AMS ) - ( FirstVNF_RAM / ACS ) ) ) ) + Max( ( Min( ( DDR / Const ) ,( DDR * MDR ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) * Min( FirstVNF_CPU_Server ,Const ) ) ),( ( ( ACS - ARS ) * ( RRS * PN ) ) * ( Max( ACS,FirstVNF_RAM ) / ( MRS - FirstVNF_CPU ) ) ) ) ) ) / ( Min( ( ( Min( Min( MRS ,FirstVNF_RAM ) ,( BR + AMS ) ) - ( ( FirstVNF_Mem - DDR ) / ( Const / ACS ) ) ) / ( ( Min( DDR ,ACS ) / ( PN - DDR ) ) / Max( ( PN * DDR ),( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) ) ,( ( ( ( FirstVNF_CPU + MDR ) + Max( ARS,AMS ) ) / ( ( CRS - FirstVNF_Mem_Server ) * Max( FirstVNF_RAM,CRS ) ) ) * ( ( ( MDR + DDR ) + ( FirstVNF_CPU_Server / AMS ) ) - ( ( Const + RRS ) / ( FirstVNF_RAM_Server - MDR ) ) ) ) ) + ( Min( ( ( ( MRS / BR ) / ( MDR * ACS ) ) + ( Max( FirstVNF_CPU_Server,PN ) + ( DDR / PN ) ) ) ,( Min( ( DDR * DDR ) ,Min( FirstVNF_CPU ,AMS ) ) * Max( ( RRS + Const ),( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) + Max( ( ( Max( DDR,FirstVNF_RAM ) - Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) - ( Max( ACS,Const ) + ( FirstVNF_Mem_Server * AMS ) ) ),( Min( Min( MDR ,FirstVNF_CPU_Server ) ,( ACS - MRS ) ) * Min( ( MDR + ACS ) ,Max( ARS,MDR ) ) ) ) ) ) ) + ( Min( ( ( ( ( Max( PN,FirstVNF_RAM_Server ) * Max( FirstVNF_RAM_Server,MDR ) ) + Min( ( MDR / DDR ) ,( CRS + MDR ) ) ) / Max( ( ( MDR * PN ) - Min( CRS ,AMS ) ),Min( Max( Const,FirstVNF_Mem_Server ) ,( MRS + FirstVNF_CPU ) ) ) ) - Min( Max( ( ( AMS * FirstVNF_RAM_Server ) * ( ACS + FirstVNF_CPU_Server ) ),Max( Min( MRS ,FirstVNF_CPU ),( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) ,Max( ( ( ARS + ARS ) + ( BR + PN ) ),( ( BR - FirstVNF_CPU_Server ) / ( Const / FirstVNF_RAM_Server ) ) ) ) ) ,( Min( Max( ( ( RRS - FirstVNF_CPU ) / ( FirstVNF_RAM_Server * MDR ) ),( ( FirstVNF_RAM / ACS ) + ( MDR / MDR ) ) ) ,Min( Max( ( AMS / RRS ),( DDR * BR ) ) ,Min( ( MDR * PN ) ,( AMS * FirstVNF_Mem ) ) ) ) + Max( Max( Max( ( AMS + FirstVNF_CPU_Server ),( Const + MDR ) ),Min( ( FirstVNF_CPU_Server / BR ) ,Min( Const ,FirstVNF_Mem_Server ) ) ),Min( ( ( BR + RRS ) + ( FirstVNF_RAM_Server - ACS ) ) ,( Min( FirstVNF_RAM ,ACS ) - ( DDR - MDR ) ) ) ) ) ) * ( ( ( Max( ( ( CRS + FirstVNF_CPU ) + Min( FirstVNF_RAM_Server ,ARS ) ),Min( ( FirstVNF_Mem - CRS ) ,( FirstVNF_Mem_Server * RRS ) ) ) / Min( Min( ( MRS * BR ) ,( BR * FirstVNF_CPU ) ) ,( ( MDR * CRS ) - Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) ) ) - ( ( ( Min( FirstVNF_CPU_Server ,BR ) - ( FirstVNF_CPU_Server * MDR ) ) + ( Max( FirstVNF_RAM_Server,ARS ) + ( AMS - CRS ) ) ) * ( Min( ( MRS * FirstVNF_Mem ) ,Min( BR ,FirstVNF_RAM_Server ) ) / Max( Max( PN,BR ),Min( BR ,MRS ) ) ) ) ) * Max( Max( ( Max( Min( ARS ,FirstVNF_Mem_Server ),( FirstVNF_RAM_Server * FirstVNF_CPU ) ) - Max( ( BR - FirstVNF_RAM_Server ),( FirstVNF_CPU_Server + BR ) ) ),( ( ( FirstVNF_CPU - CRS ) * Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) * ( Max( PN,AMS ) - Min( Const ,PN ) ) ) ),( ( ( ( BR / MRS ) - ( MDR + DDR ) ) - Max( ( ARS + FirstVNF_Mem ),Max( FirstVNF_CPU_Server,BR ) ) ) - Min( ( ( MRS + FirstVNF_RAM_Server ) * Min( ARS ,FirstVNF_CPU_Server ) ) ,Min( Max( MDR,MRS ) ,( ARS + PN ) ) ) ) ) ) ) )", "choosing": "Min( ( Min( Min( ( ( ( ( RCSe * CS ) - ( MLU - MUM ) ) - ( ( MLU / MUR ) - ( MUR / RCSe ) ) ) / ( ( ( MUR - MUM ) * ( DS - MUC ) ) + ( Min( MUR ,DS ) / ( MLU - MUC ) ) ) ) ,( Min( ( Min( MUC ,DS ) / Min( CS ,RCSe ) ) ,( Min( RRSe ,RRSe ) * Max( MUR,MLU ) ) ) / ( Max( ( RCSe - MUM ),( RRSe - RCSe ) ) + ( Max( MUR,MUC ) * ( RCSe * CS ) ) ) ) ) ,( ( ( ( ( MUR * MLU ) - ( RCSe - CS ) ) * ( Max( MUM,RMSe ) / ( MUC / MLU ) ) ) + ( ( ( RMSe / RCSe ) - Min( RRSe ,CS ) ) / ( ( DS - RRSe ) + ( RMSe * MUM ) ) ) ) / ( ( ( Max( DS,RRSe ) * ( MLU + MUM ) ) * ( Min( CS ,MLU ) - Max( RRSe,DS ) ) ) * ( Max( ( MUM - DS ),( MUR * RMSe ) ) * Min( Max( RMSe,DS ) ,Max( CS,DS ) ) ) ) ) ) * Min( ( ( ( Max( ( DS + RRSe ),( MUC - MUC ) ) - Max( Min( MLU ,RMSe ),Min( DS ,MUR ) ) ) / ( ( Min( RMSe ,MLU ) + ( MUR / RCSe ) ) * Min( ( MLU - MUM ) ,( MUR * CS ) ) ) ) * ( ( ( ( RCSe + MLU ) - ( CS - RMSe ) ) + ( Max( MUM,MLU ) - ( MUR + DS ) ) ) / ( Max( ( RMSe - MLU ),Min( RCSe ,MLU ) ) + ( Max( RCSe,RCSe ) * ( CS * DS ) ) ) ) ) ,( ( ( Max( Max( RMSe,RMSe ),( MUM - DS ) ) * ( ( RRSe - CS ) / Min( MUM ,DS ) ) ) - ( Max( ( RMSe - MUC ),( MUC + RCSe ) ) + ( ( MUM + RCSe ) + ( RCSe / MUR ) ) ) ) + Min( ( Min( ( MLU * MUC ) ,Max( DS,MUC ) ) * ( ( RMSe - MUC ) + Min( MUC ,CS ) ) ) ,( ( ( MUR - RRSe ) * ( MLU - RRSe ) ) / Max( ( CS / MUR ),( MUM * MLU ) ) ) ) ) ) ) ,( Max( ( ( ( ( ( RMSe / MUR ) + ( MLU - RMSe ) ) / ( Max( MLU,RCSe ) * Max( CS,MUC ) ) ) * ( ( ( CS - RCSe ) + ( MUC - MUR ) ) / ( ( CS / MUC ) * Max( MUC,MUR ) ) ) ) / ( ( Max( Max( RCSe,RMSe ),Min( MLU ,RCSe ) ) * ( ( MUC - MUC ) + ( MUR / MUM ) ) ) - ( Max( ( MUR - RMSe ),( CS * MUC ) ) / Min( ( RCSe / RCSe ) ,Max( MUC,RMSe ) ) ) ) ),( ( ( ( Max( MUM,MUR ) + ( DS - CS ) ) - ( ( DS + CS ) + Min( RCSe ,MUC ) ) ) + ( ( ( RCSe - RMSe ) * ( MUR / RMSe ) ) + Min( ( MUM - MUM ) ,( MUM / DS ) ) ) ) / Max( Min( Max( ( RMSe - MUM ),( CS * MUM ) ) ,Min( Max( DS,MUC ) ,( RMSe * MUC ) ) ),Max( ( ( MUR - CS ) - Max( MLU,RCSe ) ),Max( ( MLU * MUR ),( RCSe - RCSe ) ) ) ) ) ) / ( ( ( Min( ( Max( MLU,RRSe ) - ( MLU - MUC ) ) ,( Max( RRSe,RCSe ) * Min( RCSe ,RMSe ) ) ) - Max( ( Min( DS ,MUR ) - ( MUR + DS ) ),( Min( MUC ,MUR ) + Min( RMSe ,MUR ) ) ) ) + ( ( Max( ( MUM * CS ),Max( RMSe,MUM ) ) - ( Min( DS ,CS ) / ( CS / MUM ) ) ) + ( Max( ( DS / MUR ),Max( RMSe,CS ) ) + ( ( MUM - DS ) + ( RCSe + DS ) ) ) ) ) / ( Min( ( ( ( DS / RRSe ) / Min( RRSe ,MLU ) ) * ( ( RMSe - RCSe ) / Max( MUM,MUR ) ) ) ,( Min( ( DS - MUM ) ,( MUM - MLU ) ) * ( ( MUR - RMSe ) / ( DS - MUR ) ) ) ) * Min( Min( ( ( MLU / MUR ) / ( MUR + RRSe ) ) ,( ( MUR - RCSe ) * Min( RRSe ,MUR ) ) ) ,Min( ( Max( RRSe,MLU ) - ( DS / RMSe ) ) ,( Max( RMSe,MUC ) * ( MUC - DS ) ) ) ) ) ) ) )", "obj1": 0.2943396226415094, "obj2": 0.6554011251356034}, {"determining": "Max( Max( AMS,( AMS + Min( ACS ,MDR ) ) ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.0660377358490566, "obj2": 0.8032718896837286}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),( AMS + Min( ACS ,MDR ) ) ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.0660377358490566, "obj2": 0.8032718896837286}, {"determining": "Max( Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( DS / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.36792452830188677, "obj2": 0.5649679043432271}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),( AMS + Min( ACS ,MDR ) ) ),Min( ( ( AMS + MDR ) - ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + ( MUM / RCSe ) ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.07924528301886792, "obj2": 0.7943030305893682}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Const ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.08679245283018867, "obj2": 0.7851234050663805}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * BR ) ),( AMS + Min( ACS ,MDR ) ) ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + MLU ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.10566037735849057, "obj2": 0.7758700208854882}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),( AMS + Max( Min( Max( DDR,( Const + FirstVNF_CPU_Server ) ) ,AMS ),Max( FirstVNF_RAM,RRS ) ) ) )", "choosing": "( ( ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.10943396226415095, "obj2": 0.7707842571755944}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06415094339622641, "obj2": 0.805777309085478}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.1, "obj2": 0.7788936569481802}, {"determining": "Max( Max( ( AMS + ( Min( RRS ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Max( Min( ACS ,ACS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) * Min( MUM ,DS ) ) ) ) + Max( MLU,MLU ) )", "obj1": 0.05849056603773585, "obj2": 0.8063588863328527}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.0660377358490566, "obj2": 0.8032718896837286}, {"determining": "Max( Max( ( AMS + ( ( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) - AMS ) * ( FirstVNF_RAM * RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( Min( ( MUC + DS ) ,( ( Min( RMSe ,MUC ) + ( RRSe * MUC ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06415094339622641, "obj2": 0.805777309085478}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,( MRS - MRS ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.0660377358490566, "obj2": 0.8032718896837286}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.08490566037735849, "obj2": 0.7889250454127287}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ( ACS - ACS ) - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + ( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) ) ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.09622641509433963, "obj2": 0.7822523442142497}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,( MRS - MRS ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.0660377358490566, "obj2": 0.8032718896837286}, {"determining": "( ( PN - AMS ) - ( ( PN * Max( FirstVNF_RAM,ARS ) ) - AMS ) )", "choosing": "( Max( ( ( MUC / ( MLU * RCSe ) ) / MUR ),RMSe ) - ( ( ( DS * DS ) * MUC ) * ( MUR * MUC ) ) )", "obj1": 0.269811320754717, "obj2": 0.6656647622298133}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUM ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.0660377358490566, "obj2": 0.8032718896837286}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.0660377358490566, "obj2": 0.8032718896837286}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.06415094339622641, "obj2": 0.805777309085478}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.0660377358490566, "obj2": 0.8032718896837286}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.0660377358490566, "obj2": 0.8032718896837286}, {"determining": "( ( FirstVNF_RAM + ( MDR + BR ) ) + ( CRS + ( RRS / FirstVNF_CPU ) ) )", "choosing": "( ( RRSe - DS ) * ( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,RCSe ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) ) )", "obj1": 0.06792452830188679, "obj2": 0.800759909754145}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * ( Const + FirstVNF_CPU_Server ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( RRSe / ( ( CS + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) ) * ( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,RCSe ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) ) )", "obj1": 0.3018867924528302, "obj2": 0.5759981872701858}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( RRSe / DS ) * ( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,RCSe ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) ) )", "obj1": 0.06792452830188679, "obj2": 0.800759909754145}, {"determining": "( ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) / ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * ( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( RMSe / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.11320754716981132, "obj2": 0.7647231959750515}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( CRS,RRS ) ) ),FirstVNF_Mem_Server ),Min( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Max( ( RCSe * RMSe ),Min( MUM ,DS ) ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.15849056603773584, "obj2": 0.7487193255957231}, {"determining": "( ( ( MDR / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) / ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * ( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.0660377358490566, "obj2": 0.8032718896837286}], "10": [{"determining": "( ( AMS + MDR ) - ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + MUR ) * ( MUM / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( RRSe / DS ) * ( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,RCSe ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) ) )", "obj1": 0.06792452830188679, "obj2": 0.800759909754145}, {"determining": "Max( Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( DS / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.36792452830188677, "obj2": 0.5649679043432271}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Const ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.08679245283018867, "obj2": 0.7851234050663805}, {"determining": "Max( Max( ( AMS + ( Min( RRS ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Max( Min( ACS ,ACS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) * Min( MUM ,DS ) ) ) ) + Max( MLU,MLU ) )", "obj1": 0.05849056603773585, "obj2": 0.8063588863328527}, {"determining": "( ( FirstVNF_RAM + ( MDR + BR ) ) + ( CRS + ( RRS / FirstVNF_CPU ) ) )", "choosing": "( ( RRSe - DS ) * ( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,RCSe ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) ) )", "obj1": 0.06792452830188679, "obj2": 0.800759909754145}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * ( Const + FirstVNF_CPU_Server ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( RRSe / ( ( CS + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) ) * ( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,RCSe ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) ) )", "obj1": 0.3018867924528302, "obj2": 0.5759981872701858}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( RRSe / DS ) * ( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,RCSe ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) ) )", "obj1": 0.06792452830188679, "obj2": 0.800759909754145}, {"determining": "( ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) / ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * ( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( RMSe / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.11320754716981132, "obj2": 0.7647231959750515}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( CRS,RRS ) ) ),FirstVNF_Mem_Server ),Min( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Max( ( RCSe * RMSe ),Min( MUM ,DS ) ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.15849056603773584, "obj2": 0.7487193255957231}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUC + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * MUM ) ) ) + Max( MLU,CS ) )", "obj1": 0.3754716981132076, "obj2": 0.5538843676969596}, {"determining": "( ( ( MDR / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) / ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) ) )", "choosing": "( ( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) / Min( MUM ,DS ) ) ) ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.4849056603773585, "obj2": 0.45382116078375623}, {"determining": "( ( ( MDR / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) / ( Min( Min( DDR ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ,AMS ) / ( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) - ( ( MUR * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.05471698113207547, "obj2": 0.8127157755703988}, {"determining": "( Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),( AMS + Min( ACS ,MDR ) ) ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) ) / ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * ( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( RMSe / ( ( RCSe * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.5924528301886792, "obj2": 0.3369893927939526}, {"determining": "( ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) / ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * ( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( RMSe / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.12264150943396226, "obj2": 0.7581639393200239}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * ( ( PN * Max( FirstVNF_RAM,ARS ) ) - AMS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * ( ( MUC / ( MLU * RCSe ) ) / MUR ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.5735849056603773, "obj2": 0.3680071014081346}, {"determining": "( ( AMS + MDR ) - ( Min( MDR ,RRS ) * ( FirstVNF_RAM_Server - DDR ) ) )", "choosing": "( ( Min( Min( ( ( ( ( RCSe * CS ) - ( MLU - MUM ) ) - ( ( MLU / MUR ) - ( MUR / RCSe ) ) ) / ( ( ( MUR - MUM ) * ( DS - MUC ) ) + ( Min( MUR ,DS ) / ( MLU - MUC ) ) ) ) ,( Min( ( Min( MUC ,DS ) / Min( CS ,RCSe ) ) ,( Min( RRSe ,RRSe ) * Max( MUR,MLU ) ) ) / ( Max( ( RCSe - MUM ),( RRSe - RCSe ) ) + ( Max( MUR,MUC ) * ( RCSe * CS ) ) ) ) ) ,( ( ( ( ( MUR * MLU ) - ( RCSe - CS ) ) * ( Max( MUM,RMSe ) / ( MUC / MLU ) ) ) + ( ( ( RMSe / RCSe ) - Min( RRSe ,CS ) ) / ( ( DS - RRSe ) + ( RMSe * MUM ) ) ) ) / ( ( ( Max( DS,RRSe ) * ( MLU + MUM ) ) * ( Min( CS ,MLU ) - Max( RRSe,DS ) ) ) * ( Max( ( MUM - DS ),( MUR * RMSe ) ) * Min( Max( RMSe,DS ) ,Max( CS,DS ) ) ) ) ) ) * Min( ( ( ( Max( ( DS + RRSe ),( MUC - MUC ) ) - Max( Min( MLU ,RMSe ),Min( DS ,MUR ) ) ) / ( ( Min( RMSe ,MLU ) + ( MUR / RCSe ) ) * Min( ( MLU - MUM ) ,( MUR * CS ) ) ) ) * ( ( ( ( RCSe + MLU ) - ( CS - RMSe ) ) + ( Max( MUM,MLU ) - ( MUR + DS ) ) ) / ( Max( ( RMSe - MLU ),Min( RCSe ,MLU ) ) + ( Max( RCSe,RCSe ) * ( CS * DS ) ) ) ) ) ,( ( ( Max( Max( RMSe,RMSe ),( MUM - DS ) ) * ( ( RRSe - CS ) / Min( MUM ,DS ) ) ) - ( Max( ( RMSe - MUC ),( MUC + RCSe ) ) + ( ( MUM + RCSe ) + ( RCSe / MUR ) ) ) ) + Min( ( Min( ( MLU * MUC ) ,Max( DS,MUC ) ) * ( ( RMSe - MUC ) + Min( MUC ,CS ) ) ) ,( ( ( MUR - RRSe ) * ( MLU - RRSe ) ) / Max( ( CS / MUR ),( MUM * MLU ) ) ) ) ) ) ) * ( MUM / RCSe ) )", "obj1": 0.35283018867924526, "obj2": 0.5697346489242774}, {"determining": "Max( ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * MUM ) + Max( MLU,CS ) )", "obj1": 0.5679245283018868, "obj2": 0.3708957187758267}, {"determining": "( ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) / ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * ( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( RMSe / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.11320754716981132, "obj2": 0.7647231959750515}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( RRSe / DS ) * ( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,RCSe ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) ) )", "obj1": 0.06792452830188679, "obj2": 0.800759909754145}, {"determining": "Max( Max( ( AMS + ( FirstVNF_Mem_Server * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) * Min( MUM ,DS ) ) ) ) + Max( MLU,( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) ) )", "obj1": 0.09245283018867924, "obj2": 0.7839395191172831}, {"determining": "Max( AMS,Min( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( RRSe * MUM ) / ( ( RCSe * RMSe ) * ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.16792452830188678, "obj2": 0.7284071271131408}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.05849056603773585, "obj2": 0.8063588863328527}, {"determining": "Max( Max( ( AMS + ( Min( RRS ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.15849056603773584, "obj2": 0.7487193255957231}, {"determining": "Max( Max( ( AMS + ( Min( RRS ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Max( Min( ACS ,ACS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) * Min( MUM ,DS ) ) ) ) + Max( MLU,MLU ) )", "obj1": 0.06415094339622641, "obj2": 0.8026314966874194}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( CRS,RRS ) ) ),FirstVNF_Mem_Server ),Min( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Max( ( RCSe * RMSe ),Min( MUM ,DS ) ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.41132075471698115, "obj2": 0.5110444359680576}, {"determining": "Max( ( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,FirstVNF_Mem_Server ) * Max( Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ),RRS ) ) ) * FirstVNF_Mem_Server ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( Max( ( MUM + DS ),MUM ) + Max( MLU,RMSe ) )", "obj1": 0.5830188679245283, "obj2": 0.3505932976959059}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),Max( FirstVNF_RAM,RRS ) ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.05471698113207547, "obj2": 0.8127157755703988}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( DS / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.2188679245283019, "obj2": 0.6866305854727469}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,( MRS - MRS ) )", "choosing": "( ( ( MUM + DS ) * ( DS / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.4, "obj2": 0.5296180695146577}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Max( ( RCSe * RMSe ),Min( MUM ,DS ) ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.41132075471698115, "obj2": 0.5110444359680576}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ) ) )", "choosing": "( ( ( MUC + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.10377358490566038, "obj2": 0.7661029839796619}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( CRS,RRS ) ) ),FirstVNF_Mem_Server ),Min( Min( Min( DDR ,( AMS + FirstVNF_CPU_Server ) ) ,AMS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) * Max( ( RCSe * RMSe ),Min( MUM ,DS ) ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.1811320754716981, "obj2": 0.7101358787112012}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( CRS,RRS ) ) ),FirstVNF_Mem_Server ),Min( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Max( ( RCSe * RMSe ),Min( MUM ,DS ) ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.41132075471698115, "obj2": 0.5110444359680576}, {"determining": "( ( DDR - AMS ) - ( ( PN * Max( FirstVNF_RAM,ARS ) ) - AMS ) )", "choosing": "( Max( ( ( MUC / ( ( RCSe * RMSe ) * RCSe ) ) / MUR ),RMSe ) - ( ( ( DS * DS ) * MUC ) * ( MUR * MUC ) ) )", "obj1": 0.2962264150943396, "obj2": 0.6225191774572513}, {"determining": "Min( Min( Max( ( ( Max( BR,BR ) / FirstVNF_Mem_Server ) / Const ),FirstVNF_CPU_Server ) ,FirstVNF_CPU ) ,( ACS / BR ) )", "choosing": "Min( ( RRSe + RMSe ) ,( Max( Max( Min( RRSe ,MUR ),MUR ),MUC ) - MLU ) )", "obj1": 0.25849056603773585, "obj2": 0.6575575251511534}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + Max( FirstVNF_RAM,RRS ) ) ) ,AMS ) / Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ( ACS - ACS ) - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + ( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) ) ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + ( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe / RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) ) )", "obj1": 0.07547169811320754, "obj2": 0.8006931809967919}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ( ACS - ACS ) - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.0830188679245283, "obj2": 0.786929766385129}, {"determining": "Max( Max( ( AMS + ( ( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) - AMS ) * ( FirstVNF_RAM * RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( Min( ( MUC + DS ) ,( ( Min( RMSe ,MUC ) + ( RRSe * MUC ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.07735849056603773, "obj2": 0.7883332392615124}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + Const ) ) ,AMS ) * ACS ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Max( MLU,CS ) + ( ( Max( MLU,CS ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.13962264150943396, "obj2": 0.7578300834658444}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) ) ),FirstVNF_Mem_Server ),Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) )", "choosing": "( ( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,MLU ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.14339622641509434, "obj2": 0.753767857436101}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,AMS ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.08490566037735849, "obj2": 0.7855890811699883}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) + Max( MLU,CS ) )", "obj1": 0.44150943396226416, "obj2": 0.48053615566285607}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( MRS + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( ( ( Min( ( Max( MLU,RRSe ) - ( MLU - MUC ) ) ,( Max( RRSe,RCSe ) * Min( RCSe ,RMSe ) ) ) - Max( ( Min( DS ,MUR ) - ( MUR + DS ) ),( Min( MUC ,MUR ) + Min( RMSe ,MUR ) ) ) ) + ( ( Max( ( MUM * CS ),Max( RMSe,MUM ) ) - ( Min( DS ,CS ) / ( CS / MUM ) ) ) + ( Max( ( DS / MUR ),Max( RMSe,CS ) ) + ( ( MUM - DS ) + ( RCSe + DS ) ) ) ) ) / ( Min( ( ( ( DS / RRSe ) / Min( RRSe ,MLU ) ) * ( ( RMSe - RCSe ) / Max( MUM,MUR ) ) ) ,( Min( ( DS - MUM ) ,( MUM - MLU ) ) * ( ( MUR - RMSe ) / ( DS - MUR ) ) ) ) * Min( Min( ( ( MLU / MUR ) / ( MUR + RRSe ) ) ,( ( MUR - RCSe ) * Min( RRSe ,MUR ) ) ) ,Min( ( Max( RRSe,MLU ) - ( DS / RMSe ) ) ,( Max( RMSe,MUC ) * ( MUC - DS ) ) ) ) ) ) * ( ( Min( RMSe ,MUM ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.2679245283018868, "obj2": 0.6317133165451829}, {"determining": "Max( Max( Min( DDR ,( Const + Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + Max( MLU,CS ) )", "obj1": 0.09622641509433963, "obj2": 0.7806280380589861}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,FirstVNF_CPU_Server ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) / Min( MUM ,DS ) ) ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.49056603773584906, "obj2": 0.4386128301370728}, {"determining": "Max( Max( ( AMS + ( Min( Min( RRS ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * ( MUM - DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.05471698113207547, "obj2": 0.8127157755703988}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( RRSe / DS ) * ( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,RCSe ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) ) )", "obj1": 0.06792452830188679, "obj2": 0.800759909754145}, {"determining": "Max( Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( DS / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.36792452830188677, "obj2": 0.5649679043432271}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,( MRS - MRS ) )", "choosing": "( ( ( MUM + DS ) * ( ( Max( MLU,CS ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.1, "obj2": 0.7771844978770281}, {"determining": "Min( ( CRS * DDR ) ,( ARS + ( ( Max( Const,FirstVNF_RAM ) - Min( RRS ,AMS ) ) - PN ) ) )", "choosing": "( ( ( ( Max( Min( Min( ( RCSe - RMSe ) ,( RRSe - RCSe ) ) ,( ( CS * DS ) / ( RRSe - DS ) ) ),( ( ( RRSe * MUR ) * ( RCSe / CS ) ) * ( Min( MUC ,RMSe ) - ( RRSe - RMSe ) ) ) ) * ( ( ( ( MUR / MUC ) / Max( MUC,CS ) ) / Min( Min( RMSe ,MUM ) ,( CS / MUM ) ) ) * Max( Min( Min( DS ,MLU ) ,( MUM / RRSe ) ),Max( ( MUR - RRSe ),( DS - RCSe ) ) ) ) ) - ( ( ( Max( Min( MLU ,RCSe ),Min( RMSe ,MUC ) ) * ( Max( RCSe,RMSe ) - Max( DS,DS ) ) ) * Min( Min( Max( RMSe,RRSe ) ,( RMSe * CS ) ) ,Min( Max( MUR,DS ) ,( MLU + MUM ) ) ) ) * ( Min( Min( Min( DS ,RMSe ) ,Min( MUC ,RMSe ) ) ,( Min( MUM ,MLU ) * ( MUM * DS ) ) ) / Max( ( ( MUC + MUM ) * Max( RMSe,MUR ) ),( Max( MUM,RMSe ) / Min( RCSe ,CS ) ) ) ) ) ) / ( ( ( Min( Max( ( MLU / CS ),( MUC + CS ) ) ,Max( ( DS * RCSe ),( MUM / MUR ) ) ) - ( Min( Max( RMSe,MUM ) ,Min( RRSe ,RRSe ) ) + ( ( MUM - MUM ) / ( RRSe * MUC ) ) ) ) / Max( ( ( ( CS + MLU ) + ( MUM * MLU ) ) + ( Min( RRSe ,MUC ) - ( MUR * RCSe ) ) ),Min( Max( Max( MUC,MUC ),( RRSe + RRSe ) ) ,( Min( RCSe ,MUM ) / ( RMSe / CS ) ) ) ) ) - ( Min( Min( ( ( CS + RMSe ) / ( MUM - DS ) ) ,( Max( MUC,CS ) - ( CS / MUM ) ) ) ,( Min( Min( RMSe ,CS ) ,( MUM + MUC ) ) / Max( Max( MLU,RCSe ),( RCSe / MUC ) ) ) ) - Min( ( ( ( CS - MLU ) * Max( MUR,MUM ) ) - ( ( RMSe + MUC ) / Max( CS,MUR ) ) ) ,( ( ( DS * RCSe ) / Max( MLU,MUM ) ) * Min( ( MLU / CS ) ,( RCSe + CS ) ) ) ) ) ) ) * ( Min( ( ( ( Min( Max( MUC,MUR ) ,( RCSe / MUM ) ) - ( ( MUC * MLU ) * ( MUC * MUM ) ) ) * ( ( Max( MLU,CS ) - ( DS * MUM ) ) - ( Max( DS,RCSe ) / ( MUC - MUR ) ) ) ) / ( ( Max( ( MUM + CS ),( CS + MLU ) ) + Min( ( RMSe / RRSe ) ,( MUC * CS ) ) ) / ( Min( ( DS - DS ) ,Min( MUC ,RCSe ) ) + ( Min( MUM ,RRSe ) * ( RRSe - RRSe ) ) ) ) ) ,Max( Min( ( ( ( MUM + MLU ) + ( MUM * MLU ) ) - Max( ( CS * MUR ),Max( RMSe,MUR ) ) ) ,( ( ( CS + CS ) / ( CS - MUR ) ) + ( ( RRSe + RRSe ) / Max( RMSe,RMSe ) ) ) ),( ( Min( Max( MUM,MUC ) ,Min( DS ,CS ) ) * ( ( RMSe - DS ) * ( DS + MUM ) ) ) + ( ( Max( CS,MUC ) + ( RMSe + DS ) ) * Min( Min( MLU ,CS ) ,( MUR / MUR ) ) ) ) ) ) - Max( ( ( Min( ( ( DS - DS ) / Min( MLU ,DS ) ) ,( Min( RRSe ,MUR ) / ( MLU + RRSe ) ) ) / ( ( Min( MLU ,CS ) + ( CS + CS ) ) * Max( Min( MUC ,MUC ),( DS * MUC ) ) ) ) + Max( ( ( Min( CS ,MLU ) / ( CS - DS ) ) / ( ( DS + RMSe ) / ( MLU * RCSe ) ) ),( Min( ( MUM / RMSe ) ,( DS * CS ) ) / ( Min( DS ,MUM ) + Max( CS,RRSe ) ) ) ) ),( Max( ( ( ( RRSe - MUR ) + Min( RCSe ,RMSe ) ) * ( ( CS - DS ) + ( RMSe + CS ) ) ),( Min( Min( RRSe ,MUR ) ,Max( MUC,MUR ) ) * Min( ( DS / MUM ) ,( RRSe / RCSe ) ) ) ) + Min( ( ( ( RMSe / RRSe ) + ( DS - RCSe ) ) / ( ( RMSe - MLU ) * ( MUM + DS ) ) ) ,( Min( Min( MLU ,RCSe ) ,Min( RCSe ,MUM ) ) + Max( ( MUM * DS ),Min( MLU ,DS ) ) ) ) ) ) ) )", "obj1": 0.4226415094339623, "obj2": 0.49717290521982727}], "11": [{"determining": "( ( AMS + MDR ) - ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + MUR ) * ( MUM / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( RRSe / DS ) * ( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,RCSe ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) ) )", "obj1": 0.06792452830188679, "obj2": 0.800759909754145}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Const ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.08679245283018867, "obj2": 0.7851234050663805}, {"determining": "Max( Max( ( AMS + ( Min( RRS ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Max( Min( ACS ,ACS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) * Min( MUM ,DS ) ) ) ) + Max( MLU,MLU ) )", "obj1": 0.05849056603773585, "obj2": 0.8063588863328527}, {"determining": "( ( FirstVNF_RAM + ( MDR + BR ) ) + ( CRS + ( RRS / FirstVNF_CPU ) ) )", "choosing": "( ( RRSe - DS ) * ( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,RCSe ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) ) )", "obj1": 0.06792452830188679, "obj2": 0.800759909754145}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( RRSe / DS ) * ( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,RCSe ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) ) )", "obj1": 0.06792452830188679, "obj2": 0.800759909754145}, {"determining": "( ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) / ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * ( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( RMSe / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.11320754716981132, "obj2": 0.7647231959750515}, {"determining": "( ( ( MDR / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) / ( Min( Min( DDR ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ,AMS ) / ( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) - ( ( MUR * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.05471698113207547, "obj2": 0.8127157755703988}, {"determining": "( ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) / ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * ( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( RMSe / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.11320754716981132, "obj2": 0.7647231959750515}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( RRSe / DS ) * ( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,RCSe ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) ) )", "obj1": 0.06792452830188679, "obj2": 0.800759909754145}, {"determining": "Max( Max( ( AMS + ( FirstVNF_Mem_Server * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) * Min( MUM ,DS ) ) ) ) + Max( MLU,( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) ) )", "obj1": 0.09245283018867924, "obj2": 0.7839395191172831}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.05849056603773585, "obj2": 0.8063588863328527}, {"determining": "Max( Max( ( AMS + ( Min( RRS ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Max( Min( ACS ,ACS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) * Min( MUM ,DS ) ) ) ) + Max( MLU,MLU ) )", "obj1": 0.06415094339622641, "obj2": 0.8026314966874194}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),Max( FirstVNF_RAM,RRS ) ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.05471698113207547, "obj2": 0.8127157755703988}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ) ) )", "choosing": "( ( ( MUC + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.10377358490566038, "obj2": 0.7661029839796619}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ( ACS - ACS ) - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.0830188679245283, "obj2": 0.786929766385129}, {"determining": "Max( Max( ( AMS + ( ( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) - AMS ) * ( FirstVNF_RAM * RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( Min( ( MUC + DS ) ,( ( Min( RMSe ,MUC ) + ( RRSe * MUC ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.07735849056603773, "obj2": 0.7883332392615124}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,AMS ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.08490566037735849, "obj2": 0.7855890811699883}, {"determining": "Max( Max( Min( DDR ,( Const + Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + Max( MLU,CS ) )", "obj1": 0.09622641509433963, "obj2": 0.7806280380589861}, {"determining": "Max( Max( ( AMS + ( Min( Min( RRS ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * ( MUM - DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.05471698113207547, "obj2": 0.8127157755703988}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( RRSe / DS ) * ( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,RCSe ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) ) )", "obj1": 0.06792452830188679, "obj2": 0.800759909754145}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,( MRS - MRS ) )", "choosing": "( ( ( MUM + DS ) * ( ( Max( MLU,CS ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.1, "obj2": 0.7771844978770281}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( RRSe / DS ) * ( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,RCSe ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) ) )", "obj1": 0.06792452830188679, "obj2": 0.800759909754145}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,( MRS - MRS ) )", "choosing": "( ( ( MUM + DS ) * ( ( Max( MLU,CS ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.1, "obj2": 0.7771844978770281}, {"determining": "( ( ( MDR / AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) / ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * ( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.05471698113207547, "obj2": 0.8127157755703988}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( RRSe / DS ) * ( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,RCSe ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) ) )", "obj1": 0.06792452830188679, "obj2": 0.800759909754145}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( RRSe / DS ) * ( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,RCSe ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) ) )", "obj1": 0.06792452830188679, "obj2": 0.800759909754145}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.05849056603773585, "obj2": 0.8063588863328527}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.05471698113207547, "obj2": 0.8127157755703988}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( RRSe / DS ) * ( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,RCSe ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) ) )", "obj1": 0.06792452830188679, "obj2": 0.800759909754145}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + Max( FirstVNF_RAM,RRS ) ) ) ,AMS ) * Max( FirstVNF_RAM,Min( RRS ,AMS ) ) ) ),FirstVNF_Mem_Server ),Min( ( ( ACS - ACS ) - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + ( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) ) ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + MUC )", "obj1": 0.06981132075471698, "obj2": 0.7992149841728865}, {"determining": "( ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) / ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * ( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( RMSe / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.11320754716981132, "obj2": 0.7647231959750515}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ) ) )", "choosing": "( ( ( MUC + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.10377358490566038, "obj2": 0.7661029839796619}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + Max( FirstVNF_RAM,RRS ) ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ( ACS - ACS ) - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUC ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.07735849056603773, "obj2": 0.7883332392615124}, {"determining": "( ( FirstVNF_RAM_Server + ( MDR + BR ) ) + ( CRS + ( RRS / FirstVNF_CPU ) ) )", "choosing": "( ( ( MUC + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.08490566037735849, "obj2": 0.7855890811699883}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,AMS ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( RRSe / DS ) * ( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,RCSe ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) ) )", "obj1": 0.06792452830188679, "obj2": 0.800759909754145}, {"determining": "Max( ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.05849056603773585, "obj2": 0.8063588863328527}, {"determining": "( ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) / ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * ( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( RMSe / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.11509433962264151, "obj2": 0.7642919172930623}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),Max( FirstVNF_RAM,RRS ) ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.08490566037735849, "obj2": 0.7855890811699883}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,AMS ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.05471698113207547, "obj2": 0.8127157755703988}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,( MRS - MRS ) )", "choosing": "( ( ( MUM + DS ) * ( ( Max( MLU,CS ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.1, "obj2": 0.7771844978770281}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( CRS,RRS ) ) ),FirstVNF_Mem_Server ),Min( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) * Min( MUM ,DS ) ) ) ) + Max( MLU,MLU ) )", "obj1": 0.06415094339622641, "obj2": 0.8026314966874194}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ),RRS ) ) ),FirstVNF_Mem_Server ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.05471698113207547, "obj2": 0.8127157755703988}, {"determining": "Max( Max( Min( DDR ,( Const + Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + Max( MLU,CS ) )", "obj1": 0.09622641509433963, "obj2": 0.7806280380589861}, {"determining": "( ( FirstVNF_RAM_Server + ( MDR + BR ) ) + ( CRS + ( RRS / FirstVNF_CPU ) ) )", "choosing": "( ( RRSe / DS ) * ( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,RCSe ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) ) )", "obj1": 0.06792452830188679, "obj2": 0.800759909754145}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Const ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUM + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.08679245283018867, "obj2": 0.7851234050663805}, {"determining": "Max( Max( ( AMS + ( Min( RRS ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Max( Min( ACS ,ACS ),( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) * Min( MUM ,DS ) ) ) ) + Max( MLU,MLU ) )", "obj1": 0.06415094339622641, "obj2": 0.8026314966874194}, {"determining": "Max( Max( ( AMS + ( FirstVNF_Mem_Server * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) * Min( MUM ,DS ) ) ) ) + Max( MLU,( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) ) )", "obj1": 0.09245283018867924, "obj2": 0.7839395191172831}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,AMS ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) )", "choosing": "( ( ( MUC + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MUC,CS ) )", "obj1": 0.08490566037735849, "obj2": 0.7855890811699883}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,AMS ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( Min( ACS ,ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( ( MUC + DS ) * ( ( Min( RMSe ,MUC ) + ( RRSe * ( ( Min( RMSe ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) ) + Max( MLU,CS ) )", "obj1": 0.08490566037735849, "obj2": 0.7855890811699883}, {"determining": "Max( Max( ( AMS + ( Min( Min( DDR ,( Const + FirstVNF_CPU_Server ) ) ,AMS ) * Max( FirstVNF_RAM,RRS ) ) ),FirstVNF_Mem_Server ),Min( ( ACS - ACS ) ,( FirstVNF_Mem_Server - AMS ) ) )", "choosing": "( ( RRSe / DS ) * ( ( ( Min( MUC ,MUC ) + ( RRSe * MUM ) ) / ( ( RCSe * RMSe ) * Min( MUM ,DS ) ) ) + ( ( ( RRSe * DS ) * Min( MUC ,RCSe ) ) * ( ( MUC * CS ) + ( MUM * RRSe ) ) ) ) )", "obj1": 0.06792452830188679, "obj2": 0.800759909754145}]}