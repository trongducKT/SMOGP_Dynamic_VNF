{"1": [{"determining": "Max( ( FirstVNF_Mem_Server - ( Min( ( CRS * DDR ) ,FirstVNF_CPU_Server ) - ( MRS + ( ACS / Min( PN ,( RRS * CRS ) ) ) ) ) ),( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / DS ) + ( MLU - Min( ( RMSe / ( MUM * Max( ( MUR + MUR ),MLU ) ) ) ,DS ) ) )", "obj1": 0.1339622641509434, "obj2": 0.768233423447714}, {"determining": "Max( Max( FirstVNF_CPU,BR ),( MDR * ACS ) )", "choosing": "( Min( DS ,MLU ) + Max( MLU,RMSe ) )", "obj1": 0.7433962264150943, "obj2": 0.1879614575090804}, {"determining": "Min( Max( FirstVNF_RAM_Server,DDR ) ,( FirstVNF_RAM - MDR ) )", "choosing": "( ( DS * MUM ) / ( MLU / MUC ) )", "obj1": 0.6, "obj2": 0.30487430187199793}, {"determining": "( ( PN / FirstVNF_CPU ) * Max( AMS,FirstVNF_Mem ) )", "choosing": "( ( MUM / DS ) - ( RCSe / RMSe ) )", "obj1": 0.10566037735849057, "obj2": 0.7835864402212401}, {"determining": "( ( ( ( FirstVNF_Mem_Server / FirstVNF_CPU ) + Min( Const ,FirstVNF_Mem_Server ) ) + FirstVNF_RAM_Server ) * ( ( AMS / FirstVNF_CPU_Server ) - Const ) )", "choosing": "( ( RMSe - MUM ) * ( DS - MUC ) )", "obj1": 0.3490566037735849, "obj2": 0.5791699780754357}, {"determining": "( ( RRS * CRS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUM / MLU ),( MUC - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,PN ) - ( FirstVNF_CPU_Server * ARS ) )", "choosing": "( ( MUM - MUR ) / Max( RCSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,FirstVNF_CPU_Server ) * ( PN / AMS ) )", "choosing": "( ( MUR + RRSe ) / ( MUM * MUR ) )", "obj1": 0.29056603773584905, "obj2": 0.6133302173055211}, {"determining": "Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,( FirstVNF_RAM + ACS ) )", "choosing": "Min( Min( RRSe ,RMSe ) ,Min( DS ,CS ) )", "obj1": 0.7773584905660378, "obj2": 0.16019824852601933}, {"determining": "( Max( FirstVNF_CPU_Server,RRS ) - ( Const / Const ) )", "choosing": "( ( CS / CS ) / Min( DS ,CS ) )", "obj1": 0.5188679245283019, "obj2": 0.4354823064269744}, {"determining": "( ( AMS - FirstVNF_Mem ) - Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC + MLU ) * ( MUM * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,Const ) / ( ARS - CRS ) )", "choosing": "( ( MUR / CS ) - ( RCSe * CS ) )", "obj1": 0.37924528301886795, "obj2": 0.49519833035411526}, {"determining": "( Min( Max( FirstVNF_CPU_Server,MDR ) ,BR ) - ( FirstVNF_CPU / MRS ) )", "choosing": "( ( RMSe + ( ( ( RCSe - ( RCSe + RCSe ) ) / Max( MUM,MLU ) ) + MUC ) ) / Min( RRSe ,( MLU - Min( ( MUR / RMSe ) ,Min( Max( MLU,( ( MUM * MLU ) + RRSe ) ) ,( ( Min( MLU ,MUC ) / MUR ) + MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,ACS ) - ( MDR + AMS ) )", "choosing": "( ( RCSe - MLU ) - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM + FirstVNF_CPU ),( FirstVNF_RAM_Server * DDR ) ) / ( ( FirstVNF_RAM + MDR ) + Min( Const ,AMS ) ) )", "choosing": "( ( ( MUC * MLU ) * ( MLU - CS ) ) / ( ( RCSe * RMSe ) + ( MLU + RRSe ) ) )", "obj1": 0.37169811320754714, "obj2": 0.4985723275626436}, {"determining": "( Min( ( ARS * FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU * BR ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) )", "choosing": "( Min( ( MUC - MUM ) ,( DS / DS ) ) + Min( ( MUC - MUR ) ,Min( MUR ,DS ) ) )", "obj1": 0.3283018867924528, "obj2": 0.5872849471027951}, {"determining": "( ( DDR * BR ) - ( FirstVNF_RAM - ACS ) )", "choosing": "( ( MLU + MUC ) * ( RCSe + MUR ) )", "obj1": 0.5622641509433962, "obj2": 0.3709421407863846}, {"determining": "Max( ( ( DDR / Const ) * ( FirstVNF_CPU + PN ) ),( ( FirstVNF_RAM * FirstVNF_RAM ) + ( PN / BR ) ) )", "choosing": "( ( ( MUM * MUR ) * ( DS + Max( RRSe,RCSe ) ) ) - ( Max( MUR,RRSe ) / ( RMSe / CS ) ) )", "obj1": 0.14150943396226415, "obj2": 0.7638206102876814}, {"determining": "( ( ( BR - FirstVNF_CPU ) / ( RRS / FirstVNF_CPU ) ) + ( ( CRS / FirstVNF_CPU ) + ( PN / MDR ) ) )", "choosing": "( ( ( RRSe * MUM ) * Min( Min( RCSe ,MUR ) ,Min( DS ,RMSe ) ) ) / ( Max( CS,MLU ) * Min( MUR ,RRSe ) ) )", "obj1": 0.360377358490566, "obj2": 0.56655115132628}, {"determining": "Min( ( MRS * ( ACS - BR ) ) ,( ARS + MDR ) )", "choosing": "( Min( Max( DS,RMSe ) ,( DS * MUC ) ) + ( Min( DS ,CS ) + Min( DS ,MUR ) ) )", "obj1": 0.7264150943396226, "obj2": 0.20796103120215642}, {"determining": "( Max( ( MRS + FirstVNF_CPU ),( ACS - DDR ) ) * Max( ( BR / FirstVNF_Mem_Server ),( FirstVNF_Mem / PN ) ) )", "choosing": "( ( ( MUC + DS ) - ( RCSe + MUC ) ) + ( ( RRSe / MUM ) * ( DS + DS ) ) )", "obj1": 0.4849056603773585, "obj2": 0.4492607129413254}, {"determining": "( ( Min( ARS ,RRS ) * ( FirstVNF_CPU_Server + Const ) ) + ( ( FirstVNF_CPU_Server / ACS ) - Min( FirstVNF_RAM ,CRS ) ) )", "choosing": "( ( Max( MUR,RRSe ) * Min( CS ,MUC ) ) + Min( Max( DS,CS ) ,Min( RRSe ,DS ) ) )", "obj1": 0.5056603773584906, "obj2": 0.43959161645377237}, {"determining": "( Min( ( PN / BR ) ,Max( BR,FirstVNF_RAM_Server ) ) * ( ( FirstVNF_Mem_Server / ARS ) / ( FirstVNF_CPU - AMS ) ) )", "choosing": "( ( ( DS * MLU ) + ( DS / DS ) ) - ( ( MUR + MUR ) + ( RMSe + CS ) ) )", "obj1": 0.9245283018867925, "obj2": 0.07868853083573585}, {"determining": "( ( Max( Const,RRS ) / Min( MDR ,AMS ) ) * ( ( FirstVNF_RAM_Server / MDR ) + Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( RMSe + RCSe ) + ( MLU - RMSe ) ),( ( MUM + DS ) / ( RCSe * DS ) ) )", "obj1": 0.1, "obj2": 0.7867977509915157}, {"determining": "( ( AMS - ( ( AMS + FirstVNF_CPU ) + PN ) ) - ( ACS / ( Min( AMS ,MRS ) + DDR ) ) )", "choosing": "Min( Max( MUC,RRSe ) ,( RMSe + ( RMSe / Min( ( ( Max( RCSe,MLU ) + ( MUM + ( RMSe / MUM ) ) ) + CS ) ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( RRS / FirstVNF_Mem ),Min( FirstVNF_RAM_Server ,( Const / FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( MUR + MLU ) - ( CS + CS ) ),( Min( MUR ,RMSe ) + ( MUR * MUM ) ) )", "obj1": 0.4339622641509434, "obj2": 0.48726661111337416}, {"determining": "Min( ( ( AMS + Const ) - Max( FirstVNF_CPU_Server,ACS ) ) ,( ( CRS / DDR ) - Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) )", "choosing": "Min( Max( ( RMSe * DS ),( MLU / RRSe ) ) ,( ( CS - MLU ) + ( MLU / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( Min( ARS ,CRS ) ,Min( FirstVNF_CPU_Server ,ACS ) ),( ( Const / FirstVNF_CPU_Server ) / Max( ARS,ARS ) ) )", "choosing": "( ( MUM * ( MUC / DS ) ) / ( ( RRSe - RCSe ) * ( MLU - RCSe ) ) )", "obj1": 0.25660377358490566, "obj2": 0.6654496425143182}, {"determining": "Min( ( Min( ( ARS / RRS ) ,( FirstVNF_Mem * FirstVNF_RAM ) ) * ( Max( FirstVNF_Mem_Server,Const ) - ( Const + FirstVNF_CPU_Server ) ) ) ,Max( ( Min( ACS ,ACS ) / ( BR * FirstVNF_RAM ) ),( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RCSe,( ( ( RMSe + Min( MUM ,MLU ) ) / RMSe ) + MUM ) ) + ( Min( RMSe ,MUC ) + ( MUR * Min( RCSe ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - DDR ) - ( Const + ( ( FirstVNF_RAM + ACS ) + ARS ) ) )", "choosing": "( Min( ( Max( MUR,RCSe ) * Max( RMSe,RCSe ) ) ,( ( RMSe - MLU ) - Max( MLU,RRSe ) ) ) + ( Min( ( ( DS / Min( CS ,DS ) ) * ( RMSe + CS ) ) ,CS ) / Max( Min( RRSe ,MUM ),( RRSe * MUC ) ) ) )", "obj1": 0.24528301886792453, "obj2": 0.6807093699066564}, {"determining": "( Min( ARS ,RRS ) - ( FirstVNF_Mem * DDR ) )", "choosing": "Max( ( ( MUR - Min( CS ,RCSe ) ) / RMSe ),Max( MUR,Min( ( MLU - MUM ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_Mem_Server ) + Const ) / ( MDR - FirstVNF_RAM ) )", "choosing": "Max( Max( Min( ( RRSe - RMSe ) ,Min( RCSe ,RMSe ) ),( ( RRSe + DS ) + ( RCSe * DS ) ) ),( ( ( DS * DS ) + Min( CS ,CS ) ) - Max( Max( MUR,MUR ),( MUM / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( AMS,CRS ) ,( Const / MRS ) )", "choosing": "Min( ( RRSe + CS ) ,( ( Max( Min( ( ( RMSe - MLU ) * Max( RCSe,MUR ) ) ,( CS / MUC ) ),RCSe ) / MUR ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_Mem_Server * CRS ),( FirstVNF_RAM_Server - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( DS / RMSe ) * ( MUR + MUC ) ) + ( ( CS * CS ) + ( RCSe * RRSe ) ) ) + Max( ( ( MUR - CS ) * ( MUM / MUR ) ),Min( Min( MUC ,DS ) ,( MUC - RCSe ) ) ) )", "obj1": 0.5679245283018868, "obj2": 0.36675247715321546}, {"determining": "Max( ( ( ( CRS / FirstVNF_Mem_Server ) * ( CRS - FirstVNF_CPU ) ) + ( Min( ACS ,RRS ) + Min( MRS ,FirstVNF_Mem ) ) ),Max( Max( Min( CRS ,ACS ),Min( FirstVNF_RAM ,FirstVNF_Mem ) ),Min( Min( FirstVNF_Mem ,MRS ) ,Max( MDR,RRS ) ) ) )", "choosing": "Max( Min( Min( ( CS - MUM ) ,( RRSe - RMSe ) ) ,Max( Min( CS ,MUM ),( RMSe / RRSe ) ) ),Max( ( ( RRSe * MLU ) * ( RRSe - MLU ) ),( ( RCSe - RMSe ) + ( MUR / RMSe ) ) ) )", "obj1": 0.32452830188679244, "obj2": 0.6015544526339333}, {"determining": "( ( ( ( MRS / CRS ) + ( CRS - FirstVNF_RAM ) ) + ( ( Const * RRS ) / Min( AMS ,DDR ) ) ) * ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Min( MDR ,FirstVNF_RAM ) ) + ( Min( MDR ,FirstVNF_RAM ) * Max( Const,RRS ) ) ) )", "choosing": "Min( Max( ( ( RCSe - MLU ) + ( CS / RMSe ) ),Max( ( DS / MLU ),Min( MUC ,RMSe ) ) ) ,( ( ( RMSe * MUM ) * Max( MLU,MUM ) ) * Min( ( RCSe / MUC ) ,( MUR / CS ) ) ) )", "obj1": 0.7886792452830189, "obj2": 0.14500955069790936}, {"determining": "Max( Max( PN,( RRS / FirstVNF_CPU_Server ) ),( FirstVNF_RAM_Server / Min( MRS ,PN ) ) )", "choosing": "( Max( ( ( MLU / RMSe ) / ( CS * RMSe ) ),( ( RMSe + CS ) / ( CS * MLU ) ) ) / ( ( ( MUC / MUC ) / Min( CS ,DS ) ) / ( ( MLU + CS ) + ( MUM - MLU ) ) ) )", "obj1": 0.5924528301886792, "obj2": 0.31069605138687245}, {"determining": "( ( ( Max( CRS,PN ) / ( MDR * BR ) ) - Max( ( ARS - FirstVNF_Mem_Server ),Min( AMS ,PN ) ) ) + ( Min( Max( FirstVNF_CPU,ARS ) ,( MDR * FirstVNF_Mem_Server ) ) - ( ( AMS + ACS ) / Min( MRS ,RRS ) ) ) )", "choosing": "Min( Min( ( ( MUC * MLU ) / ( MUC / MUR ) ) ,( ( MUR - RCSe ) * ( DS * RMSe ) ) ) ,( Max( ( RRSe * RRSe ),Min( MUC ,DS ) ) / ( ( DS + RRSe ) - Max( MUC,DS ) ) ) )", "obj1": 0.35283018867924526, "obj2": 0.576464599446187}, {"determining": "Min( ( BR * MRS ) ,Min( ( MDR + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) )", "choosing": "Min( ( Max( ( RRSe / RMSe ),( MUR - CS ) ) - ( ( RMSe + MUC ) / ( DS - MUM ) ) ) ,( Min( ( MUR / MUC ) ,( MLU + RRSe ) ) - Min( ( MUM - MUM ) ,Max( RRSe,MLU ) ) ) )", "obj1": 0.35471698113207545, "obj2": 0.5695113418073122}, {"determining": "( ( Max( CRS,( PN / MRS ) ) - FirstVNF_CPU_Server ) / ( ( ACS / Const ) + ( Const / DDR ) ) )", "choosing": "( ( MLU - CS ) - Max( DS,MLU ) )", "obj1": 0.3754716981132076, "obj2": 0.49656632339595036}, {"determining": "( ( MDR * BR ) * Min( Max( FirstVNF_RAM_Server,ACS ) ,MRS ) )", "choosing": "Min( ( MUC + Max( DS,( DS * DS ) ) ) ,Min( MUC ,MUR ) )", "obj1": 0.4509433962264151, "obj2": 0.47928585981894867}, {"determining": "( Max( Min( CRS ,ACS ),( FirstVNF_CPU_Server - Max( PN,AMS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ARS ) )", "choosing": "( ( ( ( RCSe * MLU ) * ( MLU - MLU ) ) + ( ( MUM + MLU ) - ( MUM * MUM ) ) ) - Max( ( ( RCSe + MUC ) / ( RRSe / RCSe ) ),( ( CS + CS ) - ( MUC + DS ) ) ) )", "obj1": 0.9188679245283019, "obj2": 0.10092744706923497}, {"determining": "( ( ( Min( FirstVNF_RAM ,AMS ) / ( Const + BR ) ) * ( ( BR - ACS ) + ( FirstVNF_RAM * FirstVNF_Mem ) ) ) + ( Max( ( RRS * MRS ),( RRS / PN ) ) * Min( ( CRS - FirstVNF_RAM_Server ) ,( MDR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( MUC ,CS ) / ( RMSe / CS ) ) - ( ( MLU + RRSe ) + ( RMSe / MLU ) ) ) * ( Min( Min( MUR ,MUR ) ,Max( MUR,DS ) ) * Min( Max( MUR,RRSe ) ,Max( RRSe,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM / ARS ),( FirstVNF_Mem_Server - FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server - MRS ) * ( RRS - FirstVNF_CPU ) ) ) ,( Max( ( RRS + DDR ),( MDR / FirstVNF_Mem_Server ) ) - Min( ( Const - MRS ) ,Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( Max( MUC,RMSe ),Min( DS ,RRSe ) ) - Max( ( MUM - MUR ),Max( RCSe,MUC ) ) ) - Min( ( Max( RCSe,MUM ) - ( RCSe - RMSe ) ) ,( Min( MUC ,MLU ) + Min( RCSe ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( ( BR * FirstVNF_CPU ) * ( ACS * FirstVNF_RAM ) ) ,( ( Const - FirstVNF_RAM ) + ( ACS * ARS ) ) ),Min( Max( ( BR + FirstVNF_CPU_Server ),( FirstVNF_CPU + PN ) ) ,( ( CRS + PN ) + ( DDR * ACS ) ) ) )", "choosing": "Min( Max( Min( ( RRSe - MUR ) ,DS ),RRSe ) ,Min( ( ( RMSe - MUC ) - Min( MUR ,DS ) ) ,( MLU * Max( RCSe,CS ) ) ) )", "obj1": 0.1811320754716981, "obj2": 0.7203255601468851}, {"determining": "( ( ( MDR - FirstVNF_CPU_Server ) + Min( Max( MRS,FirstVNF_Mem ) ,FirstVNF_CPU ) ) + Min( Max( BR,PN ) ,( ( BR / FirstVNF_CPU_Server ) / PN ) ) )", "choosing": "( ( Max( MUR,Min( RCSe ,MLU ) ) * ( Min( MUR ,MUC ) - CS ) ) / ( DS + RRSe ) )", "obj1": 0.8924528301886793, "obj2": 0.10884045909444658}, {"determining": "Max( ( Max( ( DDR / FirstVNF_Mem ),( FirstVNF_RAM_Server * FirstVNF_RAM ) ) - ( Const * AMS ) ),( Min( Max( Const,PN ) ,( FirstVNF_RAM_Server - Const ) ) - ( ( Const + FirstVNF_CPU_Server ) * ( DDR / RRS ) ) ) )", "choosing": "( ( Max( ( MUR * RCSe ),( MUM - RCSe ) ) * ( ( CS * RRSe ) - ( MUM / RRSe ) ) ) + ( MUM / MUM ) )", "obj1": 0.28679245283018867, "obj2": 0.6313499839911025}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * Max( ( ( FirstVNF_Mem - Const ) * ( Const + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( ( MUM * DS ) / ( MUC / RRSe ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 0.9867924528301887, "obj2": 0.003150084621199583}, {"determining": "Min( ( FirstVNF_CPU_Server - Min( ACS ,FirstVNF_CPU_Server ) ) ,Min( FirstVNF_CPU_Server ,MRS ) )", "choosing": "Min( Min( Max( ( CS + RMSe ),Max( RCSe,RCSe ) ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,Max( ( Max( MUC,DS ) / ( MUC * MLU ) ),( Min( MUM ,RRSe ) - ( MUM - RCSe ) ) ) )", "obj1": 0.6735849056603773, "obj2": 0.24957547721773463}], "2": [{"determining": "Max( ( FirstVNF_Mem_Server - ( Min( ( CRS * DDR ) ,FirstVNF_CPU_Server ) - ( MRS + ( ACS / Min( PN ,( RRS * CRS ) ) ) ) ) ),( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / DS ) + ( MLU - Min( ( RMSe / ( MUM * Max( ( MUR + MUR ),MLU ) ) ) ,DS ) ) )", "obj1": 0.1339622641509434, "obj2": 0.768233423447714}, {"determining": "( ( RRS * CRS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUM / MLU ),( MUC - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,PN ) - ( FirstVNF_CPU_Server * ARS ) )", "choosing": "( ( MUM - MUR ) / Max( RCSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_Mem ) - Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC + MLU ) * ( MUM * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( FirstVNF_CPU_Server,MDR ) ,BR ) - ( FirstVNF_CPU / MRS ) )", "choosing": "( ( RMSe + ( ( ( RCSe - ( RCSe + RCSe ) ) / Max( MUM,MLU ) ) + MUC ) ) / Min( RRSe ,( MLU - Min( ( MUR / RMSe ) ,Min( Max( MLU,( ( MUM * MLU ) + RRSe ) ) ,( ( Min( MLU ,MUC ) / MUR ) + MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,ACS ) - ( MDR + AMS ) )", "choosing": "( ( RCSe - MLU ) - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - ( ( AMS + FirstVNF_CPU ) + PN ) ) - ( ACS / ( Min( AMS ,MRS ) + DDR ) ) )", "choosing": "Min( Max( MUC,RRSe ) ,( RMSe + ( RMSe / Min( ( ( Max( RCSe,MLU ) + ( MUM + ( RMSe / MUM ) ) ) + CS ) ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( AMS + Const ) - Max( FirstVNF_CPU_Server,ACS ) ) ,( ( CRS / DDR ) - Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) )", "choosing": "Min( Max( ( RMSe * DS ),( MLU / RRSe ) ) ,( ( CS - MLU ) + ( MLU / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ARS / RRS ) ,( FirstVNF_Mem * FirstVNF_RAM ) ) * ( Max( FirstVNF_Mem_Server,Const ) - ( Const + FirstVNF_CPU_Server ) ) ) ,Max( ( Min( ACS ,ACS ) / ( BR * FirstVNF_RAM ) ),( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RCSe,( ( ( RMSe + Min( MUM ,MLU ) ) / RMSe ) + MUM ) ) + ( Min( RMSe ,MUC ) + ( MUR * Min( RCSe ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,RRS ) - ( FirstVNF_Mem * DDR ) )", "choosing": "Max( ( ( MUR - Min( CS ,RCSe ) ) / RMSe ),Max( MUR,Min( ( MLU - MUM ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_Mem_Server ) + Const ) / ( MDR - FirstVNF_RAM ) )", "choosing": "Max( Max( Min( ( RRSe - RMSe ) ,Min( RCSe ,RMSe ) ),( ( RRSe + DS ) + ( RCSe * DS ) ) ),( ( ( DS * DS ) + Min( CS ,CS ) ) - Max( Max( MUR,MUR ),( MUM / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( AMS,CRS ) ,( Const / MRS ) )", "choosing": "Min( ( RRSe + CS ) ,( ( Max( Min( ( ( RMSe - MLU ) * Max( RCSe,MUR ) ) ,( CS / MUC ) ),RCSe ) / MUR ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS / CRS ) + ( CRS - FirstVNF_RAM ) ) + ( ( Const * RRS ) / Min( AMS ,DDR ) ) ) * ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Min( MDR ,FirstVNF_RAM ) ) + ( Min( MDR ,FirstVNF_RAM ) * Max( Const,RRS ) ) ) )", "choosing": "Min( Max( ( ( RCSe - MLU ) + ( CS / RMSe ) ),Max( ( DS / MLU ),Min( MUC ,RMSe ) ) ) ,( ( ( RMSe * MUM ) * Max( MLU,MUM ) ) * Min( ( RCSe / MUC ) ,( MUR / CS ) ) ) )", "obj1": 0.7886792452830189, "obj2": 0.14500955069790936}, {"determining": "( ( ( Min( FirstVNF_RAM ,AMS ) / ( Const + BR ) ) * ( ( BR - ACS ) + ( FirstVNF_RAM * FirstVNF_Mem ) ) ) + ( Max( ( RRS * MRS ),( RRS / PN ) ) * Min( ( CRS - FirstVNF_RAM_Server ) ,( MDR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( MUC ,CS ) / ( RMSe / CS ) ) - ( ( MLU + RRSe ) + ( RMSe / MLU ) ) ) * ( Min( Min( MUR ,MUR ) ,Max( MUR,DS ) ) * Min( Max( MUR,RRSe ) ,Max( RRSe,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM / ARS ),( FirstVNF_Mem_Server - FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server - MRS ) * ( RRS - FirstVNF_CPU ) ) ) ,( Max( ( RRS + DDR ),( MDR / FirstVNF_Mem_Server ) ) - Min( ( Const - MRS ) ,Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( Max( MUC,RMSe ),Min( DS ,RRSe ) ) - Max( ( MUM - MUR ),Max( RCSe,MUC ) ) ) - Min( ( Max( RCSe,MUM ) - ( RCSe - RMSe ) ) ,( Min( MUC ,MLU ) + Min( RCSe ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * Max( ( ( FirstVNF_Mem - Const ) * ( Const + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( ( MUM * DS ) / ( MUC / RRSe ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 0.9867924528301887, "obj2": 0.003150084621199583}, {"determining": "Min( ( ( Min( DDR ,FirstVNF_RAM ) + ( ARS - AMS ) ) - ( ( FirstVNF_Mem / CRS ) / Max( CRS,MRS ) ) ) ,Max( Min( ( ARS * ACS ) ,( DDR / FirstVNF_CPU ) ),( ( FirstVNF_RAM + PN ) - RRS ) ) )", "choosing": "Min( ( RRSe + CS ) ,( ( Max( Min( ( MUC + RMSe ) ,Min( CS ,CS ) ),RCSe ) / MUR ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( DDR ,FirstVNF_RAM ) + ( ARS - AMS ) ) - ( ( FirstVNF_Mem / CRS ) / Max( CRS,MRS ) ) ) ,Max( Min( ( ARS * ACS ) ,( DDR / FirstVNF_CPU ) ),( ( FirstVNF_RAM + PN ) - ( FirstVNF_CPU / ARS ) ) ) )", "choosing": "Min( ( MUC + RMSe ) ,Min( CS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,RRS ) - Max( ( BR - FirstVNF_RAM ),Min( PN ,Const ) ) )", "choosing": "Max( ( ( MUR - ( MUM / CS ) ) / RMSe ),Max( MUR,Min( ( MLU - MUM ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,RRS ) - ( Max( FirstVNF_Mem_Server,CRS ) / FirstVNF_Mem ) )", "choosing": "( ( ( MUC / MUC ) - ( CS * CS ) ) - ( ( MUC - MUC ) / ( MUM / Max( ( MUC * ( RRSe - Max( RMSe,( CS - MUR ) ) ) ),( CS / DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,ACS ) - ( ( FirstVNF_CPU / MRS ) + AMS ) )", "choosing": "( MLU - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,ACS ) - ( MDR + AMS ) )", "choosing": "( ( ( RRSe * MUM ) * ( MUC + MUR ) ) / ( Max( CS,MLU ) * Min( MUR ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + FirstVNF_CPU_Server ) - ( ACS / ( ARS * DDR ) ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( CS * RCSe ) * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - ( ( AMS + FirstVNF_CPU ) + PN ) ) - ( ACS / ( Min( AMS ,MRS ) + DDR ) ) )", "choosing": "Min( Max( MUC,RRSe ) ,( RMSe + ( RMSe / Min( ( ( Max( RCSe,MLU ) + ( MUM + ( RMSe / MUM ) ) ) + CS ) ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - ( ( AMS + FirstVNF_CPU ) + PN ) ) - ( ACS / ( Min( AMS ,MRS ) + DDR ) ) )", "choosing": "Min( Max( MUC,RRSe ) ,( RMSe + ( RMSe / Min( ( ( Max( RCSe,MLU ) + ( MUM + ( RMSe / MUM ) ) ) + CS ) ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - ( ( AMS + FirstVNF_CPU ) + PN ) ) - ( ACS / ( Min( AMS ,MRS ) + DDR ) ) )", "choosing": "Min( Max( MUC,RRSe ) ,( RMSe + ( RMSe / Min( ( ( Max( RCSe,MLU ) + ( MUM + ( RMSe / MUM ) ) ) + CS ) ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - ( ( AMS + FirstVNF_CPU ) + PN ) ) - ( ACS / ( ARS * DDR ) ) )", "choosing": "Min( Max( MUC,RRSe ) ,( RMSe / ( RMSe / Min( ( CS + ( Max( RCSe,MLU ) + MUC ) ) ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,ACS ) - Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC + MLU ) * ( MUM * Min( Max( RMSe,MUM ) ,( MUC * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,BR ) - Min( ACS ,PN ) )", "choosing": "Min( ( RRSe - ( MUC + MUM ) ) ,( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( AMS * FirstVNF_CPU_Server ) - Max( FirstVNF_CPU_Server,ACS ) ) ,( ( CRS / DDR ) - Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) )", "choosing": "Min( Max( ( RMSe * DS ),( MLU / RRSe ) ) ,( ( CS - MLU ) + ( MLU / ( ( MLU + MLU ) / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Max( CRS,MDR ) ,Max( ARS,( ACS * ( ACS / FirstVNF_CPU_Server ) ) ) ) - Max( FirstVNF_CPU_Server,ACS ) ) ,( ( CRS / DDR ) - Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) )", "choosing": "Min( Max( ( MLU / RRSe ),( ( MLU / ( CS + DS ) ) * RMSe ) ) ,( ( CS - MLU ) + ( MLU + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,RRS ) - ( FirstVNF_Mem * DDR ) )", "choosing": "Max( ( ( MUR - Min( CS ,RCSe ) ) / RMSe ),Max( MUR,Min( ( MLU - MUM ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR + Const ) ,( ( ( Max( Const,PN ) + ( FirstVNF_RAM_Server - Const ) ) - ( ( Const + FirstVNF_CPU_Server ) * ( DDR / RRS ) ) ) - FirstVNF_RAM ) )", "choosing": "Min( ( MUM * CS ) ,( Min( CS ,CS ) * ( MLU + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ( FirstVNF_CPU / Const ) ) * ( ACS + FirstVNF_CPU_Server ) )", "choosing": "Max( DS,Min( ( MUR - RCSe ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ( ( PN * BR ) * Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) / AMS ) ,MDR ) + FirstVNF_CPU_Server ) * ( BR - ( FirstVNF_CPU / Const ) ) )", "choosing": "( ( Max( ( MUM + RMSe ),Max( ( MUR - RCSe ),MUC ) ) - MUR ) * ( CS / Max( DS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,FirstVNF_Mem ) * ( BR - Min( ( MDR + FirstVNF_RAM_Server ) ,Const ) ) )", "choosing": "Max( ( RCSe * RMSe ),Min( ( MUC - CS ) ,( DS * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server / FirstVNF_CPU ) + Min( Const ,FirstVNF_Mem_Server ) ) + FirstVNF_RAM_Server ) * ( ( AMS / FirstVNF_CPU_Server ) - Const ) )", "choosing": "( ( RMSe - MUM ) * ( DS - MUC ) )", "obj1": 0.8320754716981132, "obj2": 0.11291445361015316}, {"determining": "( Max( BR,FirstVNF_Mem ) * ( BR - Min( ( MDR + FirstVNF_RAM_Server ) ,Const ) ) )", "choosing": "Max( ( RCSe * RMSe ),Min( ( MUC - CS ) ,( DS * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server / FirstVNF_CPU ) + Min( Const ,FirstVNF_Mem_Server ) ) + FirstVNF_RAM_Server ) * ( ( AMS / FirstVNF_CPU_Server ) - Const ) )", "choosing": "( ( RMSe - MUM ) * ( DS - MUC ) )", "obj1": 0.8320754716981132, "obj2": 0.11291445361015316}, {"determining": "( Max( BR,FirstVNF_Mem ) * ( BR - Min( ( MDR + FirstVNF_RAM_Server ) ,Const ) ) )", "choosing": "Max( ( RCSe * RMSe ),Min( ( MUC - CS ) ,( DS * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server / FirstVNF_CPU ) + Min( Const ,FirstVNF_Mem_Server ) ) + FirstVNF_RAM_Server ) * ( ( AMS / FirstVNF_CPU_Server ) - Const ) )", "choosing": "( ( RMSe - MUM ) * ( DS - MUC ) )", "obj1": 0.8320754716981132, "obj2": 0.11291445361015316}, {"determining": "( ( AMS * MDR ) * ( BR - ( ( FirstVNF_Mem / BR ) / Const ) ) )", "choosing": "Max( ( MUM + RMSe ),Min( ( ( MUM + MUM ) * Min( MLU ,Min( CS ,( MUC + DS ) ) ) ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_RAM_Server ) * ( Const - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( RCSe * ( MLU / MUC ) ),MUR ) * Min( DS ,MUC ) )", "obj1": 0.8320754716981132, "obj2": 0.11291445361015316}, {"determining": "( Min( Max( ACS,Const ) ,RRS ) - ( FirstVNF_Mem * DDR ) )", "choosing": "Max( ( ( ( MUR / CS ) - ( RCSe * CS ) ) / RMSe ),Max( MUR,Min( ( MLU - MUM ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,RRS ) - ( FirstVNF_Mem * DDR ) )", "choosing": "( ( MUR / CS ) - ( RCSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,( PN / ( ( FirstVNF_CPU_Server * ( MDR / FirstVNF_Mem_Server ) ) + Const ) ) ) - FirstVNF_CPU_Server ) / ( FirstVNF_Mem - ( ( CRS + FirstVNF_CPU_Server ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU - CS ) - Max( ( ( ( DS * DS ) + ( MUC * DS ) ) - Max( Max( MUR,MUR ),( ( ( ( MUC - MUR ) / RRSe ) * MUC ) / MLU ) ) ),Max( Min( ( RRSe * RMSe ) ,Min( RCSe ,RMSe ) ),( ( RRSe + DS ) + ( RCSe * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_Mem_Server ) + ( ( Max( CRS,( PN / MRS ) ) - FirstVNF_CPU_Server ) / ( ( ACS / Const ) + ( Const / DDR ) ) ) ) / ( MDR - FirstVNF_RAM ) )", "choosing": "Max( Max( Min( ( RRSe - RMSe ) ,Min( RCSe ,RMSe ) ),( ( RRSe + DS ) + ( RCSe * DS ) ) ),( ( ( DS * DS ) + Min( CS ,CS ) ) - Max( Max( MUR,MUR ),( ( ( MLU - CS ) - Max( DS,MLU ) ) / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * Max( ( ( FirstVNF_Mem - Const ) * ( Const + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( ARS + MDR ) ) ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( ( MUM * DS ) / ( ( Min( DS ,CS ) + Min( DS ,MUR ) ) / RRSe ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 0.9641509433962264, "obj2": 0.0077355139624761225}, {"determining": "Min( ( MRS * ( ACS - BR ) ) ,( ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) + MDR ) )", "choosing": "( MUM + ( Min( DS ,CS ) + Min( DS ,MUR ) ) )", "obj1": 0.8679245283018868, "obj2": 0.0984813826155557}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * Max( ( ( FirstVNF_Mem - Const ) * ( Const + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( ( MUM * DS ) / ( MUC / RRSe ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 0.9849056603773585, "obj2": 0.00355984411972223}, {"determining": "( ( ( Min( FirstVNF_RAM ,AMS ) / ( Const + BR ) ) * ( ( BR - ACS ) + ( FirstVNF_RAM * FirstVNF_Mem ) ) ) + Max( PN,( RRS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( MUC ,CS ) / ( RMSe / CS ) ) - ( ( MLU + RRSe ) + ( RMSe / MLU ) ) ) * ( Min( Min( MUR ,MUR ) ,Max( MUR,DS ) ) * Min( Max( ( Max( ( ( MLU / RMSe ) / ( CS * RMSe ) ),( ( RMSe + CS ) / ( CS * MLU ) ) ) / ( ( ( MUC / MUC ) / Min( CS ,DS ) ) / ( ( MLU + CS ) + ( MUM - MLU ) ) ) ),RRSe ) ,Max( RRSe,MLU ) ) ) )", "obj1": 0.9169811320754717, "obj2": 0.08151063369378828}, {"determining": "( ( ( Min( FirstVNF_RAM ,AMS ) / ( Const + BR ) ) * ( ( BR - ACS ) + ( FirstVNF_RAM * FirstVNF_Mem ) ) ) + ( Max( ( RRS * MRS ),( RRS / PN ) ) * Min( ( CRS - FirstVNF_RAM_Server ) ,( MDR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( ( MLU / RMSe ) / ( CS * RMSe ) ),( ( RMSe + CS ) / ( CS * MLU ) ) ) / ( ( ( MUC / MUC ) / Min( CS ,DS ) ) / ( ( MLU + CS ) + ( MUM - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM / ARS ),( FirstVNF_Mem_Server - FirstVNF_RAM ) ) - ( ( ( Max( ARS,AMS ) - ( BR + AMS ) ) + ( ( ARS + ACS ) * ( MRS * ARS ) ) ) * ( RRS - FirstVNF_CPU ) ) ) ,( Max( ( RRS + DDR ),( MDR / FirstVNF_CPU ) ) - Min( ARS ,( RRS / FirstVNF_Mem ) ) ) )", "choosing": "( ( Max( Max( RMSe,MUC ),Min( DS ,RRSe ) ) - Max( ( MUM - MUR ),Max( RCSe,MUC ) ) ) - Min( ( Max( RCSe,MUM ) - ( RCSe - ( RMSe / ( MUM + RMSe ) ) ) ) ,( Min( MUC ,MLU ) + Min( RCSe ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM / ARS ),( FirstVNF_Mem_Server - FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server - MRS ) * ( RRS - FirstVNF_CPU ) ) ) ,( Max( ( RRS + DDR ),( MDR / FirstVNF_Mem_Server ) ) - Min( ( Const - MRS ) ,Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( Min( DS ,MUC ) + ( MUR + DS ) ),RRSe ) + ( RMSe / ( RMSe - Min( RCSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_Mem ) - Min( ( ( ARS + Const ) / Max( FirstVNF_Mem_Server,BR ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC + RMSe ) * ( MUM * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - ( FirstVNF_Mem / ( CRS * ARS ) ) ) - Min( PN ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( CS - RMSe ) ,Max( RMSe,( MUM * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - DDR ) - ( Const + ( ( FirstVNF_RAM + ACS ) + ARS ) ) )", "choosing": "( Min( ( Max( MUR,RCSe ) * Max( RMSe,RCSe ) ) ,( ( RMSe - MLU ) - Max( MLU,RRSe ) ) ) + ( Min( ( ( DS / Min( CS ,DS ) ) * ( RMSe + CS ) ) ,CS ) / Max( Min( RRSe ,MUM ),( RRSe * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( FirstVNF_CPU_Server,MDR ) ,BR ) - ( FirstVNF_CPU / MRS ) )", "choosing": "( ( RMSe + ( ( ( RCSe - ( RCSe + RCSe ) ) / Max( MUM,MLU ) ) + MUC ) ) / Min( RRSe ,( MLU - Min( ( MUR / RMSe ) ,Min( Max( MLU,( ( MUM * MLU ) + RRSe ) ) ,( ( Min( MLU ,MUC ) / MUR ) + MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - DDR ) - ( Const + ( ( FirstVNF_RAM + ACS ) + ARS ) ) )", "choosing": "( Min( ( Max( MUR,RCSe ) * Max( RMSe,RCSe ) ) ,( ( RMSe - MLU ) - Max( MLU,RRSe ) ) ) + ( Min( ( ( DS / Min( CS ,DS ) ) * ( RMSe + CS ) ) ,CS ) / Max( Min( RRSe ,MUM ),( RRSe * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( FirstVNF_CPU_Server,MDR ) ,BR ) - ( FirstVNF_CPU / MRS ) )", "choosing": "( ( RMSe + ( ( ( RCSe - ( RCSe + RCSe ) ) / Max( MUM,MLU ) ) + MUC ) ) / Min( RRSe ,( MLU - Min( ( MUR / RMSe ) ,Min( Max( MLU,( ( MUM * MLU ) + RRSe ) ) ,( ( Min( MLU ,MUC ) / MUR ) + MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - DDR ) - ( Const + ( ( FirstVNF_RAM + ACS ) + ARS ) ) )", "choosing": "( Min( ( Max( MUR,RCSe ) * Max( RMSe,RCSe ) ) ,( ( RMSe - MLU ) - Max( MLU,RRSe ) ) ) + ( Min( ( ( DS / Min( CS ,DS ) ) * ( RMSe + CS ) ) ,CS ) / Max( Min( RRSe ,MUM ),( RRSe * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( FirstVNF_CPU_Server,MDR ) ,BR ) - ( FirstVNF_CPU / MRS ) )", "choosing": "( ( RMSe + ( ( ( RCSe - ( RCSe + RCSe ) ) / Max( MUM,MLU ) ) + MUC ) ) / Min( RRSe ,( MLU - Min( ( MUR / RMSe ) ,Min( Max( MLU,( ( MUM * MLU ) + RRSe ) ) ,( ( Min( MLU ,MUC ) / MUR ) + MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - DDR ) - ( Const + ( ( FirstVNF_RAM + ACS ) + ARS ) ) )", "choosing": "( Min( ( Max( MUR,RCSe ) * Max( RMSe,RCSe ) ) ,( ( RMSe - MLU ) - Max( MLU,RRSe ) ) ) + ( Min( ( ( DS / Min( CS ,DS ) ) * ( RMSe + CS ) ) ,CS ) / Max( Min( RRSe ,MUM ),( RRSe * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( DDR - ( MDR / MDR ) ) ) - ( FirstVNF_CPU / MRS ) )", "choosing": "( ( RMSe + ( ( ( RCSe - ( MUC * CS ) ) - Min( ( MUM * MUC ) ,MUM ) ) + MUC ) ) / Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS / CRS ) + ( CRS - FirstVNF_RAM ) ) + ( ( Const * RRS ) / Min( AMS ,DDR ) ) ) * ( Min( ( FirstVNF_Mem_Server - MDR ) ,Min( MDR ,FirstVNF_RAM ) ) + ( Min( MDR ,FirstVNF_RAM ) * Max( Const,RRS ) ) ) )", "choosing": "Min( Max( ( ( RCSe - MLU ) + ( CS / RMSe ) ),Max( ( ( RRSe * MLU ) * ( RRSe - MLU ) ),( ( RCSe - RMSe ) + ( MUR / RMSe ) ) ) ) ,( ( ( RMSe * MUM ) * Max( MLU,MUM ) ) * Min( ( RCSe / MUC ) ,( MUR / CS ) ) ) )", "obj1": 0.7603773584905661, "obj2": 0.16396324071363316}, {"determining": "( ( AMS / ( ( ( ACS / CRS ) / ( AMS / Const ) ) * MRS ) ) - ( FirstVNF_Mem_Server * CRS ) )", "choosing": "( Min( ( MUR + RRSe ) ,Max( CS,RCSe ) ) / Min( ( MUR / ( MUM / MUC ) ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,AMS ) / ( Const + BR ) ) * ( ( BR - ACS ) + ( FirstVNF_RAM * FirstVNF_Mem ) ) ) + ( Max( ( RRS * MRS ),( RRS / PN ) ) * Min( ( CRS - FirstVNF_RAM_Server ) ,( MDR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( MUC ,CS ) / ( RMSe / CS ) ) - ( ( MLU + RRSe ) + ( RMSe / MLU ) ) ) * ( Min( Min( MUR ,MUR ) ,Max( MUR,DS ) ) * Min( Max( MUR,RRSe ) ,Max( RRSe,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ARS / RRS ) ,( FirstVNF_Mem * FirstVNF_RAM ) ) * ( Min( FirstVNF_Mem_Server ,Const ) - ( Const + FirstVNF_CPU_Server ) ) ) ,Max( ( Min( ACS ,ACS ) / ( RRS / DDR ) ),Min( ( DDR / AMS ) ,( RRS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( MUM * MUR ) * ( RCSe / DS ) ) - ( Max( RCSe,RRSe ) / ( CS / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ARS / RRS ) ,( FirstVNF_Mem * FirstVNF_RAM ) ) * ( Max( FirstVNF_Mem_Server,Const ) - ( Const + FirstVNF_CPU_Server ) ) ) ,Max( ( Min( ACS ,ACS ) / ( BR * FirstVNF_RAM ) ),( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RCSe,( ( ( RMSe + Min( MUM ,MLU ) ) / RMSe ) + MUM ) ) + ( Min( RMSe ,MUC ) + ( MUR * Min( RCSe ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ARS / RRS ) ,( FirstVNF_Mem * FirstVNF_RAM ) ) * ( Max( FirstVNF_Mem_Server,Const ) - ( Const + FirstVNF_CPU_Server ) ) ) ,Max( ( Min( ACS ,ACS ) / ( BR * FirstVNF_RAM ) ),( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RCSe,( ( ( RMSe + Min( MUM ,MLU ) ) / RMSe ) + MUM ) ) + ( Min( RMSe ,MUC ) + ( MUR * Min( RCSe ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ARS / RRS ) ,( FirstVNF_Mem * FirstVNF_RAM ) ) * ( Max( FirstVNF_Mem_Server,Const ) - ( Const + FirstVNF_CPU_Server ) ) ) ,Max( ( Min( ACS ,ACS ) / ( BR * FirstVNF_RAM ) ),( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RCSe,( ( ( RMSe + Min( MUM ,MLU ) ) / RMSe ) + MUM ) ) + ( Min( RMSe ,MUC ) + ( MUR * Min( RCSe ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ARS / RRS ) ,( FirstVNF_Mem * FirstVNF_RAM ) ) * ( Min( FirstVNF_Mem_Server ,Const ) - ( Const + FirstVNF_CPU_Server ) ) ) ,Max( ( Min( ACS ,ACS ) / ( RRS / DDR ) ),( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( ( ( RMSe - MUC ) / RMSe ) + MUM ),RCSe ) + ( Min( RMSe ,MUC ) + ( MUR * Min( RCSe ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( BR + ARS ) ,AMS ) - ( ( Min( MRS ,FirstVNF_RAM ) + RRS ) + FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU - RRSe ) - ( Min( MLU ,RCSe ) + ( ( ( CS - CS ) - ( RCSe / MLU ) ) - Max( MLU,( DS * Max( DS,RRSe ) ) ) ) ) ) + ( ( MLU - MLU ) + ( MLU * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - Min( ACS ,FirstVNF_CPU_Server ) ) ,Min( FirstVNF_CPU_Server ,MRS ) )", "choosing": "Min( Min( Max( ( CS + RMSe ),Max( RCSe,RCSe ) ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,( RRSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ARS / RRS ) ,( FirstVNF_Mem * FirstVNF_RAM ) ) * ( Min( FirstVNF_Mem_Server ,Const ) - ( Const + FirstVNF_CPU_Server ) ) ) ,Max( ( Min( Max( FirstVNF_RAM_Server,ACS ) ,MRS ) / ( RRS / DDR ) ),( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( ( ( RMSe - MUR ) / RMSe ) + MUM ),RCSe ) + ( Min( RMSe ,MUC ) + ( MUR * Min( RCSe ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * BR ) * Min( Max( FirstVNF_RAM_Server,ACS ) ,Min( ( Min( ( ARS / RRS ) ,( FirstVNF_Mem * FirstVNF_RAM ) ) * ( Min( FirstVNF_Mem_Server ,Const ) - ( Const + FirstVNF_CPU_Server ) ) ) ,Max( ( Min( ACS ,ACS ) / ( RRS / DDR ) ),( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( MUC + Max( DS,( DS * DS ) ) ) ,( Max( ( ( ( RMSe - MUC ) / RMSe ) + MUM ),RCSe ) + ( Min( RMSe ,MUC ) + ( MUR * Min( RCSe ,MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ARS / RRS ) ,( FirstVNF_Mem * FirstVNF_RAM ) ) * ( Min( FirstVNF_Mem_Server ,Const ) - ( Const + FirstVNF_CPU_Server ) ) ) ,Max( ( Min( ACS ,ACS ) / ( RRS / DDR ) ),( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( ( ( RMSe - MUC ) / RMSe ) + MUM ),RCSe ) + ( Min( RMSe ,MUC ) + ( MUR * Min( RCSe ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS / CRS ) + ( CRS - FirstVNF_RAM ) ) + ( ( Const * RRS ) / Min( AMS ,DDR ) ) ) * ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Min( MDR ,( Const / ACS ) ) ) + ( Min( MDR ,FirstVNF_RAM ) * Max( Const,RRS ) ) ) )", "choosing": "Min( Max( ( ( RCSe - MLU ) + ( CS / RMSe ) ),Max( RMSe,MUM ) ) ,( ( ( RMSe * MUM ) * Max( MLU,MUM ) ) * Min( ( RCSe / MUC ) ,( MUR / CS ) ) ) )", "obj1": 0.7641509433962265, "obj2": 0.15607002663172134}, {"determining": "( ( ( ( MRS - CRS ) + ( CRS - FirstVNF_RAM ) ) + ( ( Const * RRS ) / Min( AMS ,DDR ) ) ) * Min( FirstVNF_CPU ,( Max( ARS,AMS ) - Min( PN ,ACS ) ) ) )", "choosing": "Min( Max( ( ( RCSe - MLU ) + ( CS / RMSe ) ),( Min( MUC ,RMSe ) / ( DS / MLU ) ) ) ,Min( CS ,MUR ) )", "obj1": 0.7886792452830189, "obj2": 0.14500955069790936}, {"determining": "( ( ( Min( BR ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * ( ARS + Max( DDR,AMS ) ) )", "choosing": "( Min( MUC ,CS ) * Max( ( RMSe * CS ),MUR ) )", "obj1": 0.9735849056603774, "obj2": 0.0066670709342865194}, {"determining": "( ( ACS + ( ARS + FirstVNF_Mem ) ) * ( Const - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( RCSe * ( Min( Min( RRSe ,CS ) ,Max( CS,RCSe ) ) / MUC ) ),MUR ) * Min( DS ,MUC ) )", "obj1": 0.8037735849056604, "obj2": 0.13065008626528038}, {"determining": "( Min( BR ,Max( FirstVNF_RAM_Server,MRS ) ) - ( FirstVNF_CPU / MRS ) )", "choosing": "( ( RMSe + ( ( ( RCSe - ( RCSe + RCSe ) ) / Min( MUM ,( MUM * MUC ) ) ) + MUC ) ) / Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,Max( FirstVNF_RAM_Server,ACS ) ) - ( FirstVNF_CPU / MRS ) )", "choosing": "( ( RMSe + ( ( ( RCSe - ( RCSe + RCSe ) ) / Min( MUM ,( MUM * MUC ) ) ) + MUC ) ) / Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / ( MDR / MRS ) ) - Max( ACS,Const ) )", "choosing": "( ( ( DS / MUC ) - RMSe ) * Max( MUR,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / ( MDR / MRS ) ) - ( FirstVNF_CPU / FirstVNF_RAM ) )", "choosing": "( ( MUR - RMSe ) * Max( MUR,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_CPU_Server / DDR ) ,MDR ) - MRS ) - Min( ACS ,ACS ) )", "choosing": "( ( ( DS / MUC ) - RMSe ) * Max( ( MUM / RMSe ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_CPU_Server / DDR ) ,MDR ) - MRS ) - Min( ACS ,ACS ) )", "choosing": "( ( ( DS / MUC ) - RMSe ) * Max( ( MUM / RMSe ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_CPU_Server / DDR ) ,MDR ) - MRS ) - Min( ACS ,ACS ) )", "choosing": "( ( ( DS / MUC ) - RMSe ) * Max( ( MUM / RMSe ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_CPU_Server / DDR ) ,MDR ) - MRS ) - Min( ACS ,ACS ) )", "choosing": "( ( ( DS / MUC ) - RMSe ) * Max( ( MUM / RMSe ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( AMS * FirstVNF_Mem ) * ( BR - ( FirstVNF_CPU / Const ) ) ) ,( ARS + MDR ) )", "choosing": "( Min( Max( DS,RMSe ) ,( DS * MUC ) ) + Min( ( MUM + MUM ) ,Min( MLU ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS * ( ACS - BR ) ) ,( ARS + MDR ) ) * ( BR - ( FirstVNF_CPU / Const ) ) )", "choosing": "Max( ( ( Min( DS ,CS ) + Min( DS ,MUR ) ) + RMSe ),Min( Min( ( MUM + MUM ) ,Min( MLU ,MUR ) ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * FirstVNF_Mem ) * ( BR - ( FirstVNF_CPU / Const ) ) )", "choosing": "Max( ( MUM + RMSe ),Min( Min( ( MUM + MUM ) ,Min( MLU ,MUR ) ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS / CRS ) + ( CRS - FirstVNF_RAM ) ) + ( ( Const * RRS ) / Min( AMS ,DDR ) ) ) * ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Min( MDR ,FirstVNF_RAM ) ) + ( Min( MDR ,FirstVNF_RAM ) * Max( Const,RRS ) ) ) )", "choosing": "Min( Min( RRSe ,RMSe ) ,Min( DS ,CS ) )", "obj1": 0.9226415094339623, "obj2": 0.0493313014088488}, {"determining": "( ( AMS * FirstVNF_CPU ) * ( BR - ( FirstVNF_CPU / Const ) ) )", "choosing": "Max( ( MUM + RMSe ),Min( Min( ( MUM + MUM ) ,Min( RRSe ,MUM ) ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * FirstVNF_Mem ) * ( BR - ( FirstVNF_CPU / Const ) ) )", "choosing": "( Max( DS,CS ) - Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,FirstVNF_Mem ) * ( BR - Min( ( MDR + FirstVNF_RAM_Server ) ,Const ) ) )", "choosing": "Max( ( RCSe * RMSe ),Min( ( MUC - CS ) ,( DS * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,FirstVNF_Mem ) * ( BR - Min( ( MDR + FirstVNF_RAM_Server ) ,Const ) ) )", "choosing": "Max( ( RCSe * RMSe ),Min( ( MUC - CS ) ,( DS * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * FirstVNF_Mem ) * ( ( FirstVNF_CPU * MRS ) / ACS ) )", "choosing": "Max( ( RCSe + DS ),Min( ( MUR - MLU ) ,Max( ( RRSe - RRSe ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ( MRS / FirstVNF_Mem_Server ) * ( RRS / ACS ) ) + Const ) - Max( FirstVNF_CPU_Server,ACS ) ) ,( ( CRS / DDR ) - Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) )", "choosing": "Min( Max( ( RMSe * DS ),( MUR - DS ) ) ,( ( CS - MLU ) + ( MLU / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( AMS + Const ) - Max( FirstVNF_CPU_Server,ACS ) ) ,( ( CRS / DDR ) - Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR - DS ) ,( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( ( RRS * CRS ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUM / MLU ),( MUC - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,PN ) - ( FirstVNF_CPU_Server * ARS ) )", "choosing": "( ( MUM - MUR ) / Max( RCSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_Mem ) - Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC + MLU ) * ( MUM * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( FirstVNF_CPU_Server,MDR ) ,BR ) - ( FirstVNF_CPU / MRS ) )", "choosing": "( ( RMSe + ( ( ( RCSe - ( RCSe + RCSe ) ) / Max( MUM,MLU ) ) + MUC ) ) / Min( RRSe ,( MLU - Min( ( MUR / RMSe ) ,Min( Max( MLU,( ( MUM * MLU ) + RRSe ) ) ,( ( Min( MLU ,MUC ) / MUR ) + MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,ACS ) - ( MDR + AMS ) )", "choosing": "( ( RCSe - MLU ) - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - ( ( AMS + FirstVNF_CPU ) + PN ) ) - ( ACS / ( Min( AMS ,MRS ) + DDR ) ) )", "choosing": "Min( Max( MUC,RRSe ) ,( RMSe + ( RMSe / Min( ( ( Max( RCSe,MLU ) + ( MUM + ( RMSe / MUM ) ) ) + CS ) ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( AMS + Const ) - Max( FirstVNF_CPU_Server,ACS ) ) ,( ( CRS / DDR ) - Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) )", "choosing": "Min( Max( ( RMSe * DS ),( MLU / RRSe ) ) ,( ( CS - MLU ) + ( MLU / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ARS / RRS ) ,( FirstVNF_Mem * FirstVNF_RAM ) ) * ( Max( FirstVNF_Mem_Server,Const ) - ( Const + FirstVNF_CPU_Server ) ) ) ,Max( ( Min( ACS ,ACS ) / ( BR * FirstVNF_RAM ) ),( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RCSe,( ( ( RMSe + Min( MUM ,MLU ) ) / RMSe ) + MUM ) ) + ( Min( RMSe ,MUC ) + ( MUR * Min( RCSe ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,RRS ) - ( FirstVNF_Mem * DDR ) )", "choosing": "Max( ( ( MUR - Min( CS ,RCSe ) ) / RMSe ),Max( MUR,Min( ( MLU - MUM ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_Mem_Server ) + Const ) / ( MDR - FirstVNF_RAM ) )", "choosing": "Max( Max( Min( ( RRSe - RMSe ) ,Min( RCSe ,RMSe ) ),( ( RRSe + DS ) + ( RCSe * DS ) ) ),( ( ( DS * DS ) + Min( CS ,CS ) ) - Max( Max( MUR,MUR ),( MUM / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( AMS,CRS ) ,( Const / MRS ) )", "choosing": "Min( ( RRSe + CS ) ,( ( Max( Min( ( ( RMSe - MLU ) * Max( RCSe,MUR ) ) ,( CS / MUC ) ),RCSe ) / MUR ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS / CRS ) + ( CRS - FirstVNF_RAM ) ) + ( ( Const * RRS ) / Min( AMS ,DDR ) ) ) * ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Min( MDR ,FirstVNF_RAM ) ) + ( Min( MDR ,FirstVNF_RAM ) * Max( Const,RRS ) ) ) )", "choosing": "Min( Max( ( ( RCSe - MLU ) + ( CS / RMSe ) ),Max( ( DS / MLU ),Min( MUC ,RMSe ) ) ) ,( ( ( RMSe * MUM ) * Max( MLU,MUM ) ) * Min( ( RCSe / MUC ) ,( MUR / CS ) ) ) )", "obj1": 0.7886792452830189, "obj2": 0.14500955069790936}, {"determining": "( ( ( Min( FirstVNF_RAM ,AMS ) / ( Const + BR ) ) * ( ( BR - ACS ) + ( FirstVNF_RAM * FirstVNF_Mem ) ) ) + ( Max( ( RRS * MRS ),( RRS / PN ) ) * Min( ( CRS - FirstVNF_RAM_Server ) ,( MDR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( MUC ,CS ) / ( RMSe / CS ) ) - ( ( MLU + RRSe ) + ( RMSe / MLU ) ) ) * ( Min( Min( MUR ,MUR ) ,Max( MUR,DS ) ) * Min( Max( MUR,RRSe ) ,Max( RRSe,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM / ARS ),( FirstVNF_Mem_Server - FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server - MRS ) * ( RRS - FirstVNF_CPU ) ) ) ,( Max( ( RRS + DDR ),( MDR / FirstVNF_Mem_Server ) ) - Min( ( Const - MRS ) ,Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( Max( MUC,RMSe ),Min( DS ,RRSe ) ) - Max( ( MUM - MUR ),Max( RCSe,MUC ) ) ) - Min( ( Max( RCSe,MUM ) - ( RCSe - RMSe ) ) ,( Min( MUC ,MLU ) + Min( RCSe ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( DDR ,FirstVNF_RAM ) + ( ARS - AMS ) ) - ( ( FirstVNF_Mem / CRS ) / Max( CRS,MRS ) ) ) ,Max( Min( ( ARS * ACS ) ,( DDR / FirstVNF_CPU ) ),( ( FirstVNF_RAM + PN ) - RRS ) ) )", "choosing": "Min( ( RRSe + CS ) ,( ( Max( Min( ( MUC + RMSe ) ,Min( CS ,CS ) ),RCSe ) / MUR ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( DDR ,FirstVNF_RAM ) + ( ARS - AMS ) ) - ( ( FirstVNF_Mem / CRS ) / Max( CRS,MRS ) ) ) ,Max( Min( ( ARS * ACS ) ,( DDR / FirstVNF_CPU ) ),( ( FirstVNF_RAM + PN ) - ( FirstVNF_CPU / ARS ) ) ) )", "choosing": "Min( ( MUC + RMSe ) ,Min( CS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,RRS ) - Max( ( BR - FirstVNF_RAM ),Min( PN ,Const ) ) )", "choosing": "Max( ( ( MUR - ( MUM / CS ) ) / RMSe ),Max( MUR,Min( ( MLU - MUM ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,RRS ) - ( Max( FirstVNF_Mem_Server,CRS ) / FirstVNF_Mem ) )", "choosing": "( ( ( MUC / MUC ) - ( CS * CS ) ) - ( ( MUC - MUC ) / ( MUM / Max( ( MUC * ( RRSe - Max( RMSe,( CS - MUR ) ) ) ),( CS / DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,ACS ) - ( ( FirstVNF_CPU / MRS ) + AMS ) )", "choosing": "( MLU - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,ACS ) - ( MDR + AMS ) )", "choosing": "( ( ( RRSe * MUM ) * ( MUC + MUR ) ) / ( Max( CS,MLU ) * Min( MUR ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + FirstVNF_CPU_Server ) - ( ACS / ( ARS * DDR ) ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( CS * RCSe ) * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - ( ( AMS + FirstVNF_CPU ) + PN ) ) - ( ACS / ( Min( AMS ,MRS ) + DDR ) ) )", "choosing": "Min( Max( MUC,RRSe ) ,( RMSe + ( RMSe / Min( ( ( Max( RCSe,MLU ) + ( MUM + ( RMSe / MUM ) ) ) + CS ) ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - ( ( AMS + FirstVNF_CPU ) + PN ) ) - ( ACS / ( Min( AMS ,MRS ) + DDR ) ) )", "choosing": "Min( Max( MUC,RRSe ) ,( RMSe + ( RMSe / Min( ( ( Max( RCSe,MLU ) + ( MUM + ( RMSe / MUM ) ) ) + CS ) ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - ( ( AMS + FirstVNF_CPU ) + PN ) ) - ( ACS / ( Min( AMS ,MRS ) + DDR ) ) )", "choosing": "Min( Max( MUC,RRSe ) ,( RMSe + ( RMSe / Min( ( ( Max( RCSe,MLU ) + ( MUM + ( RMSe / MUM ) ) ) + CS ) ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - ( ( AMS + FirstVNF_CPU ) + PN ) ) - ( ACS / ( ARS * DDR ) ) )", "choosing": "Min( Max( MUC,RRSe ) ,( RMSe / ( RMSe / Min( ( CS + ( Max( RCSe,MLU ) + MUC ) ) ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,ACS ) - Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC + MLU ) * ( MUM * Min( Max( RMSe,MUM ) ,( MUC * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,BR ) - Min( ACS ,PN ) )", "choosing": "Min( ( RRSe - ( MUC + MUM ) ) ,( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( AMS * FirstVNF_CPU_Server ) - Max( FirstVNF_CPU_Server,ACS ) ) ,( ( CRS / DDR ) - Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) )", "choosing": "Min( Max( ( RMSe * DS ),( MLU / RRSe ) ) ,( ( CS - MLU ) + ( MLU / ( ( MLU + MLU ) / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Max( CRS,MDR ) ,Max( ARS,( ACS * ( ACS / FirstVNF_CPU_Server ) ) ) ) - Max( FirstVNF_CPU_Server,ACS ) ) ,( ( CRS / DDR ) - Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) )", "choosing": "Min( Max( ( MLU / RRSe ),( ( MLU / ( CS + DS ) ) * RMSe ) ) ,( ( CS - MLU ) + ( MLU + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,RRS ) - ( FirstVNF_Mem * DDR ) )", "choosing": "Max( ( ( MUR - Min( CS ,RCSe ) ) / RMSe ),Max( MUR,Min( ( MLU - MUM ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server / FirstVNF_CPU ) + Min( Const ,FirstVNF_Mem_Server ) ) + FirstVNF_RAM_Server ) * ( ( AMS / FirstVNF_CPU_Server ) - Const ) )", "choosing": "( ( RMSe - MUM ) * ( DS - MUC ) )", "obj1": 0.8320754716981132, "obj2": 0.11291445361015316}, {"determining": "( ( ( ( FirstVNF_Mem_Server / FirstVNF_CPU ) + Min( Const ,FirstVNF_Mem_Server ) ) + FirstVNF_RAM_Server ) * ( ( AMS / FirstVNF_CPU_Server ) - Const ) )", "choosing": "( ( RMSe - MUM ) * ( DS - MUC ) )", "obj1": 0.8320754716981132, "obj2": 0.11291445361015316}, {"determining": "( ( ( ( FirstVNF_Mem_Server / FirstVNF_CPU ) + Min( Const ,FirstVNF_Mem_Server ) ) + FirstVNF_RAM_Server ) * ( ( AMS / FirstVNF_CPU_Server ) - Const ) )", "choosing": "( ( RMSe - MUM ) * ( DS - MUC ) )", "obj1": 0.8320754716981132, "obj2": 0.11291445361015316}, {"determining": "( ( ACS + FirstVNF_RAM_Server ) * ( Const - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( RCSe * ( MLU / MUC ) ),MUR ) * Min( DS ,MUC ) )", "obj1": 0.8320754716981132, "obj2": 0.11291445361015316}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * Max( ( ( FirstVNF_Mem - Const ) * ( Const + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( ARS + MDR ) ) ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( ( MUM * DS ) / ( ( Min( DS ,CS ) + Min( DS ,MUR ) ) / RRSe ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 0.9641509433962264, "obj2": 0.0077355139624761225}, {"determining": "Min( ( MRS * ( ACS - BR ) ) ,( ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) + MDR ) )", "choosing": "( MUM + ( Min( DS ,CS ) + Min( DS ,MUR ) ) )", "obj1": 0.8679245283018868, "obj2": 0.0984813826155557}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * Max( ( ( FirstVNF_Mem - Const ) * ( Const + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( ( MUM * DS ) / ( MUC / RRSe ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 0.9849056603773585, "obj2": 0.00355984411972223}, {"determining": "( ( ( ( MRS / CRS ) + ( CRS - FirstVNF_RAM ) ) + ( ( Const * RRS ) / Min( AMS ,DDR ) ) ) * ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Min( MDR ,( Const / ACS ) ) ) + ( Min( MDR ,FirstVNF_RAM ) * Max( Const,RRS ) ) ) )", "choosing": "Min( Max( ( ( RCSe - MLU ) + ( CS / RMSe ) ),Max( RMSe,MUM ) ) ,( ( ( RMSe * MUM ) * Max( MLU,MUM ) ) * Min( ( RCSe / MUC ) ,( MUR / CS ) ) ) )", "obj1": 0.7641509433962265, "obj2": 0.15607002663172134}, {"determining": "( ( ( ( MRS - CRS ) + ( CRS - FirstVNF_RAM ) ) + ( ( Const * RRS ) / Min( AMS ,DDR ) ) ) * Min( FirstVNF_CPU ,( Max( ARS,AMS ) - Min( PN ,ACS ) ) ) )", "choosing": "Min( Max( ( ( RCSe - MLU ) + ( CS / RMSe ) ),( Min( MUC ,RMSe ) / ( DS / MLU ) ) ) ,Min( CS ,MUR ) )", "obj1": 0.7886792452830189, "obj2": 0.14500955069790936}, {"determining": "( ( ( Min( BR ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * ( ARS + Max( DDR,AMS ) ) )", "choosing": "( Min( MUC ,CS ) * Max( ( RMSe * CS ),MUR ) )", "obj1": 0.9735849056603774, "obj2": 0.0066670709342865194}, {"determining": "( ( ( ( MRS / CRS ) + ( CRS - FirstVNF_RAM ) ) + ( ( Const * RRS ) / Min( AMS ,DDR ) ) ) * ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Min( MDR ,FirstVNF_RAM ) ) + ( Min( MDR ,FirstVNF_RAM ) * Max( Const,RRS ) ) ) )", "choosing": "Min( Min( RRSe ,RMSe ) ,Min( DS ,CS ) )", "obj1": 0.9226415094339623, "obj2": 0.0493313014088488}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * Max( ( ( FirstVNF_Mem - Const ) * ( Const + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS - FirstVNF_Mem ) ) ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( ( MUM * RMSe ) / ( MUC / RRSe ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 0.9584905660377359, "obj2": 0.009170455181939558}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * Max( ( ( FirstVNF_Mem - Const ) * ( Const + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( ( MUM * DS ) / ( MUC / RRSe ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 0.9849056603773585, "obj2": 0.00355984411972223}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * Max( ( Max( ( Min( ACS ,ACS ) / ( RRS / DDR ) ),( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) * ( Const + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( ( RMSe - MUC ) / RMSe ) + MUM ),RCSe ) + ( ( ( MUM * DS ) / ( MUC / RRSe ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 0.9886792452830189, "obj2": 0.002676124646248982}, {"determining": "( ( ( Min( FirstVNF_RAM ,AMS ) / ( Const + BR ) ) * ( ( BR - ACS ) + ( FirstVNF_RAM * FirstVNF_Mem ) ) ) + ( ( ( AMS - FirstVNF_Mem ) - Min( ACS ,FirstVNF_RAM_Server ) ) * Min( ( CRS - FirstVNF_RAM_Server ) ,( MDR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( MUC ,CS ) / ( RMSe / CS ) ) - ( ( MLU + RRSe ) + ( RMSe / MLU ) ) ) * ( Min( Min( MUR ,CS ) ,Max( MUR,DS ) ) * Min( Max( MUR,RRSe ) ,Max( RRSe,MLU ) ) ) )", "obj1": 0.3660377358490566, "obj2": 0.5372445122311195}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * Max( ( ( FirstVNF_Mem - Const ) * ( Const + FirstVNF_CPU ) ),( ( Min( AMS ,DDR ) + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( ( MUM * DS ) / ( MUC / RRSe ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 0.9849056603773585, "obj2": 0.00355984411972223}, {"determining": "( ( ( ( MRS / CRS ) + ( CRS - FirstVNF_RAM ) ) + ( ( Const * RRS ) / Min( AMS ,DDR ) ) ) * Max( ( ( FirstVNF_Mem - Const ) * ( Const + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "Min( ( MUM / RMSe ) ,( ( ( RMSe * MUM ) * Max( MLU,MUM ) ) * Min( ( RCSe / MUC ) ,( MUR / CS ) ) ) )", "obj1": 0.7584905660377359, "obj2": 0.1613913146935391}, {"determining": "( ( ( ( MRS / CRS ) + ( CRS - FirstVNF_RAM ) ) + ( ( Const * RRS ) / Min( AMS ,DDR ) ) ) * ( Min( ( FirstVNF_Mem_Server - MDR ) ,Min( MDR ,FirstVNF_RAM ) ) + ( Min( MDR ,FirstVNF_RAM ) * Max( Const,RRS ) ) ) )", "choosing": "( ( Max( ( MUM / RMSe ),Min( RRSe ,MUC ) ) * ( ( MUC - MLU ) / ( MUC + MLU ) ) ) + ( ( ( MUM * DS ) / ( MUC / RRSe ) ) / ( Min( RMSe ,MUM ) * ( RRSe + MLU ) ) ) )", "obj1": 0.7924528301886793, "obj2": 0.12987282219447052}, {"determining": "( ( ( Min( MRS ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * Max( ( ( FirstVNF_Mem - Const ) * ( Const + FirstVNF_CPU ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "Min( Max( ( ( RCSe - MLU ) + ( CS / RMSe ) ),Max( ( ( RRSe * MLU ) * ( RRSe - MLU ) ),( ( RCSe - RMSe ) + ( MUR / RMSe ) ) ) ) ,( ( ( RMSe * MUM ) * Max( MLU,MUM ) ) * Min( ( RCSe / MUC ) ,( MUR / CS ) ) ) )", "obj1": 0.9622641509433962, "obj2": 0.008207643763480547}, {"determining": "Min( ( MRS * ( ACS - BR ) ) ,( ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) + MDR ) )", "choosing": "( MUM + ( Min( DS ,CS ) + Min( DS ,MUR ) ) )", "obj1": 0.8679245283018868, "obj2": 0.0984813826155557}, {"determining": "Min( ( ( AMS * FirstVNF_CPU_Server ) - Max( FirstVNF_CPU_Server,ACS ) ) ,( ( MRS / CRS ) + ( CRS - FirstVNF_RAM ) ) )", "choosing": "Min( Max( ( RMSe * DS ),( MLU / RRSe ) ) ,( ( ( RMSe * MUM ) * Max( MLU,MUM ) ) * Min( ( RCSe / MUC ) ,( MUR / CS ) ) ) )", "obj1": 0.9, "obj2": 0.07664420749858251}, {"determining": "( ( ( ( MRS / CRS ) + ( CRS - FirstVNF_RAM ) ) + ( ( Const * RRS ) / Min( AMS ,DDR ) ) ) * ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Min( MDR ,( Const / ACS ) ) ) + ( Min( MDR ,FirstVNF_RAM ) * FirstVNF_CPU_Server ) ) )", "choosing": "Min( Max( ( ( RCSe - MLU ) + ( CS / RMSe ) ),Max( RMSe,MUM ) ) ,( ( ( ( MLU + MLU ) * MUM ) * Max( MLU,MUM ) ) * Min( ( RCSe / MUC ) ,( MUR / CS ) ) ) )", "obj1": 0.7283018867924528, "obj2": 0.20289886334632515}, {"determining": "( ( ( ( MRS / CRS ) + ( CRS - FirstVNF_RAM ) ) + ( ( Const * RRS ) / Min( AMS ,DDR ) ) ) * ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Min( MDR ,( Const / ACS ) ) ) + ( Min( MDR ,FirstVNF_RAM ) * Max( Const,RRS ) ) ) )", "choosing": "Min( Max( ( ( RCSe - MLU ) + ( CS / RMSe ) ),Max( RMSe,MUM ) ) ,( ( ( RMSe * MUM ) * Max( MLU,MUM ) ) * Min( ( RCSe / MUC ) ,( MUR / CS ) ) ) )", "obj1": 0.7641509433962265, "obj2": 0.15607002663172134}, {"determining": "( ( ( ( MRS / CRS ) + ( CRS - FirstVNF_RAM ) ) + ( ( Const * RRS ) / Min( AMS ,DDR ) ) ) * ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,( RRS / DDR ) ) + ( Min( MDR ,FirstVNF_RAM ) * Max( Const,RRS ) ) ) )", "choosing": "Min( Max( ( ( RCSe - MLU ) + ( ( MUR * Min( RCSe ,MLU ) ) / RMSe ) ),Max( RMSe,MUM ) ) ,( ( ( RMSe * MUM ) * Max( MLU,MUM ) ) * Min( ( RCSe / MUC ) ,( MUR / CS ) ) ) )", "obj1": 0.7641509433962265, "obj2": 0.15607002663172134}, {"determining": "( ( ( ( MRS / CRS ) + ( CRS - FirstVNF_RAM ) ) + ( ( Const * RRS ) / Min( AMS ,DDR ) ) ) * ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Min( MDR ,( Const / ACS ) ) ) + ( Min( MDR ,FirstVNF_RAM ) * Max( Const,RRS ) ) ) )", "choosing": "Min( Max( ( ( RCSe - MLU ) + ( CS / RMSe ) ),Max( RMSe,MUM ) ) ,( ( ( RMSe * MUM ) * Max( MLU,MUM ) ) * Min( ( RCSe / MUC ) ,( MUR / CS ) ) ) )", "obj1": 0.7773584905660378, "obj2": 0.15015381827364724}, {"determining": "( Min( ARS ,RRS ) - ( ( ( ACS + FirstVNF_CPU_Server ) * ( BR - ( FirstVNF_CPU / Const ) ) ) * DDR ) )", "choosing": "( ( ( MUC / MUC ) - ( CS * CS ) ) - ( ( Min( ( MUR - RCSe ) ,MUC ) - MUM ) / ( MUM / CS ) ) )", "obj1": 0.37169811320754714, "obj2": 0.5359245170978897}, {"determining": "( ( ( Min( BR ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * ( ARS + Max( DDR,AMS ) ) )", "choosing": "( Min( MUC ,CS ) * Max( ( RMSe * CS ),MUR ) )", "obj1": 0.9735849056603774, "obj2": 0.0066670709342865194}, {"determining": "( ( ( Min( BR ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * ( ARS + Max( DDR,AMS ) ) )", "choosing": "( Min( MUC ,CS ) * Max( ( RMSe * CS ),MUR ) )", "obj1": 0.9735849056603774, "obj2": 0.0066670709342865194}, {"determining": "( ( ( Min( BR ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * ( ARS + Max( DDR,AMS ) ) )", "choosing": "( Min( MUC ,CS ) * Max( ( RMSe * CS ),MUR ) )", "obj1": 0.9735849056603774, "obj2": 0.0066670709342865194}, {"determining": "( ( ( Min( BR ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * ( ARS + Max( DDR,AMS ) ) )", "choosing": "( Min( MUC ,CS ) * Max( ( RMSe * CS ),MUR ) )", "obj1": 0.9735849056603774, "obj2": 0.0066670709342865194}, {"determining": "Max( ( ( ACS + FirstVNF_RAM_Server ) * ( Const - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ),( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( Max( ( RCSe * ( MLU / MUC ) ),MUR ) / DS ) + ( MLU - CS ) )", "obj1": 0.09622641509433963, "obj2": 0.7889836658039723}, {"determining": "( ( ACS + FirstVNF_RAM_Server ) * ( Const - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe / DS ) + ( MLU - CS ) )", "obj1": 0.3264150943396226, "obj2": 0.566338769992197}, {"determining": "Max( ( FirstVNF_Mem_Server - ( Min( ( CRS * DDR ) ,FirstVNF_CPU_Server ) - ( MRS + ( ACS / Min( PN ,( RRS * CRS ) ) ) ) ) ),( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / DS ) + ( MLU - Min( ( RMSe / ( MUM * Max( ( MUR + MUR ),MLU ) ) ) ,DS ) ) )", "obj1": 0.1320754716981132, "obj2": 0.7680595603130288}, {"determining": "Max( ( FirstVNF_Mem_Server - ( Min( ( CRS * DDR ) ,FirstVNF_CPU_Server ) - ( MRS + ( ACS / Min( PN ,( RRS * CRS ) ) ) ) ) ),( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / DS ) + ( MLU - Min( ( RMSe / ( MUM * Max( ( MUR + MUR ),MLU ) ) ) ,DS ) ) )", "obj1": 0.1320754716981132, "obj2": 0.7680595603130288}, {"determining": "Max( ( FirstVNF_Mem_Server - ( Min( ( CRS * DDR ) ,FirstVNF_CPU_Server ) - ( MRS + ( ACS / Min( PN ,( RRS * CRS ) ) ) ) ) ),( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / DS ) + ( MLU - Min( ( RMSe / ( MUM * Max( ( MUR + MUR ),MLU ) ) ) ,DS ) ) )", "obj1": 0.1320754716981132, "obj2": 0.7680595603130288}, {"determining": "Max( ( FirstVNF_Mem_Server - ( Min( ( CRS * DDR ) ,FirstVNF_CPU_Server ) - ( MRS + ( ACS / Min( PN ,( RRS * CRS ) ) ) ) ) ),( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / DS ) + ( MLU - Min( ( RMSe / ( MUM * Max( ( MUR + MUR ),MLU ) ) ) ,DS ) ) )", "obj1": 0.1320754716981132, "obj2": 0.7680595603130288}, {"determining": "( ( ( Min( FirstVNF_RAM ,AMS ) / ( Const + BR ) ) * ( ( BR - ACS ) + ( FirstVNF_RAM * FirstVNF_Mem ) ) ) + Max( ( FirstVNF_RAM / FirstVNF_Mem ),ACS ) )", "choosing": "( Max( ( ( ( RCSe - ( RCSe + RCSe ) ) / Max( MUM,MLU ) ) / ( CS * RMSe ) ),( ( RMSe + CS ) / ( CS * MLU ) ) ) / ( ( ( MUC / MUC ) / Min( CS ,DS ) ) / ( ( MLU + CS ) + ( MUM - MLU ) ) ) )", "obj1": 0.6037735849056604, "obj2": 0.31328287262252286}, {"determining": "( ( FirstVNF_RAM + ACS ) * ( ( AMS / FirstVNF_CPU_Server ) - Const ) )", "choosing": "( ( Min( ( Max( MUR,RCSe ) * Max( RMSe,RCSe ) ) ,( ( RMSe - MLU ) - Max( MLU,RRSe ) ) ) + ( Min( ( ( DS / Min( CS ,DS ) ) * ( RMSe + CS ) ) ,CS ) / Max( Min( RRSe ,MUM ),( RRSe * MUC ) ) ) ) * ( DS - MUC ) )", "obj1": 0.5283018867924528, "obj2": 0.35601334491418307}, {"determining": "Min( ( PN - Min( ( ( AMS + Const ) - Max( FirstVNF_CPU_Server,ACS ) ) ,( ( CRS / DDR ) - Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) ,Min( FirstVNF_CPU_Server ,MRS ) )", "choosing": "Min( Min( Max( ( CS + RMSe ),Min( Max( ( RMSe * DS ),( MLU / RRSe ) ) ,( ( CS - MLU ) + ( MLU / MUR ) ) ) ) ,( Max( DS,RCSe ) / ( RMSe / DS ) ) ) ,( RRSe * MUR ) )", "obj1": 0.6849056603773584, "obj2": 0.25008587943459315}, {"determining": "( ( ACS + ( ARS + FirstVNF_Mem ) ) * ( Const - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) )", "choosing": "( MLU - Max( DS,CS ) )", "obj1": 0.49245283018867925, "obj2": 0.3657181948896784}, {"determining": "( ( Max( BR,( PN / ( ( FirstVNF_CPU_Server * ( MDR / FirstVNF_Mem_Server ) ) + Const ) ) ) - FirstVNF_CPU_Server ) / ( FirstVNF_Mem - ( ( CRS + FirstVNF_CPU_Server ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU - CS ) - Max( ( ( ( DS * DS ) + ( MUC * DS ) ) - Max( Max( MUR,MUR ),( ( ( ( MUC - MUR ) / RRSe ) * MUC ) / MLU ) ) ),Max( Min( ( RRSe * RMSe ) ,Min( RCSe ,RMSe ) ),( ( RRSe + DS ) + ( RCSe * DS ) ) ) ) )", "obj1": 0.3018867924528302, "obj2": 0.5673205754524807}, {"determining": "( ( Max( BR,( PN / ( ( FirstVNF_CPU_Server * ( MDR / FirstVNF_Mem_Server ) ) + Const ) ) ) - FirstVNF_CPU_Server ) / ( FirstVNF_Mem - ( ( CRS + FirstVNF_CPU_Server ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU - CS ) - Max( ( ( ( DS * DS ) + ( MUC * DS ) ) - Max( Max( MUR,MUR ),( ( ( ( MUC - MUR ) / RRSe ) * MUC ) / MLU ) ) ),Max( Min( ( RRSe * RMSe ) ,Min( RCSe ,RMSe ) ),( ( RRSe + DS ) + ( RCSe * DS ) ) ) ) )", "obj1": 0.3018867924528302, "obj2": 0.5673205754524807}, {"determining": "( ( Max( BR,( PN / ( ( FirstVNF_CPU_Server * ( MDR / FirstVNF_Mem_Server ) ) + Const ) ) ) - FirstVNF_CPU_Server ) / ( FirstVNF_Mem - ( ( CRS + FirstVNF_CPU_Server ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU - CS ) - Max( ( ( ( DS * DS ) + ( MUC * DS ) ) - Max( Max( MUR,MUR ),( ( ( ( MUC - MUR ) / RRSe ) * MUC ) / MLU ) ) ),Max( Min( ( RRSe * RMSe ) ,Min( RCSe ,RMSe ) ),( ( RRSe + DS ) + ( RCSe * DS ) ) ) ) )", "obj1": 0.3018867924528302, "obj2": 0.5673205754524807}, {"determining": "( ( Max( BR,( PN / ( ( CRS * FirstVNF_Mem_Server ) + Const ) ) ) - FirstVNF_CPU_Server ) / ( FirstVNF_Mem - ( ( CRS + FirstVNF_CPU_Server ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU - CS ) - Max( Max( Min( ( RRSe * RMSe ) ,Min( RCSe ,RMSe ) ),( ( RRSe + DS ) + ( RCSe * DS ) ) ),( ( ( DS * DS ) + ( MUC - DS ) ) - Max( Max( MUR,MUR ),( MUM / MLU ) ) ) ) )", "obj1": 0.29245283018867924, "obj2": 0.5907245291402816}, {"determining": "( ( ( Min( BR ,MRS ) - ( CRS - ACS ) ) - ( ( BR - ( ( Min( ( FirstVNF_CPU_Server / DDR ) ,MDR ) - MRS ) - Min( ACS ,ACS ) ) ) / ( AMS - ACS ) ) ) * ( ARS + Max( DDR,AMS ) ) )", "choosing": "( ( ( ( DS / MUC ) - RMSe ) * Max( ( MUM / RMSe ),MLU ) ) * Max( ( RMSe * CS ),MUR ) )", "obj1": 0.9867924528301887, "obj2": 0.003060272903644221}, {"determining": "( ( ( Min( BR ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * ( ARS + Max( DDR,AMS ) ) )", "choosing": "( ( ( DS / MUC ) - RMSe ) * Max( ( MUM / RMSe ),MLU ) )", "obj1": 0.9867924528301887, "obj2": 0.003060272903644221}, {"determining": "( ( ( ( MRS / CRS ) + ( CRS - FirstVNF_RAM ) ) + ( ( Const * RRS ) / Min( AMS ,DDR ) ) ) * ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Min( MDR ,FirstVNF_RAM ) ) + ( Min( MDR ,FirstVNF_RAM ) * Max( Const,RRS ) ) ) )", "choosing": "Max( Max( Min( ( RRSe - RMSe ) ,Min( RCSe ,RMSe ) ),( ( RRSe + DS ) + ( RCSe * DS ) ) ),( ( ( DS * DS ) + Min( CS ,CS ) ) - Max( Max( MUR,MUR ),( ( ( MLU - CS ) - Max( DS,MLU ) ) / MLU ) ) ) )", "obj1": 0.869811320754717, "obj2": 0.0848975258879638}, {"determining": "( ( ( ( MRS / CRS ) + ( CRS - FirstVNF_RAM ) ) + ( ( Const * RRS ) / Min( AMS ,DDR ) ) ) * ( Min( ( FirstVNF_Mem_Server - MDR ) ,( Min( ( FirstVNF_CPU_Server / DDR ) ,MDR ) - MRS ) ) + ( Min( MDR ,FirstVNF_RAM ) * Max( Const,RRS ) ) ) )", "choosing": "Min( RMSe ,( ( ( RMSe * MUM ) * Max( MLU,MUM ) ) * Min( ( RCSe / MUC ) ,( MUR / CS ) ) ) )", "obj1": 0.7641509433962265, "obj2": 0.15607002663172134}, {"determining": "Max( ( FirstVNF_Mem_Server - ( Min( ( CRS * DDR ) ,( AMS / FirstVNF_CPU_Server ) ) - ( MRS + ( ACS / Min( PN ,( RRS * CRS ) ) ) ) ) ),( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / DS ) + ( MLU - Min( ( RMSe / DS ) ,DS ) ) )", "obj1": 0.12830188679245283, "obj2": 0.7763266164232443}, {"determining": "( ( AMS / ( ( ( ACS / CRS ) / ( AMS / Const ) ) * MRS ) ) - ( FirstVNF_Mem_Server * CRS ) )", "choosing": "( Min( ( MUR + RRSe ) ,Max( CS,RCSe ) ) * Min( ( MUR / ( MUM / MUC ) ) ,RCSe ) )", "obj1": 0.47924528301886793, "obj2": 0.446042994185572}, {"determining": "Max( ( FirstVNF_Mem_Server - ( Min( ( CRS * DDR ) ,FirstVNF_CPU_Server ) - ( MRS + ( ACS / Min( PN ,( Const - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) ) ) ) ),( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / DS ) + ( MLU - Min( ( RMSe / ( MUM * Max( ( MUR + MUR ),Min( DS ,MUC ) ) ) ) ,DS ) ) )", "obj1": 0.14528301886792452, "obj2": 0.7656294036689326}, {"determining": "( ( ACS + FirstVNF_RAM_Server ) * ( Const - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( RCSe * ( MLU / MUC ) ),MUR ) * Min( DS ,MUC ) )", "obj1": 0.8056603773584906, "obj2": 0.12967716889111303}, {"determining": "Max( ( FirstVNF_Mem_Server - ( Min( ( CRS * DDR ) ,FirstVNF_CPU_Server ) - ( MRS + ( ACS / Min( PN ,( RRS * CRS ) ) ) ) ) ),( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / DS ) + ( MLU - Min( ( RMSe / ( MUM * Max( ( MUR + MUR ),MLU ) ) ) ,DS ) ) )", "obj1": 0.10377358490566038, "obj2": 0.7832269430451899}, {"determining": "( ( ( MDR + FirstVNF_RAM_Server ) / Const ) - Min( ( ( ARS + Const ) / Max( FirstVNF_Mem_Server,BR ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC + RMSe ) * ( MUM * DS ) )", "obj1": 0.6490566037735849, "obj2": 0.2646874637685665}, {"determining": "( Min( Max( ( FirstVNF_RAM / FirstVNF_Mem ),ACS ) ,BR ) - Min( BR ,Max( FirstVNF_RAM_Server,ACS ) ) )", "choosing": "( ( RMSe + ( ( ( RCSe - ( ( RCSe + RCSe ) + RCSe ) ) / Max( MUM,MLU ) ) + MUC ) ) / Min( RRSe ,MUM ) )", "obj1": 0.35471698113207545, "obj2": 0.5631222502347424}, {"determining": "( ( ( ( MRS / CRS ) + ( CRS - FirstVNF_RAM ) ) + ( ( Const * RRS ) / Min( AMS ,DDR ) ) ) * ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ,Min( MDR ,FirstVNF_RAM ) ) + ( Min( MDR ,FirstVNF_RAM ) * Max( Const,RRS ) ) ) )", "choosing": "Min( Max( ( ( RCSe - MLU ) + ( CS / RMSe ) ),Max( ( DS / MLU ),Min( MUC ,RMSe ) ) ) ,( ( ( RMSe * MUM ) * Max( MLU,MUM ) ) * Min( ( RCSe / MUC ) ,( MUR / CS ) ) ) )", "obj1": 0.7886792452830189, "obj2": 0.14500955069790936}, {"determining": "( ( AMS * FirstVNF_Mem ) * ( ARS + MDR ) )", "choosing": "Max( ( RCSe + ( ( Min( DS ,CS ) + Min( DS ,MUR ) ) + RMSe ) ),Min( Max( ( RRSe - RRSe ),DS ) ,( DS * MLU ) ) )", "obj1": 0.6132075471698113, "obj2": 0.3057895170220333}, {"determining": "( ( ( CRS * FirstVNF_Mem_Server ) + ( ( Max( CRS,( PN / MRS ) ) - FirstVNF_CPU_Server ) / ( ( BR - ( FirstVNF_CPU / Const ) ) + ( Const / DDR ) ) ) ) / ( MDR - FirstVNF_RAM ) )", "choosing": "Max( Max( Min( ( Min( DS ,CS ) - RMSe ) ,Min( RCSe ,RMSe ) ),( ( RRSe + DS ) + ( RCSe * DS ) ) ),( ( ( DS * DS ) + Min( CS ,CS ) ) - Max( Max( MUR,MUR ),( ( ( MLU - CS ) - Max( DS,MLU ) ) / MLU ) ) ) )", "obj1": 0.9981132075471698, "obj2": 0.0021040696043883584}, {"determining": "( ( ACS + ( ARS + FirstVNF_Mem ) ) * ( Const - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU - CS ) - Max( Max( Min( ( RRSe * RMSe ) ,Min( RCSe ,RMSe ) ),( ( RRSe + DS ) + ( RCSe * DS ) ) ),( ( ( DS * DS ) + ( MUC - DS ) ) - Max( Max( MUR,MUR ),( MUM / MLU ) ) ) ) )", "obj1": 0.4, "obj2": 0.4671624886799662}, {"determining": "Min( ( Max( ( FirstVNF_RAM / ARS ),( FirstVNF_Mem_Server - FirstVNF_RAM ) ) - ( ( ( Max( ACS,AMS ) - ( BR + AMS ) ) + ( ( ARS + ACS ) * ( MRS * ARS ) ) ) * ( RRS - FirstVNF_CPU ) ) ) ,( Max( ( RRS + DDR ),( MDR / FirstVNF_CPU ) ) - Min( ARS ,( RRS / FirstVNF_Mem ) ) ) )", "choosing": "( ( Max( Max( RMSe,MUC ),Min( DS ,RRSe ) ) - Max( ( MUM - MUR ),Max( RCSe,MUC ) ) ) - Min( ( Max( RCSe,MUM ) - ( RCSe - ( RMSe / ( DS + RMSe ) ) ) ) ,( Min( MUC ,MLU ) + Min( RCSe ,MLU ) ) ) )", "obj1": 0.4849056603773585, "obj2": 0.43854690065978214}, {"determining": "Min( ( Max( ( FirstVNF_RAM / ARS ),( FirstVNF_Mem_Server - FirstVNF_RAM ) ) - ( ( ( Max( ARS,AMS ) - ( BR + AMS ) ) + ( ( ARS + ACS ) * ( MRS * ARS ) ) ) * ( RRS - FirstVNF_CPU ) ) ) ,( Max( ( RRS + DDR ),( MDR / FirstVNF_CPU ) ) - Min( ARS ,( RRS / FirstVNF_Mem ) ) ) )", "choosing": "Max( ( ( Min( DS ,CS ) + Min( DS ,MUR ) ) + RMSe ),Min( Min( ( MUM + MUM ) ,Min( MLU ,MUR ) ) ,MUC ) )", "obj1": 0.6452830188679245, "obj2": 0.2920484505688742}, {"determining": "( ( ( CRS * FirstVNF_Mem_Server ) + ( ( Max( CRS,( PN / ( ARS + MDR ) ) ) - FirstVNF_CPU_Server ) / ( ( ACS / Const ) + ( Const / DDR ) ) ) ) / ( MDR - FirstVNF_RAM ) )", "choosing": "Max( Max( Min( ( RRSe - RMSe ) ,Min( RCSe ,RMSe ) ),( ( RRSe + DS ) + ( RCSe * DS ) ) ),( ( ( DS * DS ) + Min( CS ,CS ) ) - Max( Max( MUR,MUR ),( ( ( MLU - MUR ) - Max( DS,MLU ) ) / MLU ) ) ) )", "obj1": 0.6754716981132075, "obj2": 0.2583839633773898}, {"determining": "( ( ( Min( BR ,MRS ) - ( CRS - ACS ) ) - ( ( BR - FirstVNF_RAM ) / ( AMS - ACS ) ) ) * ( ARS + Max( DDR,AMS ) ) )", "choosing": "( Min( MUC ,CS ) * Max( ( RMSe * CS ),MUR ) )", "obj1": 0.9735849056603774, "obj2": 0.0066670709342865194}, {"determining": "( ( Max( BR,( PN / ( ( CRS * FirstVNF_Mem_Server ) + Const ) ) ) - FirstVNF_CPU_Server ) / ( FirstVNF_Mem - ( ( CRS + FirstVNF_CPU_Server ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU - CS ) - Max( Max( Min( ( RRSe * RMSe ) ,Min( RCSe ,RMSe ) ),( ( RRSe + DS ) + ( RCSe * DS ) ) ),( ( ( DS * DS ) + ( MUC - DS ) ) - Max( Max( MUR,MUR ),( MUM / MLU ) ) ) ) )", "obj1": 0.2849056603773585, "obj2": 0.6063728283518703}, {"determining": "( ( ( CRS * FirstVNF_Mem_Server ) + Const ) / ( FirstVNF_RAM * FirstVNF_Mem ) )", "choosing": "Max( Max( Min( ( RRSe - RMSe ) ,Min( RCSe ,RMSe ) ),( ( RRSe + DS ) + ( RCSe * DS ) ) ),( ( ( DS * DS ) + Min( CS ,CS ) ) - ( ( MLU + RRSe ) + ( RMSe / MLU ) ) ) )", "obj1": 0.6377358490566037, "obj2": 0.29825960579468447}, {"determining": "( ( Max( BR,( PN / ( ( CRS * FirstVNF_Mem_Server ) + Const ) ) ) - FirstVNF_CPU_Server ) / ( FirstVNF_Mem - ( ( CRS + Max( ( Min( ACS ,ACS ) / ( RRS / DDR ) ),( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU - CS ) - Max( Max( Min( ( RRSe * RMSe ) ,Min( RCSe ,RMSe ) ),( ( RRSe + DS ) + ( RCSe * DS ) ) ),( ( ( DS * DS ) + ( MUC - DS ) ) - ( RMSe - MUC ) ) ) )", "obj1": 0.26037735849056604, "obj2": 0.6193849047228681}, {"determining": "( ( Max( BR,( PN / ( ( FirstVNF_CPU_Server * ( MDR / FirstVNF_Mem_Server ) ) + Const ) ) ) - FirstVNF_CPU_Server ) / ( FirstVNF_Mem - ( ( CRS + FirstVNF_CPU_Server ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU - CS ) - Max( ( ( ( DS * DS ) + ( MUC * DS ) ) - Max( Max( MUR,MUR ),( ( ( ( MUC - MUR ) / RRSe ) * MUC ) / MLU ) ) ),Max( Min( ( RRSe * RMSe ) ,Min( RCSe ,RMSe ) ),( ( RRSe + DS ) + ( RCSe * DS ) ) ) ) )", "obj1": 0.3018867924528302, "obj2": 0.5673205754524807}, {"determining": "( ( Max( BR,( PN / ( ( FirstVNF_CPU_Server * ( MDR / FirstVNF_Mem_Server ) ) + Const ) ) ) - FirstVNF_CPU_Server ) / ( FirstVNF_Mem - ( ( CRS + FirstVNF_CPU_Server ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU - CS ) - Max( ( ( ( DS * DS ) + ( MUC * DS ) ) - Max( Max( MUR,MUR ),( ( ( ( MUC - MUR ) / RRSe ) * MUC ) / MLU ) ) ),Max( Min( ( RRSe * RMSe ) ,Min( RCSe ,RMSe ) ),( ( RRSe + DS ) + ( RCSe * DS ) ) ) ) )", "obj1": 0.3018867924528302, "obj2": 0.5673205754524807}, {"determining": "( ( Max( BR,( PN / ( ( FirstVNF_CPU_Server * ( MDR / FirstVNF_Mem_Server ) ) + Const ) ) ) - FirstVNF_CPU_Server ) / ( FirstVNF_Mem - ( ( CRS + FirstVNF_CPU_Server ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU - CS ) - Max( ( ( ( DS * DS ) + ( MUC * DS ) ) - Max( Max( MUR,MUR ),( ( ( ( MUC - MUR ) / RRSe ) * MUC ) / MLU ) ) ),Max( Min( ( RRSe * RMSe ) ,Min( RCSe ,RMSe ) ),( ( RRSe + DS ) + ( RCSe * DS ) ) ) ) )", "obj1": 0.3018867924528302, "obj2": 0.5673205754524807}, {"determining": "( ( Max( BR,( PN / ( ( FirstVNF_CPU_Server * ( MDR / FirstVNF_Mem_Server ) ) + Const ) ) ) - FirstVNF_CPU_Server ) / ( FirstVNF_Mem - ( ( CRS + FirstVNF_CPU_Server ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU - CS ) - Max( ( ( ( DS * DS ) + ( MUC * DS ) ) - Max( Max( MUR,MUR ),( ( ( ( MUC - MUR ) / RRSe ) * MUC ) / MLU ) ) ),Max( Min( ( RRSe * RMSe ) ,Min( RCSe ,RMSe ) ),( ( RRSe + DS ) + ( RCSe * DS ) ) ) ) )", "obj1": 0.3018867924528302, "obj2": 0.5673205754524807}]}