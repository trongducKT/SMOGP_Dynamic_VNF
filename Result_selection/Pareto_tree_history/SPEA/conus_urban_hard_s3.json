{"1": [{"determining": "( ( CRS / ARS ) / ( Const - FirstVNF_CPU ) )", "choosing": "Max( ( DS + MLU ),( MLU + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,MRS ) - ( Const * FirstVNF_Mem ) )", "choosing": "Min( ( MLU * RMSe ) ,Min( CS ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * FirstVNF_CPU ) + ( RRS / CRS ) )", "choosing": "( Max( MUM,RMSe ) - Min( MLU ,RRSe ) )", "obj1": 0.6747663551401869, "obj2": 0.22990285294945734}, {"determining": "( ( ACS * Min( FirstVNF_Mem_Server ,DDR ) ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) )", "choosing": "( Max( CS,MLU ) - Max( RRSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,( MRS - FirstVNF_CPU_Server ) ) ,( BR + Min( PN ,DDR ) ) )", "choosing": "( ( ( RMSe + MUM ) * ( RRSe / RRSe ) ) + ( ( MLU - MUM ) * ( MUR + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( BR + DDR ) / Min( AMS ,FirstVNF_CPU ) ),( ( MRS + FirstVNF_CPU_Server ) + Min( CRS ,FirstVNF_CPU ) ) )", "choosing": "( ( ( RCSe + CS ) - ( RRSe - RMSe ) ) / ( Min( MUR ,DS ) * ( MLU * MUR ) ) )", "obj1": 0.6261682242990654, "obj2": 0.272561314455281}, {"determining": "( ( ( RRS / Const ) - Min( MRS ,FirstVNF_CPU_Server ) ) + Min( ( Const - ARS ) ,( FirstVNF_RAM / RRS ) ) )", "choosing": "Max( ( ( RMSe - MUM ) / ( RRSe - MUM ) ),( ( MLU * RMSe ) * ( MUR / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + Min( MDR ,AMS ) ) - ( Min( FirstVNF_RAM ,PN ) + ( ACS + ACS ) ) )", "choosing": "( ( ( MUC * MUR ) * ( MUR + MLU ) ) * ( ( CS * RRSe ) + ( CS / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - Max( AMS,MRS ) ) / ( MDR / FirstVNF_CPU ) )", "choosing": "( ( ( MLU - MUM ) * ( CS * MLU ) ) * Min( ( MUR - MLU ) ,( MUR / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "Min( ( MUR / MUR ) ,( ( RCSe - RRSe ) / ( DS * RCSe ) ) )", "obj1": 0.8299065420560747, "obj2": 0.13096130130797137}, {"determining": "( ( Min( MRS ,ARS ) - ( AMS * Const ) ) / ( ( MDR * ARS ) / ( ACS - DDR ) ) )", "choosing": "( ( ( MUR / DS ) + Min( MUM ,MLU ) ) + ( ( MUM + MUC ) + ( MUM * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,FirstVNF_CPU_Server ) - Max( DDR,FirstVNF_RAM ) )", "choosing": "( Min( Max( RMSe,MLU ) ,( MUC / MUM ) ) - ( ( RRSe * RCSe ) * ( DS - MLU ) ) )", "obj1": 0.708411214953271, "obj2": 0.22242827943088095}, {"determining": "Min( ( Min( FirstVNF_Mem ,PN ) / ( MDR - DDR ) ) ,( Min( Max( MRS,FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) - ( DDR + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Max( CS,RRSe ),Max( CS,RMSe ) ) * ( ( MUR * ( MLU - ( MLU / MLU ) ) ) - ( MUC / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( FirstVNF_RAM,BR ) ,Min( FirstVNF_RAM_Server ,RRS ) ) / Min( Max( ACS,FirstVNF_RAM ) ,( FirstVNF_CPU - RRS ) ) ) - Min( ( ( FirstVNF_RAM * FirstVNF_CPU ) + ( MDR - AMS ) ) ,( Max( MDR,CRS ) * ( FirstVNF_RAM_Server / ACS ) ) ) )", "choosing": "Min( ( ( Min( RRSe ,RRSe ) + ( MUC * RRSe ) ) * ( ( MUM - MUC ) + Max( RRSe,MUM ) ) ) ,( Min( ( MLU - MUR ) ,Max( DS,MUC ) ) * Min( ( MLU + MUR ) ,Min( MLU ,RMSe ) ) ) )", "obj1": 0.9121495327102803, "obj2": 0.03856845846723953}, {"determining": "( Max( ( ( MDR / FirstVNF_RAM_Server ) / ( FirstVNF_Mem * ACS ) ),Max( Min( BR ,FirstVNF_RAM_Server ),( FirstVNF_Mem_Server + AMS ) ) ) + ( Min( ( FirstVNF_RAM / CRS ) ,( ACS * BR ) ) / ( ( ACS / RRS ) - Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + RMSe ) + MLU ) + MUC ) - ( RMSe / MUM ) )", "obj1": 0.6897196261682244, "obj2": 0.22708990753133956}, {"determining": "( ( ( CRS - FirstVNF_Mem_Server ) - ( PN + CRS ) ) / ( Min( FirstVNF_RAM ,CRS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( MUR ,RCSe ) + ( ( CS - ( CS / ( ( MUR + MUR ) + Max( RMSe,MUC ) ) ) ) - MLU ) )", "obj1": 0.6616822429906543, "obj2": 0.24490497899839914}, {"determining": "( ( ( ( RRS + MDR ) * ( DDR + MDR ) ) + ( Min( RRS ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) + Min( ( ( FirstVNF_CPU / AMS ) / ( CRS * DDR ) ) ,Min( ( PN * ACS ) ,( CRS / ARS ) ) ) )", "choosing": "Max( Max( Max( ( RCSe - MLU ),Max( CS,CS ) ),( ( MUC - RMSe ) * ( MLU + CS ) ) ),( ( ( DS / CS ) / Min( CS ,MUR ) ) - ( ( MUR * CS ) / ( RRSe - CS ) ) ) )", "obj1": 0.9719626168224299, "obj2": 0.03170801777309511}, {"determining": "( ( Max( Min( PN ,ARS ),( FirstVNF_Mem_Server * DDR ) ) / ( Min( ACS ,FirstVNF_Mem_Server ) * ( CRS / ARS ) ) ) - Max( ( ( MDR * AMS ) / ( CRS * ACS ) ),Min( ( Const / FirstVNF_Mem ) ,( MRS / ACS ) ) ) )", "choosing": "( Min( DS ,( RMSe / ( RRSe / CS ) ) ) / ( CS / CS ) )", "obj1": 0.8074766355140187, "obj2": 0.1488531954345764}, {"determining": "( Min( ( ( AMS * AMS ) - Min( ARS ,FirstVNF_RAM_Server ) ) ,Min( Max( Const,PN ) ,( DDR - MDR ) ) ) + ( ( ( ( FirstVNF_RAM - Max( ( Max( FirstVNF_CPU,MDR ) - Max( Const,ARS ) ),( ARS + PN ) ) ) / FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_Mem / CRS ),( FirstVNF_Mem + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUM + RRSe ) * ( MLU - CS ) ) / ( ( CS - DS ) / ( RCSe - MUC ) ) ) - ( ( ( CS / MLU ) * MLU ) / ( ( RMSe / CS ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - ACS ) - ( MRS * FirstVNF_CPU_Server ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - ( FirstVNF_RAM - FirstVNF_Mem ) ) ) / ( ( ( FirstVNF_RAM + ACS ) + ( RRS + MRS ) ) * ( ( ACS - CRS ) + ( AMS * BR ) ) ) )", "choosing": "( Max( ( ( MUC / CS ) + Max( RMSe,MUM ) ),( ( DS * MUR ) - ( CS - CS ) ) ) / ( ( MUM * Max( Min( RMSe ,CS ),MUC ) ) - ( Min( MUC ,RRSe ) - ( MUM * MLU ) ) ) )", "obj1": 0.7252336448598131, "obj2": 0.1612898930704234}], "2": [{"determining": "( ( CRS / ARS ) / ( Const - FirstVNF_CPU ) )", "choosing": "Max( ( DS + MLU ),( MLU + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,MRS ) - ( Const * FirstVNF_Mem ) )", "choosing": "Min( ( MLU * RMSe ) ,Min( CS ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * FirstVNF_CPU ) + ( RRS / CRS ) )", "choosing": "( Max( MUM,RMSe ) - Min( MLU ,RRSe ) )", "obj1": 0.6747663551401869, "obj2": 0.22990285294945734}, {"determining": "( ( ACS * Min( FirstVNF_Mem_Server ,DDR ) ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) )", "choosing": "( Max( CS,MLU ) - Max( RRSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,( MRS - FirstVNF_CPU_Server ) ) ,( BR + Min( PN ,DDR ) ) )", "choosing": "( ( ( RMSe + MUM ) * ( RRSe / RRSe ) ) + ( ( MLU - MUM ) * ( MUR + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( BR + DDR ) / Min( AMS ,FirstVNF_CPU ) ),( ( MRS + FirstVNF_CPU_Server ) + Min( CRS ,FirstVNF_CPU ) ) )", "choosing": "( ( ( RCSe + CS ) - ( RRSe - RMSe ) ) / ( Min( MUR ,DS ) * ( MLU * MUR ) ) )", "obj1": 0.6261682242990654, "obj2": 0.272561314455281}, {"determining": "( ( ( RRS / Const ) - Min( MRS ,FirstVNF_CPU_Server ) ) + Min( ( Const - ARS ) ,( FirstVNF_RAM / RRS ) ) )", "choosing": "Max( ( ( RMSe - MUM ) / ( RRSe - MUM ) ),( ( MLU * RMSe ) * ( MUR / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + Min( MDR ,AMS ) ) - ( Min( FirstVNF_RAM ,PN ) + ( ACS + ACS ) ) )", "choosing": "( ( ( MUC * MUR ) * ( MUR + MLU ) ) * ( ( CS * RRSe ) + ( CS / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - Max( AMS,MRS ) ) / ( MDR / FirstVNF_CPU ) )", "choosing": "( ( ( MLU - MUM ) * ( CS * MLU ) ) * Min( ( MUR - MLU ) ,( MUR / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "Min( ( MUR / MUR ) ,( ( RCSe - RRSe ) / ( DS * RCSe ) ) )", "obj1": 0.8299065420560747, "obj2": 0.13096130130797137}, {"determining": "( ( Min( MRS ,ARS ) - ( AMS * Const ) ) / ( ( MDR * ARS ) / ( ACS - DDR ) ) )", "choosing": "( ( ( MUR / DS ) + Min( MUM ,MLU ) ) + ( ( MUM + MUC ) + ( MUM * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_Mem ,PN ) / ( MDR - DDR ) ) ,( Min( Max( MRS,FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) - ( DDR + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Max( CS,RRSe ),Max( CS,RMSe ) ) * ( ( MUR * ( MLU - ( MLU / MLU ) ) ) - ( MUC / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( FirstVNF_RAM,BR ) ,Min( FirstVNF_RAM_Server ,RRS ) ) / Min( Max( ACS,FirstVNF_RAM ) ,( FirstVNF_CPU - RRS ) ) ) - Min( ( ( FirstVNF_RAM * FirstVNF_CPU ) + ( MDR - AMS ) ) ,( Max( MDR,CRS ) * ( FirstVNF_RAM_Server / ACS ) ) ) )", "choosing": "Min( ( ( Min( RRSe ,RRSe ) + ( MUC * RRSe ) ) * ( ( MUM - MUC ) + Max( RRSe,MUM ) ) ) ,( Min( ( MLU - MUR ) ,Max( DS,MUC ) ) * Min( ( MLU + MUR ) ,Min( MLU ,RMSe ) ) ) )", "obj1": 0.9121495327102803, "obj2": 0.03856845846723953}, {"determining": "( ( ( ( RRS + MDR ) * ( DDR + MDR ) ) + ( Min( RRS ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) + Min( ( ( FirstVNF_CPU / AMS ) / ( CRS * DDR ) ) ,Min( ( PN * ACS ) ,( CRS / ARS ) ) ) )", "choosing": "Max( Max( Max( ( RCSe - MLU ),Max( CS,CS ) ),( ( MUC - RMSe ) * ( MLU + CS ) ) ),( ( ( DS / CS ) / Min( CS ,MUR ) ) - ( ( MUR * CS ) / ( RRSe - CS ) ) ) )", "obj1": 0.9719626168224299, "obj2": 0.03170801777309511}, {"determining": "( ( Max( Min( PN ,ARS ),( FirstVNF_Mem_Server * DDR ) ) / ( Min( ACS ,FirstVNF_Mem_Server ) * ( CRS / ARS ) ) ) - Max( ( ( MDR * AMS ) / ( CRS * ACS ) ),Min( ( Const / FirstVNF_Mem ) ,( MRS / ACS ) ) ) )", "choosing": "( Min( DS ,( RMSe / ( RRSe / CS ) ) ) / ( CS / CS ) )", "obj1": 0.8074766355140187, "obj2": 0.1488531954345764}, {"determining": "( Min( ( ( AMS * AMS ) - Min( ARS ,FirstVNF_RAM_Server ) ) ,Min( Max( Const,PN ) ,( DDR - MDR ) ) ) + ( ( ( ( FirstVNF_RAM - Max( ( Max( FirstVNF_CPU,MDR ) - Max( Const,ARS ) ),( ARS + PN ) ) ) / FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_Mem / CRS ),( FirstVNF_Mem + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUM + RRSe ) * ( MLU - CS ) ) / ( ( CS - DS ) / ( RCSe - MUC ) ) ) - ( ( ( CS / MLU ) * MLU ) / ( ( RMSe / CS ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - ACS ) - ( MRS * FirstVNF_CPU_Server ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - ( FirstVNF_RAM - FirstVNF_Mem ) ) ) / ( ( ( FirstVNF_RAM + ACS ) + ( RRS + MRS ) ) * ( ( ACS - CRS ) + ( AMS * BR ) ) ) )", "choosing": "( Max( ( ( MUC / CS ) + Max( RMSe,MUM ) ),( ( DS * MUR ) - ( CS - CS ) ) ) / ( ( MUM * Max( Min( RMSe ,CS ),MUC ) ) - ( Min( MUC ,RRSe ) - ( MUM * MLU ) ) ) )", "obj1": 0.7252336448598131, "obj2": 0.1612898930704234}, {"determining": "( Max( ( ( ACS - DDR ) / Max( AMS,PN ) ),( ( FirstVNF_RAM_Server / Const ) - Min( CRS ,AMS ) ) ) * Min( ( RRS - MRS ) ,Min( ( ACS * ARS ) ,( FirstVNF_CPU * PN ) ) ) )", "choosing": "( Max( MUM,MUM ) * ( MUM * ( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * ( MRS / CRS ) ) - ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,CS ) - ( MUC / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * DDR ) - ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) )", "choosing": "( Max( MLU,CS ) - ( MUC / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * Min( FirstVNF_Mem_Server ,DDR ) ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) )", "choosing": "( Max( CS,MLU ) - Max( RRSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * Min( FirstVNF_Mem_Server ,DDR ) ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) )", "choosing": "Max( Max( MLU,CS ),Max( RRSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * Min( FirstVNF_Mem_Server ,DDR ) ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) )", "choosing": "( Max( CS,MLU ) - Max( RRSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * Min( FirstVNF_Mem_Server ,DDR ) ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) )", "choosing": "( Max( CS,MLU ) - Max( RRSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,MRS ) - ( PN + FirstVNF_Mem_Server ) )", "choosing": "Min( ( MLU * RMSe ) ,Min( ( ( MLU / MUM ) * ( RRSe - CS ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,MRS ) - ( Const * FirstVNF_Mem ) )", "choosing": "Min( ( MLU * RMSe ) ,Min( CS ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + Min( MDR ,AMS ) ) - ( Min( FirstVNF_RAM ,Max( ( ( BR + DDR ) / Min( AMS ,FirstVNF_CPU ) ),( ( MRS + FirstVNF_CPU_Server ) + Min( CRS ,FirstVNF_CPU ) ) ) ) + ( ACS + ACS ) ) )", "choosing": "( ( ( MUC * MUR ) * ( MUR + ( MLU * MUR ) ) ) * ( ( CS * RRSe ) + ( CS / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + Min( MDR ,AMS ) ) - ( Min( FirstVNF_RAM ,PN ) + ( ACS + ACS ) ) )", "choosing": "( ( ( MUC * MUR ) * ( MUR + MLU ) ) * ( ( CS * RRSe ) + ( CS / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_Mem_Server ) - ( DDR * FirstVNF_Mem_Server ) ) / Max( Max( MRS,FirstVNF_RAM ),( BR - ARS ) ) )", "choosing": "( Min( CS ,RCSe ) + RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( CRS - FirstVNF_Mem_Server ) - ( DDR * FirstVNF_Mem_Server ) ),( BR - ARS ) )", "choosing": "( ( RMSe - MLU ) + Min( MUM ,( Min( CS ,RCSe ) + ( ( CS - ( CS / MUC ) ) - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,ACS ) / ( Min( Min( RRS ,Const ) ,( BR * RRS ) ) - AMS ) )", "choosing": "Max( Max( ( RCSe + MLU ),RRSe ),Min( Max( RRSe,MUC ) ,( ( RMSe - RCSe ) / ( RMSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,MRS ) - ( ( Min( MDR ,AMS ) / ( RRS + DDR ) ) * FirstVNF_Mem ) )", "choosing": "Min( ( ( MUC + RMSe ) * RMSe ) ,Min( CS ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,MRS ) - ( Const * FirstVNF_Mem ) )", "choosing": "( ( MUC + RMSe ) * ( CS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( AMS * AMS ) - Min( ARS ,FirstVNF_RAM_Server ) ) ,Min( Max( Const,PN ) ,( DDR - MDR ) ) ) + ( ( ( ( FirstVNF_RAM - Max( ( Max( FirstVNF_CPU,MDR ) - Max( Const,ARS ) ),( ARS + PN ) ) ) / FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_Mem / CRS ),( FirstVNF_Mem + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUM + RRSe ) * ( MLU - CS ) ) / ( ( CS - DS ) / ( RCSe - MUC ) ) ) - ( ( ( CS / MLU ) * MLU ) / ( ( RMSe / CS ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( AMS * AMS ) - Min( ARS ,FirstVNF_RAM_Server ) ) ,Min( Max( Const,PN ) ,( DDR - MDR ) ) ) + ( ( ( ( FirstVNF_RAM - Max( ( Max( FirstVNF_CPU,MDR ) - Max( Const,ARS ) ),( ARS + PN ) ) ) / FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_Mem / CRS ),( FirstVNF_Mem + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUM + RRSe ) * ( MLU - CS ) ) / ( ( CS - DS ) / ( RCSe - MUC ) ) ) - ( ( ( CS / MLU ) * MLU ) / ( ( RMSe / CS ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( AMS * AMS ) - Min( ARS ,FirstVNF_RAM_Server ) ) ,Min( Max( Const,PN ) ,( DDR - MDR ) ) ) + ( ( ( ( FirstVNF_RAM - Max( ( Max( FirstVNF_CPU,MDR ) - Max( Const,ARS ) ),( ARS + PN ) ) ) / FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_Mem / CRS ),( FirstVNF_Mem + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUM + RRSe ) * ( MLU - CS ) ) / ( ( CS - DS ) / ( RCSe - MUC ) ) ) - ( ( ( CS / MLU ) * MLU ) / ( ( RMSe / CS ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( AMS * AMS ) - Min( ARS ,FirstVNF_RAM_Server ) ) ,Min( Max( Const,PN ) ,( DDR - MDR ) ) ) + ( ( ( ( FirstVNF_RAM - Max( ( Max( FirstVNF_CPU,MDR ) - Max( Const,ARS ) ),( ARS + PN ) ) ) / FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_Mem / CRS ),( FirstVNF_Mem + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUM + RRSe ) * ( MLU - CS ) ) / ( ( CS - DS ) / ( RCSe - MUC ) ) ) - ( ( ( CS / MLU ) * MLU ) / ( ( RMSe / CS ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS + MDR ) * ( DDR + MDR ) ) + ( Min( RRS ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) + Min( ( ( FirstVNF_CPU / AMS ) / ( CRS * DDR ) ) ,Min( ( PN * ACS ) ,( CRS / ARS ) ) ) )", "choosing": "Max( Max( Max( ( RCSe - MLU ),Max( CS,CS ) ),( ( MUC - RMSe ) * ( MLU + CS ) ) ),( ( ( DS / CS ) / Min( CS ,MUR ) ) - ( ( MUR * CS ) / ( RRSe - CS ) ) ) )", "obj1": 0.9719626168224299, "obj2": 0.03170801777309511}, {"determining": "( Min( MDR ,AMS ) * ( MDR - FirstVNF_Mem_Server ) )", "choosing": "( ( CS / Min( RMSe ,MUC ) ) - ( MUM * ( MUM * MUR ) ) )", "obj1": 0.9925233644859813, "obj2": 0.009329901493749015}, {"determining": "( ( ( ( BR - ACS ) - ( MRS * FirstVNF_CPU_Server ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - ( FirstVNF_RAM - FirstVNF_Mem ) ) ) / ( ( ( FirstVNF_RAM + ACS ) + ( RRS + MRS ) ) * ( ( ACS - CRS ) + ( AMS * BR ) ) ) )", "choosing": "( Max( ( ( MUC / CS ) + Max( RMSe,MUM ) ),( ( DS * MUR ) - ( CS - CS ) ) ) / ( ( MUM * Max( Min( RMSe ,CS ),MUC ) ) - ( Min( MUC ,RRSe ) - ( MUM * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - ACS ) - ( MRS * FirstVNF_CPU_Server ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - ( FirstVNF_RAM - FirstVNF_Mem ) ) ) / ( ( ( FirstVNF_RAM + ACS ) + ( RRS + MRS ) ) * ( ( ACS - CRS ) + ( AMS * BR ) ) ) )", "choosing": "( Max( ( ( MUC / CS ) + Max( RMSe,MUM ) ),( ( DS * MUR ) - ( CS - CS ) ) ) / ( ( MUM * Max( Min( RMSe ,CS ),MUC ) ) - ( Min( MUC ,RRSe ) - ( MUM * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - ACS ) - ( MRS * FirstVNF_CPU_Server ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - ( FirstVNF_RAM - FirstVNF_Mem ) ) ) / ( ( ( FirstVNF_RAM + ACS ) + ( RRS + MRS ) ) * ( ( ACS - CRS ) + ( AMS * BR ) ) ) )", "choosing": "( Max( ( ( MUC / CS ) + Max( RMSe,MUM ) ),( ( DS * MUR ) - ( CS - CS ) ) ) / ( ( MUM * Max( Min( RMSe ,CS ),MUC ) ) - ( Min( MUC ,RRSe ) - ( MUM * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - ACS ) - ( MRS * FirstVNF_CPU_Server ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - ( FirstVNF_RAM - FirstVNF_Mem ) ) ) / ( ( ( FirstVNF_RAM + ACS ) + ( RRS + MRS ) ) * ( ( ACS - CRS ) + ( AMS * BR ) ) ) )", "choosing": "( Max( ( ( MUC / CS ) + Max( RMSe,MUM ) ),( ( DS * MUR ) - ( CS - CS ) ) ) / ( ( MUM * Max( Min( RMSe ,CS ),MUC ) ) - ( Min( MUC ,RRSe ) - ( MUM * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( FirstVNF_Mem_Server - RRS ) ) * ( RRS - MRS ) )", "choosing": "( ( CS / Min( ( ( RCSe / CS ) * ( RCSe - Max( ( MUM * Min( MUR ,RRSe ) ),RRSe ) ) ) ,MUC ) ) - ( MUM * ( MUM * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( FirstVNF_Mem_Server - RRS ) ) * ( RRS - MRS ) )", "choosing": "( ( CS / Min( ( ( RCSe / CS ) * ( RCSe - Max( ( MUM * Min( MUR ,RRSe ) ),RRSe ) ) ) ,MUC ) ) - ( MUM * ( MUM * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( FirstVNF_Mem_Server - RRS ) ) * ( RRS - MRS ) )", "choosing": "( ( CS / Min( ( ( RCSe / CS ) * ( RCSe - Max( ( MUM * Min( MUR ,RRSe ) ),RRSe ) ) ) ,MUC ) ) - ( MUM * ( MUM * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( FirstVNF_Mem_Server - RRS ) ) * ( RRS - MRS ) )", "choosing": "( ( CS / Min( ( ( RCSe / CS ) * ( RCSe - Max( ( MUM * Min( MUR ,RRSe ) ),RRSe ) ) ) ,MUC ) ) - ( MUM * ( MUM * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU * Max( FirstVNF_Mem_Server,DDR ) ) * Min( RRS ,AMS ) ) - ( ACS * BR ) )", "choosing": "( ( RRSe - MUR ) * CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const + FirstVNF_Mem ) - FirstVNF_RAM ) / ( ( FirstVNF_CPU * Max( FirstVNF_Mem_Server,DDR ) ) * Min( RRS ,AMS ) ) )", "choosing": "( ( RRSe - MUR ) * ( MLU * MUM ) )", "obj1": 0.6598130841121496, "obj2": 0.23414842407248912}, {"determining": "( Max( ( ( ACS - DDR ) / Max( AMS,PN ) ),( ( FirstVNF_RAM_Server / Const ) - Min( CRS ,AMS ) ) ) * Min( ( ( MRS - FirstVNF_RAM_Server ) + Min( ACS ,FirstVNF_Mem ) ) ,Min( ( ACS * ARS ) ,( FirstVNF_CPU * PN ) ) ) )", "choosing": "( ( RRSe - MUR ) * ( MLU * MUM ) )", "obj1": 0.8990654205607477, "obj2": 0.07930636228769804}, {"determining": "( ( ( ( RRS + MDR ) * ( DDR + MDR ) ) + ( Min( RRS ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) + Min( ( ( FirstVNF_CPU / AMS ) / ( CRS * DDR ) ) ,Min( ( PN * ACS ) ,( CRS + PN ) ) ) )", "choosing": "Max( Max( Max( ( RCSe - MLU ),Max( CS,CS ) ),( ( MUC - RMSe ) * ( MLU + CS ) ) ),( ( ( DS / CS ) / Min( CS ,MUR ) ) - ( ( MUR * CS ) / Min( RMSe ,DS ) ) ) )", "obj1": 0.9682242990654205, "obj2": 0.03684946311779941}, {"determining": "( ( ( ( RRS + MDR ) * ( DDR + MDR ) ) + ( Min( RRS ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) + Min( ( ( FirstVNF_CPU / AMS ) / ( CRS * DDR ) ) ,Min( ( PN * ACS ) ,( CRS / ARS ) ) ) )", "choosing": "( ( Min( RMSe ,DS ) / Min( RCSe ,DS ) ) / ( ( MUC + RRSe ) + ( CS * RMSe ) ) )", "obj1": 0.9775700934579439, "obj2": 0.016352528504345546}, {"determining": "( PN + ( ( ARS - Max( Const,FirstVNF_CPU_Server ) ) - Const ) )", "choosing": "( ( Min( ( MUM - CS ) ,Min( MUR ,MUC ) ) + ( ( RRSe / MUR ) * ( RRSe * RRSe ) ) ) + ( RCSe - ( Min( MLU ,RMSe ) * ( MUC + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * Min( FirstVNF_Mem_Server ,DDR ) ) - ( ( FirstVNF_RAM - MRS ) / FirstVNF_RAM ) )", "choosing": "( Max( CS,MLU ) - Min( ( Max( RRSe,DS ) - ( RMSe * MLU ) ) ,Max( ( MUC * MUM ),( RRSe / RCSe ) ) ) )", "obj1": 0.9962616822429906, "obj2": 0.003542748679698323}, {"determining": "( ( ACS * Min( FirstVNF_Mem_Server ,DDR ) ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) )", "choosing": "Max( Max( ( ( MUC / CS ) + ( RRSe / MUC ) ),Max( ( DS / DS ),( MUM / RRSe ) ) ),Min( ( Max( RRSe,DS ) - ( RMSe * MLU ) ) ,Max( ( MUC * MUM ),( RRSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / ACS ) - ( ( ( CRS - FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - DDR ) ) / ( Min( CRS ,FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( MUR ,MLU ),( RMSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / ACS ) - ( ( ( ( DDR * BR ) - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) / MRS ) )", "choosing": "Max( Min( RMSe ,MLU ),( ( CS + ( Max( Max( Min( RRSe ,( CS / CS ) ),( MUM * ( MLU * CS ) ) ),( Min( ( DS + MLU ) ,Max( DS,DS ) ) / ( RRSe + DS ) ) ) / CS ) ) / ( ( CS + DS ) * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / ACS ) - ( ( ( ( DDR * BR ) - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) / MRS ) )", "choosing": "Max( Min( RMSe ,MLU ),( ( CS + ( Max( Max( Min( RRSe ,( CS / CS ) ),( MUM * ( MLU * CS ) ) ),( Min( ( DS + MLU ) ,Max( DS,DS ) ) / ( RRSe + DS ) ) ) / CS ) ) / ( ( CS + DS ) * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / ACS ) - ( ( ( ( DDR * BR ) - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) / MRS ) )", "choosing": "Max( Min( RMSe ,MLU ),( ( CS + ( Max( Max( Min( RRSe ,( CS / CS ) ),( MUM * ( MLU * CS ) ) ),( Min( ( DS + MLU ) ,Max( DS,DS ) ) / ( RRSe + DS ) ) ) / CS ) ) / ( ( CS + DS ) * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / ACS ) - ( ( ( MDR + FirstVNF_RAM_Server ) + ( ( ( FirstVNF_Mem + Min( Const ,ACS ) ) / FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) / MRS ) )", "choosing": "Max( Min( RMSe ,MLU ),( RMSe / ( ( CS + DS ) * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / ACS ) - ( ( ( MDR + ( ( BR * BR ) / ( ACS - ( Const * FirstVNF_Mem_Server ) ) ) ) + ( ( ( FirstVNF_Mem + Min( Const ,ACS ) ) / FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) / MRS ) )", "choosing": "Max( ( RMSe / RRSe ),( RMSe / ( ( CS + DS ) * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / ACS ) - ( ( ( MDR + FirstVNF_RAM_Server ) + ( ( ( FirstVNF_Mem + Min( Const ,ACS ) ) / FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) / MRS ) )", "choosing": "( ( MLU - MLU ) + ( RMSe / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * BR ) / ( ACS - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUM,RCSe ) + ( RMSe / RRSe ) )", "obj1": 0.8355140186915888, "obj2": 0.12217089870467158}, {"determining": "( ( FirstVNF_RAM / ACS ) - ( ( ( ( DDR * BR ) - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) / MRS ) )", "choosing": "Max( Min( RMSe ,MLU ),( ( CS + ( Max( Max( Min( RRSe ,( CS / CS ) ),( MUM * ( MLU * CS ) ) ),( Min( ( DS + MLU ) ,Max( DS,DS ) ) / ( RRSe + DS ) ) ) / CS ) ) / ( ( CS + DS ) * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * BR ) / ( ACS - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUM,RCSe ) + ( RMSe / RRSe ) )", "obj1": 0.8355140186915888, "obj2": 0.12217089870467158}, {"determining": "( ( FirstVNF_RAM / ACS ) - ( ( ( ( DDR * BR ) - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) / MRS ) )", "choosing": "Max( Min( RMSe ,MLU ),( ( CS + ( Max( Max( Min( RRSe ,( CS / CS ) ),( MUM * ( MLU * CS ) ) ),( Min( ( DS + MLU ) ,Max( DS,DS ) ) / ( RRSe + DS ) ) ) / CS ) ) / ( ( CS + DS ) * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * BR ) / ( ACS - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUM,RCSe ) + ( RMSe / RRSe ) )", "obj1": 0.8355140186915888, "obj2": 0.12217089870467158}, {"determining": "( ( FirstVNF_RAM / ACS ) - ( ( ( ( DDR * BR ) - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) / MRS ) )", "choosing": "Max( Min( RMSe ,MLU ),( ( CS + ( Max( Max( Min( RRSe ,( CS / CS ) ),( MUM * ( MLU * CS ) ) ),( Min( ( DS + MLU ) ,Max( DS,DS ) ) / ( RRSe + DS ) ) ) / CS ) ) / ( ( CS + DS ) * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * BR ) / ( ACS - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUM,RCSe ) + ( RMSe / RRSe ) )", "obj1": 0.8355140186915888, "obj2": 0.12217089870467158}, {"determining": "( ( FirstVNF_RAM / ACS ) - ( ( ( ( DDR * BR ) - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) / MRS ) )", "choosing": "Max( Min( RMSe ,MLU ),( ( CS + ( Max( Max( Min( RRSe ,( CS / CS ) ),( MUM * ( MLU * CS ) ) ),( Min( ( DS + MLU ) ,Max( DS,DS ) ) / ( RRSe + DS ) ) ) / CS ) ) / ( ( CS + DS ) * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( MDR / ( Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / ( FirstVNF_RAM * BR ) ) ) / ( FirstVNF_Mem * ACS ) ),Max( Min( BR ,FirstVNF_RAM_Server ),( FirstVNF_Mem_Server + AMS ) ) ) + ( Min( ( FirstVNF_RAM / CRS ) ,( ACS * BR ) ) / ( ( ACS / RRS ) - Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( ( ( MUC - RCSe ) - MUM ) * ( DS + RCSe ) ) + MLU ) + MUC ) - ( RMSe / MUM ) )", "obj1": 0.6523364485981309, "obj2": 0.251401529281108}, {"determining": "( Min( Const ,FirstVNF_Mem ) * ( Const - FirstVNF_CPU ) )", "choosing": "( ( CS + MUC ) - ( Max( ( DS + MLU ),( MLU + RCSe ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / ARS ) / ( Const - FirstVNF_CPU ) )", "choosing": "Max( ( DS + MLU ),( MLU + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,ARS ) - ( AMS * Const ) ) / ( ( ( Min( FirstVNF_RAM ,PN ) + ( ACS + ACS ) ) * ARS ) / ( ACS - DDR ) ) )", "choosing": "( ( ( MUR / DS ) + Min( MUM ,MLU ) ) + ( ( ( MUC * MUR ) * ( MUR + MLU ) ) + ( MUM * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,ARS ) - ( AMS * Const ) ) / ( ( MDR * ARS ) / ( ACS - DDR ) ) )", "choosing": "( ( ( MUC * MUR ) * ( MUR + MLU ) ) * ( ( CS * RRSe ) + ( CS / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + Min( MDR ,AMS ) ) - ( Min( FirstVNF_RAM ,PN ) + ( ACS + ACS ) ) )", "choosing": "( ( ( MUR / DS ) + Min( MUM ,MLU ) ) + ( ( MUM + MUC ) + ( MUM * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * Min( CRS ,DDR ) ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( DS + MUM ) ,( RMSe + CS ) ) - Max( RRSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * Min( FirstVNF_Mem_Server ,DDR ) ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) )", "choosing": "Max( Min( ( DS + MUM ) ,( RMSe + CS ) ),( ( MUC + MUM ) + ( CS * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR - AMS ) - ( FirstVNF_RAM_Server / Const ) ) ,( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) )", "choosing": "Min( Max( RMSe,MUM ) ,( ( MUR / RRSe ) - Min( RCSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( FirstVNF_Mem_Server - RRS ) ) * ( RRS - ( ( PN + FirstVNF_Mem_Server ) / ( FirstVNF_RAM / RRS ) ) ) )", "choosing": "( ( CS / Min( ( ( RCSe / CS ) * ( RCSe - Max( RRSe,RRSe ) ) ) ,MUC ) ) - ( MUM * ( MUM * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + FirstVNF_Mem_Server ) / ( ( MDR * ( FirstVNF_Mem_Server - RRS ) ) * ( RRS - MRS ) ) )", "choosing": "( ( MLU / MUM ) * RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( FirstVNF_Mem_Server - RRS ) ) * ( RRS - MRS ) )", "choosing": "( ( CS / Min( ( ( RCSe / CS ) * ( RCSe - Max( ( MUM * Min( MUR ,RRSe ) ),RRSe ) ) ) ,MUC ) ) - ( MUM * ( MUM * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + FirstVNF_Mem_Server ) / ( FirstVNF_RAM / RRS ) )", "choosing": "( ( MLU / MUM ) * ( RRSe - CS ) )", "obj1": 0.6953271028037383, "obj2": 0.21582963006350392}, {"determining": "( Max( ( ( FirstVNF_CPU + PN ) + ( MDR * FirstVNF_CPU_Server ) ),( Max( FirstVNF_RAM_Server,MDR ) * ( FirstVNF_Mem_Server / MRS ) ) ) + ( Max( ( FirstVNF_RAM_Server * AMS ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) / Min( Max( MDR,Const ) ,Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( Max( RMSe,MLU ) ,( MUC / MUM ) ) - ( ( RRSe * RCSe ) * ( DS - MLU ) ) ) - Min( Max( Max( DS,CS ),Max( MUM,RRSe ) ) ,( Min( MUM ,MUR ) * Max( MUM,MUM ) ) ) )", "obj1": 0.6822429906542056, "obj2": 0.22661367559245252}, {"determining": "( Max( ARS,FirstVNF_CPU_Server ) - Max( DDR,FirstVNF_RAM ) )", "choosing": "( Min( Max( RMSe,MLU ) ,( MUC / MUM ) ) - ( ( RRSe * RCSe ) * ( DS - MLU ) ) )", "obj1": 0.6897196261682244, "obj2": 0.21892870956624205}, {"determining": "( Min( BR ,MRS ) - ( ACS * Max( Const,ACS ) ) )", "choosing": "( ( ( CS + RRSe ) - MUR ) * ( MLU * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,ACS ) / ( FirstVNF_CPU - AMS ) )", "choosing": "( ( RRSe - MUR ) * ( MLU * MUM ) )", "obj1": 0.9065420560747663, "obj2": 0.06487688646880357}, {"determining": "( Min( MRS ,DDR ) - Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUM * RRSe ) - Min( MUR ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / ACS ) - ( ( ( ( DDR * Max( MDR,Max( FirstVNF_RAM,ARS ) ) ) - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) / MRS ) )", "choosing": "Max( Min( RMSe ,MLU ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / ACS ) - ( ( ( ( DDR * BR ) - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) / MRS ) )", "choosing": "Max( Min( RMSe ,MLU ),( ( CS + ( Max( Max( Min( RRSe ,( CS / CS ) ),( MUM * ( MLU * CS ) ) ),( Min( ( DS + MLU ) ,Max( DS,DS ) ) / ( RRSe + DS ) ) ) / CS ) ) / ( ( CS + DS ) * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Max( ARS,FirstVNF_CPU_Server ) ) / ( Const - FirstVNF_CPU ) )", "choosing": "Max( Min( Max( RMSe,MLU ) ,( MUC / MUM ) ),( MLU + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) * ( PN / ( ( ACS + FirstVNF_Mem_Server ) + ( CRS * FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( ( ( RRSe + RRSe ) - ( RMSe * RCSe ) ) * Max( ( RCSe - RCSe ),Min( MUC ,RMSe ) ) ),( CS * DS ) )", "obj1": 0.6934579439252336, "obj2": 0.21846538090831477}, {"determining": "Max( Max( ( MDR + Max( MRS,PN ) ),Min( ARS ,MRS ) ),( ( MRS + FirstVNF_CPU_Server ) + Min( CRS ,FirstVNF_CPU ) ) )", "choosing": "( ( ( RCSe + CS ) - ( RRSe - RMSe ) ) / ( Min( Max( ( ( ( RMSe * DS ) / ( MLU + RCSe ) ) / Min( Min( DS ,RCSe ) ,( RMSe * RRSe ) ) ),( ( ( RRSe * MLU ) / ( MLU * CS ) ) + ( ( MUR + MUC ) * Max( MUM,RRSe ) ) ) ) ,DS ) * ( MLU * MUR ) ) )", "obj1": 0.6299065420560748, "obj2": 0.2724862737116644}, {"determining": "Max( ( MDR + Max( MRS,PN ) ),Min( ARS ,MRS ) )", "choosing": "Max( ( ( ( RMSe * DS ) / ( MLU + RCSe ) ) / Min( Min( DS ,RCSe ) ,( RMSe * RRSe ) ) ),( ( ( RRSe * MLU ) / ( MLU * CS ) ) + ( ( MUR + MUC ) * Max( MUM,RRSe ) ) ) )", "obj1": 0.6579439252336449, "obj2": 0.23737148607749242}, {"determining": "Max( ( CRS * ( FirstVNF_Mem + DDR ) ),( DDR + MRS ) )", "choosing": "( ( MUM * MLU ) - ( ( MLU / ( MUC * MUM ) ) / DS ) )", "obj1": 0.7102803738317757, "obj2": 0.19776071025885858}, {"determining": "( ( CRS * ( FirstVNF_Mem + DDR ) ) * ( DDR + MRS ) )", "choosing": "( ( MUM * MLU ) - ( ( MLU / ( MUC * MUM ) ) / DS ) )", "obj1": 0.7102803738317757, "obj2": 0.19776071025885858}, {"determining": "Max( ( CRS * ( FirstVNF_Mem + DDR ) ),( DDR + MRS ) )", "choosing": "( ( MUM * MLU ) - ( ( MLU / ( MUC * MUM ) ) / DS ) )", "obj1": 0.7102803738317757, "obj2": 0.19776071025885858}, {"determining": "Max( ( CRS * ( FirstVNF_Mem + DDR ) ),( DDR + MRS ) )", "choosing": "( ( MUM * MLU ) - ( ( MLU / ( MUC * MUM ) ) / DS ) )", "obj1": 0.7102803738317757, "obj2": 0.19776071025885858}, {"determining": "( Max( ( ( ACS - DDR ) / Max( AMS,PN ) ),( ( FirstVNF_RAM_Server / Const ) - Min( CRS ,AMS ) ) ) * Min( ( ( MRS - FirstVNF_RAM_Server ) + Min( ACS ,FirstVNF_Mem ) ) ,Min( ( ACS * ARS ) ,( FirstVNF_CPU * PN ) ) ) )", "choosing": "( ( MUC * CS ) / ( MUM + Max( MLU,MUC ) ) )", "obj1": 0.891588785046729, "obj2": 0.09641057087080808}, {"determining": "( ( BR * BR ) / ( FirstVNF_Mem_Server - Min( ( FirstVNF_CPU * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( CS - ( CS / ( ( MUR + MUR ) + Max( RMSe,MUC ) ) ) ),RCSe ) + ( RMSe / RRSe ) )", "obj1": 0.8616822429906542, "obj2": 0.10249794711931984}]}