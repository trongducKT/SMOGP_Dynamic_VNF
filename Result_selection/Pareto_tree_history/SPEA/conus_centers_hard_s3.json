{"1": [{"determining": "( ( Const * FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server + ( FirstVNF_RAM / RRS ) ) )", "choosing": "Max( ( RRSe + ( ( MUC + MLU ) + ( ( RMSe / Max( Max( MLU,MUR ),( MUR - MUR ) ) ) / ( DS / Max( CS,MUC ) ) ) ) ),( CS * RCSe ) )", "obj1": 0.6773547094188377, "obj2": 0.25204802877355725}, {"determining": "( ( CRS + AMS ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( ( MLU * RMSe ) + ( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,Max( RRS,( FirstVNF_CPU / ARS ) ) ) + BR ) - ( MDR / BR ) )", "choosing": "( ( ( ( ( MUM - Max( DS,Min( RCSe ,MLU ) ) ) / MUM ) - RMSe ) - MUC ) + Min( MUM ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU / CRS ) ,( ( ARS * PN ) + FirstVNF_CPU ) )", "choosing": "( ( RCSe * DS ) + Min( ( RCSe * ( CS / MLU ) ) ,DS ) )", "obj1": 0.685370741482966, "obj2": 0.22234114992475715}, {"determining": "( ( ( PN / FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) / ( FirstVNF_RAM / ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe / MUM ) / ( RCSe * DS ) ) / Min( RCSe ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU / FirstVNF_Mem ),( FirstVNF_CPU_Server - PN ) ) - ( ( PN * FirstVNF_Mem_Server ) / ( ACS - FirstVNF_Mem ) ) )", "choosing": "( ( Min( MUR ,RRSe ) * ( RCSe / DS ) ) - Min( Max( CS,DS ) ,( MLU * MUR ) ) )", "obj1": 0.6352705410821643, "obj2": 0.2973216430583313}, {"determining": "Max( ( ( Const - FirstVNF_Mem_Server ) + ( FirstVNF_CPU + Const ) ),Min( ( MDR / MDR ) ,( MRS - MRS ) ) )", "choosing": "( ( ( RCSe + MUR ) + ( MUM - DS ) ) - Max( ( CS * MLU ),( RCSe + DS ) ) )", "obj1": 0.6292585170340681, "obj2": 0.29959438223434925}, {"determining": "( ( Max( PN,FirstVNF_Mem ) * FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe + CS ) + Max( RMSe,DS ) ) / Max( ( RMSe + CS ),( CS * MUC ) ) )", "obj1": 0.9959919839679359, "obj2": 0.0033712361352305677}, {"determining": "Max( ( BR / Min( MRS ,FirstVNF_RAM ) ),( Const - CRS ) )", "choosing": "( ( ( MUR + MUC ) * Min( RMSe ,DS ) ) / Min( Min( MUR ,MUM ) ,Min( MUC ,RMSe ) ) )", "obj1": 0.7114228456913828, "obj2": 0.20920630284718206}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + ( Const / DDR ) )", "choosing": "Min( Min( ( DS / ( MUC / RCSe ) ) ,( MUM + MLU ) ) ,( DS + MUC ) )", "obj1": 0.6412825651302605, "obj2": 0.2782068521949652}, {"determining": "Min( Min( DDR ,Const ) ,( ( MDR * FirstVNF_Mem_Server ) / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( RMSe ,MUM ) * ( RRSe / MUR ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 0.6513026052104208, "obj2": 0.25436283241520713}, {"determining": "Min( ( DDR - BR ) ,( ( ( Const * Max( Max( PN,( ( FirstVNF_CPU - RRS ) + PN ) ),FirstVNF_Mem ) ) + FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( Max( Min( RCSe ,MUC ),( RRSe / MUM ) ),Max( ( DS + DS ),( RRSe - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( FirstVNF_CPU_Server,AMS ) ) - ( ( ( DDR * FirstVNF_CPU ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - ( MDR - AMS ) ) ) )", "choosing": "Min( ( MUM + ( DS / DS ) ) ,( CS - ( RCSe - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_CPU_Server * BR ) ,Max( BR,MDR ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - ( CRS * FirstVNF_Mem ) ) ) * Min( ( Min( FirstVNF_Mem_Server ,ARS ) / ( PN * AMS ) ) ,Max( ( RRS * FirstVNF_RAM ),( AMS + ARS ) ) ) )", "choosing": "( ( ( ( RCSe - MUC ) + ( CS + RRSe ) ) * Max( ( RRSe / MUR ),( RMSe - RRSe ) ) ) / Min( ( Max( RRSe,MUR ) / ( MUC / MUR ) ) ,( ( RCSe + RRSe ) * ( CS - MUC ) ) ) )", "obj1": 0.6492985971943888, "obj2": 0.2642801689166924}, {"determining": "( ( Max( Min( FirstVNF_RAM_Server ,PN ),Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - Min( RRS ,FirstVNF_RAM_Server ) ) ) / ( Min( ( ( FirstVNF_RAM_Server / PN ) / PN ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),( CRS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MLU / RRSe ) - MUC ) / ( ( Min( MUR ,MLU ) * ( Min( MUM ,Max( CS,( MLU / CS ) ) ) / ( ( DS - ( MUR + CS ) ) / CS ) ) ) + RRSe ) ) - Max( Max( ( MUC * MLU ),( RCSe + MUR ) ),Min( ( MLU - ( MUC - CS ) ) ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,( BR + FirstVNF_CPU ) ) - CRS ) - ( ( FirstVNF_CPU_Server + Max( FirstVNF_Mem,FirstVNF_CPU ) ) + FirstVNF_CPU ) )", "choosing": "( Min( ( MUC - MUM ) ,( MLU * ( RMSe / ( MUM / RCSe ) ) ) ) * ( MUM - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - CRS ) - Min( ACS ,AMS ) ) / ( ( FirstVNF_RAM_Server + PN ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( Max( Min( RCSe ,( MUR / CS ) ),MUC ) * ( MUR / ( Max( RMSe,MUC ) + RMSe ) ) )", "obj1": 0.8537074148296593, "obj2": 0.1293345793947298}, {"determining": "Min( Min( ( CRS - ARS ) ,( ( CRS + RRS ) + Max( AMS,FirstVNF_RAM ) ) ) ,( RRS + AMS ) )", "choosing": "Max( ( Min( ( RCSe * MUM ) ,( ( Max( MUM,Max( MUC,RCSe ) ) + Max( ( DS * MUM ),MUC ) ) - MUC ) ) + MUR ),( ( ( MUR + MLU ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_RAM ,Const ) / Min( FirstVNF_CPU ,( PN / ( ( ( Const / RRS ) + DDR ) - FirstVNF_CPU ) ) ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + AMS ),( ARS / Const ) ) ) )", "choosing": "( ( Max( RMSe,( DS / MUM ) ) - ( ( MUR - MLU ) - ( Max( RMSe,DS ) / MUM ) ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) )", "obj1": 0.7575150300601202, "obj2": 0.13506723036189897}, {"determining": "Min( ( Max( ARS,CRS ) - ARS ) ,Max( FirstVNF_Mem_Server,FirstVNF_RAM ) )", "choosing": "Max( ( ( ( CS * MLU ) * Min( ( RRSe / CS ) ,Max( RMSe,MUR ) ) ) - ( MLU * MUC ) ),Min( ( RCSe / RMSe ) ,( ( ( RMSe + DS ) - DS ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}], "2": [{"determining": "( ( CRS + AMS ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( ( MLU * RMSe ) + ( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,Max( RRS,( FirstVNF_CPU / ARS ) ) ) + BR ) - ( MDR / BR ) )", "choosing": "( ( ( ( ( MUM - Max( DS,Min( RCSe ,MLU ) ) ) / MUM ) - RMSe ) - MUC ) + Min( MUM ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU / CRS ) ,( ( ARS * PN ) + FirstVNF_CPU ) )", "choosing": "( ( RCSe * DS ) + Min( ( RCSe * ( CS / MLU ) ) ,DS ) )", "obj1": 0.685370741482966, "obj2": 0.22234114992475715}, {"determining": "( ( ( PN / FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) / ( FirstVNF_RAM / ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe / MUM ) / ( RCSe * DS ) ) / Min( RCSe ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( Const - FirstVNF_Mem_Server ) + ( FirstVNF_CPU + Const ) ),Min( ( MDR / MDR ) ,( MRS - MRS ) ) )", "choosing": "( ( ( RCSe + MUR ) + ( MUM - DS ) ) - Max( ( CS * MLU ),( RCSe + DS ) ) )", "obj1": 0.6292585170340681, "obj2": 0.29959438223434925}, {"determining": "( ( Max( PN,FirstVNF_Mem ) * FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe + CS ) + Max( RMSe,DS ) ) / Max( ( RMSe + CS ),( CS * MUC ) ) )", "obj1": 0.9959919839679359, "obj2": 0.0033712361352305677}, {"determining": "Min( ( DDR - BR ) ,( ( ( Const * Max( Max( PN,( ( FirstVNF_CPU - RRS ) + PN ) ),FirstVNF_Mem ) ) + FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( Max( Min( RCSe ,MUC ),( RRSe / MUM ) ),Max( ( DS + DS ),( RRSe - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( FirstVNF_CPU_Server,AMS ) ) - ( ( ( DDR * FirstVNF_CPU ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - ( MDR - AMS ) ) ) )", "choosing": "Min( ( MUM + ( DS / DS ) ) ,( CS - ( RCSe - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( FirstVNF_RAM_Server ,PN ),Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - Min( RRS ,FirstVNF_RAM_Server ) ) ) / ( Min( ( ( FirstVNF_RAM_Server / PN ) / PN ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),( CRS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MLU / RRSe ) - MUC ) / ( ( Min( MUR ,MLU ) * ( Min( MUM ,Max( CS,( MLU / CS ) ) ) / ( ( DS - ( MUR + CS ) ) / CS ) ) ) + RRSe ) ) - Max( Max( ( MUC * MLU ),( RCSe + MUR ) ),Min( ( MLU - ( MUC - CS ) ) ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,( BR + FirstVNF_CPU ) ) - CRS ) - ( ( FirstVNF_CPU_Server + Max( FirstVNF_Mem,FirstVNF_CPU ) ) + FirstVNF_CPU ) )", "choosing": "( Min( ( MUC - MUM ) ,( MLU * ( RMSe / ( MUM / RCSe ) ) ) ) * ( MUM - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( CRS - ARS ) ,( ( CRS + RRS ) + Max( AMS,FirstVNF_RAM ) ) ) ,( RRS + AMS ) )", "choosing": "Max( ( Min( ( RCSe * MUM ) ,( ( Max( MUM,Max( MUC,RCSe ) ) + Max( ( DS * MUM ),MUC ) ) - MUC ) ) + MUR ),( ( ( MUR + MLU ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_RAM ,Const ) / Min( FirstVNF_CPU ,( PN / ( ( ( Const / RRS ) + DDR ) - FirstVNF_CPU ) ) ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + AMS ),( ARS / Const ) ) ) )", "choosing": "( ( Max( RMSe,( DS / MUM ) ) - ( ( MUR - MLU ) - ( Max( RMSe,DS ) / MUM ) ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) )", "obj1": 0.7575150300601202, "obj2": 0.13506723036189897}, {"determining": "Min( ( Max( ARS,CRS ) - ARS ) ,Max( FirstVNF_Mem_Server,FirstVNF_RAM ) )", "choosing": "Max( ( ( ( CS * MLU ) * Min( ( RRSe / CS ) ,Max( RMSe,MUR ) ) ) - ( MLU * MUC ) ),Min( ( RCSe / RMSe ) ,( ( ( RMSe + DS ) - DS ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + ( Const * FirstVNF_CPU ) ) / ( ACS / ( MRS * ( MDR * FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( ( MUR + ( CS / CS ) ) + DS ),( Min( RMSe ,MUM ) * ( RRSe / MUR ) ) )", "obj1": 0.6452905811623246, "obj2": 0.25718967137317955}, {"determining": "( Min( Min( Max( PN,FirstVNF_CPU ) ,ARS ) ,( Const / CRS ) ) + ( Max( ACS,Const ) - ( ACS + ACS ) ) )", "choosing": "Max( ( ( MUM - MUR ) / Max( RMSe,RMSe ) ),( ( MLU / CS ) + ( MUC * MLU ) ) )", "obj1": 0.9639278557114228, "obj2": 0.019848412916798223}, {"determining": "Min( ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) + Max( PN,FirstVNF_CPU ) ) ,Min( ( CRS - ARS ) ,( ( CRS / RRS ) / ( Max( ( MRS * ( Const / FirstVNF_CPU ) ),ARS ) - AMS ) ) ) )", "choosing": "Max( ( ( MLU + MUM ) * MUM ),( ( DS + RMSe ) - ( MUC * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( RRS,FirstVNF_Mem_Server ) ,Min( ( CRS - ARS ) ,( ( CRS / RRS ) + Max( MDR,MRS ) ) ) )", "choosing": "( ( RMSe + DS ) - ( MUC * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,ARS ) ,( Const / CRS ) ) + ( Max( ACS,Const ) - ( ACS + ACS ) ) )", "choosing": "( ( RMSe * CS ) / Max( RRSe,RCSe ) )", "obj1": 0.9478957915831663, "obj2": 0.035033267784121434}, {"determining": "( ( ACS / RRS ) + Max( MDR,ACS ) )", "choosing": "( ( MUR / CS ) - ( ( RCSe / Max( CS,CS ) ) / Max( RCSe,DS ) ) )", "obj1": 0.6492985971943888, "obj2": 0.25359368928720355}, {"determining": "( ( ( ( ACS - CRS ) - Min( ACS ,AMS ) ) / ( ( FirstVNF_RAM_Server + PN ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( Const - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( ( ( RRSe * RMSe ) - ( MUC * RRSe ) ) * ( MUR / ( Max( RMSe,MUC ) + RMSe ) ) )", "obj1": 0.657314629258517, "obj2": 0.2431770549741266}, {"determining": "( Min( ( ACS - AMS ) ,CRS ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( Min( ( RCSe * MUR ) ,MLU ),( MUR / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,MDR ) ,CRS ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( RCSe ,MUR ) - Min( DS ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( FirstVNF_CPU / CRS ) )", "choosing": "Min( ( ( RCSe * DS ) + Min( RRSe ,DS ) ) ,Min( Min( ( MUR * CS ) ,Max( MLU,CS ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU / CRS ) ,( FirstVNF_CPU + BR ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,Min( Min( ( MUR * CS ) ,Max( MLU,CS ) ) ,CS ) )", "obj1": 0.6412825651302605, "obj2": 0.2612255638251263}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( MDR,BR ) ) ) )", "choosing": "( ( RCSe * DS ) + Min( RRSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU * ARS ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) * Max( Min( DDR ,AMS ),( PN / AMS ) ) ) / Min( Min( Max( FirstVNF_Mem,CRS ) ,Max( FirstVNF_Mem_Server,ARS ) ) ,( PN - ( DDR + PN ) ) ) )", "choosing": "( ( ( ( CS + RMSe ) - ( DS * DS ) ) / ( Max( RRSe,DS ) - ( MUR * RCSe ) ) ) / Min( ( ( MUM / MUM ) + Min( MUR ,MUC ) ) ,( ( ( ( RCSe * MLU ) - Min( MUM ,RRSe ) ) * MUR ) + ( CS + MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / FirstVNF_CPU_Server ) - ( AMS / BR ) ) / ( ( FirstVNF_Mem_Server * ( BR * FirstVNF_RAM_Server ) ) / ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( MUM ,RCSe ) / CS ) / Min( RCSe ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) / ( FirstVNF_RAM / ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RMSe - MUC ) + Max( RRSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ,( PN + FirstVNF_CPU_Server ) ) - ( Min( FirstVNF_Mem_Server ,ACS ) * ( ARS - FirstVNF_Mem ) ) ) * FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe + CS ) + Max( ( ( ( MLU + MLU ) - Min( RMSe ,RRSe ) ) - ( Min( RRSe ,CS ) / Min( DS ,RCSe ) ) ),DS ) ) / Max( ( RMSe + CS ),( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,FirstVNF_Mem ) * FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe + CS ) + Max( RMSe,DS ) ) / Max( ( RMSe + CS ),( CS * MUC ) ) )", "obj1": 0.9959919839679359, "obj2": 0.0033712361352305677}, {"determining": "( ( ( ( FirstVNF_RAM_Server * Const ) / ( ( ARS * PN ) + FirstVNF_CPU ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,( RCSe * DS ) ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 0.7014028056112225, "obj2": 0.18565405345545016}, {"determining": "( CRS + ( FirstVNF_RAM * ( FirstVNF_RAM - ( DDR + DDR ) ) ) )", "choosing": "( ( ( RMSe + RRSe ) * ( RRSe / DS ) ) - ( MUR - MUC ) )", "obj1": 0.9539078156312625, "obj2": 0.023650089143923362}, {"determining": "Min( ( Max( FirstVNF_CPU,BR ) / ( FirstVNF_Mem - ( DDR + FirstVNF_Mem_Server ) ) ) ,( Max( FirstVNF_CPU,ARS ) + ( CRS / PN ) ) )", "choosing": "( Min( ( MUM * MLU ) ,MUC ) * ( ( MUR + MUC ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_CPU_Server ) / ( ( ( Const - Max( BR,( Max( ( FirstVNF_CPU_Server - BR ),FirstVNF_CPU ) * CRS ) ) ) / ( FirstVNF_CPU * CRS ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) )", "choosing": "( ( CS + ( ( MUC * ( Min( CS ,MUC ) - RRSe ) ) * Min( ( RCSe / ( MUR - ( RCSe / Max( MUC,CS ) ) ) ) ,Min( CS ,RMSe ) ) ) ) * ( Max( ( ( CS * MUR ) * CS ),Max( Min( RRSe ,Min( MUR ,RMSe ) ),( DS / CS ) ) ) * ( ( MUM + MUR ) + ( CS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_CPU_Server ) / ( ( ( Const - Max( BR,( Max( ( FirstVNF_CPU_Server - BR ),FirstVNF_CPU ) * CRS ) ) ) / ( FirstVNF_CPU * CRS ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) )", "choosing": "( ( CS + ( ( MUC * ( Min( CS ,MUC ) - RRSe ) ) * Min( ( RCSe / ( MUR - ( RCSe / Max( MUC,CS ) ) ) ) ,Min( CS ,RMSe ) ) ) ) * ( Max( ( ( CS * MUR ) * CS ),Max( Min( RRSe ,Min( MUR ,RMSe ) ),( DS / CS ) ) ) * ( ( MUM + MUR ) + ( CS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_CPU_Server ) / ( ( ( Const - Max( BR,( Max( ( FirstVNF_CPU_Server - BR ),FirstVNF_CPU ) * CRS ) ) ) / ( FirstVNF_CPU * CRS ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) )", "choosing": "( ( CS + ( ( MUC * ( Min( CS ,MUC ) - RRSe ) ) * Min( ( RCSe / ( MUR - ( RCSe / Max( MUC,CS ) ) ) ) ,Min( CS ,RMSe ) ) ) ) * ( Max( ( ( CS * MUR ) * CS ),Max( Min( RRSe ,Min( MUR ,RMSe ) ),( DS / CS ) ) ) * ( ( MUM + MUR ) + ( CS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * Const ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( ( ( MDR + ACS ) * ( MDR / ARS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),( CRS - ( AMS / MDR ) ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) * ( Max( ( DS * CS ),Max( Min( RRSe ,Min( MUR ,RMSe ) ),( DS / CS ) ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( Max( RRS,DDR ) / Max( FirstVNF_RAM_Server,CRS ) ) ,( ( PN * FirstVNF_RAM_Server ) / Max( ACS,Const ) ) ),( ( Min( PN ,PN ) + Max( RRS,CRS ) ) / ( ( PN + MRS ) * ( CRS * AMS ) ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( Max( Min( RCSe ,( ( ( MUR / RMSe ) + Min( MUC ,CS ) ) / CS ) ),MUC ) * ( MUR / ( Max( RMSe,MUC ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MDR * FirstVNF_Mem_Server ) / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ,( ACS + DDR ) )", "choosing": "Min( ( Min( RMSe ,DS ) * MLU ) ,( ( MUM / RRSe ) * Max( RCSe,CS ) ) )", "obj1": 0.6472945891783567, "obj2": 0.25475254271918274}, {"determining": "Min( ( ( FirstVNF_RAM * CRS ) + ( MRS - Max( ( Max( FirstVNF_RAM,Min( FirstVNF_CPU ,MRS ) ) + AMS ),( ( ( FirstVNF_Mem_Server / BR ) * RRS ) * AMS ) ) ) ) ,( ( ACS * FirstVNF_CPU ) * Min( AMS ,CRS ) ) )", "choosing": "Max( Min( ( Max( ( RRSe - MUC ),Max( ( MLU / MUM ),RRSe ) ) * Min( MLU ,MUC ) ) ,Max( Min( DS ,Min( Max( MUC,MUC ) ,( RMSe / Min( ( CS + DS ) ,MLU ) ) ) ),MLU ) ),( RMSe * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem,ARS ) - ( ACS / FirstVNF_CPU ) ) + ( BR - FirstVNF_RAM_Server ) )", "choosing": "( Max( Min( ( ( ( RRSe / RMSe ) - MUM ) * MUR ) ,MLU ),( RCSe / RMSe ) ) / Max( DS,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( BR - FirstVNF_RAM_Server ),MDR ) ,CRS ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( Min( ( RCSe * MUR ) ,MLU ),( ( ( RMSe * CS ) / Max( RRSe,RCSe ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,MDR ) ,CRS ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( Min( ( RCSe * MUR ) ,MLU ),( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + AMS ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( ( MLU * RMSe ) + ( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ARS - ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( Min( ( MUM + ( RRSe * DS ) ) ,MLU ),( RCSe / RMSe ) ) )", "obj1": 0.9939879759519038, "obj2": 0.004204996674631942}, {"determining": "Min( ( CRS - ARS ) ,( ( DDR / FirstVNF_CPU ) - AMS ) )", "choosing": "Max( ( ( MUR * ( MUR * CS ) ) * ( MLU * ( RCSe - ( ( DS * MLU ) + ( MUM * Max( ( RMSe + MUC ),RCSe ) ) ) ) ) ),Min( ( CS / MUR ) ,( MUM + ( RRSe * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,MDR ) ,CRS ) - ( ACS / FirstVNF_CPU ) )", "choosing": "Max( ( DS - ( MLU * MUC ) ),Min( ( RCSe / MUR ) ,( MUM + ( RRSe * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ARS ) ,Max( FirstVNF_Mem_Server,FirstVNF_RAM ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( Min( ( RCSe * MUR ) ,MLU ),( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,( BR + FirstVNF_CPU ) ) - CRS ) - ( ( FirstVNF_CPU_Server + Max( FirstVNF_Mem,FirstVNF_CPU ) ) + FirstVNF_CPU ) )", "choosing": "( Min( ( MUC - MUM ) ,( MLU * ( RMSe / ( MUM / RCSe ) ) ) ) * ( MUM - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,( BR + FirstVNF_CPU ) ) - CRS ) - ( ( FirstVNF_CPU_Server + Max( FirstVNF_Mem,FirstVNF_CPU ) ) + FirstVNF_CPU ) )", "choosing": "( Min( ( MUC - MUM ) ,( MLU * ( RMSe / ( MUM / RCSe ) ) ) ) * ( MUM - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ACS ,Min( FirstVNF_CPU_Server ,MDR ) ) / MRS ) - Max( FirstVNF_RAM,FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( CS * MLU ) * Min( ( RRSe / CS ) ,Max( RMSe,MUR ) ) ) - ( MLU * MUC ) ),Min( ( RCSe / RMSe ) ,( ( ( RMSe + DS ) - DS ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,( BR + FirstVNF_CPU ) ) - CRS ) - ( ( FirstVNF_CPU_Server + Max( FirstVNF_Mem,FirstVNF_CPU ) ) + FirstVNF_CPU ) )", "choosing": "( Min( ( MUC - MUM ) ,( MLU * ( RMSe / ( MUM / RCSe ) ) ) ) * ( MUM - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( AMS / FirstVNF_CPU_Server ) ,MDR ) ,Const ) - ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) + FirstVNF_CPU ) )", "choosing": "( ( MUM / MUC ) * Min( MUC ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( Min( Min( AMS ,Min( FirstVNF_Mem_Server ,MRS ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) + ( ACS - FirstVNF_CPU_Server ) ) - MDR ) ,Max( FirstVNF_CPU_Server,( FirstVNF_RAM - BR ) ) )", "choosing": "( ( ( ( MLU * ( MUC * ( ( MLU / MUM ) / ( Min( CS ,MUM ) / ( MLU - MLU ) ) ) ) ) * Min( ( MUR - ( RMSe - ( Max( CS,MUC ) / RCSe ) ) ) ,RMSe ) ) - Max( MUR,MUC ) ) * ( RRSe * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN / MRS ) - ( MRS / FirstVNF_RAM_Server ) ) / ( ( MRS - ARS ) + Max( Const,FirstVNF_Mem_Server ) ) ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "Min( ( CS + RCSe ) ,( RMSe / MUM ) )", "obj1": 0.9338677354709419, "obj2": 0.04350583145575411}, {"determining": "( ( CRS + AMS ) - ( ( Min( PN ,PN ) + Max( RRS,CRS ) ) / MRS ) )", "choosing": "( ( MLU * RMSe ) + ( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + AMS ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( ( MLU * RMSe ) + ( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( BR / MDR ) )", "choosing": "( ( ( RMSe + RMSe ) - MLU ) + ( DS * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + AMS ) - ( MDR / BR ) )", "choosing": "( ( MLU * RMSe ) + ( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Min( FirstVNF_Mem_Server ,MDR ) ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( Min( MUR ,( Max( ( MLU * RRSe ),DS ) / CS ) ) + ( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) / ( ( Max( RRS,DDR ) / Max( FirstVNF_RAM_Server,CRS ) ) / ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RMSe / ( RCSe * DS ) ) / Min( RCSe ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) / ( FirstVNF_RAM / ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( MUC * MUM ) * Min( CS ,RMSe ) ) - ( ( MUR / RMSe ) + Min( MUC ,CS ) ) ) * ( ( ( RCSe * RCSe ) + ( MUR / MUR ) ) - Max( ( RCSe - MUC ),( MLU - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ARS,CRS ) - ARS ) ,Max( FirstVNF_Mem_Server,( ( ( AMS / Const ) + ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) - Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "Max( ( DS - ( MLU * MUC ) ),Min( ( RCSe / RRSe ) ,Max( ( MLU - ( MUR - DS ) ),( DS + ( MUR - CS ) ) ) ) )", "obj1": 0.6713426853707415, "obj2": 0.23446659172112672}, {"determining": "( ( FirstVNF_RAM + AMS ) - ( MDR / BR ) )", "choosing": "( ( ( RCSe + MUR ) + ( MUM - DS ) ) - Max( ( CS * MLU ),( RCSe + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN / MRS ) - ( MRS / FirstVNF_RAM_Server ) ) / ( ( MRS - ARS ) + Min( FirstVNF_CPU ,( FirstVNF_CPU_Server - ( FirstVNF_Mem + BR ) ) ) ) ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( Max( MUC,( ( RCSe * CS ) / MUR ) ) - ( Min( Min( RMSe ,MLU ) ,Min( DS ,MUM ) ) * Min( ( MUM * MLU ) ,( ( MLU * MUR ) + ( Min( MUC ,RRSe ) - CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / BR ) - ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( ( MLU - MUC ) + Min( ( MLU * ( RMSe - Min( MUM ,( ( MUM / Min( MLU ,MUM ) ) * MLU ) ) ) ) ,Max( ( ( MUM + RMSe ) / ( ( DS * CS ) + RRSe ) ),Min( Max( ( RMSe * RMSe ),( RMSe + ( CS + RMSe ) ) ) ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + AMS ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( Min( MUR ,RRSe ) + ( RCSe - ( ( MUM / RCSe ) - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN + ( DDR + PN ) )", "choosing": "( ( ( RCSe + CS ) * RMSe ) + ( MUM * MUR ) )", "obj1": 0.6332665330661322, "obj2": 0.262397594737729}, {"determining": "( Min( ( Min( FirstVNF_RAM ,Const ) / Min( DDR ,Min( BR ,FirstVNF_Mem_Server ) ) ) ,MDR ) - ( ( ( MDR + DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) / Max( ( Const + AMS ),( ARS / Const ) ) ) )", "choosing": "( ( Max( MUR,RCSe ) + ( ( RCSe + RRSe ) / MUC ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( FirstVNF_RAM ,Const ) / Min( DDR ,( FirstVNF_Mem + FirstVNF_CPU ) ) ),( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( DDR + MDR ) ) / Max( ( Const + AMS ),( ARS / Const ) ) ) )", "choosing": "( ( MUM / MUC ) * Max( ( MUM + RCSe ),MLU ) )", "obj1": 0.7915831663326653, "obj2": 0.09505228526972143}], "3": [{"determining": "( ( CRS + AMS ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( ( MLU * RMSe ) + ( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,Max( RRS,( FirstVNF_CPU / ARS ) ) ) + BR ) - ( MDR / BR ) )", "choosing": "( ( ( ( ( MUM - Max( DS,Min( RCSe ,MLU ) ) ) / MUM ) - RMSe ) - MUC ) + Min( MUM ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) / ( FirstVNF_RAM / ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe / MUM ) / ( RCSe * DS ) ) / Min( RCSe ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( Const - FirstVNF_Mem_Server ) + ( FirstVNF_CPU + Const ) ),Min( ( MDR / MDR ) ,( MRS - MRS ) ) )", "choosing": "( ( ( RCSe + MUR ) + ( MUM - DS ) ) - Max( ( CS * MLU ),( RCSe + DS ) ) )", "obj1": 0.6292585170340681, "obj2": 0.29959438223434925}, {"determining": "( ( Max( PN,FirstVNF_Mem ) * FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe + CS ) + Max( RMSe,DS ) ) / Max( ( RMSe + CS ),( CS * MUC ) ) )", "obj1": 0.9959919839679359, "obj2": 0.0033712361352305677}, {"determining": "Min( ( DDR - BR ) ,( ( ( Const * Max( Max( PN,( ( FirstVNF_CPU - RRS ) + PN ) ),FirstVNF_Mem ) ) + FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( Max( Min( RCSe ,MUC ),( RRSe / MUM ) ),Max( ( DS + DS ),( RRSe - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( FirstVNF_CPU_Server,AMS ) ) - ( ( ( DDR * FirstVNF_CPU ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - ( MDR - AMS ) ) ) )", "choosing": "Min( ( MUM + ( DS / DS ) ) ,( CS - ( RCSe - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( FirstVNF_RAM_Server ,PN ),Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - Min( RRS ,FirstVNF_RAM_Server ) ) ) / ( Min( ( ( FirstVNF_RAM_Server / PN ) / PN ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),( CRS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MLU / RRSe ) - MUC ) / ( ( Min( MUR ,MLU ) * ( Min( MUM ,Max( CS,( MLU / CS ) ) ) / ( ( DS - ( MUR + CS ) ) / CS ) ) ) + RRSe ) ) - Max( Max( ( MUC * MLU ),( RCSe + MUR ) ),Min( ( MLU - ( MUC - CS ) ) ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,( BR + FirstVNF_CPU ) ) - CRS ) - ( ( FirstVNF_CPU_Server + Max( FirstVNF_Mem,FirstVNF_CPU ) ) + FirstVNF_CPU ) )", "choosing": "( Min( ( MUC - MUM ) ,( MLU * ( RMSe / ( MUM / RCSe ) ) ) ) * ( MUM - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( CRS - ARS ) ,( ( CRS + RRS ) + Max( AMS,FirstVNF_RAM ) ) ) ,( RRS + AMS ) )", "choosing": "Max( ( Min( ( RCSe * MUM ) ,( ( Max( MUM,Max( MUC,RCSe ) ) + Max( ( DS * MUM ),MUC ) ) - MUC ) ) + MUR ),( ( ( MUR + MLU ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_RAM ,Const ) / Min( FirstVNF_CPU ,( PN / ( ( ( Const / RRS ) + DDR ) - FirstVNF_CPU ) ) ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + AMS ),( ARS / Const ) ) ) )", "choosing": "( ( Max( RMSe,( DS / MUM ) ) - ( ( MUR - MLU ) - ( Max( RMSe,DS ) / MUM ) ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) )", "obj1": 0.7575150300601202, "obj2": 0.13506723036189897}, {"determining": "Min( ( Max( ARS,CRS ) - ARS ) ,Max( FirstVNF_Mem_Server,FirstVNF_RAM ) )", "choosing": "Max( ( ( ( CS * MLU ) * Min( ( RRSe / CS ) ,Max( RMSe,MUR ) ) ) - ( MLU * MUC ) ),Min( ( RCSe / RMSe ) ,( ( ( RMSe + DS ) - DS ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) + Max( PN,FirstVNF_CPU ) ) ,Min( ( CRS - ARS ) ,( ( CRS / RRS ) / ( Max( ( MRS * ( Const / FirstVNF_CPU ) ),ARS ) - AMS ) ) ) )", "choosing": "Max( ( ( MLU + MUM ) * MUM ),( ( DS + RMSe ) - ( MUC * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( RRS,FirstVNF_Mem_Server ) ,Min( ( CRS - ARS ) ,( ( CRS / RRS ) + Max( MDR,MRS ) ) ) )", "choosing": "( ( RMSe + DS ) - ( MUC * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,ARS ) ,( Const / CRS ) ) + ( Max( ACS,Const ) - ( ACS + ACS ) ) )", "choosing": "( ( RMSe * CS ) / Max( RRSe,RCSe ) )", "obj1": 0.9478957915831663, "obj2": 0.035033267784121434}, {"determining": "( ( ( ( ACS - CRS ) - Min( ACS ,AMS ) ) / ( ( FirstVNF_RAM_Server + PN ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( Const - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( ( ( RRSe * RMSe ) - ( MUC * RRSe ) ) * ( MUR / ( Max( RMSe,MUC ) + RMSe ) ) )", "obj1": 0.657314629258517, "obj2": 0.2431770549741266}, {"determining": "( Min( ( ACS - AMS ) ,CRS ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( Min( ( RCSe * MUR ) ,MLU ),( MUR / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,MDR ) ,CRS ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( RCSe ,MUR ) - Min( DS ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( FirstVNF_CPU / CRS ) )", "choosing": "Min( ( ( RCSe * DS ) + Min( RRSe ,DS ) ) ,Min( Min( ( MUR * CS ) ,Max( MLU,CS ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( MDR,BR ) ) ) )", "choosing": "( ( RCSe * DS ) + Min( RRSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU * ARS ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) * Max( Min( DDR ,AMS ),( PN / AMS ) ) ) / Min( Min( Max( FirstVNF_Mem,CRS ) ,Max( FirstVNF_Mem_Server,ARS ) ) ,( PN - ( DDR + PN ) ) ) )", "choosing": "( ( ( ( CS + RMSe ) - ( DS * DS ) ) / ( Max( RRSe,DS ) - ( MUR * RCSe ) ) ) / Min( ( ( MUM / MUM ) + Min( MUR ,MUC ) ) ,( ( ( ( RCSe * MLU ) - Min( MUM ,RRSe ) ) * MUR ) + ( CS + MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / FirstVNF_CPU_Server ) - ( AMS / BR ) ) / ( ( FirstVNF_Mem_Server * ( BR * FirstVNF_RAM_Server ) ) / ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( MUM ,RCSe ) / CS ) / Min( RCSe ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) / ( FirstVNF_RAM / ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RMSe - MUC ) + Max( RRSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ,( PN + FirstVNF_CPU_Server ) ) - ( Min( FirstVNF_Mem_Server ,ACS ) * ( ARS - FirstVNF_Mem ) ) ) * FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe + CS ) + Max( ( ( ( MLU + MLU ) - Min( RMSe ,RRSe ) ) - ( Min( RRSe ,CS ) / Min( DS ,RCSe ) ) ),DS ) ) / Max( ( RMSe + CS ),( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,FirstVNF_Mem ) * FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe + CS ) + Max( RMSe,DS ) ) / Max( ( RMSe + CS ),( CS * MUC ) ) )", "obj1": 0.9959919839679359, "obj2": 0.0033712361352305677}, {"determining": "( ( ( ( FirstVNF_RAM_Server * Const ) / ( ( ARS * PN ) + FirstVNF_CPU ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,( RCSe * DS ) ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 0.7014028056112225, "obj2": 0.18565405345545016}, {"determining": "( CRS + ( FirstVNF_RAM * ( FirstVNF_RAM - ( DDR + DDR ) ) ) )", "choosing": "( ( ( RMSe + RRSe ) * ( RRSe / DS ) ) - ( MUR - MUC ) )", "obj1": 0.9539078156312625, "obj2": 0.023650089143923362}, {"determining": "Min( ( Max( FirstVNF_CPU,BR ) / ( FirstVNF_Mem - ( DDR + FirstVNF_Mem_Server ) ) ) ,( Max( FirstVNF_CPU,ARS ) + ( CRS / PN ) ) )", "choosing": "( Min( ( MUM * MLU ) ,MUC ) * ( ( MUR + MUC ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_CPU_Server ) / ( ( ( Const - Max( BR,( Max( ( FirstVNF_CPU_Server - BR ),FirstVNF_CPU ) * CRS ) ) ) / ( FirstVNF_CPU * CRS ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) )", "choosing": "( ( CS + ( ( MUC * ( Min( CS ,MUC ) - RRSe ) ) * Min( ( RCSe / ( MUR - ( RCSe / Max( MUC,CS ) ) ) ) ,Min( CS ,RMSe ) ) ) ) * ( Max( ( ( CS * MUR ) * CS ),Max( Min( RRSe ,Min( MUR ,RMSe ) ),( DS / CS ) ) ) * ( ( MUM + MUR ) + ( CS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_CPU_Server ) / ( ( ( Const - Max( BR,( Max( ( FirstVNF_CPU_Server - BR ),FirstVNF_CPU ) * CRS ) ) ) / ( FirstVNF_CPU * CRS ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) )", "choosing": "( ( CS + ( ( MUC * ( Min( CS ,MUC ) - RRSe ) ) * Min( ( RCSe / ( MUR - ( RCSe / Max( MUC,CS ) ) ) ) ,Min( CS ,RMSe ) ) ) ) * ( Max( ( ( CS * MUR ) * CS ),Max( Min( RRSe ,Min( MUR ,RMSe ) ),( DS / CS ) ) ) * ( ( MUM + MUR ) + ( CS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_CPU_Server ) / ( ( ( Const - Max( BR,( Max( ( FirstVNF_CPU_Server - BR ),FirstVNF_CPU ) * CRS ) ) ) / ( FirstVNF_CPU * CRS ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) )", "choosing": "( ( CS + ( ( MUC * ( Min( CS ,MUC ) - RRSe ) ) * Min( ( RCSe / ( MUR - ( RCSe / Max( MUC,CS ) ) ) ) ,Min( CS ,RMSe ) ) ) ) * ( Max( ( ( CS * MUR ) * CS ),Max( Min( RRSe ,Min( MUR ,RMSe ) ),( DS / CS ) ) ) * ( ( MUM + MUR ) + ( CS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * Const ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( ( ( MDR + ACS ) * ( MDR / ARS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),( CRS - ( AMS / MDR ) ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) * ( Max( ( DS * CS ),Max( Min( RRSe ,Min( MUR ,RMSe ) ),( DS / CS ) ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( Max( RRS,DDR ) / Max( FirstVNF_RAM_Server,CRS ) ) ,( ( PN * FirstVNF_RAM_Server ) / Max( ACS,Const ) ) ),( ( Min( PN ,PN ) + Max( RRS,CRS ) ) / ( ( PN + MRS ) * ( CRS * AMS ) ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( Max( Min( RCSe ,( ( ( MUR / RMSe ) + Min( MUC ,CS ) ) / CS ) ),MUC ) * ( MUR / ( Max( RMSe,MUC ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM * CRS ) + ( MRS - Max( ( Max( FirstVNF_RAM,Min( FirstVNF_CPU ,MRS ) ) + AMS ),( ( ( FirstVNF_Mem_Server / BR ) * RRS ) * AMS ) ) ) ) ,( ( ACS * FirstVNF_CPU ) * Min( AMS ,CRS ) ) )", "choosing": "Max( Min( ( Max( ( RRSe - MUC ),Max( ( MLU / MUM ),RRSe ) ) * Min( MLU ,MUC ) ) ,Max( Min( DS ,Min( Max( MUC,MUC ) ,( RMSe / Min( ( CS + DS ) ,MLU ) ) ) ),MLU ) ),( RMSe * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem,ARS ) - ( ACS / FirstVNF_CPU ) ) + ( BR - FirstVNF_RAM_Server ) )", "choosing": "( Max( Min( ( ( ( RRSe / RMSe ) - MUM ) * MUR ) ,MLU ),( RCSe / RMSe ) ) / Max( DS,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( BR - FirstVNF_RAM_Server ),MDR ) ,CRS ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( Min( ( RCSe * MUR ) ,MLU ),( ( ( RMSe * CS ) / Max( RRSe,RCSe ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,MDR ) ,CRS ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( Min( ( RCSe * MUR ) ,MLU ),( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + AMS ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( ( MLU * RMSe ) + ( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ARS - ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( Min( ( MUM + ( RRSe * DS ) ) ,MLU ),( RCSe / RMSe ) ) )", "obj1": 0.9939879759519038, "obj2": 0.004204996674631942}, {"determining": "Min( ( CRS - ARS ) ,( ( DDR / FirstVNF_CPU ) - AMS ) )", "choosing": "Max( ( ( MUR * ( MUR * CS ) ) * ( MLU * ( RCSe - ( ( DS * MLU ) + ( MUM * Max( ( RMSe + MUC ),RCSe ) ) ) ) ) ),Min( ( CS / MUR ) ,( MUM + ( RRSe * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,MDR ) ,CRS ) - ( ACS / FirstVNF_CPU ) )", "choosing": "Max( ( DS - ( MLU * MUC ) ),Min( ( RCSe / MUR ) ,( MUM + ( RRSe * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ARS ) ,Max( FirstVNF_Mem_Server,FirstVNF_RAM ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( Min( ( RCSe * MUR ) ,MLU ),( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,( BR + FirstVNF_CPU ) ) - CRS ) - ( ( FirstVNF_CPU_Server + Max( FirstVNF_Mem,FirstVNF_CPU ) ) + FirstVNF_CPU ) )", "choosing": "( Min( ( MUC - MUM ) ,( MLU * ( RMSe / ( MUM / RCSe ) ) ) ) * ( MUM - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,( BR + FirstVNF_CPU ) ) - CRS ) - ( ( FirstVNF_CPU_Server + Max( FirstVNF_Mem,FirstVNF_CPU ) ) + FirstVNF_CPU ) )", "choosing": "( Min( ( MUC - MUM ) ,( MLU * ( RMSe / ( MUM / RCSe ) ) ) ) * ( MUM - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ACS ,Min( FirstVNF_CPU_Server ,MDR ) ) / MRS ) - Max( FirstVNF_RAM,FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( CS * MLU ) * Min( ( RRSe / CS ) ,Max( RMSe,MUR ) ) ) - ( MLU * MUC ) ),Min( ( RCSe / RMSe ) ,( ( ( RMSe + DS ) - DS ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,( BR + FirstVNF_CPU ) ) - CRS ) - ( ( FirstVNF_CPU_Server + Max( FirstVNF_Mem,FirstVNF_CPU ) ) + FirstVNF_CPU ) )", "choosing": "( Min( ( MUC - MUM ) ,( MLU * ( RMSe / ( MUM / RCSe ) ) ) ) * ( MUM - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( AMS / FirstVNF_CPU_Server ) ,MDR ) ,Const ) - ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) + FirstVNF_CPU ) )", "choosing": "( ( MUM / MUC ) * Min( MUC ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( Min( Min( AMS ,Min( FirstVNF_Mem_Server ,MRS ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) + ( ACS - FirstVNF_CPU_Server ) ) - MDR ) ,Max( FirstVNF_CPU_Server,( FirstVNF_RAM - BR ) ) )", "choosing": "( ( ( ( MLU * ( MUC * ( ( MLU / MUM ) / ( Min( CS ,MUM ) / ( MLU - MLU ) ) ) ) ) * Min( ( MUR - ( RMSe - ( Max( CS,MUC ) / RCSe ) ) ) ,RMSe ) ) - Max( MUR,MUC ) ) * ( RRSe * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + AMS ) - ( ( Min( PN ,PN ) + Max( RRS,CRS ) ) / MRS ) )", "choosing": "( ( MLU * RMSe ) + ( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + AMS ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( ( MLU * RMSe ) + ( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( BR / MDR ) )", "choosing": "( ( ( RMSe + RMSe ) - MLU ) + ( DS * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + AMS ) - ( MDR / BR ) )", "choosing": "( ( MLU * RMSe ) + ( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Min( FirstVNF_Mem_Server ,MDR ) ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( Min( MUR ,( Max( ( MLU * RRSe ),DS ) / CS ) ) + ( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) / ( ( Max( RRS,DDR ) / Max( FirstVNF_RAM_Server,CRS ) ) / ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RMSe / ( RCSe * DS ) ) / Min( RCSe ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) / ( FirstVNF_RAM / ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( MUC * MUM ) * Min( CS ,RMSe ) ) - ( ( MUR / RMSe ) + Min( MUC ,CS ) ) ) * ( ( ( RCSe * RCSe ) + ( MUR / MUR ) ) - Max( ( RCSe - MUC ),( MLU - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ARS,CRS ) - ARS ) ,Max( FirstVNF_Mem_Server,( ( ( AMS / Const ) + ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) - Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "Max( ( DS - ( MLU * MUC ) ),Min( ( RCSe / RRSe ) ,Max( ( MLU - ( MUR - DS ) ),( DS + ( MUR - CS ) ) ) ) )", "obj1": 0.6713426853707415, "obj2": 0.23446659172112672}, {"determining": "( ( FirstVNF_RAM + AMS ) - ( MDR / BR ) )", "choosing": "( ( ( RCSe + MUR ) + ( MUM - DS ) ) - Max( ( CS * MLU ),( RCSe + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN / MRS ) - ( MRS / FirstVNF_RAM_Server ) ) / ( ( MRS - ARS ) + Min( FirstVNF_CPU ,( FirstVNF_CPU_Server - ( FirstVNF_Mem + BR ) ) ) ) ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( Max( MUC,( ( RCSe * CS ) / MUR ) ) - ( Min( Min( RMSe ,MLU ) ,Min( DS ,MUM ) ) * Min( ( MUM * MLU ) ,( ( MLU * MUR ) + ( Min( MUC ,RRSe ) - CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / BR ) - ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( ( MLU - MUC ) + Min( ( MLU * ( RMSe - Min( MUM ,( ( MUM / Min( MLU ,MUM ) ) * MLU ) ) ) ) ,Max( ( ( MUM + RMSe ) / ( ( DS * CS ) + RRSe ) ),Min( Max( ( RMSe * RMSe ),( RMSe + ( CS + RMSe ) ) ) ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + AMS ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( Min( MUR ,RRSe ) + ( RCSe - ( ( MUM / RCSe ) - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN + ( DDR + PN ) )", "choosing": "( ( ( RCSe + CS ) * RMSe ) + ( MUM * MUR ) )", "obj1": 0.6332665330661322, "obj2": 0.262397594737729}, {"determining": "( Min( ( Min( FirstVNF_RAM ,Const ) / Min( DDR ,Min( BR ,FirstVNF_Mem_Server ) ) ) ,MDR ) - ( ( ( MDR + DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) / Max( ( Const + AMS ),( ARS / Const ) ) ) )", "choosing": "( ( Max( MUR,RCSe ) + ( ( RCSe + RRSe ) / MUC ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( FirstVNF_RAM ,Const ) / Min( DDR ,( FirstVNF_Mem + FirstVNF_CPU ) ) ),( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( DDR + MDR ) ) / Max( ( Const + AMS ),( ARS / Const ) ) ) )", "choosing": "( ( MUM / MUC ) * Max( ( MUM + RCSe ),MLU ) )", "obj1": 0.7915831663326653, "obj2": 0.09505228526972143}, {"determining": "( Min( Max( BR,MDR ) ,CRS ) - FirstVNF_Mem_Server )", "choosing": "( Min( ( Max( MLU,( Min( MLU ,MUR ) * ( RMSe - MUR ) ) ) - RRSe ) ,( MUC - MUM ) ) * ( MUM - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,BR ) - ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) + FirstVNF_CPU ) )", "choosing": "( ( RRSe - ( RMSe - MUM ) ) * ( MUM - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / FirstVNF_CPU_Server ) - ( AMS / BR ) ) / ( FirstVNF_RAM / ( ( ( Max( Min( FirstVNF_RAM_Server ,( RRS - ACS ) ),Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - Min( RRS ,FirstVNF_RAM_Server ) ) ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),( PN - CRS ) ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RMSe - MUC ) / ( MUM / ( ( MUR - CS ) - Max( MUM,Min( Min( ( CS - ( RRSe / MUR ) ) ,( ( CS / MLU ) + RCSe ) ) ,DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / FirstVNF_CPU_Server ) - ( AMS / BR ) ) / ( FirstVNF_RAM / ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( MLU / RRSe ) - MUC ) / ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( Max( ( MUC * MLU ),( RCSe + MUR ) ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + AMS ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( ( MLU - MUC ) + ( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + AMS ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( ( MLU * RMSe ) + ( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) + AMS ) - ( MDR / BR ) )", "choosing": "( ( MLU - MUC ) + Max( Max( ( MUC * MLU ),( RCSe + MUR ) ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + AMS ) - ( MDR / BR ) )", "choosing": "( ( MLU - MUC ) + ( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,Max( RRS,( FirstVNF_CPU / ARS ) ) ) + BR ) - ( MDR / BR ) )", "choosing": "( ( ( ( ( MUM - Max( DS,Min( RCSe ,MLU ) ) ) / MUM ) - RMSe ) - MUC ) + Min( MUM ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,Max( RRS,( FirstVNF_CPU / ARS ) ) ) + BR ) - ( MDR / BR ) )", "choosing": "( ( ( ( ( MUM - Max( DS,Min( RCSe ,MLU ) ) ) / MUM ) - RMSe ) - MUC ) + Min( MUM ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * Const ) / ( ( ARS * PN ) + FirstVNF_CPU ) ) - ( ( FirstVNF_Mem_Server + ARS ) * ( CRS / MRS ) ) ) / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) )", "choosing": "( RRSe * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 0.6953907815631263, "obj2": 0.18991586483551548}, {"determining": "( ( ( ( ACS - CRS ) - Min( ACS ,AMS ) ) / ( ( FirstVNF_RAM_Server + PN ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) / ( ( FirstVNF_RAM / ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( ( ( RCSe - MUC ) - ( ( MUR / RMSe ) + Min( MUC ,CS ) ) ) * ( ( ( RCSe * RCSe ) + ( MUR / MUR ) ) - Max( ( RCSe - MUC ),( MLU - RMSe ) ) ) )", "obj1": 0.9338677354709419, "obj2": 0.038630006669461446}, {"determining": "( ( ( ( FirstVNF_RAM_Server * Const ) / ( ( ARS * FirstVNF_RAM ) + FirstVNF_CPU ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,( RCSe * DS ) ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 0.6953907815631263, "obj2": 0.18991586483551548}, {"determining": "( Min( FirstVNF_CPU_Server ,RRS ) - ( ACS / FirstVNF_CPU_Server ) )", "choosing": "( Min( Max( MUM,( Max( ( CS + Min( MUR ,MUR ) ),DS ) + ( DS / ( ( RRSe - Min( MLU ,RCSe ) ) / MUC ) ) ) ) ,( MUR - MUM ) ) * Max( Min( ( RCSe * MUR ) ,MLU ),( RCSe / RMSe ) ) )", "obj1": 0.9939879759519038, "obj2": 0.004204996674631942}, {"determining": "( ( ( RRS + FirstVNF_RAM ) + ( FirstVNF_Mem / ( ACS * FirstVNF_Mem ) ) ) - ( ( ( ( FirstVNF_CPU_Server + Max( FirstVNF_Mem,FirstVNF_CPU ) ) + FirstVNF_CPU ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( MDR,AMS ) ) ) )", "choosing": "Min( ( CS - ( RCSe - RMSe ) ) ,Min( MUC ,( CS * CS ) ) )", "obj1": 0.9679358717434869, "obj2": 0.014963375657452609}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_CPU_Server + AMS ) ) - ( MDR / BR ) )", "choosing": "( CS + ( DS + CS ) )", "obj1": 0.9659318637274549, "obj2": 0.016137600243753186}, {"determining": "Min( ( ( MDR * FirstVNF_Mem_Server ) / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ,( ACS + DDR ) )", "choosing": "Min( ( Min( RMSe ,DS ) * MLU ) ,( ( MUM / RRSe ) * Max( RCSe,CS ) ) )", "obj1": 0.6893787575150301, "obj2": 0.21816812926214757}, {"determining": "( ( AMS - ( ( ( CRS + AMS ) - ( ( Min( PN ,PN ) + Max( RRS,CRS ) ) / MRS ) ) - ARS ) ) / Min( PN ,MRS ) )", "choosing": "( RRSe - Min( RCSe ,RRSe ) )", "obj1": 0.6452905811623246, "obj2": 0.24960774102770383}, {"determining": "( ( Max( Min( FirstVNF_RAM_Server ,PN ),Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - Min( RRS ,FirstVNF_RAM_Server ) ) ) / ( Min( ( ( FirstVNF_RAM_Server / PN ) / PN ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( ( ( ( MLU / RRSe ) - MUC ) / ( ( MUR * MUC ) * ( MLU / CS ) ) ) - Max( Max( ( MUC * MLU ),( RCSe + MUR ) ),Min( ( MLU - ( MUC - CS ) ) ,RRSe ) ) )", "obj1": 0.7414829659318637, "obj2": 0.17005971638972098}, {"determining": "( PN + ( DDR + PN ) )", "choosing": "( ( ( ( RRSe / MUR ) * MLU ) + ( RRSe * MLU ) ) - Min( RCSe ,RRSe ) )", "obj1": 0.6653306613226453, "obj2": 0.23471785768460768}, {"determining": "( ( ACS / RRS ) + Min( PN ,Max( RRS,ARS ) ) )", "choosing": "( ( MUR / CS ) - ( ( RCSe / Max( CS,CS ) ) / Max( RMSe,DS ) ) )", "obj1": 0.6372745490981964, "obj2": 0.2587792836392556}, {"determining": "( Min( ( Min( FirstVNF_RAM ,Const ) / Min( DDR ,FirstVNF_Mem_Server ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + AMS ),( ARS / Const ) ) ) )", "choosing": "( ( Max( ( DS / MUM ),RMSe ) - ( ( MUR - MLU ) - ( MUR / MUM ) ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) )", "obj1": 0.7695390781563126, "obj2": 0.11645809259230307}, {"determining": "( ( Min( ACS ,Min( FirstVNF_CPU_Server ,MDR ) ) / MRS ) - Max( FirstVNF_RAM,FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( CS * MLU ) * Min( ( RRSe / CS ) ,Max( RMSe,MUR ) ) ) - ( MLU * MUC ) ),Min( ( RCSe / RMSe ) ,( ( ( RMSe + DS ) - DS ) / MUR ) ) )", "obj1": 0.6432865731462926, "obj2": 0.25386422957673466}, {"determining": "( ( Min( ACS ,Min( FirstVNF_CPU_Server ,MDR ) ) / MRS ) - Max( FirstVNF_RAM,FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( CS * MLU ) * Min( ( RRSe / CS ) ,Max( RMSe,MUR ) ) ) - ( MLU * MUC ) ),Min( ( RCSe / RMSe ) ,( ( ( RMSe + DS ) - DS ) / MUR ) ) )", "obj1": 0.6432865731462926, "obj2": 0.25386422957673466}, {"determining": "( ( Min( ACS ,Min( FirstVNF_CPU_Server ,MDR ) ) / MRS ) - Max( FirstVNF_RAM,FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( CS * MLU ) * Min( ( RRSe / CS ) ,Max( RMSe,MUR ) ) ) - ( MLU * MUC ) ),Min( ( RCSe / RMSe ) ,( ( ( RMSe + DS ) - DS ) / MUR ) ) )", "obj1": 0.6432865731462926, "obj2": 0.25386422957673466}, {"determining": "( ( Min( ACS ,Min( FirstVNF_CPU_Server ,MDR ) ) / MRS ) - Max( FirstVNF_RAM,FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( CS * MLU ) * Min( ( RRSe / CS ) ,Max( RMSe,MUR ) ) ) - ( MLU * MUC ) ),Min( ( RCSe / RMSe ) ,( ( ( RMSe + DS ) - DS ) / MUR ) ) )", "obj1": 0.6432865731462926, "obj2": 0.25386422957673466}, {"determining": "( ( ( ( FirstVNF_RAM_Server * Const ) / ( ( ARS * ( FirstVNF_RAM_Server * Const ) ) + FirstVNF_CPU ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,( RCSe * Max( MUR,RRSe ) ) ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 0.6953907815631263, "obj2": 0.18991586483551548}, {"determining": "( ( ( ARS + ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( FirstVNF_RAM / MRS ) ) ) / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Min( ( CS * MUM ) ,( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,( RCSe * DS ) ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM * MLU ) + ( MUM + ( ( RRSe * MUC ) * ( ( RRSe / ( RMSe - RMSe ) ) / RMSe ) ) ) ) ) )", "obj1": 0.7014028056112225, "obj2": 0.18565405345545016}, {"determining": "( Min( ( Min( FirstVNF_RAM ,Const ) / Min( DDR ,FirstVNF_Mem_Server ) ) ,( ( ARS * Const ) * ( RRS / FirstVNF_CPU ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( ( MDR * DDR ) / ( BR - ( RRS / DDR ) ) ),( ARS / Const ) ) ) )", "choosing": "( ( MUM / MUC ) * ( ( CS / RMSe ) / DS ) )", "obj1": 0.8677354709418837, "obj2": 0.05145671780086182}, {"determining": "( Min( ( Min( FirstVNF_RAM ,Const ) / Min( DDR ,FirstVNF_Mem_Server ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + AMS ),( ARS / Const ) ) ) )", "choosing": "( Max( ( RCSe * DS ),( RMSe - MUM ) ) / ( ( ( Max( MLU,( MUM * ( RMSe - MUR ) ) ) - RRSe ) * MLU ) - Min( MUM ,RRSe ) ) )", "obj1": 0.7975951903807615, "obj2": 0.09128340581865658}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,ARS ) ,( Const / CRS ) ) + ( Max( ACS,Const ) - ( ACS + ACS ) ) )", "choosing": "( ( RMSe * CS ) / Max( RRSe,RCSe ) )", "obj1": 0.9478957915831663, "obj2": 0.035033267784121434}, {"determining": "( ( ( ( PN / MRS ) - ( MRS / ( ( Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ,( PN + FirstVNF_CPU_Server ) ) - ( Min( FirstVNF_Mem_Server ,ACS ) * ( ARS - FirstVNF_Mem ) ) ) * FirstVNF_Mem_Server ) ) ) / ( ( MRS - ARS ) + Max( Const,FirstVNF_Mem_Server ) ) ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "Min( ( CS + RCSe ) ,( ( MLU + MLU ) - Min( RMSe ,RRSe ) ) )", "obj1": 0.9278557114228457, "obj2": 0.047343495054066397}, {"determining": "Min( ( ( Min( FirstVNF_CPU ,Min( Min( AMS ,( ( FirstVNF_RAM_Server * Const ) + ACS ) ) ,FirstVNF_Mem_Server ) ) + ( ACS - FirstVNF_CPU_Server ) ) - ARS ) ,Max( FirstVNF_CPU_Server,( FirstVNF_RAM - BR ) ) )", "choosing": "( ( Min( MUR ,RRSe ) - Max( MUR,( DS * CS ) ) ) * ( RRSe * DS ) )", "obj1": 0.9859719438877755, "obj2": 0.012535299808036525}, {"determining": "( ( AMS - ( FirstVNF_Mem - ARS ) ) / ( Min( Min( Max( PN,FirstVNF_CPU ) ,ARS ) ,( Const / CRS ) ) + ( Max( ACS,Const ) - ( ACS + ACS ) ) ) )", "choosing": "( Max( ( ( MUM - MUR ) / Max( RMSe,RMSe ) ),( ( MLU / CS ) + ( MUC * MLU ) ) ) - Min( RCSe ,RRSe ) )", "obj1": 0.9639278557114228, "obj2": 0.018598629348415736}, {"determining": "( ( AMS - ( FirstVNF_Mem - ARS ) ) / Min( PN ,MRS ) )", "choosing": "Max( ( ( MUM - MUR ) / Max( RMSe,RMSe ) ),( ( MLU / CS ) + ( MUC * MLU ) ) )", "obj1": 0.6773547094188377, "obj2": 0.2183667537322939}, {"determining": "( Min( ( Min( FirstVNF_RAM ,Const ) / Min( DDR ,FirstVNF_Mem_Server ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + ( FirstVNF_RAM / ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ),( ARS / Const ) ) ) )", "choosing": "( ( Max( ( DS / MUM ),RMSe ) - ( ( MUR - MLU ) - ( MUR / MUM ) ) ) + MUM )", "obj1": 0.8657314629258517, "obj2": 0.05794880038702521}, {"determining": "( Min( ( Min( FirstVNF_RAM ,Const ) / Min( DDR ,FirstVNF_Mem_Server ) ) ,( ( Max( RRS,FirstVNF_RAM_Server ) / ACS ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( FirstVNF_CPU + AMS ),( ARS / Const ) ) ) )", "choosing": "( ( ( RRSe - ( RRSe + RCSe ) ) / ( ( DS / ( Min( RCSe ,( DS * ( MUM * RCSe ) ) ) + RMSe ) ) / RMSe ) ) + ( Max( ( DS / MUM ),RMSe ) - ( ( MUR - MLU ) - ( MUR / MUC ) ) ) )", "obj1": 0.7575150300601202, "obj2": 0.13506723036189897}], "4": [{"determining": "( ( CRS + AMS ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( ( MLU * RMSe ) + ( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,Max( RRS,( FirstVNF_CPU / ARS ) ) ) + BR ) - ( MDR / BR ) )", "choosing": "( ( ( ( ( MUM - Max( DS,Min( RCSe ,MLU ) ) ) / MUM ) - RMSe ) - MUC ) + Min( MUM ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) / ( FirstVNF_RAM / ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe / MUM ) / ( RCSe * DS ) ) / Min( RCSe ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR - BR ) ,( ( ( Const * Max( Max( PN,( ( FirstVNF_CPU - RRS ) + PN ) ),FirstVNF_Mem ) ) + FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( Max( Min( RCSe ,MUC ),( RRSe / MUM ) ),Max( ( DS + DS ),( RRSe - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( FirstVNF_CPU_Server,AMS ) ) - ( ( ( DDR * FirstVNF_CPU ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - ( MDR - AMS ) ) ) )", "choosing": "Min( ( MUM + ( DS / DS ) ) ,( CS - ( RCSe - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( FirstVNF_RAM_Server ,PN ),Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - Min( RRS ,FirstVNF_RAM_Server ) ) ) / ( Min( ( ( FirstVNF_RAM_Server / PN ) / PN ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),( CRS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MLU / RRSe ) - MUC ) / ( ( Min( MUR ,MLU ) * ( Min( MUM ,Max( CS,( MLU / CS ) ) ) / ( ( DS - ( MUR + CS ) ) / CS ) ) ) + RRSe ) ) - Max( Max( ( MUC * MLU ),( RCSe + MUR ) ),Min( ( MLU - ( MUC - CS ) ) ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,( BR + FirstVNF_CPU ) ) - CRS ) - ( ( FirstVNF_CPU_Server + Max( FirstVNF_Mem,FirstVNF_CPU ) ) + FirstVNF_CPU ) )", "choosing": "( Min( ( MUC - MUM ) ,( MLU * ( RMSe / ( MUM / RCSe ) ) ) ) * ( MUM - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( CRS - ARS ) ,( ( CRS + RRS ) + Max( AMS,FirstVNF_RAM ) ) ) ,( RRS + AMS ) )", "choosing": "Max( ( Min( ( RCSe * MUM ) ,( ( Max( MUM,Max( MUC,RCSe ) ) + Max( ( DS * MUM ),MUC ) ) - MUC ) ) + MUR ),( ( ( MUR + MLU ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_RAM ,Const ) / Min( FirstVNF_CPU ,( PN / ( ( ( Const / RRS ) + DDR ) - FirstVNF_CPU ) ) ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + AMS ),( ARS / Const ) ) ) )", "choosing": "( ( Max( RMSe,( DS / MUM ) ) - ( ( MUR - MLU ) - ( Max( RMSe,DS ) / MUM ) ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) )", "obj1": 0.7575150300601202, "obj2": 0.13506723036189897}, {"determining": "Min( ( Max( ARS,CRS ) - ARS ) ,Max( FirstVNF_Mem_Server,FirstVNF_RAM ) )", "choosing": "Max( ( ( ( CS * MLU ) * Min( ( RRSe / CS ) ,Max( RMSe,MUR ) ) ) - ( MLU * MUC ) ),Min( ( RCSe / RMSe ) ,( ( ( RMSe + DS ) - DS ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) + Max( PN,FirstVNF_CPU ) ) ,Min( ( CRS - ARS ) ,( ( CRS / RRS ) / ( Max( ( MRS * ( Const / FirstVNF_CPU ) ),ARS ) - AMS ) ) ) )", "choosing": "Max( ( ( MLU + MUM ) * MUM ),( ( DS + RMSe ) - ( MUC * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( RRS,FirstVNF_Mem_Server ) ,Min( ( CRS - ARS ) ,( ( CRS / RRS ) + Max( MDR,MRS ) ) ) )", "choosing": "( ( RMSe + DS ) - ( MUC * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - CRS ) - Min( ACS ,AMS ) ) / ( ( FirstVNF_RAM_Server + PN ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( Const - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( ( ( RRSe * RMSe ) - ( MUC * RRSe ) ) * ( MUR / ( Max( RMSe,MUC ) + RMSe ) ) )", "obj1": 0.657314629258517, "obj2": 0.2431770549741266}, {"determining": "( Min( ( ACS - AMS ) ,CRS ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( Min( ( RCSe * MUR ) ,MLU ),( MUR / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,MDR ) ,CRS ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( RCSe ,MUR ) - Min( DS ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( FirstVNF_CPU / CRS ) )", "choosing": "Min( ( ( RCSe * DS ) + Min( RRSe ,DS ) ) ,Min( Min( ( MUR * CS ) ,Max( MLU,CS ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( MDR,BR ) ) ) )", "choosing": "( ( RCSe * DS ) + Min( RRSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU * ARS ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) * Max( Min( DDR ,AMS ),( PN / AMS ) ) ) / Min( Min( Max( FirstVNF_Mem,CRS ) ,Max( FirstVNF_Mem_Server,ARS ) ) ,( PN - ( DDR + PN ) ) ) )", "choosing": "( ( ( ( CS + RMSe ) - ( DS * DS ) ) / ( Max( RRSe,DS ) - ( MUR * RCSe ) ) ) / Min( ( ( MUM / MUM ) + Min( MUR ,MUC ) ) ,( ( ( ( RCSe * MLU ) - Min( MUM ,RRSe ) ) * MUR ) + ( CS + MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / FirstVNF_CPU_Server ) - ( AMS / BR ) ) / ( ( FirstVNF_Mem_Server * ( BR * FirstVNF_RAM_Server ) ) / ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( MUM ,RCSe ) / CS ) / Min( RCSe ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) / ( FirstVNF_RAM / ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RMSe - MUC ) + Max( RRSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ,( PN + FirstVNF_CPU_Server ) ) - ( Min( FirstVNF_Mem_Server ,ACS ) * ( ARS - FirstVNF_Mem ) ) ) * FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe + CS ) + Max( ( ( ( MLU + MLU ) - Min( RMSe ,RRSe ) ) - ( Min( RRSe ,CS ) / Min( DS ,RCSe ) ) ),DS ) ) / Max( ( RMSe + CS ),( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * Const ) / ( ( ARS * PN ) + FirstVNF_CPU ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,( RCSe * DS ) ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 0.7014028056112225, "obj2": 0.18565405345545016}, {"determining": "( CRS + ( FirstVNF_RAM * ( FirstVNF_RAM - ( DDR + DDR ) ) ) )", "choosing": "( ( ( RMSe + RRSe ) * ( RRSe / DS ) ) - ( MUR - MUC ) )", "obj1": 0.9539078156312625, "obj2": 0.023650089143923362}, {"determining": "Min( ( Max( FirstVNF_CPU,BR ) / ( FirstVNF_Mem - ( DDR + FirstVNF_Mem_Server ) ) ) ,( Max( FirstVNF_CPU,ARS ) + ( CRS / PN ) ) )", "choosing": "( Min( ( MUM * MLU ) ,MUC ) * ( ( MUR + MUC ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_CPU_Server ) / ( ( ( Const - Max( BR,( Max( ( FirstVNF_CPU_Server - BR ),FirstVNF_CPU ) * CRS ) ) ) / ( FirstVNF_CPU * CRS ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) )", "choosing": "( ( CS + ( ( MUC * ( Min( CS ,MUC ) - RRSe ) ) * Min( ( RCSe / ( MUR - ( RCSe / Max( MUC,CS ) ) ) ) ,Min( CS ,RMSe ) ) ) ) * ( Max( ( ( CS * MUR ) * CS ),Max( Min( RRSe ,Min( MUR ,RMSe ) ),( DS / CS ) ) ) * ( ( MUM + MUR ) + ( CS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_CPU_Server ) / ( ( ( Const - Max( BR,( Max( ( FirstVNF_CPU_Server - BR ),FirstVNF_CPU ) * CRS ) ) ) / ( FirstVNF_CPU * CRS ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) )", "choosing": "( ( CS + ( ( MUC * ( Min( CS ,MUC ) - RRSe ) ) * Min( ( RCSe / ( MUR - ( RCSe / Max( MUC,CS ) ) ) ) ,Min( CS ,RMSe ) ) ) ) * ( Max( ( ( CS * MUR ) * CS ),Max( Min( RRSe ,Min( MUR ,RMSe ) ),( DS / CS ) ) ) * ( ( MUM + MUR ) + ( CS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_CPU_Server ) / ( ( ( Const - Max( BR,( Max( ( FirstVNF_CPU_Server - BR ),FirstVNF_CPU ) * CRS ) ) ) / ( FirstVNF_CPU * CRS ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) )", "choosing": "( ( CS + ( ( MUC * ( Min( CS ,MUC ) - RRSe ) ) * Min( ( RCSe / ( MUR - ( RCSe / Max( MUC,CS ) ) ) ) ,Min( CS ,RMSe ) ) ) ) * ( Max( ( ( CS * MUR ) * CS ),Max( Min( RRSe ,Min( MUR ,RMSe ) ),( DS / CS ) ) ) * ( ( MUM + MUR ) + ( CS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * Const ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( ( ( MDR + ACS ) * ( MDR / ARS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),( CRS - ( AMS / MDR ) ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) * ( Max( ( DS * CS ),Max( Min( RRSe ,Min( MUR ,RMSe ) ),( DS / CS ) ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( Max( RRS,DDR ) / Max( FirstVNF_RAM_Server,CRS ) ) ,( ( PN * FirstVNF_RAM_Server ) / Max( ACS,Const ) ) ),( ( Min( PN ,PN ) + Max( RRS,CRS ) ) / ( ( PN + MRS ) * ( CRS * AMS ) ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( Max( Min( RCSe ,( ( ( MUR / RMSe ) + Min( MUC ,CS ) ) / CS ) ),MUC ) * ( MUR / ( Max( RMSe,MUC ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM * CRS ) + ( MRS - Max( ( Max( FirstVNF_RAM,Min( FirstVNF_CPU ,MRS ) ) + AMS ),( ( ( FirstVNF_Mem_Server / BR ) * RRS ) * AMS ) ) ) ) ,( ( ACS * FirstVNF_CPU ) * Min( AMS ,CRS ) ) )", "choosing": "Max( Min( ( Max( ( RRSe - MUC ),Max( ( MLU / MUM ),RRSe ) ) * Min( MLU ,MUC ) ) ,Max( Min( DS ,Min( Max( MUC,MUC ) ,( RMSe / Min( ( CS + DS ) ,MLU ) ) ) ),MLU ) ),( RMSe * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem,ARS ) - ( ACS / FirstVNF_CPU ) ) + ( BR - FirstVNF_RAM_Server ) )", "choosing": "( Max( Min( ( ( ( RRSe / RMSe ) - MUM ) * MUR ) ,MLU ),( RCSe / RMSe ) ) / Max( DS,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( BR - FirstVNF_RAM_Server ),MDR ) ,CRS ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( Min( ( RCSe * MUR ) ,MLU ),( ( ( RMSe * CS ) / Max( RRSe,RCSe ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,MDR ) ,CRS ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( Min( ( RCSe * MUR ) ,MLU ),( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + AMS ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( ( MLU * RMSe ) + ( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ARS ) ,( ( DDR / FirstVNF_CPU ) - AMS ) )", "choosing": "Max( ( ( MUR * ( MUR * CS ) ) * ( MLU * ( RCSe - ( ( DS * MLU ) + ( MUM * Max( ( RMSe + MUC ),RCSe ) ) ) ) ) ),Min( ( CS / MUR ) ,( MUM + ( RRSe * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,MDR ) ,CRS ) - ( ACS / FirstVNF_CPU ) )", "choosing": "Max( ( DS - ( MLU * MUC ) ),Min( ( RCSe / MUR ) ,( MUM + ( RRSe * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ARS ) ,Max( FirstVNF_Mem_Server,FirstVNF_RAM ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( Min( ( RCSe * MUR ) ,MLU ),( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,( BR + FirstVNF_CPU ) ) - CRS ) - ( ( FirstVNF_CPU_Server + Max( FirstVNF_Mem,FirstVNF_CPU ) ) + FirstVNF_CPU ) )", "choosing": "( Min( ( MUC - MUM ) ,( MLU * ( RMSe / ( MUM / RCSe ) ) ) ) * ( MUM - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,( BR + FirstVNF_CPU ) ) - CRS ) - ( ( FirstVNF_CPU_Server + Max( FirstVNF_Mem,FirstVNF_CPU ) ) + FirstVNF_CPU ) )", "choosing": "( Min( ( MUC - MUM ) ,( MLU * ( RMSe / ( MUM / RCSe ) ) ) ) * ( MUM - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ACS ,Min( FirstVNF_CPU_Server ,MDR ) ) / MRS ) - Max( FirstVNF_RAM,FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( CS * MLU ) * Min( ( RRSe / CS ) ,Max( RMSe,MUR ) ) ) - ( MLU * MUC ) ),Min( ( RCSe / RMSe ) ,( ( ( RMSe + DS ) - DS ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,( BR + FirstVNF_CPU ) ) - CRS ) - ( ( FirstVNF_CPU_Server + Max( FirstVNF_Mem,FirstVNF_CPU ) ) + FirstVNF_CPU ) )", "choosing": "( Min( ( MUC - MUM ) ,( MLU * ( RMSe / ( MUM / RCSe ) ) ) ) * ( MUM - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( AMS / FirstVNF_CPU_Server ) ,MDR ) ,Const ) - ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) + FirstVNF_CPU ) )", "choosing": "( ( MUM / MUC ) * Min( MUC ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( Min( Min( AMS ,Min( FirstVNF_Mem_Server ,MRS ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) + ( ACS - FirstVNF_CPU_Server ) ) - MDR ) ,Max( FirstVNF_CPU_Server,( FirstVNF_RAM - BR ) ) )", "choosing": "( ( ( ( MLU * ( MUC * ( ( MLU / MUM ) / ( Min( CS ,MUM ) / ( MLU - MLU ) ) ) ) ) * Min( ( MUR - ( RMSe - ( Max( CS,MUC ) / RCSe ) ) ) ,RMSe ) ) - Max( MUR,MUC ) ) * ( RRSe * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + AMS ) - ( ( Min( PN ,PN ) + Max( RRS,CRS ) ) / MRS ) )", "choosing": "( ( MLU * RMSe ) + ( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + AMS ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( ( MLU * RMSe ) + ( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( BR / MDR ) )", "choosing": "( ( ( RMSe + RMSe ) - MLU ) + ( DS * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + AMS ) - ( MDR / BR ) )", "choosing": "( ( MLU * RMSe ) + ( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Min( FirstVNF_Mem_Server ,MDR ) ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( Min( MUR ,( Max( ( MLU * RRSe ),DS ) / CS ) ) + ( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) / ( ( Max( RRS,DDR ) / Max( FirstVNF_RAM_Server,CRS ) ) / ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RMSe / ( RCSe * DS ) ) / Min( RCSe ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ARS,CRS ) - ARS ) ,Max( FirstVNF_Mem_Server,( ( ( AMS / Const ) + ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) - Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "Max( ( DS - ( MLU * MUC ) ),Min( ( RCSe / RRSe ) ,Max( ( MLU - ( MUR - DS ) ),( DS + ( MUR - CS ) ) ) ) )", "obj1": 0.6713426853707415, "obj2": 0.23446659172112672}, {"determining": "( Max( ( Min( FirstVNF_RAM ,Const ) / Min( DDR ,( FirstVNF_Mem + FirstVNF_CPU ) ) ),( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( DDR + MDR ) ) / Max( ( Const + AMS ),( ARS / Const ) ) ) )", "choosing": "( ( MUM / MUC ) * Max( ( MUM + RCSe ),MLU ) )", "obj1": 0.7915831663326653, "obj2": 0.09505228526972143}, {"determining": "( ( ( ( FirstVNF_RAM_Server * Const ) / ( ( ARS * PN ) + FirstVNF_CPU ) ) - ( ( FirstVNF_Mem_Server + ARS ) * ( CRS / MRS ) ) ) / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) )", "choosing": "( RRSe * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 0.6953907815631263, "obj2": 0.18991586483551548}, {"determining": "( ( ( ( FirstVNF_RAM_Server * Const ) / ( ( ARS * FirstVNF_RAM ) + FirstVNF_CPU ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,( RCSe * DS ) ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 0.6953907815631263, "obj2": 0.18991586483551548}, {"determining": "( ( ( RRS + FirstVNF_RAM ) + ( FirstVNF_Mem / ( ACS * FirstVNF_Mem ) ) ) - ( ( ( ( FirstVNF_CPU_Server + Max( FirstVNF_Mem,FirstVNF_CPU ) ) + FirstVNF_CPU ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( MDR,AMS ) ) ) )", "choosing": "Min( ( CS - ( RCSe - RMSe ) ) ,Min( MUC ,( CS * CS ) ) )", "obj1": 0.9679358717434869, "obj2": 0.014963375657452609}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_CPU_Server + AMS ) ) - ( MDR / BR ) )", "choosing": "( CS + ( DS + CS ) )", "obj1": 0.9659318637274549, "obj2": 0.016137600243753186}, {"determining": "( PN + ( DDR + PN ) )", "choosing": "( ( ( ( RRSe / MUR ) * MLU ) + ( RRSe * MLU ) ) - Min( RCSe ,RRSe ) )", "obj1": 0.6653306613226453, "obj2": 0.23471785768460768}, {"determining": "( Min( ( Min( FirstVNF_RAM ,Const ) / Min( DDR ,FirstVNF_Mem_Server ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + AMS ),( ARS / Const ) ) ) )", "choosing": "( ( Max( ( DS / MUM ),RMSe ) - ( ( MUR - MLU ) - ( MUR / MUM ) ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) )", "obj1": 0.7695390781563126, "obj2": 0.11645809259230307}, {"determining": "( ( ( ( FirstVNF_RAM_Server * Const ) / ( ( ARS * ( FirstVNF_RAM_Server * Const ) ) + FirstVNF_CPU ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,( RCSe * Max( MUR,RRSe ) ) ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 0.6953907815631263, "obj2": 0.18991586483551548}, {"determining": "( ( ( ARS + ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( FirstVNF_RAM / MRS ) ) ) / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Min( ( CS * MUM ) ,( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,( RCSe * DS ) ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM * MLU ) + ( MUM + ( ( RRSe * MUC ) * ( ( RRSe / ( RMSe - RMSe ) ) / RMSe ) ) ) ) ) )", "obj1": 0.7014028056112225, "obj2": 0.18565405345545016}, {"determining": "( Min( ( Min( FirstVNF_RAM ,Const ) / Min( DDR ,FirstVNF_Mem_Server ) ) ,( ( ARS * Const ) * ( RRS / FirstVNF_CPU ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( ( MDR * DDR ) / ( BR - ( RRS / DDR ) ) ),( ARS / Const ) ) ) )", "choosing": "( ( MUM / MUC ) * ( ( CS / RMSe ) / DS ) )", "obj1": 0.8677354709418837, "obj2": 0.05145671780086182}, {"determining": "( Min( ( Min( FirstVNF_RAM ,Const ) / Min( DDR ,FirstVNF_Mem_Server ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + AMS ),( ARS / Const ) ) ) )", "choosing": "( Max( ( RCSe * DS ),( RMSe - MUM ) ) / ( ( ( Max( MLU,( MUM * ( RMSe - MUR ) ) ) - RRSe ) * MLU ) - Min( MUM ,RRSe ) ) )", "obj1": 0.7975951903807615, "obj2": 0.09128340581865658}, {"determining": "( ( ( ( PN / MRS ) - ( MRS / ( ( Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ,( PN + FirstVNF_CPU_Server ) ) - ( Min( FirstVNF_Mem_Server ,ACS ) * ( ARS - FirstVNF_Mem ) ) ) * FirstVNF_Mem_Server ) ) ) / ( ( MRS - ARS ) + Max( Const,FirstVNF_Mem_Server ) ) ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "Min( ( CS + RCSe ) ,( ( MLU + MLU ) - Min( RMSe ,RRSe ) ) )", "obj1": 0.9278557114228457, "obj2": 0.047343495054066397}, {"determining": "( ( AMS - ( FirstVNF_Mem - ARS ) ) / ( Min( Min( Max( PN,FirstVNF_CPU ) ,ARS ) ,( Const / CRS ) ) + ( Max( ACS,Const ) - ( ACS + ACS ) ) ) )", "choosing": "( Max( ( ( MUM - MUR ) / Max( RMSe,RMSe ) ),( ( MLU / CS ) + ( MUC * MLU ) ) ) - Min( RCSe ,RRSe ) )", "obj1": 0.9639278557114228, "obj2": 0.018598629348415736}, {"determining": "( ( AMS - ( FirstVNF_Mem - ARS ) ) / Min( PN ,MRS ) )", "choosing": "Max( ( ( MUM - MUR ) / Max( RMSe,RMSe ) ),( ( MLU / CS ) + ( MUC * MLU ) ) )", "obj1": 0.6773547094188377, "obj2": 0.2183667537322939}, {"determining": "( Min( ( Min( FirstVNF_RAM ,Const ) / Min( DDR ,FirstVNF_Mem_Server ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + ( FirstVNF_RAM / ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ),( ARS / Const ) ) ) )", "choosing": "( ( Max( ( DS / MUM ),RMSe ) - ( ( MUR - MLU ) - ( MUR / MUM ) ) ) + MUM )", "obj1": 0.8657314629258517, "obj2": 0.05794880038702521}, {"determining": "( Min( ( Min( FirstVNF_RAM ,Const ) / Min( DDR ,FirstVNF_Mem_Server ) ) ,( ( Max( RRS,FirstVNF_RAM_Server ) / ACS ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( FirstVNF_CPU + AMS ),( ARS / Const ) ) ) )", "choosing": "( ( ( RRSe - ( RRSe + RCSe ) ) / ( ( DS / ( Min( RCSe ,( DS * ( MUM * RCSe ) ) ) + RMSe ) ) / RMSe ) ) + ( Max( ( DS / MUM ),RMSe ) - ( ( MUR - MLU ) - ( MUR / MUC ) ) ) )", "obj1": 0.7575150300601202, "obj2": 0.13506723036189897}, {"determining": "( ( Max( Min( FirstVNF_RAM_Server ,PN ),Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - Min( RRS ,FirstVNF_RAM_Server ) ) ) / ( Min( ( ( FirstVNF_RAM_Server / PN ) / PN ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( ( ( ( MLU / RRSe ) - MUC ) / ( ( MUR * MUC ) * ( MLU / CS ) ) ) - Max( Max( ( MUC * MLU ),( RCSe + MUR ) ),Min( ( MLU - ( MUC - CS ) ) ,RRSe ) ) )", "obj1": 0.7374749498997996, "obj2": 0.14482533604655026}, {"determining": "( ( Min( ACS ,Min( FirstVNF_CPU_Server ,MDR ) ) / MRS ) - Max( FirstVNF_RAM,FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe + CS ) + Max( RMSe,DS ) ) / Max( ( RMSe + CS ),( CS * MUC ) ) )", "obj1": 0.627254509018036, "obj2": 0.2562831427164116}, {"determining": "( ( ( RRS + FirstVNF_RAM ) + ( FirstVNF_Mem / ( ACS * FirstVNF_Mem ) ) ) - ( ( ( ( FirstVNF_CPU_Server + Max( FirstVNF_Mem,FirstVNF_CPU ) ) + FirstVNF_CPU ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( MDR,AMS ) ) ) )", "choosing": "Max( ( ( ( CS * MLU ) * Min( ( RRSe / CS ) ,Max( RMSe,MUR ) ) ) - ( MLU * MUC ) ),Min( ( RCSe / RMSe ) ,( ( ( RMSe + DS ) - DS ) / MUR ) ) )", "obj1": 0.9318637274549099, "obj2": 0.03408688675717739}, {"determining": "( ( ( RRS + FirstVNF_RAM ) + ( FirstVNF_Mem / ( ACS * FirstVNF_Mem ) ) ) - ( ( ( ( FirstVNF_CPU_Server + Max( FirstVNF_Mem,FirstVNF_CPU ) ) + FirstVNF_CPU ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( MDR,AMS ) ) ) )", "choosing": "( ( ( ( ( MUM - Max( DS,Min( RCSe ,MLU ) ) ) + MUM ) - RMSe ) - MUC ) + ( DS + MLU ) )", "obj1": 0.9819639278557114, "obj2": 0.005772289288721915}, {"determining": "( ( ( ( FirstVNF_RAM_Server * Const ) / ( ( ARS * FirstVNF_RAM ) + FirstVNF_CPU ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) )", "choosing": "( ( RCSe * DS ) + Min( RRSe ,DS ) )", "obj1": 0.7094188376753507, "obj2": 0.18387900363498166}, {"determining": "( ( ( ( FirstVNF_RAM_Server * Const ) / ( ( ( ( ACS * FirstVNF_CPU ) * Min( AMS ,CRS ) ) * PN ) + FirstVNF_CPU ) ) - ( ( FirstVNF_Mem_Server + ARS ) * ( CRS / MRS ) ) ) / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) )", "choosing": "( RRSe * ( Min( ( CS + DS ) ,MLU ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 0.717434869739479, "obj2": 0.16903883205074458}, {"determining": "( ( ( ( FirstVNF_RAM_Server * Const ) / ( ( ARS * PN ) + FirstVNF_CPU ) ) - ( ( FirstVNF_Mem_Server + ARS ) * ( CRS / MRS ) ) ) / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) )", "choosing": "( RRSe * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 0.6953907815631263, "obj2": 0.18991586483551548}, {"determining": "( ( ( ( FirstVNF_RAM_Server * Const ) / ( ( ARS * PN ) + FirstVNF_CPU ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( ( CRS * ( MDR - ARS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,( RCSe * DS ) ) ) ) * ( Max( ( MLU * CS ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 0.7014028056112225, "obj2": 0.18565405345545016}, {"determining": "( ARS - ( ACS / FirstVNF_Mem ) )", "choosing": "( Min( MLU ,( RCSe + CS ) ) * Max( Min( ( MUM + ( RRSe * DS ) ) ,MLU ),( RCSe / RMSe ) ) )", "obj1": 0.9298597194388778, "obj2": 0.04174443932107258}, {"determining": "( ( Max( PN,FirstVNF_Mem ) * ( ARS - ( ACS / FirstVNF_CPU ) ) ) * ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe + CS ) + Max( RMSe,DS ) ) / Max( ( RMSe + CS ),( Min( MLU ,( MUR - MUM ) ) * MUC ) ) )", "obj1": 0.6833667334669339, "obj2": 0.21455928803757218}, {"determining": "( ARS - ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( Min( ( MUM + ( RRSe * DS ) ) ,MLU ),( RCSe / RMSe ) ) )", "obj1": 0.9899799599198397, "obj2": 0.005769795128708283}, {"determining": "( ( Min( ACS ,Min( FirstVNF_CPU_Server ,Max( ( Min( FirstVNF_RAM ,Const ) / Min( DDR ,( FirstVNF_Mem + FirstVNF_CPU ) ) ),( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) ) ) / MRS ) - Max( FirstVNF_RAM,FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( CS * MLU ) * Min( ( RRSe / CS ) ,Max( RMSe,MUR ) ) ) - ( ( MUM / MUC ) * Max( ( MUM + RCSe ),MLU ) ) ),Min( ( RCSe / RMSe ) ,( ( ( RMSe + DS ) - DS ) / MUR ) ) )", "obj1": 0.625250501002004, "obj2": 0.26782179498769826}, {"determining": "( Min( ( Min( FirstVNF_RAM ,Const ) / Min( DDR ,FirstVNF_Mem_Server ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + AMS ),( ARS / Const ) ) ) )", "choosing": "( Max( ( RCSe * DS ),( RMSe - MUM ) ) / ( ( ( Max( MLU,( MUM * ( RMSe - MUR ) ) ) - RRSe ) * MLU ) - Min( MUM ,RRSe ) ) )", "obj1": 0.7775551102204409, "obj2": 0.11041655070330503}, {"determining": "Min( ( ( MDR * FirstVNF_Mem_Server ) / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ,( ACS + DDR ) )", "choosing": "( ( Min( MUM ,RCSe ) / CS ) / Min( RCSe ,CS ) )", "obj1": 0.6412825651302605, "obj2": 0.2457535321309592}, {"determining": "( ( ARS + AMS ) - ( MDR / BR ) )", "choosing": "( ( ( RCSe + MUR ) + ( MUM - DS ) ) - Max( ( CS * MLU ),( RCSe + ( RCSe / RMSe ) ) ) )", "obj1": 0.9919839679358717, "obj2": 0.003177793683517658}, {"determining": "( ( Min( Max( Min( ( Max( RRS,DDR ) / Max( FirstVNF_RAM_Server,CRS ) ) ,( ( PN * FirstVNF_RAM_Server ) / Max( ACS,Const ) ) ),( ( Min( PN ,PN ) + Max( RRS,CRS ) ) / ( ( PN + MRS ) * ( CRS * AMS ) ) ) ) ,Min( FirstVNF_CPU_Server ,MDR ) ) / MRS ) - Max( FirstVNF_RAM,FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( CS * MLU ) * Min( ( RRSe / CS ) ,Max( RMSe,MUR ) ) ) - ( MLU * MUC ) ),Max( RMSe,MUC ) )", "obj1": 0.6192384769539078, "obj2": 0.270986161927914}, {"determining": "( Min( Max( BR,MDR ) ,( ( FirstVNF_CPU - RRS ) + PN ) ) - FirstVNF_Mem_Server )", "choosing": "( Min( ( Max( MLU,( Min( MLU ,MUR ) * ( RMSe - MUR ) ) ) - RRSe ) ,( MUC - MUM ) ) * Max( Max( Min( RCSe ,MUC ),( RRSe / MUM ) ),Max( ( DS + DS ),( RRSe - DS ) ) ) )", "obj1": 0.9979959919839679, "obj2": 0.002207271615467333}, {"determining": "( ( ( ( FirstVNF_RAM_Server * Const ) / ( ( ARS * ( FirstVNF_RAM_Server * Const ) ) + FirstVNF_CPU ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,( RCSe * Max( MUR,RRSe ) ) ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 0.6953907815631263, "obj2": 0.18991586483551548}, {"determining": "( ( ( ARS + ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( FirstVNF_RAM / MRS ) ) ) / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Min( ( CS * MUM ) ,( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,( RCSe * DS ) ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM * MLU ) + ( MUM + ( ( RRSe * MUC ) * ( ( RRSe / ( RMSe - RMSe ) ) / RMSe ) ) ) ) ) )", "obj1": 0.6933867735470942, "obj2": 0.19975714928567212}, {"determining": "( ( ( ARS + ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( FirstVNF_RAM / MRS ) ) ) / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Min( ( CS * MUM ) ,( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,( RCSe * DS ) ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM * MLU ) + ( MUM + ( ( RRSe * MUC ) * ( ( RRSe / ( RMSe - RMSe ) ) / RMSe ) ) ) ) ) )", "obj1": 0.6933867735470942, "obj2": 0.19975714928567212}, {"determining": "( ( ( ARS + ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( FirstVNF_RAM / MRS ) ) ) / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Min( ( CS * MUM ) ,( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,( RCSe * DS ) ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM * MLU ) + ( MUM + ( ( RRSe * MUC ) * ( ( RRSe / ( RMSe - RMSe ) ) / RMSe ) ) ) ) ) )", "obj1": 0.6933867735470942, "obj2": 0.19975714928567212}, {"determining": "( ( ( ARS + ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( FirstVNF_RAM / MRS ) ) ) / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Min( ( CS * MUM ) ,( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,( RCSe * DS ) ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM * MLU ) + ( MUM + ( ( RRSe * MUC ) * ( ( RRSe / ( RMSe - RMSe ) ) / RMSe ) ) ) ) ) )", "obj1": 0.6933867735470942, "obj2": 0.19975714928567212}, {"determining": "Min( ( DDR - BR ) ,( ( ( Const * Max( Max( PN,( ( FirstVNF_CPU - RRS ) + PN ) ),FirstVNF_Mem ) ) + FirstVNF_RAM_Server ) + MRS ) )", "choosing": "( Min( RCSe ,MUR ) - Min( DS ,MLU ) )", "obj1": 0.6152304609218436, "obj2": 0.2818230759246878}, {"determining": "( ( ACS / RRS ) + Min( PN ,Max( RRS,( MDR / BR ) ) ) )", "choosing": "( ( MUR / CS ) - ( ( RCSe / MLU ) / Max( RMSe,DS ) ) )", "obj1": 0.6452905811623246, "obj2": 0.24401820791300272}, {"determining": "( ( Min( ACS ,Min( FirstVNF_CPU_Server ,MDR ) ) / MRS ) - Max( FirstVNF_RAM,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUC * MUM ) * Min( CS ,RMSe ) ) - ( ( MUR / RMSe ) + Min( MUC ,CS ) ) ) * ( ( ( RCSe * RCSe ) + ( MUR / MUR ) ) - Max( ( RCSe - MUC ),( MLU - RMSe ) ) ) )", "obj1": 0.6312625250501002, "obj2": 0.25003848116449584}, {"determining": "( Min( ( Min( FirstVNF_RAM ,Const ) / ( ARS - ( ACS / FirstVNF_CPU ) ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + AMS ),( ARS / Const ) ) ) )", "choosing": "( Max( Min( ( RCSe * MUR ) ,MLU ),( RCSe / RMSe ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) )", "obj1": 0.9779559118236473, "obj2": 0.013670626277566234}, {"determining": "( Min( ( Min( FirstVNF_RAM ,Const ) / Min( DDR ,FirstVNF_Mem_Server ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + AMS ),( ARS / Const ) ) ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( Min( ( RCSe * MUR ) ,MLU ),( RCSe / RMSe ) ) )", "obj1": 0.8136272545090181, "obj2": 0.08687240698977236}, {"determining": "( Min( ( Min( FirstVNF_RAM ,Const ) / Min( DDR ,FirstVNF_Mem_Server ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + AMS ),( ARS / Const ) ) ) )", "choosing": "( ( Max( ( DS / MUM ),RMSe ) - ( ( MUR - MLU ) - ( MUR / MUM ) ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) )", "obj1": 0.7575150300601202, "obj2": 0.13506723036189897}, {"determining": "( Min( ( Min( FirstVNF_RAM ,Const ) / Min( FirstVNF_CPU ,( PN / ( ( ( Const / RRS ) + DDR ) - FirstVNF_CPU ) ) ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + AMS ),( ARS / Const ) ) ) )", "choosing": "( ( Max( RMSe,( DS / MUM ) ) - ( ( MUR - MLU ) - ( Max( RMSe,DS ) / MUM ) ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) )", "obj1": 0.7434869739478958, "obj2": 0.14172362896413185}, {"determining": "( Min( ( Min( FirstVNF_RAM ,Const ) / Min( FirstVNF_CPU ,( PN / ( ( ( Const / RRS ) + DDR ) - FirstVNF_CPU ) ) ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + AMS ),( ARS / Const ) ) ) )", "choosing": "( ( Max( RMSe,( DS / MUM ) ) - ( ( MUR - MLU ) - ( Max( RMSe,DS ) / MUM ) ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) )", "obj1": 0.7434869739478958, "obj2": 0.14172362896413185}, {"determining": "( Min( ( Min( FirstVNF_RAM ,Const ) / Min( FirstVNF_CPU ,( PN / ( ( ( Const / RRS ) + DDR ) - FirstVNF_CPU ) ) ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + AMS ),( ARS / Const ) ) ) )", "choosing": "( ( Max( RMSe,( DS / MUM ) ) - ( ( MUR - MLU ) - ( Max( RMSe,DS ) / MUM ) ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) )", "obj1": 0.7434869739478958, "obj2": 0.14172362896413185}, {"determining": "( Min( ( Min( FirstVNF_RAM ,Const ) / Min( FirstVNF_CPU ,( PN / ( ( ( Const / RRS ) + DDR ) - FirstVNF_CPU ) ) ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + AMS ),( ARS / Const ) ) ) )", "choosing": "( ( Max( RMSe,( DS / MUM ) ) - ( ( MUR - MLU ) - ( Max( RMSe,DS ) / MUM ) ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) )", "obj1": 0.7434869739478958, "obj2": 0.14172362896413185}, {"determining": "( ( ( ( ACS - CRS ) - Min( ACS ,AMS ) ) / ( ( FirstVNF_RAM_Server + PN ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( Const - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( ( ( RRSe * RMSe ) - ( MUC * RRSe ) ) * ( MUR / ( Max( RMSe,MUC ) + RMSe ) ) )", "obj1": 0.657314629258517, "obj2": 0.2431770549741266}, {"determining": "( Min( ( Min( FirstVNF_RAM ,Const ) / Min( FirstVNF_CPU ,( PN / ( ( ( Const / RRS ) + DDR ) - FirstVNF_CPU ) ) ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + AMS ),( ARS / Const ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,( RCSe * DS ) ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 0.8236472945891784, "obj2": 0.07138395296644497}]}