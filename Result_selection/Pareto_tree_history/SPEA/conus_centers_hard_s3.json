{"1": [{"determining": "( Min( DDR ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( CS * DS ) / ( MLU * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * ARS ) / Min( Const ,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * RCSe ) )", "obj1": 0.625250501002004, "obj2": 0.26094870060880676}, {"determining": "Min( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( BR - ARS ) ) ,Min( ( FirstVNF_RAM / MRS ) ,( FirstVNF_CPU / DDR ) ) )", "choosing": "Max( Min( MUM ,( MLU + RRSe ) ),( ( CS - MUC ) / ( MLU / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,( ACS - ARS ) ) + ( CRS * Max( CRS,FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ,( ( MUM / RCSe ) / ( RMSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) - Max( Max( BR,PN ),ARS ) )", "choosing": "Min( ( ( MUC + MLU ) - ( RCSe / RMSe ) ) ,( Min( MUR ,MUM ) * ( CS - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,FirstVNF_Mem ) ,( AMS / FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( MUM - MLU ) - ( MUR - RCSe ) ),Max( ( RCSe + MUR ),( CS * MUR ) ) )", "obj1": 0.6753507014028056, "obj2": 0.25073842659251094}, {"determining": "( ( RRS * AMS ) - ( ( MDR * PN ) * FirstVNF_Mem_Server ) )", "choosing": "( Min( ( RCSe * RRSe ) ,Max( RCSe,MLU ) ) + ( Max( DS,RCSe ) + ( MUM - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) / ( DDR - ACS ) ) - ( Min( AMS ,ARS ) * ( AMS + ACS ) ) ) - ( ( ( MDR + FirstVNF_CPU ) / ( RRS / CRS ) ) / Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( ( RCSe - MLU ) ,Min( MUR ,DS ) ) + Min( Min( MUC ,MUC ) ,( MUR * MUR ) ) ) ,( Max( ( MLU + RCSe ),Min( DS ,DS ) ) + Min( Max( DS,MLU ) ,( MUC - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU ) / ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( ( RRSe - RCSe ) ,( MUR + MLU ) ) * ( Max( MUM,MLU ) - Max( RMSe,MLU ) ) ),Min( ( ( RCSe * MUC ) + Max( RMSe,MLU ) ) ,Min( ( MUR * DS ) ,Max( MUR,RRSe ) ) ) )", "obj1": 0.687374749498998, "obj2": 0.21581541691917006}, {"determining": "( ( Min( Min( AMS ,FirstVNF_Mem ) ,Max( MRS,MRS ) ) / Min( ( RRS + Const ) ,( PN - ARS ) ) ) * ( ( Max( Const,AMS ) - ( DDR * ACS ) ) / Min( ( MDR / ARS ) ,Min( MDR ,ACS ) ) ) )", "choosing": "( ( Min( ( MLU - RCSe ) ,Max( RCSe,RCSe ) ) / Min( ( RRSe / MUR ) ,Max( MUM,RMSe ) ) ) * ( Min( Min( RRSe ,MUR ) ,( DS + MUR ) ) * Max( Min( RCSe ,RCSe ),( DS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR + DDR ) * Min( MDR ,FirstVNF_Mem ) ) * ( Min( ARS ,FirstVNF_CPU ) * ( ARS * CRS ) ) ) - Max( Max( ( FirstVNF_RAM_Server * RRS ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ),Max( Max( AMS,FirstVNF_Mem_Server ),( Const * FirstVNF_Mem ) ) ) )", "choosing": "Max( ( Min( ( CS - MLU ) ,Max( MUC,MUR ) ) * ( ( RRSe + MLU ) / ( MUR * RRSe ) ) ),( ( ( MUR / RCSe ) / ( RRSe / MUC ) ) - Min( Max( RMSe,RCSe ) ,( MLU + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / ( MDR * Const ) ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,Min( DS ,RRSe ) ) ) ,( ( ( MUC * MUC ) + ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.5951903807615231, "obj2": 0.2934626824638276}], "2": [{"determining": "( Min( DDR ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( CS * DS ) / ( MLU * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * ARS ) / Min( Const ,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * RCSe ) )", "obj1": 0.625250501002004, "obj2": 0.26094870060880676}, {"determining": "Min( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( BR - ARS ) ) ,Min( ( FirstVNF_RAM / MRS ) ,( FirstVNF_CPU / DDR ) ) )", "choosing": "Max( Min( MUM ,( MLU + RRSe ) ),( ( CS - MUC ) / ( MLU / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,( ACS - ARS ) ) + ( CRS * Max( CRS,FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ,( ( MUM / RCSe ) / ( RMSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) - Max( Max( BR,PN ),ARS ) )", "choosing": "Min( ( ( MUC + MLU ) - ( RCSe / RMSe ) ) ,( Min( MUR ,MUM ) * ( CS - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * AMS ) - ( ( MDR * PN ) * FirstVNF_Mem_Server ) )", "choosing": "( Min( ( RCSe * RRSe ) ,Max( RCSe,MLU ) ) + ( Max( DS,RCSe ) + ( MUM - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) / ( DDR - ACS ) ) - ( Min( AMS ,ARS ) * ( AMS + ACS ) ) ) - ( ( ( MDR + FirstVNF_CPU ) / ( RRS / CRS ) ) / Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( ( RCSe - MLU ) ,Min( MUR ,DS ) ) + Min( Min( MUC ,MUC ) ,( MUR * MUR ) ) ) ,( Max( ( MLU + RCSe ),Min( DS ,DS ) ) + Min( Max( DS,MLU ) ,( MUC - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU ) / ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( ( RRSe - RCSe ) ,( MUR + MLU ) ) * ( Max( MUM,MLU ) - Max( RMSe,MLU ) ) ),Min( ( ( RCSe * MUC ) + Max( RMSe,MLU ) ) ,Min( ( MUR * DS ) ,Max( MUR,RRSe ) ) ) )", "obj1": 0.687374749498998, "obj2": 0.21581541691917006}, {"determining": "( ( Min( Min( AMS ,FirstVNF_Mem ) ,Max( MRS,MRS ) ) / Min( ( RRS + Const ) ,( PN - ARS ) ) ) * ( ( Max( Const,AMS ) - ( DDR * ACS ) ) / Min( ( MDR / ARS ) ,Min( MDR ,ACS ) ) ) )", "choosing": "( ( Min( ( MLU - RCSe ) ,Max( RCSe,RCSe ) ) / Min( ( RRSe / MUR ) ,Max( MUM,RMSe ) ) ) * ( Min( Min( RRSe ,MUR ) ,( DS + MUR ) ) * Max( Min( RCSe ,RCSe ),( DS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR + DDR ) * Min( MDR ,FirstVNF_Mem ) ) * ( Min( ARS ,FirstVNF_CPU ) * ( ARS * CRS ) ) ) - Max( Max( ( FirstVNF_RAM_Server * RRS ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ),Max( Max( AMS,FirstVNF_Mem_Server ),( Const * FirstVNF_Mem ) ) ) )", "choosing": "Max( ( Min( ( CS - MLU ) ,Max( MUC,MUR ) ) * ( ( RRSe + MLU ) / ( MUR * RRSe ) ) ),( ( ( MUR / RCSe ) / ( RRSe / MUC ) ) - Min( Max( RMSe,RCSe ) ,( MLU + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,FirstVNF_RAM ) - Max( FirstVNF_Mem,MRS ) )", "choosing": "( ( Max( Max( DS,CS ),Max( MUR,RRSe ) ) + RRSe ) * Max( RMSe,Min( RMSe ,( MUM * RMSe ) ) ) )", "obj1": 0.8156312625250501, "obj2": 0.1991531993926757}, {"determining": "( Min( ( BR - FirstVNF_Mem_Server ) ,BR ) - ( DDR * FirstVNF_Mem ) )", "choosing": "( ( ( MUR * DS ) / Max( MUR,RRSe ) ) / ( RRSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,BR ) - ( DDR * FirstVNF_Mem ) ) / ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( ( RRSe - RCSe ) ,( MUR + MLU ) ) * ( Max( MUM,MLU ) - Max( RMSe,MLU ) ) ),Min( ( ( CS * DS ) / ( RRSe - MUC ) ) ,Min( ( MUR * DS ) ,Max( MUR,RRSe ) ) ) )", "obj1": 0.6633266533066132, "obj2": 0.23381174624432585}, {"determining": "( Min( DDR ,BR ) - ( DDR * FirstVNF_Mem ) )", "choosing": "( ( CS - DS ) / ( RRSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU ) / ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( ( RRSe - RCSe ) ,( MUR + MLU ) ) * ( Max( MUM,MLU ) - Max( RMSe,MLU ) ) ),Min( ( ( RCSe * MUC ) + Max( RMSe,MLU ) ) ,Min( ( MUR * DS ) ,Max( MUR,RRSe ) ) ) )", "obj1": 0.687374749498998, "obj2": 0.21581541691917006}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * DS ) )", "obj1": 0.5851703406813628, "obj2": 0.29739066188849045}, {"determining": "( Min( RRS ,( ACS - ARS ) ) + ( CRS * ( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( MUC,RRSe ) / ( RCSe / MLU ) ) + ( Max( CS,MUC ) + ( DS / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server / ( Min( DDR ,BR ) - ( DDR * FirstVNF_Mem ) ) ) ,Min( BR ,FirstVNF_CPU ) )", "choosing": "( ( MUC / DS ) + ( RRSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,BR ) - ( DDR * FirstVNF_Mem ) )", "choosing": "( ( CS + DS ) / ( RRSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * ARS ) / ( MRS - BR ) )", "choosing": "( ( MLU + CS ) - ( MUM * MUR ) )", "obj1": 0.9478957915831663, "obj2": 0.06448145868374729}, {"determining": "( ( CRS * ARS ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RRSe * RMSe ) + Max( CS,MUR ) ) * ( Min( CS ,RMSe ) * ( MLU + RCSe ) ) ) * ( ( ( MUC / RRSe ) / Max( CS,MUR ) ) - Max( ( RCSe + MLU ),( RMSe * DS ) ) ) )", "obj1": 0.6052104208416834, "obj2": 0.27370767816535263}, {"determining": "( Min( RRS ,( ACS - ARS ) ) + ( CRS * ( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ,( ( MUM / RCSe ) / ( RMSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( BR * PN ) - FirstVNF_RAM ) / BR ) ,( Min( CRS ,PN ) * ( CRS * Min( Min( ( MRS + ACS ) ,ARS ) ,MRS ) ) ) )", "choosing": "Max( ( ( ( ( ( ( ( CS - RMSe ) - ( CS * DS ) ) + ( Min( MUM ,MUR ) - Min( RMSe ,MUR ) ) ) / Max( ( Max( RMSe,RRSe ) + ( CS * RCSe ) ),Max( ( MLU * RCSe ),( RCSe * MUR ) ) ) ) / ( Max( ( Max( MUR,MUC ) * Min( RMSe ,DS ) ),( ( MLU * CS ) - ( MUR * MUM ) ) ) / ( ( ( CS / MUM ) - ( DS + MUR ) ) / Max( Min( MUC ,RCSe ),Max( CS,MUM ) ) ) ) ) / Min( ( Max( ( ( RRSe / DS ) / ( RRSe / RRSe ) ),( ( RMSe - MLU ) / ( DS * MUR ) ) ) + Max( ( ( CS - CS ) - ( RCSe - MLU ) ),( Min( RMSe ,CS ) + ( DS / MLU ) ) ) ) ,( ( ( ( DS / MLU ) - ( MUC - MUC ) ) - ( ( RCSe + CS ) * ( DS / MUR ) ) ) - ( ( ( RCSe - MUR ) - Min( MUM ,CS ) ) * Max( ( MLU * RMSe ),( CS * CS ) ) ) ) ) ) / ( ( ( ( ( Max( MLU,MUR ) + ( CS + MUC ) ) + ( ( CS * CS ) / Min( MUM ,CS ) ) ) / ( ( ( RMSe - MUM ) * ( RCSe * MUR ) ) / Min( ( MUR - CS ) ,( RCSe * MUR ) ) ) ) + ( Max( Min( ( MUM / MUC ) ,Min( RMSe ,DS ) ),( Max( DS,MUR ) / ( RMSe - CS ) ) ) * Max( ( ( MLU - MUM ) / ( MUC + MLU ) ),( Max( CS,MUC ) / Max( CS,RMSe ) ) ) ) ) + ( ( ( ( Max( RCSe,DS ) / ( RRSe - DS ) ) / ( ( RRSe * RRSe ) / ( CS + MUC ) ) ) - ( ( ( MUC / RRSe ) - ( MUR * MUM ) ) / Min( ( MUC * MUM ) ,( MUC / MLU ) ) ) ) + ( Max( ( ( RCSe - DS ) + ( RCSe * MUR ) ),( ( MUM / MLU ) - Max( CS,RCSe ) ) ) / ( Min( Min( RCSe ,MLU ) ,( MLU / MUC ) ) * ( ( DS + RCSe ) + Max( MLU,MLU ) ) ) ) ) ) ),( ( Max( Min( ( Max( ( MUM - DS ),( RRSe - RRSe ) ) - ( ( MUM + CS ) / ( MLU / MUC ) ) ) ,Min( ( ( RCSe + MUM ) - Min( DS ,RMSe ) ) ,Max( Min( MUM ,MUM ),Max( RMSe,MUC ) ) ) ),Min( ( ( Min( MUM ,MUC ) + Min( MUC ,MUM ) ) - ( ( MUR - CS ) + ( DS / MUM ) ) ) ,Min( Min( ( MUR * RCSe ) ,( RMSe / RRSe ) ) ,( ( MUM + MUC ) * ( MLU / MUC ) ) ) ) ) + ( ( ( ( ( MUM * CS ) + Max( MUR,RMSe ) ) - ( ( RRSe * DS ) + ( RRSe + MLU ) ) ) * ( Max( Min( RRSe ,MUC ),( MLU + DS ) ) * Max( Max( RRSe,CS ),( MUR / RMSe ) ) ) ) - ( ( ( ( DS / RCSe ) + ( RRSe + MUC ) ) * Min( ( RRSe - DS ) ,Max( MUC,RMSe ) ) ) + Min( Min( ( MLU - CS ) ,( CS / DS ) ) ,Min( ( MLU * MUC ) ,( MUM - MUM ) ) ) ) ) ) / ( ( Max( ( ( ( MUM - RCSe ) + ( MLU * MLU ) ) - ( Min( RCSe ,MUC ) - ( CS * DS ) ) ),Max( ( ( RMSe - MUC ) / Min( MUR ,CS ) ),( ( DS / RMSe ) + ( MUC * MUR ) ) ) ) + ( ( ( ( DS * MUR ) + Max( RCSe,DS ) ) / ( ( DS / MUR ) - ( DS / MLU ) ) ) * ( Min( ( CS / RRSe ) ,( MLU / DS ) ) + Min( ( MUR - MLU ) ,( DS * RMSe ) ) ) ) ) + ( ( ( ( ( CS - CS ) / Max( DS,MUM ) ) - ( ( MUC - MUC ) / Max( CS,MLU ) ) ) - ( Min( Max( MUR,RMSe ) ,Min( RMSe ,RMSe ) ) * Min( ( MUM * MUC ) ,( MLU * RRSe ) ) ) ) - ( ( Min( ( MLU * CS ) ,Min( MUC ,RCSe ) ) * Min( ( DS - MLU ) ,Min( RRSe ,RCSe ) ) ) / ( ( ( MUR / RCSe ) * Min( MUC ,MUR ) ) / ( ( MLU - DS ) / ( MLU * MLU ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( Max( ( Min( Max( RRS,ARS ) ,( AMS / BR ) ) + ( ( MRS * MDR ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) ),( Min( Min( FirstVNF_CPU ,Const ) ,( RRS + FirstVNF_RAM ) ) - Max( ( RRS + MRS ),( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,MLU ) - ( DS / DS ) )", "obj1": 0.7294589178356713, "obj2": 0.2147642992710079}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + RMSe ) - ( Min( DS ,MLU ) - ( RRSe - MLU ) ) )", "obj1": 0.5951903807615231, "obj2": 0.28819124569424226}, {"determining": "( ( CRS * ARS ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * MUR ) )", "obj1": 0.625250501002004, "obj2": 0.26094870060880676}, {"determining": "Min( Min( Max( ( ( ( Max( Min( DDR ,FirstVNF_Mem ),( AMS / FirstVNF_Mem_Server ) ) + Min( ( MRS + RRS ) ,Min( AMS ,PN ) ) ) - Min( ( ( MRS / FirstVNF_Mem ) + ( MRS + FirstVNF_CPU ) ) ,Min( Min( BR ,FirstVNF_CPU ) ,Max( ARS,FirstVNF_Mem ) ) ) ) / ( ( Min( ( DDR + FirstVNF_RAM ) ,( RRS * FirstVNF_RAM ) ) - ( ( DDR / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ) - ( ( ( Const + MDR ) + Max( ARS,AMS ) ) * ( ( PN + ARS ) / ( FirstVNF_RAM_Server / ACS ) ) ) ) ),( Max( ( ( ( PN * FirstVNF_RAM_Server ) / ( MRS / BR ) ) / Max( ( Const - MDR ),( FirstVNF_CPU + BR ) ) ),( ( Min( DDR ,FirstVNF_Mem ) + ( FirstVNF_RAM / Const ) ) + ( Min( FirstVNF_CPU_Server ,MRS ) - ( Const + FirstVNF_CPU ) ) ) ) + ( ( ( ( FirstVNF_CPU_Server * PN ) / ( CRS * MRS ) ) + Min( ( PN * FirstVNF_RAM ) ,( PN + PN ) ) ) + ( ( Max( FirstVNF_CPU_Server,MDR ) - Max( BR,FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem + AMS ) - ( FirstVNF_Mem - Const ) ) ) ) ) ) ,( ( ( ( ( ( BR + FirstVNF_CPU_Server ) + ( DDR - AMS ) ) + ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) + Min( DDR ,FirstVNF_RAM ) ) ) - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) * Max( ( FirstVNF_RAM + AMS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) ) + ( ( ( Max( BR,DDR ) / ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / Max( Max( Const,FirstVNF_CPU ),Min( PN ,ACS ) ) ) / Min( ( Max( MRS,Const ) + Min( MRS ,BR ) ) ,( Min( ARS ,Const ) / ( FirstVNF_Mem_Server + PN ) ) ) ) ) / ( ( Min( ( ( AMS * ACS ) * ( AMS - FirstVNF_CPU_Server ) ) ,( Min( RRS ,FirstVNF_RAM ) + ( FirstVNF_Mem * DDR ) ) ) - ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) + Max( FirstVNF_RAM,DDR ) ) * Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,BR ) ) ) ) * Max( ( ( Max( FirstVNF_RAM_Server,AMS ) + ( CRS - RRS ) ) - ( ( MRS / FirstVNF_RAM ) - Min( MRS ,MDR ) ) ),Max( ( ( CRS / FirstVNF_Mem ) / Min( MDR ,CRS ) ),( ( FirstVNF_CPU_Server * ACS ) + ( FirstVNF_CPU - FirstVNF_RAM ) ) ) ) ) ) ) ,Max( ( ( ( ( Min( Max( CRS,ARS ) ,Min( ACS ,MRS ) ) / Max( ( FirstVNF_RAM_Server + PN ),( Const - AMS ) ) ) / ( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * ( RRS - RRS ) ) / ( ( RRS * ACS ) + Min( CRS ,FirstVNF_Mem ) ) ) ) + Max( Max( ( Min( Const ,FirstVNF_CPU_Server ) * Min( AMS ,FirstVNF_CPU ) ),( ( FirstVNF_RAM / MRS ) - Max( FirstVNF_Mem,FirstVNF_CPU ) ) ),( Min( ( FirstVNF_CPU * DDR ) ,( ACS * AMS ) ) * Max( ( FirstVNF_CPU_Server * Const ),( Const * FirstVNF_Mem ) ) ) ) ) + Min( ( ( ( ( ACS * CRS ) - ( MDR + MDR ) ) - Max( ( BR + AMS ),( ARS - FirstVNF_RAM_Server ) ) ) * ( ( ( MRS / CRS ) * Min( FirstVNF_Mem ,PN ) ) - ( ( BR - DDR ) / Min( AMS ,CRS ) ) ) ) ,( Max( Min( Min( FirstVNF_RAM_Server ,CRS ) ,( Const + CRS ) ),( Min( ARS ,AMS ) - ( FirstVNF_CPU / BR ) ) ) / ( Max( ( AMS - ARS ),( RRS + FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_RAM_Server ,BR ) + ( ACS / FirstVNF_Mem_Server ) ) ) ) ) ),( Min( ( ( ( Min( ACS ,BR ) + ( FirstVNF_CPU * RRS ) ) + ( ( DDR * BR ) / ( CRS + FirstVNF_CPU_Server ) ) ) + ( ( ( DDR - BR ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) - ( ( Const * ACS ) * ( AMS * FirstVNF_RAM ) ) ) ) ,( ( ( ( CRS / AMS ) * ( MRS / FirstVNF_Mem ) ) / ( Max( AMS,MRS ) + ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) ) / ( ( ( Const + MDR ) * Max( Const,MRS ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) - ( AMS * AMS ) ) ) ) ) / ( ( ( ( ( FirstVNF_RAM * AMS ) * ( ARS / MDR ) ) * Max( ( FirstVNF_Mem - PN ),( FirstVNF_Mem_Server - ARS ) ) ) * Max( ( Min( AMS ,CRS ) - Min( ARS ,BR ) ),Max( Min( ARS ,FirstVNF_CPU_Server ),( ACS + FirstVNF_RAM_Server ) ) ) ) * ( ( ( ( BR + FirstVNF_RAM ) * Min( Const ,FirstVNF_Mem ) ) + Max( ( ARS + ACS ),( DDR + FirstVNF_RAM_Server ) ) ) + ( ( Min( ACS ,PN ) + Min( RRS ,FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem ),( CRS * BR ) ) ) ) ) ) ) )", "choosing": "( ( Max( ( ( Max( Min( ( RCSe / RRSe ) ,( DS * MUC ) ),( ( RCSe * MUR ) * ( RCSe / CS ) ) ) + ( ( ( CS - MUR ) + ( MLU + DS ) ) * ( ( CS * MUR ) - ( MLU * DS ) ) ) ) * ( ( ( ( MUC * MUC ) + ( RRSe * RCSe ) ) + ( ( DS * MUC ) + Min( RRSe ,RCSe ) ) ) + Min( Min( Min( DS ,MUC ) ,( RMSe - MUC ) ) ,Max( ( MLU / CS ),( RMSe / RRSe ) ) ) ) ),Min( ( Max( ( ( DS + RRSe ) - ( MUM + RCSe ) ),( Max( CS,MUR ) / ( RMSe - CS ) ) ) / Min( Max( ( CS / MUR ),( RCSe * DS ) ) ,Min( Max( MUC,DS ) ,Max( DS,CS ) ) ) ) ,( ( Max( ( RCSe + RRSe ),( MLU - MLU ) ) + ( Max( RMSe,RRSe ) + Max( RCSe,MUC ) ) ) - Max( ( ( DS + MLU ) - ( CS + DS ) ),( ( MUC * MUR ) * ( DS / RMSe ) ) ) ) ) ) / ( Max( ( Max( ( ( MUC * CS ) / ( DS - MUM ) ),Min( Min( MUC ,MLU ) ,Max( CS,MUC ) ) ) - Min( Min( ( MUR * RCSe ) ,( RRSe / RCSe ) ) ,Min( Min( DS ,MUR ) ,Min( MUR ,DS ) ) ) ),( ( ( ( CS + MLU ) * Max( MUR,MUM ) ) * ( ( RCSe - MLU ) / Min( DS ,RCSe ) ) ) + Max( ( ( DS - RCSe ) + ( MUM + CS ) ),( ( MUM - RCSe ) + ( MUC * RRSe ) ) ) ) ) * Max( ( ( ( ( RCSe / RMSe ) / ( MLU / DS ) ) / ( ( MUM * RCSe ) * ( MUC + RRSe ) ) ) + ( ( ( MLU + MLU ) - ( MUM * MUR ) ) / ( ( MUC + MLU ) + ( RRSe + MUC ) ) ) ),( ( ( Max( MUR,CS ) * Max( MUM,MUC ) ) - ( ( MUC * MLU ) / ( MUC - MLU ) ) ) / Min( Max( ( CS / MUR ),Max( DS,RCSe ) ) ,( ( MUR * MLU ) * ( RMSe + RCSe ) ) ) ) ) ) ) + ( ( Max( ( Min( ( Min( RRSe ,MLU ) * ( DS / MLU ) ) ,( ( MLU * MUM ) - Max( MLU,MUR ) ) ) * ( ( ( CS / MUC ) - ( CS * DS ) ) * Max( ( RMSe + MLU ),( DS / MUC ) ) ) ),( ( Max( ( CS * DS ),( DS - CS ) ) / ( Min( DS ,DS ) * ( MUR - CS ) ) ) * ( ( Min( RMSe ,CS ) * Max( MUC,RCSe ) ) / ( ( MUC * MUC ) - ( CS * MUC ) ) ) ) ) / Min( ( Max( ( Max( MUR,CS ) + Min( CS ,RRSe ) ),( ( MUR / MUM ) - ( CS - MUM ) ) ) / ( ( ( CS + MUC ) * ( MLU * RCSe ) ) / Max( Max( RRSe,MUR ),( MUR + RMSe ) ) ) ) ,( Min( ( ( CS / MUM ) * ( MUR + MLU ) ) ,( Min( RMSe ,MUM ) - ( MLU - MLU ) ) ) - Max( ( ( RRSe - RCSe ) + ( MLU / CS ) ),( ( MUR * RMSe ) / ( DS + RCSe ) ) ) ) ) ) - Min( ( Max( ( ( ( MUC / MUC ) + ( CS * MUC ) ) / ( ( RMSe / MUM ) * ( MLU - RMSe ) ) ),Max( ( Min( MLU ,MUR ) - Min( MUR ,RMSe ) ),Max( ( CS - RMSe ),( RMSe / RCSe ) ) ) ) - Min( ( ( Min( RMSe ,RMSe ) * ( RMSe * MUC ) ) * Min( Max( RCSe,RRSe ) ,Max( RMSe,CS ) ) ) ,( ( ( MUM + MUM ) / Max( CS,CS ) ) * ( ( RMSe - RMSe ) / ( MUM / CS ) ) ) ) ) ,( Min( ( ( Min( RCSe ,CS ) - Min( MUR ,MUR ) ) * ( ( MLU - CS ) * ( MLU / DS ) ) ) ,( Min( ( RCSe + CS ) ,( RRSe + CS ) ) + Max( ( CS / RRSe ),( DS - MUM ) ) ) ) * ( Max( ( ( MUM / MLU ) + ( MUM - MUR ) ),( ( DS - RCSe ) + Max( MUR,RRSe ) ) ) - Max( ( Min( MUC ,RRSe ) + ( MUR + MLU ) ),Max( ( MUM / MUM ),Min( CS ,MLU ) ) ) ) ) ) ) )", "obj1": 0.9959919839679359, "obj2": 0.0017864805686974715}, {"determining": "( ( MRS + Const ) / Max( MRS,FirstVNF_RAM_Server ) )", "choosing": "( Min( ( MUM + DS ) ,( MUM - RMSe ) ) + Max( ( MUC + CS ),Min( MLU ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( Min( Min( AMS ,FirstVNF_Mem ) ,Max( MRS,MRS ) ) * Min( ( RRS + Const ) ,( PN - ARS ) ) ) * ( ( Max( Const,AMS ) - ( DDR * ACS ) ) / Min( ( MDR / ARS ) ,Min( MDR ,ACS ) ) ) ) * Min( MDR ,FirstVNF_Mem ) ) * ( Min( ARS ,FirstVNF_CPU ) * ( ARS * CRS ) ) ) - Max( Max( ( FirstVNF_RAM_Server * RRS ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ),Max( Max( AMS,FirstVNF_Mem_Server ),( Const * FirstVNF_Mem ) ) ) )", "choosing": "Max( ( Min( ( CS - MLU ) ,Max( MUC,MUR ) ) * ( ( RRSe + MLU ) / ( ( Min( ( MLU * RCSe ) ,Max( RCSe,RCSe ) ) / Min( ( RRSe / MUR ) ,Max( MUM,RMSe ) ) ) * ( Min( Min( RRSe ,MUR ) ,( DS + MUR ) ) * Max( Min( RCSe ,RCSe ),( DS * MLU ) ) ) ) ) ),( ( ( MUR / RCSe ) / ( RRSe / MUC ) ) - Min( Max( RMSe,RCSe ) ,( MLU + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( AMS ,FirstVNF_Mem ) ,Max( MRS,MRS ) ) * Min( ( RRS + Const ) ,( PN - ARS ) ) ) * ( ( Max( Const,AMS ) - ( DDR * ACS ) ) / Min( ( MDR / Min( MDR ,FirstVNF_Mem ) ) ,Min( MDR ,ACS ) ) ) )", "choosing": "( ( Min( ( MLU * RCSe ) ,Max( RCSe,RCSe ) ) / Min( ( RRSe / MUR ) ,Max( RCSe,RMSe ) ) ) * ( Min( Min( RRSe ,MUR ) ,( DS + MUR ) ) * Max( Min( RCSe ,RCSe ),( DS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( AMS ,FirstVNF_Mem ) ,Max( MRS,MRS ) ) * Min( ( RRS + Const ) ,( PN - ARS ) ) ) * ( ( Max( Const,AMS ) - ( DDR * ACS ) ) / Min( ( MDR / ARS ) ,Min( MDR ,ACS ) ) ) )", "choosing": "( ( Min( ( MLU * RCSe ) ,Max( RCSe,RCSe ) ) / Min( ( RRSe / MUR ) ,Max( MUM,RMSe ) ) ) * ( Min( Min( RRSe ,MUR ) ,( DS + MUR ) ) * Max( Min( RCSe ,RCSe ),( DS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR + DDR ) * Min( MDR ,FirstVNF_Mem ) ) * ( Min( ARS ,FirstVNF_CPU ) * ( ARS * CRS ) ) ) - Max( Max( ( FirstVNF_RAM_Server * RRS ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ),Max( Max( AMS,FirstVNF_Mem_Server ),( Const * FirstVNF_Mem ) ) ) )", "choosing": "Max( ( Min( ( CS - MLU ) ,Max( MUC,MUR ) ) * ( ( RRSe + MLU ) / ( MUR * RRSe ) ) ),( ( ( MUR / RCSe ) / ( RRSe / MUC ) ) - Min( Max( RMSe,RCSe ) ,( MLU + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU ) / Min( CRS ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( ( RRSe * RCSe ) ,( MUR + MLU ) ) * ( Max( MUM,MLU ) - Max( RMSe,MLU ) ) ),Min( ( ( RCSe * MUC ) + Max( RMSe,MLU ) ) ,Min( ( MUR * DS ) ,Max( MUR,RRSe ) ) ) )", "obj1": 0.687374749498998, "obj2": 0.21581541691917006}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) + ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6112224448897795, "obj2": 0.2709717010351351}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) - Max( Min( ( DDR + ACS ) ,Max( RRS,PN ) ),ARS ) )", "choosing": "Min( ( ( MUC + MLU ) - ( RCSe / RMSe ) ) ,( Max( MUR,MUM ) * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) - Max( Max( BR,CRS ),ARS ) )", "choosing": "Min( ( ( MUC + MLU ) - ( RCSe / RMSe ) ) ,( Max( MUR,MUM ) * ( CS - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * AMS ) - ( ( BR * PN ) * FirstVNF_Mem_Server ) )", "choosing": "( Min( ( RCSe * RRSe ) ,( RCSe / MLU ) ) + ( Max( DS,RCSe ) + ( MUM + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) / ( DDR - ACS ) ) - ( Min( AMS ,CRS ) * ( AMS + ACS ) ) ) - Max( ( Min( ( Const + CRS ) ,( Const + FirstVNF_Mem ) ) + Max( ( FirstVNF_Mem - FirstVNF_Mem ),( CRS + ACS ) ) ),Max( Min( Min( FirstVNF_Mem_Server ,ARS ) ,Min( ARS ,AMS ) ),Min( ( ACS / CRS ) ,Max( FirstVNF_CPU_Server,RRS ) ) ) ) )", "choosing": "Min( ( Min( ( RCSe - MLU ) ,Min( ( ( Min( MUM ,MUM ) / Min( RRSe ,MUM ) ) - Min( ( MUR - MUC ) ,( RMSe + RRSe ) ) ) ,DS ) ) + Min( Min( MUC ,MUC ) ,( MUR * MUR ) ) ) ,( Max( ( MLU + RCSe ),Min( DS ,DS ) ) + Min( Max( CS,MLU ) ,( MUC - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) / ( DDR - ACS ) ) - ( Min( AMS ,CRS ) * ( AMS + ACS ) ) ) - ( ( ( MDR + FirstVNF_CPU ) / ( RRS / CRS ) ) / Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( ( RCSe - MLU ) ,Min( MUR ,DS ) ) + Min( Min( MUC ,MUC ) ,( MUR * MUR ) ) ) ,( Max( ( MLU + RCSe ),Min( DS ,DS ) ) + Min( Max( CS,MLU ) ,( MUC - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS - Max( Max( ( FirstVNF_RAM_Server * RRS ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ),Max( Max( AMS,FirstVNF_Mem_Server ),( Const * FirstVNF_Mem ) ) ) )", "choosing": "Max( RCSe,( ( ( MUR / RCSe ) / ( RRSe / MUC ) ) - Min( Max( RMSe,RCSe ) ,( MLU + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR + DDR ) * Min( MDR ,FirstVNF_Mem ) ) * ( Min( ARS ,FirstVNF_CPU ) * ( ARS * CRS ) ) ) - Max( Max( ( FirstVNF_RAM_Server * RRS ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ),Max( Max( AMS,FirstVNF_Mem_Server ),( Const * FirstVNF_Mem ) ) ) )", "choosing": "( ( ( MUC * RCSe ) / ( DS + RCSe ) ) - ( Min( MUM ,MUM ) + ( RMSe - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( AMS ,FirstVNF_Mem ) ,Max( MRS,( Max( ( BR / MRS ),( BR / FirstVNF_Mem_Server ) ) / ( ( MDR * FirstVNF_Mem ) * ( ARS / BR ) ) ) ) ) * Min( ( RRS + Const ) ,( PN - ARS ) ) ) * ( ( Max( Const,AMS ) - ( DDR * ACS ) ) / Min( ( MDR / ARS ) ,Min( MDR ,ACS ) ) ) )", "choosing": "( ( Min( ( MLU * RCSe ) ,Max( RCSe,RCSe ) ) / Min( ( RRSe / MUR ) ,Max( MUM,RMSe ) ) ) * ( Min( Min( RRSe ,MUR ) ,( DS + MUR ) ) * ( Min( CS ,CS ) + Max( MUC,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( AMS ,FirstVNF_Mem ) ,Max( MRS,MRS ) ) * Min( ( RRS + Const ) ,( PN - ARS ) ) ) * ( ( Max( Const,AMS ) - ( DDR * ACS ) ) / Min( ( MDR / ARS ) ,Min( MDR ,ACS ) ) ) )", "choosing": "( ( Min( ( MLU * RCSe ) ,Max( RCSe,RCSe ) ) / Min( ( RRSe / MUR ) ,Max( MUM,RMSe ) ) ) * ( Min( Min( RRSe ,MUR ) ,( DS + MUR ) ) * Max( Min( RCSe ,RCSe ),( DS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) - Max( Max( BR,CRS ),MDR ) )", "choosing": "Min( ( ( MUC + MLU ) - ( RCSe / RMSe ) ) ,( RRSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) - Max( Max( BR,CRS ),ARS ) )", "choosing": "Min( ( ( MUC + MLU ) - ( RCSe / RMSe ) ) ,( Max( MUR,MUM ) * ( CS - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( Min( ( ( CRS * MDR ) - Max( PN,PN ) ) ,( ( Const + AMS ) / ( MRS - BR ) ) ) + ( ( Min( FirstVNF_Mem ,MDR ) / Max( DDR,MRS ) ) + ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / ( ACS / FirstVNF_Mem ) ) ) ) + ( ( ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) / Max( FirstVNF_Mem_Server,ARS ) ) + ( Min( CRS ,FirstVNF_RAM_Server ) * ( PN * CRS ) ) ) * Min( ( Max( FirstVNF_Mem,RRS ) / ( ARS - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_CPU + Const ) * ( FirstVNF_Mem + RRS ) ) ) ) ) + Min( ( ( ( Max( AMS,PN ) + ( MRS - MDR ) ) - Max( Min( RRS ,BR ),Max( AMS,DDR ) ) ) * ( ( ( AMS * FirstVNF_RAM ) * Max( BR,PN ) ) + ( ( MDR + AMS ) * ( BR * RRS ) ) ) ) ,Max( ( Max( ( FirstVNF_CPU * FirstVNF_Mem ),( RRS + FirstVNF_Mem_Server ) ) * ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) * ( BR + PN ) ) ),Min( ( Min( DDR ,Const ) / ( RRS * FirstVNF_Mem ) ) ,( Min( FirstVNF_RAM_Server ,ARS ) * ( FirstVNF_Mem * ACS ) ) ) ) ) ) ,( Min( Max( ( ( ( RRS / FirstVNF_Mem ) - Min( RRS ,FirstVNF_RAM ) ) / ( Max( FirstVNF_Mem,AMS ) + ( Const / MDR ) ) ),( ( ( Const * MDR ) + ( CRS * PN ) ) * Min( ( PN + ACS ) ,Min( Const ,FirstVNF_RAM ) ) ) ) ,Max( ( ( ( BR + FirstVNF_RAM ) * ( AMS / DDR ) ) - Max( ( RRS * PN ),( ACS * FirstVNF_Mem ) ) ),( Min( ( ARS - PN ) ,Max( FirstVNF_CPU,MDR ) ) + Max( Min( BR ,RRS ),( FirstVNF_CPU / BR ) ) ) ) ) * ( ( Min( Max( ( PN / FirstVNF_Mem ),( CRS * AMS ) ) ,( ( DDR + MDR ) - ( MRS - PN ) ) ) / ( ( ( MDR * FirstVNF_RAM_Server ) / Max( Const,FirstVNF_Mem_Server ) ) + Max( ( MRS - ARS ),( PN + DDR ) ) ) ) - ( ( ( ( DDR / BR ) + ( CRS + MRS ) ) + ( Max( AMS,FirstVNF_RAM ) * ( RRS - Const ) ) ) / ( Max( Max( BR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_Mem_Server ) ) - Max( ( MRS - MRS ),( ARS / FirstVNF_RAM ) ) ) ) ) ) ) - Min( ( ( ( ( ( Max( MRS,FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server * DDR ) ) + ( Min( FirstVNF_Mem ,BR ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) + ( Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),Max( FirstVNF_CPU_Server,PN ) ) - ( Min( FirstVNF_Mem ,DDR ) - Max( ARS,FirstVNF_CPU_Server ) ) ) ) / Min( Min( Max( ( FirstVNF_RAM_Server * RRS ),( Const - MDR ) ) ,Min( Min( CRS ,FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ,Max( ( ( ACS + Const ) * Min( ACS ,ACS ) ),Min( ( PN / CRS ) ,( CRS * AMS ) ) ) ) ) + Max( ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) + ( ( Const / Const ) / ( FirstVNF_CPU_Server + MRS ) ) ) + ( Min( ( FirstVNF_CPU_Server / PN ) ,Max( ACS,DDR ) ) / ( Min( CRS ,FirstVNF_CPU_Server ) * ( PN - Const ) ) ) ),( ( Min( ( FirstVNF_CPU_Server - MRS ) ,Min( FirstVNF_CPU ,Const ) ) - ( Min( CRS ,FirstVNF_RAM_Server ) - Min( Const ,ARS ) ) ) * ( Max( Max( BR,AMS ),Min( FirstVNF_CPU_Server ,Const ) ) / ( ( MDR * FirstVNF_RAM_Server ) - ( MDR * ARS ) ) ) ) ) ) ,( ( Max( ( ( ( MRS * FirstVNF_CPU_Server ) + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / Min( ( MRS + PN ) ,Max( RRS,ARS ) ) ),( ( Max( BR,FirstVNF_CPU ) + Min( PN ,CRS ) ) / ( ( CRS * MRS ) - ( MRS / Const ) ) ) ) / ( ( Max( ( FirstVNF_Mem_Server - DDR ),( RRS + MRS ) ) * ( ( DDR + FirstVNF_Mem ) * ( FirstVNF_RAM + MDR ) ) ) * Max( ( ( FirstVNF_Mem_Server * DDR ) * Min( Const ,FirstVNF_RAM ) ),( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) - Min( DDR ,ARS ) ) ) ) ) / ( ( ( Min( ( DDR + MDR ) ,Min( BR ,FirstVNF_RAM ) ) + ( ( ARS / PN ) + ( RRS - AMS ) ) ) - ( ( Min( MRS ,ACS ) + ( FirstVNF_Mem * FirstVNF_RAM ) ) + ( ( CRS + FirstVNF_CPU ) + ( ACS / ARS ) ) ) ) / ( ( ( ( BR - MDR ) * ( MDR - MDR ) ) * ( ( PN + RRS ) + Min( FirstVNF_Mem_Server ,Const ) ) ) * ( Min( ( PN / CRS ) ,( ARS + FirstVNF_Mem ) ) - ( Max( FirstVNF_RAM_Server,Const ) - Max( Const,FirstVNF_RAM ) ) ) ) ) ) ) )", "choosing": "Min( ( CS * CS ) ,( ( Min( RRSe ,MUR ) + MUR ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - DDR ) - Max( ACS,MRS ) )", "choosing": "Max( ( ( Min( ( Min( ( ( MUR / RRSe ) * ( MLU / RCSe ) ) ,( ( MUM * MUC ) / ( MLU / RRSe ) ) ) * ( ( ( CS * MUC ) / ( MUC * MUR ) ) - ( ( RRSe / MUC ) * ( MLU / RCSe ) ) ) ) ,( ( ( Max( RMSe,MUR ) - ( MLU + DS ) ) - ( Max( DS,RCSe ) / ( RRSe * RCSe ) ) ) / Max( ( Min( MLU ,DS ) / Min( RCSe ,MUR ) ),Min( Max( MUC,RMSe ) ,Min( MUM ,RCSe ) ) ) ) ) - ( ( Max( ( ( RRSe / MLU ) + ( MUR * RRSe ) ),( ( MLU / MUR ) - ( RMSe * MUC ) ) ) * ( ( ( MUR / RRSe ) * Min( DS ,DS ) ) - ( Min( DS ,MLU ) + ( MLU * MUM ) ) ) ) / ( Max( Max( Min( RCSe ,DS ),( DS * MUM ) ),Max( ( RCSe * RCSe ),( RMSe * MUR ) ) ) / Max( ( ( CS - MUM ) * Max( MUR,MUM ) ),Min( ( RCSe - RMSe ) ,Max( RMSe,RCSe ) ) ) ) ) ) * ( ( ( ( ( ( MLU / RMSe ) - ( MUC / MUR ) ) + Max( Min( CS ,MUM ),Min( MLU ,CS ) ) ) * ( ( ( CS * CS ) * ( MUC - RRSe ) ) * ( ( MUM + MUM ) - ( MLU * RCSe ) ) ) ) + ( ( Min( ( RCSe / RRSe ) ,( CS / RMSe ) ) - ( Max( MUR,MUR ) * Min( MUR ,MLU ) ) ) * ( ( ( RCSe / DS ) - ( MUC - MUC ) ) * Max( Min( DS ,MUM ),( RMSe - MUC ) ) ) ) ) - ( Max( Max( Max( ( DS * RRSe ),Max( MLU,DS ) ),( ( MLU / RMSe ) * ( MUR * MUR ) ) ),( Min( Max( MUC,CS ) ,( MUC * RRSe ) ) + ( ( CS + MUM ) / Max( RCSe,RMSe ) ) ) ) + ( Min( ( ( RCSe - RMSe ) * ( MUM - MUC ) ) ,( ( RCSe + DS ) * Min( RCSe ,MUR ) ) ) / ( Min( Max( RCSe,CS ) ,Max( CS,MUR ) ) - ( ( RRSe * RCSe ) + ( DS - MUC ) ) ) ) ) ) ),( Min( ( ( ( ( ( MUR + MUC ) / ( MUR / MUC ) ) + Min( Max( RMSe,CS ) ,( CS / MLU ) ) ) / ( Max( Min( MUC ,DS ),( MUC - MUR ) ) - ( ( RMSe - RRSe ) - ( DS / CS ) ) ) ) + ( Min( ( ( MUM - CS ) * Min( MUC ,MUC ) ) ,( Max( DS,MUC ) + Max( MUR,MLU ) ) ) + ( Max( ( RCSe + DS ),( MLU - RMSe ) ) / ( ( MUR * MUR ) / Max( MLU,MUR ) ) ) ) ) ,( Min( ( Min( ( MUM * MUM ) ,( MUM + MUM ) ) * ( ( MUR * MUM ) * ( RRSe - DS ) ) ) ,( Max( ( MUC / MUC ),( MLU / DS ) ) + ( ( CS + MUR ) * Min( RCSe ,RMSe ) ) ) ) + ( ( Min( ( RRSe * MUR ) ,( CS * RCSe ) ) / ( ( RCSe * MUR ) + Min( MUM ,CS ) ) ) - ( Max( ( DS - RRSe ),( DS + CS ) ) / ( ( RRSe - CS ) + Max( DS,MUM ) ) ) ) ) ) * ( Min( ( Max( Min( ( MUC + RCSe ) ,( DS * RCSe ) ),Min( ( MUC - CS ) ,( MLU + MUC ) ) ) + ( ( Min( MUR ,MUC ) / ( MLU + MUC ) ) * ( ( MUR - MUC ) / ( RRSe - RMSe ) ) ) ) ,( ( ( ( RMSe * CS ) / ( RMSe + RMSe ) ) * ( ( MUC - RCSe ) + ( MUM - MUC ) ) ) + Max( Min( ( DS / MUC ) ,Max( DS,MUM ) ),Min( Max( RRSe,MUR ) ,( MUM + MUC ) ) ) ) ) - ( ( ( ( Min( DS ,RMSe ) * Min( CS ,RMSe ) ) - Min( Max( MUM,MUR ) ,( MUR - MLU ) ) ) * Min( ( Max( RCSe,MUR ) * ( RCSe + RCSe ) ) ,( Max( DS,MUC ) / Min( MUC ,RCSe ) ) ) ) - Min( Min( ( Max( RRSe,CS ) / ( CS - RCSe ) ) ,( Min( MUC ,MLU ) / ( RCSe / MLU ) ) ) ,( ( Min( MUC ,RMSe ) - Min( MLU ,MLU ) ) / ( ( MUR - DS ) / ( RRSe / RCSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU ) / Max( ( DDR + RRS ),( DDR + FirstVNF_RAM ) ) )", "choosing": "Max( ( Min( ( RRSe - RCSe ) ,( DS + MLU ) ) * ( Max( MUM,MLU ) - Max( RMSe,MLU ) ) ),Min( ( ( RCSe * MUC ) + Max( RMSe,MLU ) ) ,Min( ( MUR * DS ) ,Max( MUR,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( DDR + RRS ),( DDR + FirstVNF_RAM ) )", "choosing": "Max( ( Min( ( RRSe - RCSe ) ,( MUR + MLU ) ) * ( Max( MUM,MLU ) - Max( RMSe,MLU ) ) ),Min( ( ( RCSe * MUC ) + Max( RMSe,MLU ) ) ,Min( ( MUR * DS ) ,Max( RMSe,RRSe ) ) ) )", "obj1": 0.687374749498998, "obj2": 0.21581541691917006}, {"determining": "( Min( Max( BR,CRS ) ,BR ) - ( DDR * FirstVNF_Mem ) )", "choosing": "( ( CS * DS ) / ( ( CS - CS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) - Max( Max( BR,FirstVNF_Mem ),ARS ) )", "choosing": "Min( ( ( MUC + MLU ) - ( RCSe / RMSe ) ) ,( Max( MUR,MUM ) * ( CS / CS ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( Min( DDR ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( CS * DS ) / ( MLU * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * ARS ) / Min( Const ,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * RCSe ) )", "obj1": 0.625250501002004, "obj2": 0.26094870060880676}, {"determining": "Min( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( BR - ARS ) ) ,Min( ( FirstVNF_RAM / MRS ) ,( FirstVNF_CPU / DDR ) ) )", "choosing": "Max( Min( MUM ,( MLU + RRSe ) ),( ( CS - MUC ) / ( MLU / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,( ACS - ARS ) ) + ( CRS * Max( CRS,FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ,( ( MUM / RCSe ) / ( RMSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) - Max( Max( BR,PN ),ARS ) )", "choosing": "Min( ( ( MUC + MLU ) - ( RCSe / RMSe ) ) ,( Min( MUR ,MUM ) * ( CS - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * AMS ) - ( ( MDR * PN ) * FirstVNF_Mem_Server ) )", "choosing": "( Min( ( RCSe * RRSe ) ,Max( RCSe,MLU ) ) + ( Max( DS,RCSe ) + ( MUM - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) / ( DDR - ACS ) ) - ( Min( AMS ,ARS ) * ( AMS + ACS ) ) ) - ( ( ( MDR + FirstVNF_CPU ) / ( RRS / CRS ) ) / Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( ( RCSe - MLU ) ,Min( MUR ,DS ) ) + Min( Min( MUC ,MUC ) ,( MUR * MUR ) ) ) ,( Max( ( MLU + RCSe ),Min( DS ,DS ) ) + Min( Max( DS,MLU ) ,( MUC - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU ) / ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( ( RRSe - RCSe ) ,( MUR + MLU ) ) * ( Max( MUM,MLU ) - Max( RMSe,MLU ) ) ),Min( ( ( RCSe * MUC ) + Max( RMSe,MLU ) ) ,Min( ( MUR * DS ) ,Max( MUR,RRSe ) ) ) )", "obj1": 0.687374749498998, "obj2": 0.21581541691917006}, {"determining": "( ( Min( Min( AMS ,FirstVNF_Mem ) ,Max( MRS,MRS ) ) / Min( ( RRS + Const ) ,( PN - ARS ) ) ) * ( ( Max( Const,AMS ) - ( DDR * ACS ) ) / Min( ( MDR / ARS ) ,Min( MDR ,ACS ) ) ) )", "choosing": "( ( Min( ( MLU - RCSe ) ,Max( RCSe,RCSe ) ) / Min( ( RRSe / MUR ) ,Max( MUM,RMSe ) ) ) * ( Min( Min( RRSe ,MUR ) ,( DS + MUR ) ) * Max( Min( RCSe ,RCSe ),( DS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR + DDR ) * Min( MDR ,FirstVNF_Mem ) ) * ( Min( ARS ,FirstVNF_CPU ) * ( ARS * CRS ) ) ) - Max( Max( ( FirstVNF_RAM_Server * RRS ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ),Max( Max( AMS,FirstVNF_Mem_Server ),( Const * FirstVNF_Mem ) ) ) )", "choosing": "Max( ( Min( ( CS - MLU ) ,Max( MUC,MUR ) ) * ( ( RRSe + MLU ) / ( MUR * RRSe ) ) ),( ( ( MUR / RCSe ) / ( RRSe / MUC ) ) - Min( Max( RMSe,RCSe ) ,( MLU + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( BR - FirstVNF_Mem_Server ) ,BR ) - ( DDR * FirstVNF_Mem ) )", "choosing": "( ( ( MUR * DS ) / Max( MUR,RRSe ) ) / ( RRSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,BR ) - ( DDR * FirstVNF_Mem ) ) / ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( ( RRSe - RCSe ) ,( MUR + MLU ) ) * ( Max( MUM,MLU ) - Max( RMSe,MLU ) ) ),Min( ( ( CS * DS ) / ( RRSe - MUC ) ) ,Min( ( MUR * DS ) ,Max( MUR,RRSe ) ) ) )", "obj1": 0.6633266533066132, "obj2": 0.23381174624432585}, {"determining": "( Min( DDR ,BR ) - ( DDR * FirstVNF_Mem ) )", "choosing": "( ( CS - DS ) / ( RRSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU ) / ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( ( RRSe - RCSe ) ,( MUR + MLU ) ) * ( Max( MUM,MLU ) - Max( RMSe,MLU ) ) ),Min( ( ( RCSe * MUC ) + Max( RMSe,MLU ) ) ,Min( ( MUR * DS ) ,Max( MUR,RRSe ) ) ) )", "obj1": 0.687374749498998, "obj2": 0.21581541691917006}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * DS ) )", "obj1": 0.5851703406813628, "obj2": 0.29739066188849045}, {"determining": "( Min( RRS ,( ACS - ARS ) ) + ( CRS * ( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( MUC,RRSe ) / ( RCSe / MLU ) ) + ( Max( CS,MUC ) + ( DS / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server / ( Min( DDR ,BR ) - ( DDR * FirstVNF_Mem ) ) ) ,Min( BR ,FirstVNF_CPU ) )", "choosing": "( ( MUC / DS ) + ( RRSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,BR ) - ( DDR * FirstVNF_Mem ) )", "choosing": "( ( CS + DS ) / ( RRSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * ARS ) / ( MRS - BR ) )", "choosing": "( ( MLU + CS ) - ( MUM * MUR ) )", "obj1": 0.9478957915831663, "obj2": 0.06448145868374729}, {"determining": "( ( CRS * ARS ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RRSe * RMSe ) + Max( CS,MUR ) ) * ( Min( CS ,RMSe ) * ( MLU + RCSe ) ) ) * ( ( ( MUC / RRSe ) / Max( CS,MUR ) ) - Max( ( RCSe + MLU ),( RMSe * DS ) ) ) )", "obj1": 0.6052104208416834, "obj2": 0.27370767816535263}, {"determining": "( Min( RRS ,( ACS - ARS ) ) + ( CRS * ( CRS - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ,( ( MUM / RCSe ) / ( RMSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( BR * PN ) - FirstVNF_RAM ) / BR ) ,( Min( CRS ,PN ) * ( CRS * Min( Min( ( MRS + ACS ) ,ARS ) ,MRS ) ) ) )", "choosing": "Max( ( ( ( ( ( ( ( CS - RMSe ) - ( CS * DS ) ) + ( Min( MUM ,MUR ) - Min( RMSe ,MUR ) ) ) / Max( ( Max( RMSe,RRSe ) + ( CS * RCSe ) ),Max( ( MLU * RCSe ),( RCSe * MUR ) ) ) ) / ( Max( ( Max( MUR,MUC ) * Min( RMSe ,DS ) ),( ( MLU * CS ) - ( MUR * MUM ) ) ) / ( ( ( CS / MUM ) - ( DS + MUR ) ) / Max( Min( MUC ,RCSe ),Max( CS,MUM ) ) ) ) ) / Min( ( Max( ( ( RRSe / DS ) / ( RRSe / RRSe ) ),( ( RMSe - MLU ) / ( DS * MUR ) ) ) + Max( ( ( CS - CS ) - ( RCSe - MLU ) ),( Min( RMSe ,CS ) + ( DS / MLU ) ) ) ) ,( ( ( ( DS / MLU ) - ( MUC - MUC ) ) - ( ( RCSe + CS ) * ( DS / MUR ) ) ) - ( ( ( RCSe - MUR ) - Min( MUM ,CS ) ) * Max( ( MLU * RMSe ),( CS * CS ) ) ) ) ) ) / ( ( ( ( ( Max( MLU,MUR ) + ( CS + MUC ) ) + ( ( CS * CS ) / Min( MUM ,CS ) ) ) / ( ( ( RMSe - MUM ) * ( RCSe * MUR ) ) / Min( ( MUR - CS ) ,( RCSe * MUR ) ) ) ) + ( Max( Min( ( MUM / MUC ) ,Min( RMSe ,DS ) ),( Max( DS,MUR ) / ( RMSe - CS ) ) ) * Max( ( ( MLU - MUM ) / ( MUC + MLU ) ),( Max( CS,MUC ) / Max( CS,RMSe ) ) ) ) ) + ( ( ( ( Max( RCSe,DS ) / ( RRSe - DS ) ) / ( ( RRSe * RRSe ) / ( CS + MUC ) ) ) - ( ( ( MUC / RRSe ) - ( MUR * MUM ) ) / Min( ( MUC * MUM ) ,( MUC / MLU ) ) ) ) + ( Max( ( ( RCSe - DS ) + ( RCSe * MUR ) ),( ( MUM / MLU ) - Max( CS,RCSe ) ) ) / ( Min( Min( RCSe ,MLU ) ,( MLU / MUC ) ) * ( ( DS + RCSe ) + Max( MLU,MLU ) ) ) ) ) ) ),( ( Max( Min( ( Max( ( MUM - DS ),( RRSe - RRSe ) ) - ( ( MUM + CS ) / ( MLU / MUC ) ) ) ,Min( ( ( RCSe + MUM ) - Min( DS ,RMSe ) ) ,Max( Min( MUM ,MUM ),Max( RMSe,MUC ) ) ) ),Min( ( ( Min( MUM ,MUC ) + Min( MUC ,MUM ) ) - ( ( MUR - CS ) + ( DS / MUM ) ) ) ,Min( Min( ( MUR * RCSe ) ,( RMSe / RRSe ) ) ,( ( MUM + MUC ) * ( MLU / MUC ) ) ) ) ) + ( ( ( ( ( MUM * CS ) + Max( MUR,RMSe ) ) - ( ( RRSe * DS ) + ( RRSe + MLU ) ) ) * ( Max( Min( RRSe ,MUC ),( MLU + DS ) ) * Max( Max( RRSe,CS ),( MUR / RMSe ) ) ) ) - ( ( ( ( DS / RCSe ) + ( RRSe + MUC ) ) * Min( ( RRSe - DS ) ,Max( MUC,RMSe ) ) ) + Min( Min( ( MLU - CS ) ,( CS / DS ) ) ,Min( ( MLU * MUC ) ,( MUM - MUM ) ) ) ) ) ) / ( ( Max( ( ( ( MUM - RCSe ) + ( MLU * MLU ) ) - ( Min( RCSe ,MUC ) - ( CS * DS ) ) ),Max( ( ( RMSe - MUC ) / Min( MUR ,CS ) ),( ( DS / RMSe ) + ( MUC * MUR ) ) ) ) + ( ( ( ( DS * MUR ) + Max( RCSe,DS ) ) / ( ( DS / MUR ) - ( DS / MLU ) ) ) * ( Min( ( CS / RRSe ) ,( MLU / DS ) ) + Min( ( MUR - MLU ) ,( DS * RMSe ) ) ) ) ) + ( ( ( ( ( CS - CS ) / Max( DS,MUM ) ) - ( ( MUC - MUC ) / Max( CS,MLU ) ) ) - ( Min( Max( MUR,RMSe ) ,Min( RMSe ,RMSe ) ) * Min( ( MUM * MUC ) ,( MLU * RRSe ) ) ) ) - ( ( Min( ( MLU * CS ) ,Min( MUC ,RCSe ) ) * Min( ( DS - MLU ) ,Min( RRSe ,RCSe ) ) ) / ( ( ( MUR / RCSe ) * Min( MUC ,MUR ) ) / ( ( MLU - DS ) / ( MLU * MLU ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + RMSe ) - ( Min( DS ,MLU ) - ( RRSe - MLU ) ) )", "obj1": 0.5951903807615231, "obj2": 0.28819124569424226}, {"determining": "( ( CRS * ARS ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * MUR ) )", "obj1": 0.625250501002004, "obj2": 0.26094870060880676}, {"determining": "( ( MRS + Const ) / Max( MRS,FirstVNF_RAM_Server ) )", "choosing": "( Min( ( MUM + DS ) ,( MUM - RMSe ) ) + Max( ( MUC + CS ),Min( MLU ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU ) / Min( CRS ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( ( RRSe * RCSe ) ,( MUR + MLU ) ) * ( Max( MUM,MLU ) - Max( RMSe,MLU ) ) ),Min( ( ( RCSe * MUC ) + Max( RMSe,MLU ) ) ,Min( ( MUR * DS ) ,Max( MUR,RRSe ) ) ) )", "obj1": 0.687374749498998, "obj2": 0.21581541691917006}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) + ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6112224448897795, "obj2": 0.2709717010351351}, {"determining": "Max( ( DDR + RRS ),( DDR + FirstVNF_RAM ) )", "choosing": "Max( ( Min( ( RRSe - RCSe ) ,( MUR + MLU ) ) * ( Max( MUM,MLU ) - Max( RMSe,MLU ) ) ),Min( ( ( RCSe * MUC ) + Max( RMSe,MLU ) ) ,Min( ( MUR * DS ) ,Max( RMSe,RRSe ) ) ) )", "obj1": 0.687374749498998, "obj2": 0.21581541691917006}, {"determining": "( ( CRS * ARS ) / ( CRS * FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + RMSe ) - ( MUR - MUR ) )", "obj1": 0.625250501002004, "obj2": 0.26094870060880676}, {"determining": "Max( ( ( ( Min( ( ( Min( PN ,ACS ) / Min( MDR ,FirstVNF_RAM ) ) - ( Max( Const,FirstVNF_CPU ) + ( MRS / CRS ) ) ) ,( ( Min( MRS ,MRS ) / ( Const + FirstVNF_Mem_Server ) ) - ( ( FirstVNF_Mem_Server + ARS ) / ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) ) - Max( Min( ( ( MRS * ACS ) / Min( ACS ,AMS ) ) ,( ( DDR + ACS ) + ( FirstVNF_RAM * AMS ) ) ),( Min( ( FirstVNF_CPU * PN ) ,( FirstVNF_Mem + RRS ) ) * Min( ( RRS - DDR ) ,( Const / FirstVNF_RAM ) ) ) ) ) - ( ( ( ( Max( ARS,Const ) * Min( MDR ,PN ) ) * Min( ( MDR - ARS ) ,Max( Const,FirstVNF_Mem_Server ) ) ) + Max( Min( Min( MDR ,FirstVNF_CPU_Server ) ,Min( RRS ,AMS ) ),( ( FirstVNF_CPU_Server - ARS ) * ( AMS - MRS ) ) ) ) * ( ( ( ( FirstVNF_Mem_Server - PN ) - ( ARS + Const ) ) + ( Max( CRS,MRS ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) * Max( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),( FirstVNF_Mem * RRS ) ),( Min( DDR ,ACS ) * Max( CRS,FirstVNF_Mem_Server ) ) ) ) ) ) + Min( Min( ( Max( Max( Min( CRS ,FirstVNF_Mem_Server ),( ACS - FirstVNF_RAM ) ),( ( MDR * FirstVNF_CPU ) / Min( PN ,CRS ) ) ) * Min( Min( ( MRS * PN ) ,( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) ,( Max( ARS,PN ) * Max( ACS,FirstVNF_Mem_Server ) ) ) ) ,( Min( ( ( FirstVNF_RAM + CRS ) - Max( CRS,FirstVNF_RAM ) ) ,( ( PN + FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) ) - Max( Min( ( DDR + FirstVNF_RAM_Server ) ,( RRS + FirstVNF_CPU ) ),( ( RRS * RRS ) * ( FirstVNF_CPU_Server * AMS ) ) ) ) ) ,Min( ( Max( ( ( CRS - FirstVNF_CPU_Server ) * ( PN / BR ) ),( Max( BR,FirstVNF_Mem ) / Min( BR ,FirstVNF_CPU ) ) ) * ( Min( Max( FirstVNF_Mem,FirstVNF_Mem ) ,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) - Max( Min( ARS ,FirstVNF_CPU_Server ),Max( Const,RRS ) ) ) ) ,( ( ( ( FirstVNF_CPU / MRS ) * ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) / Max( Max( FirstVNF_CPU,FirstVNF_RAM_Server ),( RRS * FirstVNF_CPU ) ) ) * ( ( ( MDR + DDR ) - ( BR / MRS ) ) * ( Min( CRS ,FirstVNF_Mem_Server ) / ( CRS + DDR ) ) ) ) ) ) ),( ( ( ( ( ( ( BR / FirstVNF_RAM ) - Min( ACS ,PN ) ) + ( ( BR / FirstVNF_CPU ) / ( FirstVNF_Mem_Server - ACS ) ) ) - Min( ( Max( FirstVNF_Mem,ACS ) / ( BR - FirstVNF_RAM_Server ) ) ,Max( ( DDR * RRS ),Min( Const ,FirstVNF_RAM ) ) ) ) / ( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) + ( Max( CRS,ACS ) / ( FirstVNF_CPU + DDR ) ) ) + ( ( Max( CRS,PN ) - ( FirstVNF_RAM * BR ) ) + ( Min( DDR ,FirstVNF_RAM ) + ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ) ) + ( ( ( Min( ( MDR / DDR ) ,( FirstVNF_RAM + FirstVNF_CPU ) ) + Min( Min( MRS ,ARS ) ,Min( DDR ,AMS ) ) ) * ( Max( ( FirstVNF_RAM_Server * Const ),Min( ARS ,RRS ) ) + ( ( PN - MRS ) + Min( ARS ,MRS ) ) ) ) + ( ( Max( ( FirstVNF_RAM * MDR ),( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) - ( Max( ARS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU / MRS ) ) ) / ( ( Max( FirstVNF_Mem_Server,CRS ) / Min( PN ,DDR ) ) + ( Min( FirstVNF_CPU ,ACS ) * ( Const * ARS ) ) ) ) ) ) - ( Min( ( ( Min( ( Const * AMS ) ,( RRS / AMS ) ) - Min( ( Const * FirstVNF_CPU ) ,( AMS + MDR ) ) ) - ( ( ( BR * MDR ) / ( MDR / FirstVNF_RAM_Server ) ) - Min( ( BR * FirstVNF_Mem ) ,Min( PN ,ARS ) ) ) ) ,( Max( ( ( DDR - DDR ) / ( FirstVNF_RAM / CRS ) ),( ( MRS * Const ) + ( PN * RRS ) ) ) / ( ( ( RRS / FirstVNF_Mem_Server ) * ( MDR * PN ) ) * ( Max( CRS,FirstVNF_CPU ) / ( MDR - FirstVNF_CPU ) ) ) ) ) * ( Min( Max( Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ,( Const / FirstVNF_CPU_Server ) ),Min( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ,( Const - FirstVNF_RAM ) ) ) ,Max( ( ( ARS - FirstVNF_Mem ) * Min( MRS ,FirstVNF_RAM_Server ) ),( ( Const - FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server - Const ) ) ) ) / ( Max( ( ( FirstVNF_Mem / CRS ) - ( FirstVNF_Mem_Server - FirstVNF_Mem ) ),( ( FirstVNF_RAM_Server + ARS ) * Min( CRS ,BR ) ) ) + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) / ( BR * ACS ) ) * ( ( FirstVNF_CPU_Server - ACS ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "Max( ( ( ( DS - RCSe ) * MUM ) / Min( MUC ,MLU ) ),( Min( ( ( MLU + ( MUC + MUM ) ) + CS ) ,( MUC - MUC ) ) - RMSe ) )", "obj1": 0.6352705410821643, "obj2": 0.2556931730918563}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( Max( ( Min( Max( RRS,ARS ) ,( AMS / BR ) ) - ( ( MRS * MDR ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) ),( Min( Min( FirstVNF_CPU ,Const ) ,( RRS + FirstVNF_RAM ) ) - Max( ( RRS + MRS ),( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,MLU ) - ( DS - DS ) )", "obj1": 0.7074148296593187, "obj2": 0.19973501119603523}, {"determining": "Min( Min( Max( ( ( ( Max( Min( DDR ,FirstVNF_Mem ),( AMS / FirstVNF_Mem_Server ) ) + Min( ( MRS + RRS ) ,Min( AMS ,PN ) ) ) - Min( ( ( MRS / FirstVNF_Mem ) + ( MRS + FirstVNF_CPU ) ) ,Min( Min( BR ,FirstVNF_CPU ) ,Max( ARS,FirstVNF_Mem ) ) ) ) / ( ( Min( ( DDR + FirstVNF_RAM ) ,( RRS * FirstVNF_RAM ) ) - ( ( DDR / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ) - ( ( ( Const + MDR ) + Max( ARS,AMS ) ) * ( ( PN + ARS ) / ( FirstVNF_RAM_Server / ACS ) ) ) ) ),( Max( ( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / ( MRS / BR ) ) / Max( ( Const - MDR ),( FirstVNF_CPU + BR ) ) ),( ( Min( DDR ,FirstVNF_Mem ) + ( FirstVNF_RAM / Const ) ) + ( Min( FirstVNF_CPU_Server ,MRS ) - ( Const + FirstVNF_CPU ) ) ) ) + ( ( ( ( FirstVNF_CPU_Server * PN ) / ( CRS * MRS ) ) + Min( ( PN * FirstVNF_RAM ) ,( PN + PN ) ) ) + ( ( Max( FirstVNF_CPU_Server,MDR ) - Max( BR,FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem + AMS ) - ( FirstVNF_Mem - Const ) ) ) ) ) ) ,( ( ( ( ( ( BR + FirstVNF_CPU_Server ) + ( DDR - AMS ) ) + ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) + Min( DDR ,FirstVNF_RAM ) ) ) - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) * Max( ( FirstVNF_RAM + AMS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) ) + ( ( ( Max( BR,DDR ) / ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / Max( Max( Const,FirstVNF_CPU ),Min( PN ,ACS ) ) ) / Min( ( Max( MRS,Const ) + Min( MRS ,BR ) ) ,( Min( ARS ,Const ) / ( FirstVNF_Mem_Server + PN ) ) ) ) ) / ( ( Min( ( ( AMS * ACS ) * ( AMS - FirstVNF_CPU_Server ) ) ,( Min( RRS ,FirstVNF_RAM ) + ( FirstVNF_Mem * DDR ) ) ) - ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) + Max( FirstVNF_RAM,DDR ) ) * Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,BR ) ) ) ) * Max( ( ( Max( FirstVNF_RAM_Server,AMS ) + ( CRS - RRS ) ) - ( ( MRS / FirstVNF_RAM ) - Min( MRS ,MDR ) ) ),Max( ( ( CRS / FirstVNF_Mem ) / Min( MDR ,CRS ) ),( ( Const * ACS ) + ( FirstVNF_CPU - FirstVNF_RAM ) ) ) ) ) ) ) ,Max( ( ( ( ( Min( Max( CRS,ARS ) ,Min( ACS ,MRS ) ) / Max( ( FirstVNF_RAM_Server + PN ),( Const - AMS ) ) ) / ( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * ( RRS - RRS ) ) / ( ( RRS * ACS ) + Min( CRS ,FirstVNF_Mem ) ) ) ) + Max( Max( ( Min( Const ,FirstVNF_CPU_Server ) * Min( AMS ,FirstVNF_CPU ) ),( ( FirstVNF_RAM / MRS ) - Max( FirstVNF_Mem,FirstVNF_CPU ) ) ),( Min( ( FirstVNF_CPU * DDR ) ,( ACS * AMS ) ) * Max( ( FirstVNF_CPU_Server * Const ),( Const * FirstVNF_Mem ) ) ) ) ) + Min( ( ( ( ( ACS * CRS ) - ( MDR + MDR ) ) - Max( ( BR + AMS ),( ARS - FirstVNF_RAM_Server ) ) ) * ( ( ( MRS / CRS ) * Min( FirstVNF_Mem ,PN ) ) - ( ( BR - DDR ) / Min( AMS ,CRS ) ) ) ) ,( Max( Min( Min( FirstVNF_RAM_Server ,CRS ) ,( Const + CRS ) ),( Min( ARS ,AMS ) - ( FirstVNF_CPU / BR ) ) ) / ( Max( ( AMS - ARS ),( RRS + FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_RAM_Server ,BR ) + ( ACS / FirstVNF_Mem_Server ) ) ) ) ) ),( Min( ( ( ( Min( ACS ,BR ) + ( FirstVNF_CPU * RRS ) ) + ( ( DDR * BR ) / ( CRS + FirstVNF_CPU_Server ) ) ) + ( ( ( DDR - BR ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) - ( ( Const * ACS ) * ( AMS * FirstVNF_RAM ) ) ) ) ,( ( ( ( CRS / AMS ) * ( MRS / FirstVNF_Mem ) ) / ( Max( AMS,MRS ) + ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) ) / ( ( ( Const + MDR ) * Max( Const,MRS ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) - ( AMS * AMS ) ) ) ) ) / ( ( ( ( ( FirstVNF_RAM * AMS ) * ( ARS / MDR ) ) * Max( ( FirstVNF_Mem - PN ),( FirstVNF_Mem_Server - ARS ) ) ) * Max( ( Min( AMS ,CRS ) - Min( ARS ,BR ) ),Max( Min( ARS ,FirstVNF_CPU_Server ),( ACS + FirstVNF_RAM_Server ) ) ) ) * ( ( ( ( BR + FirstVNF_RAM ) * Min( Const ,FirstVNF_Mem ) ) + Max( ( ARS + ACS ),( DDR + FirstVNF_RAM_Server ) ) ) + ( ( Min( ACS ,PN ) + Min( RRS ,FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem ),( CRS * BR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( RRSe * RMSe ) + Max( CS,MUR ) ) * ( Min( CS ,RMSe ) * ( MLU + CS ) ) ) * ( ( ( MUC / RRSe ) / Max( CS,MUR ) ) - Max( ( RCSe + MLU ),( RMSe * DS ) ) ) )", "obj1": 0.9959919839679359, "obj2": 0.0013171715876164084}, {"determining": "( ( Min( DDR ,BR ) - ( DDR * FirstVNF_Mem ) ) / ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( ( RRSe - RCSe ) ,( MUR + MLU ) ) * ( Max( MUM,MLU ) - Max( RMSe,MLU ) ) ),Min( ( ( CS * DS ) / ( RRSe - MUC ) ) ,Min( ( MUR * DS ) ,Max( MUR,RRSe ) ) ) )", "obj1": 0.6633266533066132, "obj2": 0.23381174624432585}, {"determining": "( ( RRS - FirstVNF_CPU ) / ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( ( RRSe - RCSe ) ,( MUR + MLU ) ) * ( Max( MUM,MLU ) - Max( RMSe,MLU ) ) ),Min( ( ( RCSe * MUC ) + Max( RMSe,MLU ) ) ,Min( ( MUR * DS ) ,Max( MUR,RRSe ) ) ) )", "obj1": 0.687374749498998, "obj2": 0.21581541691917006}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) - Max( Max( BR,CRS ),MDR ) )", "choosing": "Min( ( Min( ( RCSe - MLU ) ,Min( MUR ,DS ) ) + Min( Min( MUC ,MUC ) ,( MUR * MUR ) ) ) ,( Max( ( MLU + RCSe ),Min( DS ,DS ) ) + Min( Max( CS,MLU ) ,( MUC - RCSe ) ) ) )", "obj1": 0.7314629258517034, "obj2": 0.19734451165598887}, {"determining": "( ( Max( ( ( ( Max( Max( FirstVNF_RAM_Server,DDR ),( PN - MRS ) ) / Min( ( ACS - ARS ) ,( BR * MRS ) ) ) * ( ( ( FirstVNF_CPU + AMS ) * ( FirstVNF_CPU_Server / MDR ) ) + ( ( MRS / FirstVNF_CPU_Server ) * Max( Const,ACS ) ) ) ) * ( ( ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) * Max( AMS,BR ) ) - Min( ( BR / ARS ) ,( PN + BR ) ) ) + Max( Min( ( DDR + FirstVNF_CPU ) ,( FirstVNF_RAM - FirstVNF_Mem ) ),( ( ARS + RRS ) + ( CRS + RRS ) ) ) ) ),( ( ( ( Min( ARS ,MRS ) / Min( ARS ,Const ) ) + ( ( Const * ARS ) / ( Const * PN ) ) ) * ( Max( ( DDR - PN ),( BR + BR ) ) + Max( Max( DDR,FirstVNF_RAM ),( FirstVNF_RAM_Server * CRS ) ) ) ) * Max( Max( ( ( FirstVNF_Mem - ACS ) * ( MDR - ACS ) ),( ( PN + AMS ) * Max( DDR,MRS ) ) ),( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / ( BR + CRS ) ) / Max( Min( FirstVNF_Mem ,Const ),Max( MRS,MRS ) ) ) ) ) ) - Min( ( ( Max( Max( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ),( BR - FirstVNF_CPU ) ),Max( ( BR - FirstVNF_RAM ),( BR / FirstVNF_CPU ) ) ) / ( ( ( FirstVNF_RAM_Server / RRS ) / ( ACS + Const ) ) / ( ( BR + FirstVNF_RAM_Server ) * ( CRS / BR ) ) ) ) - ( ( ( ( MRS - DDR ) / Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) / Max( Max( AMS,FirstVNF_Mem_Server ),Min( Const ,CRS ) ) ) / Max( Min( Max( FirstVNF_CPU_Server,BR ) ,( MRS + FirstVNF_CPU_Server ) ),Max( ( DDR + FirstVNF_Mem ),Min( ARS ,RRS ) ) ) ) ) ,Max( Max( ( Min( ( RRS - FirstVNF_RAM_Server ) ,( FirstVNF_CPU * ARS ) ) / ( Max( BR,MDR ) * ( RRS / FirstVNF_Mem ) ) ),( Max( ( FirstVNF_RAM_Server * MDR ),( AMS * FirstVNF_CPU_Server ) ) + Max( ( BR - ARS ),( FirstVNF_RAM / ARS ) ) ) ),( ( ( ( FirstVNF_Mem / Const ) - ( DDR - ACS ) ) * ( ( ARS / MDR ) + Min( PN ,ACS ) ) ) * ( Min( ( PN / RRS ) ,( AMS + MRS ) ) - Max( Min( DDR ,FirstVNF_CPU ),( DDR - FirstVNF_RAM_Server ) ) ) ) ) ) ) * Min( ( ( Min( Min( ( ( CRS + FirstVNF_CPU_Server ) / ( AMS * FirstVNF_RAM ) ) ,( ( Const - FirstVNF_Mem_Server ) * ( FirstVNF_Mem + RRS ) ) ) ,( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * ( ARS / FirstVNF_CPU ) ) / ( Max( MDR,FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) ) - ( ( Max( ( CRS - BR ),( MDR - AMS ) ) / Min( ( FirstVNF_CPU + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) * ( ( ( FirstVNF_RAM_Server - DDR ) * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) * ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * Min( FirstVNF_CPU ,AMS ) ) ) ) ) * ( ( Min( ( ( AMS + BR ) - Min( FirstVNF_RAM ,Const ) ) ,Max( ( AMS / FirstVNF_RAM ),( FirstVNF_CPU / CRS ) ) ) + ( ( Min( Const ,FirstVNF_RAM ) - ( MRS - FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) / ( CRS * FirstVNF_RAM ) ) ) ) / ( ( ( ( AMS * ACS ) * ( AMS + CRS ) ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) + Min( ( ( PN / FirstVNF_Mem ) + ( FirstVNF_Mem_Server * MRS ) ) ,( ( MRS - ARS ) / Min( PN ,MDR ) ) ) ) ) ) ,Min( ( Max( ( ( ( FirstVNF_RAM - Const ) - ( FirstVNF_Mem - ACS ) ) / ( ( BR - ARS ) + Min( AMS ,MRS ) ) ),( Max( Min( FirstVNF_RAM ,ACS ),Min( RRS ,RRS ) ) / Max( ( RRS / FirstVNF_RAM_Server ),Max( ARS,FirstVNF_Mem ) ) ) ) * Min( Min( Min( ( CRS / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,CRS ) ) ,( ( BR - RRS ) * ( FirstVNF_Mem - Const ) ) ) ,( Max( Max( FirstVNF_RAM,CRS ),( AMS + ACS ) ) + Min( ( CRS * MDR ) ,( CRS * FirstVNF_RAM ) ) ) ) ) ,Max( ( ( ( ( PN / RRS ) + Max( FirstVNF_CPU_Server,CRS ) ) - ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) / ( FirstVNF_RAM + ARS ) ) ) + ( Min( Min( RRS ,FirstVNF_Mem_Server ) ,( CRS + BR ) ) * Max( ( PN / FirstVNF_Mem ),( ARS - ACS ) ) ) ),( Max( ( ( RRS - CRS ) + ( Const - AMS ) ),( Min( Const ,ACS ) + Min( Const ,Const ) ) ) * ( ( ( FirstVNF_Mem * PN ) / Max( MDR,PN ) ) * ( ( FirstVNF_Mem * FirstVNF_CPU ) / Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ) ) ) ) ) )", "choosing": "Min( Max( RRSe,MLU ) ,( CS + MLU ) )", "obj1": 0.8136272545090181, "obj2": 0.15207427374304433}, {"determining": "( ( CRS * ( MDR / Min( MDR ,FirstVNF_Mem ) ) ) / ( Const / FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + RMSe ) - Min( ( RCSe / MUR ) ,Max( RCSe,RMSe ) ) )", "obj1": 0.6593186372745491, "obj2": 0.24993515268012198}, {"determining": "( ( CRS * FirstVNF_Mem ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + RMSe ) - ( RRSe * MUR ) )", "obj1": 0.625250501002004, "obj2": 0.26094870060880676}, {"determining": "( ( RRS - FirstVNF_CPU ) / ( CRS - ( ( BR * PN ) * FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Min( ( RRSe - RCSe ) ,( MUR + MLU ) ) * ( Max( MUM,MLU ) - Max( RMSe,MLU ) ) ),Min( ( ( RCSe * MUC ) + Max( Min( ( RCSe * RRSe ) ,( RCSe / MLU ) ),MLU ) ) ,Min( ( MUR * DS ) ,Max( MUR,RRSe ) ) ) )", "obj1": 0.9859719438877755, "obj2": 0.005647820977610552}, {"determining": "( ( RRS - FirstVNF_CPU ) / ( CRS - MRS ) )", "choosing": "Max( ( Min( ( RRSe / RCSe ) ,( MUR + MLU ) ) * ( Max( MUM,MLU ) - Max( RMSe,MLU ) ) ),Min( ( ( RCSe * MUC ) + Max( RMSe,MLU ) ) ,Min( ( MUR * DS ) ,Max( MUR,RRSe ) ) ) )", "obj1": 0.687374749498998, "obj2": 0.21581541691917006}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) - Max( Max( BR,CRS ),MDR ) )", "choosing": "Min( ( ( MUC + MLU ) - ( RCSe / RMSe ) ) ,( RRSe + MUR ) )", "obj1": 0.7014028056112225, "obj2": 0.206931107984141}, {"determining": "( ( RRS - FirstVNF_CPU ) / ( CRS + FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( ( RRSe - RCSe ) ,( MUR + MLU ) ) * ( Max( MUM,MLU ) - Max( RMSe,MLU ) ) ),Min( ( ( RCSe * CS ) + Max( RMSe,MLU ) ) ,Min( ( MUR * DS ) ,Max( MUR,RRSe ) ) ) )", "obj1": 0.687374749498998, "obj2": 0.21581541691917006}, {"determining": "( ( Min( DDR ,BR ) - ( DDR * FirstVNF_Mem ) ) / ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( ( RRSe - RCSe ) ,( MUR + MLU ) ) * ( Max( MUM,MLU ) - Max( RMSe,MLU ) ) ),Min( ( ( CS * DS ) / ( RRSe - MUC ) ) ,Min( ( MUR * DS ) ,Max( MUR,RRSe ) ) ) )", "obj1": 0.6633266533066132, "obj2": 0.23381174624432585}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),( BR / FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6112224448897795, "obj2": 0.2709717010351351}, {"determining": "( Max( ( Max( ( Min( Max( RRS,ARS ) ,( AMS / BR ) ) + ( ( MRS * MDR ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) ),( Min( Min( FirstVNF_CPU ,Const ) ,( RRS + FirstVNF_RAM ) ) - Max( ( RRS + MRS ),( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) * FirstVNF_CPU_Server ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) + ( MUC * RCSe ) ) * MLU ) )", "obj1": 0.6192384769539078, "obj2": 0.26779746608804705}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( Max( ( Min( Max( RRS,ARS ) ,( AMS / BR ) ) + ( ( MRS * MDR ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) ),( Min( Min( FirstVNF_CPU ,Const ) ,( RRS + FirstVNF_RAM ) ) - Max( ( RRS + MRS ),( Const + FirstVNF_RAM ) ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,RCSe ) - ( DS / DS ) )", "obj1": 0.7114228456913828, "obj2": 0.1988306179151001}, {"determining": "Max( ( DDR + RRS ),( DDR + FirstVNF_RAM ) )", "choosing": "Max( ( Min( ( RRSe - RCSe ) ,( MUR + MLU ) ) * ( Max( MUM,MLU ) - Max( RMSe,MLU ) ) ),Min( ( ( RCSe * MUC ) + Max( RMSe,MLU ) ) ,Min( ( MUR * DS ) ,Max( MUR,RRSe ) ) ) )", "obj1": 0.687374749498998, "obj2": 0.21581541691917006}, {"determining": "( ( CRS * ARS ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * MUR ) )", "obj1": 0.625250501002004, "obj2": 0.26094870060880676}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) - Max( Max( BR,( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) / ( DDR - ACS ) ) - ( Min( AMS ,CRS ) * ( AMS + ACS ) ) ) ),MDR ) )", "choosing": "Min( ( ( MUC + MUR ) - ( RCSe / RMSe ) ) ,( RRSe + MUR ) )", "obj1": 0.7394789579158316, "obj2": 0.16296591957832565}, {"determining": "( Max( Max( AMS,FirstVNF_Mem_Server ),( Const * FirstVNF_Mem ) ) - Max( FirstVNF_Mem,MRS ) )", "choosing": "( ( Max( MLU,Max( MUR,RRSe ) ) + RRSe ) * Max( RMSe,Min( RMSe ,( MUM * RMSe ) ) ) )", "obj1": 0.8537074148296593, "obj2": 0.12604436951871106}, {"determining": "Max( ( DDR * ACS ),( DDR + FirstVNF_RAM ) )", "choosing": "Max( ( Min( ( RRSe - RCSe ) ,( MUR + MLU ) ) * Min( Min( RRSe ,MUR ) ,( DS + MUR ) ) ),Min( ( ( RCSe * MUC ) + Max( RMSe,MLU ) ) ,Min( ( MUR * DS ) ,Max( MUR,RRSe ) ) ) )", "obj1": 0.6833667334669339, "obj2": 0.2202165517238509}], "4": [{"determining": "( Min( DDR ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( CS * DS ) / ( MLU * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * ARS ) / Min( Const ,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * RCSe ) )", "obj1": 0.625250501002004, "obj2": 0.26094870060880676}, {"determining": "Min( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( BR - ARS ) ) ,Min( ( FirstVNF_RAM / MRS ) ,( FirstVNF_CPU / DDR ) ) )", "choosing": "Max( Min( MUM ,( MLU + RRSe ) ),( ( CS - MUC ) / ( MLU / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,( ACS - ARS ) ) + ( CRS * Max( CRS,FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ,( ( MUM / RCSe ) / ( RMSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,CRS ) - Max( Max( BR,PN ),ARS ) )", "choosing": "Min( ( ( MUC + MLU ) - ( RCSe / RMSe ) ) ,( Min( MUR ,MUM ) * ( CS - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * AMS ) - ( ( MDR * PN ) * FirstVNF_Mem_Server ) )", "choosing": "( Min( ( RCSe * RRSe ) ,Max( RCSe,MLU ) ) + ( Max( DS,RCSe ) + ( MUM - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) / ( DDR - ACS ) ) - ( Min( AMS ,ARS ) * ( AMS + ACS ) ) ) - ( ( ( MDR + FirstVNF_CPU ) / ( RRS / CRS ) ) / Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( ( RCSe - MLU ) ,Min( MUR ,DS ) ) + Min( Min( MUC ,MUC ) ,( MUR * MUR ) ) ) ,( Max( ( MLU + RCSe ),Min( DS ,DS ) ) + Min( Max( DS,MLU ) ,( MUC - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( AMS ,FirstVNF_Mem ) ,Max( MRS,MRS ) ) / Min( ( RRS + Const ) ,( PN - ARS ) ) ) * ( ( Max( Const,AMS ) - ( DDR * ACS ) ) / Min( ( MDR / ARS ) ,Min( MDR ,ACS ) ) ) )", "choosing": "( ( Min( ( MLU - RCSe ) ,Max( RCSe,RCSe ) ) / Min( ( RRSe / MUR ) ,Max( MUM,RMSe ) ) ) * ( Min( Min( RRSe ,MUR ) ,( DS + MUR ) ) * Max( Min( RCSe ,RCSe ),( DS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR + DDR ) * Min( MDR ,FirstVNF_Mem ) ) * ( Min( ARS ,FirstVNF_CPU ) * ( ARS * CRS ) ) ) - Max( Max( ( FirstVNF_RAM_Server * RRS ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ),Max( Max( AMS,FirstVNF_Mem_Server ),( Const * FirstVNF_Mem ) ) ) )", "choosing": "Max( ( Min( ( CS - MLU ) ,Max( MUC,MUR ) ) * ( ( RRSe + MLU ) / ( MUR * RRSe ) ) ),( ( ( MUR / RCSe ) / ( RRSe / MUC ) ) - Min( Max( RMSe,RCSe ) ,( MLU + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * DS ) )", "obj1": 0.5851703406813628, "obj2": 0.29739066188849045}, {"determining": "( ( CRS * ARS ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RRSe * RMSe ) + Max( CS,MUR ) ) * ( Min( CS ,RMSe ) * ( MLU + RCSe ) ) ) * ( ( ( MUC / RRSe ) / Max( CS,MUR ) ) - Max( ( RCSe + MLU ),( RMSe * DS ) ) ) )", "obj1": 0.6052104208416834, "obj2": 0.27370767816535263}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + RMSe ) - ( Min( DS ,MLU ) - ( RRSe - MLU ) ) )", "obj1": 0.5951903807615231, "obj2": 0.28819124569424226}, {"determining": "( ( CRS * ARS ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * MUR ) )", "obj1": 0.625250501002004, "obj2": 0.26094870060880676}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) + ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6112224448897795, "obj2": 0.2709717010351351}, {"determining": "( ( CRS * ARS ) / ( CRS * FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + RMSe ) - ( MUR - MUR ) )", "obj1": 0.625250501002004, "obj2": 0.26094870060880676}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( Max( ( Min( Max( RRS,ARS ) ,( AMS / BR ) ) - ( ( MRS * MDR ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) ),( Min( Min( FirstVNF_CPU ,Const ) ,( RRS + FirstVNF_RAM ) ) - Max( ( RRS + MRS ),( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,MLU ) - ( DS - DS ) )", "obj1": 0.7074148296593187, "obj2": 0.19973501119603523}, {"determining": "Min( Min( Max( ( ( ( Max( Min( DDR ,FirstVNF_Mem ),( AMS / FirstVNF_Mem_Server ) ) + Min( ( MRS + RRS ) ,Min( AMS ,PN ) ) ) - Min( ( ( MRS / FirstVNF_Mem ) + ( MRS + FirstVNF_CPU ) ) ,Min( Min( BR ,FirstVNF_CPU ) ,Max( ARS,FirstVNF_Mem ) ) ) ) / ( ( Min( ( DDR + FirstVNF_RAM ) ,( RRS * FirstVNF_RAM ) ) - ( ( DDR / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ) - ( ( ( Const + MDR ) + Max( ARS,AMS ) ) * ( ( PN + ARS ) / ( FirstVNF_RAM_Server / ACS ) ) ) ) ),( Max( ( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / ( MRS / BR ) ) / Max( ( Const - MDR ),( FirstVNF_CPU + BR ) ) ),( ( Min( DDR ,FirstVNF_Mem ) + ( FirstVNF_RAM / Const ) ) + ( Min( FirstVNF_CPU_Server ,MRS ) - ( Const + FirstVNF_CPU ) ) ) ) + ( ( ( ( FirstVNF_CPU_Server * PN ) / ( CRS * MRS ) ) + Min( ( PN * FirstVNF_RAM ) ,( PN + PN ) ) ) + ( ( Max( FirstVNF_CPU_Server,MDR ) - Max( BR,FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem + AMS ) - ( FirstVNF_Mem - Const ) ) ) ) ) ) ,( ( ( ( ( ( BR + FirstVNF_CPU_Server ) + ( DDR - AMS ) ) + ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) + Min( DDR ,FirstVNF_RAM ) ) ) - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) * Max( ( FirstVNF_RAM + AMS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) ) + ( ( ( Max( BR,DDR ) / ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / Max( Max( Const,FirstVNF_CPU ),Min( PN ,ACS ) ) ) / Min( ( Max( MRS,Const ) + Min( MRS ,BR ) ) ,( Min( ARS ,Const ) / ( FirstVNF_Mem_Server + PN ) ) ) ) ) / ( ( Min( ( ( AMS * ACS ) * ( AMS - FirstVNF_CPU_Server ) ) ,( Min( RRS ,FirstVNF_RAM ) + ( FirstVNF_Mem * DDR ) ) ) - ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) + Max( FirstVNF_RAM,DDR ) ) * Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,BR ) ) ) ) * Max( ( ( Max( FirstVNF_RAM_Server,AMS ) + ( CRS - RRS ) ) - ( ( MRS / FirstVNF_RAM ) - Min( MRS ,MDR ) ) ),Max( ( ( CRS / FirstVNF_Mem ) / Min( MDR ,CRS ) ),( ( Const * ACS ) + ( FirstVNF_CPU - FirstVNF_RAM ) ) ) ) ) ) ) ,Max( ( ( ( ( Min( Max( CRS,ARS ) ,Min( ACS ,MRS ) ) / Max( ( FirstVNF_RAM_Server + PN ),( Const - AMS ) ) ) / ( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * ( RRS - RRS ) ) / ( ( RRS * ACS ) + Min( CRS ,FirstVNF_Mem ) ) ) ) + Max( Max( ( Min( Const ,FirstVNF_CPU_Server ) * Min( AMS ,FirstVNF_CPU ) ),( ( FirstVNF_RAM / MRS ) - Max( FirstVNF_Mem,FirstVNF_CPU ) ) ),( Min( ( FirstVNF_CPU * DDR ) ,( ACS * AMS ) ) * Max( ( FirstVNF_CPU_Server * Const ),( Const * FirstVNF_Mem ) ) ) ) ) + Min( ( ( ( ( ACS * CRS ) - ( MDR + MDR ) ) - Max( ( BR + AMS ),( ARS - FirstVNF_RAM_Server ) ) ) * ( ( ( MRS / CRS ) * Min( FirstVNF_Mem ,PN ) ) - ( ( BR - DDR ) / Min( AMS ,CRS ) ) ) ) ,( Max( Min( Min( FirstVNF_RAM_Server ,CRS ) ,( Const + CRS ) ),( Min( ARS ,AMS ) - ( FirstVNF_CPU / BR ) ) ) / ( Max( ( AMS - ARS ),( RRS + FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_RAM_Server ,BR ) + ( ACS / FirstVNF_Mem_Server ) ) ) ) ) ),( Min( ( ( ( Min( ACS ,BR ) + ( FirstVNF_CPU * RRS ) ) + ( ( DDR * BR ) / ( CRS + FirstVNF_CPU_Server ) ) ) + ( ( ( DDR - BR ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) - ( ( Const * ACS ) * ( AMS * FirstVNF_RAM ) ) ) ) ,( ( ( ( CRS / AMS ) * ( MRS / FirstVNF_Mem ) ) / ( Max( AMS,MRS ) + ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) ) / ( ( ( Const + MDR ) * Max( Const,MRS ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) - ( AMS * AMS ) ) ) ) ) / ( ( ( ( ( FirstVNF_RAM * AMS ) * ( ARS / MDR ) ) * Max( ( FirstVNF_Mem - PN ),( FirstVNF_Mem_Server - ARS ) ) ) * Max( ( Min( AMS ,CRS ) - Min( ARS ,BR ) ),Max( Min( ARS ,FirstVNF_CPU_Server ),( ACS + FirstVNF_RAM_Server ) ) ) ) * ( ( ( ( BR + FirstVNF_RAM ) * Min( Const ,FirstVNF_Mem ) ) + Max( ( ARS + ACS ),( DDR + FirstVNF_RAM_Server ) ) ) + ( ( Min( ACS ,PN ) + Min( RRS ,FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem ),( CRS * BR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( RRSe * RMSe ) + Max( CS,MUR ) ) * ( Min( CS ,RMSe ) * ( MLU + CS ) ) ) * ( ( ( MUC / RRSe ) / Max( CS,MUR ) ) - Max( ( RCSe + MLU ),( RMSe * DS ) ) ) )", "obj1": 0.9959919839679359, "obj2": 0.0013171715876164084}, {"determining": "( ( CRS * FirstVNF_Mem ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + RMSe ) - ( RRSe * MUR ) )", "obj1": 0.625250501002004, "obj2": 0.26094870060880676}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),( BR / FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6112224448897795, "obj2": 0.2709717010351351}, {"determining": "( ( CRS * ARS ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * MUR ) )", "obj1": 0.625250501002004, "obj2": 0.26094870060880676}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) - Max( Max( BR,( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) / ( DDR - ACS ) ) - ( Min( AMS ,CRS ) * ( AMS + ACS ) ) ) ),MDR ) )", "choosing": "Min( ( ( MUC + MUR ) - ( RCSe / RMSe ) ) ,( RRSe + MUR ) )", "obj1": 0.7394789579158316, "obj2": 0.16296591957832565}, {"determining": "( Max( Max( AMS,FirstVNF_Mem_Server ),( Const * FirstVNF_Mem ) ) - Max( FirstVNF_Mem,MRS ) )", "choosing": "( ( Max( MLU,Max( MUR,RRSe ) ) + RRSe ) * Max( RMSe,Min( RMSe ,( MUM * RMSe ) ) ) )", "obj1": 0.8537074148296593, "obj2": 0.12604436951871106}, {"determining": "( ( CRS * ARS ) / ( Const / ( ACS - ARS ) ) )", "choosing": "( ( RMSe + Min( ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ,( ( MUM * RCSe ) / ( RMSe / MUC ) ) ) ) - ( MUM * MUR ) )", "obj1": 0.9458917835671342, "obj2": 0.0360747025033249}, {"determining": "( ( CRS * ARS ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * MUR ) )", "obj1": 0.625250501002004, "obj2": 0.26094870060880676}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( Max( ARS,( Min( Min( FirstVNF_CPU ,Const ) ,( RRS + FirstVNF_RAM ) ) - Max( ( RRS + MRS ),( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,MLU ) - ( DS / DS ) )", "obj1": 0.7074148296593187, "obj2": 0.19973501119603523}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( Max( ( Min( Max( RRS,ARS ) ,( AMS / BR ) ) + Min( ( MRS * MDR ) ,Max( FirstVNF_CPU,FirstVNF_Mem ) ) ),( Min( Min( FirstVNF_CPU ,Const ) ,( RRS + FirstVNF_RAM ) ) - Max( ( RRS + MRS ),( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( DS - MLU ) - ( DS / DS ) )", "obj1": 0.7074148296593187, "obj2": 0.19973501119603523}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( Max( ( Min( Max( RRS,ARS ) ,( AMS - BR ) ) + ( ( MRS * MDR ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) ),( Min( Min( FirstVNF_CPU ,Const ) ,( RRS + FirstVNF_RAM ) ) - Max( ( RRS + MRS ),( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,MLU ) - ( DS / MUR ) )", "obj1": 0.7074148296593187, "obj2": 0.19973501119603523}, {"determining": "( Min( RRS ,( ACS - ARS ) ) + ( CRS * Min( CRS ,ARS ) ) )", "choosing": "Min( ( ( RMSe + RMSe ) - ( MUM * MUR ) ) ,( ( MUM / RCSe ) + ( RMSe / MUC ) ) )", "obj1": 0.9378757515030061, "obj2": 0.05428671466379986}, {"determining": "( ( CRS * ARS ) / ( MRS - BR ) )", "choosing": "Max( ( Min( ( RRSe - RCSe ) ,( MUR + MLU ) ) * Min( Min( RRSe ,MUR ) ,( DS + MUR ) ) ),Min( ( ( RCSe * MUC ) + Max( RMSe,MLU ) ) ,( ( MUR * DS ) / ( MUR * RRSe ) ) ) )", "obj1": 0.9739478957915831, "obj2": 0.024075561708022657}, {"determining": "Max( ( DDR + RRS ),( DDR + FirstVNF_RAM ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * MUR ) )", "obj1": 0.625250501002004, "obj2": 0.26094870060880676}, {"determining": "( ( CRS * ARS ) / ( Const * ( DDR * FirstVNF_Mem ) ) )", "choosing": "( ( ( CS - DS ) / ( RRSe - MUC ) ) * ( ( ( MUC / RRSe ) / Max( CS,MUR ) ) - Max( ( RCSe + MLU ),( RMSe * DS ) ) ) )", "obj1": 0.627254509018036, "obj2": 0.2587557465381599}, {"determining": "( ( CRS * ARS ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * MUR ) )", "obj1": 0.625250501002004, "obj2": 0.26094870060880676}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) - Max( Max( BR,CRS ),MDR ) )", "choosing": "( ( MUM + RMSe ) - ( MUM * MUR ) )", "obj1": 0.6693386773547094, "obj2": 0.2113416048535508}, {"determining": "( ( CRS * ARS ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,MLU ) - ( DS / DS ) )", "obj1": 0.6993987975951904, "obj2": 0.202906168808543}, {"determining": "Min( Min( Max( ( ( ( Max( Min( DDR ,FirstVNF_Mem ),( AMS / FirstVNF_Mem_Server ) ) + Min( ( MRS + RRS ) ,Min( AMS ,PN ) ) ) - Min( ( ( MRS / FirstVNF_Mem ) + ( MRS + FirstVNF_CPU ) ) ,Min( Min( BR ,FirstVNF_CPU ) ,Max( ARS,FirstVNF_Mem ) ) ) ) / ( ( Min( ( DDR + FirstVNF_RAM ) ,( RRS * FirstVNF_RAM ) ) - ( ( DDR / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ) - ( ( ( Const + MDR ) + Max( ARS,AMS ) ) * ( ( PN + ARS ) / ( FirstVNF_RAM_Server / ACS ) ) ) ) ),( Max( ( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / ( MRS / BR ) ) / Max( ( Const - MDR ),( FirstVNF_CPU + BR ) ) ),( ( Min( DDR ,FirstVNF_Mem ) + ( FirstVNF_RAM / Const ) ) + ( Max( FirstVNF_CPU_Server,MRS ) - ( Const + FirstVNF_CPU ) ) ) ) + ( ( ( ( FirstVNF_CPU_Server * PN ) / ( CRS * MRS ) ) + Min( ( PN * FirstVNF_RAM ) ,( PN + PN ) ) ) + ( ( Max( FirstVNF_CPU_Server,MDR ) - Max( BR,FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem + AMS ) - ( FirstVNF_Mem - Const ) ) ) ) ) ) ,( ( ( ( ( ( BR + FirstVNF_CPU_Server ) + ( DDR - AMS ) ) + ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) + Min( DDR ,FirstVNF_RAM ) ) ) - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) * Max( ( FirstVNF_RAM + AMS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) ) + ( ( ( Max( BR,DDR ) / ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / Max( Max( Const,FirstVNF_CPU ),Min( PN ,ACS ) ) ) / Min( ( Max( MRS,Const ) + Min( MRS ,BR ) ) ,( Min( ARS ,Const ) / ( FirstVNF_Mem_Server + PN ) ) ) ) ) / ( ( Min( ( ( AMS * ACS ) * ( AMS - FirstVNF_CPU_Server ) ) ,( Min( RRS ,FirstVNF_RAM ) + ( FirstVNF_Mem * DDR ) ) ) - ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) + Max( FirstVNF_RAM,DDR ) ) * Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,BR ) ) ) ) * Max( ( ( Max( FirstVNF_RAM_Server,AMS ) + ( CRS - RRS ) ) - ( ( MRS / FirstVNF_RAM ) - Min( MRS ,MDR ) ) ),Max( ( ( CRS / FirstVNF_Mem ) / Min( MDR ,CRS ) ),( ( Const * ACS ) + ( FirstVNF_CPU - FirstVNF_RAM ) ) ) ) ) ) ) ,Max( ( ( ( ( Min( Max( CRS,ARS ) ,Min( ACS ,MRS ) ) / Max( ( FirstVNF_RAM_Server + PN ),( Const - AMS ) ) ) / ( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * ( RRS - RRS ) ) / ( ( RRS * ACS ) + Min( CRS ,FirstVNF_Mem ) ) ) ) + Max( Max( ( Min( Const ,FirstVNF_CPU_Server ) * Min( AMS ,FirstVNF_CPU ) ),( ( FirstVNF_RAM / MRS ) - Max( FirstVNF_Mem,FirstVNF_CPU ) ) ),( Min( ( FirstVNF_CPU * DDR ) ,( ACS * AMS ) ) * Max( ( FirstVNF_CPU_Server * Const ),( Const * FirstVNF_Mem ) ) ) ) ) + Min( ( ( ( ( ACS * CRS ) - ( MDR + MDR ) ) - Max( ( BR + AMS ),( ARS - FirstVNF_RAM_Server ) ) ) * ( ( ( MRS / CRS ) * Min( FirstVNF_Mem ,PN ) ) - ( ( BR - DDR ) / Min( AMS ,CRS ) ) ) ) ,( Max( Min( Min( FirstVNF_RAM_Server ,CRS ) ,( Const + CRS ) ),( Min( ARS ,AMS ) - ( FirstVNF_CPU / BR ) ) ) / ( Max( ( AMS - ARS ),( RRS + FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_RAM_Server ,BR ) + ( ACS / FirstVNF_Mem_Server ) ) ) ) ) ),( Min( ( ( ( Min( ACS ,BR ) + ( FirstVNF_CPU * RRS ) ) + ( ( DDR * BR ) / ( CRS + FirstVNF_CPU_Server ) ) ) + ( ( ( DDR - BR ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) - ( ( Const * ACS ) * ( AMS * FirstVNF_RAM ) ) ) ) ,( ( ( ( CRS / AMS ) * ( MRS / FirstVNF_Mem ) ) / ( Max( AMS,MRS ) + ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) ) / ( ( ( Const + MDR ) * Max( Const,MRS ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) - ( AMS * AMS ) ) ) ) ) / ( ( ( ( ( FirstVNF_RAM * AMS ) * ( ARS / MDR ) ) * Max( ( FirstVNF_Mem - PN ),( FirstVNF_Mem_Server - ARS ) ) ) * Max( ( Min( AMS ,CRS ) - Min( ARS ,BR ) ),Max( Min( ARS ,FirstVNF_CPU_Server ),( ACS + FirstVNF_RAM_Server ) ) ) ) * ( ( ( ( BR + FirstVNF_RAM ) * Min( Const ,FirstVNF_Mem ) ) + Max( ( ARS + ACS ),( DDR + FirstVNF_RAM_Server ) ) ) + ( ( Min( ACS ,PN ) + Min( RRS ,FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem ),( CRS * BR ) ) ) ) ) ) ) )", "choosing": "Max( Min( MUM ,( MLU + RRSe ) ),( ( CS - MUC ) / Min( MLU ,MUC ) ) )", "obj1": 0.9979959919839679, "obj2": 0.001008916676843977}, {"determining": "( ( Max( ( Min( Max( RRS,ARS ) ,( AMS / PN ) ) + ( ( MRS * MDR ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) ),( Min( Min( FirstVNF_CPU ,Const ) ,( RRS + FirstVNF_RAM ) ) - Max( ( RRS + MRS ),( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) * FirstVNF_CPU_Server ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( MLU - Max( ( RRSe / MUM ),Max( RCSe,RMSe ) ) )", "obj1": 0.6292585170340681, "obj2": 0.25081267033566623}, {"determining": "( Min( FirstVNF_CPU_Server ,( Const * FirstVNF_CPU_Server ) ) - Max( Max( BR,CRS ),MDR ) )", "choosing": "Min( ( Min( ( RCSe - Min( CS ,RMSe ) ) ,Min( MUR ,DS ) ) + Min( Min( MUC ,MUC ) ,( MUR * MUR ) ) ) ,( Max( ( MLU + RCSe ),Min( DS ,DS ) ) + Min( Max( CS,MLU ) ,( MUC - RCSe ) ) ) )", "obj1": 0.7595190380761523, "obj2": 0.12636124787319913}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) - Max( Max( BR,CRS ),MDR ) )", "choosing": "( ( ( ( RRSe * RMSe ) + Max( CS,MUR ) ) * ( Min( CS ,RMSe ) * ( MLU + CS ) ) ) * ( ( ( MUC / RRSe ) / Max( CS,MUR ) ) - Max( ( RCSe + MLU ),( RMSe * DS ) ) ) )", "obj1": 0.6593186372745491, "obj2": 0.2147496464441584}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) - Max( Max( BR,( ( ( FirstVNF_CPU / MRS ) / ( DDR - ACS ) ) - ARS ) ),MDR ) )", "choosing": "Min( ( ( MUC + ( Min( ( RCSe - MLU ) ,Min( MUR ,DS ) ) + Min( Min( MUC ,MUC ) ,( MUR * MUR ) ) ) ) - ( RCSe / RMSe ) ) ,( RRSe + MUR ) )", "obj1": 0.7094188376753507, "obj2": 0.1865535069362396}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) - Max( Max( BR,( ( ( FirstVNF_CPU / PN ) / ( DDR - ACS ) ) - ( Min( AMS ,CRS ) * ( AMS + ACS ) ) ) ),MDR ) )", "choosing": "Min( ( Max( MUC,MUR ) - ( RCSe / RMSe ) ) ,( RRSe + MUR ) )", "obj1": 0.7394789579158316, "obj2": 0.16296591957832565}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( Max( ( Min( Max( RRS,ARS ) ,( AMS / BR ) ) + ( ( MRS * MDR ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) ),( Min( Min( FirstVNF_CPU ,Const ) ,( RRS + FirstVNF_RAM ) ) - Max( ( RRS + MRS ),( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * MUR ) )", "obj1": 0.6192384769539078, "obj2": 0.26369458188929257}, {"determining": "( ( Const * ARS ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( Min( RMSe ,MLU ) - ( DS / DS ) )", "obj1": 0.6993987975951904, "obj2": 0.202906168808543}, {"determining": "( ( RRS - CRS ) / ( CRS - ( ( BR * PN ) * FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Min( ( RRSe - RCSe ) ,( MUR + MLU ) ) * ( Max( MUM,MLU ) - Max( RMSe,MLU ) ) ),Min( ( ( RCSe * MUC ) + Max( ( ( RCSe * RRSe ) / ( RCSe / MLU ) ),MLU ) ) ,Min( ( MUR * DS ) ,Max( MUR,RRSe ) ) ) )", "obj1": 0.9859719438877755, "obj2": 0.005548088676077445}, {"determining": "( Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) - Max( ( BR + CRS ),MDR ) )", "choosing": "Min( ( ( MUC + MLU ) - ( RCSe + RMSe ) ) ,Min( ( RRSe / MUR ) ,Max( RCSe,CS ) ) )", "obj1": 0.749498997995992, "obj2": 0.13005143113767792}, {"determining": "( ( CRS * ( CRS * ( MDR / Min( MDR ,FirstVNF_Mem ) ) ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( RMSe * ( ( ( MUC / RRSe ) / Max( CS,MUR ) ) - Max( ( RCSe + MLU ),( RMSe * DS ) ) ) )", "obj1": 0.6412825651302605, "obj2": 0.24362181597087415}, {"determining": "( ( CRS * ARS ) * ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RRSe * RMSe ) + Max( CS,MUR ) ) * ( Min( CS ,RMSe ) * ( MLU + RCSe ) ) ) * ( ( ( MUC / RRSe ) / Max( CS,MUR ) ) - Max( ( RCSe + MLU ),( RMSe * DS ) ) ) )", "obj1": 0.6072144288577155, "obj2": 0.27116198722284546}, {"determining": "( Min( CRS ,DDR ) - Max( Max( BR,( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) / ( DDR - ACS ) ) - FirstVNF_Mem ) ),MDR ) )", "choosing": "Min( ( ( CS - DS ) / ( DS - MUC ) ) ,( RRSe + MUR ) )", "obj1": 0.7474949899799599, "obj2": 0.16269936871682977}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) - Max( Max( BR,( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) / ( DDR - ACS ) ) - ( Min( AMS ,CRS ) * ( AMS + ACS ) ) ) ),MDR ) )", "choosing": "Min( ( ( MUC + MUR ) - ( RCSe / RMSe ) ) ,( RRSe + MUR ) )", "obj1": 0.7214428857715431, "obj2": 0.18443582836001982}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) - Max( Max( BR,CRS ),MDR ) )", "choosing": "Min( ( ( MUC + MLU ) - ( RCSe / RMSe ) ) ,( RRSe + MUR ) )", "obj1": 0.6713426853707415, "obj2": 0.2082591830333498}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( ARS,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RCSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) + ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6112224448897795, "obj2": 0.2709717010351351}, {"determining": "( ( RRS - FirstVNF_CPU ) / ( CRS - ( ( BR * PN ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * DS ) )", "obj1": 0.9799599198396793, "obj2": 0.008053007331364888}], "5": [{"determining": "( Min( DDR ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( CS * DS ) / ( MLU * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * DS ) )", "obj1": 0.5851703406813628, "obj2": 0.29739066188849045}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + RMSe ) - ( Min( DS ,MLU ) - ( RRSe - MLU ) ) )", "obj1": 0.5951903807615231, "obj2": 0.28819124569424226}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) + ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6112224448897795, "obj2": 0.2709717010351351}, {"determining": "Min( Min( Max( ( ( ( Max( Min( DDR ,FirstVNF_Mem ),( AMS / FirstVNF_Mem_Server ) ) + Min( ( MRS + RRS ) ,Min( AMS ,PN ) ) ) - Min( ( ( MRS / FirstVNF_Mem ) + ( MRS + FirstVNF_CPU ) ) ,Min( Min( BR ,FirstVNF_CPU ) ,Max( ARS,FirstVNF_Mem ) ) ) ) / ( ( Min( ( DDR + FirstVNF_RAM ) ,( RRS * FirstVNF_RAM ) ) - ( ( DDR / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ) - ( ( ( Const + MDR ) + Max( ARS,AMS ) ) * ( ( PN + ARS ) / ( FirstVNF_RAM_Server / ACS ) ) ) ) ),( Max( ( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / ( MRS / BR ) ) / Max( ( Const - MDR ),( FirstVNF_CPU + BR ) ) ),( ( Min( DDR ,FirstVNF_Mem ) + ( FirstVNF_RAM / Const ) ) + ( Min( FirstVNF_CPU_Server ,MRS ) - ( Const + FirstVNF_CPU ) ) ) ) + ( ( ( ( FirstVNF_CPU_Server * PN ) / ( CRS * MRS ) ) + Min( ( PN * FirstVNF_RAM ) ,( PN + PN ) ) ) + ( ( Max( FirstVNF_CPU_Server,MDR ) - Max( BR,FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem + AMS ) - ( FirstVNF_Mem - Const ) ) ) ) ) ) ,( ( ( ( ( ( BR + FirstVNF_CPU_Server ) + ( DDR - AMS ) ) + ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) + Min( DDR ,FirstVNF_RAM ) ) ) - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) * Max( ( FirstVNF_RAM + AMS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) ) + ( ( ( Max( BR,DDR ) / ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / Max( Max( Const,FirstVNF_CPU ),Min( PN ,ACS ) ) ) / Min( ( Max( MRS,Const ) + Min( MRS ,BR ) ) ,( Min( ARS ,Const ) / ( FirstVNF_Mem_Server + PN ) ) ) ) ) / ( ( Min( ( ( AMS * ACS ) * ( AMS - FirstVNF_CPU_Server ) ) ,( Min( RRS ,FirstVNF_RAM ) + ( FirstVNF_Mem * DDR ) ) ) - ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) + Max( FirstVNF_RAM,DDR ) ) * Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,BR ) ) ) ) * Max( ( ( Max( FirstVNF_RAM_Server,AMS ) + ( CRS - RRS ) ) - ( ( MRS / FirstVNF_RAM ) - Min( MRS ,MDR ) ) ),Max( ( ( CRS / FirstVNF_Mem ) / Min( MDR ,CRS ) ),( ( Const * ACS ) + ( FirstVNF_CPU - FirstVNF_RAM ) ) ) ) ) ) ) ,Max( ( ( ( ( Min( Max( CRS,ARS ) ,Min( ACS ,MRS ) ) / Max( ( FirstVNF_RAM_Server + PN ),( Const - AMS ) ) ) / ( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * ( RRS - RRS ) ) / ( ( RRS * ACS ) + Min( CRS ,FirstVNF_Mem ) ) ) ) + Max( Max( ( Min( Const ,FirstVNF_CPU_Server ) * Min( AMS ,FirstVNF_CPU ) ),( ( FirstVNF_RAM / MRS ) - Max( FirstVNF_Mem,FirstVNF_CPU ) ) ),( Min( ( FirstVNF_CPU * DDR ) ,( ACS * AMS ) ) * Max( ( FirstVNF_CPU_Server * Const ),( Const * FirstVNF_Mem ) ) ) ) ) + Min( ( ( ( ( ACS * CRS ) - ( MDR + MDR ) ) - Max( ( BR + AMS ),( ARS - FirstVNF_RAM_Server ) ) ) * ( ( ( MRS / CRS ) * Min( FirstVNF_Mem ,PN ) ) - ( ( BR - DDR ) / Min( AMS ,CRS ) ) ) ) ,( Max( Min( Min( FirstVNF_RAM_Server ,CRS ) ,( Const + CRS ) ),( Min( ARS ,AMS ) - ( FirstVNF_CPU / BR ) ) ) / ( Max( ( AMS - ARS ),( RRS + FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_RAM_Server ,BR ) + ( ACS / FirstVNF_Mem_Server ) ) ) ) ) ),( Min( ( ( ( Min( ACS ,BR ) + ( FirstVNF_CPU * RRS ) ) + ( ( DDR * BR ) / ( CRS + FirstVNF_CPU_Server ) ) ) + ( ( ( DDR - BR ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) - ( ( Const * ACS ) * ( AMS * FirstVNF_RAM ) ) ) ) ,( ( ( ( CRS / AMS ) * ( MRS / FirstVNF_Mem ) ) / ( Max( AMS,MRS ) + ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) ) / ( ( ( Const + MDR ) * Max( Const,MRS ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) - ( AMS * AMS ) ) ) ) ) / ( ( ( ( ( FirstVNF_RAM * AMS ) * ( ARS / MDR ) ) * Max( ( FirstVNF_Mem - PN ),( FirstVNF_Mem_Server - ARS ) ) ) * Max( ( Min( AMS ,CRS ) - Min( ARS ,BR ) ),Max( Min( ARS ,FirstVNF_CPU_Server ),( ACS + FirstVNF_RAM_Server ) ) ) ) * ( ( ( ( BR + FirstVNF_RAM ) * Min( Const ,FirstVNF_Mem ) ) + Max( ( ARS + ACS ),( DDR + FirstVNF_RAM_Server ) ) ) + ( ( Min( ACS ,PN ) + Min( RRS ,FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem ),( CRS * BR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( RRSe * RMSe ) + Max( CS,MUR ) ) * ( Min( CS ,RMSe ) * ( MLU + CS ) ) ) * ( ( ( MUC / RRSe ) / Max( CS,MUR ) ) - Max( ( RCSe + MLU ),( RMSe * DS ) ) ) )", "obj1": 0.9959919839679359, "obj2": 0.0013171715876164084}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),( BR / FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6112224448897795, "obj2": 0.2709717010351351}, {"determining": "( Max( Max( AMS,FirstVNF_Mem_Server ),( Const * FirstVNF_Mem ) ) - Max( FirstVNF_Mem,MRS ) )", "choosing": "( ( Max( MLU,Max( MUR,RRSe ) ) + RRSe ) * Max( RMSe,Min( RMSe ,( MUM * RMSe ) ) ) )", "obj1": 0.8537074148296593, "obj2": 0.12604436951871106}, {"determining": "( ( CRS * ARS ) / ( Const / ( ACS - ARS ) ) )", "choosing": "( ( RMSe + Min( ( Min( DS ,MUM ) / Min( RMSe ,RCSe ) ) ,( ( MUM * RCSe ) / ( RMSe / MUC ) ) ) ) - ( MUM * MUR ) )", "obj1": 0.9458917835671342, "obj2": 0.0360747025033249}, {"determining": "( ( CRS * ARS ) / ( MRS - BR ) )", "choosing": "Max( ( Min( ( RRSe - RCSe ) ,( MUR + MLU ) ) * Min( Min( RRSe ,MUR ) ,( DS + MUR ) ) ),Min( ( ( RCSe * MUC ) + Max( RMSe,MLU ) ) ,( ( MUR * DS ) / ( MUR * RRSe ) ) ) )", "obj1": 0.9739478957915831, "obj2": 0.024075561708022657}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) - Max( Max( BR,CRS ),MDR ) )", "choosing": "( ( MUM + RMSe ) - ( MUM * MUR ) )", "obj1": 0.6693386773547094, "obj2": 0.2113416048535508}, {"determining": "Min( Min( Max( ( ( ( Max( Min( DDR ,FirstVNF_Mem ),( AMS / FirstVNF_Mem_Server ) ) + Min( ( MRS + RRS ) ,Min( AMS ,PN ) ) ) - Min( ( ( MRS / FirstVNF_Mem ) + ( MRS + FirstVNF_CPU ) ) ,Min( Min( BR ,FirstVNF_CPU ) ,Max( ARS,FirstVNF_Mem ) ) ) ) / ( ( Min( ( DDR + FirstVNF_RAM ) ,( RRS * FirstVNF_RAM ) ) - ( ( DDR / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ) - ( ( ( Const + MDR ) + Max( ARS,AMS ) ) * ( ( PN + ARS ) / ( FirstVNF_RAM_Server / ACS ) ) ) ) ),( Max( ( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / ( MRS / BR ) ) / Max( ( Const - MDR ),( FirstVNF_CPU + BR ) ) ),( ( Min( DDR ,FirstVNF_Mem ) + ( FirstVNF_RAM / Const ) ) + ( Max( FirstVNF_CPU_Server,MRS ) - ( Const + FirstVNF_CPU ) ) ) ) + ( ( ( ( FirstVNF_CPU_Server * PN ) / ( CRS * MRS ) ) + Min( ( PN * FirstVNF_RAM ) ,( PN + PN ) ) ) + ( ( Max( FirstVNF_CPU_Server,MDR ) - Max( BR,FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem + AMS ) - ( FirstVNF_Mem - Const ) ) ) ) ) ) ,( ( ( ( ( ( BR + FirstVNF_CPU_Server ) + ( DDR - AMS ) ) + ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) + Min( DDR ,FirstVNF_RAM ) ) ) - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) * Max( ( FirstVNF_RAM + AMS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) ) + ( ( ( Max( BR,DDR ) / ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / Max( Max( Const,FirstVNF_CPU ),Min( PN ,ACS ) ) ) / Min( ( Max( MRS,Const ) + Min( MRS ,BR ) ) ,( Min( ARS ,Const ) / ( FirstVNF_Mem_Server + PN ) ) ) ) ) / ( ( Min( ( ( AMS * ACS ) * ( AMS - FirstVNF_CPU_Server ) ) ,( Min( RRS ,FirstVNF_RAM ) + ( FirstVNF_Mem * DDR ) ) ) - ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) + Max( FirstVNF_RAM,DDR ) ) * Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,BR ) ) ) ) * Max( ( ( Max( FirstVNF_RAM_Server,AMS ) + ( CRS - RRS ) ) - ( ( MRS / FirstVNF_RAM ) - Min( MRS ,MDR ) ) ),Max( ( ( CRS / FirstVNF_Mem ) / Min( MDR ,CRS ) ),( ( Const * ACS ) + ( FirstVNF_CPU - FirstVNF_RAM ) ) ) ) ) ) ) ,Max( ( ( ( ( Min( Max( CRS,ARS ) ,Min( ACS ,MRS ) ) / Max( ( FirstVNF_RAM_Server + PN ),( Const - AMS ) ) ) / ( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * ( RRS - RRS ) ) / ( ( RRS * ACS ) + Min( CRS ,FirstVNF_Mem ) ) ) ) + Max( Max( ( Min( Const ,FirstVNF_CPU_Server ) * Min( AMS ,FirstVNF_CPU ) ),( ( FirstVNF_RAM / MRS ) - Max( FirstVNF_Mem,FirstVNF_CPU ) ) ),( Min( ( FirstVNF_CPU * DDR ) ,( ACS * AMS ) ) * Max( ( FirstVNF_CPU_Server * Const ),( Const * FirstVNF_Mem ) ) ) ) ) + Min( ( ( ( ( ACS * CRS ) - ( MDR + MDR ) ) - Max( ( BR + AMS ),( ARS - FirstVNF_RAM_Server ) ) ) * ( ( ( MRS / CRS ) * Min( FirstVNF_Mem ,PN ) ) - ( ( BR - DDR ) / Min( AMS ,CRS ) ) ) ) ,( Max( Min( Min( FirstVNF_RAM_Server ,CRS ) ,( Const + CRS ) ),( Min( ARS ,AMS ) - ( FirstVNF_CPU / BR ) ) ) / ( Max( ( AMS - ARS ),( RRS + FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_RAM_Server ,BR ) + ( ACS / FirstVNF_Mem_Server ) ) ) ) ) ),( Min( ( ( ( Min( ACS ,BR ) + ( FirstVNF_CPU * RRS ) ) + ( ( DDR * BR ) / ( CRS + FirstVNF_CPU_Server ) ) ) + ( ( ( DDR - BR ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) - ( ( Const * ACS ) * ( AMS * FirstVNF_RAM ) ) ) ) ,( ( ( ( CRS / AMS ) * ( MRS / FirstVNF_Mem ) ) / ( Max( AMS,MRS ) + ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) ) / ( ( ( Const + MDR ) * Max( Const,MRS ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) - ( AMS * AMS ) ) ) ) ) / ( ( ( ( ( FirstVNF_RAM * AMS ) * ( ARS / MDR ) ) * Max( ( FirstVNF_Mem - PN ),( FirstVNF_Mem_Server - ARS ) ) ) * Max( ( Min( AMS ,CRS ) - Min( ARS ,BR ) ),Max( Min( ARS ,FirstVNF_CPU_Server ),( ACS + FirstVNF_RAM_Server ) ) ) ) * ( ( ( ( BR + FirstVNF_RAM ) * Min( Const ,FirstVNF_Mem ) ) + Max( ( ARS + ACS ),( DDR + FirstVNF_RAM_Server ) ) ) + ( ( Min( ACS ,PN ) + Min( RRS ,FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem ),( CRS * BR ) ) ) ) ) ) ) )", "choosing": "Max( Min( MUM ,( MLU + RRSe ) ),( ( CS - MUC ) / Min( MLU ,MUC ) ) )", "obj1": 0.9979959919839679, "obj2": 0.001008916676843977}, {"determining": "( ( Max( ( Min( Max( RRS,ARS ) ,( AMS / PN ) ) + ( ( MRS * MDR ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) ),( Min( Min( FirstVNF_CPU ,Const ) ,( RRS + FirstVNF_RAM ) ) - Max( ( RRS + MRS ),( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) * FirstVNF_CPU_Server ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( MLU - Max( ( RRSe / MUM ),Max( RCSe,RMSe ) ) )", "obj1": 0.6292585170340681, "obj2": 0.25081267033566623}, {"determining": "( Min( FirstVNF_CPU_Server ,( Const * FirstVNF_CPU_Server ) ) - Max( Max( BR,CRS ),MDR ) )", "choosing": "Min( ( Min( ( RCSe - Min( CS ,RMSe ) ) ,Min( MUR ,DS ) ) + Min( Min( MUC ,MUC ) ,( MUR * MUR ) ) ) ,( Max( ( MLU + RCSe ),Min( DS ,DS ) ) + Min( Max( CS,MLU ) ,( MUC - RCSe ) ) ) )", "obj1": 0.7595190380761523, "obj2": 0.12636124787319913}, {"determining": "( ( RRS - CRS ) / ( CRS - ( ( BR * PN ) * FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Min( ( RRSe - RCSe ) ,( MUR + MLU ) ) * ( Max( MUM,MLU ) - Max( RMSe,MLU ) ) ),Min( ( ( RCSe * MUC ) + Max( ( ( RCSe * RRSe ) / ( RCSe / MLU ) ),MLU ) ) ,Min( ( MUR * DS ) ,Max( MUR,RRSe ) ) ) )", "obj1": 0.9859719438877755, "obj2": 0.005548088676077445}, {"determining": "( Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) - Max( ( BR + CRS ),MDR ) )", "choosing": "Min( ( ( MUC + MLU ) - ( RCSe + RMSe ) ) ,Min( ( RRSe / MUR ) ,Max( RCSe,CS ) ) )", "obj1": 0.749498997995992, "obj2": 0.13005143113767792}, {"determining": "( ( CRS * ( CRS * ( MDR / Min( MDR ,FirstVNF_Mem ) ) ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( RMSe * ( ( ( MUC / RRSe ) / Max( CS,MUR ) ) - Max( ( RCSe + MLU ),( RMSe * DS ) ) ) )", "obj1": 0.6412825651302605, "obj2": 0.24362181597087415}, {"determining": "( ( CRS * ARS ) * ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RRSe * RMSe ) + Max( CS,MUR ) ) * ( Min( CS ,RMSe ) * ( MLU + RCSe ) ) ) * ( ( ( MUC / RRSe ) / Max( CS,MUR ) ) - Max( ( RCSe + MLU ),( RMSe * DS ) ) ) )", "obj1": 0.6072144288577155, "obj2": 0.27116198722284546}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( ARS,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RCSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) + ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6112224448897795, "obj2": 0.2709717010351351}, {"determining": "( ( RRS - FirstVNF_CPU ) / ( CRS - ( ( BR * PN ) * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( MUC + MLU ) - ( RCSe / RMSe ) ) ,( Max( MUR,MUM ) * ( CS - CS ) ) )", "obj1": 0.9799599198396793, "obj2": 0.007788936923326213}, {"determining": "Min( Min( Max( ( ( ( Max( Min( DDR ,FirstVNF_Mem ),( AMS / FirstVNF_Mem_Server ) ) + Min( ( MRS + RRS ) ,Min( AMS ,PN ) ) ) - Min( ( ( MRS / FirstVNF_Mem ) + ( MRS + FirstVNF_CPU ) ) ,Min( Min( BR ,FirstVNF_CPU ) ,Max( ARS,FirstVNF_Mem ) ) ) ) / ( ( Min( ( DDR + FirstVNF_RAM ) ,( RRS * FirstVNF_RAM ) ) - ( ( DDR / DDR ) + Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ) - ( ( ( Const + MDR ) + Max( ARS,AMS ) ) * ( ( PN + ARS ) / ( FirstVNF_RAM_Server / ACS ) ) ) ) ),( Max( ( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / ( MRS / BR ) ) / Max( ( Const - MDR ),( FirstVNF_CPU + BR ) ) ),( ( Min( DDR ,FirstVNF_Mem ) + ( FirstVNF_RAM / Const ) ) + ( Min( FirstVNF_CPU_Server ,MRS ) - ( Const + FirstVNF_CPU ) ) ) ) + ( ( ( ( FirstVNF_CPU_Server * PN ) / ( CRS * MRS ) ) + Min( ( PN * FirstVNF_RAM ) ,( PN + PN ) ) ) + ( ( Max( FirstVNF_CPU_Server,MDR ) - Max( BR,FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem + AMS ) - ( FirstVNF_Mem - Const ) ) ) ) ) ) ,( ( ( ( ( ( BR + FirstVNF_CPU_Server ) + ( DDR - AMS ) ) + ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) + Min( DDR ,FirstVNF_RAM ) ) ) - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) * Max( ( FirstVNF_RAM + AMS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) ) + ( ( ( Max( BR,DDR ) / ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / Max( Max( Const,FirstVNF_CPU ),Min( PN ,ACS ) ) ) / Min( ( Max( MRS,Const ) + Min( MRS ,BR ) ) ,( Min( ARS ,Const ) / ( FirstVNF_Mem_Server + PN ) ) ) ) ) / ( ( Min( ( ( AMS * ACS ) * ( AMS - FirstVNF_CPU_Server ) ) ,( Min( RRS ,FirstVNF_RAM ) + ( FirstVNF_Mem * DDR ) ) ) - ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) + Max( FirstVNF_RAM,DDR ) ) * Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,BR ) ) ) ) * Max( ( ( Max( FirstVNF_RAM_Server,AMS ) + ( CRS - RRS ) ) - ( ( MRS / FirstVNF_RAM ) - Min( MRS ,MDR ) ) ),Max( ( ( CRS / FirstVNF_Mem ) / Min( MDR ,CRS ) ),( ( Const * ACS ) + ( FirstVNF_CPU - FirstVNF_RAM ) ) ) ) ) ) ) ,Max( ( ( ( ( Min( Max( CRS,ARS ) ,Min( ACS ,MRS ) ) / Max( ( FirstVNF_RAM_Server + PN ),( Const - AMS ) ) ) / ( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * ( RRS - RRS ) ) / ( ( RRS * ACS ) + Min( CRS ,FirstVNF_Mem ) ) ) ) + Max( Max( ( Min( Const ,FirstVNF_CPU_Server ) * Min( AMS ,FirstVNF_CPU ) ),( ( FirstVNF_RAM / MRS ) - Max( FirstVNF_Mem,FirstVNF_CPU ) ) ),( Min( ( FirstVNF_CPU * DDR ) ,( ACS * AMS ) ) * Max( ( FirstVNF_CPU_Server * Const ),( Const * FirstVNF_Mem ) ) ) ) ) + Min( ( ( ( ( ACS * CRS ) - ( MDR + MDR ) ) - Max( ( BR + AMS ),( ARS - FirstVNF_RAM_Server ) ) ) * ( ( ( MRS / CRS ) * Min( FirstVNF_Mem ,PN ) ) - ( ( BR - DDR ) / Min( AMS ,CRS ) ) ) ) ,( Max( Min( Min( FirstVNF_RAM_Server ,CRS ) ,( Const + CRS ) ),( Min( ARS ,AMS ) - ( FirstVNF_CPU / BR ) ) ) / ( Max( ( AMS - ARS ),( RRS + FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_RAM_Server ,BR ) + ( ACS / FirstVNF_Mem_Server ) ) ) ) ) ),( Min( ( ( ( Min( ACS ,BR ) + ( FirstVNF_CPU * RRS ) ) + ( ( DDR * BR ) / ( CRS + FirstVNF_CPU_Server ) ) ) + ( ( ( DDR - BR ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) - ( ( Const * ACS ) * ( AMS * FirstVNF_RAM ) ) ) ) ,( ( ( ( CRS / AMS ) * ( MRS / FirstVNF_Mem ) ) / ( Max( AMS,MRS ) + ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) ) / ( ( ( Const + MDR ) * Max( Const,MRS ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) - ( AMS * AMS ) ) ) ) ) / ( ( ( ( ( FirstVNF_RAM * AMS ) * ( ARS / MDR ) ) * Max( ( FirstVNF_Mem - PN ),( FirstVNF_Mem_Server - ARS ) ) ) * Max( ( Min( AMS ,CRS ) - Min( ARS ,BR ) ),Max( Min( ARS ,FirstVNF_CPU_Server ),( ACS + FirstVNF_RAM_Server ) ) ) ) * ( ( ( ( BR + FirstVNF_RAM ) * Min( Const ,FirstVNF_Mem ) ) + Max( ( ARS + ACS ),( DDR + FirstVNF_RAM_Server ) ) ) + ( ( Min( ACS ,PN ) + Min( RRS ,FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem ),( CRS * BR ) ) ) ) ) ) ) )", "choosing": "Max( Min( MUM ,( MLU + RRSe ) ),( MUC + MUR ) )", "obj1": 0.9979959919839679, "obj2": 0.001008916676843977}, {"determining": "Min( Min( Max( ( ( ( Max( Min( DDR ,FirstVNF_Mem ),( AMS / FirstVNF_Mem_Server ) ) + Min( ( MRS + RRS ) ,Min( AMS ,PN ) ) ) - Min( ( ( MRS / FirstVNF_Mem ) + ( MRS + FirstVNF_CPU ) ) ,Min( Min( BR ,FirstVNF_CPU ) ,Max( ARS,FirstVNF_Mem ) ) ) ) / ( ( Min( ( DDR + FirstVNF_RAM ) ,( RRS * FirstVNF_RAM ) ) - ( ( DDR / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ) - ( ( ( Const + MDR ) + Max( ARS,AMS ) ) * ( ( PN + ARS ) / ( FirstVNF_RAM_Server / ACS ) ) ) ) ),( Max( ( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / ( MRS / BR ) ) / Max( ( Const - MDR ),( FirstVNF_CPU + BR ) ) ),( ( Min( DDR ,FirstVNF_Mem ) + ( FirstVNF_RAM / Const ) ) + ( Min( FirstVNF_CPU_Server ,MRS ) - ( Const + FirstVNF_CPU ) ) ) ) + ( ( ( ( FirstVNF_CPU_Server * PN ) / ( CRS * MRS ) ) + Min( ( PN * FirstVNF_RAM ) ,( PN + PN ) ) ) + ( ( Max( FirstVNF_CPU_Server,MDR ) - Max( BR,FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem + AMS ) - ( FirstVNF_Mem - Const ) ) ) ) ) ) ,( ( ( ( ( ( BR + FirstVNF_CPU_Server ) + ( DDR - AMS ) ) + ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) + Min( DDR ,FirstVNF_RAM ) ) ) - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) * Max( ( FirstVNF_RAM + AMS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) ) + ( ( ( Max( BR,DDR ) / ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / Max( Max( Const,FirstVNF_CPU ),Min( PN ,ACS ) ) ) / Min( ( Max( MRS,Const ) + Min( MRS ,BR ) ) ,( Min( ARS ,Const ) / ( FirstVNF_Mem_Server + PN ) ) ) ) ) / ( ( Min( ( ( AMS * ACS ) * ( AMS - FirstVNF_CPU_Server ) ) ,( Min( RRS ,FirstVNF_RAM ) + ( FirstVNF_Mem * DDR ) ) ) - ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) + Max( FirstVNF_RAM,DDR ) ) * Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,BR ) ) ) ) * Max( ( ( Max( FirstVNF_RAM_Server,AMS ) + ( CRS - RRS ) ) - ( ( MRS / FirstVNF_RAM ) - Min( MRS ,MDR ) ) ),Max( ( ( CRS / FirstVNF_Mem ) / Min( MDR ,CRS ) ),( ( Const * ACS ) + ( FirstVNF_CPU - FirstVNF_RAM ) ) ) ) ) ) ) ,Max( ( ( ( ( Min( Max( CRS,ARS ) ,Min( ACS ,MRS ) ) / Max( ( FirstVNF_RAM_Server + PN ),( Const - AMS ) ) ) / ( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * ( RRS - RRS ) ) / ( ( RRS * ACS ) + Min( CRS ,FirstVNF_Mem ) ) ) ) + Max( Max( ( Min( Const ,FirstVNF_CPU_Server ) * Min( AMS ,FirstVNF_CPU ) ),( ( FirstVNF_RAM / MRS ) - Max( FirstVNF_Mem,FirstVNF_CPU ) ) ),( Min( ( FirstVNF_CPU * DDR ) ,( ACS * AMS ) ) * Max( ( FirstVNF_CPU_Server * Const ),( Const * FirstVNF_Mem ) ) ) ) ) + Min( ( ( ( ( ACS * CRS ) - ( MDR + MDR ) ) - Max( ( BR + AMS ),( ARS - FirstVNF_RAM_Server ) ) ) * ( ( ( MRS / CRS ) * Min( FirstVNF_Mem ,PN ) ) - ( ( BR - DDR ) / Min( AMS ,CRS ) ) ) ) ,( Max( Min( Min( FirstVNF_RAM_Server ,CRS ) ,( Const + CRS ) ),( Min( ARS ,AMS ) - ( FirstVNF_CPU / BR ) ) ) / ( Max( ( AMS - ARS ),( RRS + FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_RAM_Server ,BR ) + ( ACS / FirstVNF_Mem_Server ) ) ) ) ) ),( Min( ( ( ( Min( ACS ,BR ) + ( FirstVNF_CPU * RRS ) ) + ( ( DDR * BR ) / ( CRS + FirstVNF_CPU_Server ) ) ) + ( ( ( DDR - BR ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) - ( ( Const * ACS ) * ( AMS * FirstVNF_RAM ) ) ) ) ,( ( ( ( CRS / AMS ) * ( MRS / FirstVNF_Mem ) ) / ( Max( AMS,MRS ) + ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) ) / ( ( ( Const + MDR ) * Max( Const,MRS ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) - ( AMS * AMS ) ) ) ) ) / ( ( ( ( ( FirstVNF_RAM * AMS ) * ( ARS / MDR ) ) * Max( ( FirstVNF_Mem - PN ),( FirstVNF_Mem_Server - ARS ) ) ) * Max( ( Min( AMS ,CRS ) - Min( ARS ,BR ) ),Max( Min( ARS ,FirstVNF_CPU_Server ),( ACS + FirstVNF_RAM_Server ) ) ) ) * ( ( ( ( BR + FirstVNF_RAM ) * Min( Const ,FirstVNF_Mem ) ) + Max( ( ARS + ACS ),( DDR + FirstVNF_RAM_Server ) ) ) + ( ( Min( ACS ,PN ) + Min( RRS ,FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem ),( CRS * BR ) ) ) ) ) ) ) )", "choosing": "Min( ( ( MUC + MUR ) - ( RCSe / RMSe ) ) ,( RRSe + MUR ) )", "obj1": 0.9979959919839679, "obj2": 0.001008916676843977}, {"determining": "Min( Min( Max( ( ( ( Max( Min( DDR ,FirstVNF_Mem ),( AMS / FirstVNF_Mem_Server ) ) + Min( ( MRS + RRS ) ,Min( AMS ,PN ) ) ) - Min( ( ( MRS / FirstVNF_Mem ) + ( MRS + FirstVNF_CPU ) ) ,Min( Min( BR ,FirstVNF_CPU ) ,Max( ARS,FirstVNF_Mem ) ) ) ) / ( ( Min( ( DDR + FirstVNF_RAM ) ,( RRS * FirstVNF_RAM ) ) - ( ( DDR / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ) - ( ( ( Const + MDR ) + Max( ARS,AMS ) ) * ( ( PN + ARS ) / ( FirstVNF_RAM_Server / ACS ) ) ) ) ),( Max( ( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / ( MRS / BR ) ) / Max( ( Const - MDR ),( FirstVNF_CPU + BR ) ) ),( ( Min( DDR ,FirstVNF_Mem ) + ( FirstVNF_RAM / Const ) ) + ( Max( FirstVNF_CPU_Server,MRS ) - ( Const + FirstVNF_CPU ) ) ) ) + ( ( ( ( FirstVNF_CPU_Server * PN ) / ( CRS * MRS ) ) + Min( ( PN * FirstVNF_RAM ) ,( PN + PN ) ) ) + ( ( Max( FirstVNF_CPU_Server,MDR ) - Max( BR,FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem + AMS ) - ( FirstVNF_Mem - Const ) ) ) ) ) ) ,( ( ( ( ( ( BR + FirstVNF_CPU_Server ) + ( DDR - AMS ) ) + ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) + Min( DDR ,FirstVNF_RAM ) ) ) - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) * Max( ( FirstVNF_RAM + AMS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) ) + ( ( ( Max( BR,DDR ) / ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / Max( Max( Const,FirstVNF_CPU ),Min( PN ,ACS ) ) ) / Min( ( Max( MRS,Const ) + Min( MRS ,BR ) ) ,( Min( ARS ,Const ) / ( FirstVNF_Mem_Server + PN ) ) ) ) ) / ( ( Min( ( ( AMS * ACS ) * ( AMS - FirstVNF_CPU_Server ) ) ,( Min( RRS ,FirstVNF_RAM ) + ( FirstVNF_Mem * DDR ) ) ) - ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) + Max( FirstVNF_RAM,DDR ) ) * Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,BR ) ) ) ) * Max( ( ( Max( FirstVNF_RAM_Server,AMS ) + ( CRS - RRS ) ) - ( ( MRS / FirstVNF_RAM ) - Min( MRS ,MDR ) ) ),Max( ( ( CRS / FirstVNF_Mem ) / Min( MDR ,CRS ) ),( ( Const * ACS ) + ( FirstVNF_CPU - FirstVNF_RAM ) ) ) ) ) ) ) ,Max( ( ( ( ( Min( Max( CRS,ARS ) ,Min( ACS ,MRS ) ) / Max( ( FirstVNF_RAM_Server + PN ),( Const - AMS ) ) ) / ( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * ( RRS - RRS ) ) / ( ( RRS * ACS ) + Min( CRS ,FirstVNF_Mem ) ) ) ) + Max( Max( ( Min( Const ,FirstVNF_CPU_Server ) * Min( AMS ,FirstVNF_CPU ) ),( ( FirstVNF_RAM / MRS ) - Max( FirstVNF_Mem,FirstVNF_CPU ) ) ),( Min( ( FirstVNF_CPU * DDR ) ,( ACS * AMS ) ) * Max( ( FirstVNF_CPU_Server * Const ),( Const * FirstVNF_Mem ) ) ) ) ) + Min( ( ( ( ( ACS * CRS ) - ( MDR + MDR ) ) - Max( ( BR + AMS ),( ARS - FirstVNF_RAM_Server ) ) ) * ( ( ( MRS / CRS ) * Min( FirstVNF_Mem ,PN ) ) - ( ( BR - DDR ) / Min( AMS ,CRS ) ) ) ) ,( Max( Min( Min( FirstVNF_RAM_Server ,CRS ) ,( Const + CRS ) ),( Min( ARS ,AMS ) - ( FirstVNF_CPU / BR ) ) ) / ( Max( ( AMS - ARS ),( RRS + FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_RAM_Server ,BR ) + ( ACS / FirstVNF_Mem_Server ) ) ) ) ) ),( Min( ( ( ( Min( ACS ,BR ) + ( FirstVNF_CPU * RRS ) ) + ( ( DDR * BR ) / ( CRS + FirstVNF_CPU_Server ) ) ) + ( ( ( DDR - BR ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) - ( ( Const * ACS ) * ( AMS * FirstVNF_RAM ) ) ) ) ,( ( ( ( CRS / AMS ) * ( MRS / FirstVNF_Mem ) ) / ( Max( AMS,MRS ) + ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) ) / ( ( ( Const + MDR ) * Max( Const,MRS ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) - ( AMS * AMS ) ) ) ) ) / ( ( ( ( ( FirstVNF_RAM * AMS ) * ( ARS / MDR ) ) * Max( ( FirstVNF_Mem - PN ),( FirstVNF_Mem_Server - ARS ) ) ) * Max( ( Min( AMS ,CRS ) - Min( ARS ,BR ) ),Max( Min( ARS ,FirstVNF_CPU_Server ),( ACS + FirstVNF_RAM_Server ) ) ) ) * ( ( ( ( BR + FirstVNF_RAM ) * Min( Const ,FirstVNF_Mem ) ) + Max( ( ARS + ACS ),( DDR + FirstVNF_RAM_Server ) ) ) + ( ( Min( ACS ,PN ) + Min( RRS ,FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem ),( CRS * BR ) ) ) ) ) ) ) )", "choosing": "Max( Min( MUM ,( MLU + RRSe ) ),( ( CS - MUC ) / Min( MLU ,MUC ) ) )", "obj1": 0.9979959919839679, "obj2": 0.001008916676843977}, {"determining": "( ( CRS * ARS ) / ( Const * ( ACS - ARS ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) + ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.8557114228456913, "obj2": 0.09614703747586872}, {"determining": "( ( CRS * ARS ) / Max( BR,CRS ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * RCSe ) )", "obj1": 0.6392785571142284, "obj2": 0.2487523120854848}, {"determining": "( Min( ( Const * FirstVNF_CPU_Server ) ,DDR ) - Max( Max( BR,CRS ),MDR ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * MUR ) )", "obj1": 0.7314629258517034, "obj2": 0.1416800863462719}, {"determining": "( Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) - Max( ( BR + CRS ),MDR ) )", "choosing": "Min( ( ( MUC + MLU ) - ( RCSe + RMSe ) ) ,Min( ( RRSe / MUR ) ,Max( RCSe,CS ) ) )", "obj1": 0.7454909819639278, "obj2": 0.13219098915634112}, {"determining": "Min( Min( Max( ( ( ( Max( Min( DDR ,FirstVNF_Mem ),( AMS / FirstVNF_Mem_Server ) ) + Min( ( MRS + RRS ) ,Min( AMS ,PN ) ) ) - Min( ( ( MRS / FirstVNF_Mem ) + ( MRS + FirstVNF_CPU ) ) ,Min( Min( BR ,FirstVNF_CPU ) ,Max( ARS,FirstVNF_Mem ) ) ) ) / ( ( Min( ( DDR + FirstVNF_RAM ) ,( RRS * FirstVNF_RAM ) ) - ( ( DDR / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ) - ( ( ( Const + MDR ) + Max( ARS,AMS ) ) * ( ( PN + ARS ) / ( FirstVNF_RAM_Server / ACS ) ) ) ) ),( Max( ( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / ( MRS / BR ) ) / Max( ( Const - MDR ),( FirstVNF_CPU + BR ) ) ),( ( Min( DDR ,FirstVNF_Mem ) + ( FirstVNF_RAM / Const ) ) + ( Min( FirstVNF_CPU_Server ,MRS ) - ( Const + FirstVNF_CPU ) ) ) ) + ( ( ( ( FirstVNF_CPU_Server * PN ) / ( CRS * MRS ) ) + Min( ( PN * FirstVNF_RAM ) ,( PN + PN ) ) ) + ( ( Max( FirstVNF_CPU_Server,MDR ) - Max( BR,FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem + AMS ) - ( FirstVNF_Mem - Const ) ) ) ) ) ) ,( ( ( ( ( ( BR + FirstVNF_CPU_Server ) + ( DDR - AMS ) ) + ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) + Min( DDR ,FirstVNF_RAM ) ) ) - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) * Max( ( FirstVNF_RAM + AMS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) ) - ( ( ( Max( BR,DDR ) / ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / Max( Max( Const,FirstVNF_CPU ),Min( PN ,ACS ) ) ) / Min( ( Max( MRS,Const ) + Min( MRS ,BR ) ) ,( Min( ARS ,Const ) / ( FirstVNF_Mem_Server + PN ) ) ) ) ) / ( ( Min( ( ( AMS * ACS ) * ( AMS - FirstVNF_CPU_Server ) ) ,( Min( RRS ,FirstVNF_RAM ) + ( FirstVNF_Mem * DDR ) ) ) - ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) + Max( FirstVNF_RAM,DDR ) ) * Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,( CRS * ARS ) ) ) ) * Max( ( ( Max( FirstVNF_RAM_Server,AMS ) + ( CRS - RRS ) ) - ( ( MRS / FirstVNF_RAM ) - Min( MRS ,MDR ) ) ),Max( ( ( CRS / FirstVNF_Mem ) / Min( MDR ,CRS ) ),( ( Const * ACS ) + ( FirstVNF_CPU - FirstVNF_RAM ) ) ) ) ) ) ) ,Max( ( ( ( ( Min( Max( CRS,ARS ) ,Min( ACS ,MRS ) ) / Max( ( FirstVNF_RAM_Server + PN ),( Const - AMS ) ) ) / ( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * ( RRS - RRS ) ) / ( ( RRS * ACS ) + Min( CRS ,FirstVNF_Mem ) ) ) ) + Max( Max( ( Min( Const ,FirstVNF_CPU_Server ) * Min( AMS ,FirstVNF_CPU ) ),( ( FirstVNF_RAM / MRS ) - Max( FirstVNF_Mem,FirstVNF_CPU ) ) ),( Min( ( FirstVNF_CPU * DDR ) ,( ACS * AMS ) ) * Max( ( FirstVNF_CPU_Server * Const ),( Const * FirstVNF_Mem ) ) ) ) ) + Min( ( ( ( ( ACS * CRS ) - ( MDR + MDR ) ) - Max( ( BR + AMS ),( ARS - FirstVNF_RAM_Server ) ) ) * ( ( ( MRS / CRS ) * Min( FirstVNF_Mem ,PN ) ) - ( ( BR - DDR ) / Min( AMS ,CRS ) ) ) ) ,( Max( Min( Min( FirstVNF_RAM_Server ,CRS ) ,( Const + CRS ) ),( Min( ARS ,AMS ) - ( FirstVNF_CPU / BR ) ) ) / ( Max( ( AMS - ARS ),( RRS + FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_RAM_Server ,BR ) + ( ACS / FirstVNF_Mem_Server ) ) ) ) ) ),( Min( ( ( ( Min( ACS ,BR ) + ( FirstVNF_CPU * RRS ) ) + ( ( DDR * BR ) / ( CRS + FirstVNF_CPU_Server ) ) ) + ( ( ( DDR - BR ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) - ( ( Const * ACS ) * ( AMS * FirstVNF_RAM ) ) ) ) ,( ( ( ( CRS / AMS ) * ( MRS / FirstVNF_Mem ) ) / ( Max( AMS,MRS ) + ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) ) / ( ( ( Const + MDR ) * Max( Const,MRS ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) - ( AMS * AMS ) ) ) ) ) / ( ( ( ( ( FirstVNF_RAM * AMS ) * ( ARS / MDR ) ) * Max( ( FirstVNF_Mem - PN ),( FirstVNF_Mem_Server - ARS ) ) ) * Max( ( Min( AMS ,CRS ) - Min( ARS ,BR ) ),Max( Min( ARS ,FirstVNF_CPU_Server ),( ACS + FirstVNF_RAM_Server ) ) ) ) * ( ( ( ( BR + FirstVNF_RAM ) * Min( Const ,FirstVNF_Mem ) ) + Max( ( ARS + ACS ),( DDR + FirstVNF_RAM_Server ) ) ) + ( ( Min( ACS ,PN ) + Min( RRS ,FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem ),( CRS * BR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( RRSe * RMSe ) + Max( CS,MUR ) ) * ( Min( CS ,MUM ) * ( MLU + CS ) ) ) * ( ( ( ( RMSe + RMSe ) - ( MUM * MUR ) ) / Max( CS,MUR ) ) - Max( ( RCSe + MLU ),( RMSe * DS ) ) ) )", "obj1": 0.9959919839679359, "obj2": 0.0013171715876164084}, {"determining": "Min( Min( Max( ( ( ( Max( Min( DDR ,FirstVNF_Mem ),( AMS / FirstVNF_Mem_Server ) ) + Min( ( MRS + RRS ) ,Min( AMS ,PN ) ) ) - Min( ( ( MRS / FirstVNF_Mem ) + ( MRS + FirstVNF_CPU ) ) ,Min( Min( BR ,FirstVNF_CPU ) ,Max( ARS,FirstVNF_Mem ) ) ) ) / ( ( Min( ( DDR + FirstVNF_RAM ) ,( RRS * FirstVNF_RAM ) ) - ( ( DDR / RRS ) + Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ) - ( ( ( Const + MDR ) + Max( ARS,AMS ) ) * ( ( PN + ARS ) / ( FirstVNF_RAM_Server / ACS ) ) ) ) ),( Max( ( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / ( MRS / BR ) ) / Max( ( Const - MDR ),( FirstVNF_CPU + BR ) ) ),( ( Min( DDR ,FirstVNF_Mem ) + ( FirstVNF_RAM / Const ) ) + ( Min( FirstVNF_CPU_Server ,MRS ) - ( Const + FirstVNF_CPU ) ) ) ) + ( ( ( ( FirstVNF_CPU_Server * PN ) / ( CRS * MRS ) ) + Min( ( PN * FirstVNF_RAM ) ,( PN + PN ) ) ) + ( ( Max( FirstVNF_CPU_Server,MDR ) - Max( BR,FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem + AMS ) - ( FirstVNF_Mem - Const ) ) ) ) ) ) ,( ( ( ( ( ( BR + FirstVNF_CPU_Server ) + ( DDR - AMS ) ) + ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) + Min( DDR ,FirstVNF_RAM ) ) ) - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) * Max( ( FirstVNF_RAM + AMS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) ) + ( ( ( Max( BR,DDR ) / ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / Max( Max( Const,FirstVNF_CPU ),Min( PN ,ACS ) ) ) / Min( ( Max( MRS,Const ) + Min( MRS ,BR ) ) ,( Min( ARS ,Const ) / ( FirstVNF_Mem_Server + PN ) ) ) ) ) / ( ( Min( ( ( AMS * ACS ) * ( AMS - FirstVNF_CPU_Server ) ) ,( Min( RRS ,FirstVNF_RAM ) + ( FirstVNF_Mem * DDR ) ) ) - ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) + Max( FirstVNF_RAM,DDR ) ) * Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,BR ) ) ) ) * Max( ( ( Max( FirstVNF_RAM_Server,AMS ) + ( CRS - RRS ) ) - ( ( MRS / FirstVNF_RAM ) - Min( MRS ,MDR ) ) ),Max( ( ( CRS / FirstVNF_Mem ) / Min( MDR ,CRS ) ),( ( Const * ACS ) + ( FirstVNF_CPU - FirstVNF_RAM ) ) ) ) ) ) ) ,Max( ( ( ( ( Min( Max( CRS,ARS ) ,Min( ACS ,MRS ) ) / Max( ( FirstVNF_RAM_Server + PN ),( Const - AMS ) ) ) / ( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * ( RRS - RRS ) ) / ( ( RRS * ACS ) + Min( CRS ,FirstVNF_Mem ) ) ) ) + Max( Max( ( Min( Const ,FirstVNF_CPU_Server ) * Min( AMS ,FirstVNF_CPU ) ),( ( FirstVNF_RAM / MRS ) - Max( FirstVNF_Mem,FirstVNF_CPU ) ) ),( Min( ( FirstVNF_CPU * DDR ) ,( ACS * AMS ) ) * Max( ( FirstVNF_CPU_Server * Const ),( Const * FirstVNF_Mem ) ) ) ) ) + Min( ( ( ( ( ACS * CRS ) - ( MDR + MDR ) ) - Max( ( BR + AMS ),( ARS - FirstVNF_RAM_Server ) ) ) * ( ( ( MRS / CRS ) * Min( FirstVNF_Mem ,PN ) ) - ( ( BR - DDR ) / Min( AMS ,CRS ) ) ) ) ,( Max( Min( Min( FirstVNF_RAM_Server ,CRS ) ,( Const + CRS ) ),( Min( ARS ,AMS ) - ( FirstVNF_CPU / BR ) ) ) / ( Max( ( AMS - ARS ),( RRS + FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_RAM_Server ,BR ) + ( ACS / FirstVNF_Mem_Server ) ) ) ) ) ),( Min( ( ( ( Min( ACS ,BR ) + ( FirstVNF_CPU * RRS ) ) + ( ( DDR * BR ) / ( CRS + FirstVNF_CPU_Server ) ) ) + ( ( ( DDR - BR ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) - ( ( Const * ACS ) * ( AMS * FirstVNF_RAM ) ) ) ) ,( ( ( ( CRS / AMS ) * ( MRS / FirstVNF_Mem ) ) / ( Max( AMS,MRS ) + ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) ) / ( ( ( Const + MDR ) * Max( Const,MRS ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) - ( AMS * AMS ) ) ) ) ) / ( ( ( ( ( FirstVNF_RAM * AMS ) * ( ARS / MDR ) ) * Max( ( FirstVNF_Mem - PN ),( FirstVNF_Mem_Server - ARS ) ) ) * Max( ( Min( AMS ,CRS ) - Min( ARS ,BR ) ),Max( Min( ARS ,FirstVNF_CPU_Server ),( ACS + FirstVNF_RAM_Server ) ) ) ) * ( ( ( ( BR + FirstVNF_RAM ) * Min( Const ,FirstVNF_Mem ) ) + Max( ( ARS + ACS ),( DDR + FirstVNF_RAM_Server ) ) ) + ( ( Min( ACS ,PN ) + Min( RRS ,FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_RAM_Server + FirstVNF_Mem ),( CRS * BR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( RRSe * RMSe ) + Max( CS,MUR ) ) * ( Min( CS ,RMSe ) * ( MLU + CS ) ) ) * ( ( ( MUC / RRSe ) / Max( CS,MUR ) ) - Max( ( RCSe + MLU ),( RMSe * DS ) ) ) )", "obj1": 0.9959919839679359, "obj2": 0.0013171715876164084}, {"determining": "( ( CRS * ARS ) / ( MRS - BR ) )", "choosing": "Max( ( Min( ( RRSe - RCSe ) ,( MUR + MLU ) ) * Min( Min( RRSe ,MUR ) ,( DS + MUR ) ) ),Min( ( ( RCSe * MUC ) + Max( RMSe,MLU ) ) ,Min( ( MUR * DS ) ,Max( MUR,RRSe ) ) ) )", "obj1": 0.9719438877755511, "obj2": 0.026604051879742782}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) - Max( Max( BR,( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) / ( DDR - ACS ) ) - ( Min( AMS ,CRS ) * ( AMS + ACS ) ) ) ),MDR ) )", "choosing": "Min( ( ( MUC + MUR ) - ( RCSe / RMSe ) ) ,( RRSe + MUR ) )", "obj1": 0.6893787575150301, "obj2": 0.18576773735869037}, {"determining": "( ( RRS - FirstVNF_CPU ) / ( CRS - ( ( BR * PN ) * FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Min( ( RRSe - RCSe ) ,( MUR + MLU ) ) * ( Max( MUM,MLU ) - Max( RMSe,MLU ) ) ),Min( ( ( RCSe * MUC ) + Max( Min( ( RCSe * RRSe ) ,( RCSe / MLU ) ),MLU ) ) ,Min( ( MUR * DS ) ,Max( MUR,RRSe ) ) ) )", "obj1": 0.9859719438877755, "obj2": 0.005548088676077445}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) - Max( Max( BR,CRS ),MDR ) )", "choosing": "( ( ( ( RRSe * MLU ) + Max( CS,MUR ) ) * ( Min( CS ,RMSe ) * ( MLU + RCSe ) ) ) * ( ( ( MUC / RRSe ) / Max( CS,MUR ) ) - Max( ( RCSe + MLU ),( RMSe * DS ) ) ) )", "obj1": 0.6713426853707415, "obj2": 0.20582934790454654}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + RMSe ) - ( Min( DS ,MLU ) - ( RRSe - MLU ) ) )", "obj1": 0.5951903807615231, "obj2": 0.28819124569424226}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + RMSe ) - ( Min( DS ,MLU ) - ( RRSe - MLU ) ) )", "obj1": 0.5951903807615231, "obj2": 0.28819124569424226}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - ACS ),Max( BR,FirstVNF_CPU ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU / MUM ) ) ) ,( Max( ( MUC * MUC ),( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6112224448897795, "obj2": 0.2709717010351351}, {"determining": "( ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( MUM * DS ) / DS ) )", "obj1": 0.6192384769539078, "obj2": 0.2568377632488069}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * DS ) )", "obj1": 0.5851703406813628, "obj2": 0.29739066188849045}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( PN / RRS ) / ( MRS + ( ( RRS - FirstVNF_CPU ) / ( CRS - ( ( BR * PN ) * FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( RMSe + MLU ) - ( MUM * DS ) )", "obj1": 0.9759519038076152, "obj2": 0.009922912460377355}, {"determining": "( ( CRS * ( Min( RRS ,( ACS - ARS ) ) + ( CRS * ( CRS * ARS ) ) ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RRSe * RMSe ) + Max( CS,MUR ) ) * ( Min( CS ,RMSe ) * ( MLU + RCSe ) ) ) * ( ( ( MUC / RRSe ) / Min( ( ( RMSe + RMSe ) - ( MUM * MUR ) ) ,( ( MUM / RCSe ) / ( RMSe / MUC ) ) ) ) - Max( ( RCSe + MLU ),( RMSe * DS ) ) ) )", "obj1": 0.9278557114228457, "obj2": 0.04771930616569289}, {"determining": "( Min( RRS ,( ACS - ARS ) ) + ( CRS * ( CRS * ARS ) ) )", "choosing": "Min( ( ( RMSe + RMSe ) - ( RCSe * MUR ) ) ,( ( MUM / RCSe ) / ( RMSe / MUC ) ) )", "obj1": 0.8717434869739479, "obj2": 0.090980329018353}, {"determining": "( ( CRS * ARS ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUR ) + ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6112224448897795, "obj2": 0.2709717010351351}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * RCSe ) )", "obj1": 0.6032064128256514, "obj2": 0.27170928553578727}, {"determining": "( ( CRS * ( CRS * ( MDR / Min( MDR ,FirstVNF_Mem ) ) ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( RMSe * ( ( ( MUC / RRSe ) / Max( CS,MUR ) ) - Max( ( RCSe + MLU ),( RMSe * DS ) ) ) )", "obj1": 0.6412825651302605, "obj2": 0.24362181597087415}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),( BR / FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6012024048096193, "obj2": 0.28416346547041355}, {"determining": "( Min( FirstVNF_CPU_Server ,( Const * Const ) ) - Max( Max( BR,CRS ),MDR ) )", "choosing": "Min( ( RMSe + Min( Min( MUC ,MUC ) ,( MUR * MUR ) ) ) ,( Max( ( MLU + RCSe ),Min( DS ,DS ) ) + Min( Max( CS,MLU ) ,( MUC - RCSe ) ) ) )", "obj1": 0.8777555110220441, "obj2": 0.050599919727954135}, {"determining": "( Min( FirstVNF_CPU_Server ,( Const * FirstVNF_CPU_Server ) ) - Max( Max( BR,CRS ),MDR ) )", "choosing": "( ( ( ( RRSe * RMSe ) + Max( CS,MUR ) ) * ( Min( CS ,RMSe ) * ( MLU + RCSe ) ) ) * ( ( ( MUC / RRSe ) / Max( CS,MUR ) ) - Max( ( RCSe + MLU ),( RMSe * DS ) ) ) )", "obj1": 0.7194388777555111, "obj2": 0.14531297274746727}, {"determining": "( ( CRS * ARS ) * ( Const * DDR ) )", "choosing": "( ( ( ( RRSe * RMSe ) + Max( CS,MUR ) ) * ( Min( CS ,RMSe ) * ( MLU + RCSe ) ) ) * ( Max( CS,MUR ) - Max( ( RCSe + MLU ),( RMSe * DS ) ) ) )", "obj1": 0.625250501002004, "obj2": 0.25517482200249975}, {"determining": "( Min( CRS ,DDR ) - Max( Max( BR,CRS ),MDR ) )", "choosing": "( ( ( ( RRSe * RMSe ) + Max( CS,MUR ) ) * ( Min( CS ,RMSe ) * ( MLU + RCSe ) ) ) * ( ( ( MUC / RRSe ) / Max( CS,MUR ) ) - Max( ( RCSe + MLU ),( RMSe * DS ) ) ) )", "obj1": 0.657314629258517, "obj2": 0.21326196653130117}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) - Max( Max( BR,( ( ( FirstVNF_CPU / MRS ) / ( DDR - ACS ) ) - ARS ) ),MDR ) )", "choosing": "Min( ( ( MUC + ( Min( ( RCSe - MLU ) ,Min( MUR ,DS ) ) + Min( Min( MUC ,MUC ) ,( MUR * MUR ) ) ) ) - ( RCSe / RMSe ) ) ,( RRSe + MUR ) )", "obj1": 0.6933867735470942, "obj2": 0.18198912034476875}, {"determining": "( ( Max( ( Min( Max( RRS,ARS ) ,( AMS / BR ) ) + ( ( MRS * MDR ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) ),( Min( Max( FirstVNF_CPU,Const ) ,( RRS + FirstVNF_RAM ) ) - Max( ( RRS + MRS ),( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) * FirstVNF_CPU_Server ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( MLU - ( ( RRSe / MUR ) / Max( RCSe,RMSe ) ) )", "obj1": 0.6292585170340681, "obj2": 0.25081267033566623}, {"determining": "( Min( RRS ,( ACS - ARS ) ) + ( CRS * Min( CRS ,ARS ) ) )", "choosing": "Min( ( ( RMSe + RMSe ) - ( MUM * MUR ) ) ,( ( MUM / RCSe ) + ( RMSe / MUC ) ) )", "obj1": 0.935871743486974, "obj2": 0.038284595627979624}], "6": [{"determining": "( Min( DDR ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( CS * DS ) / ( MLU * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * DS ) )", "obj1": 0.5851703406813628, "obj2": 0.29739066188849045}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + RMSe ) - ( Min( DS ,MLU ) - ( RRSe - MLU ) ) )", "obj1": 0.5951903807615231, "obj2": 0.28819124569424226}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) + ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6112224448897795, "obj2": 0.2709717010351351}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),( BR / FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6112224448897795, "obj2": 0.2709717010351351}, {"determining": "( ( Max( ( Min( Max( RRS,ARS ) ,( AMS / PN ) ) + ( ( MRS * MDR ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) ),( Min( Min( FirstVNF_CPU ,Const ) ,( RRS + FirstVNF_RAM ) ) - Max( ( RRS + MRS ),( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) * FirstVNF_CPU_Server ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( MLU - Max( ( RRSe / MUM ),Max( RCSe,RMSe ) ) )", "obj1": 0.6292585170340681, "obj2": 0.25081267033566623}, {"determining": "( ( CRS * ( CRS * ( MDR / Min( MDR ,FirstVNF_Mem ) ) ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( RMSe * ( ( ( MUC / RRSe ) / Max( CS,MUR ) ) - Max( ( RCSe + MLU ),( RMSe * DS ) ) ) )", "obj1": 0.6412825651302605, "obj2": 0.24362181597087415}, {"determining": "( ( CRS * ARS ) * ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RRSe * RMSe ) + Max( CS,MUR ) ) * ( Min( CS ,RMSe ) * ( MLU + RCSe ) ) ) * ( ( ( MUC / RRSe ) / Max( CS,MUR ) ) - Max( ( RCSe + MLU ),( RMSe * DS ) ) ) )", "obj1": 0.6072144288577155, "obj2": 0.27116198722284546}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( ARS,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RCSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) + ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6112224448897795, "obj2": 0.2709717010351351}, {"determining": "( ( CRS * ARS ) / Max( BR,CRS ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * RCSe ) )", "obj1": 0.6392785571142284, "obj2": 0.2487523120854848}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) - Max( Max( BR,( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) / ( DDR - ACS ) ) - ( Min( AMS ,CRS ) * ( AMS + ACS ) ) ) ),MDR ) )", "choosing": "Min( ( ( MUC + MUR ) - ( RCSe / RMSe ) ) ,( RRSe + MUR ) )", "obj1": 0.6893787575150301, "obj2": 0.18576773735869037}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + RMSe ) - ( Min( DS ,MLU ) - ( RRSe - MLU ) ) )", "obj1": 0.5951903807615231, "obj2": 0.28819124569424226}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + RMSe ) - ( Min( DS ,MLU ) - ( RRSe - MLU ) ) )", "obj1": 0.5951903807615231, "obj2": 0.28819124569424226}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - ACS ),Max( BR,FirstVNF_CPU ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU / MUM ) ) ) ,( Max( ( MUC * MUC ),( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6112224448897795, "obj2": 0.2709717010351351}, {"determining": "( ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( MUM * DS ) / DS ) )", "obj1": 0.6192384769539078, "obj2": 0.2568377632488069}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * DS ) )", "obj1": 0.5851703406813628, "obj2": 0.29739066188849045}, {"determining": "( ( CRS * ARS ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUR ) + ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6112224448897795, "obj2": 0.2709717010351351}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * RCSe ) )", "obj1": 0.6032064128256514, "obj2": 0.27170928553578727}, {"determining": "( ( CRS * ( CRS * ( MDR / Min( MDR ,FirstVNF_Mem ) ) ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( RMSe * ( ( ( MUC / RRSe ) / Max( CS,MUR ) ) - Max( ( RCSe + MLU ),( RMSe * DS ) ) ) )", "obj1": 0.6412825651302605, "obj2": 0.24362181597087415}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),( BR / FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6012024048096193, "obj2": 0.28416346547041355}, {"determining": "( Min( FirstVNF_CPU_Server ,( Const * FirstVNF_CPU_Server ) ) - Max( Max( BR,CRS ),MDR ) )", "choosing": "( ( ( ( RRSe * RMSe ) + Max( CS,MUR ) ) * ( Min( CS ,RMSe ) * ( MLU + RCSe ) ) ) * ( ( ( MUC / RRSe ) / Max( CS,MUR ) ) - Max( ( RCSe + MLU ),( RMSe * DS ) ) ) )", "obj1": 0.7194388777555111, "obj2": 0.14531297274746727}, {"determining": "( ( CRS * ARS ) * ( Const * DDR ) )", "choosing": "( ( ( ( RRSe * RMSe ) + Max( CS,MUR ) ) * ( Min( CS ,RMSe ) * ( MLU + RCSe ) ) ) * ( Max( CS,MUR ) - Max( ( RCSe + MLU ),( RMSe * DS ) ) ) )", "obj1": 0.625250501002004, "obj2": 0.25517482200249975}, {"determining": "( Min( CRS ,DDR ) - Max( Max( BR,CRS ),MDR ) )", "choosing": "( ( ( ( RRSe * RMSe ) + Max( CS,MUR ) ) * ( Min( CS ,RMSe ) * ( MLU + RCSe ) ) ) * ( ( ( MUC / RRSe ) / Max( CS,MUR ) ) - Max( ( RCSe + MLU ),( RMSe * DS ) ) ) )", "obj1": 0.657314629258517, "obj2": 0.21326196653130117}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) - Max( Max( BR,( ( ( FirstVNF_CPU / MRS ) / ( DDR - ACS ) ) - ARS ) ),MDR ) )", "choosing": "Min( ( ( MUC + ( Min( ( RCSe - MLU ) ,Min( MUR ,DS ) ) + Min( Min( MUC ,MUC ) ,( MUR * MUR ) ) ) ) - ( RCSe / RMSe ) ) ,( RRSe + MUR ) )", "obj1": 0.6933867735470942, "obj2": 0.18198912034476875}, {"determining": "( ( Max( ( Min( Max( RRS,ARS ) ,( AMS / BR ) ) + ( ( MRS * MDR ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) ),( Min( Max( FirstVNF_CPU,Const ) ,( RRS + FirstVNF_RAM ) ) - Max( ( RRS + MRS ),( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) * FirstVNF_CPU_Server ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( MLU - ( ( RRSe / MUR ) / Max( RCSe,RMSe ) ) )", "obj1": 0.6292585170340681, "obj2": 0.25081267033566623}, {"determining": "( Min( FirstVNF_CPU_Server ,( Const * FirstVNF_CPU_Server ) ) - Max( Max( BR,CRS ),MDR ) )", "choosing": "( ( ( ( RRSe * RMSe ) + Max( CS,MUR ) ) * ( Min( CS ,RMSe ) * ( MLU + RCSe ) ) ) * ( ( ( MUC / RRSe ) / Max( CS,MUR ) ) - Max( ( RCSe + MLU ),( RMSe * DS ) ) ) )", "obj1": 0.7194388777555111, "obj2": 0.14531297274746727}, {"determining": "( ( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) ) / ( MRS / BR ) )", "choosing": "Max( ( Min( ( RRSe - RCSe ) ,( MUR + MLU ) ) * Min( Min( RRSe ,MUR ) ,( DS + MUR ) ) ),( MLU - RCSe ) )", "obj1": 0.6492985971943888, "obj2": 0.2433570479178533}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * DS ) )", "obj1": 0.5851703406813628, "obj2": 0.29739066188849045}, {"determining": "( Min( CRS ,ARS ) * ( Const * DDR ) )", "choosing": "( ( ( ( RRSe * RMSe ) + Max( CS,MUR ) ) * ( Min( RCSe ,RMSe ) * ( MLU + RCSe ) ) ) * ( Max( CS,MUR ) - Max( ( RCSe + MLU ),( RMSe * DS ) ) ) )", "obj1": 0.625250501002004, "obj2": 0.25517482200249975}, {"determining": "( ( CRS * ( CRS * ( MDR / Min( MDR ,FirstVNF_Mem ) ) ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( RMSe * ( ( ( MUC / RRSe ) / Max( CS,MUR ) ) - Max( ( RCSe + MLU ),( RMSe * DS ) ) ) )", "obj1": 0.6412825651302605, "obj2": 0.24362181597087415}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) - Max( Max( BR,( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) / ( DDR - ACS ) ) - ( Min( AMS ,CRS ) * ( AMS + ACS ) ) ) ),MDR ) )", "choosing": "Min( ( ( MUC + MUR ) - ( RCSe / RMSe ) ) ,( RRSe + MUR ) )", "obj1": 0.6893787575150301, "obj2": 0.18576773735869037}, {"determining": "( Min( FirstVNF_CPU_Server ,Min( FirstVNF_CPU_Server ,( Const * FirstVNF_CPU_Server ) ) ) - Max( Max( BR,CRS ),MDR ) )", "choosing": "( ( ( ( RRSe * RMSe ) + Max( CS,MUR ) ) * Min( ( RCSe - Min( CS ,RMSe ) ) ,Min( MUR ,DS ) ) ) * ( ( ( MUC / RRSe ) / Max( CS,MUR ) ) - Max( ( RCSe + MLU ),( RMSe * DS ) ) ) )", "obj1": 0.6953907815631263, "obj2": 0.17471151337281957}, {"determining": "( ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( MUM * DS ) / DS ) )", "obj1": 0.6192384769539078, "obj2": 0.2568377632488069}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + RMSe ) - ( Min( DS ,MLU ) - ( RRSe - MLU ) ) )", "obj1": 0.5951903807615231, "obj2": 0.28819124569424226}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( ( Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) - Max( Max( BR,CRS ),MDR ) ) * FirstVNF_CPU_Server ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MUC + MLU ) - ( RCSe + RMSe ) ) + RMSe ) - ( Min( DS ,MLU ) - ( RRSe - MLU ) ) )", "obj1": 0.5831663326653307, "obj2": 0.30273461259926077}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),( BR / FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6012024048096193, "obj2": 0.28416346547041355}, {"determining": "( ( CRS * ARS ) * ( Const * DDR ) )", "choosing": "( ( ( ( RRSe * RMSe ) + Max( CS,MUR ) ) * ( Min( CS ,RMSe ) * ( MLU + RCSe ) ) ) * ( Max( CS,MUR ) - Max( ( RCSe + MLU ),( RMSe * DS ) ) ) )", "obj1": 0.625250501002004, "obj2": 0.25517482200249975}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) - Max( Max( BR,( ( ( FirstVNF_CPU / MRS ) / ( DDR - ACS ) ) - ARS ) ),MDR ) )", "choosing": "Min( ( ( MUC + ( Min( ( RCSe - MLU ) ,Min( MUR ,DS ) ) + Min( Min( MUC ,MUC ) ,( MUR * MUR ) ) ) ) - ( RCSe / RMSe ) ) ,( RRSe + MUR ) )", "obj1": 0.6933867735470942, "obj2": 0.18198912034476875}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) + ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6112224448897795, "obj2": 0.2709717010351351}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( PN / RRS ) / ( FirstVNF_RAM_Server + MRS ) ) ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * MLU ) )", "obj1": 0.5851703406813628, "obj2": 0.29739066188849045}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) + ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6112224448897795, "obj2": 0.2709717010351351}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * RCSe ) )", "obj1": 0.6032064128256514, "obj2": 0.27170928553578727}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * DS ) )", "obj1": 0.5851703406813628, "obj2": 0.29739066188849045}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),( FirstVNF_RAM_Server + FirstVNF_RAM ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "Min( Min( ( RRSe / MUR ) ,Max( RCSe,RMSe ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.5971943887775552, "obj2": 0.2861777507065155}, {"determining": "( ( Max( ( Min( Max( RRS,ARS ) ,( AMS / BR ) ) + ( ( MRS * MDR ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) ),( Min( Min( FirstVNF_CPU ,Const ) ,( RRS + FirstVNF_RAM ) ) - Max( ( RRS + MRS ),( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) * FirstVNF_CPU_Server ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( MLU - Min( ( RRSe / MUR ) ,Max( RCSe,RMSe ) ) )", "obj1": 0.6292585170340681, "obj2": 0.25081267033566623}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),( BR / FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6012024048096193, "obj2": 0.28416346547041355}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),( BR / FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * RCSe ) )", "obj1": 0.6392785571142284, "obj2": 0.2487523120854848}, {"determining": "( ( CRS * ARS ) / Max( BR,CRS ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6012024048096193, "obj2": 0.28416346547041355}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,CRS ),MDR ) )", "choosing": "Min( Max( RRSe,MLU ) ,Min( ( RRSe / MUR ) ,Min( RCSe ,RMSe ) ) )", "obj1": 0.6693386773547094, "obj2": 0.20045858465422814}, {"determining": "( ( CRS * ARS ) / Min( Const ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) + ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6112224448897795, "obj2": 0.2709717010351351}, {"determining": "( ( CRS * ARS ) / ( ( CRS * ARS ) / ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) ) )", "choosing": "Max( ( Min( ( RRSe - RCSe ) ,( MUR + MLU ) ) * Min( Min( RRSe ,MUR ) ,( DS + MUR ) ) ),Min( ( ( RCSe * MUC ) + Max( RMSe,MLU ) ) ,( ( RMSe + RMSe ) - ( MUM * DS ) ) ) )", "obj1": 0.6132264529058116, "obj2": 0.2703427975770731}], "7": [{"determining": "( Min( DDR ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( CS * DS ) / ( MLU * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * DS ) )", "obj1": 0.5851703406813628, "obj2": 0.29739066188849045}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) + ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6112224448897795, "obj2": 0.2709717010351351}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),( BR / FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6112224448897795, "obj2": 0.2709717010351351}, {"determining": "( ( CRS * ARS ) * ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RRSe * RMSe ) + Max( CS,MUR ) ) * ( Min( CS ,RMSe ) * ( MLU + RCSe ) ) ) * ( ( ( MUC / RRSe ) / Max( CS,MUR ) ) - Max( ( RCSe + MLU ),( RMSe * DS ) ) ) )", "obj1": 0.6072144288577155, "obj2": 0.27116198722284546}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( ARS,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RCSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) + ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6112224448897795, "obj2": 0.2709717010351351}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) - Max( Max( BR,( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) / ( DDR - ACS ) ) - ( Min( AMS ,CRS ) * ( AMS + ACS ) ) ) ),MDR ) )", "choosing": "Min( ( ( MUC + MUR ) - ( RCSe / RMSe ) ) ,( RRSe + MUR ) )", "obj1": 0.6893787575150301, "obj2": 0.18576773735869037}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - ACS ),Max( BR,FirstVNF_CPU ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU / MUM ) ) ) ,( Max( ( MUC * MUC ),( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6112224448897795, "obj2": 0.2709717010351351}, {"determining": "( ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( MUM * DS ) / DS ) )", "obj1": 0.6192384769539078, "obj2": 0.2568377632488069}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * DS ) )", "obj1": 0.5851703406813628, "obj2": 0.29739066188849045}, {"determining": "( ( CRS * ARS ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUR ) + ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6112224448897795, "obj2": 0.2709717010351351}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * RCSe ) )", "obj1": 0.6032064128256514, "obj2": 0.27170928553578727}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),( BR / FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6012024048096193, "obj2": 0.28416346547041355}, {"determining": "( Min( CRS ,DDR ) - Max( Max( BR,CRS ),MDR ) )", "choosing": "( ( ( ( RRSe * RMSe ) + Max( CS,MUR ) ) * ( Min( CS ,RMSe ) * ( MLU + RCSe ) ) ) * ( ( ( MUC / RRSe ) / Max( CS,MUR ) ) - Max( ( RCSe + MLU ),( RMSe * DS ) ) ) )", "obj1": 0.657314629258517, "obj2": 0.21326196653130117}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * DS ) )", "obj1": 0.5851703406813628, "obj2": 0.29739066188849045}, {"determining": "( ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( MUM * DS ) / DS ) )", "obj1": 0.6192384769539078, "obj2": 0.2568377632488069}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( ( Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) - Max( Max( BR,CRS ),MDR ) ) * FirstVNF_CPU_Server ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MUC + MLU ) - ( RCSe + RMSe ) ) + RMSe ) - ( Min( DS ,MLU ) - ( RRSe - MLU ) ) )", "obj1": 0.5831663326653307, "obj2": 0.30273461259926077}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),( BR / FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6012024048096193, "obj2": 0.28416346547041355}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) + ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6112224448897795, "obj2": 0.2709717010351351}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( PN / RRS ) / ( FirstVNF_RAM_Server + MRS ) ) ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * MLU ) )", "obj1": 0.5851703406813628, "obj2": 0.29739066188849045}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) + ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6112224448897795, "obj2": 0.2709717010351351}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * RCSe ) )", "obj1": 0.6032064128256514, "obj2": 0.27170928553578727}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * DS ) )", "obj1": 0.5851703406813628, "obj2": 0.29739066188849045}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),( BR / FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6012024048096193, "obj2": 0.28416346547041355}, {"determining": "( ( CRS * ARS ) / Max( BR,CRS ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6012024048096193, "obj2": 0.28416346547041355}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,CRS ),MDR ) )", "choosing": "Min( Max( RRSe,MLU ) ,Min( ( RRSe / MUR ) ,Min( RCSe ,RMSe ) ) )", "obj1": 0.6693386773547094, "obj2": 0.20045858465422814}, {"determining": "( ( CRS * ARS ) / Min( Const ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) + ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6112224448897795, "obj2": 0.2709717010351351}, {"determining": "( ( CRS * ( CRS * ( MDR / Min( MDR ,FirstVNF_Mem ) ) ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( RMSe * ( ( ( MUC / RRSe ) / Max( CS,MUR ) ) - Max( ( RCSe + MLU ),( RMSe * DS ) ) ) )", "obj1": 0.6212424849699398, "obj2": 0.25361660705557654}, {"determining": "( FirstVNF_RAM_Server - Max( Max( BR,CRS ),MDR ) )", "choosing": "Min( Max( RRSe,MLU ) ,Min( ( RRSe / MUR ) ,Max( RCSe,RMSe ) ) )", "obj1": 0.6693386773547094, "obj2": 0.20045858465422814}, {"determining": "( FirstVNF_RAM_Server - Max( Max( BR,CRS ),MDR ) )", "choosing": "Min( Max( RRSe,MLU ) ,Min( ( RRSe / MUR ) ,Max( RCSe,RMSe ) ) )", "obj1": 0.6693386773547094, "obj2": 0.20045858465422814}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * DS ) )", "obj1": 0.5851703406813628, "obj2": 0.29739066188849045}, {"determining": "( ( CRS * Max( CRS,( MDR / Min( MDR ,FirstVNF_Mem ) ) ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( RMSe * ( ( ( MUC / RRSe ) / Max( CS,MUR ) ) - Max( ( RCSe + MLU ),( CS * DS ) ) ) )", "obj1": 0.6212424849699398, "obj2": 0.25361660705557654}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * MLU ) )", "obj1": 0.6152304609218436, "obj2": 0.2665065029686172}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( PN / RRS ) / ( FirstVNF_RAM_Server + MRS ) ) ) )", "choosing": "( ( ( ( RRSe * RMSe ) + Max( CS,MUR ) ) * ( Min( CS ,RMSe ) * ( MLU + RCSe ) ) ) * ( ( ( MUC / RRSe ) / Max( CS,MUR ) ) - Max( ( RCSe + MLU ),( RMSe * DS ) ) ) )", "obj1": 0.6072144288577155, "obj2": 0.27116198722284546}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) - Max( Max( BR,CRS ),MDR ) )", "choosing": "( ( ( ( RRSe * RMSe ) + Max( CS,MUR ) ) * ( Min( CS ,RMSe ) * ( MLU + RCSe ) ) ) * ( ( ( MUC / RRSe ) / Max( CS,MUR ) ) - Max( ( RCSe + MLU ),( RMSe * DS ) ) ) )", "obj1": 0.657314629258517, "obj2": 0.21326196653130117}, {"determining": "( ( Max( ( Min( Max( RRS,ARS ) ,( AMS / PN ) ) + ( ( MRS * MDR ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) ),( Min( Min( FirstVNF_CPU ,Const ) ,( RRS + FirstVNF_RAM ) ) - Max( ( RRS + MRS ),( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) * FirstVNF_CPU_Server ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * DS ) )", "obj1": 0.5851703406813628, "obj2": 0.29739066188849045}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6012024048096193, "obj2": 0.28416346547041355}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),( BR / FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) + ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6112224448897795, "obj2": 0.2709717010351351}, {"determining": "( ( Const * ( ( PN / RRS ) / ( FirstVNF_RAM_Server + MRS ) ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + RMSe ) - ( ( RMSe + RMSe ) - ( RRSe - MLU ) ) )", "obj1": 0.6132264529058116, "obj2": 0.269418416464408}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( ( ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) / ( Const * FirstVNF_CPU_Server ) ) / RRS ) / ( MRS + FirstVNF_Mem ) ) ) )", "choosing": "( ( RMSe + ( ( MUM * DS ) / DS ) ) - ( MUM * RRSe ) )", "obj1": 0.5851703406813628, "obj2": 0.29739066188849045}, {"determining": "( ( Const * ( ( CRS * FirstVNF_CPU ) / ( MRS + MRS ) ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( Min( RMSe ,MUC ) - ( ( MUM * DS ) / RMSe ) )", "obj1": 0.591182364729459, "obj2": 0.2848160514740039}, {"determining": "( ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * DS ) )", "obj1": 0.5851703406813628, "obj2": 0.29739066188849045}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( MUM * DS ) / DS ) )", "obj1": 0.6192384769539078, "obj2": 0.2568377632488069}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) / ( Const + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * RCSe ) )", "obj1": 0.6032064128256514, "obj2": 0.27170928553578727}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),( BR / FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6012024048096193, "obj2": 0.28416346547041355}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * DS ) )", "obj1": 0.5851703406813628, "obj2": 0.29739066188849045}, {"determining": "( FirstVNF_RAM_Server - Max( Max( BR,ARS ),MDR ) )", "choosing": "Min( Max( RRSe,MLU ) ,Min( ( RRSe / Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) ) ) ,Max( RCSe,RMSe ) ) )", "obj1": 0.6833667334669339, "obj2": 0.18808068506011727}, {"determining": "( ( Max( ( Min( Max( RRS,ARS ) ,( AMS / BR ) ) + ( ( MRS * MDR ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) ),( Min( Max( FirstVNF_CPU,Const ) ,( RRS + FirstVNF_RAM ) ) - Max( ( RRS + MRS ),( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) * FirstVNF_CPU_Server ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6012024048096193, "obj2": 0.28416346547041355}, {"determining": "( ( CRS / ARS ) / ( Const * ( ( PN / RRS ) / ( ( FirstVNF_RAM_Server - Max( Max( BR,CRS ),MDR ) ) + MRS ) ) ) )", "choosing": "( ( RRSe / RRSe ) - ( MUM * DS ) )", "obj1": 0.6472945891783567, "obj2": 0.22651140933263592}, {"determining": "( FirstVNF_RAM_Server - Max( Max( BR,CRS ),MDR ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * DS ) )", "obj1": 0.625250501002004, "obj2": 0.2387415065776158}, {"determining": "( ( CRS * ( CRS * ( ACS / Min( MDR ,FirstVNF_Mem ) ) ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RRSe * RMSe ) + Max( CS,MUR ) ) * ( Min( CS ,RMSe ) * ( MLU + RCSe ) ) ) * ( ( ( MUC / RRSe ) / Max( CS,MUR ) ) - ( ( RCSe + MLU ) - ( RMSe * DS ) ) ) )", "obj1": 0.6072144288577155, "obj2": 0.27116198722284546}], "8": [{"determining": "( Min( DDR ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( CS * DS ) / ( MLU * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * ARS ) * ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RRSe * RMSe ) + Max( CS,MUR ) ) * ( Min( CS ,RMSe ) * ( MLU + RCSe ) ) ) * ( ( ( MUC / RRSe ) / Max( CS,MUR ) ) - Max( ( RCSe + MLU ),( RMSe * DS ) ) ) )", "obj1": 0.6072144288577155, "obj2": 0.27116198722284546}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * RCSe ) )", "obj1": 0.6032064128256514, "obj2": 0.27170928553578727}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),( BR / FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6012024048096193, "obj2": 0.28416346547041355}, {"determining": "( Min( CRS ,DDR ) - Max( Max( BR,CRS ),MDR ) )", "choosing": "( ( ( ( RRSe * RMSe ) + Max( CS,MUR ) ) * ( Min( CS ,RMSe ) * ( MLU + RCSe ) ) ) * ( ( ( MUC / RRSe ) / Max( CS,MUR ) ) - Max( ( RCSe + MLU ),( RMSe * DS ) ) ) )", "obj1": 0.657314629258517, "obj2": 0.21326196653130117}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( ( Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) - Max( Max( BR,CRS ),MDR ) ) * FirstVNF_CPU_Server ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MUC + MLU ) - ( RCSe + RMSe ) ) + RMSe ) - ( Min( DS ,MLU ) - ( RRSe - MLU ) ) )", "obj1": 0.5831663326653307, "obj2": 0.30273461259926077}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),( BR / FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6012024048096193, "obj2": 0.28416346547041355}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * RCSe ) )", "obj1": 0.6032064128256514, "obj2": 0.27170928553578727}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),( BR / FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6012024048096193, "obj2": 0.28416346547041355}, {"determining": "( ( CRS * ARS ) / Max( BR,CRS ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6012024048096193, "obj2": 0.28416346547041355}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * MLU ) )", "obj1": 0.6152304609218436, "obj2": 0.2665065029686172}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( PN / RRS ) / ( FirstVNF_RAM_Server + MRS ) ) ) )", "choosing": "( ( ( ( RRSe * RMSe ) + Max( CS,MUR ) ) * ( Min( CS ,RMSe ) * ( MLU + RCSe ) ) ) * ( ( ( MUC / RRSe ) / Max( CS,MUR ) ) - Max( ( RCSe + MLU ),( RMSe * DS ) ) ) )", "obj1": 0.6072144288577155, "obj2": 0.27116198722284546}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) - Max( Max( BR,CRS ),MDR ) )", "choosing": "( ( ( ( RRSe * RMSe ) + Max( CS,MUR ) ) * ( Min( CS ,RMSe ) * ( MLU + RCSe ) ) ) * ( ( ( MUC / RRSe ) / Max( CS,MUR ) ) - Max( ( RCSe + MLU ),( RMSe * DS ) ) ) )", "obj1": 0.657314629258517, "obj2": 0.21326196653130117}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6012024048096193, "obj2": 0.28416346547041355}, {"determining": "( ( Const * ( ( PN / RRS ) / ( FirstVNF_RAM_Server + MRS ) ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + RMSe ) - ( ( RMSe + RMSe ) - ( RRSe - MLU ) ) )", "obj1": 0.6132264529058116, "obj2": 0.269418416464408}, {"determining": "( ( Const * ( ( CRS * FirstVNF_CPU ) / ( MRS + MRS ) ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( Min( RMSe ,MUC ) - ( ( MUM * DS ) / RMSe ) )", "obj1": 0.591182364729459, "obj2": 0.2848160514740039}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) / ( Const + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * RCSe ) )", "obj1": 0.6032064128256514, "obj2": 0.27170928553578727}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),( BR / FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6012024048096193, "obj2": 0.28416346547041355}, {"determining": "( ( Max( ( Min( Max( RRS,ARS ) ,( AMS / BR ) ) + ( ( MRS * MDR ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) ),( Min( Max( FirstVNF_CPU,Const ) ,( RRS + FirstVNF_RAM ) ) - Max( ( RRS + MRS ),( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) * FirstVNF_CPU_Server ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6012024048096193, "obj2": 0.28416346547041355}, {"determining": "( FirstVNF_RAM_Server - Max( Max( BR,CRS ),MDR ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * DS ) )", "obj1": 0.625250501002004, "obj2": 0.2387415065776158}, {"determining": "( ( CRS * ( CRS * ( ACS / Min( MDR ,FirstVNF_Mem ) ) ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RRSe * RMSe ) + Max( CS,MUR ) ) * ( Min( CS ,RMSe ) * ( MLU + RCSe ) ) ) * ( ( ( MUC / RRSe ) / Max( CS,MUR ) ) - ( ( RCSe + MLU ) - ( RMSe * DS ) ) ) )", "obj1": 0.6072144288577155, "obj2": 0.27116198722284546}, {"determining": "( ( CRS * ARS ) * ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + CS ) - ( ( RMSe + RMSe ) - ( RRSe - MLU ) ) )", "obj1": 0.6132264529058116, "obj2": 0.269418416464408}, {"determining": "( ( Const * ( ( PN - RRS ) / ( FirstVNF_RAM_Server + MRS ) ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RRSe * RMSe ) + Max( CS,MUR ) ) * ( Min( CS ,RMSe ) / ( MLU + RCSe ) ) ) * ( ( ( MUC / RRSe ) / Max( CS,MUR ) ) - Max( ( RCSe + MLU ),( RMSe * DS ) ) ) )", "obj1": 0.6072144288577155, "obj2": 0.27116198722284546}, {"determining": "( ( FirstVNF_RAM_Server * Max( ( BR / CRS ),MDR ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( MUR,MLU ) ) - Min( ( RMSe * MLU ) ,( MLU - MUM ) ) ) ,Max( RRSe,MLU ) )", "obj1": 0.6653306613226453, "obj2": 0.20024946745993613}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),( BR / FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6012024048096193, "obj2": 0.28416346547041355}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * RCSe ) )", "obj1": 0.6032064128256514, "obj2": 0.27170928553578727}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * RCSe ) )", "obj1": 0.6032064128256514, "obj2": 0.27170928553578727}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( ( ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) / ( Const * FirstVNF_CPU_Server ) ) / RRS ) / ( MRS + ( FirstVNF_RAM_Server - Max( Max( BR,CRS ),MDR ) ) ) ) ) )", "choosing": "( ( RMSe + ( ( MUM * DS ) / DS ) ) - ( Min( ( RRSe / MUR ) ,Max( RCSe,RMSe ) ) * DS ) )", "obj1": 0.6232464929859719, "obj2": 0.24228467489258135}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,CRS ),MDR ) )", "choosing": "Min( Max( RRSe,MLU ) ,Min( ( RRSe / MUR ) ,Min( RCSe ,RMSe ) ) )", "obj1": 0.6412825651302605, "obj2": 0.22708878940917068}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),( BR / FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( MUM * DS ) / RMSe ) )", "obj1": 0.591182364729459, "obj2": 0.2848160514740039}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) )", "choosing": "( ( RMSe + RMSe ) - ( ( RMSe + RMSe ) - ( RRSe - MLU ) ) )", "obj1": 0.6132264529058116, "obj2": 0.269418416464408}, {"determining": "( ( Const * ( ( PN / ( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),( BR / FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) ) ) / ( FirstVNF_RAM_Server + MRS ) ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + RMSe ) - ( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) - ( RRSe - MLU ) ) )", "obj1": 0.6092184368737475, "obj2": 0.26961980745864683}, {"determining": "( ( CRS * ( ( PN / RRS ) / ( FirstVNF_RAM_Server * MRS ) ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / RMSe ) - ( ( RMSe + RMSe ) - ( RRSe - RCSe ) ) )", "obj1": 0.6132264529058116, "obj2": 0.269418416464408}, {"determining": "( ( Const * ( ( PN / RRS ) / ( FirstVNF_RAM_Server + MRS ) ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + RMSe ) - ( ( RMSe + RMSe ) - ( RRSe - MLU ) ) )", "obj1": 0.6132264529058116, "obj2": 0.269418416464408}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),( BR / FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6012024048096193, "obj2": 0.28416346547041355}, {"determining": "( ( CRS * ARS ) / Max( BR,CRS ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6012024048096193, "obj2": 0.28416346547041355}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) - Max( Max( BR,CRS ),MDR ) )", "choosing": "( ( ( ( RRSe * RMSe ) + Max( CS,MUR ) ) * ( Min( CS ,RMSe ) * ( MLU + RCSe ) ) ) * ( ( ( MUC / RRSe ) / Max( CS,MUR ) ) - Max( ( RCSe + MLU ),( RMSe * DS ) ) ) )", "obj1": 0.657314629258517, "obj2": 0.21326196653130117}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( PN / RRS ) / ( FirstVNF_RAM_Server + MRS ) ) ) )", "choosing": "( ( ( ( RRSe * RMSe ) + Max( CS,MUR ) ) * ( Min( CS ,RMSe ) * ( MLU + RCSe ) ) ) * ( ( ( MUC / RRSe ) / Max( CS,MUR ) ) - Max( ( RCSe + MLU ),( RMSe * DS ) ) ) )", "obj1": 0.6072144288577155, "obj2": 0.27116198722284546}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * RCSe ) )", "obj1": 0.6032064128256514, "obj2": 0.27170928553578727}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,CRS ),MDR ) )", "choosing": "Min( Max( RRSe,MLU ) ,Min( ( RRSe / MUR ) ,Min( RCSe ,RMSe ) ) )", "obj1": 0.6412825651302605, "obj2": 0.22708878940917068}, {"determining": "( ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) / Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),( BR / FirstVNF_Mem ) ) ) )", "choosing": "( ( RMSe + Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) ) ) - ( MUM * DS ) )", "obj1": 0.5891783567134269, "obj2": 0.29076962872116113}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * MLU ) )", "obj1": 0.6152304609218436, "obj2": 0.2665065029686172}, {"determining": "( ( CRS * ( CRS * ( MDR / Min( MDR ,FirstVNF_Mem ) ) ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6012024048096193, "obj2": 0.28416346547041355}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( ( ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) / ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) ) / RRS ) / ( MRS + FirstVNF_Mem ) ) ) )", "choosing": "( ( RMSe + ( RMSe / DS ) ) - ( MUM * RRSe ) )", "obj1": 0.5851703406813628, "obj2": 0.2932014719909582}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,CRS ),Max( Max( BR,CRS ),MDR ) ) )", "choosing": "Min( ( ( RRSe / RRSe ) - ( MUM * DS ) ) ,Min( ( RRSe / MUR ) ,Min( RCSe ,RMSe ) ) )", "obj1": 0.6172344689378757, "obj2": 0.24519358810028286}, {"determining": "( FirstVNF_RAM_Server - Max( Max( FirstVNF_CPU_Server,ARS ),MDR ) )", "choosing": "Min( Max( RRSe,MLU ) ,Max( ( RRSe / Min( ( ( RMSe + RMSe ) - ( MUM * DS ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) ) ),Max( RCSe,RMSe ) ) )", "obj1": 0.6472945891783567, "obj2": 0.2161239950666862}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( PN / RRS ) / ( FirstVNF_RAM_Server + MRS ) ) ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * MLU ) )", "obj1": 0.6152304609218436, "obj2": 0.2665065029686172}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),( BR / FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6012024048096193, "obj2": 0.28416346547041355}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),( ( CRS - FirstVNF_Mem ) / ( BR / FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "Min( ( ( ( MUC * MUM ) * Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6012024048096193, "obj2": 0.28416346547041355}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) / ( FirstVNF_Mem * FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * RCSe ) )", "obj1": 0.6032064128256514, "obj2": 0.27170928553578727}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( ( ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) / ( Const * FirstVNF_CPU_Server ) ) / RRS ) / ( MRS + FirstVNF_Mem ) ) ) )", "choosing": "( ( RMSe + RMSe ) - ( ( RMSe + RMSe ) - ( RRSe - MLU ) ) )", "obj1": 0.6132264529058116, "obj2": 0.269418416464408}], "9": [{"determining": "( Min( DDR ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( CS * DS ) / ( MLU * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),( BR / FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6012024048096193, "obj2": 0.28416346547041355}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),( BR / FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6012024048096193, "obj2": 0.28416346547041355}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),( BR / FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6012024048096193, "obj2": 0.28416346547041355}, {"determining": "( ( CRS * ARS ) / Max( BR,CRS ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6012024048096193, "obj2": 0.28416346547041355}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6012024048096193, "obj2": 0.28416346547041355}, {"determining": "( ( Const * ( ( CRS * FirstVNF_CPU ) / ( MRS + MRS ) ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( Min( RMSe ,MUC ) - ( ( MUM * DS ) / RMSe ) )", "obj1": 0.591182364729459, "obj2": 0.2848160514740039}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),( BR / FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6012024048096193, "obj2": 0.28416346547041355}, {"determining": "( ( Max( ( Min( Max( RRS,ARS ) ,( AMS / BR ) ) + ( ( MRS * MDR ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) ),( Min( Max( FirstVNF_CPU,Const ) ,( RRS + FirstVNF_RAM ) ) - Max( ( RRS + MRS ),( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) * FirstVNF_CPU_Server ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6012024048096193, "obj2": 0.28416346547041355}, {"determining": "( FirstVNF_RAM_Server - Max( Max( BR,CRS ),MDR ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * DS ) )", "obj1": 0.625250501002004, "obj2": 0.2387415065776158}, {"determining": "( ( FirstVNF_RAM_Server * Max( ( BR / CRS ),MDR ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( MUR,MLU ) ) - Min( ( RMSe * MLU ) ,( MLU - MUM ) ) ) ,Max( RRSe,MLU ) )", "obj1": 0.6653306613226453, "obj2": 0.20024946745993613}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),( BR / FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6012024048096193, "obj2": 0.28416346547041355}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( ( ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) / ( Const * FirstVNF_CPU_Server ) ) / RRS ) / ( MRS + ( FirstVNF_RAM_Server - Max( Max( BR,CRS ),MDR ) ) ) ) ) )", "choosing": "( ( RMSe + ( ( MUM * DS ) / DS ) ) - ( Min( ( RRSe / MUR ) ,Max( RCSe,RMSe ) ) * DS ) )", "obj1": 0.6232464929859719, "obj2": 0.24228467489258135}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,CRS ),MDR ) )", "choosing": "Min( Max( RRSe,MLU ) ,Min( ( RRSe / MUR ) ,Min( RCSe ,RMSe ) ) )", "obj1": 0.6412825651302605, "obj2": 0.22708878940917068}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),( BR / FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( MUM * DS ) / RMSe ) )", "obj1": 0.591182364729459, "obj2": 0.2848160514740039}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),( BR / FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6012024048096193, "obj2": 0.28416346547041355}, {"determining": "( ( CRS * ARS ) / Max( BR,CRS ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6012024048096193, "obj2": 0.28416346547041355}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,CRS ),MDR ) )", "choosing": "Min( Max( RRSe,MLU ) ,Min( ( RRSe / MUR ) ,Min( RCSe ,RMSe ) ) )", "obj1": 0.6412825651302605, "obj2": 0.22708878940917068}, {"determining": "( ( CRS * ( CRS * ( MDR / Min( MDR ,FirstVNF_Mem ) ) ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6012024048096193, "obj2": 0.28416346547041355}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( ( ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) / ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) ) / RRS ) / ( MRS + FirstVNF_Mem ) ) ) )", "choosing": "( ( RMSe + ( RMSe / DS ) ) - ( MUM * RRSe ) )", "obj1": 0.5851703406813628, "obj2": 0.2932014719909582}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,CRS ),Max( Max( BR,CRS ),MDR ) ) )", "choosing": "Min( ( ( RRSe / RRSe ) - ( MUM * DS ) ) ,Min( ( RRSe / MUR ) ,Min( RCSe ,RMSe ) ) )", "obj1": 0.6172344689378757, "obj2": 0.24519358810028286}, {"determining": "( FirstVNF_RAM_Server - Max( Max( FirstVNF_CPU_Server,ARS ),MDR ) )", "choosing": "Min( Max( RRSe,MLU ) ,Max( ( RRSe / Min( ( ( RMSe + RMSe ) - ( MUM * DS ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) ) ),Max( RCSe,RMSe ) ) )", "obj1": 0.6472945891783567, "obj2": 0.2161239950666862}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),( BR / FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6012024048096193, "obj2": 0.28416346547041355}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),( ( CRS - FirstVNF_Mem ) / ( BR / FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "Min( ( ( ( MUC * MUM ) * Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6012024048096193, "obj2": 0.28416346547041355}, {"determining": "( Max( ( ( ( PN / RRS ) / ( FirstVNF_RAM_Server + MRS ) ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "( ( ( ( ( RRSe * RMSe ) + Max( CS,MUR ) ) * ( Min( CS ,RMSe ) * ( MLU + RCSe ) ) ) * ( ( ( MUC / RRSe ) / Max( CS,MUR ) ) - Max( ( RCSe + MLU ),( RMSe * DS ) ) ) ) - ( MUM * RCSe ) )", "obj1": 0.6032064128256514, "obj2": 0.26935145231240515}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),( BR / FirstVNF_Mem ) ) ) * ( ( ( FirstVNF_RAM_Server / AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Max( ( RMSe * RMSe ),( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6012024048096193, "obj2": 0.28416346547041355}, {"determining": "( ( CRS * ARS ) / Max( BR,MDR ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,Min( MLU ,MUM ) ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6012024048096193, "obj2": 0.28416346547041355}, {"determining": "( FirstVNF_RAM_Server - Max( ( MDR + ARS ),MDR ) )", "choosing": "( ( RMSe + RMSe ) - ( DS * RMSe ) )", "obj1": 0.6452905811623246, "obj2": 0.21758836195541148}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),( ( CRS - FirstVNF_Mem ) / Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( FirstVNF_CPU_Server ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "( ( DS + ( RMSe / DS ) ) - ( MUM * MUM ) )", "obj1": 0.5851703406813628, "obj2": 0.2932014719909582}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) - Max( Max( BR,CRS ),MDR ) )", "choosing": "Min( ( ( ( MUC * MUM ) * Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6793587174348698, "obj2": 0.1988964510730867}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( ( ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) / ( Const * FirstVNF_CPU_Server ) ) / RRS ) / ( MRS + ( FirstVNF_RAM_Server - Max( Max( BR,CRS ),MDR ) ) ) ) ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( MUM * DS ) / RMSe ) )", "obj1": 0.6052104208416834, "obj2": 0.256608584890897}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( MUM * DS ) / RMSe ) )", "obj1": 0.591182364729459, "obj2": 0.2848160514740039}, {"determining": "( ( Const * ( ( CRS * ARS ) / ( MRS + MRS ) ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( ( ( RMSe + RMSe ) - ( MUM * MLU ) ) * DS ) / RMSe ) )", "obj1": 0.5891783567134269, "obj2": 0.28554097145548}, {"determining": "( ( Const * ( ( CRS * ARS ) / ( MRS + MRS ) ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( MUM * DS ) / RMSe ) )", "obj1": 0.591182364729459, "obj2": 0.2848160514740039}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),( BR / FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6012024048096193, "obj2": 0.28416346547041355}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),( BR / FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6012024048096193, "obj2": 0.28416346547041355}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),( BR / FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( MUM * DS ) / RMSe ) )", "obj1": 0.591182364729459, "obj2": 0.2848160514740039}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( ( ( Const * ( ( MDR / FirstVNF_CPU ) / ( MRS + MRS ) ) ) / ( BR * ( ( PN / RRS ) / ( MRS + MRS ) ) ) ) / RRS ) / ( MRS + FirstVNF_Mem ) ) ) )", "choosing": "( ( RMSe + ( RMSe / MLU ) ) - ( ( ( RMSe + RMSe ) - ( MUM * RCSe ) ) * RRSe ) )", "obj1": 0.5791583166332666, "obj2": 0.2994167784583628}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS * FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "( ( RMSe + ( RMSe / DS ) ) - ( RCSe * RRSe ) )", "obj1": 0.5851703406813628, "obj2": 0.2932014719909582}, {"determining": "( ( CRS * ARS ) / Max( Const,( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) ) )", "choosing": "( ( RMSe + RMSe ) - ( ( ( RMSe + RMSe ) - ( MUM * RCSe ) ) - ( RRSe - MLU ) ) )", "obj1": 0.5951903807615231, "obj2": 0.2847093270337816}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,FirstVNF_RAM_Server ),MDR ) )", "choosing": "Min( Max( RRSe,MLU ) ,Min( ( RRSe / MUR ) ,Min( RCSe ,RMSe ) ) )", "obj1": 0.6332665330661322, "obj2": 0.2285892862866131}, {"determining": "( ( CRS * ARS ) / ( FirstVNF_RAM_Server - Max( Max( PN,CRS ),MDR ) ) )", "choosing": "( Min( RCSe ,RMSe ) - ( ( RMSe + RMSe ) - ( RRSe - MLU ) ) )", "obj1": 0.655310621242485, "obj2": 0.2054917155195748}, {"determining": "( ( Const * ( ( CRS * ARS ) / ( MRS + MRS ) ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( MUM * DS ) / RMSe ) )", "obj1": 0.591182364729459, "obj2": 0.2848160514740039}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( ( ( Const * ( ( PN / FirstVNF_Mem ) / ( MRS + MRS ) ) ) / ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) ) / RRS ) / ( MRS + FirstVNF_Mem ) ) ) )", "choosing": "( ( RMSe + ( RMSe - DS ) ) - ( MUM * RRSe ) )", "obj1": 0.5851703406813628, "obj2": 0.2932014719909582}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6012024048096193, "obj2": 0.28416346547041355}, {"determining": "( ( CRS - ARS ) / Max( BR,CRS ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe + RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6012024048096193, "obj2": 0.28416346547041355}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( ( ( Const * ( ( PN / RRS ) / ( MRS + FirstVNF_CPU_Server ) ) ) / ( Const * FirstVNF_CPU_Server ) ) * RRS ) / ( MRS + ( FirstVNF_RAM_Server - Max( Max( BR,CRS ),MDR ) ) ) ) ) )", "choosing": "( ( RMSe + ( ( MUM - DS ) / DS ) ) - ( Min( ( RRSe / MUR ) ,Max( RCSe,RMSe ) ) / DS ) )", "obj1": 0.6132264529058116, "obj2": 0.25055153907245553}, {"determining": "( ( CRS * ( CRS * ( MDR / Min( MDR ,FirstVNF_Mem ) ) ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6012024048096193, "obj2": 0.28416346547041355}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,CRS ),Max( Max( BR,CRS ),MDR ) ) )", "choosing": "Min( ( ( RRSe / RRSe ) - ( MUM * DS ) ) ,Min( ( RRSe / MUR ) ,Min( RCSe ,RMSe ) ) )", "obj1": 0.6172344689378757, "obj2": 0.24519358810028286}, {"determining": "( ( CRS * ARS ) / Max( BR,CRS ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6012024048096193, "obj2": 0.28416346547041355}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,BR ),MDR ) )", "choosing": "( Max( DS,RMSe ) - ( MUM * MLU ) )", "obj1": 0.6372745490981964, "obj2": 0.22795411207906832}], "10": [{"determining": "( Min( DDR ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( CS * DS ) / ( MLU * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * ( ( CRS * FirstVNF_CPU ) / ( MRS + MRS ) ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( Min( RMSe ,MUC ) - ( ( MUM * DS ) / RMSe ) )", "obj1": 0.591182364729459, "obj2": 0.2848160514740039}, {"determining": "( FirstVNF_RAM_Server - Max( Max( BR,CRS ),MDR ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * DS ) )", "obj1": 0.625250501002004, "obj2": 0.2387415065776158}, {"determining": "( ( FirstVNF_RAM_Server * Max( ( BR / CRS ),MDR ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( MUR,MLU ) ) - Min( ( RMSe * MLU ) ,( MLU - MUM ) ) ) ,Max( RRSe,MLU ) )", "obj1": 0.6653306613226453, "obj2": 0.20024946745993613}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( ( ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) / ( Const * FirstVNF_CPU_Server ) ) / RRS ) / ( MRS + ( FirstVNF_RAM_Server - Max( Max( BR,CRS ),MDR ) ) ) ) ) )", "choosing": "( ( RMSe + ( ( MUM * DS ) / DS ) ) - ( Min( ( RRSe / MUR ) ,Max( RCSe,RMSe ) ) * DS ) )", "obj1": 0.6232464929859719, "obj2": 0.24228467489258135}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),( BR / FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( MUM * DS ) / RMSe ) )", "obj1": 0.591182364729459, "obj2": 0.2848160514740039}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( ( ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) / ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) ) / RRS ) / ( MRS + FirstVNF_Mem ) ) ) )", "choosing": "( ( RMSe + ( RMSe / DS ) ) - ( MUM * RRSe ) )", "obj1": 0.5851703406813628, "obj2": 0.2932014719909582}, {"determining": "( FirstVNF_RAM_Server - Max( Max( FirstVNF_CPU_Server,ARS ),MDR ) )", "choosing": "Min( Max( RRSe,MLU ) ,Max( ( RRSe / Min( ( ( RMSe + RMSe ) - ( MUM * DS ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) ) ),Max( RCSe,RMSe ) ) )", "obj1": 0.6472945891783567, "obj2": 0.2161239950666862}, {"determining": "( FirstVNF_RAM_Server - Max( ( MDR + ARS ),MDR ) )", "choosing": "( ( RMSe + RMSe ) - ( DS * RMSe ) )", "obj1": 0.6452905811623246, "obj2": 0.21758836195541148}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),( ( CRS - FirstVNF_Mem ) / Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( FirstVNF_CPU_Server ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "( ( DS + ( RMSe / DS ) ) - ( MUM * MUM ) )", "obj1": 0.5851703406813628, "obj2": 0.2932014719909582}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( MUM * DS ) / RMSe ) )", "obj1": 0.591182364729459, "obj2": 0.2848160514740039}, {"determining": "( ( Const * ( ( CRS * ARS ) / ( MRS + MRS ) ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( ( ( RMSe + RMSe ) - ( MUM * MLU ) ) * DS ) / RMSe ) )", "obj1": 0.5891783567134269, "obj2": 0.28554097145548}, {"determining": "( ( Const * ( ( CRS * ARS ) / ( MRS + MRS ) ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( MUM * DS ) / RMSe ) )", "obj1": 0.591182364729459, "obj2": 0.2848160514740039}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),( BR / FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( MUM * DS ) / RMSe ) )", "obj1": 0.591182364729459, "obj2": 0.2848160514740039}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( ( ( Const * ( ( MDR / FirstVNF_CPU ) / ( MRS + MRS ) ) ) / ( BR * ( ( PN / RRS ) / ( MRS + MRS ) ) ) ) / RRS ) / ( MRS + FirstVNF_Mem ) ) ) )", "choosing": "( ( RMSe + ( RMSe / MLU ) ) - ( ( ( RMSe + RMSe ) - ( MUM * RCSe ) ) * RRSe ) )", "obj1": 0.5791583166332666, "obj2": 0.2994167784583628}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS * FirstVNF_Mem ),Max( BR,FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "( ( RMSe + ( RMSe / DS ) ) - ( RCSe * RRSe ) )", "obj1": 0.5851703406813628, "obj2": 0.2932014719909582}, {"determining": "( ( CRS * ARS ) / Max( Const,( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) ) )", "choosing": "( ( RMSe + RMSe ) - ( ( ( RMSe + RMSe ) - ( MUM * RCSe ) ) - ( RRSe - MLU ) ) )", "obj1": 0.5951903807615231, "obj2": 0.2847093270337816}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,FirstVNF_RAM_Server ),MDR ) )", "choosing": "Min( Max( RRSe,MLU ) ,Min( ( RRSe / MUR ) ,Min( RCSe ,RMSe ) ) )", "obj1": 0.6332665330661322, "obj2": 0.2285892862866131}, {"determining": "( ( CRS * ARS ) / ( FirstVNF_RAM_Server - Max( Max( PN,CRS ),MDR ) ) )", "choosing": "( Min( RCSe ,RMSe ) - ( ( RMSe + RMSe ) - ( RRSe - MLU ) ) )", "obj1": 0.655310621242485, "obj2": 0.2054917155195748}, {"determining": "( ( Const * ( ( CRS * ARS ) / ( MRS + MRS ) ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( MUM * DS ) / RMSe ) )", "obj1": 0.591182364729459, "obj2": 0.2848160514740039}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( ( ( Const * ( ( PN / FirstVNF_Mem ) / ( MRS + MRS ) ) ) / ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) ) / RRS ) / ( MRS + FirstVNF_Mem ) ) ) )", "choosing": "( ( RMSe + ( RMSe - DS ) ) - ( MUM * RRSe ) )", "obj1": 0.5851703406813628, "obj2": 0.2932014719909582}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( ( ( Const * ( ( PN / RRS ) / ( MRS + FirstVNF_CPU_Server ) ) ) / ( Const * FirstVNF_CPU_Server ) ) * RRS ) / ( MRS + ( FirstVNF_RAM_Server - Max( Max( BR,CRS ),MDR ) ) ) ) ) )", "choosing": "( ( RMSe + ( ( MUM - DS ) / DS ) ) - ( Min( ( RRSe / MUR ) ,Max( RCSe,RMSe ) ) / DS ) )", "obj1": 0.6132264529058116, "obj2": 0.25055153907245553}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,BR ),MDR ) )", "choosing": "( Max( DS,RMSe ) - ( MUM * MLU ) )", "obj1": 0.6372745490981964, "obj2": 0.22795411207906832}, {"determining": "( ( CRS - ARS ) / Max( BR,CRS ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe + RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS - FirstVNF_Mem ),( BR / FirstVNF_Mem ) ) / ( FirstVNF_RAM_Server - Max( Max( RRS,CRS ),MDR ) ) )", "choosing": "( Min( RCSe ,RMSe ) - ( ( ( MUM * DS ) + RMSe ) + ( RRSe - MLU ) ) )", "obj1": 0.6733466933867736, "obj2": 0.19323631398821353}, {"determining": "( ( CRS * ARS ) / ( FirstVNF_RAM_Server - Max( Max( PN,CRS ),MDR ) ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( MUM * DS ) / RMSe ) )", "obj1": 0.6012024048096193, "obj2": 0.2551624065774248}, {"determining": "( FirstVNF_RAM_Server - Max( Max( ( ( CRS * ARS ) / Max( BR,CRS ) ),CRS ),MDR ) )", "choosing": "Min( Max( RRSe,MLU ) ,Min( ( RRSe / MUR ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) ) )", "obj1": 0.6713426853707415, "obj2": 0.1953829554303574}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,CRS ),MDR ) )", "choosing": "Min( Max( RRSe,MLU ) ,Min( ( RRSe / MUR ) ,Min( RCSe ,RMSe ) ) )", "obj1": 0.6332665330661322, "obj2": 0.2285892862866131}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( ( ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) / ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) ) / RRS ) / ( CRS - FirstVNF_Mem ) ) ) )", "choosing": "( ( RMSe + ( RMSe / DS ) ) - ( MLU * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server - Max( Max( BR,ARS ),MDR ) )", "choosing": "Min( Max( RRSe,MLU ) ,Min( ( RRSe / Min( ( ( RMSe + RMSe ) - ( MUM * DS ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) ) ) ,Max( RCSe,RMSe ) ) )", "obj1": 0.6472945891783567, "obj2": 0.2161239950666862}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,CRS ),( ( PN / RRS ) / ( MRS + MRS ) ) ) )", "choosing": "Min( ( ( RRSe / RRSe ) - ( MUM * DS ) ) ,( RMSe + ( RMSe / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( ( ( Const * ( ( MDR / FirstVNF_CPU ) / ( MRS + MRS ) ) ) / ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) ) / RRS ) / ( MRS + FirstVNF_Mem ) ) ) )", "choosing": "( ( RMSe + ( RMSe / DS ) ) - ( MUM * RRSe ) )", "obj1": 0.5851703406813628, "obj2": 0.2932014719909582}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( ( ( Const * Max( ( PN / RRS ),( MRS + MRS ) ) ) / ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) ) / RRS ) / ( MRS + FirstVNF_Mem ) ) ) )", "choosing": "( ( RMSe + ( RMSe / DS ) ) - ( ( ( RMSe + RMSe ) - ( MUM * RCSe ) ) * RRSe ) )", "obj1": 0.5791583166332666, "obj2": 0.2994167784583628}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( ( ( Const * ( ( RRS / FirstVNF_CPU ) / ( MRS + MRS ) ) ) / ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) ) / RRS ) / ( MRS + FirstVNF_Mem ) ) ) )", "choosing": "( ( RMSe + ( RMSe / DS ) ) - ( ( ( RMSe + RMSe ) - ( MUM + RCSe ) ) * RRSe ) )", "obj1": 0.5791583166332666, "obj2": 0.2994167784583628}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( ( ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) / ( Const * FirstVNF_CPU_Server ) ) / RRS ) / ( MRS + ( FirstVNF_RAM_Server - Max( Max( BR,CRS ),MDR ) ) ) ) ) )", "choosing": "( ( RMSe + ( ( MUM * DS ) / DS ) ) - ( Min( ( RRSe / MUR ) ,Max( RCSe,RMSe ) ) * DS ) )", "obj1": 0.6232464929859719, "obj2": 0.24228467489258135}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),( BR / FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( MUM * DS ) / RMSe ) )", "obj1": 0.591182364729459, "obj2": 0.2848160514740039}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( ( ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) / ( Const * FirstVNF_CPU_Server ) ) / RRS ) / ( MRS + ( FirstVNF_RAM_Server - Max( Max( BR,CRS ),MDR ) ) ) ) ) )", "choosing": "( ( RMSe + ( ( MUM * DS ) / DS ) ) - ( Min( ( RRSe / MUR ) ,Max( RCSe,RMSe ) ) * DS ) )", "obj1": 0.6132264529058116, "obj2": 0.25055153907245553}, {"determining": "( ( CRS - ARS ) / Max( ( ( CRS * ARS ) / Max( BR,CRS ) ),CRS ) )", "choosing": "Min( ( MUC - Min( ( RMSe + RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ARS ) / Max( BR,CRS ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( ( ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) / ( Const * FirstVNF_CPU_Server ) ) / RRS ) / ( MRS + ( FirstVNF_RAM_Server - Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),MDR ) ) ) ) ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( ( MLU - RCSe ) * DS ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),Max( ( CRS - FirstVNF_Mem ),( BR / FirstVNF_Mem ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( MUM * DS ) / RMSe ) )", "obj1": 0.591182364729459, "obj2": 0.2848160514740039}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( ( ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) / ( ARS * FirstVNF_CPU_Server ) ) / RRS ) / ( MRS + ( FirstVNF_RAM_Server - Max( Max( BR,CRS ),MDR ) ) ) ) ) )", "choosing": "( ( RMSe + ( ( MUM * DS ) / DS ) ) - ( Min( ( RRSe / MUR ) ,Max( RCSe,RRSe ) ) * DS ) )", "obj1": 0.6132264529058116, "obj2": 0.25055153907245553}, {"determining": "( FirstVNF_RAM_Server - Max( Max( BR,ARS ),MDR ) )", "choosing": "( ( RMSe + ( ( MUM * DS ) / DS ) ) - ( Min( ( RRSe / MUR ) ,Max( RCSe,RMSe ) ) * DS ) )", "obj1": 0.6392785571142284, "obj2": 0.22646219439355944}, {"determining": "( FirstVNF_RAM_Server - Max( Max( FirstVNF_CPU_Server,ARS ),MDR ) )", "choosing": "Min( Max( RRSe,MLU ) ,Max( ( RRSe / Min( ( ( RMSe + RMSe ) - ( MUM * DS ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) ) ),Max( RCSe,RMSe ) ) )", "obj1": 0.7294589178356713, "obj2": 0.17397687865834202}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,CRS ),Max( Max( BR,CRS ),MDR ) ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( MUM * DS ) / RMSe ) )", "obj1": 0.6172344689378757, "obj2": 0.24255363393666704}, {"determining": "( ( CRS - RRS ) / Max( BR,CRS ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) * Min( ( RMSe + RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - DDR ) + Max( Max( ( ( ( ( FirstVNF_RAM * AMS ) + RRS ) - FirstVNF_CPU ) + ACS ),Max( MRS,BR ) ),MDR ) )", "choosing": "( ( Min( ( RRSe + Min( MUM ,Max( ( MUR * MUM ),( Max( CS,MUC ) / MUM ) ) ) ) ,MUR ) - ( MUC - ( MUR - RRSe ) ) ) + Min( Min( DS ,RMSe ) ,Max( Max( RRSe,RCSe ),DS ) ) )", "obj1": 0.8016032064128257, "obj2": 0.17163194338106894}, {"determining": "( ( ( FirstVNF_RAM_Server - Max( Max( BR,CRS ),FirstVNF_RAM ) ) * ARS ) / Max( BR,CRS ) )", "choosing": "Min( ( ( MUM * DS ) / RMSe ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + Min( RCSe ,DS ) ) ) )", "obj1": 0.6793587174348698, "obj2": 0.17911300522428614}, {"determining": "( ( Const * ( ( CRS * ARS ) / ( MRS + MRS ) ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( MUM * DS ) / RMSe ) )", "obj1": 0.591182364729459, "obj2": 0.2848160514740039}, {"determining": "( ( Const * ( ( CRS * ARS ) / ( MRS + MRS ) ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( MUM * DS ) / RMSe ) )", "obj1": 0.591182364729459, "obj2": 0.2848160514740039}], "11": [{"determining": "( Min( DDR ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( CS * DS ) / ( MLU * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server - Max( Max( BR,CRS ),MDR ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * DS ) )", "obj1": 0.625250501002004, "obj2": 0.2387415065776158}, {"determining": "( ( FirstVNF_RAM_Server * Max( ( BR / CRS ),MDR ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( MUR,MLU ) ) - Min( ( RMSe * MLU ) ,( MLU - MUM ) ) ) ,Max( RRSe,MLU ) )", "obj1": 0.6653306613226453, "obj2": 0.20024946745993613}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( ( ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) / ( Const * FirstVNF_CPU_Server ) ) / RRS ) / ( MRS + ( FirstVNF_RAM_Server - Max( Max( BR,CRS ),MDR ) ) ) ) ) )", "choosing": "( ( RMSe + ( ( MUM * DS ) / DS ) ) - ( Min( ( RRSe / MUR ) ,Max( RCSe,RMSe ) ) * DS ) )", "obj1": 0.6232464929859719, "obj2": 0.24228467489258135}, {"determining": "( FirstVNF_RAM_Server - Max( Max( FirstVNF_CPU_Server,ARS ),MDR ) )", "choosing": "Min( Max( RRSe,MLU ) ,Max( ( RRSe / Min( ( ( RMSe + RMSe ) - ( MUM * DS ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) ) ),Max( RCSe,RMSe ) ) )", "obj1": 0.6472945891783567, "obj2": 0.2161239950666862}, {"determining": "( FirstVNF_RAM_Server - Max( ( MDR + ARS ),MDR ) )", "choosing": "( ( RMSe + RMSe ) - ( DS * RMSe ) )", "obj1": 0.6452905811623246, "obj2": 0.21758836195541148}, {"determining": "( ( Const * ( ( CRS * ARS ) / ( MRS + MRS ) ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( ( ( RMSe + RMSe ) - ( MUM * MLU ) ) * DS ) / RMSe ) )", "obj1": 0.5891783567134269, "obj2": 0.28554097145548}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,FirstVNF_RAM_Server ),MDR ) )", "choosing": "Min( Max( RRSe,MLU ) ,Min( ( RRSe / MUR ) ,Min( RCSe ,RMSe ) ) )", "obj1": 0.6332665330661322, "obj2": 0.2285892862866131}, {"determining": "( ( CRS * ARS ) / ( FirstVNF_RAM_Server - Max( Max( PN,CRS ),MDR ) ) )", "choosing": "( Min( RCSe ,RMSe ) - ( ( RMSe + RMSe ) - ( RRSe - MLU ) ) )", "obj1": 0.655310621242485, "obj2": 0.2054917155195748}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,BR ),MDR ) )", "choosing": "( Max( DS,RMSe ) - ( MUM * MLU ) )", "obj1": 0.6372745490981964, "obj2": 0.22795411207906832}, {"determining": "( ( CRS - ARS ) / Max( BR,CRS ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe + RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS - FirstVNF_Mem ),( BR / FirstVNF_Mem ) ) / ( FirstVNF_RAM_Server - Max( Max( RRS,CRS ),MDR ) ) )", "choosing": "( Min( RCSe ,RMSe ) - ( ( ( MUM * DS ) + RMSe ) + ( RRSe - MLU ) ) )", "obj1": 0.6733466933867736, "obj2": 0.19323631398821353}, {"determining": "( ( CRS * ARS ) / ( FirstVNF_RAM_Server - Max( Max( PN,CRS ),MDR ) ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( MUM * DS ) / RMSe ) )", "obj1": 0.6012024048096193, "obj2": 0.2551624065774248}, {"determining": "( FirstVNF_RAM_Server - Max( Max( ( ( CRS * ARS ) / Max( BR,CRS ) ),CRS ),MDR ) )", "choosing": "Min( Max( RRSe,MLU ) ,Min( ( RRSe / MUR ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) ) )", "obj1": 0.6713426853707415, "obj2": 0.1953829554303574}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,CRS ),MDR ) )", "choosing": "Min( Max( RRSe,MLU ) ,Min( ( RRSe / MUR ) ,Min( RCSe ,RMSe ) ) )", "obj1": 0.6332665330661322, "obj2": 0.2285892862866131}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( ( ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) / ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) ) / RRS ) / ( CRS - FirstVNF_Mem ) ) ) )", "choosing": "( ( RMSe + ( RMSe / DS ) ) - ( MLU * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server - Max( Max( BR,ARS ),MDR ) )", "choosing": "Min( Max( RRSe,MLU ) ,Min( ( RRSe / Min( ( ( RMSe + RMSe ) - ( MUM * DS ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) ) ) ,Max( RCSe,RMSe ) ) )", "obj1": 0.6472945891783567, "obj2": 0.2161239950666862}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,CRS ),( ( PN / RRS ) / ( MRS + MRS ) ) ) )", "choosing": "Min( ( ( RRSe / RRSe ) - ( MUM * DS ) ) ,( RMSe + ( RMSe / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( ( ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) / ( Const * FirstVNF_CPU_Server ) ) / RRS ) / ( MRS + ( FirstVNF_RAM_Server - Max( Max( BR,CRS ),MDR ) ) ) ) ) )", "choosing": "( ( RMSe + ( ( MUM * DS ) / DS ) ) - ( Min( ( RRSe / MUR ) ,Max( RCSe,RMSe ) ) * DS ) )", "obj1": 0.6232464929859719, "obj2": 0.24228467489258135}, {"determining": "( ( CRS - ARS ) / Max( ( ( CRS * ARS ) / Max( BR,CRS ) ),CRS ) )", "choosing": "Min( ( MUC - Min( ( RMSe + RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ARS ) / Max( BR,CRS ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( RRSe,MLU ) ) - Min( ( RMSe * RMSe ) ,( MLU - MUM ) ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( ( ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) / ( Const * FirstVNF_CPU_Server ) ) / RRS ) / ( MRS + ( FirstVNF_RAM_Server - Max( ( Min( FirstVNF_RAM_Server ,Const ) * ( ACS / MRS ) ),MDR ) ) ) ) ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( ( MLU - RCSe ) * DS ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server - Max( Max( BR,ARS ),MDR ) )", "choosing": "( ( RMSe + ( ( MUM * DS ) / DS ) ) - ( Min( ( RRSe / MUR ) ,Max( RCSe,RMSe ) ) * DS ) )", "obj1": 0.6392785571142284, "obj2": 0.22646219439355944}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,CRS ),Max( Max( BR,CRS ),MDR ) ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( MUM * DS ) / RMSe ) )", "obj1": 0.6172344689378757, "obj2": 0.24255363393666704}, {"determining": "( ( ( FirstVNF_RAM_Server - Max( Max( BR,CRS ),FirstVNF_RAM ) ) * ARS ) / Max( BR,CRS ) )", "choosing": "Min( ( ( MUM * DS ) / RMSe ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + Min( RCSe ,DS ) ) ) )", "obj1": 0.6793587174348698, "obj2": 0.17911300522428614}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,CRS ),Max( Max( BR,( ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) / ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) ) ),MDR ) ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( ( RMSe + ( RMSe / DS ) ) * DS ) / RMSe ) )", "obj1": 0.9298597194388778, "obj2": 0.047281201889553426}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,CRS ),Max( Max( BR,CRS ),MDR ) ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( MUM * DS ) / RMSe ) )", "obj1": 0.6012024048096193, "obj2": 0.2551624065774248}, {"determining": "( ( ( FirstVNF_RAM_Server - Max( Max( ( Const * ( ( PN / RRS ) / ( MRS + FirstVNF_CPU_Server ) ) ),CRS ),MDR ) ) * ARS ) / Max( BR,CRS ) )", "choosing": "Min( ( ( MUM * DS ) / RMSe ) ,DS )", "obj1": 0.8496993987975952, "obj2": 0.1213708047704851}, {"determining": "( ( ( FirstVNF_RAM_Server - Max( Max( BR,CRS ),MDR ) ) * ARS ) / Max( BR,CRS ) )", "choosing": "Min( ( ( MUM * DS ) / RMSe ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6793587174348698, "obj2": 0.17911300522428614}, {"determining": "( ( CRS - DDR ) + Max( Max( ( ( ( ( FirstVNF_RAM * Const ) + RRS ) - FirstVNF_CPU ) + ACS ),Max( MRS,RRS ) ),MDR ) )", "choosing": "( ( Min( ( RRSe + Min( MUM ,Max( ( MUR * MUM ),( Max( CS,MUC ) / MUM ) ) ) ) ,MUR ) - Min( MUC ,( MUR - RRSe ) ) ) + Min( Min( DS ,( ( RMSe + ( ( MUM * DS ) / DS ) ) - ( Min( ( RRSe / MUR ) ,Max( RCSe,RMSe ) ) / DS ) ) ) ,Max( Max( RRSe,RCSe ),DS ) ) )", "obj1": 0.7855711422845691, "obj2": 0.16169385574207276}, {"determining": "( Min( Max( Max( BR,CRS ),MDR ) ,FirstVNF_RAM_Server ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( CS * DS ) / ( ( RMSe + RMSe ) - ( MUM * DS ) ) )", "obj1": 0.8877755511022044, "obj2": 0.11919680130390843}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( ( ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) / ( Const * FirstVNF_CPU_Server ) ) / RRS ) / ( MRS + ( FirstVNF_RAM_Server - Max( Max( BR,CRS ),MDR ) ) ) ) ) )", "choosing": "( ( RMSe + ( RMSe / DS ) ) - ( ( ( RMSe + RMSe ) - ( MUM * RCSe ) ) * RRSe ) )", "obj1": 0.6112224448897795, "obj2": 0.2494414824369886}, {"determining": "( FirstVNF_RAM_Server - Max( ( ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) / ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) ),MDR ) )", "choosing": "( ( ( ( RMSe + RMSe ) - ( MUM * RCSe ) ) * RRSe ) - ( MUM * RCSe ) )", "obj1": 0.9318637274549099, "obj2": 0.046403822279265636}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,( MRS + MRS ) ),MDR ) )", "choosing": "Min( ( RRSe + MLU ) ,RRSe )", "obj1": 0.7034068136272545, "obj2": 0.16978813737171086}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,CRS ),MDR ) )", "choosing": "Min( Max( RRSe,MLU ) ,Min( ( RRSe / MUR ) ,Min( RCSe ,RMSe ) ) )", "obj1": 0.6332665330661322, "obj2": 0.2285892862866131}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( ( ( Const * ( ( MDR / FirstVNF_CPU ) / ( MRS + MRS ) ) ) / ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) ) / RRS ) / ( MRS + Max( Max( BR,ARS ),MDR ) ) ) ) )", "choosing": "( ( RMSe + ( MUR / DS ) ) - ( MUM * RRSe ) )", "obj1": 0.5751503006012024, "obj2": 0.30368482711210965}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( ( ( Const * ( ( MDR / FirstVNF_CPU ) / ( MRS + MRS ) ) ) / ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) ) / RRS ) / ( MRS + FirstVNF_Mem ) ) ) )", "choosing": "( ( RMSe + ( RMSe / DS ) ) - ( MUM * RRSe ) )", "obj1": 0.5791583166332666, "obj2": 0.29858703228449307}, {"determining": "( FirstVNF_RAM_Server - Max( Max( BR,CRS ),MDR ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * DS ) )", "obj1": 0.6132264529058116, "obj2": 0.24460975427541806}, {"determining": "( ( ( FirstVNF_RAM_Server - Max( Max( BR,CRS ),FirstVNF_RAM ) ) * ARS ) / Max( BR,CRS ) )", "choosing": "Min( ( ( MUM * DS ) / RMSe ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + Min( RCSe ,DS ) ) ) )", "obj1": 0.811623246492986, "obj2": 0.15166772204314014}, {"determining": "( FirstVNF_RAM_Server - Max( Max( MDR,ARS ),MDR ) )", "choosing": "( ( RMSe + ( ( MUM * DS ) / DS ) ) - ( Min( ( RRSe / MUR ) ,Max( RCSe,RMSe ) ) * DS ) )", "obj1": 0.6392785571142284, "obj2": 0.22646219439355944}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( ( ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) / ( Const * FirstVNF_CPU_Server ) ) / RRS ) / ( MRS + ( MDR - Max( Max( BR,CRS ),MDR ) ) ) ) ) )", "choosing": "( ( RMSe + ( ( MUM * DS ) / MUM ) ) - ( Min( ( RRSe / MUR ) ,Max( RCSe,RMSe ) ) * DS ) )", "obj1": 0.6232464929859719, "obj2": 0.24228467489258135}, {"determining": "( FirstVNF_RAM_Server - Max( ( PN * CRS ),MDR ) )", "choosing": "( Min( RCSe ,RMSe ) - ( ( ( RRSe * DS ) + RMSe ) - ( RRSe - MLU ) ) )", "obj1": 0.6733466933867736, "obj2": 0.19323631398821353}, {"determining": "( Max( ( CRS - FirstVNF_Mem ),( BR / FirstVNF_Mem ) ) / ( FirstVNF_RAM_Server - Max( Max( PN,CRS ),MDR ) ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * MLU ) )", "obj1": 0.6372745490981964, "obj2": 0.22795411207906832}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,FirstVNF_Mem_Server ),MDR ) )", "choosing": "( ( RMSe + RMSe ) - ( ( ( RMSe + RMSe ) - ( MUM * RCSe ) ) - ( CS - MLU ) ) )", "obj1": 0.6633266533066132, "obj2": 0.20325209718782228}, {"determining": "( FirstVNF_RAM_Server - Max( Max( BR,ARS ),MDR ) )", "choosing": "( ( RMSe + ( ( MUM * DS ) / DS ) ) - ( Min( ( RRSe / MUR ) ,Max( RCSe,RMSe ) ) * DS ) )", "obj1": 0.6392785571142284, "obj2": 0.22646219439355944}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( ( ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) / ( Const * FirstVNF_CPU_Server ) ) / RRS ) / ( MRS + ( FirstVNF_RAM_Server - Max( Max( BR,CRS ),MDR ) ) ) ) ) )", "choosing": "Min( Max( RRSe,MLU ) ,Min( ( RRSe / Min( ( ( RMSe + RMSe ) - ( MUM * DS ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) ) ) ,Max( RCSe,RMSe ) ) )", "obj1": 0.6693386773547094, "obj2": 0.19847967957226031}, {"determining": "( ( Const * ( ( CRS * ARS ) / ( MRS + MRS ) ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( ( ( RMSe + RMSe ) - ( MUM * MLU ) ) * DS ) / RMSe ) )", "obj1": 0.5891783567134269, "obj2": 0.28554097145548}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,CRS ),MDR ) )", "choosing": "Min( Max( RRSe,MLU ) ,Min( ( RRSe / MUR ) ,Min( RCSe ,RMSe ) ) )", "obj1": 0.6332665330661322, "obj2": 0.2285892862866131}, {"determining": "( ( Const * ( ( CRS * ARS ) / ( MRS + FirstVNF_RAM ) ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( ( ( RMSe + RMSe ) * ( MUM * MLU ) ) * DS ) / RMSe ) )", "obj1": 0.5851703406813628, "obj2": 0.2923706525173932}, {"determining": "( ( ( FirstVNF_RAM_Server - ( Min( BR ,CRS ) * FirstVNF_RAM ) ) * ARS ) / Max( BR,CRS ) )", "choosing": "Min( ( ( MUM * DS ) / RMSe ) ,( Min( ( MUC * MUC ) ,( MUC * MUC ) ) * ( ( MLU - RCSe ) + Min( RCSe ,DS ) ) ) )", "obj1": 0.843687374749499, "obj2": 0.12202605952522634}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( ( ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) / ( Const * FirstVNF_CPU_Server ) ) / RRS ) / ( MRS + ( FirstVNF_RAM_Server - Max( Max( BR,CRS ),MDR ) ) ) ) ) )", "choosing": "( ( RMSe + ( ( MUM * DS ) / DS ) ) - ( Min( ( RRSe / MUR ) ,Max( RCSe,RMSe ) ) * DS ) )", "obj1": 0.591182364729459, "obj2": 0.2701106420336781}], "12": [{"determining": "( Min( DDR ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( CS * DS ) / ( MLU * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server * Max( ( BR / CRS ),MDR ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) + Min( CRS ,PN ) ) + ( ( MDR / FirstVNF_CPU ) / MRS ) ) )", "choosing": "Min( ( Min( ( MUC * MUM ) ,Max( MUR,MLU ) ) - Min( ( RMSe * MLU ) ,( MLU - MUM ) ) ) ,Max( RRSe,MLU ) )", "obj1": 0.6653306613226453, "obj2": 0.20024946745993613}, {"determining": "( ( Const * ( ( CRS * ARS ) / ( MRS + MRS ) ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( ( ( RMSe + RMSe ) - ( MUM * MLU ) ) * DS ) / RMSe ) )", "obj1": 0.5891783567134269, "obj2": 0.28554097145548}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,FirstVNF_RAM_Server ),MDR ) )", "choosing": "Min( Max( RRSe,MLU ) ,Min( ( RRSe / MUR ) ,Min( RCSe ,RMSe ) ) )", "obj1": 0.6332665330661322, "obj2": 0.2285892862866131}, {"determining": "( ( CRS * ARS ) / ( FirstVNF_RAM_Server - Max( Max( PN,CRS ),MDR ) ) )", "choosing": "( Min( RCSe ,RMSe ) - ( ( RMSe + RMSe ) - ( RRSe - MLU ) ) )", "obj1": 0.655310621242485, "obj2": 0.2054917155195748}, {"determining": "( ( CRS * ARS ) / ( FirstVNF_RAM_Server - Max( Max( PN,CRS ),MDR ) ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( MUM * DS ) / RMSe ) )", "obj1": 0.6012024048096193, "obj2": 0.2551624065774248}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,CRS ),MDR ) )", "choosing": "Min( Max( RRSe,MLU ) ,Min( ( RRSe / MUR ) ,Min( RCSe ,RMSe ) ) )", "obj1": 0.6332665330661322, "obj2": 0.2285892862866131}, {"determining": "( ( ( FirstVNF_RAM_Server - Max( Max( BR,CRS ),FirstVNF_RAM ) ) * ARS ) / Max( BR,CRS ) )", "choosing": "Min( ( ( MUM * DS ) / RMSe ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + Min( RCSe ,DS ) ) ) )", "obj1": 0.6793587174348698, "obj2": 0.17911300522428614}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,CRS ),Max( Max( BR,( ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) / ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) ) ),MDR ) ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( ( RMSe + ( RMSe / DS ) ) * DS ) / RMSe ) )", "obj1": 0.9298597194388778, "obj2": 0.047281201889553426}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,CRS ),Max( Max( BR,CRS ),MDR ) ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( MUM * DS ) / RMSe ) )", "obj1": 0.6012024048096193, "obj2": 0.2551624065774248}, {"determining": "( ( ( FirstVNF_RAM_Server - Max( Max( ( Const * ( ( PN / RRS ) / ( MRS + FirstVNF_CPU_Server ) ) ),CRS ),MDR ) ) * ARS ) / Max( BR,CRS ) )", "choosing": "Min( ( ( MUM * DS ) / RMSe ) ,DS )", "obj1": 0.8496993987975952, "obj2": 0.1213708047704851}, {"determining": "( ( ( FirstVNF_RAM_Server - Max( Max( BR,CRS ),MDR ) ) * ARS ) / Max( BR,CRS ) )", "choosing": "Min( ( ( MUM * DS ) / RMSe ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6793587174348698, "obj2": 0.17911300522428614}, {"determining": "( FirstVNF_RAM_Server - Max( ( ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) / ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) ),MDR ) )", "choosing": "( ( ( ( RMSe + RMSe ) - ( MUM * RCSe ) ) * RRSe ) - ( MUM * RCSe ) )", "obj1": 0.9318637274549099, "obj2": 0.046403822279265636}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,( MRS + MRS ) ),MDR ) )", "choosing": "Min( ( RRSe + MLU ) ,RRSe )", "obj1": 0.7034068136272545, "obj2": 0.16978813737171086}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,CRS ),MDR ) )", "choosing": "Min( Max( RRSe,MLU ) ,Min( ( RRSe / MUR ) ,Min( RCSe ,RMSe ) ) )", "obj1": 0.6332665330661322, "obj2": 0.2285892862866131}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( ( ( Const * ( ( MDR / FirstVNF_CPU ) / ( MRS + MRS ) ) ) / ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) ) / RRS ) / ( MRS + Max( Max( BR,ARS ),MDR ) ) ) ) )", "choosing": "( ( RMSe + ( MUR / DS ) ) - ( MUM * RRSe ) )", "obj1": 0.5751503006012024, "obj2": 0.30368482711210965}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( ( ( Const * ( ( MDR / FirstVNF_CPU ) / ( MRS + MRS ) ) ) / ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) ) / RRS ) / ( MRS + FirstVNF_Mem ) ) ) )", "choosing": "( ( RMSe + ( RMSe / DS ) ) - ( MUM * RRSe ) )", "obj1": 0.5791583166332666, "obj2": 0.29858703228449307}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,FirstVNF_Mem_Server ),MDR ) )", "choosing": "( ( RMSe + RMSe ) - ( ( ( RMSe + RMSe ) - ( MUM * RCSe ) ) - ( CS - MLU ) ) )", "obj1": 0.6633266533066132, "obj2": 0.20325209718782228}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( ( ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) / ( Const * FirstVNF_CPU_Server ) ) / RRS ) / ( MRS + ( FirstVNF_RAM_Server - Max( Max( BR,CRS ),MDR ) ) ) ) ) )", "choosing": "Min( Max( RRSe,MLU ) ,Min( ( RRSe / Min( ( ( RMSe + RMSe ) - ( MUM * DS ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) ) ) ,Max( RCSe,RMSe ) ) )", "obj1": 0.6693386773547094, "obj2": 0.19847967957226031}, {"determining": "( ( Const * ( ( CRS * ARS ) / ( MRS + MRS ) ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( ( ( RMSe + RMSe ) - ( MUM * MLU ) ) * DS ) / RMSe ) )", "obj1": 0.5891783567134269, "obj2": 0.28554097145548}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,CRS ),MDR ) )", "choosing": "Min( Max( RRSe,MLU ) ,Min( ( RRSe / MUR ) ,Min( RCSe ,RMSe ) ) )", "obj1": 0.6332665330661322, "obj2": 0.2285892862866131}, {"determining": "( ( Const * ( ( CRS * ARS ) / ( MRS + FirstVNF_RAM ) ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( ( ( RMSe + RMSe ) * ( MUM * MLU ) ) * DS ) / RMSe ) )", "obj1": 0.5851703406813628, "obj2": 0.2923706525173932}, {"determining": "( ( ( FirstVNF_RAM_Server - ( Min( BR ,CRS ) * FirstVNF_RAM ) ) * ARS ) / Max( BR,CRS ) )", "choosing": "Min( ( ( MUM * DS ) / RMSe ) ,( Min( ( MUC * MUC ) ,( MUC * MUC ) ) * ( ( MLU - RCSe ) + Min( RCSe ,DS ) ) ) )", "obj1": 0.843687374749499, "obj2": 0.12202605952522634}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( ( ( Const * ( ( PN / CRS ) / ( MRS + MRS ) ) ) / ( Const * FirstVNF_CPU_Server ) ) / RRS ) / ( MRS + ( FirstVNF_RAM_Server - Max( Max( BR,CRS ),MDR ) ) ) ) ) )", "choosing": "Min( Max( RRSe,MLU ) ,Min( ( RRSe / Min( ( ( RMSe + RMSe ) - ( MUM * DS ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - MUM ) + ( RCSe - DS ) ) ) ) ) ,Max( RCSe,RMSe ) ) )", "obj1": 0.6673346693386774, "obj2": 0.19964157681326666}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( ( ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) / ( Const * FirstVNF_CPU_Server ) ) / RRS ) / ( MRS + ( FirstVNF_RAM_Server - Max( Max( BR,CRS ),MDR ) ) ) ) ) )", "choosing": "Min( Max( RRSe,MLU ) ,Min( ( RRSe / Min( ( ( RMSe + RMSe ) - ( MUM * DS ) ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) ) ) ,Max( RCSe,RMSe ) ) )", "obj1": 0.6693386773547094, "obj2": 0.19847967957226031}, {"determining": "( ( CRS * ARS ) / ( ( FirstVNF_RAM_Server - Max( Max( BR,CRS ),MDR ) ) * ARS ) )", "choosing": "( ( RMSe + ( ( MUM * DS ) / DS ) ) - ( ( MUM * DS ) / RMSe ) )", "obj1": 0.6432865731462926, "obj2": 0.21854329458597962}, {"determining": "( ( FirstVNF_RAM_Server - Max( Max( PN,CRS ),MDR ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( ( ( RMSe + RMSe ) - ( RMSe * MLU ) ) * DS ) / RMSe ) )", "obj1": 0.591182364729459, "obj2": 0.2607205902886657}, {"determining": "( FirstVNF_RAM_Server - Max( ( ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) / ( Const * ( Min( PN ,RRS ) / ( MRS + MRS ) ) ) ),MDR ) )", "choosing": "Min( ( ( MUM * DS ) / RMSe ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU * RCSe ) + Min( RCSe ,DS ) ) ) )", "obj1": 0.87374749498998, "obj2": 0.09007030136288648}, {"determining": "( ( ( FirstVNF_RAM_Server - Max( Max( ( Const * ( ( PN / RRS ) / ( MRS + FirstVNF_CPU_Server ) ) ),CRS ),MDR ) ) * ARS ) / FirstVNF_CPU_Server )", "choosing": "Min( ( RMSe + ( RMSe / DS ) ) ,DS )", "obj1": 0.7875751503006012, "obj2": 0.1504587922821852}, {"determining": "( ( ( FirstVNF_RAM_Server - Max( Max( ( Const * ( ( PN / RRS ) / ( MRS + FirstVNF_CPU_Server ) ) ),CRS ),MDR ) ) * ARS ) / Max( BR,CRS ) )", "choosing": "Min( ( ( MUM * DS ) / RMSe ) ,DS )", "obj1": 0.8016032064128257, "obj2": 0.13987078001281952}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,CRS ),Max( Max( PN,CRS ),MDR ) ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( MUM * DS ) / RMSe ) )", "obj1": 0.6012024048096193, "obj2": 0.2551624065774248}, {"determining": "( ( ( FirstVNF_RAM_Server - Max( Max( BR,CRS ),FirstVNF_RAM ) ) * ARS ) / Max( BR,CRS ) )", "choosing": "Min( ( ( MUM * DS ) / RMSe ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + Min( RCSe ,DS ) ) ) )", "obj1": 0.843687374749499, "obj2": 0.12202605952522634}, {"determining": "( ( ( FirstVNF_RAM_Server - Max( Max( BR,CRS ),FirstVNF_RAM ) ) * ARS ) / Max( BR,Max( Max( MDR,ARS ),MDR ) ) )", "choosing": "Min( ( ( MUM * DS ) / RMSe ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + RMSe ) ) )", "obj1": 0.8256513026052105, "obj2": 0.13715794638310336}, {"determining": "( FirstVNF_RAM_Server - Max( ( ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) / ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) ),MDR ) )", "choosing": "( ( ( ( RMSe + RMSe ) - ( MUM * RCSe ) ) * RRSe ) - ( MUM * RCSe ) )", "obj1": 0.9378757515030061, "obj2": 0.04277895462759357}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,CRS ),MDR ) )", "choosing": "Min( ( ( MUM * DS ) / RMSe ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6793587174348698, "obj2": 0.17911300522428614}, {"determining": "( ( ( FirstVNF_RAM_Server - Max( Max( BR,CRS ),MDR ) ) * ARS ) / Max( BR,CRS ) )", "choosing": "Min( Max( RRSe,MLU ) ,Min( ( RRSe / MUR ) ,Min( RCSe ,RMSe ) ) )", "obj1": 0.6332665330661322, "obj2": 0.2285892862866131}, {"determining": "( ( ( FirstVNF_RAM_Server - Max( ( FirstVNF_RAM_Server - Max( Max( MDR,ARS ),MDR ) ),FirstVNF_RAM ) ) * ARS ) / Max( BR,CRS ) )", "choosing": "Min( ( ( MUM * DS ) / RMSe ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + RMSe ) ) )", "obj1": 0.8296593186372746, "obj2": 0.12798070609699408}, {"determining": "( ( ( FirstVNF_RAM_Server - Max( Max( BR,CRS ),FirstVNF_RAM ) ) * ARS ) / Max( BR,CRS ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * RMSe ) )", "obj1": 0.7855711422845691, "obj2": 0.15993736541857956}, {"determining": "( ( ( FirstVNF_RAM_Server - Max( Max( BR,CRS ),FirstVNF_RAM ) ) * ARS ) / Max( BR,CRS ) )", "choosing": "Min( ( ( MUM * DS ) / RMSe ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + Min( RCSe ,DS ) ) ) )", "obj1": 0.843687374749499, "obj2": 0.12202605952522634}, {"determining": "( Max( ( CRS - FirstVNF_Mem ),( BR / FirstVNF_Mem ) ) / ( FirstVNF_RAM_Server - Max( Max( PN,CRS ),MDR ) ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( ( RMSe + ( RMSe / DS ) ) * DS ) / RMSe ) )", "obj1": 0.6052104208416834, "obj2": 0.24674960776943605}, {"determining": "( FirstVNF_RAM_Server - Max( ( PN * CRS ),MDR ) )", "choosing": "( Min( RCSe ,RMSe ) - ( ( ( RRSe * DS ) + RMSe ) - ( RRSe - MLU ) ) )", "obj1": 0.6713426853707415, "obj2": 0.19128185088771216}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,CRS ),Max( Max( BR,( ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) / ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) ) ),MDR ) ) )", "choosing": "Min( ( ( MUM * DS ) / RMSe ) ,( Min( ( MUC * MUC ) ,( MUC * RCSe ) ) * ( ( MLU - RCSe ) + Min( RCSe ,DS ) ) ) )", "obj1": 0.8997995991983968, "obj2": 0.06556995829926705}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,( MRS - MRS ) ),MDR ) )", "choosing": "Min( Max( RRSe,MLU ) ,Min( ( RRSe / MUR ) ,Min( RCSe ,RMSe ) ) )", "obj1": 0.6332665330661322, "obj2": 0.2285892862866131}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,CRS ),MDR ) )", "choosing": "Min( Max( RRSe,MLU ) ,RRSe )", "obj1": 0.7034068136272545, "obj2": 0.16978813737171086}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,FirstVNF_RAM_Server ),MDR ) )", "choosing": "( Max( RRSe,MLU ) * Min( ( RRSe / MUR ) ,Min( RCSe ,RMSe ) ) )", "obj1": 0.6372745490981964, "obj2": 0.22028611035037288}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,CRS ),MDR ) )", "choosing": "Min( Max( RRSe,MLU ) ,Min( ( RRSe / MUR ) ,Min( RCSe ,RMSe ) ) )", "obj1": 0.6332665330661322, "obj2": 0.2285892862866131}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,FirstVNF_RAM_Server ),MDR ) )", "choosing": "( ( RMSe + ( RMSe / DS ) ) - ( MUM * RRSe ) )", "obj1": 0.6132264529058116, "obj2": 0.233705044954868}, {"determining": "( ( ( FirstVNF_RAM_Server - Max( Max( BR,CRS ),MDR ) ) * ARS ) / Max( CRS,CRS ) )", "choosing": "Min( ( ( ( RMSe + ( ( MUM * DS ) / DS ) ) - ( Min( ( RRSe / MUR ) ,Max( RCSe,RMSe ) ) * DS ) ) / RMSe ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6513026052104208, "obj2": 0.20813798606270645}, {"determining": "( FirstVNF_RAM_Server - Max( Max( BR,ARS ),MDR ) )", "choosing": "Min( ( ( MUM * DS ) / RMSe ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6793587174348698, "obj2": 0.17911300522428614}, {"determining": "( ( ( FirstVNF_RAM_Server - Max( Max( RRS,CRS ),MDR ) ) * ARS ) / Max( BR,CRS ) )", "choosing": "Min( DS ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6793587174348698, "obj2": 0.17911300522428614}, {"determining": "( Max( ( CRS - FirstVNF_Mem ),( BR / FirstVNF_Mem ) ) / ( FirstVNF_RAM_Server - Max( Max( PN,CRS ),MDR ) ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * MLU ) )", "obj1": 0.6452905811623246, "obj2": 0.21512809287502338}], "13": [{"determining": "( Min( DDR ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( CS * DS ) / ( MLU * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * ( ( CRS * ARS ) / ( MRS + MRS ) ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( ( ( RMSe + RMSe ) - ( MUM * MLU ) ) * DS ) / RMSe ) )", "obj1": 0.5891783567134269, "obj2": 0.28554097145548}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,FirstVNF_RAM_Server ),MDR ) )", "choosing": "Min( Max( RRSe,MLU ) ,Min( ( RRSe / MUR ) ,Min( RCSe ,RMSe ) ) )", "obj1": 0.6332665330661322, "obj2": 0.2285892862866131}, {"determining": "( ( CRS * ARS ) / ( FirstVNF_RAM_Server - Max( Max( PN,CRS ),MDR ) ) )", "choosing": "( Min( RCSe ,RMSe ) - ( ( RMSe + RMSe ) - ( RRSe - MLU ) ) )", "obj1": 0.655310621242485, "obj2": 0.2054917155195748}, {"determining": "( ( CRS * ARS ) / ( FirstVNF_RAM_Server - Max( Max( PN,CRS ),MDR ) ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( MUM * DS ) / RMSe ) )", "obj1": 0.6012024048096193, "obj2": 0.2551624065774248}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,CRS ),MDR ) )", "choosing": "Min( Max( RRSe,MLU ) ,Min( ( RRSe / MUR ) ,Min( RCSe ,RMSe ) ) )", "obj1": 0.6332665330661322, "obj2": 0.2285892862866131}, {"determining": "( ( ( FirstVNF_RAM_Server - Max( Max( BR,CRS ),FirstVNF_RAM ) ) * ARS ) / Max( BR,CRS ) )", "choosing": "Min( ( ( MUM * DS ) / RMSe ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + Min( RCSe ,DS ) ) ) )", "obj1": 0.6793587174348698, "obj2": 0.17911300522428614}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,CRS ),Max( Max( BR,CRS ),MDR ) ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( MUM * DS ) / RMSe ) )", "obj1": 0.6012024048096193, "obj2": 0.2551624065774248}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,CRS ),MDR ) )", "choosing": "Min( Max( RRSe,MLU ) ,Min( ( RRSe / MUR ) ,Min( RCSe ,RMSe ) ) )", "obj1": 0.6332665330661322, "obj2": 0.2285892862866131}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( ( ( Const * ( ( MDR / FirstVNF_CPU ) / ( MRS + MRS ) ) ) / ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) ) / RRS ) / ( MRS + Max( Max( BR,ARS ),MDR ) ) ) ) )", "choosing": "( ( RMSe + ( MUR / DS ) ) - ( MUM * RRSe ) )", "obj1": 0.5751503006012024, "obj2": 0.30368482711210965}, {"determining": "( ( CRS * ARS ) / ( Const * ( ( ( ( Const * ( ( MDR / FirstVNF_CPU ) / ( MRS + MRS ) ) ) / ( Const * ( ( PN / RRS ) / ( MRS + MRS ) ) ) ) / RRS ) / ( MRS + FirstVNF_Mem ) ) ) )", "choosing": "( ( RMSe + ( RMSe / DS ) ) - ( MUM * RRSe ) )", "obj1": 0.5791583166332666, "obj2": 0.29858703228449307}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,FirstVNF_Mem_Server ),MDR ) )", "choosing": "( ( RMSe + RMSe ) - ( ( ( RMSe + RMSe ) - ( MUM * RCSe ) ) - ( CS - MLU ) ) )", "obj1": 0.6633266533066132, "obj2": 0.20325209718782228}, {"determining": "( ( Const * ( ( CRS * ARS ) / ( MRS + MRS ) ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( ( ( RMSe + RMSe ) - ( MUM * MLU ) ) * DS ) / RMSe ) )", "obj1": 0.5891783567134269, "obj2": 0.28554097145548}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,CRS ),MDR ) )", "choosing": "Min( Max( RRSe,MLU ) ,Min( ( RRSe / MUR ) ,Min( RCSe ,RMSe ) ) )", "obj1": 0.6332665330661322, "obj2": 0.2285892862866131}, {"determining": "( ( Const * ( ( CRS * ARS ) / ( MRS + FirstVNF_RAM ) ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( ( ( RMSe + RMSe ) * ( MUM * MLU ) ) * DS ) / RMSe ) )", "obj1": 0.5851703406813628, "obj2": 0.2923706525173932}, {"determining": "( ( CRS * ARS ) / ( ( FirstVNF_RAM_Server - Max( Max( BR,CRS ),MDR ) ) * ARS ) )", "choosing": "( ( RMSe + ( ( MUM * DS ) / DS ) ) - ( ( MUM * DS ) / RMSe ) )", "obj1": 0.6432865731462926, "obj2": 0.21854329458597962}, {"determining": "( ( FirstVNF_RAM_Server - Max( Max( PN,CRS ),MDR ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( ( ( RMSe + RMSe ) - ( RMSe * MLU ) ) * DS ) / RMSe ) )", "obj1": 0.591182364729459, "obj2": 0.2607205902886657}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,CRS ),Max( Max( PN,CRS ),MDR ) ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( MUM * DS ) / RMSe ) )", "obj1": 0.6012024048096193, "obj2": 0.2551624065774248}, {"determining": "( ( ( FirstVNF_RAM_Server - Max( Max( BR,CRS ),MDR ) ) * ARS ) / Max( BR,CRS ) )", "choosing": "Min( Max( RRSe,MLU ) ,Min( ( RRSe / MUR ) ,Min( RCSe ,RMSe ) ) )", "obj1": 0.6332665330661322, "obj2": 0.2285892862866131}, {"determining": "( Max( ( CRS - FirstVNF_Mem ),( BR / FirstVNF_Mem ) ) / ( FirstVNF_RAM_Server - Max( Max( PN,CRS ),MDR ) ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( ( RMSe + ( RMSe / DS ) ) * DS ) / RMSe ) )", "obj1": 0.6052104208416834, "obj2": 0.24674960776943605}, {"determining": "( FirstVNF_RAM_Server - Max( ( PN * CRS ),MDR ) )", "choosing": "( Min( RCSe ,RMSe ) - ( ( ( RRSe * DS ) + RMSe ) - ( RRSe - MLU ) ) )", "obj1": 0.6713426853707415, "obj2": 0.19128185088771216}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,( MRS - MRS ) ),MDR ) )", "choosing": "Min( Max( RRSe,MLU ) ,Min( ( RRSe / MUR ) ,Min( RCSe ,RMSe ) ) )", "obj1": 0.6332665330661322, "obj2": 0.2285892862866131}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,FirstVNF_RAM_Server ),MDR ) )", "choosing": "( Max( RRSe,MLU ) * Min( ( RRSe / MUR ) ,Min( RCSe ,RMSe ) ) )", "obj1": 0.6372745490981964, "obj2": 0.22028611035037288}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,CRS ),MDR ) )", "choosing": "Min( Max( RRSe,MLU ) ,Min( ( RRSe / MUR ) ,Min( RCSe ,RMSe ) ) )", "obj1": 0.6332665330661322, "obj2": 0.2285892862866131}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,FirstVNF_RAM_Server ),MDR ) )", "choosing": "( ( RMSe + ( RMSe / DS ) ) - ( MUM * RRSe ) )", "obj1": 0.6132264529058116, "obj2": 0.233705044954868}, {"determining": "( ( ( FirstVNF_RAM_Server - Max( Max( BR,CRS ),MDR ) ) * ARS ) / Max( CRS,CRS ) )", "choosing": "Min( ( ( ( RMSe + ( ( MUM * DS ) / DS ) ) - ( Min( ( RRSe / MUR ) ,Max( RCSe,RMSe ) ) * DS ) ) / RMSe ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6513026052104208, "obj2": 0.20813798606270645}, {"determining": "( Max( ( CRS - FirstVNF_Mem ),( BR / FirstVNF_Mem ) ) / ( FirstVNF_RAM_Server - Max( Max( PN,CRS ),MDR ) ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * MLU ) )", "obj1": 0.6452905811623246, "obj2": 0.21512809287502338}, {"determining": "( ( CRS * ARS ) / ( FirstVNF_RAM_Server - Max( Max( PN,CRS ),MDR ) ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( MUM * DS ) / RMSe ) )", "obj1": 0.6072144288577155, "obj2": 0.24479475298873954}, {"determining": "( FirstVNF_RAM_Server - Max( PN,Max( Max( BR,CRS ),MDR ) ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( MUM * ( ( MUM * DS ) / RMSe ) ) / RMSe ) )", "obj1": 0.6012024048096193, "obj2": 0.2551624065774248}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,CRS ),Max( Max( BR,CRS ),MDR ) ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( MUM * DS ) / RMSe ) )", "obj1": 0.6012024048096193, "obj2": 0.2551624065774248}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,CRS ),Max( Max( BR,CRS ),MDR ) ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( MUM * DS ) / RMSe ) )", "obj1": 0.6012024048096193, "obj2": 0.2551624065774248}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,CRS ),Max( Max( BR,CRS ),MDR ) ) )", "choosing": "( Min( RCSe ,RMSe ) - ( ( ( RRSe * DS ) + RMSe ) - ( RRSe - MLU ) ) )", "obj1": 0.6653306613226453, "obj2": 0.19760912355805751}, {"determining": "( ( Const * ( ( CRS * ARS ) / ( MRS + MRS ) ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( ( ( RMSe + RMSe ) - ( MUM * MLU ) ) * DS ) / RMSe ) )", "obj1": 0.5891783567134269, "obj2": 0.28554097145548}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,( MRS + MRS ) ),MDR ) )", "choosing": "Min( Max( RRSe,MLU ) ,Min( ( RRSe / MUR ) ,Min( RCSe ,RMSe ) ) )", "obj1": 0.6332665330661322, "obj2": 0.2285892862866131}, {"determining": "( ( Const * ( ( CRS * ARS ) / ( MRS + MRS ) ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( ( ( RMSe + RMSe ) - ( MUM * MLU ) ) * DS ) / RMSe ) )", "obj1": 0.5851703406813628, "obj2": 0.2923706525173932}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,CRS ),MDR ) )", "choosing": "Min( Max( RRSe,MLU ) ,Min( ( RRSe / MUR ) ,Min( RCSe ,RMSe ) ) )", "obj1": 0.6332665330661322, "obj2": 0.2285892862866131}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,CRS ),MDR ) )", "choosing": "( ( RMSe + ( RMSe / DS ) ) - ( MUM * RRSe ) )", "obj1": 0.5991983967935872, "obj2": 0.25647730707331723}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,CRS ),MDR ) )", "choosing": "Min( Max( RRSe,MLU ) ,Min( ( RRSe / MUR ) ,Min( RCSe ,RMSe ) ) )", "obj1": 0.6332665330661322, "obj2": 0.2285892862866131}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,FirstVNF_RAM_Server ),MDR ) )", "choosing": "( ( RMSe + ( RMSe / DS ) ) - ( MUM * RRSe ) )", "obj1": 0.6132264529058116, "obj2": 0.233705044954868}, {"determining": "( Max( Max( PN,FirstVNF_RAM_Server ),MDR ) / ( FirstVNF_RAM_Server - Max( Max( PN,CRS ),MDR ) ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( ( RMSe + ( RMSe / DS ) ) * DS ) / ( RMSe + ( RMSe / DS ) ) ) )", "obj1": 0.6052104208416834, "obj2": 0.24674960776943605}, {"determining": "( Max( ( CRS - FirstVNF_Mem ),( BR / FirstVNF_Mem ) ) / ( FirstVNF_RAM_Server - Max( Max( PN,CRS ),MDR ) ) )", "choosing": "( ( RMSe + ( RMSe / DS ) ) - ( MUM * RRSe ) )", "obj1": 0.6132264529058116, "obj2": 0.233705044954868}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,FirstVNF_RAM_Server ),MDR ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( ( RMSe + ( RMSe / DS ) ) * DS ) / RMSe ) )", "obj1": 0.6052104208416834, "obj2": 0.24674960776943605}, {"determining": "( ( ( FirstVNF_RAM_Server - Max( Max( BR,CRS ),MDR ) ) * ARS ) / Max( CRS,CRS ) )", "choosing": "Min( ( ( ( RMSe + ( ( MUM * DS ) / DS ) ) - ( Min( ( RRSe / MUR ) ,Max( RCSe,RMSe ) ) * DS ) ) / RMSe ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6513026052104208, "obj2": 0.20813798606270645}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,FirstVNF_RAM_Server ),MDR ) )", "choosing": "( ( RMSe + RMSe ) - ( MUM * MLU ) )", "obj1": 0.6452905811623246, "obj2": 0.21512809287502338}, {"determining": "( ( ( FirstVNF_RAM_Server - Max( Max( ( MRS + MRS ),CRS ),MDR ) ) * ARS ) / Max( CRS,CRS ) )", "choosing": "Min( ( ( ( RMSe + ( DS / DS ) ) - ( Min( ( RRSe / MUR ) ,Max( RCSe,RMSe ) ) * DS ) ) / RMSe ) ,( ( ( MUC * MUC ) * ( MUC * RCSe ) ) * ( ( MLU - RCSe ) + ( RCSe - DS ) ) ) )", "obj1": 0.6593186372745491, "obj2": 0.20329154554625367}, {"determining": "( ( CRS * ARS ) / ( ( FirstVNF_RAM_Server - Max( Max( BR,CRS ),MDR ) ) * ARS ) )", "choosing": "( ( RMSe + ( ( MUM * DS ) / DS ) ) - ( ( MUM * DS ) / RMSe ) )", "obj1": 0.6432865731462926, "obj2": 0.21854329458597962}, {"determining": "( ( CRS * ARS ) / ( ( FirstVNF_RAM_Server - Max( Max( BR,CRS ),MDR ) ) * ARS ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( MUM * DS ) / RMSe ) )", "obj1": 0.6012024048096193, "obj2": 0.2551624065774248}, {"determining": "( ( CRS * ARS ) / ( FirstVNF_RAM_Server - Max( Max( PN,CRS ),MDR ) ) )", "choosing": "( ( RMSe + ( ( MUM * DS ) / DS ) ) - ( ( MUM * DS ) / RMSe ) )", "obj1": 0.6432865731462926, "obj2": 0.21854329458597962}, {"determining": "( ( Const * ( ( CRS * ARS ) / ( MRS + MRS ) ) ) / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( ( ( RMSe + RMSe ) - ( MUM * MLU ) ) * DS ) / RMSe ) )", "obj1": 0.5891783567134269, "obj2": 0.28554097145548}, {"determining": "( ( ( FirstVNF_RAM_Server - Max( Max( BR,CRS ),MDR ) ) * ARS ) / Max( BR,CRS ) )", "choosing": "Min( Max( RRSe,MLU ) ,Min( ( RRSe / MUR ) ,Min( RCSe ,RMSe ) ) )", "obj1": 0.6332665330661322, "obj2": 0.2285892862866131}, {"determining": "( FirstVNF_RAM_Server - Max( Max( PN,( MRS + MRS ) ),MDR ) )", "choosing": "( Min( RMSe ,MLU ) - ( ( MUM * DS ) / RMSe ) )", "obj1": 0.6012024048096193, "obj2": 0.2551624065774248}]}