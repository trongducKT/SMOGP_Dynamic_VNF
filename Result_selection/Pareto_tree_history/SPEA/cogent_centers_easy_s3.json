{"1": [{"determining": "Max( ( CRS / FirstVNF_CPU ),( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) )", "choosing": "( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) )", "obj1": 0.23279352226720648, "obj2": 0.7483373386516984}, {"determining": "( ( DDR / PN ) * ( FirstVNF_Mem_Server + FirstVNF_CPU ) )", "choosing": "( ( ( RRSe + ( MLU + DS ) ) / MUM ) - ( MUR - CS ) )", "obj1": 0.3582995951417004, "obj2": 0.5796321398549555}, {"determining": "Max( Min( FirstVNF_RAM_Server ,Const ),( FirstVNF_RAM - RRS ) )", "choosing": "( Min( CS ,RCSe ) / ( RCSe - MUC ) )", "obj1": 0.23481781376518218, "obj2": 0.7350345795207601}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) + ( ACS * FirstVNF_Mem ) )", "choosing": "Min( ( MUM + DS ) ,( MUC * MUM ) )", "obj1": 0.3259109311740891, "obj2": 0.6319157482128659}, {"determining": "Min( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ,( PN - ( Min( RRS ,FirstVNF_Mem_Server ) * Const ) ) )", "choosing": "Max( Min( Max( CS,Max( CS,CS ) ) ,MLU ),Min( MUM ,( DS * ( Min( ( RRSe / Min( CS ,MUM ) ) ,RRSe ) * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Max( AMS,FirstVNF_Mem ) )", "choosing": "Max( ( MLU - RMSe ),( RCSe - RCSe ) )", "obj1": 0.20647773279352227, "obj2": 0.7759377309856371}, {"determining": "( Min( DDR ,FirstVNF_RAM ) - Max( ( DDR * ( DDR + AMS ) ),MDR ) )", "choosing": "( ( MLU * DS ) * ( ( Max( DS,MLU ) - ( RCSe * RCSe ) ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,Const ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "Max( ( CS - MLU ),Min( DS ,DS ) )", "obj1": 0.48380566801619435, "obj2": 0.4662353491268686}, {"determining": "( ( ( FirstVNF_CPU / Min( RRS ,Max( ( FirstVNF_CPU - ( RRS / FirstVNF_Mem ) ),PN ) ) ) - FirstVNF_RAM_Server ) / Min( AMS ,MRS ) )", "choosing": "Min( ( RMSe * MUC ) ,( Min( CS ,RMSe ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * MDR ) / ( FirstVNF_Mem + FirstVNF_Mem ) )", "choosing": "( ( MUM - DS ) + ( MLU - RMSe ) )", "obj1": 0.10526315789473684, "obj2": 0.8707771222244208}, {"determining": "Min( Max( ACS,MRS ) ,( MDR * PN ) )", "choosing": "( ( DS - MUM ) + Max( RCSe,MLU ) )", "obj1": 0.39473684210526316, "obj2": 0.5577576194633859}, {"determining": "( Max( Const,MRS ) - ( Const + Const ) )", "choosing": "( ( CS / MLU ) + Max( RMSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / ACS ) / ( RRS + CRS ) )", "choosing": "( ( MUR - DS ) / ( RCSe / MUR ) )", "obj1": 0.1214574898785425, "obj2": 0.8388326440579597}, {"determining": "Min( ( FirstVNF_CPU * BR ) ,Max( FirstVNF_CPU_Server,Const ) )", "choosing": "Min( ( MUC / RCSe ) ,Min( MUM ,DS ) )", "obj1": 0.4979757085020243, "obj2": 0.43311903233574783}, {"determining": "Max( ( FirstVNF_Mem_Server * PN ),( DDR + ARS ) )", "choosing": "( Min( MUR ,MLU ) * ( RMSe - MUR ) )", "obj1": 0.242914979757085, "obj2": 0.7037487054849364}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) / Max( RRS,FirstVNF_CPU ) )", "choosing": "( ( MLU * MUR ) / ( RCSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * DDR ) / ( RRS - BR ) ) - Min( ( Const + FirstVNF_RAM ) ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) )", "choosing": "( ( MUC / RMSe ) * Min( Min( DS ,MUR ) ,( RRSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ,ACS ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( ( RRSe / MUR ) * Min( MLU ,CS ) ) * ( ( MLU + MUM ) / Min( RMSe ,RRSe ) ) )", "obj1": 0.22469635627530365, "obj2": 0.7697897361340833}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_RAM ) * ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) )", "choosing": "Min( ( Min( RRSe ,MUR ) / ( MLU - MLU ) ) ,( Min( MUM ,MUR ) - ( CS * MUR ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5990876297060487}, {"determining": "( ( ( DDR - PN ) - Min( ARS ,FirstVNF_Mem ) ) - ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) / Max( DDR,FirstVNF_RAM ) ) )", "choosing": "( ( CS / RRSe ) / ( Max( MUC,RCSe ) + Min( DS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS * ARS ) ,MRS ) * ( FirstVNF_Mem - FirstVNF_RAM_Server ) )", "choosing": "( Min( MLU ,MLU ) - Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) )", "obj1": 0.9311740890688259, "obj2": 0.07041572024249179}, {"determining": "Max( ( Min( MDR ,CRS ) * ( FirstVNF_CPU_Server * Const ) ),( Min( FirstVNF_Mem ,RRS ) - ( Const / FirstVNF_RAM ) ) )", "choosing": "( Min( Min( RMSe ,MUC ) ,( DS / MLU ) ) - Min( Min( DS ,MUM ) ,Max( MUR,RMSe ) ) )", "obj1": 0.20445344129554655, "obj2": 0.7832136345963626}, {"determining": "( Max( Min( AMS ,FirstVNF_CPU ),( Const / MDR ) ) - ( MDR - PN ) )", "choosing": "( ( ( MUC / MLU ) - Min( MLU ,MUC ) ) * ( Max( MUC,MUC ) / ( RRSe + MUR ) ) )", "obj1": 0.19635627530364372, "obj2": 0.7872090297003597}, {"determining": "( Min( Max( AMS,MDR ) ,CRS ) + ( ( DDR + BR ) - FirstVNF_Mem_Server ) )", "choosing": "Max( ( CS - ( DS / RRSe ) ),Min( Max( RRSe,DS ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * FirstVNF_RAM ) / ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) - ( ( BR / BR ) / Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) )", "choosing": "( ( Max( CS,RRSe ) / ( MUM / MUR ) ) - ( ( DS + MUC ) / ( MUR * RCSe ) ) )", "obj1": 0.6740890688259109, "obj2": 0.31506931501937413}, {"determining": "( Min( Max( ARS,BR ) ,( FirstVNF_CPU_Server / CRS ) ) + ( ( ACS + ARS ) - ( FirstVNF_RAM_Server + CRS ) ) )", "choosing": "( ( ( CS - RRSe ) + RRSe ) * ( MUR + ( MUM / DS ) ) )", "obj1": 0.08299595141700405, "obj2": 0.886440259894059}, {"determining": "Min( ( ( ARS - DDR ) * ( FirstVNF_RAM_Server + RRS ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR * RCSe ),( MLU + ( MLU / CS ) ) )", "obj1": 0.27530364372469635, "obj2": 0.6503642749527614}, {"determining": "( ( Min( Const ,FirstVNF_RAM_Server ) - ( DDR - FirstVNF_CPU ) ) / Min( RRS ,PN ) )", "choosing": "Max( ( RMSe * MUC ),( MLU * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) )", "choosing": "( Min( DS ,MUR ) / ( DS + RRSe ) )", "obj1": 0.43724696356275305, "obj2": 0.5098901125964637}, {"determining": "Max( Min( ( FirstVNF_Mem + Const ) ,Min( ACS ,MDR ) ),Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( RCSe - RCSe ),( MUM - Min( DS ,MUM ) ) )", "obj1": 0.18016194331983806, "obj2": 0.8044753392327996}, {"determining": "Max( Min( ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) * ( ACS + FirstVNF_Mem ) ) ,Max( ( MDR + FirstVNF_CPU_Server ),( DDR + ACS ) ) ),( ( ( RRS / FirstVNF_RAM_Server ) / ( MDR + MDR ) ) + ( Min( FirstVNF_Mem_Server ,CRS ) / Min( FirstVNF_RAM_Server ,MRS ) ) ) )", "choosing": "( ( Max( ( MLU + MUM ),( MUR + DS ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.2550607287449393, "obj2": 0.6968646182209287}, {"determining": "( ( ( ( CRS - AMS ) + Max( CRS,ACS ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( MDR / FirstVNF_CPU_Server ) ) ) / ( ( Max( FirstVNF_Mem,Const ) / ( AMS / MDR ) ) - Max( Min( MRS ,BR ),( MRS + CRS ) ) ) )", "choosing": "( ( ( ( DS - MLU ) + ( MLU * RMSe ) ) / ( Max( MLU,MUC ) * Max( RRSe,RMSe ) ) ) + ( Min( ( CS / RMSe ) ,Max( DS,RCSe ) ) + Min( ( DS + RRSe ) ,Min( RMSe ,MUC ) ) ) )", "obj1": 0.8218623481781376, "obj2": 0.1940987795334579}, {"determining": "Min( ( Min( Min( PN ,FirstVNF_Mem ) ,( FirstVNF_Mem - Const ) ) * Max( ( FirstVNF_CPU * AMS ),( AMS - MRS ) ) ) ,Max( ( ( FirstVNF_Mem + FirstVNF_CPU ) * ( MDR - FirstVNF_CPU ) ),( Max( RRS,ARS ) / Min( RRS ,MRS ) ) ) )", "choosing": "( Max( MUM,DS ) / Max( MUR,( MLU * RRSe ) ) )", "obj1": 0.9352226720647774, "obj2": 0.057741041875901906}, {"determining": "( ( ARS / FirstVNF_CPU ) - ( FirstVNF_Mem_Server / Const ) )", "choosing": "( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * ( Min( ( RRSe / MUC ) ,( MUC + MUM ) ) - Max( Max( DS,MLU ),( RCSe * RRSe ) ) ) )", "obj1": 0.694331983805668, "obj2": 0.26466430288533377}, {"determining": "Min( Min( ( ( PN - FirstVNF_RAM ) * ( FirstVNF_Mem / FirstVNF_Mem ) ) ,( Min( AMS ,RRS ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ,( ( ( MDR * PN ) * ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU / FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ) )", "choosing": "( Max( Max( ( RCSe * RCSe ),( RMSe - MUC ) ),( ( CS - MUC ) / ( MLU - CS ) ) ) - ( ( ( MUC + MUR ) + Max( RMSe,DS ) ) + ( Min( RCSe ,RRSe ) + ( RRSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - Min( FirstVNF_CPU ,( BR / MDR ) ) ) * Min( FirstVNF_CPU_Server ,MRS ) )", "choosing": "( ( Min( MLU ,RCSe ) / RRSe ) / ( DS - MUR ) )", "obj1": 0.16194331983805668, "obj2": 0.8178634756811718}, {"determining": "( ( ( ACS + ( Const / MRS ) ) - ACS ) + ( FirstVNF_CPU_Server * BR ) )", "choosing": "( ( ( DS + Max( RMSe,MUM ) ) + ( ( MUC * RCSe ) - CS ) ) - ( ( MUM / RCSe ) * MUR ) )", "obj1": 0.4089068825910931, "obj2": 0.5462676825993384}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ) - ( Max( ( FirstVNF_RAM + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( ( MRS - BR ) / ( Const / DDR ) ) ) )", "choosing": "( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( Min( RCSe ,MUM ) * Max( MUM,MUR ) ) ) - ( Min( ( RRSe / RRSe ) ,( MUR - MLU ) ) * ( ( MUR - RCSe ) * ( MUC * RCSe ) ) ) )", "obj1": 0.9777327935222672, "obj2": 0.015957181803082747}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - Min( RRS ,AMS ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( ( MUR + ( RMSe + ( RCSe + MUM ) ) ) + MUC ) ) ),Min( Max( ( CS - MUM ),( MUM / MUM ) ) ,( Max( RCSe,MUM ) / ( MUM / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * PN ) / ( FirstVNF_RAM / MDR ) )", "choosing": "Max( ( ( ( MLU - MUM ) + ( RMSe + MUR ) ) - ( Max( MUR,RRSe ) + Min( RCSe ,MUR ) ) ),( ( ( CS / CS ) * Max( RMSe,MLU ) ) / ( ( MUC / RRSe ) / Min( MUR ,MUC ) ) ) )", "obj1": 0.31781376518218624, "obj2": 0.6423186455189427}, {"determining": "Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( DDR + FirstVNF_RAM ) ) - ( ( ACS + FirstVNF_Mem ) * ( DDR / PN ) ) ) ,( ( Max( AMS,AMS ) / ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) - Max( ( FirstVNF_RAM + PN ),( PN * FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC / RMSe ) + Min( ( MUC - ( MLU / RMSe ) ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( FirstVNF_Mem_Server + RRS ) ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,MUR ) ) * ( Min( MUM ,RMSe ) - Min( RRSe ,RMSe ) ) ),( ( ( MUC * MUM ) * ( CS - RRSe ) ) / ( ( CS + RCSe ) / ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * FirstVNF_RAM ) - ( MRS - MDR ) ) / Min( ACS ,MRS ) )", "choosing": "Max( Max( Min( MLU ,( ( MUM + MLU ) + MUM ) ),Max( ( MLU - RMSe ),( MUR / RCSe ) ) ),Max( ( ( CS * MUM ) / ( RRSe * RRSe ) ),( Max( MUR,CS ) / ( RRSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Max( Const,CRS ),Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server * MRS ) + ( FirstVNF_Mem_Server - AMS ) ) ) / Min( ( ( BR - MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ,Min( ( RRS + DDR ) ,Min( CRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MUC ) * ( RCSe - MUC ) ) / Min( Max( MUM,CS ) ,( CS + RMSe ) ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Max( MUR,MUM ) ) ) )", "obj1": 0.6012145748987854, "obj2": 0.36510607092779973}, {"determining": "( ( ( Max( FirstVNF_RAM,DDR ) / FirstVNF_RAM ) - ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) - ( FirstVNF_Mem - FirstVNF_CPU ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( DS + Min( ( DS + DS ) ,Min( MUM ,CS ) ) ) - MLU ) ) * ( MLU / CS ) )", "obj1": 0.5384615384615384, "obj2": 0.41263893645497435}], "2": [{"determining": "Max( Min( FirstVNF_RAM_Server ,Const ),( FirstVNF_RAM - RRS ) )", "choosing": "( Min( CS ,RCSe ) / ( RCSe - MUC ) )", "obj1": 0.23481781376518218, "obj2": 0.7350345795207601}, {"determining": "Min( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ,( PN - ( Min( RRS ,FirstVNF_Mem_Server ) * Const ) ) )", "choosing": "Max( Min( Max( CS,Max( CS,CS ) ) ,MLU ),Min( MUM ,( DS * ( Min( ( RRSe / Min( CS ,MUM ) ) ,RRSe ) * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,FirstVNF_RAM ) - Max( ( DDR * ( DDR + AMS ) ),MDR ) )", "choosing": "( ( MLU * DS ) * ( ( Max( DS,MLU ) - ( RCSe * RCSe ) ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU / Min( RRS ,Max( ( FirstVNF_CPU - ( RRS / FirstVNF_Mem ) ),PN ) ) ) - FirstVNF_RAM_Server ) / Min( AMS ,MRS ) )", "choosing": "Min( ( RMSe * MUC ) ,( Min( CS ,RMSe ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,MRS ) - ( Const + Const ) )", "choosing": "( ( CS / MLU ) + Max( RMSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) / Max( RRS,FirstVNF_CPU ) )", "choosing": "( ( MLU * MUR ) / ( RCSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * DDR ) / ( RRS - BR ) ) - Min( ( Const + FirstVNF_RAM ) ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) )", "choosing": "( ( MUC / RMSe ) * Min( Min( DS ,MUR ) ,( RRSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - PN ) - Min( ARS ,FirstVNF_Mem ) ) - ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) / Max( DDR,FirstVNF_RAM ) ) )", "choosing": "( ( CS / RRSe ) / ( Max( MUC,RCSe ) + Min( DS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( AMS,MDR ) ,CRS ) + ( ( DDR + BR ) - FirstVNF_Mem_Server ) )", "choosing": "Max( ( CS - ( DS / RRSe ) ),Min( Max( RRSe,DS ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,FirstVNF_RAM_Server ) - ( DDR - FirstVNF_CPU ) ) / Min( RRS ,PN ) )", "choosing": "Max( ( RMSe * MUC ),( MLU * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( PN - FirstVNF_RAM ) * ( FirstVNF_Mem / FirstVNF_Mem ) ) ,( Min( AMS ,RRS ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ,( ( ( MDR * PN ) * ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU / FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ) )", "choosing": "( Max( Max( ( RCSe * RCSe ),( RMSe - MUC ) ),( ( CS - MUC ) / ( MLU - CS ) ) ) - ( ( ( MUC + MUR ) + Max( RMSe,DS ) ) + ( Min( RCSe ,RRSe ) + ( RRSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ) - ( Max( ( FirstVNF_RAM + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( ( MRS - BR ) / ( Const / DDR ) ) ) )", "choosing": "( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( Min( RCSe ,MUM ) * Max( MUM,MUR ) ) ) - ( Min( ( RRSe / RRSe ) ,( MUR - MLU ) ) * ( ( MUR - RCSe ) * ( MUC * RCSe ) ) ) )", "obj1": 0.9777327935222672, "obj2": 0.015957181803082747}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - Min( RRS ,AMS ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( ( MUR + ( RMSe + ( RCSe + MUM ) ) ) + MUC ) ) ),Min( Max( ( CS - MUM ),( MUM / MUM ) ) ,( Max( RCSe,MUM ) / ( MUM / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( DDR + FirstVNF_RAM ) ) - ( ( ACS + FirstVNF_Mem ) * ( DDR / PN ) ) ) ,( ( Max( AMS,AMS ) / ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) - Max( ( FirstVNF_RAM + PN ),( PN * FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC / RMSe ) + Min( ( MUC - ( MLU / RMSe ) ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( FirstVNF_Mem_Server + RRS ) ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,MUR ) ) * ( Min( MUM ,RMSe ) - Min( RRSe ,RMSe ) ) ),( ( ( MUC * MUM ) * ( CS - RRSe ) ) / ( ( CS + RCSe ) / ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * FirstVNF_RAM ) - ( MRS - MDR ) ) / Min( ACS ,MRS ) )", "choosing": "Max( Max( Min( MLU ,( ( MUM + MLU ) + MUM ) ),Max( ( MLU - RMSe ),( MUR / RCSe ) ) ),Max( ( ( CS * MUM ) / ( RRSe * RRSe ) ),( Max( MUR,CS ) / ( RRSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + MDR ) * PN ) - ( ARS * Min( ( ( PN + FirstVNF_CPU ) / MRS ) ,FirstVNF_RAM ) ) )", "choosing": "( ( CS - ( MUM - ( ( MUR + MUC ) + ( RCSe * ( DS / MUR ) ) ) ) ) / Min( Min( CS ,MUM ) ,( Max( DS,MLU ) - Max( CS,RRSe ) ) ) )", "obj1": 0.9311740890688259, "obj2": 0.05709272353124638}, {"determining": "Min( Max( ( FirstVNF_Mem - ARS ),Const ) ,( PN - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,MLU ),RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Const ,FirstVNF_RAM_Server ) ,( PN - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,MLU ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe * MUC ) ,( MUM * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / ( ( ( ARS / ( BR - ( FirstVNF_Mem_Server / Const ) ) ) / Const ) + CRS ) )", "choosing": "Min( ( ( Min( RRSe ,Max( ( MUC / Max( ( MLU - CS ),CS ) ),( Max( MUM,DS ) - ( DS - Min( RMSe ,MLU ) ) ) ) ) * RMSe ) * MUC ) ,( RMSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( AMS,MDR ) ,CRS ) + ( ( Const + BR ) - FirstVNF_Mem_Server ) )", "choosing": "Max( ( CS - ( DS / RRSe ) ),Min( ( MUC / MUC ) ,( RCSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * FirstVNF_RAM ) / ( Const / Min( MDR ,( ( DDR + BR ) - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( MUC / MUC ) ,( RCSe - RCSe ) ) + ( CS - ( DS / RRSe ) ) ) / ( Max( ( RMSe * RRSe ),( MUM - MUC ) ) * ( ( MUC * MUM ) - Min( DS ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem_Server ) + ( ( DDR + FirstVNF_RAM ) - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( DS / DS ) * MUC ) - ( DS / RRSe ) ),Min( Max( RRSe,MUC ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( CRS,FirstVNF_RAM_Server ) * CRS ) ,( RRS - ( BR - ( ( RRS * PN ) / ( FirstVNF_RAM / MDR ) ) ) ) )", "choosing": "( ( RMSe + MUR ) / ( Max( ( MUC - MUR ),Max( RMSe,MUR ) ) + Max( ( RCSe / CS ),Max( DS,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * ( ( DDR - FirstVNF_CPU ) - Min( Const ,FirstVNF_RAM_Server ) ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) )", "choosing": "( ( MUM - DS ) + ( Max( ( MLU + ( MUC - MUR ) ),( MUM + RCSe ) ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - FirstVNF_CPU ) - Min( Const ,FirstVNF_RAM_Server ) ) / ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) )", "choosing": "( ( MUM - DS ) + ( MLU - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) * ( ( FirstVNF_CPU * CRS ) * DDR ) )", "choosing": "( ( MUM * ( MUM * ( Min( ( Min( RCSe ,MUR ) - ( ( MUR - MUR ) * RCSe ) ) ,DS ) + MUR ) ) ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) * ( ( FirstVNF_CPU * CRS ) * DDR ) )", "choosing": "Min( Max( MUM,( Min( RCSe ,( MLU - RCSe ) ) + ( MUC / MLU ) ) ) ,Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) * ( ( FirstVNF_CPU * CRS ) * DDR ) )", "choosing": "( ( MUM * ( MUM * ( Min( ( Min( RCSe ,MUR ) - ( ( MUR - MUR ) * RCSe ) ) ,DS ) + MUR ) ) ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) * ( RRS - BR ) )", "choosing": "( Max( MUM,CS ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),FirstVNF_RAM_Server ) - ( ( ACS + FirstVNF_Mem ) * ( DDR / PN ) ) ) ,( ( Max( AMS,AMS ) / ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) - Max( ( FirstVNF_RAM + PN ),( PN * FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC / RMSe ) + Min( ( MUC - ( ( Min( MUM ,MUM ) - ( ( MUC / CS ) * RCSe ) ) / RMSe ) ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server * MRS ) + ( ( Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( DDR + FirstVNF_RAM ) ) - ( ( ACS + FirstVNF_Mem ) * ( DDR / ( DDR - ARS ) ) ) ) ,( ( Max( AMS,AMS ) / ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM + PN ) + ( PN * FirstVNF_Mem ) ) ) ) / FirstVNF_CPU ) * FirstVNF_Mem_Server ) )", "choosing": "( Min( MUM ,MUM ) - ( ( MUC / ( ( MUC - RMSe ) + Min( ( MUC - ( MLU / Max( CS,DS ) ) ) ,MUM ) ) ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( DDR + FirstVNF_RAM ) ) - ( ( ACS + FirstVNF_Mem ) * ( DDR / PN ) ) ) ,( ( Max( AMS,AMS ) / ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) - Max( ( FirstVNF_RAM + PN ),( PN * FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC / RMSe ) + Min( ( MUC - ( MLU / RMSe ) ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) * ( RRS - Min( ACS ,FirstVNF_RAM ) ) )", "choosing": "( Max( DS,CS ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) * ( RRS - BR ) )", "choosing": "( Max( MUM,CS ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( FirstVNF_RAM,DDR ) / FirstVNF_RAM ) - ACS ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),( RRSe * MUM ) ) - ( RMSe * MLU ) ) * ( MLU / CS ) )", "obj1": 0.9979757085020243, "obj2": 0.001967450427531995}, {"determining": "Min( ( Min( Min( PN ,FirstVNF_Mem ) ,( FirstVNF_RAM - ( Const / FirstVNF_CPU ) ) ) * Max( ( FirstVNF_CPU * AMS ),( AMS - MRS ) ) ) ,Max( ( ( FirstVNF_Mem + FirstVNF_CPU ) * ( ( FirstVNF_CPU / RRS ) - FirstVNF_CPU ) ),Min( ( ( RRS + FirstVNF_Mem ) + ( FirstVNF_RAM_Server + BR ) ) ,Min( RRS ,MRS ) ) ) )", "choosing": "( Max( ( Min( ( ( RMSe / DS ) + ( DS + Min( ( DS / RMSe ) ,MLU ) ) ) ,( ( Min( MUC ,MUM ) * ( Max( DS,RCSe ) * RCSe ) ) + DS ) ) / ( RRSe * MUM ) ),( RMSe - MLU ) ) / Max( MUR,( MLU * RMSe ) ) )", "obj1": 0.9291497975708503, "obj2": 0.07235799110645727}, {"determining": "( ( MDR * ( FirstVNF_Mem_Server + RRS ) ) - ( Const / DDR ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,MUR ) ) * ( Min( MUM ,RMSe ) - Min( RRSe ,RMSe ) ) ),( ( ( MUC * MUM ) * ( CS - MLU ) ) / ( ( CS + RCSe ) / ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server + CRS ) * Max( FirstVNF_Mem_Server,RRS ) ) - ( ( BR / Max( MRS,DDR ) ) + ARS ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,MUR ) ) * ( Min( MUM ,RMSe ) - Min( RRSe ,RMSe ) ) ),( ( RRSe * MLU ) + ( Min( DS ,( CS - MUC ) ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - RRS ) - FirstVNF_RAM_Server ) / Max( Max( Max( Max( FirstVNF_RAM,FirstVNF_CPU_Server ),( MDR - ( FirstVNF_RAM_Server * RRS ) ) ),( ( FirstVNF_RAM + AMS ) - ( FirstVNF_CPU - FirstVNF_Mem ) ) ),( Min( ( MRS - Const ) ,( FirstVNF_RAM - FirstVNF_Mem ) ) / ( Max( BR,MRS ) * ( Const * MDR ) ) ) ) )", "choosing": "Max( ( ( CS * ( Max( MLU,MLU ) / ( MUR + MUR ) ) ) * Max( MUM,DS ) ),Max( ( ( CS * MUM ) / ( RRSe * RRSe ) ),( Max( MUR,CS ) / ( RRSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - FirstVNF_RAM ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "Max( Max( ( Max( MUM,MUM ) + ( MUR * RMSe ) ),Max( ( MLU / RMSe ),( RCSe / MUR ) ) ),Max( ( ( CS * MUM ) / ( RRSe * RRSe ) ),( Max( MUR,CS ) / ( RRSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM - ( Const + Const ) )", "choosing": "( ( CS / MLU ) + Max( RMSe,( MUR - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,MRS ) - ( Const + Const ) )", "choosing": "( ( CS / MLU ) + Max( RMSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) )", "choosing": "( Max( ( RCSe - MLU ),RRSe ) * ( ( MUR - MUM ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) )", "choosing": "( Max( ( RCSe - MLU ),RRSe ) * ( ( MUR - MUM ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) )", "choosing": "( Max( ( RCSe - MLU ),RRSe ) * ( ( MUR - MUM ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) )", "choosing": "( Max( ( RCSe - MLU ),RRSe ) * ( ( MUR - MUM ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - Min( DDR ,FirstVNF_CPU_Server ) ) ) - ( Max( ( FirstVNF_RAM + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( Const * Min( RRS ,Max( FirstVNF_RAM,Max( FirstVNF_RAM,RRS ) ) ) ) ) )", "choosing": "( ( Max( ( MLU + MUM ),Max( DS,Min( RMSe ,MUC ) ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.9858299595141701, "obj2": 0.009101849620332043}, {"determining": "( Min( Max( MDR,AMS ) ,CRS ) + ( ( DDR + BR ) - ( MRS / Const ) ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + RMSe ),( MLU + ( MLU / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Max( Const,CRS ),Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server * MRS ) + ( FirstVNF_Mem_Server - AMS ) ) ) / ( ( Const - FirstVNF_RAM ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUM * MUC ) * ( RCSe - MUC ) ) / Min( Max( MUM,CS ) ,( CS + RMSe ) ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - Max( ( ( CS * MUM ) / ( RRSe * RRSe ) ),( Max( MUR,CS ) / ( RRSe + CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ) - FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,MRS ) )", "choosing": "Max( Max( ( Max( MUM,MUM ) + ( MUR + RMSe ) ),Max( ( MLU / RMSe ),( RCSe / MUR ) ) ),Max( ( ( RCSe / MUC ) / ( RRSe * RRSe ) ),( ( RRSe + CS ) / Max( MUR,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM - Const ) - FirstVNF_RAM_Server ) / Min( ACS ,Min( RRS ,PN ) ) )", "choosing": "( ( ( RRSe + ( Min( Min( ( RRSe * DS ) ,RCSe ) ,MUM ) * ( CS / MUC ) ) ) + Min( RRSe ,MUR ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Max( MUR,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ,( MRS * MDR ) ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( ( RRSe / MUR ) * Min( MLU ,CS ) ) * ( MUM - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,( Const - DDR ) ),AMS ) / BR ) ) )", "choosing": "( Max( ( RCSe - MLU ),RRSe ) * ( ( MUR - MUM ) / ( ( DS - RRSe ) / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( DS ,CS ) ) / Min( Min( CS ,DS ) ,( ( MUM - ( ( ( DS - RRSe ) / RRSe ) - MUC ) ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,RRS ) - Max( ( ( ( ( Const + FirstVNF_RAM_Server ) / FirstVNF_CPU ) * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server * MRS ) ),Max( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ),AMS ) ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( RCSe + MUC ) ) ),Min( CS ,( ( CS / MUM ) - ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,RRS ) - Max( BR,Max( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ),AMS ) ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( RCSe + MUC ) ) ),Min( ( Max( RCSe,MUM ) / ( DS / MUC ) ) ,( ( CS / MUM ) - ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - Min( RRS ,AMS ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( ( MUR + ( RMSe + ( RCSe + MUM ) ) ) + MUC ) ) ),Min( Max( ( CS - MUM ),( MUM / MUM ) ) ,( Max( RCSe,MUM ) / ( MUM / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - Min( RRS ,AMS ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( ( MUR + ( RMSe + ( RCSe + MUM ) ) ) + MUC ) ) ),Min( Max( ( CS - MUM ),( MUM / MUM ) ) ,( Max( RCSe,MUM ) / ( MUM / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - Min( RRS ,AMS ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( ( MUR + ( RMSe + ( RCSe + MUM ) ) ) + MUC ) ) ),Min( Max( ( CS - MUM ),( MUM / MUM ) ) ,( Max( RCSe,MUM ) / ( MUM / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,AMS ) - Min( AMS ,Min( ACS ,( MDR - RRS ) ) ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( ( MUR + DS ) + MUC ) ) ),Min( ( Max( RCSe,MUM ) / ( DS / MUC ) ) ,Max( ( CS / MUM ),( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR - Const ),( ( Const - FirstVNF_RAM ) - FirstVNF_RAM_Server ) )", "choosing": "Max( ( MLU + MUR ),( DS + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - Max( ( MDR - Const ),( FirstVNF_Mem_Server / DDR ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "Max( Max( ( Max( MUM,MUM ) + ( MUR * RMSe ) ),( DS + MUC ) ),Max( ( ( CS * MUM ) / ( RRSe * RRSe ) ),( Max( MUR,CS ) / ( RRSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - FirstVNF_RAM ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "Max( Max( ( Max( MUM,MUM ) + ( MUR * RMSe ) ),Max( ( MLU / RMSe ),( RCSe / MUR ) ) ),Max( ( ( CS * MUM ) / ( RRSe * RRSe ) ),( Max( MUR,CS ) / ( RRSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / ARS ) * ( FirstVNF_Mem_Server - Min( AMS ,DDR ) ) ) * PN )", "choosing": "( ( ( ( Max( RCSe,RMSe ) / ( CS - MLU ) ) * DS ) - ( RCSe / Min( DS ,Min( RMSe ,RMSe ) ) ) ) / MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR - Max( FirstVNF_CPU,FirstVNF_Mem ) ) * ( FirstVNF_CPU * ( RRS - MRS ) ) ) ,( PN - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,MLU ),( ( ( DS * RMSe ) - RCSe ) / Max( RCSe,Min( MLU ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Const ,FirstVNF_RAM_Server ) ,( PN - FirstVNF_Mem_Server ) )", "choosing": "( ( ( DS * RMSe ) - RCSe ) / Max( RCSe,Min( MLU ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * FirstVNF_RAM ) / ( ( FirstVNF_CPU_Server / RRS ) * ( RRS - BR ) ) )", "choosing": "( ( Min( ( MUC / MUC ) ,Max( MUM,CS ) ) + ( ( CS / RRSe ) - Max( RCSe,CS ) ) ) / ( Max( ( RMSe * RRSe ),( MUM - MUC ) ) * ( ( MUC * MUM ) - Min( DS ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / Min( MDR ,( FirstVNF_Mem + MRS ) ) ) * ( RRS - BR ) )", "choosing": "( Max( MUM,CS ) * CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) * ( RRS - BR ) )", "choosing": "( ( Min( ( MUC / MUC ) ,( RCSe - RCSe ) ) + ( ( CS / RRSe ) - Max( RCSe,CS ) ) ) / ( Max( ( RMSe * RRSe ),( MUM - MUC ) ) * ( ( MUC * MUM ) - Min( DS ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - FirstVNF_RAM ) - FirstVNF_RAM_Server ) / DDR )", "choosing": "Max( Max( ( Max( MUM,MUM ) + ( MUR * RMSe ) ),Max( ( MLU / RMSe ),( RCSe / MUR ) ) ),Max( ( ( ( RRSe - CS ) * MUM ) / ( RRSe * RRSe ) ),( Max( MUR,CS ) / ( RRSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - FirstVNF_RAM ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( RRSe - CS ) * ( MUC - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( MRS * MDR ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) - FirstVNF_RAM ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "Max( Max( ( Max( MUM,MUM ) + ( MUR * RMSe ) ),MUM ),Max( ( ( CS * MUM ) / ( RRSe * RRSe ) ),( Max( MUR,CS ) / ( RRSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - FirstVNF_RAM ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( MUM - DS ) + ( MLU - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( RRS - ( FirstVNF_Mem_Server * ( Const / Const ) ) )", "choosing": "( ( MLU / DS ) * ( ( MUR / ( MUR * ( ( ( MUC * ( RCSe / MUM ) ) * ( Min( DS ,RCSe ) - ( RRSe + MUC ) ) ) - ( ( RCSe * MLU ) * Max( RCSe,MUR ) ) ) ) ) / ( ( RMSe - RCSe ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,FirstVNF_RAM ) - Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( ( Min( RRSe ,MUR ) * ( RRSe - MLU ) ) - ( ( MUC / CS ) * ( RMSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) )", "choosing": "( Max( ( RCSe - MLU ),RRSe ) * ( ( MUR - MUM ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem + MRS ) - Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( ( MUM * DS ) * ( MUR / CS ) )", "obj1": 0.9676113360323887, "obj2": 0.02582436851266324}, {"determining": "( Min( DDR ,FirstVNF_RAM ) - Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( ( MLU * DS ) * ( MUR / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ) - ( Max( ( FirstVNF_RAM + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( ( MRS - BR ) / ( Const / DDR ) ) ) )", "choosing": "Min( ( RCSe + RRSe ) ,Min( RRSe ,MLU ) )", "obj1": 0.979757085020243, "obj2": 0.013233868022476504}, {"determining": "( Min( ( DDR + MDR ) ,PN ) - Max( ( Min( ARS ,ACS ) / ARS ),( BR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RMSe - MUC ) * ( CS * CS ) ) / Min( Max( ( CS + MUC ),( CS * RRSe ) ) ,( Max( DS,MLU ) + Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - FirstVNF_CPU ) - Min( Const ,FirstVNF_RAM_Server ) ) / ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( DS ,MUC ) * ( CS + MLU ) ) - ( ( RMSe * MUC ) * ( RMSe / DS ) ) ) * ( ( ( MUM - CS ) * ( RRSe * DS ) ) / ( ( MUC / RMSe ) - ( MUR * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( ( PN - FirstVNF_Mem_Server ),AMS ) / BR ) ) )", "choosing": "( Max( ( RCSe - MLU ),RRSe ) * ( ( MUR - MUM ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( BR ,( PN - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MUR ,MLU ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Const ,FirstVNF_RAM_Server ) ,( PN - FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RCSe - MLU ),RRSe ) * ( ( MUR - MUM ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) )", "choosing": "Max( Min( MLU ,MLU ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ACS ,( PN - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,MLU ),Min( ( MUM - Min( DS ,MUM ) ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN * FirstVNF_Mem_Server ) ,( DDR + FirstVNF_Mem ) )", "choosing": "Max( Min( MLU ,MLU ),Max( RRSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) * ( RRS - BR ) )", "choosing": "Max( ( MLU + CS ),( DS + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( MDR,PN ) ,( ACS + ( ( RRS - FirstVNF_Mem_Server ) / Max( RRS,FirstVNF_CPU ) ) ) )", "choosing": "( MLU + ( MUM + RCSe ) )", "obj1": 0.9554655870445344, "obj2": 0.042356300815938365}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) / Max( RRS,FirstVNF_CPU ) )", "choosing": "( ( MUR * MUM ) + ( MUM + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR / MRS ) * RRS ) + ( RRS + ( FirstVNF_RAM + FirstVNF_CPU ) ) )", "choosing": "( ( RCSe + RCSe ) * ( ( MUM - MUR ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) )", "choosing": "Min( ( Min( RRSe ,MUR ) / ( MLU - MLU ) ) ,( Min( MUM ,MUR ) - ( CS * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( ARS ,ACS ) / ARS ) ,CRS ) + ( ( DDR + BR ) - FirstVNF_Mem_Server ) )", "choosing": "Max( ( CS - ( DS / RRSe ) ),( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR + BR ) - FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + MDR ) )", "choosing": "( Max( ( DS + CS ),( MLU - MUC ) ) - ( DS / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( AMS,MDR ) ,CRS ) + ( ( DDR + BR ) - FirstVNF_Mem_Server ) )", "choosing": "( Max( ( DS + CS ),( MLU - MUC ) ) - ( ( RMSe - MUC ) * ( CS * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - ARS ) / ( Max( FirstVNF_CPU_Server,RRS ) - ( Const - BR ) ) )", "choosing": "( ( ( Max( CS,RRSe ) * ( MUM / RMSe ) ) * ( Min( DS ,CS ) + ( MLU - RRSe ) ) ) - Max( ( Max( MLU,( Min( ( RRSe * CS ) ,Min( RCSe ,RRSe ) ) / Min( ( MUR - RMSe ) ,Max( RCSe,CS ) ) ) ) * ( DS * DS ) ),( ( RRSe - RRSe ) + ( RCSe / RMSe ) ) ) )", "obj1": 0.9433198380566802, "obj2": 0.04953249384582791}, {"determining": "( Min( RRS ,AMS ) - Min( AMS ,Min( ACS ,( CRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + ( Min( RRSe ,DS ) - DS ) ),Min( ( Max( RCSe,MUM ) / ( DS / MUC ) ) ,Max( ( CS / MUM ),( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,AMS ) - Min( AMS ,Min( ACS ,( MDR - RRS ) ) ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( ( MUR + DS ) + MUC ) ) ),Min( ( Max( RCSe,MUM ) / ( DS / MUC ) ) ,Max( ( CS / MUM ),( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "Min( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ,( PN - ( Min( RRS ,FirstVNF_Mem_Server ) * Const ) ) )", "choosing": "Max( Min( Max( CS,Max( CS,CS ) ) ,MLU ),Min( MUM ,( DS * ( Min( ( RRSe / Min( CS ,MUM ) ) ,RRSe ) * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,FirstVNF_RAM ) - Max( ( DDR * ( DDR + AMS ) ),MDR ) )", "choosing": "( ( MLU * DS ) * ( ( Max( DS,MLU ) - ( RCSe * RCSe ) ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU / Min( RRS ,Max( ( FirstVNF_CPU - ( RRS / FirstVNF_Mem ) ),PN ) ) ) - FirstVNF_RAM_Server ) / Min( AMS ,MRS ) )", "choosing": "Min( ( RMSe * MUC ) ,( Min( CS ,RMSe ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,MRS ) - ( Const + Const ) )", "choosing": "( ( CS / MLU ) + Max( RMSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) / Max( RRS,FirstVNF_CPU ) )", "choosing": "( ( MLU * MUR ) / ( RCSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * DDR ) / ( RRS - BR ) ) - Min( ( Const + FirstVNF_RAM ) ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) )", "choosing": "( ( MUC / RMSe ) * Min( Min( DS ,MUR ) ,( RRSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - PN ) - Min( ARS ,FirstVNF_Mem ) ) - ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) / Max( DDR,FirstVNF_RAM ) ) )", "choosing": "( ( CS / RRSe ) / ( Max( MUC,RCSe ) + Min( DS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( AMS,MDR ) ,CRS ) + ( ( DDR + BR ) - FirstVNF_Mem_Server ) )", "choosing": "Max( ( CS - ( DS / RRSe ) ),Min( Max( RRSe,DS ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,FirstVNF_RAM_Server ) - ( DDR - FirstVNF_CPU ) ) / Min( RRS ,PN ) )", "choosing": "Max( ( RMSe * MUC ),( MLU * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( PN - FirstVNF_RAM ) * ( FirstVNF_Mem / FirstVNF_Mem ) ) ,( Min( AMS ,RRS ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ,( ( ( MDR * PN ) * ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU / FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ) )", "choosing": "( Max( Max( ( RCSe * RCSe ),( RMSe - MUC ) ),( ( CS - MUC ) / ( MLU - CS ) ) ) - ( ( ( MUC + MUR ) + Max( RMSe,DS ) ) + ( Min( RCSe ,RRSe ) + ( RRSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ) - ( Max( ( FirstVNF_RAM + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( ( MRS - BR ) / ( Const / DDR ) ) ) )", "choosing": "( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( Min( RCSe ,MUM ) * Max( MUM,MUR ) ) ) - ( Min( ( RRSe / RRSe ) ,( MUR - MLU ) ) * ( ( MUR - RCSe ) * ( MUC * RCSe ) ) ) )", "obj1": 0.9777327935222672, "obj2": 0.015957181803082747}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - Min( RRS ,AMS ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( ( MUR + ( RMSe + ( RCSe + MUM ) ) ) + MUC ) ) ),Min( Max( ( CS - MUM ),( MUM / MUM ) ) ,( Max( RCSe,MUM ) / ( MUM / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( DDR + FirstVNF_RAM ) ) - ( ( ACS + FirstVNF_Mem ) * ( DDR / PN ) ) ) ,( ( Max( AMS,AMS ) / ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) - Max( ( FirstVNF_RAM + PN ),( PN * FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC / RMSe ) + Min( ( MUC - ( MLU / RMSe ) ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( FirstVNF_Mem_Server + RRS ) ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,MUR ) ) * ( Min( MUM ,RMSe ) - Min( RRSe ,RMSe ) ) ),( ( ( MUC * MUM ) * ( CS - RRSe ) ) / ( ( CS + RCSe ) / ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * FirstVNF_RAM ) - ( MRS - MDR ) ) / Min( ACS ,MRS ) )", "choosing": "Max( Max( Min( MLU ,( ( MUM + MLU ) + MUM ) ),Max( ( MLU - RMSe ),( MUR / RCSe ) ) ),Max( ( ( CS * MUM ) / ( RRSe * RRSe ) ),( Max( MUR,CS ) / ( RRSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + MDR ) * PN ) - ( ARS * Min( ( ( PN + FirstVNF_CPU ) / MRS ) ,FirstVNF_RAM ) ) )", "choosing": "( ( CS - ( MUM - ( ( MUR + MUC ) + ( RCSe * ( DS / MUR ) ) ) ) ) / Min( Min( CS ,MUM ) ,( Max( DS,MLU ) - Max( CS,RRSe ) ) ) )", "obj1": 0.9311740890688259, "obj2": 0.05709272353124638}, {"determining": "Min( Max( ( FirstVNF_Mem - ARS ),Const ) ,( PN - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,MLU ),RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Const ,FirstVNF_RAM_Server ) ,( PN - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,MLU ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe * MUC ) ,( MUM * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / ( ( ( ARS / ( BR - ( FirstVNF_Mem_Server / Const ) ) ) / Const ) + CRS ) )", "choosing": "Min( ( ( Min( RRSe ,Max( ( MUC / Max( ( MLU - CS ),CS ) ),( Max( MUM,DS ) - ( DS - Min( RMSe ,MLU ) ) ) ) ) * RMSe ) * MUC ) ,( RMSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( AMS,MDR ) ,CRS ) + ( ( Const + BR ) - FirstVNF_Mem_Server ) )", "choosing": "Max( ( CS - ( DS / RRSe ) ),Min( ( MUC / MUC ) ,( RCSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * FirstVNF_RAM ) / ( Const / Min( MDR ,( ( DDR + BR ) - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( MUC / MUC ) ,( RCSe - RCSe ) ) + ( CS - ( DS / RRSe ) ) ) / ( Max( ( RMSe * RRSe ),( MUM - MUC ) ) * ( ( MUC * MUM ) - Min( DS ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem_Server ) + ( ( DDR + FirstVNF_RAM ) - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( DS / DS ) * MUC ) - ( DS / RRSe ) ),Min( Max( RRSe,MUC ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( CRS,FirstVNF_RAM_Server ) * CRS ) ,( RRS - ( BR - ( ( RRS * PN ) / ( FirstVNF_RAM / MDR ) ) ) ) )", "choosing": "( ( RMSe + MUR ) / ( Max( ( MUC - MUR ),Max( RMSe,MUR ) ) + Max( ( RCSe / CS ),Max( DS,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * ( ( DDR - FirstVNF_CPU ) - Min( Const ,FirstVNF_RAM_Server ) ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) )", "choosing": "( ( MUM - DS ) + ( Max( ( MLU + ( MUC - MUR ) ),( MUM + RCSe ) ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - FirstVNF_CPU ) - Min( Const ,FirstVNF_RAM_Server ) ) / ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) )", "choosing": "( ( MUM - DS ) + ( MLU - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) * ( ( FirstVNF_CPU * CRS ) * DDR ) )", "choosing": "( ( MUM * ( MUM * ( Min( ( Min( RCSe ,MUR ) - ( ( MUR - MUR ) * RCSe ) ) ,DS ) + MUR ) ) ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) * ( ( FirstVNF_CPU * CRS ) * DDR ) )", "choosing": "Min( Max( MUM,( Min( RCSe ,( MLU - RCSe ) ) + ( MUC / MLU ) ) ) ,Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) * ( ( FirstVNF_CPU * CRS ) * DDR ) )", "choosing": "( ( MUM * ( MUM * ( Min( ( Min( RCSe ,MUR ) - ( ( MUR - MUR ) * RCSe ) ) ,DS ) + MUR ) ) ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) * ( RRS - BR ) )", "choosing": "( Max( MUM,CS ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),FirstVNF_RAM_Server ) - ( ( ACS + FirstVNF_Mem ) * ( DDR / PN ) ) ) ,( ( Max( AMS,AMS ) / ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) - Max( ( FirstVNF_RAM + PN ),( PN * FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC / RMSe ) + Min( ( MUC - ( ( Min( MUM ,MUM ) - ( ( MUC / CS ) * RCSe ) ) / RMSe ) ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server * MRS ) + ( ( Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( DDR + FirstVNF_RAM ) ) - ( ( ACS + FirstVNF_Mem ) * ( DDR / ( DDR - ARS ) ) ) ) ,( ( Max( AMS,AMS ) / ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM + PN ) + ( PN * FirstVNF_Mem ) ) ) ) / FirstVNF_CPU ) * FirstVNF_Mem_Server ) )", "choosing": "( Min( MUM ,MUM ) - ( ( MUC / ( ( MUC - RMSe ) + Min( ( MUC - ( MLU / Max( CS,DS ) ) ) ,MUM ) ) ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( FirstVNF_RAM,DDR ) / FirstVNF_RAM ) - ACS ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),( RRSe * MUM ) ) - ( RMSe * MLU ) ) * ( MLU / CS ) )", "obj1": 0.9979757085020243, "obj2": 0.001967450427531995}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - Min( DDR ,FirstVNF_CPU_Server ) ) ) - ( Max( ( FirstVNF_RAM + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( Const * Min( RRS ,Max( FirstVNF_RAM,Max( FirstVNF_RAM,RRS ) ) ) ) ) )", "choosing": "( ( Max( ( MLU + MUM ),Max( DS,Min( RMSe ,MUC ) ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.9858299595141701, "obj2": 0.009101849620332043}, {"determining": "( ( FirstVNF_Mem + MRS ) - Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( ( MUM * DS ) * ( MUR / CS ) )", "obj1": 0.9676113360323887, "obj2": 0.02582436851266324}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ) - ( Max( ( FirstVNF_RAM + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( ( MRS - BR ) / ( Const / DDR ) ) ) )", "choosing": "Min( ( RCSe + RRSe ) ,Min( RRSe ,MLU ) )", "obj1": 0.979757085020243, "obj2": 0.013233868022476504}, {"determining": "Min( Max( MDR,PN ) ,( ACS + ( ( RRS - FirstVNF_Mem_Server ) / Max( RRS,FirstVNF_CPU ) ) ) )", "choosing": "( MLU + ( MUM + RCSe ) )", "obj1": 0.9554655870445344, "obj2": 0.042356300815938365}, {"determining": "( Min( ( DDR + MDR ) ,PN ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( Max( CS,RCSe ) / ( RMSe / MLU ) ) * ( ( MUC + CS ) * Max( MLU,CS ) ) ) / Min( Min( CS ,MUM ) ,( Max( DS,MLU ) + Max( CS,RRSe ) ) ) )", "obj1": 0.9291497975708503, "obj2": 0.05883929919880657}, {"determining": "( Min( ( DDR + MDR ) ,PN ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( Max( CS,RCSe ) / ( RMSe / MLU ) ) * ( ( MUC + CS ) * Max( MLU,CS ) ) ) / Min( Min( CS ,MUM ) ,( Max( DS,MLU ) + Max( CS,RRSe ) ) ) )", "obj1": 0.9190283400809717, "obj2": 0.07225849914667062}, {"determining": "( Min( ( DDR + MDR ) ,PN ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( Min( ( MUC / MUC ) ,( RCSe - RCSe ) ) + ( CS - ( DS / RRSe ) ) ) / ( Max( ( RMSe * RRSe ),( MUM - MUC ) ) * ( ( MUC * MUM ) - Min( DS ,MUM ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.11211004151511449}, {"determining": "( ( ( Const - ( ( ( FirstVNF_RAM / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( Min( MUM ,MUR ) - ( CS * MUR ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Max( MUR,MUM ) ) ) )", "obj1": 0.31376518218623484, "obj2": 0.6270815373021177}, {"determining": "( ( ( DDR / MRS ) * RRS ) + ( RRS + ( FirstVNF_RAM + FirstVNF_CPU ) ) )", "choosing": "( ( RCSe + RCSe ) * ( ( MUM - MUR ) / RMSe ) )", "obj1": 0.25708502024291496, "obj2": 0.6908826405857156}, {"determining": "( ( ( DDR / MRS ) * RRS ) + ( RRS + ( FirstVNF_RAM + FirstVNF_CPU ) ) )", "choosing": "( ( RCSe + RCSe ) * ( ( MUM - MUR ) / RMSe ) )", "obj1": 0.25708502024291496, "obj2": 0.6908826405857156}, {"determining": "( ( ( DDR / MRS ) * RRS ) + ( RRS + ( FirstVNF_RAM + FirstVNF_CPU ) ) )", "choosing": "( ( RCSe + RCSe ) * ( ( MUM - MUR ) / RMSe ) )", "obj1": 0.25708502024291496, "obj2": 0.6908826405857156}, {"determining": "( ( ( FirstVNF_RAM / ( FirstVNF_CPU_Server / MRS ) ) * RRS ) + ( FirstVNF_CPU - ( ( Max( AMS,MDR ) / BR ) / Max( Min( DDR ,ARS ),AMS ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR * CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( Min( DS ,MUC ) * MUM ) )", "obj1": 0.25708502024291496, "obj2": 0.6908826405857156}, {"determining": "( Max( Max( Max( Const,CRS ),Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server * MRS ) + ( FirstVNF_Mem_Server - AMS ) ) ) / Min( ACS ,MRS ) )", "choosing": "Max( Max( ( Max( MUM,MUM ) + ( MUR * RMSe ) ),( DS + MUC ) ),Max( ( ( CS * MUM ) / ( RRSe * RRSe ) ),( Max( MUR,CS ) / ( Max( MUR,CS ) / ( RRSe + CS ) ) ) ) )", "obj1": 0.2935222672064777, "obj2": 0.6694170463292051}, {"determining": "( ( ( FirstVNF_RAM / ( MRS / FirstVNF_CPU_Server ) ) * RRS ) + ( FirstVNF_RAM - ( BR / Max( Min( DDR ,ARS ),AMS ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( ( MUR - MUM ) / RMSe ) )", "obj1": 0.2793522267206478, "obj2": 0.6897774915030729}, {"determining": "Min( ( Min( Min( PN ,FirstVNF_Mem ) ,( FirstVNF_Mem - Const ) ) - Max( ( FirstVNF_CPU * AMS ),( AMS - MRS ) ) ) ,Max( ( ( FirstVNF_Mem + FirstVNF_CPU ) * Max( AMS,( FirstVNF_CPU * MDR ) ) ),( ( ( RRS + FirstVNF_Mem ) + ( FirstVNF_RAM_Server + BR ) ) / Min( RRS ,MRS ) ) ) )", "choosing": "Max( ( MUR * ( MUM + ( ( Min( MUR ,( MUR - MUC ) ) / CS ) - RMSe ) ) ),( MLU + ( CS / CS ) ) )", "obj1": 0.9473684210526315, "obj2": 0.04358662693800397}, {"determining": "( Min( Max( MDR,AMS ) ,CRS ) + ( ( DDR + BR ) - ( MRS / Const ) ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + RMSe ),( MLU + ( MLU / MUR ) ) )", "obj1": 0.2550607287449393, "obj2": 0.6955431825964687}, {"determining": "( Min( Max( MDR,AMS ) ,CRS ) + ( ( DDR + BR ) - ( MRS / Const ) ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + RMSe ),( MLU + ( MLU / MUR ) ) )", "obj1": 0.2550607287449393, "obj2": 0.6955431825964687}, {"determining": "( Min( Max( MDR,AMS ) ,CRS ) + ( ( DDR + BR ) - ( MRS / Const ) ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + RMSe ),( MLU + ( MLU / MUR ) ) )", "obj1": 0.2550607287449393, "obj2": 0.6955431825964687}, {"determining": "( Min( ( ( FirstVNF_Mem / ( ( BR / Min( PN ,Max( FirstVNF_Mem_Server,BR ) ) ) - FirstVNF_RAM_Server ) ) * ARS ) ,( ( Const * Const ) * MRS ) ) + ( ( DDR + BR ) - ( MRS / Const ) ) )", "choosing": "Max( ( Max( RRSe,RCSe ) * RMSe ),( MLU + ( MUC - Max( CS,( Max( MUC,CS ) / MUR ) ) ) ) )", "obj1": 0.2550607287449393, "obj2": 0.6955431825964687}, {"determining": "( RRS - Min( RRS ,AMS ) )", "choosing": "( ( MLU * DS ) * ( ( MUC / CS ) * MUM ) )", "obj1": 0.4433198380566802, "obj2": 0.48932181471423064}, {"determining": "Min( ( Min( Min( PN ,FirstVNF_Mem ) ,( FirstVNF_Mem - Const ) ) * Max( ( FirstVNF_CPU * AMS ),( AMS - MRS ) ) ) ,Max( ( ( FirstVNF_Mem + FirstVNF_CPU ) * ( ( FirstVNF_CPU / RRS ) - FirstVNF_CPU ) ),Min( ( ( RRS + FirstVNF_Mem ) + ( FirstVNF_RAM_Server + BR ) ) ,Min( RRS ,( ( FirstVNF_CPU_Server / RRS ) * ( RRS - BR ) ) ) ) ) )", "choosing": "( ( Max( MUM,CS ) * Min( RCSe ,RRSe ) ) / Max( MUR,( MLU * RRSe ) ) )", "obj1": 0.9392712550607287, "obj2": 0.05533213707649468}, {"determining": "( Max( Const,MRS ) - ( RRS - MRS ) )", "choosing": "( ( CS / ( ( DS * RMSe ) - RCSe ) ) + Max( RMSe,MLU ) )", "obj1": 0.2408906882591093, "obj2": 0.7182309371750168}, {"determining": "( PN * ( FirstVNF_CPU * ( Const - MRS ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * RMSe ) - RCSe ) / MUM )", "obj1": 0.19433198380566802, "obj2": 0.785492757164353}, {"determining": "Min( ( Min( Min( PN ,FirstVNF_Mem ) ,( FirstVNF_Mem - Const ) ) * Max( ( FirstVNF_CPU * AMS ),( ( FirstVNF_Mem - ARS ) / ( Max( FirstVNF_CPU_Server,RRS ) - ( Const - BR ) ) ) ) ) ,Max( ( ( FirstVNF_Mem + FirstVNF_CPU ) * ( ( FirstVNF_CPU / RRS ) - FirstVNF_CPU ) ),Min( ( ( RRS + FirstVNF_Mem ) + ( FirstVNF_RAM_Server + BR ) ) ,Min( RRS ,MRS ) ) ) )", "choosing": "( Max( ( Min( ( ( RMSe / DS ) + RRSe ) ,( ( Min( MUC ,MUM ) * ( Max( DS,RCSe ) * RCSe ) ) + DS ) ) / ( RRSe * MUM ) ),( RMSe - MLU ) ) / Max( MUR,Max( ( Max( MLU,( Min( ( RRSe * CS ) ,Min( RCSe ,RRSe ) ) / Min( ( MUR - RMSe ) ,Max( RCSe,CS ) ) ) ) * ( DS * DS ) ),( ( RRSe - RRSe ) + ( RCSe / RMSe ) ) ) ) )", "obj1": 0.9635627530364372, "obj2": 0.029968301455590363}, {"determining": "( Max( ( FirstVNF_CPU * AMS ),( AMS - MRS ) ) / ( Max( FirstVNF_CPU_Server,RRS ) - ( Const - BR ) ) )", "choosing": "( ( ( Max( CS,RRSe ) * ( MUM / RMSe ) ) * ( Min( DS ,CS ) + ( MLU - RRSe ) ) ) - Max( ( Max( MLU,( Min( RRSe ,Min( RCSe ,RRSe ) ) / Min( ( MUR - RMSe ) ,Max( RCSe,CS ) ) ) ) * ( DS * DS ) ),( ( RRSe - RRSe ) + ( RCSe / RMSe ) ) ) )", "obj1": 0.354251012145749, "obj2": 0.6116139292330877}, {"determining": "( ( FirstVNF_Mem + BR ) - Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( ( MUM * ( DS / MUC ) ) * ( MUR / CS ) )", "obj1": 0.9595141700404858, "obj2": 0.03160016983873693}, {"determining": "( ( FirstVNF_Mem + MRS ) - Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( ( MUM * DS ) * ( MUR / CS ) )", "obj1": 0.9676113360323887, "obj2": 0.02582436851266324}, {"determining": "( FirstVNF_Mem_Server - ( Max( ( FirstVNF_RAM + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( ( MRS - BR ) / ( Const / DDR ) ) ) )", "choosing": "( ( ( ( CS + MUM ) - ( CS - ( DS / RRSe ) ) ) + ( Min( RCSe ,MUM ) * Max( MUM,MUR ) ) ) - ( Min( ( RRSe / RRSe ) ,( MUR - MLU ) ) * ( ( MUR - RCSe ) * ( MUC * RCSe ) ) ) )", "obj1": 0.6275303643724697, "obj2": 0.311893968962243}, {"determining": "( Min( AMS ,Min( ACS ,( ARS - Min( ( Min( Max( RRS,AMS ) ,MDR ) - FirstVNF_CPU ) ,ACS ) ) ) ) / Max( Max( Max( ( MDR - MRS ),Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM + AMS ) - ( FirstVNF_CPU - FirstVNF_Mem ) ) ),( Min( ( MRS - Const ) ,( FirstVNF_RAM - FirstVNF_Mem ) ) / ( Max( BR,MRS ) * ( Const * MDR ) ) ) ) )", "choosing": "Max( Max( ( ( RMSe * MUC ) * ( ( RCSe / ( ( Min( CS ,CS ) - MUM ) / MUR ) ) / MUR ) ),CS ),Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( ( MUR + ( RMSe + CS ) ) + MUC ) ) ),( Max( MUR,CS ) / ( RRSe + CS ) ) ) )", "obj1": 0.13360323886639677, "obj2": 0.8365752757433005}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) * ( RRS - Min( ( ( FirstVNF_CPU_Server / RRS ) * ( RRS - BR ) ) ,FirstVNF_RAM ) ) )", "choosing": "( Max( ( DS + MUC ),CS ) * Min( RCSe ,RRSe ) )", "obj1": 0.4149797570850202, "obj2": 0.5702123416674636}, {"determining": "Min( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) * FirstVNF_Mem_Server ) ,( DDR + FirstVNF_Mem ) )", "choosing": "Max( Min( MLU ,MLU ),Max( RRSe,MLU ) )", "obj1": 0.21862348178137653, "obj2": 0.7584170704748259}, {"determining": "Min( ( FirstVNF_CPU * FirstVNF_Mem_Server ) ,( MRS * MDR ) )", "choosing": "Max( ( ( MUM + Max( RRSe,Min( MUM ,Max( CS,Max( ( RRSe + RMSe ),RRSe ) ) ) ) ) / ( MUR + Max( RMSe,MLU ) ) ),Max( RRSe,RRSe ) )", "obj1": 0.20647773279352227, "obj2": 0.7654176848651577}, {"determining": "( RRS * ( ( ( ( MDR * FirstVNF_CPU ) - ( FirstVNF_RAM + ACS ) ) / ( FirstVNF_CPU * RRS ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUM / ( MLU + Max( MUC,MUR ) ) ) - RCSe ) / ( MUR / MUM ) )", "obj1": 0.23076923076923078, "obj2": 0.731530447759379}, {"determining": "( ( ( RRS / ARS ) * ( FirstVNF_Mem_Server - Min( AMS ,DDR ) ) ) * PN )", "choosing": "( ( ( ( Max( RCSe,RMSe ) / ( CS - MLU ) ) * DS ) - ( RCSe / Min( DS ,Min( RMSe ,RMSe ) ) ) ) / MUM )", "obj1": 0.4230769230769231, "obj2": 0.5213565651229484}, {"determining": "( ( ( RRS / ARS ) * ( FirstVNF_Mem_Server - Min( AMS ,DDR ) ) ) * PN )", "choosing": "( ( ( ( Max( RCSe,RMSe ) / ( CS - MLU ) ) * DS ) - ( RCSe / Min( DS ,Min( RMSe ,RMSe ) ) ) ) / MUM )", "obj1": 0.4230769230769231, "obj2": 0.5213565651229484}, {"determining": "( ( ( RRS / ARS ) * ( FirstVNF_Mem_Server - Min( AMS ,DDR ) ) ) * PN )", "choosing": "( ( ( ( Max( RCSe,RMSe ) / ( CS - MLU ) ) * DS ) - ( RCSe / Min( DS ,Min( RMSe ,RMSe ) ) ) ) / MUM )", "obj1": 0.4230769230769231, "obj2": 0.5213565651229484}, {"determining": "( PN * ( FirstVNF_CPU * ( RRS - ( BR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS * RMSe ) - ( RCSe / Min( MLU ,DS ) ) ) / MUM )", "obj1": 0.4230769230769231, "obj2": 0.5213565651229484}, {"determining": "( ( Min( ( CRS * CRS ) ,FirstVNF_RAM_Server ) - ( DDR - FirstVNF_CPU ) ) / ( FirstVNF_CPU / DDR ) )", "choosing": "Max( ( MUR * MUR ),( MUM + DS ) )", "obj1": 0.5708502024291497, "obj2": 0.39245184788902515}, {"determining": "( ( FirstVNF_Mem + MRS ) - Max( AMS,MDR ) )", "choosing": "( ( MUR + ( RMSe + ( RCSe + MUM ) ) ) * ( MUR / CS ) )", "obj1": 0.9412955465587044, "obj2": 0.04781936688844966}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - Min( ( Min( FirstVNF_CPU_Server ,AMS ) / FirstVNF_RAM ) ,AMS ) )", "choosing": "( ( CS / CS ) * ( Max( RRSe,MUM ) * DS ) )", "obj1": 0.44129554655870445, "obj2": 0.4975956153164376}, {"determining": "( Max( FirstVNF_Mem_Server,MDR ) - ( FirstVNF_Mem + ( FirstVNF_RAM + Min( ( BR * DDR ) ,FirstVNF_Mem ) ) ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( ( MUR + ( MUR + ( ( RCSe * CS ) + RCSe ) ) ) + MUC ) ) ),Min( Max( ( CS - MUM ),( MUM / MUM ) ) ,( Max( RCSe,MUM ) / ( MUM / MUC ) ) ) )", "obj1": 0.9251012145748988, "obj2": 0.06983529551899757}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ) - ( Max( ( FirstVNF_RAM + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( ( MRS - BR ) / ( Const / DDR ) ) ) )", "choosing": "( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( Min( RCSe ,MUM ) * Max( MUM,MUR ) ) ) - ( Min( ( RRSe / RRSe ) ,( MUR - MLU ) ) * ( ( MUR - RCSe ) * ( MUC * RCSe ) ) ) )", "obj1": 0.9777327935222672, "obj2": 0.015957181803082747}, {"determining": "( ( ( FirstVNF_CPU_Server + CRS ) * Max( FirstVNF_Mem_Server,RRS ) ) - ( ( BR / Max( MRS,DDR ) ) + FirstVNF_CPU ) )", "choosing": "Max( ( Min( MUR ,Max( MUR,MUR ) ) * ( Min( MUM ,RMSe ) - Min( RRSe ,RMSe ) ) ),( ( RRSe * MLU ) + ( Min( DS ,( CS - MUC ) ) - MUC ) ) )", "obj1": 0.5263157894736842, "obj2": 0.4328184617825668}, {"determining": "( ( ( FirstVNF_CPU_Server + CRS ) * Max( FirstVNF_Mem_Server,RRS ) ) - ( ( BR / Max( MRS,DDR ) ) + ARS ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,MUR ) ) * ( Min( MUM ,RMSe ) - Min( RRSe ,RMSe ) ) ),( ( RRSe * MLU ) + ( Min( DS ,( CS - MUC ) ) - MUC ) ) )", "obj1": 0.8866396761133604, "obj2": 0.13150101721217133}, {"determining": "( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server / RRS ) ) - Min( RRS ,AMS ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( ( ( Min( ( MUC / MUC ) ,Max( MUM,CS ) ) + ( ( CS / RRSe ) - Max( RCSe,CS ) ) ) + ( RMSe + ( RCSe + MUM ) ) ) + MUC ) ) ),Min( Max( ( CS - MUM ),( MUM / MUM ) ) ,( Max( RCSe,MUM ) / ( MUM / MUC ) ) ) )", "obj1": 0.14979757085020243, "obj2": 0.8275047936930604}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - Min( RRS ,AMS ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( ( MUR + ( RMSe + ( RCSe + MUM ) ) ) + MUC ) ) ),Min( Max( ( CS - MUM ),( MUM / MUM ) ) ,( Max( RCSe,MUM ) / ( MUM / MUC ) ) ) )", "obj1": 0.12348178137651822, "obj2": 0.8464588929629185}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) / Max( RRS,( ( Const * FirstVNF_RAM ) / ( Const / Min( MDR ,( ( DDR + BR ) - FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( ( MUC / MUC ) ,( RCSe - RCSe ) ) + ( MUM + RCSe ) )", "obj1": 0.3522267206477733, "obj2": 0.6225716817359471}, {"determining": "( ( Const * FirstVNF_RAM ) / ( Const / Min( MDR ,( ( Const / ( ( ( ACS * FirstVNF_CPU_Server ) - ARS ) * AMS ) ) - FirstVNF_Mem_Server ) ) ) )", "choosing": "( RMSe / ( ( ( DS * ( ( ( MUM * MLU ) / ( RCSe - MUR ) ) / MLU ) ) + CS ) * ( ( MUC * MUM ) - Min( DS ,MUM ) ) ) )", "obj1": 0.2854251012145749, "obj2": 0.687590812239343}, {"determining": "( ( FirstVNF_CPU * ACS ) - FirstVNF_Mem )", "choosing": "( ( MLU * DS ) * ( RMSe / ( MUC - ( ( Min( MUM ,MUM ) - ( ( ( MLU - MLU ) * CS ) * RCSe ) ) / RMSe ) ) ) )", "obj1": 0.7267206477732794, "obj2": 0.2770197894373334}, {"determining": "( ( ( BR + FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU - DDR ) )", "choosing": "Max( ( MUC * ( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ),( MUM + DS ) )", "obj1": 0.4757085020242915, "obj2": 0.46883663713195123}, {"determining": "( ( Min( Const ,FirstVNF_RAM_Server ) - ( AMS + Min( Const ,Max( DDR,MRS ) ) ) ) / ( MDR - DDR ) )", "choosing": "Max( ( MUC * ( MLU + MUM ) ),( MUM + DS ) )", "obj1": 0.5850202429149798, "obj2": 0.3737125825127804}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ) - ( Max( ( FirstVNF_RAM + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( ( MRS - BR ) / ( Const / DDR ) ) ) )", "choosing": "( ( Max( ( MLU + MUM ),( MUR + DS ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.9838056680161943, "obj2": 0.010029022568250867}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - Min( DDR ,FirstVNF_CPU_Server ) ) ) - ( Max( ( FirstVNF_RAM + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( Const * Min( RRS ,Max( FirstVNF_RAM,Max( FirstVNF_RAM,RRS ) ) ) ) ) )", "choosing": "( ( Max( ( MLU + MUM ),Max( DS,Min( RMSe ,MUC ) ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.9858299595141701, "obj2": 0.009101849620332043}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - Min( DDR ,FirstVNF_CPU_Server ) ) ) - ( Max( ( FirstVNF_RAM + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( Const * Min( RRS ,Max( FirstVNF_RAM,Max( FirstVNF_RAM,RRS ) ) ) ) ) )", "choosing": "( ( Max( ( MLU + MUM ),Max( DS,Min( RMSe ,MUC ) ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.9858299595141701, "obj2": 0.009101849620332043}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - Min( DDR ,FirstVNF_CPU_Server ) ) ) - ( Max( ( FirstVNF_RAM + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( Const * Min( RRS ,Max( FirstVNF_RAM,Max( FirstVNF_RAM,RRS ) ) ) ) ) )", "choosing": "( ( Max( ( MLU + MUM ),Max( DS,Min( RMSe ,MUC ) ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.9858299595141701, "obj2": 0.009101849620332043}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - Min( DDR ,FirstVNF_CPU_Server ) ) ) - ( Max( ( FirstVNF_RAM + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( Const * Min( RRS ,Max( FirstVNF_RAM,Max( FirstVNF_RAM,RRS ) ) ) ) ) )", "choosing": "( ( Max( ( MLU + MUM ),Max( DS,Min( RMSe ,MUC ) ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.9858299595141701, "obj2": 0.009101849620332043}, {"determining": "( ( FirstVNF_CPU_Server / Max( Max( ( MDR - FirstVNF_CPU ),FirstVNF_RAM_Server ),AMS ) ) * ( RRS - BR ) )", "choosing": "( Max( MUM,CS ) * Min( ( RRSe - MUR ) ,Max( ( MUC * ( DS / MUM ) ),MUR ) ) )", "obj1": 0.25101214574898784, "obj2": 0.7164405622325442}, {"determining": "( ( ( FirstVNF_CPU_Server + CRS ) * Max( FirstVNF_Mem_Server,RRS ) ) - ( ( BR / Max( MRS,DDR ) ) + ARS ) )", "choosing": "( Max( MUM,CS ) * Min( RCSe ,RRSe ) )", "obj1": 0.8481781376518218, "obj2": 0.16916681304960923}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - Min( RRS ,AMS ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( ( MUR + ( RMSe + ( RCSe + MUM ) ) ) + MUC ) ) ),( ( ( RRSe / MUR ) * Min( MLU ,CS ) ) * ( MUM - DS ) ) )", "obj1": 0.15587044534412955, "obj2": 0.8252246254178823}, {"determining": "( Min( Max( MDR,AMS ) ,CRS ) + ( ( DDR + BR ) - ( MRS / Const ) ) )", "choosing": "( ( MUC / RMSe ) * Min( Min( DS ,MUR ) ,( RRSe + RCSe ) ) )", "obj1": 0.48785425101214575, "obj2": 0.45466156507765515}, {"determining": "Min( Max( MDR,PN ) ,( ACS + ( ( RRS - FirstVNF_Mem_Server ) / Max( RRS,FirstVNF_CPU ) ) ) )", "choosing": "( MLU + ( MUM + RCSe ) )", "obj1": 0.9554655870445344, "obj2": 0.042356300815938365}, {"determining": "Min( ( FirstVNF_Mem_Server * Min( FirstVNF_Mem ,( FirstVNF_Mem - CRS ) ) ) ,( DDR - FirstVNF_Mem ) )", "choosing": "Max( Min( MLU ,RMSe ),Max( Min( CS ,( CS / Min( ( ( ( MUR * MUM ) * RMSe ) + ( CS + ( CS / RCSe ) ) ) ,MUR ) ) ),RRSe ) )", "obj1": 0.22064777327935223, "obj2": 0.7432492433115562}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ) - ( Max( ( FirstVNF_RAM + MDR ),( RRS / FirstVNF_CPU_Server ) ) - Max( MRS,DDR ) ) )", "choosing": "Min( ( RCSe + Min( ( RRSe - MUR ) ,Max( MUR,MUR ) ) ) ,Min( RRSe ,MLU ) )", "obj1": 0.7611336032388664, "obj2": 0.20738936964039287}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ) - ( Max( ( FirstVNF_RAM + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( ( MRS - BR ) / ( Const / DDR ) ) ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,MUR ) ) * ( Min( MUM ,RMSe ) - Min( RRSe ,RMSe ) ) ),( ( ( MUC * MUM ) * ( CS - RRSe ) ) / ( ( CS + RCSe ) / ( MUR - DS ) ) ) )", "obj1": 0.9817813765182186, "obj2": 0.012273969629269228}, {"determining": "( ( ( FirstVNF_CPU_Server + CRS ) * Max( FirstVNF_Mem_Server,RRS ) ) - ( ( BR / Max( MRS,DDR ) ) + ARS ) )", "choosing": "( ( ( ( MUM * MUC ) * ( RCSe - MUC ) ) / Min( Max( MUM,CS ) ,( CS + RMSe ) ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - Max( ( ( CS * MUM ) / ( RRSe * RRSe ) ),( Max( MUR,CS ) / ( RRSe + CS ) ) ) ) )", "obj1": 0.902834008097166, "obj2": 0.09941544393288158}, {"determining": "Min( Max( MDR,PN ) ,Min( Const ,FirstVNF_RAM_Server ) )", "choosing": "( MLU + ( MUM + Min( MLU ,MLU ) ) )", "obj1": 0.3076923076923077, "obj2": 0.6571008429484024}, {"determining": "Max( PN,( FirstVNF_RAM - RRS ) )", "choosing": "( Min( CS ,RCSe ) / ( ( Max( ( RCSe - MLU ),RRSe ) * ( ( MUR - MUM ) / RMSe ) ) - MUC ) )", "obj1": 0.3603238866396761, "obj2": 0.5850841474475756}], "4": [{"determining": "Min( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ,( PN - ( Min( RRS ,FirstVNF_Mem_Server ) * Const ) ) )", "choosing": "Max( Min( Max( CS,Max( CS,CS ) ) ,MLU ),Min( MUM ,( DS * ( Min( ( RRSe / Min( CS ,MUM ) ) ,RRSe ) * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - Min( DDR ,FirstVNF_CPU_Server ) ) ) - ( Max( ( FirstVNF_RAM + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( Const * Min( RRS ,Max( FirstVNF_RAM,Max( FirstVNF_RAM,RRS ) ) ) ) ) )", "choosing": "( ( Max( ( MLU + MUM ),Max( DS,Min( RMSe ,MUC ) ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.9858299595141701, "obj2": 0.009101849620332043}, {"determining": "( ( FirstVNF_Mem + MRS ) - Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( ( MUM * DS ) * ( MUR / CS ) )", "obj1": 0.9676113360323887, "obj2": 0.02582436851266324}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ) - ( Max( ( FirstVNF_RAM + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( ( MRS - BR ) / ( Const / DDR ) ) ) )", "choosing": "Min( ( RCSe + RRSe ) ,Min( RRSe ,MLU ) )", "obj1": 0.979757085020243, "obj2": 0.013233868022476504}, {"determining": "( ( ( Const - ( ( ( FirstVNF_RAM / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( Min( MUM ,MUR ) - ( CS * MUR ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Max( MUR,MUM ) ) ) )", "obj1": 0.31376518218623484, "obj2": 0.6270815373021177}, {"determining": "( ( ( DDR / MRS ) * RRS ) + ( RRS + ( FirstVNF_RAM + FirstVNF_CPU ) ) )", "choosing": "( ( RCSe + RCSe ) * ( ( MUM - MUR ) / RMSe ) )", "obj1": 0.25708502024291496, "obj2": 0.6908826405857156}, {"determining": "( ( ( DDR / MRS ) * RRS ) + ( RRS + ( FirstVNF_RAM + FirstVNF_CPU ) ) )", "choosing": "( ( RCSe + RCSe ) * ( ( MUM - MUR ) / RMSe ) )", "obj1": 0.25708502024291496, "obj2": 0.6908826405857156}, {"determining": "( ( ( DDR / MRS ) * RRS ) + ( RRS + ( FirstVNF_RAM + FirstVNF_CPU ) ) )", "choosing": "( ( RCSe + RCSe ) * ( ( MUM - MUR ) / RMSe ) )", "obj1": 0.25708502024291496, "obj2": 0.6908826405857156}, {"determining": "( ( ( FirstVNF_RAM / ( FirstVNF_CPU_Server / MRS ) ) * RRS ) + ( FirstVNF_CPU - ( ( Max( AMS,MDR ) / BR ) / Max( Min( DDR ,ARS ),AMS ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR * CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( Min( DS ,MUC ) * MUM ) )", "obj1": 0.25708502024291496, "obj2": 0.6908826405857156}, {"determining": "( Min( Max( MDR,AMS ) ,CRS ) + ( ( DDR + BR ) - ( MRS / Const ) ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + RMSe ),( MLU + ( MLU / MUR ) ) )", "obj1": 0.2550607287449393, "obj2": 0.6955431825964687}, {"determining": "( Min( Max( MDR,AMS ) ,CRS ) + ( ( DDR + BR ) - ( MRS / Const ) ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + RMSe ),( MLU + ( MLU / MUR ) ) )", "obj1": 0.2550607287449393, "obj2": 0.6955431825964687}, {"determining": "( Min( Max( MDR,AMS ) ,CRS ) + ( ( DDR + BR ) - ( MRS / Const ) ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + RMSe ),( MLU + ( MLU / MUR ) ) )", "obj1": 0.2550607287449393, "obj2": 0.6955431825964687}, {"determining": "( Min( ( ( FirstVNF_Mem / ( ( BR / Min( PN ,Max( FirstVNF_Mem_Server,BR ) ) ) - FirstVNF_RAM_Server ) ) * ARS ) ,( ( Const * Const ) * MRS ) ) + ( ( DDR + BR ) - ( MRS / Const ) ) )", "choosing": "Max( ( Max( RRSe,RCSe ) * RMSe ),( MLU + ( MUC - Max( CS,( Max( MUC,CS ) / MUR ) ) ) ) )", "obj1": 0.2550607287449393, "obj2": 0.6955431825964687}, {"determining": "Min( ( Min( Min( PN ,FirstVNF_Mem ) ,( FirstVNF_Mem - Const ) ) * Max( ( FirstVNF_CPU * AMS ),( ( FirstVNF_Mem - ARS ) / ( Max( FirstVNF_CPU_Server,RRS ) - ( Const - BR ) ) ) ) ) ,Max( ( ( FirstVNF_Mem + FirstVNF_CPU ) * ( ( FirstVNF_CPU / RRS ) - FirstVNF_CPU ) ),Min( ( ( RRS + FirstVNF_Mem ) + ( FirstVNF_RAM_Server + BR ) ) ,Min( RRS ,MRS ) ) ) )", "choosing": "( Max( ( Min( ( ( RMSe / DS ) + RRSe ) ,( ( Min( MUC ,MUM ) * ( Max( DS,RCSe ) * RCSe ) ) + DS ) ) / ( RRSe * MUM ) ),( RMSe - MLU ) ) / Max( MUR,Max( ( Max( MLU,( Min( ( RRSe * CS ) ,Min( RCSe ,RRSe ) ) / Min( ( MUR - RMSe ) ,Max( RCSe,CS ) ) ) ) * ( DS * DS ) ),( ( RRSe - RRSe ) + ( RCSe / RMSe ) ) ) ) )", "obj1": 0.9635627530364372, "obj2": 0.029968301455590363}, {"determining": "( ( FirstVNF_Mem + BR ) - Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( ( MUM * ( DS / MUC ) ) * ( MUR / CS ) )", "obj1": 0.9595141700404858, "obj2": 0.03160016983873693}, {"determining": "( ( FirstVNF_Mem + MRS ) - Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( ( MUM * DS ) * ( MUR / CS ) )", "obj1": 0.9676113360323887, "obj2": 0.02582436851266324}, {"determining": "( Min( AMS ,Min( ACS ,( ARS - Min( ( Min( Max( RRS,AMS ) ,MDR ) - FirstVNF_CPU ) ,ACS ) ) ) ) / Max( Max( Max( ( MDR - MRS ),Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM + AMS ) - ( FirstVNF_CPU - FirstVNF_Mem ) ) ),( Min( ( MRS - Const ) ,( FirstVNF_RAM - FirstVNF_Mem ) ) / ( Max( BR,MRS ) * ( Const * MDR ) ) ) ) )", "choosing": "Max( Max( ( ( RMSe * MUC ) * ( ( RCSe / ( ( Min( CS ,CS ) - MUM ) / MUR ) ) / MUR ) ),CS ),Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( ( MUR + ( RMSe + CS ) ) + MUC ) ) ),( Max( MUR,CS ) / ( RRSe + CS ) ) ) )", "obj1": 0.13360323886639677, "obj2": 0.8365752757433005}, {"determining": "Min( ( FirstVNF_CPU * FirstVNF_Mem_Server ) ,( MRS * MDR ) )", "choosing": "Max( ( ( MUM + Max( RRSe,Min( MUM ,Max( CS,Max( ( RRSe + RMSe ),RRSe ) ) ) ) ) / ( MUR + Max( RMSe,MLU ) ) ),Max( RRSe,RRSe ) )", "obj1": 0.20647773279352227, "obj2": 0.7654176848651577}, {"determining": "( ( ( RRS / ARS ) * ( FirstVNF_Mem_Server - Min( AMS ,DDR ) ) ) * PN )", "choosing": "( ( ( ( Max( RCSe,RMSe ) / ( CS - MLU ) ) * DS ) - ( RCSe / Min( DS ,Min( RMSe ,RMSe ) ) ) ) / MUM )", "obj1": 0.4230769230769231, "obj2": 0.5213565651229484}, {"determining": "( ( ( RRS / ARS ) * ( FirstVNF_Mem_Server - Min( AMS ,DDR ) ) ) * PN )", "choosing": "( ( ( ( Max( RCSe,RMSe ) / ( CS - MLU ) ) * DS ) - ( RCSe / Min( DS ,Min( RMSe ,RMSe ) ) ) ) / MUM )", "obj1": 0.4230769230769231, "obj2": 0.5213565651229484}, {"determining": "( ( ( RRS / ARS ) * ( FirstVNF_Mem_Server - Min( AMS ,DDR ) ) ) * PN )", "choosing": "( ( ( ( Max( RCSe,RMSe ) / ( CS - MLU ) ) * DS ) - ( RCSe / Min( DS ,Min( RMSe ,RMSe ) ) ) ) / MUM )", "obj1": 0.4230769230769231, "obj2": 0.5213565651229484}, {"determining": "( PN * ( FirstVNF_CPU * ( RRS - ( BR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS * RMSe ) - ( RCSe / Min( MLU ,DS ) ) ) / MUM )", "obj1": 0.4230769230769231, "obj2": 0.5213565651229484}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - Min( ( Min( FirstVNF_CPU_Server ,AMS ) / FirstVNF_RAM ) ,AMS ) )", "choosing": "( ( CS / CS ) * ( Max( RRSe,MUM ) * DS ) )", "obj1": 0.44129554655870445, "obj2": 0.4975956153164376}, {"determining": "( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server / RRS ) ) - Min( RRS ,AMS ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( ( ( Min( ( MUC / MUC ) ,Max( MUM,CS ) ) + ( ( CS / RRSe ) - Max( RCSe,CS ) ) ) + ( RMSe + ( RCSe + MUM ) ) ) + MUC ) ) ),Min( Max( ( CS - MUM ),( MUM / MUM ) ) ,( Max( RCSe,MUM ) / ( MUM / MUC ) ) ) )", "obj1": 0.14979757085020243, "obj2": 0.8275047936930604}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - Min( RRS ,AMS ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( ( MUR + ( RMSe + ( RCSe + MUM ) ) ) + MUC ) ) ),Min( Max( ( CS - MUM ),( MUM / MUM ) ) ,( Max( RCSe,MUM ) / ( MUM / MUC ) ) ) )", "obj1": 0.12348178137651822, "obj2": 0.8464588929629185}, {"determining": "( ( FirstVNF_CPU * ACS ) - FirstVNF_Mem )", "choosing": "( ( MLU * DS ) * ( RMSe / ( MUC - ( ( Min( MUM ,MUM ) - ( ( ( MLU - MLU ) * CS ) * RCSe ) ) / RMSe ) ) ) )", "obj1": 0.7267206477732794, "obj2": 0.2770197894373334}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - Min( DDR ,FirstVNF_CPU_Server ) ) ) - ( Max( ( FirstVNF_RAM + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( Const * Min( RRS ,Max( FirstVNF_RAM,Max( FirstVNF_RAM,RRS ) ) ) ) ) )", "choosing": "( ( Max( ( MLU + MUM ),Max( DS,Min( RMSe ,MUC ) ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.9858299595141701, "obj2": 0.009101849620332043}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - Min( DDR ,FirstVNF_CPU_Server ) ) ) - ( Max( ( FirstVNF_RAM + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( Const * Min( RRS ,Max( FirstVNF_RAM,Max( FirstVNF_RAM,RRS ) ) ) ) ) )", "choosing": "( ( Max( ( MLU + MUM ),Max( DS,Min( RMSe ,MUC ) ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.9858299595141701, "obj2": 0.009101849620332043}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - Min( DDR ,FirstVNF_CPU_Server ) ) ) - ( Max( ( FirstVNF_RAM + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( Const * Min( RRS ,Max( FirstVNF_RAM,Max( FirstVNF_RAM,RRS ) ) ) ) ) )", "choosing": "( ( Max( ( MLU + MUM ),Max( DS,Min( RMSe ,MUC ) ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.9858299595141701, "obj2": 0.009101849620332043}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - Min( DDR ,FirstVNF_CPU_Server ) ) ) - ( Max( ( FirstVNF_RAM + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( Const * Min( RRS ,Max( FirstVNF_RAM,Max( FirstVNF_RAM,RRS ) ) ) ) ) )", "choosing": "( ( Max( ( MLU + MUM ),Max( DS,Min( RMSe ,MUC ) ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.9858299595141701, "obj2": 0.009101849620332043}, {"determining": "( ( FirstVNF_CPU_Server / Max( Max( ( MDR - FirstVNF_CPU ),FirstVNF_RAM_Server ),AMS ) ) * ( RRS - BR ) )", "choosing": "( Max( MUM,CS ) * Min( ( RRSe - MUR ) ,Max( ( MUC * ( DS / MUM ) ),MUR ) ) )", "obj1": 0.25101214574898784, "obj2": 0.7164405622325442}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - Min( RRS ,AMS ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( ( MUR + ( RMSe + ( RCSe + MUM ) ) ) + MUC ) ) ),( ( ( RRSe / MUR ) * Min( MLU ,CS ) ) * ( MUM - DS ) ) )", "obj1": 0.15587044534412955, "obj2": 0.8252246254178823}, {"determining": "Min( ( FirstVNF_Mem_Server * Min( FirstVNF_Mem ,( FirstVNF_Mem - CRS ) ) ) ,( DDR - FirstVNF_Mem ) )", "choosing": "Max( Min( MLU ,RMSe ),Max( Min( CS ,( CS / Min( ( ( ( MUR * MUM ) * RMSe ) + ( CS + ( CS / RCSe ) ) ) ,MUR ) ) ),RRSe ) )", "obj1": 0.22064777327935223, "obj2": 0.7432492433115562}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ) - ( Max( ( FirstVNF_RAM + MDR ),( RRS / FirstVNF_CPU_Server ) ) - Max( MRS,DDR ) ) )", "choosing": "Min( ( RCSe + Min( ( RRSe - MUR ) ,Max( MUR,MUR ) ) ) ,Min( RRSe ,MLU ) )", "obj1": 0.7611336032388664, "obj2": 0.20738936964039287}, {"determining": "Max( PN,( FirstVNF_RAM - RRS ) )", "choosing": "( Min( CS ,RCSe ) / ( ( Max( ( RCSe - MLU ),RRSe ) * ( ( MUR - MUM ) / RMSe ) ) - MUC ) )", "obj1": 0.3603238866396761, "obj2": 0.5850841474475756}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - Min( DDR ,FirstVNF_CPU_Server ) ) ) - ( Max( ( FirstVNF_RAM + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( Const * Min( RRS ,Max( FirstVNF_RAM,Max( FirstVNF_RAM,RRS ) ) ) ) ) )", "choosing": "( ( Max( ( MLU + MUM ),Max( DS,Min( RMSe ,MUC ) ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.9858299595141701, "obj2": 0.009101849620332043}, {"determining": "( Max( Max( Max( Const,CRS ),Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server * MRS ) + ( FirstVNF_Mem_Server - AMS ) ) ) / Min( ACS ,MRS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( ( MUR - MUM ) / RMSe ) )", "obj1": 0.25708502024291496, "obj2": 0.6908826405857156}, {"determining": "( ( MRS / Min( ( ARS / FirstVNF_RAM ) ,MDR ) ) / ( FirstVNF_CPU - DDR ) )", "choosing": "Max( ( MUC * RMSe ),Min( ( RCSe + Max( MLU,Min( RMSe ,( MUR + CS ) ) ) ) ,Max( MUC,RCSe ) ) )", "obj1": 0.6255060728744939, "obj2": 0.31048441926952985}, {"determining": "Min( ( PN * FirstVNF_Mem_Server ) ,( ( ( Min( Const ,FirstVNF_RAM_Server ) - ( DDR - FirstVNF_CPU ) ) / ( FirstVNF_CPU - DDR ) ) + FirstVNF_Mem ) )", "choosing": "Max( Min( MLU ,MLU ),Max( ( MUC * RMSe ),( MUM + DS ) ) )", "obj1": 0.5425101214574899, "obj2": 0.42254003103165333}, {"determining": "( ( ( BR + FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU - DDR ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( ( MUR - MUM ) / RMSe ) )", "obj1": 0.3076923076923077, "obj2": 0.6364633401940827}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - Min( DDR ,FirstVNF_CPU_Server ) ) ) - ( Max( ( FirstVNF_RAM + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( Const * Min( RRS ,Max( FirstVNF_RAM,Max( FirstVNF_RAM,RRS ) ) ) ) ) )", "choosing": "( Min( ( MUC / MUC ) ,( RCSe - RCSe ) ) + ( MUM + RCSe ) )", "obj1": 0.9777327935222672, "obj2": 0.014477469780917924}, {"determining": "( PN * ( Min( FirstVNF_CPU ,BR ) + RRS ) )", "choosing": "( ( ( ( Min( MUM ,MUR ) * Max( MUM,MUM ) ) - MUC ) / RMSe ) * ( RRSe * RMSe ) )", "obj1": 0.25708502024291496, "obj2": 0.6908826405857156}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + MDR ) - ( Max( ( FirstVNF_RAM + MDR ),( RRS / FirstVNF_CPU_Server ) ) - Max( MRS,DDR ) ) )", "choosing": "Min( ( RCSe + Min( ( RMSe - MUR ) ,Max( MUR,MUR ) ) ) ,Min( RRSe ,MLU ) )", "obj1": 0.8906882591093117, "obj2": 0.10651981404630194}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ) - ( Max( ( FirstVNF_RAM + MDR ),( RRS / FirstVNF_CPU_Server ) ) - Max( MRS,DDR ) ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + RMSe ),( MLU + ( MLU / MUR ) ) )", "obj1": 0.7024291497975709, "obj2": 0.27846896740087507}, {"determining": "( ( Const * FirstVNF_RAM ) / ( Const / Min( MDR ,( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) )", "choosing": "( MUM / ( Max( ( RMSe * RRSe ),( MUM - MUC ) ) * ( ( MUC * MUM ) - Min( DS ,MUM ) ) ) )", "obj1": 0.34210526315789475, "obj2": 0.6158024499854721}, {"determining": "( Max( ( FirstVNF_CPU * AMS ),( AMS - MRS ) ) / ( ( FirstVNF_CPU / Min( RRS ,Max( ( FirstVNF_CPU - ( RRS / FirstVNF_Mem ) ),PN ) ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( CS,RRSe ) * ( MUM / RMSe ) ) * ( Min( DS ,CS ) + ( MLU - RRSe ) ) ) - Max( Min( ( RMSe * MUC ) ,( Min( CS ,RMSe ) * MUC ) ),( ( RRSe - RRSe ) + ( RCSe / RMSe ) ) ) )", "obj1": 0.3522267206477733, "obj2": 0.6057630612647608}, {"determining": "Min( ( FirstVNF_Mem_Server * Min( FirstVNF_Mem ,Max( FirstVNF_Mem,CRS ) ) ) ,Max( PN,Const ) )", "choosing": "( ( Min( RCSe ,RRSe ) - MUM ) * ( MUR - CS ) )", "obj1": 0.7449392712550608, "obj2": 0.22997980171947682}, {"determining": "( ( Max( AMS,AMS ) / ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) / Min( ACS ,MRS ) )", "choosing": "Max( Max( ( Max( MUM,MUM ) + ( ( Min( MUM ,MUM ) - ( ( MUC / CS ) * RCSe ) ) * RMSe ) ),( DS + MUC ) ),Max( ( ( CS * MUM ) / ( RRSe * RRSe ) ),( Max( MUR,CS ) / ( Max( MUR,CS ) / ( RRSe + CS ) ) ) ) )", "obj1": 0.8582995951417004, "obj2": 0.15341241083207083}, {"determining": "( ( FirstVNF_CPU_Server / ( ( ( FirstVNF_CPU_Server + CRS ) * Max( FirstVNF_Mem_Server,RRS ) ) - ( ( BR / Max( MRS,DDR ) ) + ARS ) ) ) * ( RRS - BR ) )", "choosing": "( Max( MUM,CS ) * Min( ( RRSe - MUR ) ,Max( MUR,MUR ) ) )", "obj1": 0.25101214574898784, "obj2": 0.7164405622325442}, {"determining": "( Min( MDR ,( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) * ( ( ACS / ( RRS * FirstVNF_Mem_Server ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RMSe * RRSe ) / RMSe ) - RCSe ) / ( MUR / MUM ) )", "obj1": 0.17408906882591094, "obj2": 0.8107176255561632}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( ( BR / Max( MRS,DDR ) ) ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ) - ( Max( ( FirstVNF_RAM + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( ( MRS - BR ) / ( Const / DDR ) ) ) )", "choosing": "( ( Max( ( MLU + MUM ),( MUR + DS ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Max( MUM,CS ) )", "obj1": 0.9554655870445344, "obj2": 0.03606822877488327}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ) - ( Max( ( FirstVNF_RAM + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( ( MRS - BR ) / ( Const / DDR ) ) ) )", "choosing": "( Max( MUM,CS ) * Min( RCSe ,RRSe ) )", "obj1": 0.9777327935222672, "obj2": 0.014477469780917924}, {"determining": "( ( MRS * ( ( DDR - FirstVNF_CPU ) - Min( ( FirstVNF_CPU * FirstVNF_Mem_Server ) ,( MRS * MDR ) ) ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) )", "choosing": "( ( MUM - DS ) + ( Max( ( MLU + ( MUC - MUR ) ),Min( MUM ,Max( CS,Max( ( RRSe + RMSe ),RRSe ) ) ) ) - RMSe ) )", "obj1": 0.8259109311740891, "obj2": 0.15737501931356718}, {"determining": "Min( ( FirstVNF_CPU * ( DDR - FirstVNF_CPU ) ) ,( MRS * MDR ) )", "choosing": "Max( ( ( MUM - DS ) + ( Max( ( MLU + ( MUC - MUR ) ),( MUM + RCSe ) ) - RMSe ) ),Max( RRSe,RRSe ) )", "obj1": 0.8299595141700404, "obj2": 0.15495526156282668}, {"determining": "( Max( ( FirstVNF_CPU * AMS ),( AMS - MRS ) ) / ( Max( FirstVNF_CPU_Server,RRS ) - ( Const - BR ) ) )", "choosing": "Max( Min( MLU ,MLU ),RRSe )", "obj1": 0.2125506072874494, "obj2": 0.7531200513677739}, {"determining": "( ( ( FirstVNF_RAM / ( MRS / FirstVNF_CPU_Server ) ) * RRS ) + ( FirstVNF_RAM - ( BR / Max( Min( DDR ,ARS ),AMS ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( ( MUR - MUM ) / RMSe ) )", "obj1": 0.2935222672064777, "obj2": 0.6543094916942602}, {"determining": "( ( ( Const * FirstVNF_RAM ) - ( MRS - MDR ) ) / ( PN * FirstVNF_Mem ) )", "choosing": "Max( Max( Min( MLU ,( ( MUM + MLU ) + MUM ) ),Max( ( MLU - RMSe ),( MUC / CS ) ) ),Max( ( ( CS * MUM ) / ( RRSe * RRSe ) ),( Max( MUR,CS ) / ( RRSe + CS ) ) ) )", "obj1": 0.305668016194332, "obj2": 0.6462245558416015}, {"determining": "( Min( DDR ,FirstVNF_RAM ) - FirstVNF_Mem )", "choosing": "( ( MLU * DS ) * ( MUR / ( MUC - ( ( Min( MUM ,MUM ) - ( ( MUC / CS ) * RCSe ) ) / RMSe ) ) ) )", "obj1": 0.7267206477732794, "obj2": 0.2770197894373334}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) * ( RRS - Min( ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) / RRS ) * ( RRS - BR ) ) ,FirstVNF_RAM ) ) )", "choosing": "( Max( ( DS + MUC ),CS ) * ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( ( MUR + ( RMSe + ( RCSe + MUM ) ) ) + MUC ) ) ) )", "obj1": 0.17611336032388664, "obj2": 0.8084724865887206}, {"determining": "( FirstVNF_Mem_Server - ( Max( ( FirstVNF_RAM + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( ( MRS - BR ) / ( Const / DDR ) ) ) )", "choosing": "( Min( CS ,RCSe ) / ( ( Max( ( RCSe - MLU ),RRSe ) * ( ( MUR - MUM ) / RMSe ) ) - MUC ) )", "obj1": 0.5587044534412956, "obj2": 0.3587623379427984}, {"determining": "Min( Min( DDR ,FirstVNF_RAM ) ,Max( ( ACS * ( Min( FirstVNF_Mem_Server ,CRS ) + AMS ) ),MDR ) )", "choosing": "( ( MLU * DS ) * ( ( Max( DS,MLU ) - ( RCSe * RCSe ) ) / CS ) )", "obj1": 0.23279352226720648, "obj2": 0.7182148629272157}, {"determining": "( PN * ( FirstVNF_CPU * ( RRS - ( BR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS * RMSe ) - ( RCSe / Min( MLU ,DS ) ) ) / MUM )", "obj1": 0.4230769230769231, "obj2": 0.5213565651229484}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - Min( RRS ,AMS ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( ( MUR + ( RMSe + ( RCSe + MUM ) ) ) + MUC ) ) ),( ( ( RRSe / MUR ) * Min( MLU ,CS ) ) * ( MUM - DS ) ) )", "obj1": 0.15587044534412955, "obj2": 0.8252246254178823}, {"determining": "( ( ( DDR + BR ) - ( MRS / Const ) ) / ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) )", "choosing": "( ( MUM - DS ) + ( RMSe - RMSe ) )", "obj1": 0.18016194331983806, "obj2": 0.7894855149178961}, {"determining": "( ( CRS + CRS ) + ( ( BR + MRS ) - ( MRS / Const ) ) )", "choosing": "( ( DS - MUM ) + Max( ( ( ( MUC + MLU ) / RMSe ) - RRSe ),MUR ) )", "obj1": 0.10526315789473684, "obj2": 0.8707771222244208}, {"determining": "( ( FirstVNF_Mem + MRS ) - Min( MDR ,( ( DDR + BR ) - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( ( MUR + ( RMSe + ( RCSe + Min( DS ,MUM ) ) ) ) + MUC ) ) ),Min( Max( ( CS - MUM ),( MUM / MUM ) ) ,( Max( RCSe,MUM ) / ( MUM / MUC ) ) ) )", "obj1": 0.145748987854251, "obj2": 0.8294082758903872}, {"determining": "( ( ( FirstVNF_RAM / ( FirstVNF_CPU_Server / MRS ) ) * RRS ) + Max( FirstVNF_RAM,( BR / Max( Min( ( ( ( MRS - PN ) * BR ) * Min( Const ,ARS ) ) ,Max( DDR,FirstVNF_Mem ) ),AMS ) ) ) )", "choosing": "( ( Max( MUR,MUM ) / RMSe ) * Max( ( RRSe - RRSe ),( MUR * ( ( RCSe / ( CS / ( Max( DS,RMSe ) / MUM ) ) ) * ( ( RCSe * ( RMSe + ( MUM - MLU ) ) ) - ( ( CS / ( MUM / RCSe ) ) / MUC ) ) ) ) ) )", "obj1": 0.25708502024291496, "obj2": 0.6908826405857156}, {"determining": "( Max( Const,( ( PN / ( FirstVNF_Mem - Max( DDR,MDR ) ) ) / ( ACS / ARS ) ) ) - ( RRS - ( FirstVNF_CPU_Server / RRS ) ) )", "choosing": "( ( ( MUM * DS ) * ( ( ( MUR / ( RRSe + ( ( MUC / RCSe ) / RRSe ) ) ) + RMSe ) / ( RRSe - RMSe ) ) ) + Max( RMSe,MLU ) )", "obj1": 0.46153846153846156, "obj2": 0.4640965331680502}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) * ( Max( Const,MRS ) - ( RRS - MRS ) ) )", "choosing": "( ( ( ( CS / ( ( DS * RMSe ) - RCSe ) ) + Max( RMSe,MLU ) ) * ( MUM * DS ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.1902834008097166, "obj2": 0.7710599781355031}, {"determining": "( Max( Const,MRS ) - ( ( AMS - Min( ARS ,BR ) ) - ( BR - ARS ) ) )", "choosing": "( ( CS / ( ( DS * ( Min( ( ( RRSe * RRSe ) / DS ) ,RMSe ) / MUC ) ) - RCSe ) ) + Max( RMSe,MLU ) )", "obj1": 0.22672064777327935, "obj2": 0.7307279208821561}, {"determining": "( Max( FirstVNF_Mem_Server,MDR ) - ( FirstVNF_Mem + ( FirstVNF_RAM + Min( ( BR * DDR ) ,FirstVNF_Mem ) ) ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( ( MUR + ( MUR + ( ( RCSe * CS ) + RCSe ) ) ) + MUC ) ) ),Min( Max( ( CS - MUM ),( MUM / MUM ) ) ,( Max( RCSe,MUM ) / ( MUM / MUC ) ) ) )", "obj1": 0.5566801619433198, "obj2": 0.4111872739376006}, {"determining": "( Max( FirstVNF_Mem_Server,MDR ) - ( FirstVNF_Mem + ( FirstVNF_RAM + Min( ( BR * DDR ) ,FirstVNF_Mem ) ) ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( ( MUR + ( MUR + ( ( RCSe * CS ) + RCSe ) ) ) + MUC ) ) ),Min( Max( ( CS - MUM ),( MUM / MUM ) ) ,( Max( RCSe,MUM ) / ( MUM / MUC ) ) ) )", "obj1": 0.5566801619433198, "obj2": 0.4111872739376006}, {"determining": "( Max( FirstVNF_Mem_Server,MDR ) - ( FirstVNF_Mem + ( FirstVNF_RAM + Min( ( BR * DDR ) ,FirstVNF_Mem ) ) ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( ( MUR + ( MUR + ( ( RCSe * CS ) + RCSe ) ) ) + MUC ) ) ),Min( Max( ( CS - MUM ),( MUM / MUM ) ) ,( Max( RCSe,MUM ) / ( MUM / MUC ) ) ) )", "obj1": 0.5566801619433198, "obj2": 0.4111872739376006}, {"determining": "( Max( FirstVNF_Mem_Server,MDR ) - ( FirstVNF_Mem + ( FirstVNF_RAM + Min( ( BR * DDR ) ,FirstVNF_Mem ) ) ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( ( MUR + ( MUR + ( ( RCSe * CS ) + RCSe ) ) ) + MUC ) ) ),Min( Max( ( CS - MUM ),( MUM / MUM ) ) ,( Max( RCSe,MUM ) / ( MUM / MUC ) ) ) )", "obj1": 0.5566801619433198, "obj2": 0.4111872739376006}, {"determining": "( ( ( Const * FirstVNF_RAM ) - ( MRS - MDR ) ) / Min( ACS ,FirstVNF_CPU_Server ) )", "choosing": "Max( Max( Min( MLU ,( ( MUM + MLU ) + MUM ) ),Max( ( MLU - RMSe ),( MUR / RCSe ) ) ),DS )", "obj1": 0.2165991902834008, "obj2": 0.7439291637557227}, {"determining": "( ( ( Const * FirstVNF_RAM ) - ( MRS - MDR ) ) / Min( ACS ,MRS ) )", "choosing": "( ( MUM * ( MUM * DS ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.39473684210526316, "obj2": 0.5466965738497205}, {"determining": "( Min( DDR ,FirstVNF_RAM ) - FirstVNF_Mem )", "choosing": "( ( MLU * DS ) * ( MUR / ( MUC - ( ( Min( MUM ,MUM ) - ( ( MUC / CS ) * RCSe ) ) / RMSe ) ) ) )", "obj1": 0.7267206477732794, "obj2": 0.2770197894373334}, {"determining": "( ( FirstVNF_Mem + BR ) - Max( FirstVNF_Mem_Server,Min( ( DDR + MDR ) ,PN ) ) )", "choosing": "( ( MUM * MLU ) * ( MUR / CS ) )", "obj1": 0.9473684210526315, "obj2": 0.04326262336828003}, {"determining": "( ( FirstVNF_Mem + BR ) - Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( ( MUM * ( DS / MUC ) ) * ( MUR / CS ) )", "obj1": 0.9595141700404858, "obj2": 0.03160016983873693}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) / ( Min( Const ,FirstVNF_RAM_Server ) - ( AMS + Min( Const ,( Const + RRS ) ) ) ) )", "choosing": "( ( MLU * DS ) * ( MUR / ( MUC - ( Min( CS ,DS ) / RMSe ) ) ) )", "obj1": 0.38461538461538464, "obj2": 0.5668485076423746}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + AMS ) - Min( DDR ,FirstVNF_CPU_Server ) ) ) - ( Max( ( FirstVNF_RAM + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( Const * Min( RRS ,Max( FirstVNF_RAM,Max( FirstVNF_RAM,RRS ) ) ) ) ) )", "choosing": "( ( Max( ( MLU + MUM ),Max( DS,Min( RMSe ,MUC ) ) ) * ( ( MLU - ( MUR * RMSe ) ) + Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.9089068825910931, "obj2": 0.047532721184651815}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - Min( DDR ,FirstVNF_CPU_Server ) ) ) - ( Max( ( FirstVNF_RAM + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( Const * Min( RRS ,Max( FirstVNF_RAM,Max( FirstVNF_RAM,RRS ) ) ) ) ) )", "choosing": "( ( Max( ( MLU + MUM ),Max( DS,Min( RMSe ,MUC ) ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.9838056680161943, "obj2": 0.010023196657338246}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - Min( DDR ,FirstVNF_CPU_Server ) ) ) - ( Max( ( DDR + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( Const * Min( RRS ,Max( FirstVNF_RAM,Max( FirstVNF_RAM,RRS ) ) ) ) ) )", "choosing": "( ( Max( ( MLU + MUM ),Max( DS,Min( RMSe ,MUC ) ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( Max( Min( MLU ,MLU ),Max( RRSe,MLU ) ) / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.7651821862348178, "obj2": 0.19177622066877578}, {"determining": "( Min( Const ,PN ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( Max( CS,RCSe ) / ( RMSe / MLU ) ) * ( ( MUC + CS ) * Max( MLU,CS ) ) ) / ( Max( MLU,( Min( RRSe ,Min( RCSe ,RRSe ) ) / Min( ( MUR - RMSe ) ,Max( RCSe,CS ) ) ) ) * ( DS * DS ) ) )", "obj1": 0.8866396761133604, "obj2": 0.11038120358984664}, {"determining": "( ( Min( Const ,FirstVNF_RAM_Server ) - ( DDR - FirstVNF_CPU ) ) / ( Max( ( FirstVNF_CPU * AMS ),( AMS - MRS ) ) - DDR ) )", "choosing": "Max( ( MUC * RMSe ),Max( ( MUR * RCSe ),( MLU + ( MLU / CS ) ) ) )", "obj1": 0.2732793522267207, "obj2": 0.6607785837581133}, {"determining": "( ( RRS - ( BR - FirstVNF_RAM_Server ) ) * ( RRS * DDR ) )", "choosing": "( ( MUM * ( MUM * Min( MLU ,DS ) ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.45546558704453444, "obj2": 0.4814462893012263}, {"determining": "( PN * ( FirstVNF_CPU * ( RRS * DDR ) ) )", "choosing": "( ( ( DS * RMSe ) - ( RCSe / Min( MLU ,( MUM * DS ) ) ) ) / MUM )", "obj1": 0.5020242914979757, "obj2": 0.4312625123759692}, {"determining": "( ( ( AMS * ACS ) * ( RRS - ( AMS - FirstVNF_RAM_Server ) ) ) * PN )", "choosing": "( ( MUM * ( DS * MUM ) ) * ( ( DS + MLU ) / Min( DS ,DS ) ) )", "obj1": 0.4331983805668016, "obj2": 0.5023306164232344}, {"determining": "( ( ( RRS / ARS ) * ( FirstVNF_Mem_Server - Min( AMS ,DDR ) ) ) * PN )", "choosing": "( ( ( ( Max( RCSe,RMSe ) / ( CS - MLU ) ) * DS ) - ( RCSe / Min( DS ,Min( RMSe ,RMSe ) ) ) ) / MUM )", "obj1": 0.4757085020242915, "obj2": 0.44951444257790807}, {"determining": "( ( ( RRS / ARS ) * ( FirstVNF_Mem_Server - Min( AMS ,DDR ) ) ) * PN )", "choosing": "( ( ( ( Max( RCSe,RMSe ) / ( CS - MLU ) ) * DS ) - ( RCSe / Min( DS ,Min( RMSe ,RMSe ) ) ) ) / MUM )", "obj1": 0.4757085020242915, "obj2": 0.44951444257790807}, {"determining": "( ( ( RRS / ARS ) * ( FirstVNF_Mem_Server - Min( AMS ,DDR ) ) ) * PN )", "choosing": "( ( ( ( Max( RCSe,RMSe ) / ( CS - MLU ) ) * DS ) - ( RCSe / Min( DS ,Min( RMSe ,RMSe ) ) ) ) / MUM )", "obj1": 0.4757085020242915, "obj2": 0.44951444257790807}, {"determining": "( ( ( RRS / ARS ) * ( RRS - Min( BR ,FirstVNF_RAM_Server ) ) ) * PN )", "choosing": "( ( ( DS * MLU ) - ( RCSe / Min( DS ,Min( RMSe ,RMSe ) ) ) ) / MUM )", "obj1": 0.4757085020242915, "obj2": 0.44951444257790807}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ) - ( Max( ( FirstVNF_RAM + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( ( MRS - BR ) / ( Const / DDR ) ) ) )", "choosing": "Max( ( MUR * ( MUM + ( ( Min( MUR ,( MUR - MUC ) ) / CS ) - RMSe ) ) ),( MLU + ( CS / CS ) ) )", "obj1": 0.9736842105263158, "obj2": 0.01943328184035488}, {"determining": "( ( ( FirstVNF_RAM / ( MRS / FirstVNF_CPU_Server ) ) * RRS ) + ( FirstVNF_RAM - ( BR / Max( Min( PN ,ARS ),AMS ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( ( CS / RRSe ) / ( Max( MUC,RCSe ) + Min( DS ,MUM ) ) ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( ( MUR - MUM ) / RMSe ) )", "obj1": 0.24696356275303644, "obj2": 0.7167552902755898}, {"determining": "( ( ( Const * FirstVNF_RAM ) - ( MRS - MDR ) ) / Min( ACS ,MRS ) )", "choosing": "( ( MUM * ( DS / MUC ) ) * ( MUR / CS ) )", "obj1": 0.4433198380566802, "obj2": 0.4819383867456228}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - Min( DDR ,FirstVNF_CPU_Server ) ) ) - ( Max( ( FirstVNF_RAM + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( Const * Min( RRS ,Max( FirstVNF_RAM,Max( FirstVNF_RAM,RRS ) ) ) ) ) )", "choosing": "( ( Max( ( MLU + MUM ),Max( DS,Min( RMSe ,MUC ) ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.9838056680161943, "obj2": 0.010023196657338246}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) - ( ( BR + FirstVNF_CPU ) - Min( DDR ,FirstVNF_CPU_Server ) ) ) - ( Max( ( FirstVNF_RAM + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( Const * Min( RRS ,Max( ( DDR / ARS ),Max( FirstVNF_RAM,RRS ) ) ) ) ) )", "choosing": "( MLU + ( MUM * Min( Max( ( RMSe / MUC ),CS ) ,MLU ) ) )", "obj1": 0.9817813765182186, "obj2": 0.011214401920326566}, {"determining": "Min( Max( MDR,PN ) ,Min( Const ,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( ( MLU + MUM ),Max( DS,Min( RMSe ,MUC ) ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.6860967586940835}, {"determining": "Min( ( Min( Min( PN ,FirstVNF_Mem ) ,( FirstVNF_Mem - Const ) ) * Max( ( FirstVNF_CPU * AMS ),( AMS - MRS ) ) ) ,Max( ( ( FirstVNF_Mem + FirstVNF_CPU ) * ( ( FirstVNF_CPU / RRS ) - FirstVNF_CPU ) ),Min( ( ( RRS + FirstVNF_Mem ) + ( FirstVNF_RAM_Server + BR ) ) ,Min( RRS ,( ( FirstVNF_CPU_Server / RRS ) * ( RRS - BR ) ) ) ) ) )", "choosing": "( ( MUM * ( MUM * ( Min( ( Min( RCSe ,MUR ) - ( ( MUR - MUR ) * RCSe ) ) ,DS ) + MUR ) ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.9493927125506073, "obj2": 0.041708025743526576}, {"determining": "( Min( ( DDR + MDR ) ,PN ) - Min( FirstVNF_Mem ,( DDR + BR ) ) )", "choosing": "( ( MLU + ( MLU / MUR ) ) / Min( Min( CS ,MUM ) ,( Max( DS,MLU ) + Max( CS,RRSe ) ) ) )", "obj1": 0.9008097165991903, "obj2": 0.0864294667232189}], "5": [{"determining": "Min( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ,( PN - ( Min( RRS ,FirstVNF_Mem_Server ) * Const ) ) )", "choosing": "Max( Min( Max( CS,Max( CS,CS ) ) ,MLU ),Min( MUM ,( DS * ( Min( ( RRSe / Min( CS ,MUM ) ) ,RRSe ) * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - ( ( ( FirstVNF_RAM / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( Min( MUM ,MUR ) - ( CS * MUR ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Max( MUR,MUM ) ) ) )", "obj1": 0.31376518218623484, "obj2": 0.6270815373021177}, {"determining": "( ( ( DDR / MRS ) * RRS ) + ( RRS + ( FirstVNF_RAM + FirstVNF_CPU ) ) )", "choosing": "( ( RCSe + RCSe ) * ( ( MUM - MUR ) / RMSe ) )", "obj1": 0.25708502024291496, "obj2": 0.6908826405857156}, {"determining": "( ( ( DDR / MRS ) * RRS ) + ( RRS + ( FirstVNF_RAM + FirstVNF_CPU ) ) )", "choosing": "( ( RCSe + RCSe ) * ( ( MUM - MUR ) / RMSe ) )", "obj1": 0.25708502024291496, "obj2": 0.6908826405857156}, {"determining": "( ( ( DDR / MRS ) * RRS ) + ( RRS + ( FirstVNF_RAM + FirstVNF_CPU ) ) )", "choosing": "( ( RCSe + RCSe ) * ( ( MUM - MUR ) / RMSe ) )", "obj1": 0.25708502024291496, "obj2": 0.6908826405857156}, {"determining": "( ( ( FirstVNF_RAM / ( FirstVNF_CPU_Server / MRS ) ) * RRS ) + ( FirstVNF_CPU - ( ( Max( AMS,MDR ) / BR ) / Max( Min( DDR ,ARS ),AMS ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR * CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( Min( DS ,MUC ) * MUM ) )", "obj1": 0.25708502024291496, "obj2": 0.6908826405857156}, {"determining": "( Min( AMS ,Min( ACS ,( ARS - Min( ( Min( Max( RRS,AMS ) ,MDR ) - FirstVNF_CPU ) ,ACS ) ) ) ) / Max( Max( Max( ( MDR - MRS ),Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM + AMS ) - ( FirstVNF_CPU - FirstVNF_Mem ) ) ),( Min( ( MRS - Const ) ,( FirstVNF_RAM - FirstVNF_Mem ) ) / ( Max( BR,MRS ) * ( Const * MDR ) ) ) ) )", "choosing": "Max( Max( ( ( RMSe * MUC ) * ( ( RCSe / ( ( Min( CS ,CS ) - MUM ) / MUR ) ) / MUR ) ),CS ),Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( ( MUR + ( RMSe + CS ) ) + MUC ) ) ),( Max( MUR,CS ) / ( RRSe + CS ) ) ) )", "obj1": 0.13360323886639677, "obj2": 0.8365752757433005}, {"determining": "( ( ( RRS / ARS ) * ( FirstVNF_Mem_Server - Min( AMS ,DDR ) ) ) * PN )", "choosing": "( ( ( ( Max( RCSe,RMSe ) / ( CS - MLU ) ) * DS ) - ( RCSe / Min( DS ,Min( RMSe ,RMSe ) ) ) ) / MUM )", "obj1": 0.4230769230769231, "obj2": 0.5213565651229484}, {"determining": "( ( ( RRS / ARS ) * ( FirstVNF_Mem_Server - Min( AMS ,DDR ) ) ) * PN )", "choosing": "( ( ( ( Max( RCSe,RMSe ) / ( CS - MLU ) ) * DS ) - ( RCSe / Min( DS ,Min( RMSe ,RMSe ) ) ) ) / MUM )", "obj1": 0.4230769230769231, "obj2": 0.5213565651229484}, {"determining": "( ( ( RRS / ARS ) * ( FirstVNF_Mem_Server - Min( AMS ,DDR ) ) ) * PN )", "choosing": "( ( ( ( Max( RCSe,RMSe ) / ( CS - MLU ) ) * DS ) - ( RCSe / Min( DS ,Min( RMSe ,RMSe ) ) ) ) / MUM )", "obj1": 0.4230769230769231, "obj2": 0.5213565651229484}, {"determining": "( PN * ( FirstVNF_CPU * ( RRS - ( BR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS * RMSe ) - ( RCSe / Min( MLU ,DS ) ) ) / MUM )", "obj1": 0.4230769230769231, "obj2": 0.5213565651229484}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - Min( ( Min( FirstVNF_CPU_Server ,AMS ) / FirstVNF_RAM ) ,AMS ) )", "choosing": "( ( CS / CS ) * ( Max( RRSe,MUM ) * DS ) )", "obj1": 0.44129554655870445, "obj2": 0.4975956153164376}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - Min( RRS ,AMS ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( ( MUR + ( RMSe + ( RCSe + MUM ) ) ) + MUC ) ) ),Min( Max( ( CS - MUM ),( MUM / MUM ) ) ,( Max( RCSe,MUM ) / ( MUM / MUC ) ) ) )", "obj1": 0.12348178137651822, "obj2": 0.8464588929629185}, {"determining": "Min( ( FirstVNF_Mem_Server * Min( FirstVNF_Mem ,( FirstVNF_Mem - CRS ) ) ) ,( DDR - FirstVNF_Mem ) )", "choosing": "Max( Min( MLU ,RMSe ),Max( Min( CS ,( CS / Min( ( ( ( MUR * MUM ) * RMSe ) + ( CS + ( CS / RCSe ) ) ) ,MUR ) ) ),RRSe ) )", "obj1": 0.22064777327935223, "obj2": 0.7432492433115562}, {"determining": "( Max( Max( Max( Const,CRS ),Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server * MRS ) + ( FirstVNF_Mem_Server - AMS ) ) ) / Min( ACS ,MRS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( ( MUR - MUM ) / RMSe ) )", "obj1": 0.25708502024291496, "obj2": 0.6908826405857156}, {"determining": "( ( MRS / Min( ( ARS / FirstVNF_RAM ) ,MDR ) ) / ( FirstVNF_CPU - DDR ) )", "choosing": "Max( ( MUC * RMSe ),Min( ( RCSe + Max( MLU,Min( RMSe ,( MUR + CS ) ) ) ) ,Max( MUC,RCSe ) ) )", "obj1": 0.6255060728744939, "obj2": 0.31048441926952985}, {"determining": "( ( ( BR + FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU - DDR ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( ( MUR - MUM ) / RMSe ) )", "obj1": 0.3076923076923077, "obj2": 0.6364633401940827}, {"determining": "( PN * ( Min( FirstVNF_CPU ,BR ) + RRS ) )", "choosing": "( ( ( ( Min( MUM ,MUR ) * Max( MUM,MUM ) ) - MUC ) / RMSe ) * ( RRSe * RMSe ) )", "obj1": 0.25708502024291496, "obj2": 0.6908826405857156}, {"determining": "( FirstVNF_Mem_Server - ( Max( ( FirstVNF_RAM + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( ( MRS - BR ) / ( Const / DDR ) ) ) )", "choosing": "( Min( CS ,RCSe ) / ( ( Max( ( RCSe - MLU ),RRSe ) * ( ( MUR - MUM ) / RMSe ) ) - MUC ) )", "obj1": 0.5587044534412956, "obj2": 0.3587623379427984}, {"determining": "Min( Min( DDR ,FirstVNF_RAM ) ,Max( ( ACS * ( Min( FirstVNF_Mem_Server ,CRS ) + AMS ) ),MDR ) )", "choosing": "( ( MLU * DS ) * ( ( Max( DS,MLU ) - ( RCSe * RCSe ) ) / CS ) )", "obj1": 0.23279352226720648, "obj2": 0.7182148629272157}, {"determining": "( PN * ( FirstVNF_CPU * ( RRS - ( BR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS * RMSe ) - ( RCSe / Min( MLU ,DS ) ) ) / MUM )", "obj1": 0.4230769230769231, "obj2": 0.5213565651229484}, {"determining": "( ( ( DDR + BR ) - ( MRS / Const ) ) / ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) )", "choosing": "( ( MUM - DS ) + ( RMSe - RMSe ) )", "obj1": 0.18016194331983806, "obj2": 0.7894855149178961}, {"determining": "( ( CRS + CRS ) + ( ( BR + MRS ) - ( MRS / Const ) ) )", "choosing": "( ( DS - MUM ) + Max( ( ( ( MUC + MLU ) / RMSe ) - RRSe ),MUR ) )", "obj1": 0.10526315789473684, "obj2": 0.8707771222244208}, {"determining": "( ( ( FirstVNF_RAM / ( FirstVNF_CPU_Server / MRS ) ) * RRS ) + Max( FirstVNF_RAM,( BR / Max( Min( ( ( ( MRS - PN ) * BR ) * Min( Const ,ARS ) ) ,Max( DDR,FirstVNF_Mem ) ),AMS ) ) ) )", "choosing": "( ( Max( MUR,MUM ) / RMSe ) * Max( ( RRSe - RRSe ),( MUR * ( ( RCSe / ( CS / ( Max( DS,RMSe ) / MUM ) ) ) * ( ( RCSe * ( RMSe + ( MUM - MLU ) ) ) - ( ( CS / ( MUM / RCSe ) ) / MUC ) ) ) ) ) )", "obj1": 0.25708502024291496, "obj2": 0.6908826405857156}, {"determining": "( Max( Const,( ( PN / ( FirstVNF_Mem - Max( DDR,MDR ) ) ) / ( ACS / ARS ) ) ) - ( RRS - ( FirstVNF_CPU_Server / RRS ) ) )", "choosing": "( ( ( MUM * DS ) * ( ( ( MUR / ( RRSe + ( ( MUC / RCSe ) / RRSe ) ) ) + RMSe ) / ( RRSe - RMSe ) ) ) + Max( RMSe,MLU ) )", "obj1": 0.46153846153846156, "obj2": 0.4640965331680502}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) * ( Max( Const,MRS ) - ( RRS - MRS ) ) )", "choosing": "( ( ( ( CS / ( ( DS * RMSe ) - RCSe ) ) + Max( RMSe,MLU ) ) * ( MUM * DS ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.1902834008097166, "obj2": 0.7710599781355031}, {"determining": "( Max( Const,MRS ) - ( ( AMS - Min( ARS ,BR ) ) - ( BR - ARS ) ) )", "choosing": "( ( CS / ( ( DS * ( Min( ( ( RRSe * RRSe ) / DS ) ,RMSe ) / MUC ) ) - RCSe ) ) + Max( RMSe,MLU ) )", "obj1": 0.22672064777327935, "obj2": 0.7307279208821561}, {"determining": "( ( ( Const * FirstVNF_RAM ) - ( MRS - MDR ) ) / Min( ACS ,FirstVNF_CPU_Server ) )", "choosing": "Max( Max( Min( MLU ,( ( MUM + MLU ) + MUM ) ),Max( ( MLU - RMSe ),( MUR / RCSe ) ) ),DS )", "obj1": 0.2165991902834008, "obj2": 0.7439291637557227}, {"determining": "( ( ( Const * FirstVNF_RAM ) - ( MRS - MDR ) ) / Min( ACS ,MRS ) )", "choosing": "( ( MUM * ( MUM * DS ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.39473684210526316, "obj2": 0.5466965738497205}, {"determining": "( ( Min( Const ,FirstVNF_RAM_Server ) - ( DDR - FirstVNF_CPU ) ) / ( Max( ( FirstVNF_CPU * AMS ),( AMS - MRS ) ) - DDR ) )", "choosing": "Max( ( MUC * RMSe ),Max( ( MUR * RCSe ),( MLU + ( MLU / CS ) ) ) )", "obj1": 0.2732793522267207, "obj2": 0.6607785837581133}, {"determining": "( PN * ( FirstVNF_CPU * ( RRS * DDR ) ) )", "choosing": "( ( ( DS * RMSe ) - ( RCSe / Min( MLU ,( MUM * DS ) ) ) ) / MUM )", "obj1": 0.5020242914979757, "obj2": 0.4312625123759692}, {"determining": "( ( ( AMS * ACS ) * ( RRS - ( AMS - FirstVNF_RAM_Server ) ) ) * PN )", "choosing": "( ( MUM * ( DS * MUM ) ) * ( ( DS + MLU ) / Min( DS ,DS ) ) )", "obj1": 0.4331983805668016, "obj2": 0.5023306164232344}, {"determining": "( ( ( Const * FirstVNF_RAM ) - ( MRS - MDR ) ) / Min( ACS ,MRS ) )", "choosing": "( ( MUM * ( DS / MUC ) ) * ( MUR / CS ) )", "obj1": 0.4433198380566802, "obj2": 0.4819383867456228}, {"determining": "Min( Max( MDR,PN ) ,Min( Const ,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( ( MLU + MUM ),Max( DS,Min( RMSe ,MUC ) ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.6860967586940835}, {"determining": "( Max( ( FirstVNF_CPU * AMS ),( AMS - MRS ) ) / ( Max( FirstVNF_CPU_Server,RRS ) - ( Const - BR ) ) )", "choosing": "( ( MUM * ( DS / MUC ) ) * ( MUR / CS ) )", "obj1": 0.48380566801619435, "obj2": 0.4434151920630874}, {"determining": "( ( FirstVNF_Mem + MRS ) - Min( MDR ,( ( DDR + MRS ) - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( ( MUR + ( RMSe + ( RCSe + Min( DS ,MUM ) ) ) ) + MUC ) ) ),Min( Max( ( CS - MUM ),( MUM / MUM ) ) ,( ( DS * RMSe ) - RCSe ) ) )", "obj1": 0.13765182186234817, "obj2": 0.8299817193925182}, {"determining": "( ( FirstVNF_Mem + MRS ) - Min( MDR ,( ( DDR + BR ) - FirstVNF_Mem_Server ) ) )", "choosing": "( ( CS / ( ( DS * RMSe ) - RCSe ) ) + Max( RMSe,MLU ) )", "obj1": 0.22672064777327935, "obj2": 0.7307279208821561}, {"determining": "( Max( Const,MRS ) - ( RRS - ( FirstVNF_CPU_Server / RRS ) ) )", "choosing": "( ( MUM * ( MUM * DS ) ) + Max( RMSe,MLU ) )", "obj1": 0.46153846153846156, "obj2": 0.4640965331680502}, {"determining": "( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server / RRS ) ) - Min( RRS ,( ( FirstVNF_RAM_Server * MRS ) + ( FirstVNF_Mem_Server - AMS ) ) ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( ( ( Min( MUM ,MUR ) - ( CS + MUR ) ) + ( RMSe + ( RCSe + MUM ) ) ) + MUC ) ) ),Min( Max( ( CS - MUM ),( MUM / MUM ) ) ,( Max( RCSe,MUM ) / ( MUM / MUC ) ) ) )", "obj1": 0.145748987854251, "obj2": 0.8247751007457617}, {"determining": "( Max( Max( Max( Const,CRS ),Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server * MRS ) + ( FirstVNF_Mem_Server - AMS ) ) ) / Min( ACS ,( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server / RRS ) ) - Min( RRS ,AMS ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( MUM ,( ( Min( ( MUC / MUC ) ,Max( MUM,CS ) ) + ( ( CS / RRSe ) - Max( RCSe,CS ) ) ) + ( RMSe + ( RCSe + MUM ) ) ) ) - ( CS + MUR ) ) ) * ( ( MUR - MUM ) / RMSe ) )", "obj1": 0.26720647773279355, "obj2": 0.682557587210708}, {"determining": "( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server / RRS ) ) - Min( RRS ,AMS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( ( MUR - MUM ) / RMSe ) )", "obj1": 0.25708502024291496, "obj2": 0.6908826405857156}, {"determining": "( Min( Max( MDR,AMS ) ,CRS ) + ( ( DDR + BR ) - ( MRS / Const ) ) )", "choosing": "( ( MUM - DS ) + ( MLU - RMSe ) )", "obj1": 0.10526315789473684, "obj2": 0.8707771222244208}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - Min( ( ( RRS + FirstVNF_Mem ) + ( FirstVNF_RAM_Server + BR ) ) ,AMS ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( ( MUR + ( RMSe + ( RCSe + MUM ) ) ) + MUC ) ) ),Max( ( Min( ( ( RMSe / DS ) + RRSe ) ,( ( Min( MUC ,MUM ) * ( Max( DS,RCSe ) * RCSe ) ) + DS ) ) / ( RRSe * MUM ) ),( RMSe - MLU ) ) )", "obj1": 0.13157894736842105, "obj2": 0.8398980268129423}, {"determining": "( Max( Const,MRS ) + ( ( DDR + BR ) - ( MRS / Const ) ) )", "choosing": "( ( MUM - DS ) + ( Max( RMSe,MLU ) - RMSe ) )", "obj1": 0.10121457489878542, "obj2": 0.8751211575362788}, {"determining": "( Max( Const,MRS ) - ( RRS - MRS ) )", "choosing": "( ( MUM - DS ) + ( MLU - RMSe ) )", "obj1": 0.10526315789473684, "obj2": 0.8707771222244208}, {"determining": "( Min( Max( MDR,AMS ) ,CRS ) + ( ( DDR + BR ) - ( MRS / Const ) ) )", "choosing": "( ( CS / ( ( DS * RMSe ) - RCSe ) ) + Max( RMSe,MLU ) )", "obj1": 0.22672064777327935, "obj2": 0.7307279208821561}, {"determining": "Min( Max( MDR,PN ) ,Min( Const ,( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + AMS ) - Min( DDR ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( ( MLU + MUM ),Max( DS,Min( RMSe ,MUC ) ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Min( ( Max( ( MLU + MUM ),Max( DS,Min( RMSe ,MUC ) ) ) * ( ( MLU - ( MUR * RMSe ) ) + Min( CS ,RRSe ) ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.6860967586940835}, {"determining": "( FirstVNF_Mem_Server - ( Max( ( FirstVNF_RAM + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( ( MRS - BR ) / ( Const / DDR ) ) ) )", "choosing": "( Min( CS ,RCSe ) / ( ( Max( ( RCSe - MLU ),RRSe ) * ( ( MUR - MUM ) / RMSe ) ) - MUC ) )", "obj1": 0.5587044534412956, "obj2": 0.3587623379427984}, {"determining": "( Max( Max( Max( Const,CRS ),Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server * MRS ) + ( Const * Min( RRS ,Max( FirstVNF_RAM,Max( FirstVNF_RAM,RRS ) ) ) ) ) ) / Min( ACS ,MRS ) )", "choosing": "( Min( Max( ( DS - RMSe ),Max( RCSe,CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( ( MUR - MUM ) / RMSe ) )", "obj1": 0.25708502024291496, "obj2": 0.6908826405857156}, {"determining": "( ( RRS * RRS ) + ( FirstVNF_RAM - ( BR / Max( Min( DDR ,ARS ),AMS ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( ( Min( ( ( RMSe / DS ) + RRSe ) ,( ( Min( MUC ,MUM ) * ( Max( DS,RCSe ) * RCSe ) ) + DS ) ) / ( RRSe * MUM ) ) / RMSe ) )", "obj1": 0.20242914979757085, "obj2": 0.7441430310627136}, {"determining": "Min( ( FirstVNF_CPU * Min( RRS ,AMS ) ) ,( MRS * MDR ) )", "choosing": "Max( ( ( MUM + Max( RRSe,Min( MUM ,Max( CS,Max( ( RRSe + RMSe ),RRSe ) ) ) ) ) / ( MUR + Max( RMSe,( Min( ( MUC / MUC ) ,Max( MUM,CS ) ) + ( ( CS / RRSe ) - Max( RCSe,CS ) ) ) ) ) ),Max( RRSe,RRSe ) )", "obj1": 0.34210526315789475, "obj2": 0.6146309625337768}, {"determining": "( ( ( DDR + BR ) - ( MRS / Const ) ) / ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) )", "choosing": "( ( MUM - DS ) + ( RMSe - RMSe ) )", "obj1": 0.18016194331983806, "obj2": 0.7894855149178961}, {"determining": "( Min( Max( FirstVNF_CPU_Server,AMS ) ,( ( Const * Const ) * MRS ) ) + ( ( DDR + BR ) - ( MRS / Const ) ) )", "choosing": "Max( ( MUC * RMSe ),Max( ( MUR * RCSe ),( MLU + ( MLU / CS ) ) ) )", "obj1": 0.2732793522267207, "obj2": 0.6607785837581133}, {"determining": "( ( ( FirstVNF_RAM / ( MRS / FirstVNF_CPU_Server ) ) * RRS ) + ( FirstVNF_RAM - ( BR / Max( Min( DDR ,ARS ),AMS ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( ( MUR - MUM ) / RMSe ) )", "obj1": 0.2651821862348178, "obj2": 0.6829329881020215}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - ( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ) - ( Max( ( FirstVNF_RAM + MDR ),( RRS / FirstVNF_CPU_Server ) ) - Max( MRS,DDR ) ) ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( ( MUR + Min( RRSe ,MLU ) ) + MUC ) ) ),Min( Max( ( CS - MUM ),( MUM / MUM ) ) ,( Max( RCSe,MUM ) / ( MUM / MUC ) ) ) )", "obj1": 0.11336032388663968, "obj2": 0.8503604427588294}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - Min( RRS ,AMS ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( ( MUR + ( RMSe + ( RCSe + MUM ) ) ) + MUC ) ) ),Min( Max( ( CS - MUM ),( MUM / MUM ) ) ,( Max( RCSe,MUM ) / ( MUM / MUC ) ) ) )", "obj1": 0.12348178137651822, "obj2": 0.8464588929629185}, {"determining": "( MRS + ( ( DDR + BR ) - ( MRS / Const ) ) )", "choosing": "( ( MUM - ( MUM * DS ) ) + ( MLU - RMSe ) )", "obj1": 0.12955465587044535, "obj2": 0.8443596792590929}, {"determining": "( Min( Max( MDR,AMS ) ,CRS ) + ( ( DDR + BR ) - ( MRS / Const ) ) )", "choosing": "( ( MUM - DS ) + ( MLU - RMSe ) )", "obj1": 0.10526315789473684, "obj2": 0.8707771222244208}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) * ( RRS - Min( ( Min( DDR ,FirstVNF_RAM ) - FirstVNF_Mem ) ,FirstVNF_RAM ) ) )", "choosing": "( Max( ( DS + MUC ),( Min( MUM ,MUM ) - ( ( MUC / CS ) * RCSe ) ) ) * ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( ( MUR + ( RMSe + ( RCSe + MUM ) ) ) + MUC ) ) ) )", "obj1": 0.5303643724696356, "obj2": 0.4198108747489531}, {"determining": "( ( RRS - ( BR - FirstVNF_RAM_Server ) ) * ( RRS * DDR ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( ( MUR - MUM ) / RMSe ) )", "obj1": 0.3117408906882591, "obj2": 0.6312420856236909}, {"determining": "( ( ( BR + FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU - DDR ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( ( MUR - MUM ) / RMSe ) )", "obj1": 0.3076923076923077, "obj2": 0.6364633401940827}, {"determining": "( ( ( Min( DDR ,ARS ) - ( ( ( ( Min( FirstVNF_CPU_Server ,DDR ) / Min( DDR ,Const ) ) / BR ) - RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( Min( MUM ,MUR ) - ( CS * MLU ) ) / ( RMSe * MUC ) )", "obj1": 0.2793522267206478, "obj2": 0.64705514055472}, {"determining": "( ( ( Const - ( ( ( FirstVNF_RAM / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( Min( MUM ,MUR ) - ( CS * MUR ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Max( MUR,MUM ) ) ) )", "obj1": 0.31376518218623484, "obj2": 0.6270815373021177}, {"determining": "( ( ( Const - ( ( ( FirstVNF_RAM / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( Min( MUM ,MUR ) - ( CS * MUR ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Max( MUR,MUM ) ) ) )", "obj1": 0.31376518218623484, "obj2": 0.6270815373021177}, {"determining": "( Max( Const,MRS ) - ( RRS - ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - Min( RRS ,AMS ) ) ) )", "choosing": "( ( MUM * ( MUM * DS ) ) + ( MUR / CS ) )", "obj1": 0.4149797570850202, "obj2": 0.5292176185077342}, {"determining": "( Min( AMS ,Min( ACS ,( ARS - ( Max( Const,Min( ( Const - FirstVNF_CPU_Server ) ,DDR ) ) * PN ) ) ) ) / Max( Max( Max( Max( FirstVNF_RAM,FirstVNF_CPU_Server ),( MDR - MRS ) ),( ( FirstVNF_RAM + AMS ) - ( FirstVNF_CPU - FirstVNF_Mem ) ) ),( Min( ( MRS - Const ) ,( FirstVNF_RAM - FirstVNF_Mem ) ) / ( Max( BR,MRS ) * ( Const * MDR ) ) ) ) )", "choosing": "Max( Max( Min( MLU ,( ( MUM + MLU ) + MUM ) ),Max( ( MLU - RMSe ),( MUR / RCSe ) ) ),DS )", "obj1": 0.2165991902834008, "obj2": 0.7439291637557227}, {"determining": "( ( ( Const * FirstVNF_RAM ) - ( MRS - MDR ) ) / Min( ACS ,FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( ( ( MUM / MLU ) - MUC ) + ( DS + RMSe ) ) * ( CS / ( Max( MLU,MLU ) / ( MUR + MUR ) ) ) ),Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( ( MUR + ( RMSe + CS ) ) + MUC ) ) ),( Max( MUR,CS ) / ( RRSe + CS ) ) ) )", "obj1": 0.13360323886639677, "obj2": 0.8365752757433005}, {"determining": "( Min( AMS ,MRS ) / Max( Max( Max( Max( FirstVNF_RAM,FirstVNF_CPU_Server ),( MDR - MRS ) ),( ( FirstVNF_RAM + AMS ) - ( FirstVNF_CPU - FirstVNF_Mem ) ) ),( Min( ( MRS - Const ) ,( FirstVNF_RAM - FirstVNF_Mem ) ) / ( Max( BR,MRS ) * ( Const * MDR ) ) ) ) )", "choosing": "Max( ( Min( RMSe ,( MLU / RRSe ) ) * Min( MLU ,Max( MUC,RRSe ) ) ),Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( ( MUR + ( RMSe + CS ) ) + MUC ) ) ),( Max( MUR,CS ) / ( RRSe + CS ) ) ) )", "obj1": 0.1194331983805668, "obj2": 0.8492591711251222}, {"determining": "( ( ( Const - ( ( ( FirstVNF_RAM / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( Min( MUM ,MUR ) - ( CS * MUR ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Max( MUR,MUM ) ) ) )", "obj1": 0.31376518218623484, "obj2": 0.6270815373021177}, {"determining": "( ( ( FirstVNF_RAM / ( MRS / FirstVNF_CPU_Server ) ) * RRS ) + ( FirstVNF_RAM - ( BR / Max( Min( DDR ,ARS ),AMS ) ) ) )", "choosing": "( ( Max( ( MLU + MUM ),Max( DS,Min( RMSe ,MUC ) ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.30364372469635625, "obj2": 0.6454305251500236}, {"determining": "( ( FirstVNF_Mem_Server * MDR ) - ( FirstVNF_Mem + ( FirstVNF_RAM + Min( ( BR * ( MDR + ACS ) ) ,FirstVNF_Mem ) ) ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( ( MUR + ( MUR + ( ( RCSe * CS ) + RCSe ) ) ) + MUC ) ) ),Min( Max( ( DS - MUM ),( MUM / MUM ) ) ,( Max( RCSe,MUM ) / ( RMSe * MUR ) ) ) )", "obj1": 0.5546558704453441, "obj2": 0.4077142710485307}, {"determining": "( ( ( Const - ( ( ( FirstVNF_RAM / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( Min( MUM ,MUR ) - ( CS * MUR ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Max( MUR,MUM ) ) ) )", "obj1": 0.31376518218623484, "obj2": 0.6270815373021177}, {"determining": "( ( ( FirstVNF_RAM / ( MRS / FirstVNF_CPU_Server ) ) * RRS ) + ( FirstVNF_RAM - ( BR / Max( Min( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - Min( RRS ,AMS ) ) ,ARS ),AMS ) ) ) )", "choosing": "( Min( Max( Max( Max( MUM,MUM ),( ( MUR + ( RMSe + ( RCSe + MUM ) ) ) + MUC ) ),( MUR + CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( ( MUR - MUM ) / RMSe ) )", "obj1": 0.25708502024291496, "obj2": 0.6908826405857156}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - Min( RRS ,AMS ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( ( MUR + ( RMSe + ( RCSe + MUM ) ) ) + MUC ) ) ),( ( ( RRSe / MUR ) * Min( MLU ,CS ) ) * ( MUM - DS ) ) )", "obj1": 0.14777327935222673, "obj2": 0.8235394194399359}, {"determining": "( ( ( RRS / ARS ) * ( DDR - FirstVNF_Mem ) ) * PN )", "choosing": "( ( MUM - ( RCSe / Min( DS ,Min( RMSe ,RMSe ) ) ) ) / MUM )", "obj1": 0.45546558704453444, "obj2": 0.47242789417561726}, {"determining": "( ( ( RRS / ARS ) + Max( FirstVNF_CPU_Server,Const ) ) * ( FirstVNF_RAM / RRS ) )", "choosing": "( ( Max( DS,MLU ) - ( RCSe / Min( DS ,Min( ( Min( Min( MUR ,DS ) ,DS ) / RMSe ) ,RMSe ) ) ) ) / MUM )", "obj1": 0.4251012145748988, "obj2": 0.515040029031178}, {"determining": "( Max( Const,( ( PN + ( FirstVNF_Mem - ( Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ),BR ) / AMS ) ) ) / ( ( AMS - AMS ) / ARS ) ) ) - ( RRS - ( FirstVNF_CPU_Server / RRS ) ) )", "choosing": "( ( ( ( RMSe / MLU ) / Max( CS,RCSe ) ) * ( ( MUC + CS ) * Max( MLU,CS ) ) ) / ( ( MLU + ( ( MUR / Max( ( ( MUM * DS ) - Min( RCSe ,MUR ) ),RMSe ) ) / Min( ( MUR - RMSe ) ,Max( Min( RCSe ,( CS / MLU ) ),CS ) ) ) ) * ( DS * DS ) ) )", "obj1": 0.09109311740890688, "obj2": 0.8762623459419124}, {"determining": "( ( ( FirstVNF_RAM / ( MRS / FirstVNF_CPU_Server ) ) * RRS ) + ( FirstVNF_RAM - ( BR / Max( ( RRS / ARS ),AMS ) ) ) )", "choosing": "( Min( Max( ( DS - Min( RMSe ,RMSe ) ),( MUR + CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( ( MUR - MUM ) / RMSe ) )", "obj1": 0.25708502024291496, "obj2": 0.6908826405857156}, {"determining": "( ( ( FirstVNF_RAM / ( MRS / FirstVNF_CPU_Server ) ) * RRS ) + ( FirstVNF_RAM - ( RRS / ARS ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( MUM ,MUR ) - ( RCSe / Min( DS ,Min( RMSe ,RMSe ) ) ) ) ) * ( ( MUR - MUM ) / RMSe ) )", "obj1": 0.242914979757085, "obj2": 0.7163045845146427}, {"determining": "( ( ( RRS / ARS ) * ( ( FirstVNF_RAM - ( BR / Max( Min( DDR ,ARS ),AMS ) ) ) - Min( BR ,FirstVNF_RAM_Server ) ) ) * PN )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) / MUM )", "obj1": 0.35020242914979755, "obj2": 0.5970442051967843}, {"determining": "( ( ( RRS / ARS ) * ( RRS - Min( BR ,FirstVNF_RAM_Server ) ) ) * PN )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( ( MUR - MUM ) / RMSe ) )", "obj1": 0.25708502024291496, "obj2": 0.6908826405857156}, {"determining": "Min( ( Max( ( FirstVNF_RAM + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( Const * Min( RRS ,Max( FirstVNF_RAM,Max( FirstVNF_RAM,RRS ) ) ) ) ) ,( MRS * MDR ) )", "choosing": "Max( ( ( MUM - DS ) + ( Max( ( MLU + ( MUC - MUR ) ),( MLU + ( MUM + Min( MLU ,MLU ) ) ) ) - RMSe ) ),Max( RRSe,RRSe ) )", "obj1": 0.1659919028340081, "obj2": 0.7961777082124672}, {"determining": "( Max( Const,MRS ) - ( RRS - MRS ) )", "choosing": "( ( CS / ( ( DS * RMSe ) - RCSe ) ) + Max( RMSe,MLU ) )", "obj1": 0.22672064777327935, "obj2": 0.7307279208821561}, {"determining": "( ( ( RRS / ARS ) * ( RRS - Min( Min( DDR ,FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) ) ) * PN )", "choosing": "( ( Max( DS,Min( RMSe ,MUC ) ) - ( RCSe / Min( DS ,Min( RMSe ,RMSe ) ) ) ) / MUM )", "obj1": 0.4716599190283401, "obj2": 0.4474053016364875}, {"determining": "( FirstVNF_RAM_Server - ( Max( ( DDR + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( Const * Min( RRS ,Max( FirstVNF_RAM,Max( FirstVNF_RAM,RRS ) ) ) ) ) )", "choosing": "( ( Max( ( MLU + MUM ),Max( DS,Min( RMSe ,MUC ) ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( Max( Min( MLU ,MLU ),Max( RRSe,MLU ) ) / RMSe ) ) ,( Min( Min( DS ,Min( RMSe ,RMSe ) ) ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.3603238866396761, "obj2": 0.56234031541536}, {"determining": "( ( ( RRS / ARS ) * ( RRS - Min( ( BR * DDR ) ,FirstVNF_Mem ) ) ) * PN )", "choosing": "( ( ( DS * MLU ) - ( ( MUR + ( ( RCSe * CS ) + RCSe ) ) / Min( DS ,Min( RMSe ,RMSe ) ) ) ) / MUM )", "obj1": 0.4898785425101215, "obj2": 0.4378831772971124}, {"determining": "( Max( FirstVNF_Mem_Server,MDR ) - ( FirstVNF_Mem + ( FirstVNF_RAM + Min( ( BR * RRS ) ,FirstVNF_Mem ) ) ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( ( MUR + ( MUR + ( ( RCSe * CS ) + RCSe ) ) ) + ( DS * MLU ) ) ) ),Min( Max( ( CS - MUM ),( MUM / MUM ) ) ,( Max( RCSe,MUM ) / ( MUM / MUC ) ) ) )", "obj1": 0.548582995951417, "obj2": 0.4187430756762203}, {"determining": "( ( Min( ( FirstVNF_CPU * FirstVNF_Mem_Server ) ,( MRS * MDR ) ) * FirstVNF_RAM ) / ( Const / Min( MDR ,( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) )", "choosing": "( MUM / ( Max( ( RMSe * RRSe ),( MUM - MUC ) ) * ( ( MLU + ( MUC - MUR ) ) - Min( DS ,MUM ) ) ) )", "obj1": 0.3319838056680162, "obj2": 0.6269067059096137}, {"determining": "( Min( MDR ,( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) * ( ( ACS / ( RRS * FirstVNF_Mem_Server ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RMSe * RRSe ) / RMSe ) - RCSe ) / ( MUR / MUM ) )", "obj1": 0.18218623481781376, "obj2": 0.7852759218492004}, {"determining": "( PN * ( FirstVNF_CPU * ( RRS * DDR ) ) )", "choosing": "( ( MUM * DS ) * ( MUR / CS ) )", "obj1": 0.44129554655870445, "obj2": 0.4975956153164376}, {"determining": "Min( Max( MDR,PN ) ,Min( Const ,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( ( MLU + MUM ),Max( DS,Min( RMSe ,MUC ) ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.6860967586940835}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) - Min( RRS ,Max( ( FirstVNF_CPU - ( RRS / FirstVNF_Mem ) ),PN ) ) )", "choosing": "( ( Max( ( MLU + MUM ),Max( DS,Min( RMSe ,MUC ) ) ) * Min( ( RMSe * MUC ) ,( Min( CS ,( Min( MUR ,RMSe ) + Min( MLU ,RCSe ) ) ) * MUC ) ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,Max( Min( MUR ,RRSe ),( RCSe + RRSe ) ) ) )", "obj1": 0.3805668016194332, "obj2": 0.561239866507608}, {"determining": "( Max( ( FirstVNF_CPU * AMS ),( AMS - MRS ) ) / ( ( FirstVNF_CPU / Min( RRS ,Max( ( FirstVNF_CPU - ( RRS / FirstVNF_Mem ) ),PN ) ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( Max( ( MLU + MUM ),Max( DS,Min( RMSe ,MUC ) ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.25101214574898784, "obj2": 0.6936347638333916}, {"determining": "( ( ( BR + FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU - DDR ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( ( MUR - MUM ) / RMSe ) )", "obj1": 0.3076923076923077, "obj2": 0.6364633401940827}, {"determining": "( ( ( Const - ( ( ( FirstVNF_RAM / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( Min( MUM ,MUR ) - ( CS * MUR ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Max( MUR,MUM ) ) ) )", "obj1": 0.31376518218623484, "obj2": 0.6270815373021177}, {"determining": "( PN * ( FirstVNF_CPU * ( RRS - ( BR - ( FirstVNF_CPU_Server + Min( Const ,Min( PN ,FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( MUM * ( MUM * ( RRSe + ( Min( RMSe ,( MLU / RRSe ) ) * Min( MLU ,Max( MUC,RRSe ) ) ) ) ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.33805668016194335, "obj2": 0.6266761195867513}, {"determining": "( ( ( DDR / MRS ) * RRS ) + ( FirstVNF_CPU_Server + Min( Const ,Min( PN ,( DDR / ( FirstVNF_Mem_Server / Max( FirstVNF_Mem,CRS ) ) ) ) ) ) )", "choosing": "( Min( RCSe ,Max( Max( RCSe,( MUR / Max( ( Max( RRSe,RMSe ) / MLU ),CS ) ) ),( MUM - MUM ) ) ) * ( MUM * ( MUM * DS ) ) )", "obj1": 0.4331983805668016, "obj2": 0.5023306164232344}, {"determining": "( ( FirstVNF_CPU_Server / ( ( ( FirstVNF_CPU_Server + CRS ) * Max( FirstVNF_Mem_Server,RRS ) ) - ( ( BR / Max( MRS,DDR ) ) + ARS ) ) ) * ( RRS - BR ) )", "choosing": "( ( CS / CS ) * ( Max( RRSe,MUM ) * DS ) )", "obj1": 0.597165991902834, "obj2": 0.33250512957587625}, {"determining": "( ( RRS - ( RRS / ARS ) ) * ( RRS * DDR ) )", "choosing": "( ( MUM * ( MUM * Min( MLU ,DS ) ) ) * Min( ( DS * MLU ) ,RRSe ) )", "obj1": 0.5040485829959515, "obj2": 0.42927018454687327}, {"determining": "( Min( ( ( FirstVNF_Mem / ( ( BR / Min( PN ,Max( FirstVNF_Mem_Server,BR ) ) ) - FirstVNF_RAM_Server ) ) * ARS ) ,( ( Const * Const ) * MRS ) ) + ( ( DDR + BR ) - ( MRS / Const ) ) )", "choosing": "Max( ( Max( RRSe,RCSe ) * RMSe ),( MLU + ( MUC - Max( CS,( Max( MUC,CS ) / MUR ) ) ) ) )", "obj1": 0.6983805668016194, "obj2": 0.2941728364743059}], "6": [{"determining": "Min( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ,( PN - ( Min( RRS ,FirstVNF_Mem_Server ) * Const ) ) )", "choosing": "Max( Min( Max( CS,Max( CS,CS ) ) ,MLU ),Min( MUM ,( DS * ( Min( ( RRSe / Min( CS ,MUM ) ) ,RRSe ) * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,Min( ACS ,( ARS - Min( ( Min( Max( RRS,AMS ) ,MDR ) - FirstVNF_CPU ) ,ACS ) ) ) ) / Max( Max( Max( ( MDR - MRS ),Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM + AMS ) - ( FirstVNF_CPU - FirstVNF_Mem ) ) ),( Min( ( MRS - Const ) ,( FirstVNF_RAM - FirstVNF_Mem ) ) / ( Max( BR,MRS ) * ( Const * MDR ) ) ) ) )", "choosing": "Max( Max( ( ( RMSe * MUC ) * ( ( RCSe / ( ( Min( CS ,CS ) - MUM ) / MUR ) ) / MUR ) ),CS ),Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( ( MUR + ( RMSe + CS ) ) + MUC ) ) ),( Max( MUR,CS ) / ( RRSe + CS ) ) ) )", "obj1": 0.13360323886639677, "obj2": 0.8365752757433005}, {"determining": "( ( ( RRS / ARS ) * ( FirstVNF_Mem_Server - Min( AMS ,DDR ) ) ) * PN )", "choosing": "( ( ( ( Max( RCSe,RMSe ) / ( CS - MLU ) ) * DS ) - ( RCSe / Min( DS ,Min( RMSe ,RMSe ) ) ) ) / MUM )", "obj1": 0.4230769230769231, "obj2": 0.5213565651229484}, {"determining": "( ( ( RRS / ARS ) * ( FirstVNF_Mem_Server - Min( AMS ,DDR ) ) ) * PN )", "choosing": "( ( ( ( Max( RCSe,RMSe ) / ( CS - MLU ) ) * DS ) - ( RCSe / Min( DS ,Min( RMSe ,RMSe ) ) ) ) / MUM )", "obj1": 0.4230769230769231, "obj2": 0.5213565651229484}, {"determining": "( ( ( RRS / ARS ) * ( FirstVNF_Mem_Server - Min( AMS ,DDR ) ) ) * PN )", "choosing": "( ( ( ( Max( RCSe,RMSe ) / ( CS - MLU ) ) * DS ) - ( RCSe / Min( DS ,Min( RMSe ,RMSe ) ) ) ) / MUM )", "obj1": 0.4230769230769231, "obj2": 0.5213565651229484}, {"determining": "( PN * ( FirstVNF_CPU * ( RRS - ( BR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS * RMSe ) - ( RCSe / Min( MLU ,DS ) ) ) / MUM )", "obj1": 0.4230769230769231, "obj2": 0.5213565651229484}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - Min( ( Min( FirstVNF_CPU_Server ,AMS ) / FirstVNF_RAM ) ,AMS ) )", "choosing": "( ( CS / CS ) * ( Max( RRSe,MUM ) * DS ) )", "obj1": 0.44129554655870445, "obj2": 0.4975956153164376}, {"determining": "Min( ( FirstVNF_Mem_Server * Min( FirstVNF_Mem ,( FirstVNF_Mem - CRS ) ) ) ,( DDR - FirstVNF_Mem ) )", "choosing": "Max( Min( MLU ,RMSe ),Max( Min( CS ,( CS / Min( ( ( ( MUR * MUM ) * RMSe ) + ( CS + ( CS / RCSe ) ) ) ,MUR ) ) ),RRSe ) )", "obj1": 0.22064777327935223, "obj2": 0.7432492433115562}, {"determining": "Min( Min( DDR ,FirstVNF_RAM ) ,Max( ( ACS * ( Min( FirstVNF_Mem_Server ,CRS ) + AMS ) ),MDR ) )", "choosing": "( ( MLU * DS ) * ( ( Max( DS,MLU ) - ( RCSe * RCSe ) ) / CS ) )", "obj1": 0.23279352226720648, "obj2": 0.7182148629272157}, {"determining": "( PN * ( FirstVNF_CPU * ( RRS - ( BR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS * RMSe ) - ( RCSe / Min( MLU ,DS ) ) ) / MUM )", "obj1": 0.4230769230769231, "obj2": 0.5213565651229484}, {"determining": "( Max( Const,( ( PN / ( FirstVNF_Mem - Max( DDR,MDR ) ) ) / ( ACS / ARS ) ) ) - ( RRS - ( FirstVNF_CPU_Server / RRS ) ) )", "choosing": "( ( ( MUM * DS ) * ( ( ( MUR / ( RRSe + ( ( MUC / RCSe ) / RRSe ) ) ) + RMSe ) / ( RRSe - RMSe ) ) ) + Max( RMSe,MLU ) )", "obj1": 0.46153846153846156, "obj2": 0.4640965331680502}, {"determining": "( Max( Const,MRS ) - ( ( AMS - Min( ARS ,BR ) ) - ( BR - ARS ) ) )", "choosing": "( ( CS / ( ( DS * ( Min( ( ( RRSe * RRSe ) / DS ) ,RMSe ) / MUC ) ) - RCSe ) ) + Max( RMSe,MLU ) )", "obj1": 0.22672064777327935, "obj2": 0.7307279208821561}, {"determining": "( ( ( Const * FirstVNF_RAM ) - ( MRS - MDR ) ) / Min( ACS ,MRS ) )", "choosing": "( ( MUM * ( MUM * DS ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.39473684210526316, "obj2": 0.5466965738497205}, {"determining": "( ( Min( Const ,FirstVNF_RAM_Server ) - ( DDR - FirstVNF_CPU ) ) / ( Max( ( FirstVNF_CPU * AMS ),( AMS - MRS ) ) - DDR ) )", "choosing": "Max( ( MUC * RMSe ),Max( ( MUR * RCSe ),( MLU + ( MLU / CS ) ) ) )", "obj1": 0.2732793522267207, "obj2": 0.6607785837581133}, {"determining": "( ( ( AMS * ACS ) * ( RRS - ( AMS - FirstVNF_RAM_Server ) ) ) * PN )", "choosing": "( ( MUM * ( DS * MUM ) ) * ( ( DS + MLU ) / Min( DS ,DS ) ) )", "obj1": 0.4331983805668016, "obj2": 0.5023306164232344}, {"determining": "( ( ( Const * FirstVNF_RAM ) - ( MRS - MDR ) ) / Min( ACS ,MRS ) )", "choosing": "( ( MUM * ( DS / MUC ) ) * ( MUR / CS ) )", "obj1": 0.4433198380566802, "obj2": 0.4819383867456228}, {"determining": "( Max( ( FirstVNF_CPU * AMS ),( AMS - MRS ) ) / ( Max( FirstVNF_CPU_Server,RRS ) - ( Const - BR ) ) )", "choosing": "( ( MUM * ( DS / MUC ) ) * ( MUR / CS ) )", "obj1": 0.48380566801619435, "obj2": 0.4434151920630874}, {"determining": "( ( FirstVNF_Mem + MRS ) - Min( MDR ,( ( DDR + MRS ) - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( ( MUR + ( RMSe + ( RCSe + Min( DS ,MUM ) ) ) ) + MUC ) ) ),Min( Max( ( CS - MUM ),( MUM / MUM ) ) ,( ( DS * RMSe ) - RCSe ) ) )", "obj1": 0.13765182186234817, "obj2": 0.8299817193925182}, {"determining": "( ( FirstVNF_Mem + MRS ) - Min( MDR ,( ( DDR + BR ) - FirstVNF_Mem_Server ) ) )", "choosing": "( ( CS / ( ( DS * RMSe ) - RCSe ) ) + Max( RMSe,MLU ) )", "obj1": 0.22672064777327935, "obj2": 0.7307279208821561}, {"determining": "( Max( Const,MRS ) - ( RRS - ( FirstVNF_CPU_Server / RRS ) ) )", "choosing": "( ( MUM * ( MUM * DS ) ) + Max( RMSe,MLU ) )", "obj1": 0.46153846153846156, "obj2": 0.4640965331680502}, {"determining": "( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server / RRS ) ) - Min( RRS ,( ( FirstVNF_RAM_Server * MRS ) + ( FirstVNF_Mem_Server - AMS ) ) ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( ( ( Min( MUM ,MUR ) - ( CS + MUR ) ) + ( RMSe + ( RCSe + MUM ) ) ) + MUC ) ) ),Min( Max( ( CS - MUM ),( MUM / MUM ) ) ,( Max( RCSe,MUM ) / ( MUM / MUC ) ) ) )", "obj1": 0.145748987854251, "obj2": 0.8247751007457617}, {"determining": "( Min( Max( MDR,AMS ) ,CRS ) + ( ( DDR + BR ) - ( MRS / Const ) ) )", "choosing": "( ( CS / ( ( DS * RMSe ) - RCSe ) ) + Max( RMSe,MLU ) )", "obj1": 0.22672064777327935, "obj2": 0.7307279208821561}, {"determining": "( Min( Max( FirstVNF_CPU_Server,AMS ) ,( ( Const * Const ) * MRS ) ) + ( ( DDR + BR ) - ( MRS / Const ) ) )", "choosing": "Max( ( MUC * RMSe ),Max( ( MUR * RCSe ),( MLU + ( MLU / CS ) ) ) )", "obj1": 0.2732793522267207, "obj2": 0.6607785837581133}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - ( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ) - ( Max( ( FirstVNF_RAM + MDR ),( RRS / FirstVNF_CPU_Server ) ) - Max( MRS,DDR ) ) ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( ( MUR + Min( RRSe ,MLU ) ) + MUC ) ) ),Min( Max( ( CS - MUM ),( MUM / MUM ) ) ,( Max( RCSe,MUM ) / ( MUM / MUC ) ) ) )", "obj1": 0.11336032388663968, "obj2": 0.8503604427588294}, {"determining": "( ( ( Min( DDR ,ARS ) - ( ( ( ( Min( FirstVNF_CPU_Server ,DDR ) / Min( DDR ,Const ) ) / BR ) - RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( Min( MUM ,MUR ) - ( CS * MLU ) ) / ( RMSe * MUC ) )", "obj1": 0.2793522267206478, "obj2": 0.64705514055472}, {"determining": "( Max( Const,MRS ) - ( RRS - ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - Min( RRS ,AMS ) ) ) )", "choosing": "( ( MUM * ( MUM * DS ) ) + ( MUR / CS ) )", "obj1": 0.4149797570850202, "obj2": 0.5292176185077342}, {"determining": "( ( ( Const * FirstVNF_RAM ) - ( MRS - MDR ) ) / Min( ACS ,FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( ( ( MUM / MLU ) - MUC ) + ( DS + RMSe ) ) * ( CS / ( Max( MLU,MLU ) / ( MUR + MUR ) ) ) ),Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( ( MUR + ( RMSe + CS ) ) + MUC ) ) ),( Max( MUR,CS ) / ( RRSe + CS ) ) ) )", "obj1": 0.13360323886639677, "obj2": 0.8365752757433005}, {"determining": "( Min( AMS ,MRS ) / Max( Max( Max( Max( FirstVNF_RAM,FirstVNF_CPU_Server ),( MDR - MRS ) ),( ( FirstVNF_RAM + AMS ) - ( FirstVNF_CPU - FirstVNF_Mem ) ) ),( Min( ( MRS - Const ) ,( FirstVNF_RAM - FirstVNF_Mem ) ) / ( Max( BR,MRS ) * ( Const * MDR ) ) ) ) )", "choosing": "Max( ( Min( RMSe ,( MLU / RRSe ) ) * Min( MLU ,Max( MUC,RRSe ) ) ),Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( ( MUR + ( RMSe + CS ) ) + MUC ) ) ),( Max( MUR,CS ) / ( RRSe + CS ) ) ) )", "obj1": 0.1194331983805668, "obj2": 0.8492591711251222}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - Min( RRS ,AMS ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( ( MUR + ( RMSe + ( RCSe + MUM ) ) ) + MUC ) ) ),( ( ( RRSe / MUR ) * Min( MLU ,CS ) ) * ( MUM - DS ) ) )", "obj1": 0.14777327935222673, "obj2": 0.8235394194399359}, {"determining": "( ( ( RRS / ARS ) * ( DDR - FirstVNF_Mem ) ) * PN )", "choosing": "( ( MUM - ( RCSe / Min( DS ,Min( RMSe ,RMSe ) ) ) ) / MUM )", "obj1": 0.45546558704453444, "obj2": 0.47242789417561726}, {"determining": "( ( ( RRS / ARS ) + Max( FirstVNF_CPU_Server,Const ) ) * ( FirstVNF_RAM / RRS ) )", "choosing": "( ( Max( DS,MLU ) - ( RCSe / Min( DS ,Min( ( Min( Min( MUR ,DS ) ,DS ) / RMSe ) ,RMSe ) ) ) ) / MUM )", "obj1": 0.4251012145748988, "obj2": 0.515040029031178}, {"determining": "( Max( Const,( ( PN + ( FirstVNF_Mem - ( Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ),BR ) / AMS ) ) ) / ( ( AMS - AMS ) / ARS ) ) ) - ( RRS - ( FirstVNF_CPU_Server / RRS ) ) )", "choosing": "( ( ( ( RMSe / MLU ) / Max( CS,RCSe ) ) * ( ( MUC + CS ) * Max( MLU,CS ) ) ) / ( ( MLU + ( ( MUR / Max( ( ( MUM * DS ) - Min( RCSe ,MUR ) ),RMSe ) ) / Min( ( MUR - RMSe ) ,Max( Min( RCSe ,( CS / MLU ) ),CS ) ) ) ) * ( DS * DS ) ) )", "obj1": 0.09109311740890688, "obj2": 0.8762623459419124}, {"determining": "( Max( Const,MRS ) - ( RRS - MRS ) )", "choosing": "( ( CS / ( ( DS * RMSe ) - RCSe ) ) + Max( RMSe,MLU ) )", "obj1": 0.22672064777327935, "obj2": 0.7307279208821561}, {"determining": "( ( ( RRS / ARS ) * ( RRS - Min( Min( DDR ,FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) ) ) * PN )", "choosing": "( ( Max( DS,Min( RMSe ,MUC ) ) - ( RCSe / Min( DS ,Min( RMSe ,RMSe ) ) ) ) / MUM )", "obj1": 0.4716599190283401, "obj2": 0.4474053016364875}, {"determining": "( FirstVNF_RAM_Server - ( Max( ( DDR + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( Const * Min( RRS ,Max( FirstVNF_RAM,Max( FirstVNF_RAM,RRS ) ) ) ) ) )", "choosing": "( ( Max( ( MLU + MUM ),Max( DS,Min( RMSe ,MUC ) ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( Max( Min( MLU ,MLU ),Max( RRSe,MLU ) ) / RMSe ) ) ,( Min( Min( DS ,Min( RMSe ,RMSe ) ) ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.3603238866396761, "obj2": 0.56234031541536}, {"determining": "( ( ( RRS / ARS ) * ( RRS - Min( ( BR * DDR ) ,FirstVNF_Mem ) ) ) * PN )", "choosing": "( ( ( DS * MLU ) - ( ( MUR + ( ( RCSe * CS ) + RCSe ) ) / Min( DS ,Min( RMSe ,RMSe ) ) ) ) / MUM )", "obj1": 0.4898785425101215, "obj2": 0.4378831772971124}, {"determining": "( PN * ( FirstVNF_CPU * ( RRS * DDR ) ) )", "choosing": "( ( MUM * DS ) * ( MUR / CS ) )", "obj1": 0.44129554655870445, "obj2": 0.4975956153164376}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) - Min( RRS ,Max( ( FirstVNF_CPU - ( RRS / FirstVNF_Mem ) ),PN ) ) )", "choosing": "( ( Max( ( MLU + MUM ),Max( DS,Min( RMSe ,MUC ) ) ) * Min( ( RMSe * MUC ) ,( Min( CS ,( Min( MUR ,RMSe ) + Min( MLU ,RCSe ) ) ) * MUC ) ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,Max( Min( MUR ,RRSe ),( RCSe + RRSe ) ) ) )", "obj1": 0.3805668016194332, "obj2": 0.561239866507608}, {"determining": "( ( ( DDR / MRS ) * RRS ) + ( FirstVNF_CPU_Server + Min( Const ,Min( PN ,( DDR / ( FirstVNF_Mem_Server / Max( FirstVNF_Mem,CRS ) ) ) ) ) ) )", "choosing": "( Min( RCSe ,Max( Max( RCSe,( MUR / Max( ( Max( RRSe,RMSe ) / MLU ),CS ) ) ),( MUM - MUM ) ) ) * ( MUM * ( MUM * DS ) ) )", "obj1": 0.4331983805668016, "obj2": 0.5023306164232344}, {"determining": "( ( ( DDR / MRS ) * RRS ) + ( FirstVNF_CPU_Server + Min( Const ,Min( PN ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( ( MLU + MUM ),Max( DS,Min( RMSe ,MUC ) ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.25101214574898784, "obj2": 0.6858024994414539}, {"determining": "( Max( ( FirstVNF_CPU * AMS ),( AMS - MRS ) ) / ( ( FirstVNF_CPU / Min( RRS ,Max( ( FirstVNF_CPU - ( RRS / FirstVNF_Mem ) ),PN ) ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( MUM * ( MUM * DS ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.42105263157894735, "obj2": 0.5246338071356855}, {"determining": "( ( ( ( Const * Const ) * MRS ) * RRS ) + ( FirstVNF_RAM - ( BR / Max( Min( DDR ,ARS ),AMS ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( Max( CS,( Max( MUC,CS ) / MUR ) ) / RMSe ) )", "obj1": 0.3562753036437247, "obj2": 0.5922641861129635}, {"determining": "( ( ( FirstVNF_RAM / ( MRS / FirstVNF_CPU_Server ) ) * RRS ) + ( FirstVNF_RAM - ( BR / Max( Min( DDR ,ARS ),AMS ) ) ) )", "choosing": "( ( MUM - DS ) + ( MLU - RMSe ) )", "obj1": 0.11133603238866396, "obj2": 0.8578317371125181}, {"determining": "( Min( Max( FirstVNF_CPU_Server,AMS ) ,( ( Const * Const ) * MRS ) ) + ( ( DDR + BR ) - ( MRS / Const ) ) )", "choosing": "Max( ( MUC * RMSe ),Max( ( MUR * RCSe ),( MLU + ( MLU / CS ) ) ) )", "obj1": 0.2732793522267207, "obj2": 0.6607785837581133}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - Min( RRS ,AMS ) )", "choosing": "( ( MUM * ( MUM * DS ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.4392712550607287, "obj2": 0.49815915686910317}, {"determining": "( Max( Const,( ( PN / ( FirstVNF_Mem - Max( DDR,MDR ) ) ) / ( ( Min( Max( FirstVNF_CPU_Server,AMS ) ,( ( Const * Const ) * MRS ) ) + ( ( DDR + BR ) - ( MRS / Const ) ) ) / ARS ) ) ) - ( RRS - ( FirstVNF_CPU_Server / RRS ) ) )", "choosing": "( ( MLU / CS ) / ( Max( MLU,( Min( RRSe ,Min( RCSe ,RRSe ) ) / Min( ( MUR - RMSe ) ,Max( RCSe,CS ) ) ) ) * ( DS * DS ) ) )", "obj1": 0.09716599190283401, "obj2": 0.8648519650499774}, {"determining": "( Min( Max( FirstVNF_CPU_Server,AMS ) ,( ( Const * Const ) * MRS ) ) + ( ( DDR + BR ) - ( MRS / Const ) ) )", "choosing": "Max( ( MUC * RMSe ),Max( ( MUR * RCSe ),( MLU + ( MLU / CS ) ) ) )", "obj1": 0.2732793522267207, "obj2": 0.6607785837581133}, {"determining": "( Max( Const,( ( PN / ( FirstVNF_Mem - Max( DDR,MDR ) ) ) / ( ACS / ARS ) ) ) - ( RRS - ( FirstVNF_CPU_Server / RRS ) ) )", "choosing": "( ( ( Max( CS,RCSe ) / ( RMSe / MLU ) ) * ( ( MUC + CS ) * Max( MLU,CS ) ) ) / ( Max( MLU,( Min( RRSe ,Min( RCSe ,RRSe ) ) / Min( ( MUR - RMSe ) ,Max( RCSe,CS ) ) ) ) * ( DS * DS ) ) )", "obj1": 0.09109311740890688, "obj2": 0.8762623459419124}, {"determining": "( ( ( RRS * ARS ) - Max( MRS,Const ) ) / MRS )", "choosing": "( ( Min( ( Max( ( ( RMSe * RRSe ) / RMSe ),MUC ) + RMSe ) ,( Min( MUM ,MUR ) - ( MUM + MUR ) ) ) - DS ) + ( RMSe - RMSe ) )", "obj1": 0.16194331983805668, "obj2": 0.7433769962066203}, {"determining": "( RRS - Min( RRS ,AMS ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( ( MUR + ( ( DS * RMSe ) + ( RCSe + MUM ) ) ) + MUC ) ) ),( ( ( RRSe / MUR ) * Min( MLU ,CS ) ) * ( MUM - DS ) ) )", "obj1": 0.13157894736842105, "obj2": 0.8367993539564097}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - Min( DDR ,FirstVNF_CPU_Server ) ) ) - Min( RRS ,Max( ( FirstVNF_CPU - ( RRS / FirstVNF_Mem ) ),PN ) ) )", "choosing": "( ( Max( ( MLU + MUM ),Max( DS,Min( RMSe ,MUC ) ) ) * Min( ( RMSe * MUC ) ,( Min( CS ,RMSe ) * MUC ) ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.3805668016194332, "obj2": 0.561239866507608}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) * ( Max( ( ( ( Const * FirstVNF_RAM ) - ( MRS - MDR ) ) / Min( ACS ,FirstVNF_CPU_Server ) ),MRS ) - ( RRS - MRS ) ) )", "choosing": "( ( ( ( CS / ( ( DS * RMSe ) - ( DS + RMSe ) ) ) + Max( RMSe,MLU ) ) * ( MUM * DS ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.4008097165991903, "obj2": 0.5408057391202589}, {"determining": "( Min( FirstVNF_RAM_Server ,Max( MDR,Min( FirstVNF_RAM_Server ,( MRS * ( PN + ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ) ) ) + ( Const + Min( ( FirstVNF_Mem_Server + RRS ) ,CRS ) ) )", "choosing": "( ( Min( DS ,MUM ) * MUM ) * ( ( ( MLU / MUM ) - ( ( RRSe * ( Max( RMSe,Max( DS,RCSe ) ) - RMSe ) ) * Min( Max( Min( DS ,Max( MUC,CS ) ),( ( MLU + MUR ) + RCSe ) ) ,DS ) ) ) * Min( ( Max( Max( RMSe,( DS / MLU ) ),Max( MLU,MLU ) ) * MUM ) ,( MLU * CS ) ) ) )", "obj1": 0.12348178137651822, "obj2": 0.8376934810672492}, {"determining": "( ( ( Const - Min( ( ( MDR + PN ) * RRS ) ,( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( RRSe + MUC ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Max( MUR,DS ) ) ) )", "obj1": 0.2894736842105263, "obj2": 0.6409431557409647}, {"determining": "( ( RRS - ( ( FirstVNF_RAM / BR ) / ARS ) ) * ( RRS * DDR ) )", "choosing": "( ( MUM * ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) * Min( MLU ,DS ) ) ) * Min( ( DS * MLU ) ,RRSe ) )", "obj1": 0.4979757085020243, "obj2": 0.4350056331142813}, {"determining": "( ( ( Const - ( ( ( FirstVNF_RAM / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( Min( MUM ,MUR ) - ( CS * MUR ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Max( MUR,MUM ) ) ) )", "obj1": 0.2874493927125506, "obj2": 0.6455622852413466}, {"determining": "Min( Min( DDR ,FirstVNF_RAM ) ,Max( ( DDR * ( DDR + AMS ) ),MDR ) )", "choosing": "( ( MLU * DS ) * ( ( RMSe - ( RRSe * RCSe ) ) / CS ) )", "obj1": 0.23279352226720648, "obj2": 0.7182148629272157}, {"determining": "( ( ( DDR / MRS ) * RRS ) + ( FirstVNF_CPU_Server + Min( Const ,Min( PN ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM - DS ) + ( MLU - RMSe ) )", "obj1": 0.0951417004048583, "obj2": 0.8724266098412714}, {"determining": "( ( ( DDR / MRS ) * RRS ) + ( FirstVNF_RAM_Server - Min( MDR ,( ACS - FirstVNF_CPU ) ) ) )", "choosing": "( ( MUM * ( MUM * DS ) ) * Min( ( ( DS / Min( MLU ,( RCSe - ( CS * RMSe ) ) ) ) + ( RRSe + RCSe ) ) ,RRSe ) )", "obj1": 0.4331983805668016, "obj2": 0.5023306164232344}, {"determining": "( Max( ( FirstVNF_CPU * AMS ),( ( ( ( Const * FirstVNF_RAM ) - ( MRS - MDR ) ) / Min( ACS ,MRS ) ) - MRS ) ) / ( Max( FirstVNF_CPU_Server,RRS ) - ( Const - BR ) ) )", "choosing": "( ( MUM * ( MUM / MUC ) ) * ( MUR / CS ) )", "obj1": 0.305668016194332, "obj2": 0.6328737731990107}, {"determining": "( ( ( Const * FirstVNF_RAM ) - ( MRS - MDR ) ) / Min( ACS ,MRS ) )", "choosing": "( ( MUM * ( MUM * DS ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.42105263157894735, "obj2": 0.5246338071356855}, {"determining": "( Max( ( FirstVNF_CPU * AMS ),( AMS - MRS ) ) / ( Max( FirstVNF_CPU_Server,RRS ) - ( Const - BR ) ) )", "choosing": "( ( MUM * ( DS / MUC ) ) * ( MUR / CS ) )", "obj1": 0.4433198380566802, "obj2": 0.4819383867456228}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - Min( DDR ,FirstVNF_CPU_Server ) ) ) - Min( RRS ,Max( ( FirstVNF_CPU - ( RRS / FirstVNF_Mem ) ),PN ) ) )", "choosing": "( ( Max( ( MLU + MUM ),Max( DS,Min( RMSe ,MUC ) ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.4089068825910931, "obj2": 0.539703256659123}, {"determining": "Min( Max( ( ( ARS + FirstVNF_RAM_Server ) - ( ( MRS * ACS ) * RRS ) ),PN ) ,Min( Const ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( CS * ( DS * MUR ) ) * Min( ( RMSe * MUC ) ,( Min( CS ,RMSe ) * MUC ) ) ) * Min( ( Max( RCSe,CS ) * ( RRSe / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.2408906882591093, "obj2": 0.7078049192463606}, {"determining": "( ( ( Const * FirstVNF_RAM ) - ( MRS - MDR ) ) / Min( ACS ,MRS ) )", "choosing": "( ( MUM * ( DS / MUC ) ) * ( MUR / CS ) )", "obj1": 0.4433198380566802, "obj2": 0.4819383867456228}, {"determining": "( ( ( ( ARS * FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + Max( ( BR + FirstVNF_CPU ),Min( DDR ,FirstVNF_CPU_Server ) ) ) - Min( RRS ,( FirstVNF_CPU_Server - Max( Const,ARS ) ) ) )", "choosing": "( ( ( Max( RRSe,( ( MLU + MLU ) * ( ( RMSe - DS ) - Max( MUC,( RCSe + RCSe ) ) ) ) ) * RRSe ) - Min( ( ( MUC - MUM ) - RRSe ) ,RRSe ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.3805668016194332, "obj2": 0.561239866507608}, {"determining": "( ( ( FirstVNF_RAM / ( FirstVNF_CPU_Server / MRS ) ) * RRS ) + ( RRS / ARS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR * CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * Min( MUM ,MUR ) )", "obj1": 0.26720647773279355, "obj2": 0.666950034456656}, {"determining": "( ( FirstVNF_CPU_Server + Min( Const ,Min( PN ,FirstVNF_CPU_Server ) ) ) / ( FirstVNF_CPU - DDR ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( ( MUM * ( MUM * ( RRSe + ( Min( RMSe ,( MLU / RRSe ) ) * Min( MLU ,Max( MUC,RRSe ) ) ) ) ) ) / RMSe ) )", "obj1": 0.4109311740890688, "obj2": 0.5374612606828898}, {"determining": "( ( Min( Const ,FirstVNF_RAM_Server ) - ( Max( Min( DDR ,ARS ),AMS ) - FirstVNF_CPU ) ) / ( Max( ( FirstVNF_CPU * AMS ),( AMS - MRS ) ) - DDR ) )", "choosing": "Max( ( MUM * RMSe ),Max( ( MUR * RCSe ),( MLU + ( MLU / CS ) ) ) )", "obj1": 0.2935222672064777, "obj2": 0.6361187753873395}, {"determining": "( ( ( BR / Min( PN ,Max( FirstVNF_Mem_Server,BR ) ) ) - ( MRS - MDR ) ) / Min( ACS ,MRS ) )", "choosing": "( ( MUM * ( MUM * DS ) ) * Min( ( MLU + ( MUC - Max( CS,( Max( MUC,CS ) / MUR ) ) ) ) ,RRSe ) )", "obj1": 0.43724696356275305, "obj2": 0.4996545425643594}, {"determining": "( DDR / ( FirstVNF_CPU - DDR ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * Min( ( ( ( MUR * MUM ) * RMSe ) + ( CS + ( CS / RCSe ) ) ) ,MUR ) )", "obj1": 0.41295546558704455, "obj2": 0.5338362567535188}, {"determining": "( ( ( Const - ( ( ( FirstVNF_RAM / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( ( Min( ( ( RMSe / DS ) + RRSe ) ,( ( Min( MUC ,MUM ) * ( Max( DS,RCSe ) * RCSe ) ) + DS ) ) / ( RRSe * MUM ) ) / RMSe ) )", "obj1": 0.23684210526315788, "obj2": 0.7127164875848996}, {"determining": "( Max( Const,MRS ) + ( ( DDR + BR ) - ( MRS / Const ) ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( ( MUR + Min( RRSe ,MLU ) ) + MUC ) ) ),Min( Max( ( CS - MUM ),( MUM / MUM ) ) ,( Max( RCSe,MUM ) / ( MUM / MUC ) ) ) )", "obj1": 0.11336032388663968, "obj2": 0.8503604427588294}, {"determining": "( Max( ( FirstVNF_CPU * AMS ),( AMS - MRS ) ) / ( Max( FirstVNF_CPU_Server,RRS ) - ( Const - BR ) ) )", "choosing": "( ( MUM * ( DS / MUC ) ) * ( MUR / CS ) )", "obj1": 0.48380566801619435, "obj2": 0.4434151920630874}, {"determining": "( FirstVNF_RAM_Server - ( Max( ( DDR + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( Const * Min( RRS ,Max( FirstVNF_RAM,Max( FirstVNF_RAM,RRS ) ) ) ) ) )", "choosing": "( ( MUM * ( MUM * DS ) ) + ( MUR / CS ) )", "obj1": 0.4777327935222672, "obj2": 0.4467728328797138}, {"determining": "( PN * ( FirstVNF_CPU * ( RRS - ( BR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS / ( ( DS * RMSe ) - RCSe ) ) + Max( RMSe,MLU ) )", "obj1": 0.22672064777327935, "obj2": 0.7307279208821561}, {"determining": "( Max( Const,MRS ) - ( RRS - MRS ) )", "choosing": "( ( ( DS * RMSe ) - ( RCSe / Min( MLU ,DS ) ) ) / MUM )", "obj1": 0.4230769230769231, "obj2": 0.5213565651229484}, {"determining": "( Max( Const,MRS ) - ( RRS - ( FirstVNF_CPU_Server / RRS ) ) )", "choosing": "( ( MUM * ( MUM * DS ) ) + Max( RMSe,MLU ) )", "obj1": 0.46153846153846156, "obj2": 0.4640965331680502}, {"determining": "( ( ( RRS / ARS ) * ( ( FirstVNF_RAM - ( BR / Max( Min( DDR ,ARS ),AMS ) ) ) - Min( BR ,( Max( Const,MRS ) - ( ( AMS - Min( ARS ,BR ) ) - ( BR - ARS ) ) ) ) ) ) * PN )", "choosing": "( Min( ( Min( ( ( RRSe * RRSe ) / DS ) ,RMSe ) / MUC ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) / MUM )", "obj1": 0.34210526315789475, "obj2": 0.5964408829595438}, {"determining": "( ( ( ( ( ( Const * FirstVNF_RAM ) - ( MRS - MDR ) ) / Min( ACS ,FirstVNF_CPU_Server ) ) - ( ( ( FirstVNF_RAM / BR ) + RRS ) + ( ( AMS + DDR ) - ( Max( AMS,Min( DDR ,ARS ) ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( ( MLU - MUC ) - ( CS * MUR ) ) / ( ( MLU / ( ( MUM + MLU ) + MUM ) ) - ( ( CS * MLU ) - Max( MUR,MUM ) ) ) )", "obj1": 0.3340080971659919, "obj2": 0.6070796010864354}, {"determining": "( ( ( Const - ( ( ( FirstVNF_RAM / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( Max( DS,Min( RMSe ,MUC ) ) - ( RCSe / Min( DS ,Min( RMSe ,RMSe ) ) ) ) / MUM )", "obj1": 0.4716599190283401, "obj2": 0.4474053016364875}, {"determining": "( ( ( DDR + BR ) - ( MRS / Const ) ) / ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) )", "choosing": "( ( MUM - DS ) + ( RMSe - RMSe ) )", "obj1": 0.15991902834008098, "obj2": 0.8073871068064242}, {"determining": "Min( Max( Max( FirstVNF_CPU,Min( CRS ,Const ) ),PN ) ,Min( Const ,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( ( MLU + MUM ),Max( Min( RCSe ,Min( ( RMSe + ( MUM / CS ) ) ,RCSe ) ),DS ) ) * ( DS + Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.680323982311685}, {"determining": "( PN * ( FirstVNF_CPU * ( RRS - ( BR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Max( ( MLU + MUM ),Max( DS,Min( RMSe ,MUC ) ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.25101214574898784, "obj2": 0.6858024994414539}, {"determining": "Min( Max( MDR,PN ) ,Min( Const ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS * RMSe ) - ( RCSe / Min( MLU ,DS ) ) ) / MUM )", "obj1": 0.45951417004048584, "obj2": 0.47020073488337516}, {"determining": "( ( ( BR + FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU - DDR ) )", "choosing": "Max( ( ( ( ( MUM / MLU ) - MUC ) + ( DS + RMSe ) ) * ( CS / ( Max( MLU,MLU ) / ( MUR + MUR ) ) ) ),Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( ( MUR + ( RMSe + CS ) ) + MUC ) ) ),( Max( MUR,CS ) / ( RRSe + CS ) ) ) )", "obj1": 0.15384615384615385, "obj2": 0.8166649340721066}, {"determining": "Min( Min( DDR ,FirstVNF_RAM ) ,Max( ( DDR * ( DDR + AMS ) ),MDR ) )", "choosing": "( ( MLU * DS ) * ( ( RMSe - ( RRSe * RCSe ) ) / CS ) )", "obj1": 0.23279352226720648, "obj2": 0.7182148629272157}, {"determining": "( ( ( RRS / ARS ) * ( RRS - Min( Min( DDR ,FirstVNF_CPU_Server ) ,Min( MDR ,( ( DDR + MRS ) - FirstVNF_Mem_Server ) ) ) ) ) * PN )", "choosing": "( ( Max( DS,( RCSe + Min( DS ,MUM ) ) ) - ( RCSe / Min( DS ,Min( RMSe ,RMSe ) ) ) ) / MUM )", "obj1": 0.46356275303643724, "obj2": 0.4553655443543371}, {"determining": "( ( ( RRS / ARS ) * ( RRS - Min( Min( DDR ,FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) ) ) * PN )", "choosing": "( ( Max( DS,Min( RMSe ,MUC ) ) - ( RCSe / Min( DS ,Min( RMSe ,RMSe ) ) ) ) / MUM )", "obj1": 0.4716599190283401, "obj2": 0.4474053016364875}, {"determining": "( ( FirstVNF_Mem + MRS ) - Min( MDR ,( ( DDR + MRS ) - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( ( MUR + ( RMSe + ( RCSe + Min( DS ,MUM ) ) ) ) + MUC ) ) ),Min( Max( ( CS - MUM ),( MUM / MUM ) ) ,( ( DS * RMSe ) - RCSe ) ) )", "obj1": 0.13765182186234817, "obj2": 0.8299817193925182}, {"determining": "( PN * ( FirstVNF_CPU * ( RRS - ( BR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS * RMSe ) - ( RCSe / Min( MLU ,DS ) ) ) / MUM )", "obj1": 0.4230769230769231, "obj2": 0.5213565651229484}, {"determining": "( MRS + ( ( DDR + BR ) - ( MRS / ( BR - ( FirstVNF_CPU_Server + Min( Const ,Min( PN ,FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( MUM - ( RRSe * DS ) ) + ( MLU - RMSe ) )", "obj1": 0.1437246963562753, "obj2": 0.8265194332730639}, {"determining": "( PN * ( ( ( PN + Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - ( BR - ( FirstVNF_CPU_Server + Min( Const ,Min( PN ,FirstVNF_CPU_Server ) ) ) ) ) * FirstVNF_CPU ) )", "choosing": "( ( MLU - RMSe ) + ( MUM - ( RCSe * Max( DS,( MUR - Min( ( Min( RRSe ,MUC ) - Max( DS,RCSe ) ) ,Max( Min( MLU ,DS ),RMSe ) ) ) ) ) ) )", "obj1": 0.10728744939271255, "obj2": 0.8603510731690482}, {"determining": "( Min( Max( FirstVNF_CPU_Server,AMS ) ,( ( ( ( RRS + FirstVNF_Mem ) + ( FirstVNF_RAM_Server + BR ) ) * Const ) * MRS ) ) + ( ( DDR + BR ) - ( MRS / Const ) ) )", "choosing": "Max( ( Min( MUC ,MUM ) * ( Max( DS,RCSe ) * RCSe ) ),Max( ( MUR * RCSe ),( MLU + ( MLU / CS ) ) ) )", "obj1": 0.2732793522267207, "obj2": 0.6607785837581133}, {"determining": "( ( ( ( ( ( Const * FirstVNF_RAM ) - ( MRS - MDR ) ) / Min( ACS ,FirstVNF_CPU_Server ) ) - ( ( ( FirstVNF_RAM / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( Min( MUM ,MUR ) - ( CS * MUR ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - ( ( MUM / MLU ) - MUC ) ) ) )", "obj1": 0.3259109311740891, "obj2": 0.6154410826405077}, {"determining": "( ( ( Const - ( ( ( FirstVNF_RAM / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "Max( ( ( ( ( MUM / MLU ) - MUC ) + ( DS + RMSe ) ) * ( CS / ( Max( MLU,MLU ) / ( MUR + MUR ) ) ) ),Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( ( MUR + ( RMSe + CS ) ) + MUC ) ) ),( Max( MUR,CS ) / ( RRSe + CS ) ) ) )", "obj1": 0.13360323886639677, "obj2": 0.8365752757433005}, {"determining": "( ( ( FirstVNF_RAM / ( FirstVNF_CPU_Server / MRS ) ) * RRS ) + ( FirstVNF_RAM - ( BR / Max( Min( DDR ,( RRS + Min( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ,RRS ) ) ),AMS ) ) ) )", "choosing": "Max( ( Max( MUM,RCSe ) - ( ( CS / ( RRSe / RCSe ) ) * RRSe ) ),( MLU + MUC ) )", "obj1": 0.5, "obj2": 0.4338257796601976}, {"determining": "( ( ( FirstVNF_RAM / ( FirstVNF_CPU_Server / MRS ) ) * RRS ) + Max( FirstVNF_RAM,( BR / Max( Min( ( ( ( MRS - PN ) * BR ) * Min( Const ,ARS ) ) ,Max( DDR,FirstVNF_Mem ) ),AMS ) ) ) )", "choosing": "( ( Max( MUR,MUM ) / RMSe ) * Max( ( RRSe - RRSe ),( MUR * ( ( RCSe / ( CS / ( Max( DS,RMSe ) / MUM ) ) ) * ( ( RCSe * ( RMSe + ( MUM - MLU ) ) ) - ( ( CS / ( MUM / RCSe ) ) / MUC ) ) ) ) ) )", "obj1": 0.3117408906882591, "obj2": 0.6213289333214684}, {"determining": "( ( ( FirstVNF_RAM / ( FirstVNF_CPU_Server / MRS ) ) * RRS ) + Max( FirstVNF_RAM,( BR / Max( Min( ( ( ( MRS - PN ) * BR ) * Min( Const ,ARS ) ) ,Max( DDR,FirstVNF_Mem ) ),AMS ) ) ) )", "choosing": "( ( Max( MUR,MUM ) / RMSe ) * Max( ( RRSe - RRSe ),( MUR * ( ( RCSe / ( CS / ( Max( DS,RMSe ) / MUM ) ) ) * ( ( RCSe * ( RMSe + ( MUM - MLU ) ) ) - ( ( CS / ( MUM / RCSe ) ) / MUC ) ) ) ) ) )", "obj1": 0.3117408906882591, "obj2": 0.6213289333214684}, {"determining": "( ( ( FirstVNF_RAM / ( MRS / FirstVNF_CPU_Server ) ) * RRS ) + ( FirstVNF_RAM - ( BR / Max( Min( ( ( ( FirstVNF_Mem_Server / ARS ) * ( MRS - PN ) ) * PN ) ,DDR ),AMS ) ) ) )", "choosing": "( ( RCSe / ( RCSe * RCSe ) ) * Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( ( MUC + RMSe ) ,MUR ) - ( CS + MUR ) ) ) )", "obj1": 0.3117408906882591, "obj2": 0.6213289333214684}], "7": [{"determining": "Min( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ,( PN - ( Min( RRS ,FirstVNF_Mem_Server ) * Const ) ) )", "choosing": "Max( Min( Max( CS,Max( CS,CS ) ) ,MLU ),Min( MUM ,( DS * ( Min( ( RRSe / Min( CS ,MUM ) ) ,RRSe ) * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( DDR ,FirstVNF_RAM ) ,Max( ( ACS * ( Min( FirstVNF_Mem_Server ,CRS ) + AMS ) ),MDR ) )", "choosing": "( ( MLU * DS ) * ( ( Max( DS,MLU ) - ( RCSe * RCSe ) ) / CS ) )", "obj1": 0.23279352226720648, "obj2": 0.7182148629272157}, {"determining": "( ( ( AMS * ACS ) * ( RRS - ( AMS - FirstVNF_RAM_Server ) ) ) * PN )", "choosing": "( ( MUM * ( DS * MUM ) ) * ( ( DS + MLU ) / Min( DS ,DS ) ) )", "obj1": 0.4331983805668016, "obj2": 0.5023306164232344}, {"determining": "( ( FirstVNF_Mem + MRS ) - Min( MDR ,( ( DDR + MRS ) - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( ( MUR + ( RMSe + ( RCSe + Min( DS ,MUM ) ) ) ) + MUC ) ) ),Min( Max( ( CS - MUM ),( MUM / MUM ) ) ,( ( DS * RMSe ) - RCSe ) ) )", "obj1": 0.13765182186234817, "obj2": 0.8299817193925182}, {"determining": "( ( ( Min( DDR ,ARS ) - ( ( ( ( Min( FirstVNF_CPU_Server ,DDR ) / Min( DDR ,Const ) ) / BR ) - RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( Min( MUM ,MUR ) - ( CS * MLU ) ) / ( RMSe * MUC ) )", "obj1": 0.2793522267206478, "obj2": 0.64705514055472}, {"determining": "( Max( Const,MRS ) - ( RRS - ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - Min( RRS ,AMS ) ) ) )", "choosing": "( ( MUM * ( MUM * DS ) ) + ( MUR / CS ) )", "obj1": 0.4149797570850202, "obj2": 0.5292176185077342}, {"determining": "( ( ( RRS / ARS ) + Max( FirstVNF_CPU_Server,Const ) ) * ( FirstVNF_RAM / RRS ) )", "choosing": "( ( Max( DS,MLU ) - ( RCSe / Min( DS ,Min( ( Min( Min( MUR ,DS ) ,DS ) / RMSe ) ,RMSe ) ) ) ) / MUM )", "obj1": 0.4251012145748988, "obj2": 0.515040029031178}, {"determining": "( Max( Const,( ( PN + ( FirstVNF_Mem - ( Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ),BR ) / AMS ) ) ) / ( ( AMS - AMS ) / ARS ) ) ) - ( RRS - ( FirstVNF_CPU_Server / RRS ) ) )", "choosing": "( ( ( ( RMSe / MLU ) / Max( CS,RCSe ) ) * ( ( MUC + CS ) * Max( MLU,CS ) ) ) / ( ( MLU + ( ( MUR / Max( ( ( MUM * DS ) - Min( RCSe ,MUR ) ),RMSe ) ) / Min( ( MUR - RMSe ) ,Max( Min( RCSe ,( CS / MLU ) ),CS ) ) ) ) * ( DS * DS ) ) )", "obj1": 0.09109311740890688, "obj2": 0.8762623459419124}, {"determining": "( FirstVNF_RAM_Server - ( Max( ( DDR + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( Const * Min( RRS ,Max( FirstVNF_RAM,Max( FirstVNF_RAM,RRS ) ) ) ) ) )", "choosing": "( ( Max( ( MLU + MUM ),Max( DS,Min( RMSe ,MUC ) ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( Max( Min( MLU ,MLU ),Max( RRSe,MLU ) ) / RMSe ) ) ,( Min( Min( DS ,Min( RMSe ,RMSe ) ) ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.3603238866396761, "obj2": 0.56234031541536}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) - Min( RRS ,Max( ( FirstVNF_CPU - ( RRS / FirstVNF_Mem ) ),PN ) ) )", "choosing": "( ( Max( ( MLU + MUM ),Max( DS,Min( RMSe ,MUC ) ) ) * Min( ( RMSe * MUC ) ,( Min( CS ,( Min( MUR ,RMSe ) + Min( MLU ,RCSe ) ) ) * MUC ) ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,Max( Min( MUR ,RRSe ),( RCSe + RRSe ) ) ) )", "obj1": 0.3805668016194332, "obj2": 0.561239866507608}, {"determining": "( ( ( DDR / MRS ) * RRS ) + ( FirstVNF_CPU_Server + Min( Const ,Min( PN ,( DDR / ( FirstVNF_Mem_Server / Max( FirstVNF_Mem,CRS ) ) ) ) ) ) )", "choosing": "( Min( RCSe ,Max( Max( RCSe,( MUR / Max( ( Max( RRSe,RMSe ) / MLU ),CS ) ) ),( MUM - MUM ) ) ) * ( MUM * ( MUM * DS ) ) )", "obj1": 0.4331983805668016, "obj2": 0.5023306164232344}, {"determining": "( ( ( ( Const * Const ) * MRS ) * RRS ) + ( FirstVNF_RAM - ( BR / Max( Min( DDR ,ARS ),AMS ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( Max( CS,( Max( MUC,CS ) / MUR ) ) / RMSe ) )", "obj1": 0.3562753036437247, "obj2": 0.5922641861129635}, {"determining": "( Max( Const,( ( PN / ( FirstVNF_Mem - Max( DDR,MDR ) ) ) / ( ( Min( Max( FirstVNF_CPU_Server,AMS ) ,( ( Const * Const ) * MRS ) ) + ( ( DDR + BR ) - ( MRS / Const ) ) ) / ARS ) ) ) - ( RRS - ( FirstVNF_CPU_Server / RRS ) ) )", "choosing": "( ( MLU / CS ) / ( Max( MLU,( Min( RRSe ,Min( RCSe ,RRSe ) ) / Min( ( MUR - RMSe ) ,Max( RCSe,CS ) ) ) ) * ( DS * DS ) ) )", "obj1": 0.09716599190283401, "obj2": 0.8648519650499774}, {"determining": "( Max( Const,( ( PN / ( FirstVNF_Mem - Max( DDR,MDR ) ) ) / ( ACS / ARS ) ) ) - ( RRS - ( FirstVNF_CPU_Server / RRS ) ) )", "choosing": "( ( ( Max( CS,RCSe ) / ( RMSe / MLU ) ) * ( ( MUC + CS ) * Max( MLU,CS ) ) ) / ( Max( MLU,( Min( RRSe ,Min( RCSe ,RRSe ) ) / Min( ( MUR - RMSe ) ,Max( RCSe,CS ) ) ) ) * ( DS * DS ) ) )", "obj1": 0.09109311740890688, "obj2": 0.8762623459419124}, {"determining": "( ( ( RRS * ARS ) - Max( MRS,Const ) ) / MRS )", "choosing": "( ( Min( ( Max( ( ( RMSe * RRSe ) / RMSe ),MUC ) + RMSe ) ,( Min( MUM ,MUR ) - ( MUM + MUR ) ) ) - DS ) + ( RMSe - RMSe ) )", "obj1": 0.16194331983805668, "obj2": 0.7433769962066203}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - Min( DDR ,FirstVNF_CPU_Server ) ) ) - Min( RRS ,Max( ( FirstVNF_CPU - ( RRS / FirstVNF_Mem ) ),PN ) ) )", "choosing": "( ( Max( ( MLU + MUM ),Max( DS,Min( RMSe ,MUC ) ) ) * Min( ( RMSe * MUC ) ,( Min( CS ,RMSe ) * MUC ) ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.3805668016194332, "obj2": 0.561239866507608}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) * ( Max( ( ( ( Const * FirstVNF_RAM ) - ( MRS - MDR ) ) / Min( ACS ,FirstVNF_CPU_Server ) ),MRS ) - ( RRS - MRS ) ) )", "choosing": "( ( ( ( CS / ( ( DS * RMSe ) - ( DS + RMSe ) ) ) + Max( RMSe,MLU ) ) * ( MUM * DS ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.4008097165991903, "obj2": 0.5408057391202589}, {"determining": "( Min( FirstVNF_RAM_Server ,Max( MDR,Min( FirstVNF_RAM_Server ,( MRS * ( PN + ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ) ) ) + ( Const + Min( ( FirstVNF_Mem_Server + RRS ) ,CRS ) ) )", "choosing": "( ( Min( DS ,MUM ) * MUM ) * ( ( ( MLU / MUM ) - ( ( RRSe * ( Max( RMSe,Max( DS,RCSe ) ) - RMSe ) ) * Min( Max( Min( DS ,Max( MUC,CS ) ),( ( MLU + MUR ) + RCSe ) ) ,DS ) ) ) * Min( ( Max( Max( RMSe,( DS / MLU ) ),Max( MLU,MLU ) ) * MUM ) ,( MLU * CS ) ) ) )", "obj1": 0.12348178137651822, "obj2": 0.8376934810672492}, {"determining": "( ( ( Const - Min( ( ( MDR + PN ) * RRS ) ,( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( RRSe + MUC ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Max( MUR,DS ) ) ) )", "obj1": 0.2894736842105263, "obj2": 0.6409431557409647}, {"determining": "Min( Min( DDR ,FirstVNF_RAM ) ,Max( ( DDR * ( DDR + AMS ) ),MDR ) )", "choosing": "( ( MLU * DS ) * ( ( RMSe - ( RRSe * RCSe ) ) / CS ) )", "obj1": 0.23279352226720648, "obj2": 0.7182148629272157}, {"determining": "( ( ( DDR / MRS ) * RRS ) + ( FirstVNF_CPU_Server + Min( Const ,Min( PN ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM - DS ) + ( MLU - RMSe ) )", "obj1": 0.0951417004048583, "obj2": 0.8724266098412714}, {"determining": "( ( ( DDR / MRS ) * RRS ) + ( FirstVNF_RAM_Server - Min( MDR ,( ACS - FirstVNF_CPU ) ) ) )", "choosing": "( ( MUM * ( MUM * DS ) ) * Min( ( ( DS / Min( MLU ,( RCSe - ( CS * RMSe ) ) ) ) + ( RRSe + RCSe ) ) ,RRSe ) )", "obj1": 0.4331983805668016, "obj2": 0.5023306164232344}, {"determining": "Min( Max( ( ( ARS + FirstVNF_RAM_Server ) - ( ( MRS * ACS ) * RRS ) ),PN ) ,Min( Const ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( CS * ( DS * MUR ) ) * Min( ( RMSe * MUC ) ,( Min( CS ,RMSe ) * MUC ) ) ) * Min( ( Max( RCSe,CS ) * ( RRSe / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.2408906882591093, "obj2": 0.7078049192463606}, {"determining": "( ( ( ( ARS * FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + Max( ( BR + FirstVNF_CPU ),Min( DDR ,FirstVNF_CPU_Server ) ) ) - Min( RRS ,( FirstVNF_CPU_Server - Max( Const,ARS ) ) ) )", "choosing": "( ( ( Max( RRSe,( ( MLU + MLU ) * ( ( RMSe - DS ) - Max( MUC,( RCSe + RCSe ) ) ) ) ) * RRSe ) - Min( ( ( MUC - MUM ) - RRSe ) ,RRSe ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.3805668016194332, "obj2": 0.561239866507608}, {"determining": "( ( Min( Const ,FirstVNF_RAM_Server ) - ( Max( Min( DDR ,ARS ),AMS ) - FirstVNF_CPU ) ) / ( Max( ( FirstVNF_CPU * AMS ),( AMS - MRS ) ) - DDR ) )", "choosing": "Max( ( MUM * RMSe ),Max( ( MUR * RCSe ),( MLU + ( MLU / CS ) ) ) )", "obj1": 0.2935222672064777, "obj2": 0.6361187753873395}, {"determining": "( DDR / ( FirstVNF_CPU - DDR ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * Min( ( ( ( MUR * MUM ) * RMSe ) + ( CS + ( CS / RCSe ) ) ) ,MUR ) )", "obj1": 0.41295546558704455, "obj2": 0.5338362567535188}, {"determining": "( ( ( Const - ( ( ( FirstVNF_RAM / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( ( Min( ( ( RMSe / DS ) + RRSe ) ,( ( Min( MUC ,MUM ) * ( Max( DS,RCSe ) * RCSe ) ) + DS ) ) / ( RRSe * MUM ) ) / RMSe ) )", "obj1": 0.23684210526315788, "obj2": 0.7127164875848996}, {"determining": "( ( ( RRS / ARS ) * ( ( FirstVNF_RAM - ( BR / Max( Min( DDR ,ARS ),AMS ) ) ) - Min( BR ,( Max( Const,MRS ) - ( ( AMS - Min( ARS ,BR ) ) - ( BR - ARS ) ) ) ) ) ) * PN )", "choosing": "( Min( ( Min( ( ( RRSe * RRSe ) / DS ) ,RMSe ) / MUC ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) / MUM )", "obj1": 0.34210526315789475, "obj2": 0.5964408829595438}, {"determining": "( ( ( ( ( ( Const * FirstVNF_RAM ) - ( MRS - MDR ) ) / Min( ACS ,FirstVNF_CPU_Server ) ) - ( ( ( FirstVNF_RAM / BR ) + RRS ) + ( ( AMS + DDR ) - ( Max( AMS,Min( DDR ,ARS ) ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( ( MLU - MUC ) - ( CS * MUR ) ) / ( ( MLU / ( ( MUM + MLU ) + MUM ) ) - ( ( CS * MLU ) - Max( MUR,MUM ) ) ) )", "obj1": 0.3340080971659919, "obj2": 0.6070796010864354}, {"determining": "Min( Min( DDR ,FirstVNF_RAM ) ,Max( ( DDR * ( DDR + AMS ) ),MDR ) )", "choosing": "( ( MLU * DS ) * ( ( RMSe - ( RRSe * RCSe ) ) / CS ) )", "obj1": 0.23279352226720648, "obj2": 0.7182148629272157}, {"determining": "( ( FirstVNF_Mem + MRS ) - Min( MDR ,( ( DDR + MRS ) - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( ( MUR + ( RMSe + ( RCSe + Min( DS ,MUM ) ) ) ) + MUC ) ) ),Min( Max( ( CS - MUM ),( MUM / MUM ) ) ,( ( DS * RMSe ) - RCSe ) ) )", "obj1": 0.13765182186234817, "obj2": 0.8299817193925182}, {"determining": "( PN * ( ( ( PN + Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - ( BR - ( FirstVNF_CPU_Server + Min( Const ,Min( PN ,FirstVNF_CPU_Server ) ) ) ) ) * FirstVNF_CPU ) )", "choosing": "( ( MLU - RMSe ) + ( MUM - ( RCSe * Max( DS,( MUR - Min( ( Min( RRSe ,MUC ) - Max( DS,RCSe ) ) ,Max( Min( MLU ,DS ),RMSe ) ) ) ) ) ) )", "obj1": 0.10728744939271255, "obj2": 0.8603510731690482}, {"determining": "( ( ( FirstVNF_RAM / ( FirstVNF_CPU_Server / MRS ) ) * RRS ) + Max( FirstVNF_RAM,( BR / Max( Min( ( ( ( MRS - PN ) * BR ) * Min( Const ,ARS ) ) ,Max( DDR,FirstVNF_Mem ) ),AMS ) ) ) )", "choosing": "( ( Max( MUR,MUM ) / RMSe ) * Max( ( RRSe - RRSe ),( MUR * ( ( RCSe / ( CS / ( Max( DS,RMSe ) / MUM ) ) ) * ( ( RCSe * ( RMSe + ( MUM - MLU ) ) ) - ( ( CS / ( MUM / RCSe ) ) / MUC ) ) ) ) ) )", "obj1": 0.3117408906882591, "obj2": 0.6213289333214684}, {"determining": "( ( ( FirstVNF_RAM / ( FirstVNF_CPU_Server / MRS ) ) * RRS ) + Max( FirstVNF_RAM,( BR / Max( Min( ( ( ( MRS - PN ) * BR ) * Min( Const ,ARS ) ) ,Max( DDR,FirstVNF_Mem ) ),AMS ) ) ) )", "choosing": "( ( Max( MUR,MUM ) / RMSe ) * Max( ( RRSe - RRSe ),( MUR * ( ( RCSe / ( CS / ( Max( DS,RMSe ) / MUM ) ) ) * ( ( RCSe * ( RMSe + ( MUM - MLU ) ) ) - ( ( CS / ( MUM / RCSe ) ) / MUC ) ) ) ) ) )", "obj1": 0.3117408906882591, "obj2": 0.6213289333214684}, {"determining": "( ( ( FirstVNF_RAM / ( MRS / FirstVNF_CPU_Server ) ) * RRS ) + ( FirstVNF_RAM - ( BR / Max( Min( ( ( ( FirstVNF_Mem_Server / ARS ) * ( MRS - PN ) ) * PN ) ,DDR ),AMS ) ) ) )", "choosing": "( ( RCSe / ( RCSe * RCSe ) ) * Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( ( MUC + RMSe ) ,MUR ) - ( CS + MUR ) ) ) )", "obj1": 0.3117408906882591, "obj2": 0.6213289333214684}, {"determining": "( PN * ( ( RRS - ( ( CRS - ( BR - RRS ) ) - FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) )", "choosing": "( ( MUM * ( MUM * MLU ) ) + ( CS * ( RMSe / ( RMSe + CS ) ) ) )", "obj1": 0.4149797570850202, "obj2": 0.5292176185077342}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - Min( RRS ,AMS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( ( MUC + RMSe ) ,MUR ) - ( CS + MUR ) ) ) * ( Max( MUR,MUM ) / RMSe ) )", "obj1": 0.3117408906882591, "obj2": 0.6213289333214684}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) * ( Max( ( Min( ( ( PN * PN ) * PN ) ,ARS ) / ( ACS / FirstVNF_CPU_Server ) ),MRS ) - ( RRS - MRS ) ) )", "choosing": "( ( ( ( CS / ( ( Min( ( RMSe + MUC ) ,( RMSe + RRSe ) ) - ( CS / MUR ) ) - ( DS + RMSe ) ) ) + Max( RMSe,MLU ) ) * ( MUM * DS ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.4291497975708502, "obj2": 0.5094942344663742}, {"determining": "( ( ( FirstVNF_RAM / ( MRS / FirstVNF_CPU_Server ) ) * RRS ) + ( FirstVNF_RAM - ( BR / Max( Min( ( ( ( MRS - PN ) * ( RRS - MRS ) ) * PN ) ,ARS ),AMS ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( ( ( DS * RMSe ) + RMSe ) ,MUR ) - ( CS + MUR ) ) ) * ( Max( MUR,MUM ) / RMSe ) )", "obj1": 0.3117408906882591, "obj2": 0.6213289333214684}, {"determining": "( PN * ( FirstVNF_CPU * ( RRS - ( BR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUM * ( MUM * DS ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.4331983805668016, "obj2": 0.5023306164232344}, {"determining": "( ( ( DDR / MRS ) * RRS ) + ( FirstVNF_CPU_Server + Min( Const ,Min( PN ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM * ( MUM * DS ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.4331983805668016, "obj2": 0.5023306164232344}, {"determining": "Min( Max( ( FirstVNF_CPU * ( RRS - ( BR - FirstVNF_RAM_Server ) ) ),PN ) ,Min( Const ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUM * ( MUM * DS ) ) + ( MUR / CS ) )", "obj1": 0.4149797570850202, "obj2": 0.5292176185077342}, {"determining": "( ( ( FirstVNF_RAM / ( MRS / FirstVNF_CPU_Server ) ) * RRS ) + ( FirstVNF_RAM - ( BR / Max( Min( ( ( RRS * BR ) * PN ) ,ARS ),AMS ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( ( MUC + MLU ) ,MUR ) - ( CS + MUR ) ) ) * ( Max( MUR,MUM ) / RMSe ) )", "obj1": 0.31781376518218624, "obj2": 0.6145024511918977}, {"determining": "( ( ( FirstVNF_RAM / ( MRS / FirstVNF_CPU_Server ) ) * RRS ) + ( FirstVNF_RAM - ( BR / Max( Min( ( ( ( MRS - PN ) * BR ) * PN ) ,ARS ),AMS ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( ( MUC + RMSe ) ,MUR ) - ( CS + MUR ) ) ) * ( Max( MUR,MUM ) / RMSe ) )", "obj1": 0.3117408906882591, "obj2": 0.6213289333214684}, {"determining": "( Max( Const,MRS ) - ( RRS - ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - Min( ( BR - ( FirstVNF_CPU_Server + Min( Const ,Min( PN ,FirstVNF_CPU_Server ) ) ) ) ,AMS ) ) ) )", "choosing": "( ( MUM * ( MUM * DS ) ) + ( RMSe / CS ) )", "obj1": 0.4271255060728745, "obj2": 0.5141438024521037}, {"determining": "( Max( Const,MRS ) - ( RRS - ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - Min( RRS ,AMS ) ) ) )", "choosing": "( ( MUM * ( MUM * DS ) ) + ( MUR / CS ) )", "obj1": 0.4149797570850202, "obj2": 0.5292176185077342}, {"determining": "( Max( ( Max( DDR,FirstVNF_Mem_Server ) - Const ),( ( PN / ( FirstVNF_Mem - Max( DDR,MDR ) ) ) / ( ( Min( Max( FirstVNF_CPU_Server,AMS ) ,( ( Const * Const ) * MRS ) ) + ( ( DDR + BR ) - ( MRS / Const ) ) ) / ARS ) ) ) - ( RRS - ( FirstVNF_CPU_Server * RRS ) ) )", "choosing": "( ( MLU / ( MUM + MLU ) ) / ( Max( MLU,( Min( RRSe ,Min( RCSe ,RRSe ) ) / Min( ( MUR - RMSe ) ,Max( RCSe,CS ) ) ) ) * ( DS * DS ) ) )", "obj1": 0.09716599190283401, "obj2": 0.8648519650499774}, {"determining": "( PN * ( ( ACS - BR ) + ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe - ( RMSe * Max( MUC,RMSe ) ) ) / Max( MUC,CS ) ) / RMSe )", "obj1": 0.4190283400809717, "obj2": 0.5167748389790919}, {"determining": "( ( ( FirstVNF_RAM / Min( MRS ,FirstVNF_CPU_Server ) ) * RRS ) + ( Min( MRS ,RRS ) + CRS ) )", "choosing": "( ( MUM - DS ) + ( MLU - ( MUM * Max( ( ( RCSe / ( ( CS - MUC ) * DS ) ) + ( CS * ( ( MLU - MUM ) / ( RMSe / DS ) ) ) ),MUR ) ) ) )", "obj1": 0.1417004048582996, "obj2": 0.8217214132094933}, {"determining": "( ( ( BR / Min( PN ,Max( FirstVNF_Mem_Server,BR ) ) ) - ( MRS - MDR ) ) / Min( ACS ,MRS ) )", "choosing": "Max( ( Min( MUC ,MUM ) * ( Max( DS,RCSe ) * RCSe ) ),Max( ( MUR * RCSe ),( MLU + ( MLU / CS ) ) ) )", "obj1": 0.27530364372469635, "obj2": 0.6528215277750281}, {"determining": "( ( ( DDR / MRS ) * RRS ) + ( FirstVNF_CPU_Server + Min( Const ,Min( PN ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( ( MLU + MUM ),Max( DS,Min( RMSe ,MUC ) ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.6760566681379845}, {"determining": "( ( ( DDR + BR ) - ( MRS / Const ) ) + Min( ARS ,( Min( PN ,FirstVNF_CPU ) - RRS ) ) )", "choosing": "( Min( ( DS - RRSe ) ,( ( MUM - MUR ) - ( CS + MUR ) ) ) * ( Min( DS ,MUC ) * MUM ) )", "obj1": 0.12348178137651822, "obj2": 0.8376934810672492}, {"determining": "( Min( Max( MDR,AMS ) ,CRS ) + ( ( DDR + BR ) - ( MRS / Const ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR * CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( Min( DS ,MUC ) * MUM ) )", "obj1": 0.12348178137651822, "obj2": 0.8376934810672492}, {"determining": "( PN * ( FirstVNF_CPU * ( RRS - ( BR - ( FirstVNF_CPU_Server + Min( Min( PN ,FirstVNF_CPU_Server ) ,( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( ( ( ( Max( Min( MUR ,MUM ),CS ) + ( ( RMSe - Min( MUC ,CS ) ) + DS ) ) / MUM ) + DS ) + ( MUM / MUR ) ) + ( MLU - RMSe ) )", "obj1": 0.10728744939271255, "obj2": 0.8603510731690482}, {"determining": "( Max( Const,MRS ) + ( ( DDR + BR ) - ( MRS / Const ) ) )", "choosing": "( ( MUM * ( MUM * DS ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.4331983805668016, "obj2": 0.5023306164232344}, {"determining": "( ( ( Const - ( ( ( FirstVNF_RAM / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),( DDR / MRS ) ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( ( Min( ( ( RMSe / DS ) + RRSe ) ,( ( Min( RRSe ,MUM ) * ( Max( DS,RCSe ) * RCSe ) ) + DS ) ) / ( RRSe * MUM ) ) / RMSe ) )", "obj1": 0.22064777327935223, "obj2": 0.7231177889444749}, {"determining": "( ( ( Const - ( ( ( FirstVNF_RAM / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( ( Min( ( ( RMSe / DS ) + RRSe ) ,( ( Min( MUC ,MUM ) * ( Max( DS,RCSe ) * RCSe ) ) + DS ) ) / ( RRSe * MUM ) ) / RMSe ) )", "obj1": 0.23684210526315788, "obj2": 0.7127164875848996}, {"determining": "( ( ( DDR / PN ) * RRS ) + Max( ARS,ARS ) )", "choosing": "( ( MUM / ( MUR * MLU ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.4331983805668016, "obj2": 0.5023306164232344}, {"determining": "( ( ( Const - ( ( ( FirstVNF_RAM / BR ) * Min( Const ,FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( Min( MUM ,MUR ) - ( CS * MUR ) ) / DS )", "obj1": 0.21052631578947367, "obj2": 0.7236407241852344}, {"determining": "( ( ( RRS / ARS ) + Max( FirstVNF_CPU_Server,Const ) ) * ( FirstVNF_RAM / RRS ) )", "choosing": "( ( Max( DS,MLU ) - ( RCSe / Min( DS ,Min( ( Min( Min( MUR ,DS ) ,DS ) / RMSe ) ,RMSe ) ) ) ) / MUM )", "obj1": 0.38866396761133604, "obj2": 0.5425461930298013}, {"determining": "( ( ( RRS / ARS ) + Max( FirstVNF_CPU_Server,Const ) ) * ( FirstVNF_RAM / RRS ) )", "choosing": "( ( Max( DS,MLU ) - ( RCSe / Min( DS ,Min( ( Min( Min( MUR ,DS ) ,DS ) / RMSe ) ,RMSe ) ) ) ) / MUM )", "obj1": 0.38866396761133604, "obj2": 0.5425461930298013}, {"determining": "( ( ( RRS / ARS ) + Max( FirstVNF_CPU_Server,Const ) ) * ( FirstVNF_RAM / RRS ) )", "choosing": "( ( Max( DS,MLU ) - ( RCSe / Min( DS ,Min( ( Min( Min( MUR ,DS ) ,DS ) / RMSe ) ,RMSe ) ) ) ) / MUM )", "obj1": 0.38866396761133604, "obj2": 0.5425461930298013}, {"determining": "( ( ( RRS / ARS ) + Max( FirstVNF_CPU_Server,Const ) ) * PN )", "choosing": "( ( Max( DS,MLU ) - ( RCSe / Min( DS ,Min( ( RCSe * ( CS + ( MUM * RCSe ) ) ) ,RMSe ) ) ) ) / MUM )", "obj1": 0.38866396761133604, "obj2": 0.5425461930298013}, {"determining": "( ( ( ( ( ( Const * FirstVNF_RAM ) - ( MRS - MDR ) ) / Min( ACS ,FirstVNF_CPU_Server ) ) - ( ( ( FirstVNF_RAM / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( Min( MUM ,MUR ) - ( CS * MUR ) ) / ( Min( MLU ,( ( MUM + MLU ) + MUM ) ) - ( ( CS * MLU ) - Max( MUR,MUM ) ) ) )", "obj1": 0.291497975708502, "obj2": 0.6364219843829866}, {"determining": "( Max( Const,( ( PN / ( Min( RRS ,Min( MRS ,Max( PN,MDR ) ) ) - Max( DDR,MDR ) ) ) / ( ACS / ARS ) ) ) - ( RRS - ( MDR / RRS ) ) )", "choosing": "( MLU / ( Max( MLU,( Min( RRSe ,( ( RCSe / ( RRSe + RRSe ) ) - ( Min( RRSe ,RRSe ) * ( CS + MUM ) ) ) ) / Min( ( MUR - RMSe ) ,Max( RCSe,CS ) ) ) ) * ( DS * MUR ) ) )", "obj1": 0.08704453441295547, "obj2": 0.8818891068121525}, {"determining": "( Max( Const,( ( PN / ( FirstVNF_Mem - Max( DDR,MDR ) ) ) / ( ACS / ARS ) ) ) - ( RRS - ( FirstVNF_CPU_Server / RRS ) ) )", "choosing": "( ( ( Max( CS,RCSe ) / ( RMSe / MLU ) ) * ( ( MUC + CS ) * Max( MLU,CS ) ) ) / ( Max( MLU,( Min( RRSe ,Min( RCSe ,RRSe ) ) / Min( ( MUR - RMSe ) ,Max( RCSe,CS ) ) ) ) * ( DS * DS ) ) )", "obj1": 0.09109311740890688, "obj2": 0.8762623459419124}, {"determining": "( ( ( ( ( ( Const * FirstVNF_RAM ) - ( MRS - MDR ) ) / Min( ACS ,FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM - ( ( Min( DDR ,FirstVNF_RAM_Server ) + AMS ) / BR ) ) + ( ( FirstVNF_RAM / BR ) * RRS ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( MLU * DS ) * ( ( RMSe - ( MUM * ( MUR / Min( ( MUC / RMSe ) ,CS ) ) ) ) / CS ) )", "obj1": 0.23279352226720648, "obj2": 0.7182148629272157}, {"determining": "( ( ( Min( DDR ,ARS ) - ( ( ( FirstVNF_RAM / BR ) * RRS ) + ( ( FirstVNF_Mem_Server / Max( FirstVNF_Mem,CRS ) ) - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( Min( MUM ,MUR ) - ( CS * MUR ) ) / Min( Max( Max( RCSe,( MUR / Max( ( Max( RRSe,RMSe ) / MLU ),CS ) ) ),( MUM - MUM ) ) ,CS ) )", "obj1": 0.30364372469635625, "obj2": 0.6222126590574331}, {"determining": "( ( ( DDR / MRS ) * RRS ) + ( FirstVNF_CPU_Server + Min( Const ,Min( PN ,( DDR / ( FirstVNF_Mem_Server / Max( FirstVNF_Mem,CRS ) ) ) ) ) ) )", "choosing": "( ( Min( MUM ,MUR ) - ( CS * MUR ) ) / Min( RCSe ,CS ) )", "obj1": 0.2732793522267207, "obj2": 0.658134193922357}, {"determining": "( Min( ACS ,ACS ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) )", "choosing": "( ( ( DS + RCSe ) * MUM ) * ( Min( DS ,MUM ) * MUM ) )", "obj1": 0.11336032388663968, "obj2": 0.8448679462875653}, {"determining": "( ( ( Const * FirstVNF_RAM ) - ( MRS - MDR ) ) / Min( ACS ,( BR - FirstVNF_RAM ) ) )", "choosing": "( Min( ( MLU / MUR ) ,DS ) * Max( Min( DS ,MUC ),MUM ) )", "obj1": 0.10931174089068826, "obj2": 0.8531920597582475}, {"determining": "( ( ( BR / Min( Max( ( RRS - ( BR - MDR ) ),BR ) ,PN ) ) - ( FirstVNF_RAM_Server * Min( ( ( Max( BR,( ACS + BR ) ) - FirstVNF_RAM_Server ) - FirstVNF_RAM ) ,( FirstVNF_Mem_Server + Const ) ) ) ) / Min( ACS ,MRS ) )", "choosing": "( ( MUM * ( MUM * RRSe ) ) * ( CS + MUM ) )", "obj1": 0.4089068825910931, "obj2": 0.5347641667123357}, {"determining": "( Min( AMS ,MRS ) / Max( Max( Max( Max( FirstVNF_RAM,FirstVNF_CPU_Server ),( MDR - MRS ) ),( ( FirstVNF_RAM + AMS ) - ( FirstVNF_CPU - FirstVNF_Mem ) ) ),( Min( ( MRS - Const ) ,( FirstVNF_RAM - FirstVNF_Mem ) ) / ( Max( BR,MRS ) * ( Const * MDR ) ) ) ) )", "choosing": "( ( Max( ( MLU + MUM ),Max( DS,Min( RMSe ,MUC ) ) ) * Min( ( RMSe * MUC ) ,( Min( CS ,RMSe ) * MUC ) ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.2611336032388664, "obj2": 0.669715761435638}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - Min( DDR ,FirstVNF_CPU_Server ) ) ) - Min( RRS ,Max( ( FirstVNF_CPU - ( RRS / FirstVNF_Mem ) ),PN ) ) )", "choosing": "( ( Max( ( MLU + MUM ),Max( DS,Min( RMSe ,MUC ) ) ) * Min( ( RMSe * MUC ) ,( Min( CS ,RMSe ) * MUC ) ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.3805668016194332, "obj2": 0.561239866507608}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - Min( MRS ,Min( DDR ,Max( ACS,DDR ) ) ) ) / Min( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) ,MRS ) ) - ( CRS + ( Min( BR ,Min( FirstVNF_RAM_Server ,MDR ) ) / CRS ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( Min( ( ( CS + Max( RRSe,Max( Min( RRSe ,DS ),( RRSe + MUM ) ) ) ) * ( MUM / ( MUM * ( Min( CS ,MUM ) + Min( DS ,MLU ) ) ) ) ) ,MUR ) - ( CS * CS ) ) / ( Min( MLU ,( ( MUM + Max( MLU,MUC ) ) + MUM ) ) - ( ( CS * Max( MUM,( RMSe * ( MLU + ( RMSe - RCSe ) ) ) ) ) - Max( MLU,RCSe ) ) ) )", "obj1": 0.3340080971659919, "obj2": 0.6070796010864354}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - Min( DDR ,FirstVNF_CPU_Server ) ) ) - Min( RRS ,Max( ( ( PN * ( FirstVNF_CPU * ( RRS * DDR ) ) ) - ( RRS / FirstVNF_Mem ) ),PN ) ) )", "choosing": "( ( Max( ( MLU + MUM ),Max( MUM,Min( RMSe ,MUC ) ) ) * Min( ( RMSe * MUC ) ,( Min( CS ,RMSe ) * MUC ) ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.38461538461538464, "obj2": 0.5555809478631527}, {"determining": "( ( FirstVNF_Mem + MRS ) - Min( MDR ,( ( DDR + MRS ) - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( ( MUR + ( RMSe + ( RCSe + Min( DS ,MUM ) ) ) ) + MUC ) ) ),Min( Max( ( CS - MUM ),( MUM / MUM ) ) ,( ( DS * RMSe ) - RCSe ) ) )", "obj1": 0.13765182186234817, "obj2": 0.8299817193925182}, {"determining": "( ( ( Const - ( ( ( FirstVNF_RAM / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( Min( MUM ,MUR ) - ( CS * MUR ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Max( MUR,MUM ) ) ) )", "obj1": 0.2894736842105263, "obj2": 0.6409431557409647}, {"determining": "( ( ( Const - ( ( Max( FirstVNF_RAM,RRS ) * RRS ) + ( FirstVNF_RAM - ( Max( AMS,Min( DDR ,ARS ) ) / BR ) ) ) ) - ( FirstVNF_Mem_Server - Const ) ) / Min( ACS ,MRS ) )", "choosing": "( ( Min( MUM ,MUR ) - ( MUM * MUR ) ) / ( Min( DS ,Min( RMSe ,RMSe ) ) - ( ( CS * MLU ) - Max( MUR,( CS / MUR ) ) ) ) )", "obj1": 0.2854251012145749, "obj2": 0.6413330345966136}, {"determining": "( FirstVNF_RAM_Server - ( Max( ( DDR + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( Const * Min( RRS ,Max( FirstVNF_RAM,Max( FirstVNF_RAM,RRS ) ) ) ) ) )", "choosing": "( ( Max( ( MLU + MUM ),Max( DS,Min( RMSe ,MUC ) ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( Max( Min( MLU ,MLU ),Max( RRSe,MLU ) ) / RMSe ) ) ,( Min( Min( DS ,Min( RMSe ,RMSe ) ) ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.3603238866396761, "obj2": 0.56234031541536}, {"determining": "( ( ( Const - ( ( ( FirstVNF_RAM / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( Min( MUM ,MUR ) - ( CS * MUR ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Max( MUR,MUM ) ) ) )", "obj1": 0.2894736842105263, "obj2": 0.6409431557409647}, {"determining": "( ( FirstVNF_Mem + MRS ) - Min( MDR ,( ( DDR + MRS ) - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( ( MUR + ( RMSe + ( RCSe + Min( DS ,MUM ) ) ) ) + MUC ) ) ),Min( Max( ( CS - MUM ),( MUM / MUM ) ) ,( ( DS * RMSe ) - RCSe ) ) )", "obj1": 0.13765182186234817, "obj2": 0.8299817193925182}, {"determining": "( ( ( Const - ( ( ( FirstVNF_RAM / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( Min( MUM ,MUR ) - ( CS * MUR ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Max( MUR,MUM ) ) ) )", "obj1": 0.2894736842105263, "obj2": 0.6409431557409647}, {"determining": "( ( ( ( ( ( Const * FirstVNF_RAM ) - ( MRS - MDR ) ) / Min( ACS ,FirstVNF_CPU_Server ) ) - ( ( ( FirstVNF_RAM / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),Max( FirstVNF_CPU_Server,Const ) ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( Min( MUM ,MUR ) - ( CS * MUR ) ) / ( Min( MLU ,( ( RMSe + MLU ) + MUM ) ) - ( ( CS * MLU ) - Max( MUR,MUM ) ) ) )", "obj1": 0.3259109311740891, "obj2": 0.6097743584160054}, {"determining": "( ( ( ( ( ( Const * FirstVNF_RAM ) - ( MRS - MDR ) ) / Min( ACS ,FirstVNF_CPU_Server ) ) - ( ( ( FirstVNF_RAM / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( Min( MUM ,MUR ) - ( CS * MUR ) ) / ( Min( MLU ,( ( MUM + MLU ) + MUM ) ) - ( ( CS * MLU ) - Max( MUR,MUM ) ) ) )", "obj1": 0.3340080971659919, "obj2": 0.6070796010864354}, {"determining": "( ( ( RRS / ARS ) + Max( FirstVNF_CPU_Server,Const ) ) * PN )", "choosing": "( ( Max( DS,MLU ) - ( RCSe / Min( DS ,Min( ( RCSe * ( CS + ( MUM * RCSe ) ) ) ,RMSe ) ) ) ) / MUM )", "obj1": 0.38866396761133604, "obj2": 0.5425461930298013}, {"determining": "( ( ( Const - ( ( ( FirstVNF_RAM / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( ( Min( ( ( RMSe / DS ) + RRSe ) ,( ( Min( MUC ,MUM ) * ( Max( DS,RCSe ) * RCSe ) ) + DS ) ) / ( RRSe * MUM ) ) / RMSe ) )", "obj1": 0.23684210526315788, "obj2": 0.7127164875848996}, {"determining": "( Min( Min( DDR ,FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) * ( FirstVNF_CPU * ( RRS * DDR ) ) )", "choosing": "( ( MUM * ( RCSe / Min( DS ,Min( RMSe ,RMSe ) ) ) ) * ( MUR / CS ) )", "obj1": 0.13562753036437247, "obj2": 0.8344290622863463}, {"determining": "( ( ( ( BR / Min( PN ,Max( FirstVNF_Mem_Server,BR ) ) ) - ( MRS - MDR ) ) / Min( ACS ,MRS ) ) / MRS )", "choosing": "( ( Min( DS ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) - DS ) + ( RMSe - RMSe ) )", "obj1": 0.18218623481781376, "obj2": 0.7359224775146728}, {"determining": "( ( ( ( AMS + RRS ) / ( FirstVNF_CPU - DDR ) ) + FirstVNF_CPU ) / MRS )", "choosing": "( ( ( Max( ( DS - RMSe ),( MUR + CS ) ) / ( Min( MUM ,MUR ) - ( CS + MUR ) ) ) - DS ) + ( CS - ( MUM + RRSe ) ) )", "obj1": 0.145748987854251, "obj2": 0.7564660995246152}, {"determining": "( Max( Max( Max( Max( FirstVNF_RAM,FirstVNF_CPU_Server ),( MDR - MRS ) ),( ( FirstVNF_RAM + AMS ) - ( FirstVNF_CPU - FirstVNF_Mem ) ) ),( Min( ( MRS - Const ) ,( FirstVNF_RAM - FirstVNF_Mem ) ) / ( Max( BR,MRS ) * ( Const * MDR ) ) ) ) + ( RRS / ARS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR * CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( RMSe + CS ) )", "obj1": 0.2651821862348178, "obj2": 0.663733368709052}, {"determining": "( ( ( FirstVNF_RAM / ( FirstVNF_CPU_Server / MRS ) ) * RRS ) + ( RRS / ARS ) )", "choosing": "Max( ( Min( RMSe ,( MLU / RRSe ) ) * Min( MLU ,Max( MUC,RRSe ) ) ),Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( ( MUR + ( RMSe + CS ) ) + MUC ) ) ),( Max( MUR,CS ) / ( RRSe + CS ) ) ) )", "obj1": 0.13157894736842105, "obj2": 0.8352901524243892}, {"determining": "( Min( AMS ,MRS ) / Max( Max( Max( Max( FirstVNF_RAM,FirstVNF_CPU_Server ),( MDR - MRS ) ),( ( FirstVNF_RAM + AMS ) - ( FirstVNF_CPU - FirstVNF_Mem ) ) ),( Min( ( MRS - Const ) ,( FirstVNF_RAM - FirstVNF_Mem ) ) / ( Max( BR,MRS ) * ( Const * MDR ) ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR * CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * Min( MUM ,MUR ) )", "obj1": 0.24898785425101214, "obj2": 0.6834408852693371}, {"determining": "( ( ( RRS / ARS ) + ( ( RRS + FirstVNF_Mem ) - RRS ) ) * Const )", "choosing": "( ( ( MUC - RMSe ) / ( MUR * ( MUR + RCSe ) ) ) / MUM )", "obj1": 0.38866396761133604, "obj2": 0.5425461930298013}, {"determining": "( ( ( RRS / ARS ) + Max( FirstVNF_CPU_Server,Const ) ) * PN )", "choosing": "( ( Max( DS,MLU ) - ( RCSe / Min( DS ,Min( ( RCSe * ( CS + ( MUM * RCSe ) ) ) ,RMSe ) ) ) ) / MUM )", "obj1": 0.38866396761133604, "obj2": 0.5425461930298013}, {"determining": "( Min( Max( MDR,AMS ) ,CRS ) + ( ( DDR + BR ) - ( MRS / Const ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR * CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( Min( DS ,MUC ) * MUM ) )", "obj1": 0.12348178137651822, "obj2": 0.8376934810672492}, {"determining": "( ( Min( Const ,FirstVNF_RAM_Server ) - ( Max( Min( DDR ,ARS ),AMS ) - FirstVNF_CPU ) ) / ( Max( ( FirstVNF_CPU * AMS ),( AMS - MRS ) ) - DDR ) )", "choosing": "Max( ( MUM * RMSe ),Max( ( MUR * RCSe ),( MLU + ( MLU / CS ) ) ) )", "obj1": 0.2935222672064777, "obj2": 0.6361187753873395}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) * ( Max( ( ( ( Const * FirstVNF_RAM ) - ( MRS - ( ( Const * FirstVNF_RAM ) - ( MRS - MDR ) ) ) ) / Min( ACS ,FirstVNF_CPU_Server ) ),MRS ) - ( RRS - MRS ) ) )", "choosing": "( ( ( ( CS / ( ( DS * RMSe ) - ( DS + RMSe ) ) ) + Max( RMSe,MLU ) ) * ( RMSe * DS ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.4008097165991903, "obj2": 0.5408057391202589}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) * ( Max( ( ( ( Const * FirstVNF_RAM ) - ( MRS - MDR ) ) / Min( ACS ,FirstVNF_CPU_Server ) ),MRS ) - ( RRS - MRS ) ) )", "choosing": "( ( ( ( CS / ( ( DS * RMSe ) - ( DS + RMSe ) ) ) + Max( RMSe,MLU ) ) * ( MUM * DS ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.4008097165991903, "obj2": 0.5408057391202589}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) * ( Max( ( ( ( Const * FirstVNF_RAM ) - ( MRS - MDR ) ) / Min( ACS ,FirstVNF_CPU_Server ) ),MRS ) - ( RRS - MRS ) ) )", "choosing": "( ( ( ( CS / ( ( DS * RMSe ) - ( DS + RMSe ) ) ) + Max( RMSe,MLU ) ) * ( MUM * DS ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.4008097165991903, "obj2": 0.5408057391202589}], "8": [{"determining": "Min( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ,( PN - ( Min( RRS ,FirstVNF_Mem_Server ) * Const ) ) )", "choosing": "Max( Min( Max( CS,Max( CS,CS ) ) ,MLU ),Min( MUM ,( DS * ( Min( ( RRSe / Min( CS ,MUM ) ) ,RRSe ) * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,ARS ) - ( ( ( ( Min( FirstVNF_CPU_Server ,DDR ) / Min( DDR ,Const ) ) / BR ) - RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( Min( MUM ,MUR ) - ( CS * MLU ) ) / ( RMSe * MUC ) )", "obj1": 0.2793522267206478, "obj2": 0.64705514055472}, {"determining": "( ( ( RRS / ARS ) + Max( FirstVNF_CPU_Server,Const ) ) * ( FirstVNF_RAM / RRS ) )", "choosing": "( ( Max( DS,MLU ) - ( RCSe / Min( DS ,Min( ( Min( Min( MUR ,DS ) ,DS ) / RMSe ) ,RMSe ) ) ) ) / MUM )", "obj1": 0.4251012145748988, "obj2": 0.515040029031178}, {"determining": "( Max( Const,( ( PN + ( FirstVNF_Mem - ( Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ),BR ) / AMS ) ) ) / ( ( AMS - AMS ) / ARS ) ) ) - ( RRS - ( FirstVNF_CPU_Server / RRS ) ) )", "choosing": "( ( ( ( RMSe / MLU ) / Max( CS,RCSe ) ) * ( ( MUC + CS ) * Max( MLU,CS ) ) ) / ( ( MLU + ( ( MUR / Max( ( ( MUM * DS ) - Min( RCSe ,MUR ) ),RMSe ) ) / Min( ( MUR - RMSe ) ,Max( Min( RCSe ,( CS / MLU ) ),CS ) ) ) ) * ( DS * DS ) ) )", "obj1": 0.09109311740890688, "obj2": 0.8762623459419124}, {"determining": "( FirstVNF_RAM_Server - ( Max( ( DDR + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( Const * Min( RRS ,Max( FirstVNF_RAM,Max( FirstVNF_RAM,RRS ) ) ) ) ) )", "choosing": "( ( Max( ( MLU + MUM ),Max( DS,Min( RMSe ,MUC ) ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( Max( Min( MLU ,MLU ),Max( RRSe,MLU ) ) / RMSe ) ) ,( Min( Min( DS ,Min( RMSe ,RMSe ) ) ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.3603238866396761, "obj2": 0.56234031541536}, {"determining": "( Max( Const,( ( PN / ( FirstVNF_Mem - Max( DDR,MDR ) ) ) / ( ACS / ARS ) ) ) - ( RRS - ( FirstVNF_CPU_Server / RRS ) ) )", "choosing": "( ( ( Max( CS,RCSe ) / ( RMSe / MLU ) ) * ( ( MUC + CS ) * Max( MLU,CS ) ) ) / ( Max( MLU,( Min( RRSe ,Min( RCSe ,RRSe ) ) / Min( ( MUR - RMSe ) ,Max( RCSe,CS ) ) ) ) * ( DS * DS ) ) )", "obj1": 0.09109311740890688, "obj2": 0.8762623459419124}, {"determining": "( ( ( RRS * ARS ) - Max( MRS,Const ) ) / MRS )", "choosing": "( ( Min( ( Max( ( ( RMSe * RRSe ) / RMSe ),MUC ) + RMSe ) ,( Min( MUM ,MUR ) - ( MUM + MUR ) ) ) - DS ) + ( RMSe - RMSe ) )", "obj1": 0.16194331983805668, "obj2": 0.7433769962066203}, {"determining": "( Min( FirstVNF_RAM_Server ,Max( MDR,Min( FirstVNF_RAM_Server ,( MRS * ( PN + ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ) ) ) + ( Const + Min( ( FirstVNF_Mem_Server + RRS ) ,CRS ) ) )", "choosing": "( ( Min( DS ,MUM ) * MUM ) * ( ( ( MLU / MUM ) - ( ( RRSe * ( Max( RMSe,Max( DS,RCSe ) ) - RMSe ) ) * Min( Max( Min( DS ,Max( MUC,CS ) ),( ( MLU + MUR ) + RCSe ) ) ,DS ) ) ) * Min( ( Max( Max( RMSe,( DS / MLU ) ),Max( MLU,MLU ) ) * MUM ) ,( MLU * CS ) ) ) )", "obj1": 0.12348178137651822, "obj2": 0.8376934810672492}, {"determining": "Min( Max( ( ( ARS + FirstVNF_RAM_Server ) - ( ( MRS * ACS ) * RRS ) ),PN ) ,Min( Const ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( CS * ( DS * MUR ) ) * Min( ( RMSe * MUC ) ,( Min( CS ,RMSe ) * MUC ) ) ) * Min( ( Max( RCSe,CS ) * ( RRSe / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.2408906882591093, "obj2": 0.7078049192463606}, {"determining": "( ( ( Const - ( ( ( FirstVNF_RAM / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( ( Min( ( ( RMSe / DS ) + RRSe ) ,( ( Min( MUC ,MUM ) * ( Max( DS,RCSe ) * RCSe ) ) + DS ) ) / ( RRSe * MUM ) ) / RMSe ) )", "obj1": 0.23684210526315788, "obj2": 0.7127164875848996}, {"determining": "( ( ( FirstVNF_RAM / ( FirstVNF_CPU_Server / MRS ) ) * RRS ) + Max( FirstVNF_RAM,( BR / Max( Min( ( ( ( MRS - PN ) * BR ) * Min( Const ,ARS ) ) ,Max( DDR,FirstVNF_Mem ) ),AMS ) ) ) )", "choosing": "( ( Max( MUR,MUM ) / RMSe ) * Max( ( RRSe - RRSe ),( MUR * ( ( RCSe / ( CS / ( Max( DS,RMSe ) / MUM ) ) ) * ( ( RCSe * ( RMSe + ( MUM - MLU ) ) ) - ( ( CS / ( MUM / RCSe ) ) / MUC ) ) ) ) ) )", "obj1": 0.3117408906882591, "obj2": 0.6213289333214684}, {"determining": "( ( ( FirstVNF_RAM / ( FirstVNF_CPU_Server / MRS ) ) * RRS ) + Max( FirstVNF_RAM,( BR / Max( Min( ( ( ( MRS - PN ) * BR ) * Min( Const ,ARS ) ) ,Max( DDR,FirstVNF_Mem ) ),AMS ) ) ) )", "choosing": "( ( Max( MUR,MUM ) / RMSe ) * Max( ( RRSe - RRSe ),( MUR * ( ( RCSe / ( CS / ( Max( DS,RMSe ) / MUM ) ) ) * ( ( RCSe * ( RMSe + ( MUM - MLU ) ) ) - ( ( CS / ( MUM / RCSe ) ) / MUC ) ) ) ) ) )", "obj1": 0.3117408906882591, "obj2": 0.6213289333214684}, {"determining": "( ( ( FirstVNF_RAM / ( MRS / FirstVNF_CPU_Server ) ) * RRS ) + ( FirstVNF_RAM - ( BR / Max( Min( ( ( ( FirstVNF_Mem_Server / ARS ) * ( MRS - PN ) ) * PN ) ,DDR ),AMS ) ) ) )", "choosing": "( ( RCSe / ( RCSe * RCSe ) ) * Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( ( MUC + RMSe ) ,MUR ) - ( CS + MUR ) ) ) )", "obj1": 0.3117408906882591, "obj2": 0.6213289333214684}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - Min( RRS ,AMS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( ( MUC + RMSe ) ,MUR ) - ( CS + MUR ) ) ) * ( Max( MUR,MUM ) / RMSe ) )", "obj1": 0.3117408906882591, "obj2": 0.6213289333214684}, {"determining": "( ( ( FirstVNF_RAM / ( MRS / FirstVNF_CPU_Server ) ) * RRS ) + ( FirstVNF_RAM - ( BR / Max( Min( ( ( ( MRS - PN ) * ( RRS - MRS ) ) * PN ) ,ARS ),AMS ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( ( ( DS * RMSe ) + RMSe ) ,MUR ) - ( CS + MUR ) ) ) * ( Max( MUR,MUM ) / RMSe ) )", "obj1": 0.3117408906882591, "obj2": 0.6213289333214684}, {"determining": "( ( ( FirstVNF_RAM / ( MRS / FirstVNF_CPU_Server ) ) * RRS ) + ( FirstVNF_RAM - ( BR / Max( Min( ( ( RRS * BR ) * PN ) ,ARS ),AMS ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( ( MUC + MLU ) ,MUR ) - ( CS + MUR ) ) ) * ( Max( MUR,MUM ) / RMSe ) )", "obj1": 0.31781376518218624, "obj2": 0.6145024511918977}, {"determining": "( ( ( FirstVNF_RAM / ( MRS / FirstVNF_CPU_Server ) ) * RRS ) + ( FirstVNF_RAM - ( BR / Max( Min( ( ( ( MRS - PN ) * BR ) * PN ) ,ARS ),AMS ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( ( MUC + RMSe ) ,MUR ) - ( CS + MUR ) ) ) * ( Max( MUR,MUM ) / RMSe ) )", "obj1": 0.3117408906882591, "obj2": 0.6213289333214684}, {"determining": "( Max( Const,MRS ) - ( RRS - ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - Min( ( BR - ( FirstVNF_CPU_Server + Min( Const ,Min( PN ,FirstVNF_CPU_Server ) ) ) ) ,AMS ) ) ) )", "choosing": "( ( MUM * ( MUM * DS ) ) + ( RMSe / CS ) )", "obj1": 0.4271255060728745, "obj2": 0.5141438024521037}, {"determining": "( PN * ( ( ACS - BR ) + ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe - ( RMSe * Max( MUC,RMSe ) ) ) / Max( MUC,CS ) ) / RMSe )", "obj1": 0.4190283400809717, "obj2": 0.5167748389790919}, {"determining": "( ( ( FirstVNF_RAM / Min( MRS ,FirstVNF_CPU_Server ) ) * RRS ) + ( Min( MRS ,RRS ) + CRS ) )", "choosing": "( ( MUM - DS ) + ( MLU - ( MUM * Max( ( ( RCSe / ( ( CS - MUC ) * DS ) ) + ( CS * ( ( MLU - MUM ) / ( RMSe / DS ) ) ) ),MUR ) ) ) )", "obj1": 0.1417004048582996, "obj2": 0.8217214132094933}, {"determining": "( ( ( BR / Min( PN ,Max( FirstVNF_Mem_Server,BR ) ) ) - ( MRS - MDR ) ) / Min( ACS ,MRS ) )", "choosing": "Max( ( Min( MUC ,MUM ) * ( Max( DS,RCSe ) * RCSe ) ),Max( ( MUR * RCSe ),( MLU + ( MLU / CS ) ) ) )", "obj1": 0.27530364372469635, "obj2": 0.6528215277750281}, {"determining": "( ( ( DDR + BR ) - ( MRS / Const ) ) + Min( ARS ,( Min( PN ,FirstVNF_CPU ) - RRS ) ) )", "choosing": "( Min( ( DS - RRSe ) ,( ( MUM - MUR ) - ( CS + MUR ) ) ) * ( Min( DS ,MUC ) * MUM ) )", "obj1": 0.12348178137651822, "obj2": 0.8376934810672492}, {"determining": "( Min( Max( MDR,AMS ) ,CRS ) + ( ( DDR + BR ) - ( MRS / Const ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR * CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( Min( DS ,MUC ) * MUM ) )", "obj1": 0.12348178137651822, "obj2": 0.8376934810672492}, {"determining": "( ( ( Const - ( ( ( FirstVNF_RAM / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( ( Min( ( ( RMSe / DS ) + RRSe ) ,( ( Min( MUC ,MUM ) * ( Max( DS,RCSe ) * RCSe ) ) + DS ) ) / ( RRSe * MUM ) ) / RMSe ) )", "obj1": 0.23684210526315788, "obj2": 0.7127164875848996}, {"determining": "( ( ( RRS / ARS ) + Max( FirstVNF_CPU_Server,Const ) ) * ( FirstVNF_RAM / RRS ) )", "choosing": "( ( Max( DS,MLU ) - ( RCSe / Min( DS ,Min( ( Min( Min( MUR ,DS ) ,DS ) / RMSe ) ,RMSe ) ) ) ) / MUM )", "obj1": 0.38866396761133604, "obj2": 0.5425461930298013}, {"determining": "( ( ( RRS / ARS ) + Max( FirstVNF_CPU_Server,Const ) ) * ( FirstVNF_RAM / RRS ) )", "choosing": "( ( Max( DS,MLU ) - ( RCSe / Min( DS ,Min( ( Min( Min( MUR ,DS ) ,DS ) / RMSe ) ,RMSe ) ) ) ) / MUM )", "obj1": 0.38866396761133604, "obj2": 0.5425461930298013}, {"determining": "( ( ( RRS / ARS ) + Max( FirstVNF_CPU_Server,Const ) ) * ( FirstVNF_RAM / RRS ) )", "choosing": "( ( Max( DS,MLU ) - ( RCSe / Min( DS ,Min( ( Min( Min( MUR ,DS ) ,DS ) / RMSe ) ,RMSe ) ) ) ) / MUM )", "obj1": 0.38866396761133604, "obj2": 0.5425461930298013}, {"determining": "( ( ( RRS / ARS ) + Max( FirstVNF_CPU_Server,Const ) ) * PN )", "choosing": "( ( Max( DS,MLU ) - ( RCSe / Min( DS ,Min( ( RCSe * ( CS + ( MUM * RCSe ) ) ) ,RMSe ) ) ) ) / MUM )", "obj1": 0.38866396761133604, "obj2": 0.5425461930298013}, {"determining": "( Max( Const,( ( PN / ( Min( RRS ,Min( MRS ,Max( PN,MDR ) ) ) - Max( DDR,MDR ) ) ) / ( ACS / ARS ) ) ) - ( RRS - ( MDR / RRS ) ) )", "choosing": "( MLU / ( Max( MLU,( Min( RRSe ,( ( RCSe / ( RRSe + RRSe ) ) - ( Min( RRSe ,RRSe ) * ( CS + MUM ) ) ) ) / Min( ( MUR - RMSe ) ,Max( RCSe,CS ) ) ) ) * ( DS * MUR ) ) )", "obj1": 0.08704453441295547, "obj2": 0.8818891068121525}, {"determining": "( Max( Const,( ( PN / ( FirstVNF_Mem - Max( DDR,MDR ) ) ) / ( ACS / ARS ) ) ) - ( RRS - ( FirstVNF_CPU_Server / RRS ) ) )", "choosing": "( ( ( Max( CS,RCSe ) / ( RMSe / MLU ) ) * ( ( MUC + CS ) * Max( MLU,CS ) ) ) / ( Max( MLU,( Min( RRSe ,Min( RCSe ,RRSe ) ) / Min( ( MUR - RMSe ) ,Max( RCSe,CS ) ) ) ) * ( DS * DS ) ) )", "obj1": 0.09109311740890688, "obj2": 0.8762623459419124}, {"determining": "( Min( ACS ,ACS ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) )", "choosing": "( ( ( DS + RCSe ) * MUM ) * ( Min( DS ,MUM ) * MUM ) )", "obj1": 0.11336032388663968, "obj2": 0.8448679462875653}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - Min( DDR ,FirstVNF_CPU_Server ) ) ) - Min( RRS ,Max( ( ( PN * ( FirstVNF_CPU * ( RRS * DDR ) ) ) - ( RRS / FirstVNF_Mem ) ),PN ) ) )", "choosing": "( ( Max( ( MLU + MUM ),Max( MUM,Min( RMSe ,MUC ) ) ) * Min( ( RMSe * MUC ) ,( Min( CS ,RMSe ) * MUC ) ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.38461538461538464, "obj2": 0.5555809478631527}, {"determining": "( ( ( Const - ( ( Max( FirstVNF_RAM,RRS ) * RRS ) + ( FirstVNF_RAM - ( Max( AMS,Min( DDR ,ARS ) ) / BR ) ) ) ) - ( FirstVNF_Mem_Server - Const ) ) / Min( ACS ,MRS ) )", "choosing": "( ( Min( MUM ,MUR ) - ( MUM * MUR ) ) / ( Min( DS ,Min( RMSe ,RMSe ) ) - ( ( CS * MLU ) - Max( MUR,( CS / MUR ) ) ) ) )", "obj1": 0.2854251012145749, "obj2": 0.6413330345966136}, {"determining": "( FirstVNF_RAM_Server - ( Max( ( DDR + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( Const * Min( RRS ,Max( FirstVNF_RAM,Max( FirstVNF_RAM,RRS ) ) ) ) ) )", "choosing": "( ( Max( ( MLU + MUM ),Max( DS,Min( RMSe ,MUC ) ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( Max( Min( MLU ,MLU ),Max( RRSe,MLU ) ) / RMSe ) ) ,( Min( Min( DS ,Min( RMSe ,RMSe ) ) ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.3603238866396761, "obj2": 0.56234031541536}, {"determining": "( ( ( ( ( ( Const * FirstVNF_RAM ) - ( MRS - MDR ) ) / Min( ACS ,FirstVNF_CPU_Server ) ) - ( ( ( FirstVNF_RAM / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),Max( FirstVNF_CPU_Server,Const ) ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( Min( MUM ,MUR ) - ( CS * MUR ) ) / ( Min( MLU ,( ( RMSe + MLU ) + MUM ) ) - ( ( CS * MLU ) - Max( MUR,MUM ) ) ) )", "obj1": 0.3259109311740891, "obj2": 0.6097743584160054}, {"determining": "( ( ( RRS / ARS ) + Max( FirstVNF_CPU_Server,Const ) ) * PN )", "choosing": "( ( Max( DS,MLU ) - ( RCSe / Min( DS ,Min( ( RCSe * ( CS + ( MUM * RCSe ) ) ) ,RMSe ) ) ) ) / MUM )", "obj1": 0.38866396761133604, "obj2": 0.5425461930298013}, {"determining": "( ( ( Const - ( ( ( FirstVNF_RAM / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( ( Min( ( ( RMSe / DS ) + RRSe ) ,( ( Min( MUC ,MUM ) * ( Max( DS,RCSe ) * RCSe ) ) + DS ) ) / ( RRSe * MUM ) ) / RMSe ) )", "obj1": 0.23684210526315788, "obj2": 0.7127164875848996}, {"determining": "( ( ( ( AMS + RRS ) / ( FirstVNF_CPU - DDR ) ) + FirstVNF_CPU ) / MRS )", "choosing": "( ( ( Max( ( DS - RMSe ),( MUR + CS ) ) / ( Min( MUM ,MUR ) - ( CS + MUR ) ) ) - DS ) + ( CS - ( MUM + RRSe ) ) )", "obj1": 0.145748987854251, "obj2": 0.7564660995246152}, {"determining": "( Min( AMS ,MRS ) / Max( Max( Max( Max( FirstVNF_RAM,FirstVNF_CPU_Server ),( MDR - MRS ) ),( ( FirstVNF_RAM + AMS ) - ( FirstVNF_CPU - FirstVNF_Mem ) ) ),( Min( ( MRS - Const ) ,( FirstVNF_RAM - FirstVNF_Mem ) ) / ( Max( BR,MRS ) * ( Const * MDR ) ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR * CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * Min( MUM ,MUR ) )", "obj1": 0.24898785425101214, "obj2": 0.6834408852693371}, {"determining": "( ( ( RRS / ARS ) + ( ( RRS + FirstVNF_Mem ) - RRS ) ) * Const )", "choosing": "( ( ( MUC - RMSe ) / ( MUR * ( MUR + RCSe ) ) ) / MUM )", "obj1": 0.38866396761133604, "obj2": 0.5425461930298013}, {"determining": "( ( ( RRS / ARS ) + Max( FirstVNF_CPU_Server,Const ) ) * PN )", "choosing": "( ( Max( DS,MLU ) - ( RCSe / Min( DS ,Min( ( RCSe * ( CS + ( MUM * RCSe ) ) ) ,RMSe ) ) ) ) / MUM )", "obj1": 0.38866396761133604, "obj2": 0.5425461930298013}, {"determining": "( Min( Max( MDR,AMS ) ,CRS ) + ( ( DDR + BR ) - ( MRS / Const ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR * CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( Min( DS ,MUC ) * MUM ) )", "obj1": 0.12348178137651822, "obj2": 0.8376934810672492}, {"determining": "( ( ( FirstVNF_RAM / ( MDR / FirstVNF_CPU_Server ) ) * RRS ) + ( FirstVNF_RAM - ( BR / Max( Min( ( ( PN * ACS ) * PN ) ,ARS ),AMS ) ) ) )", "choosing": "( Min( Max( ( DS - RRSe ),( MUR + CS ) ) ,( Min( ( ( DS * ( DS - MLU ) ) + RMSe ) ,MUR ) - ( CS + MUR ) ) ) * ( RMSe / Max( MUR,MUM ) ) )", "obj1": 0.3117408906882591, "obj2": 0.6213289333214684}, {"determining": "( PN + ( FirstVNF_RAM - ( BR / Max( Min( ( ( ( MRS - PN ) * BR ) * PN ) ,ARS ),AMS ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),DS ) ,( Min( ( MUC + RMSe ) ,MUR ) - ( CS + MUR ) ) ) * ( Max( MUR,MUM ) / RMSe ) )", "obj1": 0.3117408906882591, "obj2": 0.6213289333214684}, {"determining": "( Min( PN ,FirstVNF_CPU_Server ) + ( ( DDR + BR ) - ( MRS / Const ) ) )", "choosing": "( Min( ( MUM * DS ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( Min( DS ,MUC ) * MUM ) )", "obj1": 0.12348178137651822, "obj2": 0.8376934810672492}, {"determining": "( ( ( FirstVNF_RAM / ( MRS / FirstVNF_CPU_Server ) ) * RRS ) + ( FirstVNF_RAM - ( BR / Max( Min( ( ( ( MRS - PN ) * BR ) * PN ) ,ARS ),AMS ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( ( MUC + RMSe ) ,MUR ) - ( CS + MUR ) ) ) * ( Max( MUR,MUM ) / RMSe ) )", "obj1": 0.3117408906882591, "obj2": 0.6213289333214684}, {"determining": "( ( ( ( ( ( Const * FirstVNF_RAM ) - ( MRS - MDR ) ) / Min( ACS ,FirstVNF_CPU_Server ) ) - ( ( ( FirstVNF_RAM / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( ( ( CS / ( ( DS * RMSe ) - ( DS + RMSe ) ) ) + Max( RMSe,MLU ) ) * ( MUM * DS ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.3866396761133603, "obj2": 0.5534699214639122}, {"determining": "( ( ( Const - ( ( ( FirstVNF_RAM / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Const,AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( Min( ( ( MUM - DS ) + ( MLU - RMSe ) ) ,MUR ) - ( CS * MUR ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Max( MUR,MUM ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.6627664662769444}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - Min( DDR ,FirstVNF_CPU_Server ) ) ) - Min( ( Min( ( MRS - Const ) ,( FirstVNF_RAM - FirstVNF_Mem ) ) / ( Max( BR,MRS ) * ( Const * MDR ) ) ) ,Max( ( FirstVNF_CPU - ( RRS / FirstVNF_Mem ) ),PN ) ) )", "choosing": "( ( Max( ( MLU + MUM ),Max( DS,Min( RMSe ,MUC ) ) ) * Min( ( RMSe * MUC ) ,( Min( CS ,RMSe ) * MUC ) ) ) * Min( ( Max( RCSe,CS ) * ( ( Max( ( MLU + MUM ),Max( DS,Min( RMSe ,MUC ) ) ) * Min( ( RMSe * MUC ) ,( Min( CS ,RMSe ) * MUC ) ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.2388663967611336, "obj2": 0.7097350639010361}, {"determining": "( ( ( Min( DDR ,ARS ) - ( ( ( FirstVNF_RAM / BR ) * RRS ) + ( ( FirstVNF_Mem_Server / Max( FirstVNF_Mem,CRS ) ) - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( DDR ,MRS ) )", "choosing": "( ( Min( MUM ,MUR ) - ( CS * MUR ) ) / Min( Max( Max( RCSe,( MUR / Max( ( Max( RRSe,RMSe ) / MLU ),CS ) ) ),( Min( ( ( ( MUR * MUM ) * RMSe ) + ( CS + ( CS / RCSe ) ) ) ,MUR ) - MUM ) ) ,CS ) )", "obj1": 0.30364372469635625, "obj2": 0.6219809660366088}, {"determining": "( ( ( RRS / ARS ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server )", "choosing": "( ( Min( RRSe ,MUM ) - MLU ) * ( Max( MUM,RCSe ) / RMSe ) )", "obj1": 0.291497975708502, "obj2": 0.6340618483761116}, {"determining": "( Max( Const,( ( PN / ( FirstVNF_Mem - Max( DDR,MDR ) ) ) / ( ( Min( Max( FirstVNF_CPU_Server,AMS ) ,( ( Const * Const ) * MRS ) ) + ( ( DDR + BR ) - ( MRS / Const ) ) ) / ARS ) ) ) - ( RRS - ( Max( Min( DDR ,ARS ),AMS ) / RRS ) ) )", "choosing": "( ( MLU / CS ) / ( Max( MLU,( Min( RRSe ,Min( RCSe ,RRSe ) ) / Min( ( MUR - RMSe ) ,Max( ( Min( MUM ,MUR ) - ( CS * MUR ) ),CS ) ) ) ) * ( DS * DS ) ) )", "obj1": 0.10728744939271255, "obj2": 0.8497804551189129}, {"determining": "( ( ( Const - ( ( ( FirstVNF_RAM / BR ) * Min( Const ,FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( Min( MUM ,MUR ) - ( CS * MUR ) ) / DS )", "obj1": 0.21052631578947367, "obj2": 0.7195275182729166}, {"determining": "( ( ( Const - ( ( ( FirstVNF_RAM / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / FirstVNF_RAM ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + Min( RCSe ,CS ) ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( ( Min( ( ( RMSe / DS ) + RRSe ) ,( ( Min( MUC ,MUM ) * ( Max( DS,RCSe ) * RCSe ) ) + DS ) ) / ( RRSe * MUM ) ) / RMSe ) )", "obj1": 0.3724696356275304, "obj2": 0.5574003778454779}, {"determining": "( ( ( FirstVNF_RAM / ( MRS / FirstVNF_CPU_Server ) ) * RRS ) + ( DDR + AMS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( RMSe + CS ) ) ,( Min( ( MUC + MLU ) ,MUR ) - ( CS + MUR ) ) ) * ( Max( MUR,MUM ) / RMSe ) )", "obj1": 0.31781376518218624, "obj2": 0.6145024511918977}, {"determining": "( ( ( FirstVNF_RAM / ( MRS / FirstVNF_CPU_Server ) ) * RRS ) + ( FirstVNF_RAM - ( BR / Max( Min( ( ( ( MRS - PN ) * ( RRS - MRS ) ) * PN ) ,ARS ),AMS ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( ( ( DS * RMSe ) + RMSe ) ,MUR ) - ( CS + MUR ) ) ) * ( Max( MUR,MUM ) / RMSe ) )", "obj1": 0.3117408906882591, "obj2": 0.6213289333214684}, {"determining": "( FirstVNF_RAM_Server - ( Max( ( DDR + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( Min( RRS ,( ( Min( ( FirstVNF_RAM_Server * CRS ) ,ARS ) - ARS ) / Max( FirstVNF_RAM,RRS ) ) ) * Const ) ) )", "choosing": "( ( Max( ( MLU * RRSe ),Max( DS,Min( RMSe ,MUC ) ) ) * ( ( MLU - RRSe ) - Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( Max( Min( MLU ,MLU ),Max( RRSe,MLU ) ) / RMSe ) ) ,( Min( Min( DS ,Min( RMSe ,RMSe ) ) ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.3603238866396761, "obj2": 0.56234031541536}, {"determining": "( Max( ACS,FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( Min( ( ( CS - MUR ) / ( RMSe / ( CS - CS ) ) ) ,( Min( MUR ,MUM ) - ( MUM + MUR ) ) ) - DS ) + ( RMSe - RMSe ) )", "obj1": 0.16194331983805668, "obj2": 0.7433769962066203}, {"determining": "( Min( AMS ,MRS ) / Max( Max( Max( Max( FirstVNF_RAM,FirstVNF_CPU_Server ),( MDR - MRS ) ),( ( FirstVNF_RAM + AMS ) - ( FirstVNF_CPU - FirstVNF_Mem ) ) ),( Min( ( MRS - Const ) ,( FirstVNF_RAM - FirstVNF_Mem ) ) / ( Max( BR,MRS ) * ( Const * MDR ) ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR * CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( Min( DS ,MUC ) * MUM ) )", "obj1": 0.10121457489878542, "obj2": 0.8530802716474573}, {"determining": "( ( ( BR / Min( PN ,Max( ( FirstVNF_RAM_Server - Min( MDR ,( ACS - FirstVNF_CPU ) ) ),BR ) ) ) - ( MRS - MDR ) ) / Min( ACS ,MRS ) )", "choosing": "( ( MUM * ( MUM * DS ) ) * Min( ( MLU + ( MUC - Max( CS,Min( MLU ,( RCSe - ( CS * RMSe ) ) ) ) ) ) ,RRSe ) )", "obj1": 0.39878542510121456, "obj2": 0.539486765589941}, {"determining": "( ( ( Min( DDR ,ARS ) - ( ( ( FirstVNF_RAM / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( Min( MUM ,MUR ) - ( CS * MUR ) ) / Min( RCSe ,CS ) )", "obj1": 0.3097165991902834, "obj2": 0.6218247756688682}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_CPU - DDR ) )", "choosing": "( ( Max( ( MLU + MUM ),Max( DS,Min( RMSe ,MUC ) ) ) * ( Min( ( ( ( MUR * MUM ) * RMSe ) + ( CS + ( CS / RCSe ) ) ) ,MUR ) + Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( Max( Min( MLU ,MLU ),Max( RRSe,MLU ) ) / RMSe ) ) ,( Min( Min( DS ,Min( RMSe ,RMSe ) ) ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.242914979757085, "obj2": 0.7023770565240389}, {"determining": "( FirstVNF_RAM_Server - ( Max( ( DDR + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( Const * Min( RRS ,Max( FirstVNF_RAM,Max( FirstVNF_RAM,RRS ) ) ) ) ) )", "choosing": "( ( Max( ( MLU + MUM ),Max( DS,Min( RMSe ,MUC ) ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( Max( Min( MLU ,MLU ),Max( RRSe,MLU ) ) / RMSe ) ) ,( Min( Min( DS ,Min( RMSe ,RMSe ) ) ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.3603238866396761, "obj2": 0.56234031541536}, {"determining": "( ( ( RRS / ARS ) + Max( FirstVNF_CPU_Server,Const ) ) / MRS )", "choosing": "( ( Min( Max( ( DS - DS ),( MUR + CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) - DS ) + ( RMSe - RMSe ) )", "obj1": 0.16194331983805668, "obj2": 0.7433769962066203}, {"determining": "( ( ( DDR + BR ) - ( MRS / Const ) ) / MRS )", "choosing": "( ( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) - DS ) + ( RMSe - RMSe ) )", "obj1": 0.1720647773279352, "obj2": 0.7362379225692357}, {"determining": "( Min( Max( MDR,AMS ) ,CRS ) + Max( MDR,AMS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR * CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( Min( Max( ( DS - RMSe ),( MUR * CS ) ) ,MUM ) * MUM ) )", "obj1": 0.27125506072874495, "obj2": 0.6529564029682949}, {"determining": "( Min( Max( MDR,AMS ) ,CRS ) + ( ( DDR + BR ) - ( MRS / Const ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR * CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( Min( DS ,MUC ) * MUM ) )", "obj1": 0.12348178137651822, "obj2": 0.8376934810672492}, {"determining": "( Min( Max( MDR,AMS ) ,CRS ) + Min( ACS ,MRS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR * CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( Min( DS ,MUM ) * MUM ) )", "obj1": 0.11336032388663968, "obj2": 0.8448679462875653}, {"determining": "( ( Max( MDR,( BR - MRS ) ) + CRS ) + ( ( DDR + Min( CRS ,FirstVNF_Mem_Server ) ) - ( MRS / Const ) ) )", "choosing": "( ( CS - MUR ) * ( ( Min( ( MUC * ( MUR - MLU ) ) ,MUR ) / ( ( RRSe + Max( MLU,( RCSe / DS ) ) ) + RCSe ) ) - Max( ( ( MLU - Min( MUC ,RRSe ) ) + RRSe ),( ( RRSe * RRSe ) + MUM ) ) ) )", "obj1": 0.13360323886639677, "obj2": 0.8281144976791472}, {"determining": "( FirstVNF_RAM_Server - ( Max( ( DDR + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( Const * Min( RRS ,Max( Min( DDR ,FirstVNF_RAM ),Max( FirstVNF_RAM,RRS ) ) ) ) ) )", "choosing": "( ( Max( ( MLU + MUM ),Max( DS,Min( RMSe ,MUC ) ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Min( ( Max( ( Max( DS,MLU ) - ( RCSe * RCSe ) ),CS ) * ( Max( Min( MLU ,MLU ),Max( RRSe,MLU ) ) / RMSe ) ) ,( Min( Min( DS ,Min( RMSe ,RMSe ) ) ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.3623481781376518, "obj2": 0.5602447768875237}, {"determining": "( ( ( ( ( ( Const * FirstVNF_RAM ) - ( MRS - MDR ) ) / Min( ACS ,FirstVNF_CPU_Server ) ) - ( ( ( ( DDR + BR ) / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( MLU * DS ) * Min( ( MUM * DS ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) )", "obj1": 0.0931174089068826, "obj2": 0.8624662413219326}, {"determining": "( Min( PN ,FirstVNF_CPU_Server ) + ( ( DDR + BR ) - ( MRS / Const ) ) )", "choosing": "( Min( ( MUM * DS ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( Min( DS ,MUC ) * MUM ) )", "obj1": 0.1194331983805668, "obj2": 0.8432012401697667}, {"determining": "( ( ( FirstVNF_RAM / ( MRS / FirstVNF_CPU_Server ) ) * RRS ) + ( FirstVNF_RAM - ( BR / Max( Min( ( ( ( FirstVNF_CPU_Server - PN ) * BR ) * PN ) ,ARS ),( FirstVNF_RAM - ( ( ACS - FirstVNF_RAM ) / BR ) ) ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( ( Max( ( MUR / MUC ),( Max( RRSe,MLU ) + MUR ) ) + Min( MLU ,( ( MUM + MLU ) + MUM ) ) ) ,MUR ) - ( CS + MUR ) ) ) * ( Max( MUR,MUM ) * RMSe ) )", "obj1": 0.3117408906882591, "obj2": 0.6213289333214684}, {"determining": "( ( ( ( ( ( Const * FirstVNF_RAM ) - ( MRS - MDR ) ) / Min( ACS ,FirstVNF_CPU_Server ) ) - ( ( ( FirstVNF_RAM / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( ( MUC + RMSe ) ,MUR ) - ( CS + MUR ) ) ) * ( Max( MUR,MUM ) / RMSe ) )", "obj1": 0.3117408906882591, "obj2": 0.6213289333214684}, {"determining": "( FirstVNF_CPU + ( ( DDR + BR ) - ( MRS / Const ) ) )", "choosing": "( Min( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( ( MUC + RMSe ) ,MUR ) - ( CS + MUR ) ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( Min( DS ,MUC ) * MUM ) )", "obj1": 0.12550607287449392, "obj2": 0.831486195420791}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - Min( RRS ,AMS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( ( MUC + RMSe ) ,MUR ) - ( CS + MUR ) ) ) * ( Max( MUR,MUM ) / RMSe ) )", "obj1": 0.3117408906882591, "obj2": 0.6213289333214684}, {"determining": "( Min( Max( MDR,AMS ) ,CRS ) + Min( ( DDR + ( FirstVNF_Mem_Server + Min( DDR ,DDR ) ) ) ,( MRS / Const ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR * CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( Min( DS ,MUC ) * ( ( ( RCSe - MUR ) - RRSe ) * MUM ) ) )", "obj1": 0.12348178137651822, "obj2": 0.8376934810672492}, {"determining": "( ( ( ( RRS / ARS ) + Max( ARS,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) + Max( FirstVNF_CPU_Server,Const ) ) * PN )", "choosing": "( ( Max( MUC,MLU ) - ( Min( DS ,Max( Min( MLU ,( ( RCSe - RMSe ) + Min( MUC ,RMSe ) ) ),( Max( ( DS / DS ),( MUC - MUC ) ) + MLU ) ) ) - DS ) ) / MUM )", "obj1": 0.38866396761133604, "obj2": 0.5425461930298013}, {"determining": "( ( ( RRS / ARS ) + Max( FirstVNF_CPU_Server,Const ) ) * Max( ( BR + FirstVNF_RAM_Server ),CRS ) )", "choosing": "( ( Max( MUC,Min( MUR ,( CS * RMSe ) ) ) / ( ( MUM + CS ) * RMSe ) ) / MUR )", "obj1": 0.38866396761133604, "obj2": 0.5425461930298013}, {"determining": "( ( ( RRS / ARS ) + Max( FirstVNF_CPU_Server,Const ) ) * PN )", "choosing": "( ( Max( DS,MLU ) - ( RCSe / Min( DS ,Min( ( RCSe * ( CS + ( MUM * RCSe ) ) ) ,RMSe ) ) ) ) / MUM )", "obj1": 0.38866396761133604, "obj2": 0.5425461930298013}, {"determining": "( ( ( FirstVNF_RAM / ( MRS / FirstVNF_CPU_Server ) ) * RRS ) + ( FirstVNF_RAM - ( BR / Max( Min( ( ( ( MRS - PN ) * ( RRS - MRS ) ) * PN ) ,ARS ),AMS ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( ( ( DS * RMSe ) + RMSe ) ,MUR ) - ( CS + MUR ) ) ) * ( Max( MUR,MUM ) / RMSe ) )", "obj1": 0.3117408906882591, "obj2": 0.6213289333214684}, {"determining": "( ( ( Const - ( ( ( ( ( Const * FirstVNF_RAM ) - ( MRS - MDR ) ) / Min( ACS ,FirstVNF_CPU_Server ) ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( ( ( Min( MUM ,MUR ) - ( CS * MUR ) ) / ( Min( MLU ,( ( MUM + MLU ) + MUM ) ) - ( ( CS * MLU ) - Max( MUR,MUM ) ) ) ) - ( CS * MUR ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Max( MUR,MUM ) ) ) )", "obj1": 0.3319838056680162, "obj2": 0.592005526630768}, {"determining": "( ( MDR * FirstVNF_RAM_Server ) + Min( ARS ,( Min( ( ( Min( ARS ,BR ) - AMS ) - ( BR - ARS ) ) ,FirstVNF_Mem_Server ) - RRS ) ) )", "choosing": "( Min( ( Min( ( ( MUR - MUR ) / MUC ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) / MUM ) ,( ( MUM - MUR ) - Min( CS ,MUR ) ) ) * ( Min( DS ,MUC ) * MUM ) )", "obj1": 0.12955465587044535, "obj2": 0.831346926224416}, {"determining": "( Max( Const,FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + DDR ) )", "choosing": "( ( ( MUM - MUR ) * ( CS + MUR ) ) + ( ( MLU - RRSe ) - RMSe ) )", "obj1": 0.2894736842105263, "obj2": 0.6378638584684798}, {"determining": "( ( ( ( ( ( Const * FirstVNF_RAM ) - ( MRS - MDR ) ) / Min( ACS ,FirstVNF_CPU_Server ) ) - ( ( ( FirstVNF_RAM / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR * CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( Min( DS ,MUC ) * MUM ) )", "obj1": 0.12348178137651822, "obj2": 0.8376934810672492}, {"determining": "( ( ( Const - ( ( ( FirstVNF_RAM / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( MRS,AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( ( Min( ( ( RMSe / ( ( MUR * MLU ) + Min( RCSe ,CS ) ) ) + RRSe ) ,( ( Min( MUC ,MUM ) * ( Max( DS,RCSe ) * RCSe ) ) + DS ) ) / ( RRSe * MUM ) ) / RMSe ) )", "obj1": 0.23684210526315788, "obj2": 0.7127164875848996}, {"determining": "( ( ( Const - Min( ( ( MDR + PN ) * RRS ) ,( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( ( Min( ( ( RMSe / DS ) + RRSe ) ,( ( Min( MUC ,MUM ) * ( Max( DS,RCSe ) * RCSe ) ) + DS ) ) / ( RRSe * MUM ) ) / RMSe ) )", "obj1": 0.2145748987854251, "obj2": 0.7173222869372187}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) * ( Max( ( ( ( Const * FirstVNF_RAM ) - ( MRS - MDR ) ) / Min( ACS ,FirstVNF_CPU_Server ) ),MRS ) - ( RRS - MRS ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR * CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * Min( MUM ,MUR ) )", "obj1": 0.24898785425101214, "obj2": 0.6834408852693371}, {"determining": "( ( ( Const - Min( ( ( MDR + PN ) * RRS ) ,( FirstVNF_RAM - ( DDR / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( ( ( MUM * ( RCSe / Min( DS ,Min( RMSe ,RMSe ) ) ) ) * ( MUR / CS ) ) + MUC ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Max( MUR,DS ) ) ) )", "obj1": 0.09919028340080972, "obj2": 0.8574967610647454}, {"determining": "( ( Min( Const ,FirstVNF_RAM_Server ) - ( Max( Min( DDR ,ARS ),AMS ) - FirstVNF_CPU ) ) / ( Max( ( FirstVNF_CPU * AMS ),( AMS - MRS ) ) - DDR ) )", "choosing": "( ( Max( DS,MLU ) - ( RCSe / Min( DS ,Min( ( RCSe * ( CS + ( MUM * RCSe ) ) ) ,RMSe ) ) ) ) / MUM )", "obj1": 0.38866396761133604, "obj2": 0.5425461930298013}, {"determining": "( FirstVNF_RAM_Server - ( Max( ( DDR + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( Const * Min( RRS ,Max( FirstVNF_RAM,Max( FirstVNF_RAM,RRS ) ) ) ) ) )", "choosing": "( ( Max( ( MLU + MUM ),Max( DS,Min( RMSe ,MUC ) ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( Max( Min( MLU ,MLU ),Max( RRSe,MLU ) ) / RMSe ) ) ,( Min( Min( DS ,Min( RMSe ,RMSe ) ) ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.402834008097166, "obj2": 0.5201961175224958}, {"determining": "( Min( AMS ,MRS ) / Max( Max( Max( Max( FirstVNF_RAM,FirstVNF_CPU_Server ),( MDR - MRS ) ),( ( FirstVNF_RAM + AMS ) - ( FirstVNF_CPU - FirstVNF_Mem ) ) ),( Min( ( MRS - Const ) ,( FirstVNF_RAM - FirstVNF_Mem ) ) / ( Max( BR,MRS ) * ( Const * MDR ) ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR * CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * Min( MUM ,MUR ) )", "obj1": 0.24898785425101214, "obj2": 0.6834408852693371}, {"determining": "( ( Max( Const,( FirstVNF_Mem * FirstVNF_CPU_Server ) ) * RRS ) + Max( FirstVNF_RAM,( BR / Max( Min( ( Min( Const ,DDR ) * ( Min( ARS ,MRS ) * BR ) ) ,Max( DDR,FirstVNF_Mem ) ),AMS ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( CS + MUR ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( ( Min( ( RRSe - RMSe ) ,( ( Min( CS ,MUM ) * ( Max( DS,RCSe ) * ( CS - RRSe ) ) ) + DS ) ) / ( RRSe * MLU ) ) / RMSe ) )", "obj1": 0.23684210526315788, "obj2": 0.7127164875848996}, {"determining": "( ( ( DDR / MRS ) * RRS ) + ( FirstVNF_CPU_Server + Min( Const ,Min( PN ,( DDR / ( FirstVNF_Mem_Server / Max( FirstVNF_Mem,CRS ) ) ) ) ) ) )", "choosing": "( ( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) - DS ) + ( RMSe - RMSe ) )", "obj1": 0.17813765182186234, "obj2": 0.7325442754457403}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) * ( Max( ( ( ( Const * FirstVNF_RAM ) - ( MRS - MDR ) ) / Min( ACS ,FirstVNF_CPU_Server ) ),MRS ) - ( RRS - MRS ) ) )", "choosing": "( ( Max( DS,MLU ) - ( RCSe / Min( DS ,Min( ( RCSe * ( CS + ( MUM * RCSe ) ) ) ,RMSe ) ) ) ) / MUM )", "obj1": 0.38866396761133604, "obj2": 0.5425461930298013}, {"determining": "( PN * ( ( RRS / ARS ) * ( ( FirstVNF_Mem_Server - MDR ) - Min( BR ,( Max( Const,MRS ) - ( ( AMS - Min( ACS ,BR ) ) - ( DDR - ARS ) ) ) ) ) ) )", "choosing": "( MUM / ( ( ( RMSe * DS ) + MLU ) + Max( DS,MLU ) ) )", "obj1": 0.34615384615384615, "obj2": 0.582187065444968}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - Min( MRS ,Min( DDR ,Max( ACS,DDR ) ) ) ) / Min( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) ,MRS ) ) - ( CRS + ( Min( BR ,Min( FirstVNF_RAM_Server ,MDR ) ) / CRS ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( Min( ( ( CS + Max( RRSe,Max( Min( RRSe ,DS ),( RRSe + MUM ) ) ) ) * ( MUM / ( MUM * ( Min( CS ,MUM ) + Min( DS ,MLU ) ) ) ) ) ,MUR ) - ( CS * CS ) ) / ( Min( MLU ,( ( MUM + Max( MLU,MUC ) ) + MUM ) ) - ( ( CS * Max( MUM,( RMSe * ( MLU + ( RMSe - RCSe ) ) ) ) ) - Max( MLU,RCSe ) ) ) )", "obj1": 0.29959514170040485, "obj2": 0.6303432990857158}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - Min( MRS ,Min( DDR ,Max( ACS,DDR ) ) ) ) / Min( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) ,MRS ) ) - ( CRS + ( Min( BR ,Min( FirstVNF_RAM_Server ,MDR ) ) / CRS ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( Min( ( ( CS + Max( RRSe,Max( Min( RRSe ,DS ),( RRSe + MUM ) ) ) ) * ( MUM / ( MUM * ( Min( CS ,MUM ) + Min( DS ,MLU ) ) ) ) ) ,MUR ) - ( CS * CS ) ) / ( Min( MLU ,( ( MUM + Max( MLU,MUC ) ) + MUM ) ) - ( ( CS * Max( MUM,( RMSe * ( MLU + ( RMSe - RCSe ) ) ) ) ) - Max( MLU,RCSe ) ) ) )", "obj1": 0.29959514170040485, "obj2": 0.6303432990857158}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - Min( MRS ,Min( DDR ,Max( ACS,DDR ) ) ) ) / Min( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) ,MRS ) ) - ( CRS + ( Min( BR ,Min( FirstVNF_RAM_Server ,MDR ) ) / CRS ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( Min( ( ( CS + Max( RRSe,Max( Min( RRSe ,DS ),( RRSe + MUM ) ) ) ) * ( MUM / ( MUM * ( Min( CS ,MUM ) + Min( DS ,MLU ) ) ) ) ) ,MUR ) - ( CS * CS ) ) / ( Min( MLU ,( ( MUM + Max( MLU,MUC ) ) + MUM ) ) - ( ( CS * Max( MUM,( RMSe * ( MLU + ( RMSe - RCSe ) ) ) ) ) - Max( MLU,RCSe ) ) ) )", "obj1": 0.29959514170040485, "obj2": 0.6303432990857158}, {"determining": "( ( ( ( ( ( Const * FirstVNF_RAM ) - Min( MRS ,MDR ) ) / Min( ( Max( FirstVNF_RAM_Server,PN ) - FirstVNF_Mem_Server ) ,MRS ) ) - ( ( ( FirstVNF_RAM / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( Min( MUM ,MUR ) - ( CS * MUR ) ) / ( Min( MLU ,( ( MUM + Max( MLU,MUM ) ) + MUM ) ) - ( ( CS * MLU ) - Max( MLU,MUM ) ) ) )", "obj1": 0.29959514170040485, "obj2": 0.6303432990857158}], "9": [{"determining": "Min( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ,( PN - ( Min( RRS ,FirstVNF_Mem_Server ) * Const ) ) )", "choosing": "Max( Min( Max( CS,Max( CS,CS ) ) ,MLU ),Min( MUM ,( DS * ( Min( ( RRSe / Min( CS ,MUM ) ) ,RRSe ) * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,ARS ) - ( ( ( ( Min( FirstVNF_CPU_Server ,DDR ) / Min( DDR ,Const ) ) / BR ) - RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( Min( MUM ,MUR ) - ( CS * MLU ) ) / ( RMSe * MUC ) )", "obj1": 0.2793522267206478, "obj2": 0.64705514055472}, {"determining": "( Max( Const,( ( PN + ( FirstVNF_Mem - ( Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ),BR ) / AMS ) ) ) / ( ( AMS - AMS ) / ARS ) ) ) - ( RRS - ( FirstVNF_CPU_Server / RRS ) ) )", "choosing": "( ( ( ( RMSe / MLU ) / Max( CS,RCSe ) ) * ( ( MUC + CS ) * Max( MLU,CS ) ) ) / ( ( MLU + ( ( MUR / Max( ( ( MUM * DS ) - Min( RCSe ,MUR ) ),RMSe ) ) / Min( ( MUR - RMSe ) ,Max( Min( RCSe ,( CS / MLU ) ),CS ) ) ) ) * ( DS * DS ) ) )", "obj1": 0.09109311740890688, "obj2": 0.8762623459419124}, {"determining": "( Max( Const,( ( PN / ( FirstVNF_Mem - Max( DDR,MDR ) ) ) / ( ACS / ARS ) ) ) - ( RRS - ( FirstVNF_CPU_Server / RRS ) ) )", "choosing": "( ( ( Max( CS,RCSe ) / ( RMSe / MLU ) ) * ( ( MUC + CS ) * Max( MLU,CS ) ) ) / ( Max( MLU,( Min( RRSe ,Min( RCSe ,RRSe ) ) / Min( ( MUR - RMSe ) ,Max( RCSe,CS ) ) ) ) * ( DS * DS ) ) )", "obj1": 0.09109311740890688, "obj2": 0.8762623459419124}, {"determining": "( ( ( RRS * ARS ) - Max( MRS,Const ) ) / MRS )", "choosing": "( ( Min( ( Max( ( ( RMSe * RRSe ) / RMSe ),MUC ) + RMSe ) ,( Min( MUM ,MUR ) - ( MUM + MUR ) ) ) - DS ) + ( RMSe - RMSe ) )", "obj1": 0.16194331983805668, "obj2": 0.7433769962066203}, {"determining": "Min( Max( ( ( ARS + FirstVNF_RAM_Server ) - ( ( MRS * ACS ) * RRS ) ),PN ) ,Min( Const ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( CS * ( DS * MUR ) ) * Min( ( RMSe * MUC ) ,( Min( CS ,RMSe ) * MUC ) ) ) * Min( ( Max( RCSe,CS ) * ( RRSe / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.2408906882591093, "obj2": 0.7078049192463606}, {"determining": "( ( ( Const - ( ( ( FirstVNF_RAM / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( ( Min( ( ( RMSe / DS ) + RRSe ) ,( ( Min( MUC ,MUM ) * ( Max( DS,RCSe ) * RCSe ) ) + DS ) ) / ( RRSe * MUM ) ) / RMSe ) )", "obj1": 0.23684210526315788, "obj2": 0.7127164875848996}, {"determining": "( ( ( FirstVNF_RAM / ( FirstVNF_CPU_Server / MRS ) ) * RRS ) + Max( FirstVNF_RAM,( BR / Max( Min( ( ( ( MRS - PN ) * BR ) * Min( Const ,ARS ) ) ,Max( DDR,FirstVNF_Mem ) ),AMS ) ) ) )", "choosing": "( ( Max( MUR,MUM ) / RMSe ) * Max( ( RRSe - RRSe ),( MUR * ( ( RCSe / ( CS / ( Max( DS,RMSe ) / MUM ) ) ) * ( ( RCSe * ( RMSe + ( MUM - MLU ) ) ) - ( ( CS / ( MUM / RCSe ) ) / MUC ) ) ) ) ) )", "obj1": 0.3117408906882591, "obj2": 0.6213289333214684}, {"determining": "( ( ( FirstVNF_RAM / ( FirstVNF_CPU_Server / MRS ) ) * RRS ) + Max( FirstVNF_RAM,( BR / Max( Min( ( ( ( MRS - PN ) * BR ) * Min( Const ,ARS ) ) ,Max( DDR,FirstVNF_Mem ) ),AMS ) ) ) )", "choosing": "( ( Max( MUR,MUM ) / RMSe ) * Max( ( RRSe - RRSe ),( MUR * ( ( RCSe / ( CS / ( Max( DS,RMSe ) / MUM ) ) ) * ( ( RCSe * ( RMSe + ( MUM - MLU ) ) ) - ( ( CS / ( MUM / RCSe ) ) / MUC ) ) ) ) ) )", "obj1": 0.3117408906882591, "obj2": 0.6213289333214684}, {"determining": "( ( ( FirstVNF_RAM / ( MRS / FirstVNF_CPU_Server ) ) * RRS ) + ( FirstVNF_RAM - ( BR / Max( Min( ( ( ( FirstVNF_Mem_Server / ARS ) * ( MRS - PN ) ) * PN ) ,DDR ),AMS ) ) ) )", "choosing": "( ( RCSe / ( RCSe * RCSe ) ) * Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( ( MUC + RMSe ) ,MUR ) - ( CS + MUR ) ) ) )", "obj1": 0.3117408906882591, "obj2": 0.6213289333214684}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - Min( RRS ,AMS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( ( MUC + RMSe ) ,MUR ) - ( CS + MUR ) ) ) * ( Max( MUR,MUM ) / RMSe ) )", "obj1": 0.3117408906882591, "obj2": 0.6213289333214684}, {"determining": "( ( ( FirstVNF_RAM / ( MRS / FirstVNF_CPU_Server ) ) * RRS ) + ( FirstVNF_RAM - ( BR / Max( Min( ( ( ( MRS - PN ) * ( RRS - MRS ) ) * PN ) ,ARS ),AMS ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( ( ( DS * RMSe ) + RMSe ) ,MUR ) - ( CS + MUR ) ) ) * ( Max( MUR,MUM ) / RMSe ) )", "obj1": 0.3117408906882591, "obj2": 0.6213289333214684}, {"determining": "( ( ( FirstVNF_RAM / ( MRS / FirstVNF_CPU_Server ) ) * RRS ) + ( FirstVNF_RAM - ( BR / Max( Min( ( ( ( MRS - PN ) * BR ) * PN ) ,ARS ),AMS ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( ( MUC + RMSe ) ,MUR ) - ( CS + MUR ) ) ) * ( Max( MUR,MUM ) / RMSe ) )", "obj1": 0.3117408906882591, "obj2": 0.6213289333214684}, {"determining": "( ( ( Const - ( ( ( FirstVNF_RAM / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( ( Min( ( ( RMSe / DS ) + RRSe ) ,( ( Min( MUC ,MUM ) * ( Max( DS,RCSe ) * RCSe ) ) + DS ) ) / ( RRSe * MUM ) ) / RMSe ) )", "obj1": 0.23684210526315788, "obj2": 0.7127164875848996}, {"determining": "( Max( Const,( ( PN / ( Min( RRS ,Min( MRS ,Max( PN,MDR ) ) ) - Max( DDR,MDR ) ) ) / ( ACS / ARS ) ) ) - ( RRS - ( MDR / RRS ) ) )", "choosing": "( MLU / ( Max( MLU,( Min( RRSe ,( ( RCSe / ( RRSe + RRSe ) ) - ( Min( RRSe ,RRSe ) * ( CS + MUM ) ) ) ) / Min( ( MUR - RMSe ) ,Max( RCSe,CS ) ) ) ) * ( DS * MUR ) ) )", "obj1": 0.08704453441295547, "obj2": 0.8818891068121525}, {"determining": "( Max( Const,( ( PN / ( FirstVNF_Mem - Max( DDR,MDR ) ) ) / ( ACS / ARS ) ) ) - ( RRS - ( FirstVNF_CPU_Server / RRS ) ) )", "choosing": "( ( ( Max( CS,RCSe ) / ( RMSe / MLU ) ) * ( ( MUC + CS ) * Max( MLU,CS ) ) ) / ( Max( MLU,( Min( RRSe ,Min( RCSe ,RRSe ) ) / Min( ( MUR - RMSe ) ,Max( RCSe,CS ) ) ) ) * ( DS * DS ) ) )", "obj1": 0.09109311740890688, "obj2": 0.8762623459419124}, {"determining": "( ( ( Const - ( ( ( FirstVNF_RAM / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( ( Min( ( ( RMSe / DS ) + RRSe ) ,( ( Min( MUC ,MUM ) * ( Max( DS,RCSe ) * RCSe ) ) + DS ) ) / ( RRSe * MUM ) ) / RMSe ) )", "obj1": 0.23684210526315788, "obj2": 0.7127164875848996}, {"determining": "( ( ( ( AMS + RRS ) / ( FirstVNF_CPU - DDR ) ) + FirstVNF_CPU ) / MRS )", "choosing": "( ( ( Max( ( DS - RMSe ),( MUR + CS ) ) / ( Min( MUM ,MUR ) - ( CS + MUR ) ) ) - DS ) + ( CS - ( MUM + RRSe ) ) )", "obj1": 0.145748987854251, "obj2": 0.7564660995246152}, {"determining": "( ( ( FirstVNF_RAM / ( MDR / FirstVNF_CPU_Server ) ) * RRS ) + ( FirstVNF_RAM - ( BR / Max( Min( ( ( PN * ACS ) * PN ) ,ARS ),AMS ) ) ) )", "choosing": "( Min( Max( ( DS - RRSe ),( MUR + CS ) ) ,( Min( ( ( DS * ( DS - MLU ) ) + RMSe ) ,MUR ) - ( CS + MUR ) ) ) * ( RMSe / Max( MUR,MUM ) ) )", "obj1": 0.3117408906882591, "obj2": 0.6213289333214684}, {"determining": "( PN + ( FirstVNF_RAM - ( BR / Max( Min( ( ( ( MRS - PN ) * BR ) * PN ) ,ARS ),AMS ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),DS ) ,( Min( ( MUC + RMSe ) ,MUR ) - ( CS + MUR ) ) ) * ( Max( MUR,MUM ) / RMSe ) )", "obj1": 0.3117408906882591, "obj2": 0.6213289333214684}, {"determining": "( ( ( FirstVNF_RAM / ( MRS / FirstVNF_CPU_Server ) ) * RRS ) + ( FirstVNF_RAM - ( BR / Max( Min( ( ( ( MRS - PN ) * BR ) * PN ) ,ARS ),AMS ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( ( MUC + RMSe ) ,MUR ) - ( CS + MUR ) ) ) * ( Max( MUR,MUM ) / RMSe ) )", "obj1": 0.3117408906882591, "obj2": 0.6213289333214684}, {"determining": "( ( ( Const - ( ( ( FirstVNF_RAM / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Const,AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( Min( ( ( MUM - DS ) + ( MLU - RMSe ) ) ,MUR ) - ( CS * MUR ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Max( MUR,MUM ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.6627664662769444}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - Min( DDR ,FirstVNF_CPU_Server ) ) ) - Min( ( Min( ( MRS - Const ) ,( FirstVNF_RAM - FirstVNF_Mem ) ) / ( Max( BR,MRS ) * ( Const * MDR ) ) ) ,Max( ( FirstVNF_CPU - ( RRS / FirstVNF_Mem ) ),PN ) ) )", "choosing": "( ( Max( ( MLU + MUM ),Max( DS,Min( RMSe ,MUC ) ) ) * Min( ( RMSe * MUC ) ,( Min( CS ,RMSe ) * MUC ) ) ) * Min( ( Max( RCSe,CS ) * ( ( Max( ( MLU + MUM ),Max( DS,Min( RMSe ,MUC ) ) ) * Min( ( RMSe * MUC ) ,( Min( CS ,RMSe ) * MUC ) ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.2388663967611336, "obj2": 0.7097350639010361}, {"determining": "( ( ( Min( DDR ,ARS ) - ( ( ( FirstVNF_RAM / BR ) * RRS ) + ( ( FirstVNF_Mem_Server / Max( FirstVNF_Mem,CRS ) ) - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( DDR ,MRS ) )", "choosing": "( ( Min( MUM ,MUR ) - ( CS * MUR ) ) / Min( Max( Max( RCSe,( MUR / Max( ( Max( RRSe,RMSe ) / MLU ),CS ) ) ),( Min( ( ( ( MUR * MUM ) * RMSe ) + ( CS + ( CS / RCSe ) ) ) ,MUR ) - MUM ) ) ,CS ) )", "obj1": 0.30364372469635625, "obj2": 0.6219809660366088}, {"determining": "( ( ( RRS / ARS ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server )", "choosing": "( ( Min( RRSe ,MUM ) - MLU ) * ( Max( MUM,RCSe ) / RMSe ) )", "obj1": 0.291497975708502, "obj2": 0.6340618483761116}, {"determining": "( Max( Const,( ( PN / ( FirstVNF_Mem - Max( DDR,MDR ) ) ) / ( ( Min( Max( FirstVNF_CPU_Server,AMS ) ,( ( Const * Const ) * MRS ) ) + ( ( DDR + BR ) - ( MRS / Const ) ) ) / ARS ) ) ) - ( RRS - ( Max( Min( DDR ,ARS ),AMS ) / RRS ) ) )", "choosing": "( ( MLU / CS ) / ( Max( MLU,( Min( RRSe ,Min( RCSe ,RRSe ) ) / Min( ( MUR - RMSe ) ,Max( ( Min( MUM ,MUR ) - ( CS * MUR ) ),CS ) ) ) ) * ( DS * DS ) ) )", "obj1": 0.10728744939271255, "obj2": 0.8497804551189129}, {"determining": "( ( ( FirstVNF_RAM / ( MRS / FirstVNF_CPU_Server ) ) * RRS ) + ( FirstVNF_RAM - ( BR / Max( Min( ( ( ( MRS - PN ) * ( RRS - MRS ) ) * PN ) ,ARS ),AMS ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( ( ( DS * RMSe ) + RMSe ) ,MUR ) - ( CS + MUR ) ) ) * ( Max( MUR,MUM ) / RMSe ) )", "obj1": 0.3117408906882591, "obj2": 0.6213289333214684}, {"determining": "( Max( ACS,FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( Min( ( ( CS - MUR ) / ( RMSe / ( CS - CS ) ) ) ,( Min( MUR ,MUM ) - ( MUM + MUR ) ) ) - DS ) + ( RMSe - RMSe ) )", "obj1": 0.16194331983805668, "obj2": 0.7433769962066203}, {"determining": "( Min( AMS ,MRS ) / Max( Max( Max( Max( FirstVNF_RAM,FirstVNF_CPU_Server ),( MDR - MRS ) ),( ( FirstVNF_RAM + AMS ) - ( FirstVNF_CPU - FirstVNF_Mem ) ) ),( Min( ( MRS - Const ) ,( FirstVNF_RAM - FirstVNF_Mem ) ) / ( Max( BR,MRS ) * ( Const * MDR ) ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR * CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( Min( DS ,MUC ) * MUM ) )", "obj1": 0.10121457489878542, "obj2": 0.8530802716474573}, {"determining": "( ( ( Min( DDR ,ARS ) - ( ( ( FirstVNF_RAM / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( Min( MUM ,MUR ) - ( CS * MUR ) ) / Min( RCSe ,CS ) )", "obj1": 0.3097165991902834, "obj2": 0.6218247756688682}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_CPU - DDR ) )", "choosing": "( ( Max( ( MLU + MUM ),Max( DS,Min( RMSe ,MUC ) ) ) * ( Min( ( ( ( MUR * MUM ) * RMSe ) + ( CS + ( CS / RCSe ) ) ) ,MUR ) + Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( Max( Min( MLU ,MLU ),Max( RRSe,MLU ) ) / RMSe ) ) ,( Min( Min( DS ,Min( RMSe ,RMSe ) ) ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.242914979757085, "obj2": 0.7023770565240389}, {"determining": "( ( ( RRS / ARS ) + Max( FirstVNF_CPU_Server,Const ) ) / MRS )", "choosing": "( ( Min( Max( ( DS - DS ),( MUR + CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) - DS ) + ( RMSe - RMSe ) )", "obj1": 0.16194331983805668, "obj2": 0.7433769962066203}, {"determining": "( ( ( DDR + BR ) - ( MRS / Const ) ) / MRS )", "choosing": "( ( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) - DS ) + ( RMSe - RMSe ) )", "obj1": 0.1720647773279352, "obj2": 0.7362379225692357}, {"determining": "( Min( Max( MDR,AMS ) ,CRS ) + Max( MDR,AMS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR * CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( Min( Max( ( DS - RMSe ),( MUR * CS ) ) ,MUM ) * MUM ) )", "obj1": 0.27125506072874495, "obj2": 0.6529564029682949}, {"determining": "( ( Max( MDR,( BR - MRS ) ) + CRS ) + ( ( DDR + Min( CRS ,FirstVNF_Mem_Server ) ) - ( MRS / Const ) ) )", "choosing": "( ( CS - MUR ) * ( ( Min( ( MUC * ( MUR - MLU ) ) ,MUR ) / ( ( RRSe + Max( MLU,( RCSe / DS ) ) ) + RCSe ) ) - Max( ( ( MLU - Min( MUC ,RRSe ) ) + RRSe ),( ( RRSe * RRSe ) + MUM ) ) ) )", "obj1": 0.13360323886639677, "obj2": 0.8281144976791472}, {"determining": "( ( ( ( ( ( Const * FirstVNF_RAM ) - ( MRS - MDR ) ) / Min( ACS ,FirstVNF_CPU_Server ) ) - ( ( ( ( DDR + BR ) / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( MLU * DS ) * Min( ( MUM * DS ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) )", "obj1": 0.0931174089068826, "obj2": 0.8624662413219326}, {"determining": "( ( ( FirstVNF_RAM / ( MRS / FirstVNF_CPU_Server ) ) * RRS ) + ( FirstVNF_RAM - ( BR / Max( Min( ( ( ( FirstVNF_CPU_Server - PN ) * BR ) * PN ) ,ARS ),( FirstVNF_RAM - ( ( ACS - FirstVNF_RAM ) / BR ) ) ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( ( Max( ( MUR / MUC ),( Max( RRSe,MLU ) + MUR ) ) + Min( MLU ,( ( MUM + MLU ) + MUM ) ) ) ,MUR ) - ( CS + MUR ) ) ) * ( Max( MUR,MUM ) * RMSe ) )", "obj1": 0.3117408906882591, "obj2": 0.6213289333214684}, {"determining": "( ( ( ( ( ( Const * FirstVNF_RAM ) - ( MRS - MDR ) ) / Min( ACS ,FirstVNF_CPU_Server ) ) - ( ( ( FirstVNF_RAM / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( ( MUC + RMSe ) ,MUR ) - ( CS + MUR ) ) ) * ( Max( MUR,MUM ) / RMSe ) )", "obj1": 0.3117408906882591, "obj2": 0.6213289333214684}, {"determining": "( FirstVNF_CPU + ( ( DDR + BR ) - ( MRS / Const ) ) )", "choosing": "( Min( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( ( MUC + RMSe ) ,MUR ) - ( CS + MUR ) ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( Min( DS ,MUC ) * MUM ) )", "obj1": 0.12550607287449392, "obj2": 0.831486195420791}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - Min( RRS ,AMS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( ( MUC + RMSe ) ,MUR ) - ( CS + MUR ) ) ) * ( Max( MUR,MUM ) / RMSe ) )", "obj1": 0.3117408906882591, "obj2": 0.6213289333214684}, {"determining": "( ( ( FirstVNF_RAM / ( MRS / FirstVNF_CPU_Server ) ) * RRS ) + ( FirstVNF_RAM - ( BR / Max( Min( ( ( ( MRS - PN ) * ( RRS - MRS ) ) * PN ) ,ARS ),AMS ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( ( ( DS * RMSe ) + RMSe ) ,MUR ) - ( CS + MUR ) ) ) * ( Max( MUR,MUM ) / RMSe ) )", "obj1": 0.3117408906882591, "obj2": 0.6213289333214684}, {"determining": "( ( MDR * FirstVNF_RAM_Server ) + Min( ARS ,( Min( ( ( Min( ARS ,BR ) - AMS ) - ( BR - ARS ) ) ,FirstVNF_Mem_Server ) - RRS ) ) )", "choosing": "( Min( ( Min( ( ( MUR - MUR ) / MUC ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) / MUM ) ,( ( MUM - MUR ) - Min( CS ,MUR ) ) ) * ( Min( DS ,MUC ) * MUM ) )", "obj1": 0.12955465587044535, "obj2": 0.831346926224416}, {"determining": "( Max( Const,FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + DDR ) )", "choosing": "( ( ( MUM - MUR ) * ( CS + MUR ) ) + ( ( MLU - RRSe ) - RMSe ) )", "obj1": 0.2894736842105263, "obj2": 0.6378638584684798}, {"determining": "( ( ( Const - ( ( ( FirstVNF_RAM / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( MRS,AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( ( Min( ( ( RMSe / ( ( MUR * MLU ) + Min( RCSe ,CS ) ) ) + RRSe ) ,( ( Min( MUC ,MUM ) * ( Max( DS,RCSe ) * RCSe ) ) + DS ) ) / ( RRSe * MUM ) ) / RMSe ) )", "obj1": 0.23684210526315788, "obj2": 0.7127164875848996}, {"determining": "( ( Max( Const,( FirstVNF_Mem * FirstVNF_CPU_Server ) ) * RRS ) + Max( FirstVNF_RAM,( BR / Max( Min( ( Min( Const ,DDR ) * ( Min( ARS ,MRS ) * BR ) ) ,Max( DDR,FirstVNF_Mem ) ),AMS ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( CS + MUR ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( ( Min( ( RRSe - RMSe ) ,( ( Min( CS ,MUM ) * ( Max( DS,RCSe ) * ( CS - RRSe ) ) ) + DS ) ) / ( RRSe * MLU ) ) / RMSe ) )", "obj1": 0.23684210526315788, "obj2": 0.7127164875848996}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - Min( MRS ,Min( DDR ,Max( ACS,DDR ) ) ) ) / Min( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) ,MRS ) ) - ( CRS + ( Min( BR ,Min( FirstVNF_RAM_Server ,MDR ) ) / CRS ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( Min( ( ( CS + Max( RRSe,Max( Min( RRSe ,DS ),( RRSe + MUM ) ) ) ) * ( MUM / ( MUM * ( Min( CS ,MUM ) + Min( DS ,MLU ) ) ) ) ) ,MUR ) - ( CS * CS ) ) / ( Min( MLU ,( ( MUM + Max( MLU,MUC ) ) + MUM ) ) - ( ( CS * Max( MUM,( RMSe * ( MLU + ( RMSe - RCSe ) ) ) ) ) - Max( MLU,RCSe ) ) ) )", "obj1": 0.29959514170040485, "obj2": 0.6303432990857158}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - Min( MRS ,Min( DDR ,Max( ACS,DDR ) ) ) ) / Min( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) ,MRS ) ) - ( CRS + ( Min( BR ,Min( FirstVNF_RAM_Server ,MDR ) ) / CRS ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( Min( ( ( CS + Max( RRSe,Max( Min( RRSe ,DS ),( RRSe + MUM ) ) ) ) * ( MUM / ( MUM * ( Min( CS ,MUM ) + Min( DS ,MLU ) ) ) ) ) ,MUR ) - ( CS * CS ) ) / ( Min( MLU ,( ( MUM + Max( MLU,MUC ) ) + MUM ) ) - ( ( CS * Max( MUM,( RMSe * ( MLU + ( RMSe - RCSe ) ) ) ) ) - Max( MLU,RCSe ) ) ) )", "obj1": 0.29959514170040485, "obj2": 0.6303432990857158}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - Min( MRS ,Min( DDR ,Max( ACS,DDR ) ) ) ) / Min( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) ,MRS ) ) - ( CRS + ( Min( BR ,Min( FirstVNF_RAM_Server ,MDR ) ) / CRS ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( Min( ( ( CS + Max( RRSe,Max( Min( RRSe ,DS ),( RRSe + MUM ) ) ) ) * ( MUM / ( MUM * ( Min( CS ,MUM ) + Min( DS ,MLU ) ) ) ) ) ,MUR ) - ( CS * CS ) ) / ( Min( MLU ,( ( MUM + Max( MLU,MUC ) ) + MUM ) ) - ( ( CS * Max( MUM,( RMSe * ( MLU + ( RMSe - RCSe ) ) ) ) ) - Max( MLU,RCSe ) ) ) )", "obj1": 0.29959514170040485, "obj2": 0.6303432990857158}, {"determining": "( ( ( ( ( ( Const * FirstVNF_RAM ) - Min( MRS ,MDR ) ) / Min( ( Max( FirstVNF_RAM_Server,PN ) - FirstVNF_Mem_Server ) ,MRS ) ) - ( ( ( FirstVNF_RAM / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( Min( MUM ,MUR ) - ( CS * MUR ) ) / ( Min( MLU ,( ( MUM + Max( MLU,MUM ) ) + MUM ) ) - ( ( CS * MLU ) - Max( MLU,MUM ) ) ) )", "obj1": 0.29959514170040485, "obj2": 0.6303432990857158}, {"determining": "( ( ( Const - ( ( ( FirstVNF_RAM / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( Min( DS ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) - DS ) + ( RMSe - RMSe ) )", "obj1": 0.20445344129554655, "obj2": 0.7207027376211621}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) * ( Max( ( ( ( Const * FirstVNF_RAM ) - ( MRS - MDR ) ) / Min( ACS ,FirstVNF_CPU_Server ) ),MRS ) - ( RRS - MRS ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR * CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( Min( DS ,MUM ) * MUM ) )", "obj1": 0.09919028340080972, "obj2": 0.8550405826337638}, {"determining": "( Min( Max( ( ( DDR / MRS ) * RRS ),AMS ) ,CRS ) + Min( ACS ,MRS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR * CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( Min( DS ,( CS + MUR ) ) * MUM ) )", "obj1": 0.09716599190283401, "obj2": 0.8560840996838137}, {"determining": "( Min( Max( MDR,AMS ) ,CRS ) + Min( ACS ,MRS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR * CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( Min( DS ,MUM ) * MUM ) )", "obj1": 0.11336032388663968, "obj2": 0.8387375002334203}, {"determining": "( FirstVNF_CPU + ( ( ( ( ( Const * FirstVNF_RAM ) - ( MRS - MDR ) ) / Min( ACS ,FirstVNF_CPU_Server ) ) - ( ( ( FirstVNF_RAM / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) )", "choosing": "( Min( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( ( DS - RMSe ) - ( CS + MUR ) ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( Min( DS ,MUC ) * MUM ) )", "obj1": 0.13765182186234817, "obj2": 0.8265313420212876}, {"determining": "( ( MRS / Const ) / Min( ACS ,MRS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR * CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( ( CS + MUR ) * MUM ) )", "obj1": 0.25708502024291496, "obj2": 0.6636282932258235}, {"determining": "( FirstVNF_CPU + ( ( DDR + BR ) - ( MRS / Const ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR * CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( Min( DS ,MUC ) * MUM ) )", "obj1": 0.12550607287449392, "obj2": 0.831486195420791}, {"determining": "( ( ( FirstVNF_RAM / ( MRS / FirstVNF_CPU_Server ) ) * RRS ) + ( FirstVNF_RAM - ( BR / Max( Min( ( ( ( MRS - PN ) * BR ) * PN ) ,ARS ),( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( ( MUC + Min( MLU ,( ( MUM + MLU ) + MUM ) ) ) ,MUR ) - ( CS + MUR ) ) ) * ( Max( MUR,MUM ) / RMSe ) )", "obj1": 0.3117408906882591, "obj2": 0.6213289333214684}, {"determining": "( ( ( FirstVNF_RAM / ( MRS / FirstVNF_CPU_Server ) ) * RRS ) + ( FirstVNF_RAM - ( BR / Max( Min( ( ( ( MRS - PN ) * ( RRS - MRS ) ) * PN ) ,ARS ),AMS ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( ( ( DS * RMSe ) + RMSe ) ,MUR ) - ( CS + MUR ) ) ) * ( Max( MUR,MUM ) / RMSe ) )", "obj1": 0.3117408906882591, "obj2": 0.6213289333214684}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_CPU - DDR ) )", "choosing": "( ( Max( ( MLU + MUM ),Max( DS,Min( RMSe ,MUC ) ) ) * ( Min( ( ( ( MUR * MUM ) * RMSe ) + ( CS + ( CS / RCSe ) ) ) ,MUR ) + Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( Max( Min( MLU ,MLU ),Max( RRSe,MLU ) ) / RMSe ) ) ,( Min( Min( DS ,Min( RMSe ,RMSe ) ) ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.242914979757085, "obj2": 0.7023770565240389}, {"determining": "( Min( Max( MDR,AMS ) ,CRS ) + Min( FirstVNF_RAM ,MRS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( DS - RMSe ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( Min( DS ,MUM ) * MUM ) )", "obj1": 0.11133603238866396, "obj2": 0.842920282148138}, {"determining": "( ( ( FirstVNF_RAM / ( MRS / FirstVNF_CPU_Server ) ) * RRS ) + ( FirstVNF_RAM - ( BR / Max( Min( ( ( ( MRS - PN ) * BR ) * PN ) ,( Min( Max( MDR,AMS ) ,CRS ) + Min( ACS ,MRS ) ) ),( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),DS ) ,( Min( ( MUC + Min( MLU ,( ( MUM + MLU ) + MUM ) ) ) ,MUR ) - ( CS + MUR ) ) ) * ( Max( MUR,MUM ) / RMSe ) )", "obj1": 0.3117408906882591, "obj2": 0.6213289333214684}, {"determining": "( ( ( FirstVNF_RAM / ( MRS / FirstVNF_CPU_Server ) ) * RRS ) + ( FirstVNF_RAM - ( BR / Max( Min( ( ( ( MRS - PN ) * BR ) * PN ) ,ARS ),( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( ( MUC + Min( MLU ,( ( MUM + MLU ) + MUM ) ) ) ,MUR ) - ( CS + MUR ) ) ) * ( Max( MUR,MUM ) / RMSe ) )", "obj1": 0.2854251012145749, "obj2": 0.6382057371116323}, {"determining": "( FirstVNF_RAM_Server - ( Max( ( DDR + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( Const * Min( RRS ,Max( FirstVNF_RAM,Max( FirstVNF_RAM,RRS ) ) ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR * CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( Min( DS ,MUC ) * MUM ) )", "obj1": 0.20850202429149797, "obj2": 0.7147163276914312}, {"determining": "( ( ( Const - ( ( ( FirstVNF_RAM / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / ( Max( Const,FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + DDR ) ) )", "choosing": "( ( Min( DS ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) - DS ) + ( RMSe - RMSe ) )", "obj1": 0.15991902834008098, "obj2": 0.7441458753910019}, {"determining": "( ( ( Const - ( ( ( FirstVNF_RAM / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( Min( DS ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) - DS ) + ( RMSe - RMSe ) )", "obj1": 0.16194331983805668, "obj2": 0.7433769962066203}, {"determining": "( ( ( Const - ( ( ( FirstVNF_RAM / BR ) * Min( Const ,FirstVNF_RAM_Server ) ) + ( ( ( DDR + BR ) - ( MRS / Const ) ) - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( Min( MUM ,MUR ) - ( ( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) - DS ) + ( RMSe - RMSe ) ) ) / DS )", "obj1": 0.08097165991902834, "obj2": 0.8912682707888127}, {"determining": "( ( ( DDR + BR ) - ( MRS / Const ) ) / MRS )", "choosing": "( ( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) - DS ) + ( RMSe - RMSe ) )", "obj1": 0.1720647773279352, "obj2": 0.7362379225692357}, {"determining": "( ( ( RRS / ARS ) + Max( FirstVNF_CPU_Server,Const ) ) * PN )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( ( ( DS * RMSe ) + RMSe ) ,MUR ) - ( CS + MUR ) ) ) * ( Max( MUR,MUM ) / RMSe ) )", "obj1": 0.291497975708502, "obj2": 0.6340618483761116}, {"determining": "( Min( ( ACS / ARS ) ,CRS ) + Max( MDR,AMS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR * CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( Min( Max( ( DS - ( ( MUC + CS ) * Max( MLU,CS ) ) ),( MUR * CS ) ) ,MUM ) * MUM ) )", "obj1": 0.27125506072874495, "obj2": 0.6529564029682949}, {"determining": "( ( ( FirstVNF_RAM / ( MRS / FirstVNF_CPU_Server ) ) * RRS ) + ( FirstVNF_RAM - ( BR / Max( Min( ( ( ( MRS - PN ) * BR ) * ARS ) ,ARS ),( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( ( MUC + Min( MLU ,( CS + MUR ) ) ) ,MUR ) - ( CS + MUR ) ) ) * ( Max( MUR,MUM ) / RMSe ) )", "obj1": 0.3117408906882591, "obj2": 0.6213289333214684}, {"determining": "( ( ( RRS / ARS ) + Max( FirstVNF_CPU_Server,Const ) ) * PN )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( ( MUC + Min( MLU ,( ( MUM + MLU ) + MUM ) ) ) ,MUR ) - ( CS + MUR ) ) ) * ( Max( MUR,MUM ) / RMSe ) )", "obj1": 0.3117408906882591, "obj2": 0.6213289333214684}, {"determining": "( ( ( FirstVNF_RAM / ( MRS / FirstVNF_CPU_Server ) ) * RRS ) + ( FirstVNF_RAM - ( BR / Max( Min( ( ( ( MRS - PN ) * BR ) * PN ) ,ARS ),( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( ( ( DS * RMSe ) + RMSe ) ,MUR ) - ( CS + MUR ) ) ) * ( Max( MUR,MUM ) / RMSe ) )", "obj1": 0.291497975708502, "obj2": 0.6340618483761116}, {"determining": "( ( ( ( ( ( Const * FirstVNF_RAM ) - Min( MRS ,MDR ) ) / Min( ( Max( FirstVNF_RAM_Server,PN ) - FirstVNF_Mem_Server ) ,MRS ) ) - ( ( ( FirstVNF_RAM / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( Min( MUM ,MUR ) - ( CS * MUR ) ) / ( Min( MLU ,( ( MUM + Max( MLU,MUM ) ) + MUM ) ) - ( ( CS * MLU ) - Max( MLU,MUM ) ) ) )", "obj1": 0.29959514170040485, "obj2": 0.6303432990857158}, {"determining": "( ( ( ( ( ( Const * FirstVNF_RAM ) - Min( MRS ,MDR ) ) / Min( ( Max( FirstVNF_RAM_Server,PN ) - FirstVNF_Mem_Server ) ,MRS ) ) - ( ( ( FirstVNF_RAM / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( Min( MUM ,MUR ) - ( CS * MUR ) ) / ( Min( MLU ,( ( MUM + Max( MLU,MUM ) ) + MUM ) ) - ( ( CS * MLU ) - Max( MLU,MUM ) ) ) )", "obj1": 0.29959514170040485, "obj2": 0.6303432990857158}, {"determining": "( ( ( Const - ( ( ( FirstVNF_RAM / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( Min( DS ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) - DS ) + ( RMSe - RMSe ) )", "obj1": 0.17611336032388664, "obj2": 0.7288887926055185}, {"determining": "( ( ( RRS / ARS ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server )", "choosing": "( ( Min( MUM ,MUR ) - ( CS * MUR ) ) / Min( RCSe ,CS ) )", "obj1": 0.3097165991902834, "obj2": 0.6218247756688682}, {"determining": "( Min( FirstVNF_RAM_Server ,Max( MDR,Min( FirstVNF_RAM_Server ,( MRS * ( PN * Max( Min( DDR ,ARS ),AMS ) ) ) ) ) ) + Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( DS ,MUC ) * MUM ) * ( ( ( ( Min( DS ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) - DS ) / MUM ) - ( ( RRSe * ( Max( RMSe,Max( DS,CS ) ) - RMSe ) ) * Min( Max( Min( DS ,Max( CS,MUC ) ),( ( MLU + MUR ) + RCSe ) ) ,DS ) ) ) * Min( MUC ,CS ) ) )", "obj1": 0.1417004048582996, "obj2": 0.8156840142744867}, {"determining": "( ( ( Const - ( ( ( FirstVNF_RAM / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( Min( DS ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) - DS ) + ( RMSe - RMSe ) )", "obj1": 0.16194331983805668, "obj2": 0.7433769962066203}, {"determining": "( ( ( RRS / ARS ) + Max( FirstVNF_CPU_Server,Const ) ) * PN )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( ( MUC + MLU ) ,MUR ) - ( CS + MUR ) ) ) * ( Max( MUR,MUM ) / RMSe ) )", "obj1": 0.291497975708502, "obj2": 0.6340618483761116}, {"determining": "( ( ( Const - ( ( ( FirstVNF_RAM / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( ( Min( ( ( RMSe / DS ) + RRSe ) ,( ( Min( MUC ,MUM ) * ( Max( DS,RCSe ) * RCSe ) ) + DS ) ) / ( RRSe * MUM ) ) / RMSe ) )", "obj1": 0.23684210526315788, "obj2": 0.7127164875848996}, {"determining": "( Min( Max( MDR,AMS ) ,CRS ) + ( ( DDR + BR ) - ( MRS / Const ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR * CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( Min( DS ,MUC ) * MUM ) )", "obj1": 0.13360323886639677, "obj2": 0.8281144976791472}, {"determining": "( ( ( RRS / ARS ) + Max( FirstVNF_CPU_Server,Const ) ) * PN )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( ( Max( ( MUR / MUC ),( Max( RRSe,MLU ) + MUR ) ) + Min( MLU ,( ( MUM + MLU ) + MUM ) ) ) ,MUR ) - ( CS + MUR ) ) ) * ( Max( MUR,MUM ) * RMSe ) )", "obj1": 0.26720647773279355, "obj2": 0.6596547741000294}, {"determining": "( ( ( DDR + BR ) - ( MRS / Const ) ) + ( ( MRS - PN ) * ( RRS - MRS ) ) )", "choosing": "( Min( ( Min( ( Min( ( ( RRSe * RRSe ) / DS ) ,RMSe ) / MUC ) ,( Min( MUM ,MUR ) - Min( ( ( DS * RMSe ) + RMSe ) ,MUR ) ) ) / MUM ) ,( ( MUM - MUR ) - ( CS + MUR ) ) ) * ( Min( DS ,MUC ) * MUM ) )", "obj1": 0.1437246963562753, "obj2": 0.8116626606325913}, {"determining": "( ( ( DDR + BR ) - ( MRS / Const ) ) + Min( ARS ,( Min( ( ( AMS - Min( ARS ,BR ) ) - ( BR - ARS ) ) ,FirstVNF_CPU ) - RRS ) ) )", "choosing": "( Min( ( Min( ( Min( ( ( RRSe * RRSe ) / DS ) ,RMSe ) / MUC ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) / MUM ) ,( ( MUM - MUR ) - ( CS + MUR ) ) ) * ( Min( DS ,MUC ) * MUM ) )", "obj1": 0.12955465587044535, "obj2": 0.831346926224416}, {"determining": "( FirstVNF_RAM_Server - ( Max( ( DDR + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( Const * Min( RRS ,Max( ( FirstVNF_RAM - ( DDR / BR ) ),Max( FirstVNF_RAM,RRS ) ) ) ) ) )", "choosing": "( ( Max( ( MLU + MUM ),Max( DS,Min( RMSe ,MUC ) ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * ( ( MUM * ( RCSe / Min( DS ,Min( RMSe ,RMSe ) ) ) ) * ( MUR / CS ) ) )", "obj1": 0.24493927125506074, "obj2": 0.6830786696904313}, {"determining": "( FirstVNF_RAM_Server - ( Max( ( DDR + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( Const * Min( RRS ,Max( FirstVNF_RAM,Max( FirstVNF_RAM,RRS ) ) ) ) ) )", "choosing": "( ( ( ( MUM * ( RCSe / Min( DS ,Min( RMSe ,RMSe ) ) ) ) * ( MUR / CS ) ) + MUC ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Max( MUR,DS ) ) ) )", "obj1": 0.20242914979757085, "obj2": 0.7252242813983263}, {"determining": "( ( ( FirstVNF_RAM / ( MRS / FirstVNF_CPU_Server ) ) * RRS ) + ( FirstVNF_RAM - ( BR / Max( Min( ( ( ( MRS - PN ) * BR ) * PN ) ,ARS ),AMS ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( ( MUC + RMSe ) ,MUR ) - ( CS + MUR ) ) ) * ( Max( MUR,MUM ) / RMSe ) )", "obj1": 0.27530364372469635, "obj2": 0.6508497274023973}, {"determining": "( ( ( Min( DDR ,ARS ) - ( ( ( FirstVNF_RAM / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( Min( MUM ,MUR ) - ( CS * MUR ) ) / Min( RCSe ,CS ) )", "obj1": 0.3097165991902834, "obj2": 0.6218247756688682}, {"determining": "( ( ( FirstVNF_RAM / ( MRS / FirstVNF_CPU_Server ) ) * RRS ) + ( FirstVNF_RAM - ( BR / Max( Min( ( ( ( MRS - PN ) * BR ) * PN ) ,ARS ),AMS ) ) ) )", "choosing": "( ( Min( MUM ,MUR ) - ( CS * MUR ) ) / Min( RCSe ,CS ) )", "obj1": 0.3097165991902834, "obj2": 0.6218247756688682}, {"determining": "( ( ( ( ( ( Const * FirstVNF_RAM ) - ( MRS - MDR ) ) / Min( ACS ,FirstVNF_CPU_Server ) ) - ( ( ( FirstVNF_RAM / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),Max( FirstVNF_CPU_Server,Const ) ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( Min( MUM ,MUR ) - ( CS * MUR ) ) / ( Min( MLU ,( ( RMSe + MLU ) + MUM ) ) - ( ( CS * MLU ) - Max( MUR,MUM ) ) ) )", "obj1": 0.29554655870445345, "obj2": 0.6327155391840399}, {"determining": "( Min( PN ,FirstVNF_CPU_Server ) + ( ( ( AMS - MRS ) + BR ) - ( MRS / Const ) ) )", "choosing": "( Min( ( MUM * DS ) ,( Min( MUM ,MUR ) - ( ( CS + ( MUM * RCSe ) ) + MUR ) ) ) * ( Min( DS ,MUC ) * MUM ) )", "obj1": 0.1396761133603239, "obj2": 0.8200725337229475}, {"determining": "( ( ( Const - ( ( ( FirstVNF_RAM / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Min( DDR ,ARS ),AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( ( Min( ( ( RMSe / DS ) + RRSe ) ,( ( Min( MUC ,MUM ) * ( Max( DS,RCSe ) * RCSe ) ) + DS ) ) / ( RRSe * MUM ) ) / RMSe ) )", "obj1": 0.23684210526315788, "obj2": 0.7127164875848996}, {"determining": "( Min( FirstVNF_RAM_Server ,Max( MDR,Min( FirstVNF_RAM_Server ,( MRS * ( PN * RRS ) ) ) ) ) + ( Const + Min( ( RRS + FirstVNF_Mem_Server ) ,CRS ) ) )", "choosing": "( ( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) - DS ) + ( RMSe - RMSe ) )", "obj1": 0.17611336032388664, "obj2": 0.7288887926055185}, {"determining": "( Max( Const,( ( PN / ( FirstVNF_Mem - Max( DDR,MDR ) ) ) / ( ACS / ARS ) ) ) - ( RRS - ( FirstVNF_CPU_Server / RRS ) ) )", "choosing": "( ( ( Max( CS,RCSe ) / ( RMSe / MLU ) ) * ( ( MUC + CS ) * Max( MLU,CS ) ) ) / ( Max( MLU,( Min( RRSe ,Min( RCSe ,RRSe ) ) / Min( ( MUR - RMSe ) ,Max( RCSe,CS ) ) ) ) * ( DS * DS ) ) )", "obj1": 0.09109311740890688, "obj2": 0.8762623459419124}, {"determining": "( Min( Max( MDR,AMS ) ,CRS ) + Max( Min( DDR ,ARS ),AMS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR * Min( MUM ,MUR ) ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( Min( DS ,MUM ) * MUM ) )", "obj1": 0.11740890688259109, "obj2": 0.8377763231940396}, {"determining": "( ( ( FirstVNF_RAM / ( MRS / FirstVNF_CPU_Server ) ) * RRS ) + ( FirstVNF_RAM - ( BR / Max( Min( ( ( RRS * BR ) * PN ) ,ARS ),AMS ) ) ) )", "choosing": "( ( ( Max( CS,RCSe ) / ( RMSe / MLU ) ) * ( ( MUC + CS ) * Max( MLU,CS ) ) ) / ( Max( MLU,( Min( RRSe ,Min( RCSe ,RRSe ) ) / Min( ( MUR - RMSe ) ,Max( RCSe,CS ) ) ) ) * ( DS * DS ) ) )", "obj1": 0.09109311740890688, "obj2": 0.8762623459419124}, {"determining": "( ( ( Const - ( ( ( FirstVNF_RAM / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( MRS,AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR * CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( Min( DS ,MUC ) * MUM ) )", "obj1": 0.10121457489878542, "obj2": 0.8530802716474573}, {"determining": "( Min( AMS ,MRS ) / Max( Max( Max( Max( FirstVNF_RAM,FirstVNF_CPU_Server ),( MDR - MRS ) ),( ( FirstVNF_RAM + AMS ) - ( FirstVNF_CPU - FirstVNF_Mem ) ) ),( Min( ( MRS - Const ) ,( FirstVNF_RAM - FirstVNF_Mem ) ) / ( Max( BR,MRS ) * ( Const * MDR ) ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUR + CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( ( Min( ( ( RMSe / ( ( MUR * MLU ) + Min( RCSe ,CS ) ) ) + RRSe ) ,( ( Min( MUC ,MUM ) * ( Max( DS,RCSe ) * RCSe ) ) + DS ) ) / ( RRSe * MUM ) ) / RMSe ) )", "obj1": 0.23684210526315788, "obj2": 0.7127164875848996}, {"determining": "( Min( Max( MDR,AMS ) ,CRS ) + ( ( DDR + FirstVNF_RAM ) - ( MRS / Const ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( ( Max( ( MLU + MUM ),Max( DS,Min( RMSe ,MUC ) ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * CS ) ) ,( Min( MUM ,MUR ) - ( CS + MUR ) ) ) * ( Min( DS ,MUC ) * MUM ) )", "obj1": 0.12348178137651822, "obj2": 0.8329988767228653}, {"determining": "( ( ( Const - ( ( ( FirstVNF_RAM / BR ) * RRS ) + ( FirstVNF_RAM - ( Max( Const,AMS ) / BR ) ) ) ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "( ( Min( ( ( MUM - DS ) + ( MLU - RMSe ) ) ,MUR ) - ( CS * MUR ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Max( MUR,MUM ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.6627664662769444}]}