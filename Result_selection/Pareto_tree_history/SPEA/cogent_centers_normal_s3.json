{"1": [{"determining": "( ( FirstVNF_CPU_Server / DDR ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( DS,DS ) )", "obj1": 0.5469061876247505, "obj2": 0.414669775723175}, {"determining": "( ( CRS - DDR ) / Max( DDR,FirstVNF_Mem ) )", "choosing": "( Min( ( RRSe * ( MUM * ( Min( ( MUC * Max( CS,CS ) ) ,RCSe ) - MLU ) ) ) ,MUR ) - Max( MLU,DS ) )", "obj1": 0.7924151696606786, "obj2": 0.18923031562859935}, {"determining": "( ( Const - ARS ) * Max( MDR,PN ) )", "choosing": "( ( DS - RRSe ) / ( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( AMS + ( FirstVNF_RAM - ( FirstVNF_Mem - FirstVNF_CPU ) ) ) * ( FirstVNF_CPU_Server + DDR ) ) - FirstVNF_CPU_Server ) ,( FirstVNF_RAM + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + RCSe ) + Min( RRSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * FirstVNF_CPU ) - ( FirstVNF_RAM / MDR ) )", "choosing": "( ( RCSe / RCSe ) - ( DS + RCSe ) )", "obj1": 0.9880239520958084, "obj2": 0.01418156023378097}, {"determining": "( Min( DDR ,( FirstVNF_RAM_Server / ( PN + BR ) ) ) - Max( FirstVNF_Mem,AMS ) )", "choosing": "Max( ( MUM * MUR ),( DS + ( CS + ( MLU * RCSe ) ) ) )", "obj1": 0.9960079840319361, "obj2": 0.0018953000390963637}, {"determining": "( Max( Const,Max( ( ( FirstVNF_Mem / AMS ) * FirstVNF_Mem ),FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( MLU + RCSe ) + ( ( MLU + ( ( MUC * RRSe ) * RRSe ) ) * MUM ) )", "obj1": 0.7425149700598802, "obj2": 0.23408599462560042}, {"determining": "Min( ( ARS + FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem ) )", "choosing": "( ( MUC / MUR ) - ( RMSe / MLU ) )", "obj1": 0.3592814371257485, "obj2": 0.5833728440425564}, {"determining": "( ( AMS - MRS ) - Min( BR ,Const ) )", "choosing": "( ( DS + MUR ) / Max( RCSe,MUR ) )", "obj1": 0.5169660678642715, "obj2": 0.43641147115692674}, {"determining": "( ( FirstVNF_Mem / CRS ) - Max( PN,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUR / CS ),Min( MLU ,MUR ) ) * ( ( MUM + MUM ) / ( RRSe - MUR ) ) )", "obj1": 0.3912175648702595, "obj2": 0.5662549410373751}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),CRS ) - Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( ( RCSe * CS ) / ( CS / MUR ) ) + Max( ( CS / RRSe ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( Min( MRS ,BR ) + ACS ) )", "choosing": "( ( MUM / DS ) / ( ( MLU * RRSe ) * DS ) )", "obj1": 0.2774451097804391, "obj2": 0.7001837146417388}, {"determining": "( ( MDR * Max( ( MDR - MDR ),CRS ) ) + ( CRS - ( DDR + Const ) ) )", "choosing": "( ( CS + RRSe ) / ( ( CS / DS ) + ( ( MUR / MUC ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU + PN ),( Const - FirstVNF_Mem_Server ) ) + ( Min( DDR ,CRS ) / ( Const - BR ) ) )", "choosing": "Max( ( Max( RRSe,DS ) / MLU ),( DS + MUM ) )", "obj1": 0.4590818363273453, "obj2": 0.5292370985316887}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( MUR + DS ) + MUR ) )", "obj1": 0.29141716566866266, "obj2": 0.6516179204641015}, {"determining": "Max( Max( RRS,( ARS - PN ) ),( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / DS ) - ( MLU / RCSe ) )", "obj1": 0.2894211576846307, "obj2": 0.6527706319629112}, {"determining": "( ( MDR * FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + Const ) )", "choosing": "( ( MUR - MUR ) / ( Min( ( ( CS / RCSe ) / ( MUR / ( ( Max( MLU,RMSe ) + RCSe ) - RMSe ) ) ) ,MUM ) - Min( CS ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - FirstVNF_CPU ) * ARS ) + ARS ) - Min( PN ,Max( FirstVNF_RAM_Server,BR ) ) )", "choosing": "( Max( ( MUC + RRSe ),( RCSe / MLU ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,DDR ) * ( DDR - Max( ACS,FirstVNF_Mem ) ) )", "choosing": "( ( MUC + MUR ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - ARS ) * ( ACS - PN ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( ( MUC - RCSe ) * Min( DS ,DS ) ) / Max( Min( CS ,MUC ),( MUC * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( MDR + Max( PN,( ( ( Min( FirstVNF_Mem_Server ,ACS ) + Min( RRS ,MRS ) ) + FirstVNF_Mem_Server ) - ( ( CRS - ( AMS * ACS ) ) + Max( PN,AMS ) ) ) ) ),DDR ) ,( ( AMS * AMS ) + Min( ( ARS + AMS ) ,DDR ) ) )", "choosing": "Min( ( DS - MUR ) ,( Min( MUM ,RRSe ) - ( ( Min( DS ,MUC ) / Max( CS,DS ) ) - ( RCSe + ( Min( RRSe ,Min( MLU ,MUR ) ) + MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( BR ,FirstVNF_Mem ) - Max( FirstVNF_Mem_Server,AMS ) ) / ( FirstVNF_CPU - AMS ) )", "choosing": "( Min( ( DS + MUC ) ,Max( DS,MUR ) ) * Min( ( ( Max( RRSe,( ( ( MUC - MUM ) + RRSe ) + DS ) ) - RMSe ) + MUC ) ,Min( MUR ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( PN - BR ) / ( BR * CRS ) ) ,( ( RRS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem + CRS ) ) )", "choosing": "Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM - ( RRS / MDR ) ),( MRS + Min( DDR ,( MDR / DDR ) ) ) )", "choosing": "Max( Max( DS,( DS / CS ) ),( Max( MUR,RRSe ) + ( ( ( MUC / CS ) + RCSe ) * MUC ) ) )", "obj1": 0.5069860279441117, "obj2": 0.47851297525740544}, {"determining": "Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + ( ( CRS * BR ) / Min( ( AMS - ( FirstVNF_RAM_Server * ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + CRS ) ) ) ,FirstVNF_RAM_Server ) ) ) ,( Min( Min( AMS ,PN ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( Min( ( MUC / MUR ) ,( ( MUM - MUR ) + ( MUM * CS ) ) ) * ( Min( ( MLU - MUM ) ,( CS + RMSe ) ) / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( AMS * ACS ),( FirstVNF_RAM / ( ( RRS + FirstVNF_Mem ) - FirstVNF_RAM ) ) )", "choosing": "( Min( Max( Min( RRSe ,CS ),Min( MUM ,RRSe ) ) ,( ( DS + RRSe ) / Min( CS ,MUM ) ) ) * Min( ( Min( RRSe ,DS ) - ( CS / RCSe ) ) ,( ( Min( Max( RRSe,DS ) ,RCSe ) * RMSe ) / ( MUC + MUM ) ) ) )", "obj1": 0.48303393213572854, "obj2": 0.48009511161627927}, {"determining": "( Min( ( ( MRS - FirstVNF_CPU_Server ) / ( MDR * RRS ) ) ,Max( ( RRS / FirstVNF_RAM_Server ),( FirstVNF_CPU + FirstVNF_Mem ) ) ) - ( ( ( MRS - MRS ) / ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) * ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ) )", "choosing": "( ( Max( ( RRSe - MUC ),( MUR - MUM ) ) * Min( ( RRSe + CS ) ,( RCSe + MUC ) ) ) + ( Min( ( DS / DS ) ,Min( MUR ,MUC ) ) * Min( ( MUC + MLU ) ,Max( RCSe,MUM ) ) ) )", "obj1": 0.4091816367265469, "obj2": 0.5340073516813716}, {"determining": "( ( Min( FirstVNF_CPU_Server ,Const ) - Max( ( RRS / AMS ),( PN / FirstVNF_Mem_Server ) ) ) * ( Max( Min( FirstVNF_RAM ,FirstVNF_Mem ),FirstVNF_CPU_Server ) - ARS ) )", "choosing": "Min( Min( DS ,Min( MUR ,( CS - RRSe ) ) ) ,( MUR * ( RCSe - ( RRSe + MUR ) ) ) )", "obj1": 0.6526946107784432, "obj2": 0.33600637862805743}, {"determining": "( ( FirstVNF_RAM * ( ( ACS - RRS ) / Const ) ) / Min( FirstVNF_CPU_Server ,Max( ( PN * ACS ),( CRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,( Max( RRSe,DS ) * ( DS * RCSe ) ) ) ,( ( ( MUC + MLU ) + ( MLU - MUC ) ) + Max( ( CS + MUC ),Max( RCSe,RCSe ) ) ) )", "obj1": 0.5688622754491018, "obj2": 0.38884865272070185}, {"determining": "( ( Max( FirstVNF_Mem_Server,PN ) * FirstVNF_RAM_Server ) - ( Max( ( ( Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) / ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU - BR ) ) * ( PN - AMS ) ) ) / AMS ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - ( MLU * ( MUR - RCSe ) ) ) ,( ( ( ( RCSe * ( CS - ( MUM - MUC ) ) ) - MUC ) / RMSe ) * ( Min( CS ,MUC ) - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( ARS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( BR ,Const ) ) ) / Min( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) )", "choosing": "( ( RRSe - ( Min( ( Min( RMSe ,MLU ) / RCSe ) ,RCSe ) / ( MUR - RCSe ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server + RRS ) )", "choosing": "( ( MUR - ( ( RMSe - MLU ) / Max( MUC,RRSe ) ) ) - Min( ( MUM + Min( MLU ,RMSe ) ) ,( ( DS * MLU ) / ( RRSe - MLU ) ) ) )", "obj1": 0.46107784431137727, "obj2": 0.5233754239046194}, {"determining": "Min( Min( Max( ( DDR / ARS ),Min( DDR ,CRS ) ) ,( Min( Const ,CRS ) - Max( AMS,RRS ) ) ) ,Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) + RRSe ) * ( CS - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,MUM ) + Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - CRS ) * CRS ) / ( FirstVNF_RAM + PN ) )", "choosing": "Min( ( Max( ( MUC * ( RRSe * MUM ) ),RMSe ) - Min( RMSe ,DS ) ) ,Min( ( Max( RCSe,RRSe ) - ( RRSe - CS ) ) ,Min( ( DS * RRSe ) ,Min( MUM ,MUM ) ) ) )", "obj1": 0.5409181636726547, "obj2": 0.42134540998381526}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * FirstVNF_RAM ) ) ) ,( DDR + ( RRS - Min( ( DDR - ( ( ACS / Const ) * FirstVNF_Mem_Server ) ) ,ACS ) ) ) )", "choosing": "( Max( RCSe,( ( RCSe - ( MLU * MUM ) ) / DS ) ) / ( CS * RCSe ) )", "obj1": 0.9900199600798403, "obj2": 0.003826667033783966}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( DDR / RRS ) )", "choosing": "( Max( Min( ( MUR * MLU ) ,( RRSe / DS ) ),( Max( DS,MUR ) - Min( RRSe ,RCSe ) ) ) / Max( ( ( MLU * MLU ) * ( MLU * MUM ) ),Min( ( DS / RMSe ) ,( DS * RMSe ) ) ) )", "obj1": 0.9221556886227545, "obj2": 0.06505479113536707}, {"determining": "Max( ( ( ( FirstVNF_Mem / MRS ) / ( BR + FirstVNF_RAM ) ) / Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ),( ( ( DDR - FirstVNF_Mem ) + ( MRS / Const ) ) * ( ( FirstVNF_RAM_Server - AMS ) * Max( ARS,ARS ) ) ) )", "choosing": "Max( ( ( ( MUM - RMSe ) - ( MUM - RCSe ) ) * ( Min( RRSe ,RRSe ) * ( MUM / RMSe ) ) ),( ( Max( MUR,MUM ) + Min( MUC ,RMSe ) ) * Max( ( MUR / RRSe ),( CS + DS ) ) ) )", "obj1": 0.4750499001996008, "obj2": 0.49572794638357154}, {"determining": "( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( FirstVNF_CPU * ( ( Max( Min( DDR ,RRS ),Const ) / ACS ) / FirstVNF_Mem ) ) / ( PN - BR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( ( RRSe * RCSe ) / ( RCSe + CS ) ) + ( ( ( ( Min( MUC ,Min( RCSe ,MUR ) ) / MLU ) / RMSe ) + Min( MUR ,Min( ( DS + MLU ) ,MUR ) ) ) - Max( MUM,MUC ) ) ),( ( ( MUM - MLU ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - Max( FirstVNF_Mem_Server,MRS ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( Max( Min( MLU ,RMSe ),( DS + CS ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.36926147704590817, "obj2": 0.5827948697718666}, {"determining": "( ( ( FirstVNF_RAM - CRS ) * ( Max( PN,FirstVNF_Mem ) - Min( DDR ,FirstVNF_CPU_Server ) ) ) + Max( ( ( AMS + MRS ) * ( FirstVNF_CPU / FirstVNF_CPU ) ),( ( Const * Const ) / ( FirstVNF_Mem / Const ) ) ) )", "choosing": "( Min( ( ( RRSe + CS ) + ( MUM - MUR ) ) ,( Max( MUR,MLU ) + Max( RMSe,MUR ) ) ) + ( Min( ( MUR - MLU ) ,( RMSe + RCSe ) ) - ( MUR * MLU ) ) )", "obj1": 0.47305389221556887, "obj2": 0.5166436003804105}], "2": [{"determining": "( ( CRS - DDR ) / Max( DDR,FirstVNF_Mem ) )", "choosing": "( Min( ( RRSe * ( MUM * ( Min( ( MUC * Max( CS,CS ) ) ,RCSe ) - MLU ) ) ) ,MUR ) - Max( MLU,DS ) )", "obj1": 0.7924151696606786, "obj2": 0.18923031562859935}, {"determining": "( ( Const - ARS ) * Max( MDR,PN ) )", "choosing": "( ( DS - RRSe ) / ( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( AMS + ( FirstVNF_RAM - ( FirstVNF_Mem - FirstVNF_CPU ) ) ) * ( FirstVNF_CPU_Server + DDR ) ) - FirstVNF_CPU_Server ) ,( FirstVNF_RAM + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + RCSe ) + Min( RRSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * FirstVNF_CPU ) - ( FirstVNF_RAM / MDR ) )", "choosing": "( ( RCSe / RCSe ) - ( DS + RCSe ) )", "obj1": 0.9880239520958084, "obj2": 0.01418156023378097}, {"determining": "( Min( DDR ,( FirstVNF_RAM_Server / ( PN + BR ) ) ) - Max( FirstVNF_Mem,AMS ) )", "choosing": "Max( ( MUM * MUR ),( DS + ( CS + ( MLU * RCSe ) ) ) )", "obj1": 0.9960079840319361, "obj2": 0.0018953000390963637}, {"determining": "Min( ( ARS + FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem ) )", "choosing": "( ( MUC / MUR ) - ( RMSe / MLU ) )", "obj1": 0.3592814371257485, "obj2": 0.5833728440425564}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),CRS ) - Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( ( RCSe * CS ) / ( CS / MUR ) ) + Max( ( CS / RRSe ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * Max( ( MDR - MDR ),CRS ) ) + ( CRS - ( DDR + Const ) ) )", "choosing": "( ( CS + RRSe ) / ( ( CS / DS ) + ( ( MUR / MUC ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( MUR + DS ) + MUR ) )", "obj1": 0.29141716566866266, "obj2": 0.6516179204641015}, {"determining": "Max( Max( RRS,( ARS - PN ) ),( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / DS ) - ( MLU / RCSe ) )", "obj1": 0.2894211576846307, "obj2": 0.6527706319629112}, {"determining": "( ( MDR * FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + Const ) )", "choosing": "( ( MUR - MUR ) / ( Min( ( ( CS / RCSe ) / ( MUR / ( ( Max( MLU,RMSe ) + RCSe ) - RMSe ) ) ) ,MUM ) - Min( CS ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - FirstVNF_CPU ) * ARS ) + ARS ) - Min( PN ,Max( FirstVNF_RAM_Server,BR ) ) )", "choosing": "( Max( ( MUC + RRSe ),( RCSe / MLU ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,DDR ) * ( DDR - Max( ACS,FirstVNF_Mem ) ) )", "choosing": "( ( MUC + MUR ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - ARS ) * ( ACS - PN ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( ( MUC - RCSe ) * Min( DS ,DS ) ) / Max( Min( CS ,MUC ),( MUC * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( MDR + Max( PN,( ( ( Min( FirstVNF_Mem_Server ,ACS ) + Min( RRS ,MRS ) ) + FirstVNF_Mem_Server ) - ( ( CRS - ( AMS * ACS ) ) + Max( PN,AMS ) ) ) ) ),DDR ) ,( ( AMS * AMS ) + Min( ( ARS + AMS ) ,DDR ) ) )", "choosing": "Min( ( DS - MUR ) ,( Min( MUM ,RRSe ) - ( ( Min( DS ,MUC ) / Max( CS,DS ) ) - ( RCSe + ( Min( RRSe ,Min( MLU ,MUR ) ) + MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( BR ,FirstVNF_Mem ) - Max( FirstVNF_Mem_Server,AMS ) ) / ( FirstVNF_CPU - AMS ) )", "choosing": "( Min( ( DS + MUC ) ,Max( DS,MUR ) ) * Min( ( ( Max( RRSe,( ( ( MUC - MUM ) + RRSe ) + DS ) ) - RMSe ) + MUC ) ,Min( MUR ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( PN - BR ) / ( BR * CRS ) ) ,( ( RRS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem + CRS ) ) )", "choosing": "Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + ( ( CRS * BR ) / Min( ( AMS - ( FirstVNF_RAM_Server * ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + CRS ) ) ) ,FirstVNF_RAM_Server ) ) ) ,( Min( Min( AMS ,PN ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( Min( ( MUC / MUR ) ,( ( MUM - MUR ) + ( MUM * CS ) ) ) * ( Min( ( MLU - MUM ) ,( CS + RMSe ) ) / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( MRS - FirstVNF_CPU_Server ) / ( MDR * RRS ) ) ,Max( ( RRS / FirstVNF_RAM_Server ),( FirstVNF_CPU + FirstVNF_Mem ) ) ) - ( ( ( MRS - MRS ) / ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) * ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ) )", "choosing": "( ( Max( ( RRSe - MUC ),( MUR - MUM ) ) * Min( ( RRSe + CS ) ,( RCSe + MUC ) ) ) + ( Min( ( DS / DS ) ,Min( MUR ,MUC ) ) * Min( ( MUC + MLU ) ,Max( RCSe,MUM ) ) ) )", "obj1": 0.4091816367265469, "obj2": 0.5340073516813716}, {"determining": "( ( FirstVNF_RAM * ( ( ACS - RRS ) / Const ) ) / Min( FirstVNF_CPU_Server ,Max( ( PN * ACS ),( CRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,( Max( RRSe,DS ) * ( DS * RCSe ) ) ) ,( ( ( MUC + MLU ) + ( MLU - MUC ) ) + Max( ( CS + MUC ),Max( RCSe,RCSe ) ) ) )", "obj1": 0.5688622754491018, "obj2": 0.38884865272070185}, {"determining": "( ( Max( FirstVNF_Mem_Server,PN ) * FirstVNF_RAM_Server ) - ( Max( ( ( Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) / ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU - BR ) ) * ( PN - AMS ) ) ) / AMS ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - ( MLU * ( MUR - RCSe ) ) ) ,( ( ( ( RCSe * ( CS - ( MUM - MUC ) ) ) - MUC ) / RMSe ) * ( Min( CS ,MUC ) - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( ARS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( BR ,Const ) ) ) / Min( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) )", "choosing": "( ( RRSe - ( Min( ( Min( RMSe ,MLU ) / RCSe ) ,RCSe ) / ( MUR - RCSe ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( DDR / ARS ),Min( DDR ,CRS ) ) ,( Min( Const ,CRS ) - Max( AMS,RRS ) ) ) ,Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) + RRSe ) * ( CS - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,MUM ) + Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * FirstVNF_RAM ) ) ) ,( DDR + ( RRS - Min( ( DDR - ( ( ACS / Const ) * FirstVNF_Mem_Server ) ) ,ACS ) ) ) )", "choosing": "( Max( RCSe,( ( RCSe - ( MLU * MUM ) ) / DS ) ) / ( CS * RCSe ) )", "obj1": 0.9900199600798403, "obj2": 0.003826667033783966}, {"determining": "( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( FirstVNF_CPU * ( ( Max( Min( DDR ,RRS ),Const ) / ACS ) / FirstVNF_Mem ) ) / ( PN - BR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( ( RRSe * RCSe ) / ( RCSe + CS ) ) + ( ( ( ( Min( MUC ,Min( RCSe ,MUR ) ) / MLU ) / RMSe ) + Min( MUR ,Min( ( DS + MLU ) ,MUR ) ) ) - Max( MUM,MUC ) ) ),( ( ( MUM - MLU ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / AMS ) * Min( BR ,( RRS / MDR ) ) )", "choosing": "( DS - ( CS + MUC ) )", "obj1": 0.3812375249500998, "obj2": 0.5582631642103946}, {"determining": "Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - MRS ) )", "choosing": "( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * ( ( CS + RMSe ) - Min( MUC ,RRSe ) ) ) ) ) * ( Min( ( CS + RMSe ) ,( MLU - MUM ) ) / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( FirstVNF_Mem - Const ),( FirstVNF_Mem - FirstVNF_Mem ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( FirstVNF_CPU * ARS ) ) ) )", "choosing": "( ( ( ( MUR * Min( RMSe ,CS ) ) / ( DS / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) * ( Min( ( CS + RMSe ) ,( MLU - MUM ) ) / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( PN - BR ),( BR * CRS ) ) ,( ( FirstVNF_Mem + CRS ) / ( RRS - ( ( Max( MRS,FirstVNF_Mem ) + DDR ) / MRS ) ) ) )", "choosing": "Min( ( MUC * MLU ) ,( ( DS * MUR ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( PN - BR ) / ( BR * CRS ) ) ,( ( RRS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem + CRS ) ) )", "choosing": "( ( ( RMSe * DS ) / ( MUM / CS ) ) / ( ( DS * MUR ) * Min( MUR ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,ARS ) * ( FirstVNF_CPU + ACS ) )", "choosing": "( ( MLU / MUM ) * ( RCSe - MUM ) )", "obj1": 0.37325349301397204, "obj2": 0.5707193769790719}, {"determining": "Max( ( ( ( Const / RRS ) - ( ARS * DDR ) ) / Max( ( ACS / PN ),( CRS / BR ) ) ),( ( ACS * FirstVNF_CPU ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( ACS / FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe - DS ) ) / ( ( DS + MUM ) + ( MUR / MUM ) ) ) / Min( ( ( MUC * MUC ) / RCSe ) ,( ( DS + CS ) + Min( RMSe ,CS ) ) ) )", "obj1": 0.3393213572854291, "obj2": 0.6086665526820204}, {"determining": "( Max( DDR,ARS ) - Max( ( Min( FirstVNF_RAM ,DDR ) / PN ),( CRS / BR ) ) )", "choosing": "( ( Min( ( MUR + Max( CS,( ( Min( RCSe ,MUC ) * ( RRSe * MLU ) ) - MUC ) ) ) ,( MLU / RCSe ) ) / ( ( MUM + DS ) * ( MUR / RMSe ) ) ) - ( DS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR / CRS ) - ( MRS - PN ) ) * ( ( Const / FirstVNF_RAM ) * ( FirstVNF_RAM_Server / ACS ) ) )", "choosing": "( ( RRSe - MUR ) - ( RCSe - RMSe ) )", "obj1": 0.32335329341317365, "obj2": 0.628413984198884}, {"determining": "( ( ( ( MDR * PN ) - Min( Const ,BR ) ) + ( ( FirstVNF_RAM + AMS ) - ( Max( Max( ( ACS * FirstVNF_CPU ),( BR * ARS ) ),FirstVNF_RAM_Server ) * MDR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( Min( BR ,MRS ) / ( Const - FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( RCSe - MUM ),Min( ( ( ( ( MLU * DS ) / ( RMSe * MUC ) ) / RRSe ) / RMSe ) ,( RMSe + Min( ( RMSe - RCSe ) ,Min( RRSe ,MUR ) ) ) ) ) / Max( Max( MUR,CS ),Min( ( RMSe + MLU ) ,Min( MUC ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) )", "choosing": "( ( ( ( MLU - MUR ) / Min( CS ,MUM ) ) + Max( ( MUR + MUC ),( MLU * MUM ) ) ) * ( Min( ( RCSe * MLU ) ,Min( CS ,MUR ) ) / ( ( MUC / MUC ) / Max( RCSe,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem - Min( ( FirstVNF_CPU_Server - Max( ARS,CRS ) ) ,Min( AMS ,BR ) ) ),BR ) - Min( FirstVNF_CPU ,MDR ) )", "choosing": "Max( ( ( RCSe * MUM ) + MUM ),( RRSe - Max( Max( MUM,CS ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( DDR / CRS ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - MDR ) ) ) )", "choosing": "( Max( Min( ( RRSe / DS ) ,( MUR * MLU ) ),( Max( DS,MUR ) - Min( RRSe ,RCSe ) ) ) / Max( ( ( RRSe - MUR ) - ( RCSe - RMSe ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.3213572854291417, "obj2": 0.6493692797221737}, {"determining": "Max( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) / ( AMS / FirstVNF_CPU ) ),Min( ( MRS * Const ) ,( FirstVNF_Mem + PN ) ) )", "choosing": "( Min( MUM ,Min( CS ,MUC ) ) * ( MUR - RCSe ) )", "obj1": 0.35129740518962077, "obj2": 0.5860499214482309}, {"determining": "Min( ( FirstVNF_RAM_Server * FirstVNF_CPU ) ,( FirstVNF_RAM + ACS ) )", "choosing": "( ( RMSe + RRSe ) * Max( DS,MUM ) )", "obj1": 0.4411177644710579, "obj2": 0.49803077614315283}, {"determining": "( ( MDR * Max( FirstVNF_RAM_Server,CRS ) ) + ( CRS - ( DDR + Const ) ) )", "choosing": "( ( CS + RRSe ) / ( ( CS / DS ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / AMS ) * ( RRS + Min( ( ( AMS * ( AMS / ( MDR * FirstVNF_Mem_Server ) ) ) * RRS ) ,MDR ) ) )", "choosing": "( ( CS - RMSe ) - Min( ( ( MUM - MUC ) + MUR ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_Mem ) - ( Max( ( MRS * Const ),Max( FirstVNF_Mem,ARS ) ) + PN ) )", "choosing": "( Min( ( RCSe * DS ) ,( MLU * MUC ) ) / ( ( ( MLU - RMSe ) + ( CS / RCSe ) ) - Min( RRSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_Mem ) - ( ( ( Min( AMS ,FirstVNF_RAM_Server ) * ACS ) + MRS ) + ARS ) )", "choosing": "( Min( ( RCSe * DS ) ,( MLU * Max( RRSe,RMSe ) ) ) / ( Min( CS ,DS ) - Min( RRSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - FirstVNF_CPU_Server ) ,( ( PN * Max( FirstVNF_CPU,( ( RRS + ACS ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) ) ) + CRS ) )", "choosing": "( ( MUC + RMSe ) + Min( RCSe ,( MUM / ( MLU + ( RMSe * MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * BR ) ) + ( ( FirstVNF_CPU_Server - Const ) + RRS ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( ( FirstVNF_CPU * ( CRS / MDR ) ) / ( MRS - ARS ) ) ) )", "choosing": "Max( ( MLU + ( Max( MUM,MUC ) - Min( MLU ,DS ) ) ),( ( ( MLU - MUM ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * BR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / ( RRSe * RCSe ) ) + ( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ),( ( ( MUM - MLU ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - ( ( ( FirstVNF_Mem / MRS ) / ( BR + FirstVNF_RAM ) ) + CRS ) ) * ( Max( Max( PN,FirstVNF_RAM ),FirstVNF_RAM_Server ) * CRS ) )", "choosing": "( ( ( ( MLU - MUR ) / Min( CS ,MUM ) ) + Max( ( MUR + MUC ),( MLU * MUM ) ) ) * ( Min( ( RCSe * MLU ) ,Min( CS ,MUR ) ) / Max( ( ( ( MUM - RMSe ) - ( MUM - RCSe ) ) * ( Min( RRSe ,RRSe ) * ( MUM / RMSe ) ) ),( ( Max( MUR,MUM ) + Min( MUC ,RMSe ) ) * Max( ( MUR / RRSe ),( CS + DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - ( FirstVNF_Mem * ARS ) ) * ( Max( Max( PN,FirstVNF_RAM ),FirstVNF_RAM_Server ) * CRS ) )", "choosing": "Max( ( ( ( MUM - RMSe ) - ( MUM - MUR ) ) * ( Min( RRSe ,RRSe ) * Max( DS,DS ) ) ),( ( Max( MUR,MUM ) + Min( MUC ,RMSe ) ) * Max( ( MUR / RRSe ),( CS + DS ) ) ) )", "obj1": 0.6067864271457086, "obj2": 0.3863885385501013}, {"determining": "( Const - ( Min( MRS ,BR ) + ACS ) )", "choosing": "( ( MUM / DS ) / ( ( MUC + Max( MUC,MUC ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_Mem - AMS ),FirstVNF_CPU ) / ( FirstVNF_Mem + CRS ) ) ,( Max( FirstVNF_RAM,ARS ) / AMS ) )", "choosing": "Min( Min( ( RRSe / MUR ) ,Max( MUR,MUC ) ) ,( Max( RMSe,( Min( ( MUM - RRSe ) ,Min( CS ,( ( DS - MUC ) + RRSe ) ) ) - ( RMSe - ( ( RMSe / MUR ) - MUC ) ) ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( PN - BR ) / ( BR * CRS ) ) ,( ( RRS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem + CRS ) ) )", "choosing": "Min( Min( ( RMSe / RMSe ) ,( CS + MUC ) ) ,Max( ( RMSe * MLU ),( DS + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS - Max( FirstVNF_Mem_Server,MRS ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( CS + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - FirstVNF_CPU_Server ) ,Max( FirstVNF_RAM,( Min( FirstVNF_CPU_Server ,MRS ) * PN ) ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( Max( Min( MLU ,RMSe ),Max( MUC,( ( Min( MUM ,MUM ) + ( MUR / MUC ) ) * ( ( Min( MLU ,MUR ) * Min( RRSe ,RCSe ) ) - RCSe ) ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( DDR - FirstVNF_CPU_Server ) ,Min( PN ,FirstVNF_RAM ) ) ,( ( AMS * ARS ) + ( ( ( ( ( PN / FirstVNF_RAM_Server ) / ( ARS - AMS ) ) * ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) + ( AMS + FirstVNF_CPU ) ) + MRS ) ) )", "choosing": "Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Max( MUM,MUR ) * MUM ) - ( MUM - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN / FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server - AMS ) ) * Min( Min( ( DDR - FirstVNF_CPU_Server ) ,Min( PN ,( ( FirstVNF_RAM_Server + ( MRS * FirstVNF_Mem_Server ) ) * Max( ARS,Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) ) ) ) ,( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) + ( Min( ARS ,DDR ) + FirstVNF_CPU ) )", "choosing": "( ( DS + RMSe ) - ( ( Max( MUM,MUR ) * MUM ) / ( ( RMSe / RMSe ) * ( Max( ( ( Min( RRSe ,RCSe ) / ( RCSe - MLU ) ) + ( ( MUC + DS ) - ( DS + MUR ) ) ),( ( ( MLU / MUC ) * RRSe ) * DS ) ) + RCSe ) ) ) )", "obj1": 0.45708582834331335, "obj2": 0.46589271556629863}, {"determining": "Min( Min( ( DDR - FirstVNF_CPU_Server ) ,Min( PN ,FirstVNF_RAM ) ) ,( ( AMS * ARS ) + ( DDR + MRS ) ) )", "choosing": "( Min( RRSe ,RRSe ) - ( ( Max( MUM,MUR ) * MUM ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) ) - AMS ) * Min( FirstVNF_Mem_Server ,MRS ) )", "choosing": "( Min( ( CS + RMSe ) ,( MLU - MUM ) ) + Min( MUM ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,MRS ) ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( DS * MUM ) + Min( MUM ,CS ) ) ) * ( Min( ( CS + RMSe ) ,( MLU - MUM ) ) / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( DS * MUM ) + Min( MUM ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_RAM ,BR ) ,Max( ( ( FirstVNF_RAM / CRS ) * FirstVNF_RAM ),Max( FirstVNF_Mem_Server,ARS ) ) )", "choosing": "Max( ( MUM * RMSe ),( DS + MLU ) )", "obj1": 0.562874251497006, "obj2": 0.4047823303023192}, {"determining": "Min( ( CRS - FirstVNF_CPU_Server ) ,( ( Min( MDR ,RRS ) / Max( ( Min( ( FirstVNF_Mem - RRS ) ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) * FirstVNF_RAM ) ),FirstVNF_Mem ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe + RMSe ) + ( ( MUM + RCSe ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - FirstVNF_CPU_Server ) ,( FirstVNF_RAM + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUM + RCSe ) - RRSe ) * ( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( MRS - FirstVNF_CPU_Server ) / ( MDR * RRS ) ) ,Max( ( RRS / FirstVNF_RAM_Server ),( FirstVNF_CPU + FirstVNF_Mem ) ) ) - ( ( ( MRS - MRS ) / ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) * ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ) )", "choosing": "( ( Max( ( RRSe - MUC ),( MUR - MUM ) ) * Min( ( RRSe + CS ) ,( RCSe + MUC ) ) ) + ( Min( ( DS / DS ) ,Min( MUR ,MUC ) ) * Min( ( MUC + MLU ) ,Max( RCSe,MUM ) ) ) )", "obj1": 0.4091816367265469, "obj2": 0.5340073516813716}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,Max( BR,FirstVNF_CPU_Server ) )", "choosing": "( ( DS + DS ) - ( RCSe - Max( RCSe,RMSe ) ) )", "obj1": 0.5369261477045908, "obj2": 0.40879249269503365}, {"determining": "Min( ( ( ( AMS + ( FirstVNF_RAM - ( FirstVNF_Mem - ( Min( CRS ,MRS ) - ( FirstVNF_CPU_Server + MRS ) ) ) ) ) * ( FirstVNF_CPU_Server + DDR ) ) - FirstVNF_CPU_Server ) ,( FirstVNF_RAM + FirstVNF_CPU_Server ) )", "choosing": "( Max( RMSe,RRSe ) + Min( RRSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( DS * MUM ) + Min( MUM ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server + Min( ( MDR / FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ,( ( RRS - ( RRS + FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem + CRS ) ) )", "choosing": "Min( Min( ( MUM / ( ( RMSe + MUC ) * ( MUM - CS ) ) ) ,( MUR / MUC ) ) ,Min( RMSe ,( ( ( RCSe * RRSe ) + Min( ( RMSe * MUC ) ,Min( MUC ,CS ) ) ) / ( ( Min( ( MUC / RCSe ) ,MLU ) * Max( CS,Max( Min( MUC ,MUC ),MUC ) ) ) * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( PN - BR ) / ( BR * CRS ) ) ,( ( RRS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem + CRS ) ) )", "choosing": "Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( MUM * RRSe ) - ( DS - ( Min( DS ,MUC ) / ( CS - DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - Max( ( RRS + RRS ),( Const - ( FirstVNF_RAM_Server * MRS ) ) ) ) * Max( MDR,PN ) )", "choosing": "( ( DS - RRSe ) / Max( ( RRSe + RCSe ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,Min( MRS ,MDR ) ) * Max( MDR,PN ) )", "choosing": "( ( MUC + MUR ) * ( MUR * ( ( RRSe / ( ( RMSe / ( ( MUC + MUR ) * MUM ) ) + DS ) ) + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * Max( FirstVNF_RAM_Server,CRS ) ) + ( CRS - ( DDR + Const ) ) )", "choosing": "Min( ( RMSe * MUM ) ,( MUR * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( MDR,( BR * CRS ) ) * ( ACS - PN ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( ACS - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUM,MUC ) / Max( Min( MUC ,MLU ),Min( CS ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ARS ) * ( PN - ACS ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( FirstVNF_Mem_Server - Min( AMS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( MUR - ( ( RMSe - ( Max( MUC,Max( MUC,( RMSe / RRSe ) ) ) + MUC ) ) / ( MUC - RRSe ) ) ) - Min( ( ( RRSe * Min( MUR ,RCSe ) ) - Min( MLU ,RMSe ) ) ,( ( DS * MLU ) / ( RRSe - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + Max( ARS,ACS ) ) / Min( ( BR + ARS ) ,Const ) )", "choosing": "( ( MUC / MUR ) - ( RMSe / MLU ) )", "obj1": 0.4251497005988024, "obj2": 0.50878149292906}, {"determining": "( ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( RRS + ( PN - ARS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) - ( FirstVNF_RAM - MDR ) )", "choosing": "( Max( DS,( RCSe * CS ) ) - ( DS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( AMS,Min( ( ( MRS * MRS ) / FirstVNF_CPU_Server ) ,Min( ( BR - CRS ) ,( ARS / MRS ) ) ) ) / Min( ( MDR / FirstVNF_RAM ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) )", "choosing": "( Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( Max( DS,Max( RRSe,MUR ) ) ,Min( MUR ,MUR ) ) ) / Max( Min( ( ( DS + ( ( Max( MUM,CS ) + MUM ) / MUR ) ) * MUR ) ,Max( MUR,MLU ) ),( ( ( MUM - RMSe ) + RCSe ) / ( MUR - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) )", "choosing": "( ( RCSe / RCSe ) - ( DS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( MRS / ARS ),Min( DDR ,CRS ) ) ,( Min( Const ,CRS ) - Max( AMS,RRS ) ) ) ,Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) + RRSe ) * ( ( ( MLU * RRSe ) * DS ) - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,MUM ) + Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( DDR / ARS ),Min( DDR ,CRS ) ) ,( Min( Const ,CRS ) - Max( AMS,RRS ) ) ) ,Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) )", "choosing": "( ( MUM / DS ) / ( ( MLU * RRSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( Max( MRS,Const ) + Min( PN ,PN ) ) * Min( ( ARS / FirstVNF_Mem_Server ) ,Max( RRS,ACS ) ) ),Max( FirstVNF_CPU,MDR ) ) / ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( AMS - PN ) ) )", "choosing": "Max( ( Max( CS,RRSe ) + ( MLU - CS ) ),Max( MUM,( MLU / MUR ) ) )", "obj1": 0.4431137724550898, "obj2": 0.4882275230228066}, {"determining": "( ( ( DDR / CRS ) - ( MRS - PN ) ) * ( ( Const / FirstVNF_RAM ) * ( FirstVNF_RAM_Server / ACS ) ) )", "choosing": "( Min( Max( Min( RRSe ,CS ),Min( MUM ,RRSe ) ) ,( ( DS + RRSe ) / Min( CS ,MUM ) ) ) * Min( ( Min( RRSe ,DS ) - ( CS / RCSe ) ) ,( ( Min( Max( RRSe,DS ) ,RCSe ) * RMSe ) / ( MUC + MUM ) ) ) )", "obj1": 0.5049900199600799, "obj2": 0.4561685827639623}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( Min( MRS ,BR ) + ACS ) )", "choosing": "( ( MUM / DS ) / ( ( MLU * RRSe ) * DS ) )", "obj1": 0.25149700598802394, "obj2": 0.6944872416674391}, {"determining": "( Min( ( ( MRS - FirstVNF_CPU_Server ) / ( MDR * RRS ) ) ,Max( ( RRS / FirstVNF_RAM_Server ),( FirstVNF_CPU + FirstVNF_Mem ) ) ) - ( ( ( MRS - MRS ) / ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) * ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ) )", "choosing": "( ( DS + RRSe ) * Max( DS,DS ) )", "obj1": 0.5149700598802395, "obj2": 0.43100794733962944}, {"determining": "Max( Max( ( ( ARS * FirstVNF_RAM ) + ( ARS + FirstVNF_Mem_Server ) ),( ARS - PN ) ),( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / DS ) - ( ( RMSe * CS ) / RCSe ) )", "obj1": 0.27345309381237526, "obj2": 0.6722087900011549}, {"determining": "Min( ( ( ACS + MDR ) + FirstVNF_CPU ) ,Min( AMS ,AMS ) )", "choosing": "( ( MUM + DS ) - Max( CS,RRSe ) )", "obj1": 0.5129740518962076, "obj2": 0.44850170261121264}, {"determining": "( ( Max( PN,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - ( Max( ( ( ( ( Max( DDR,FirstVNF_Mem_Server ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + FirstVNF_RAM ) + ACS ) / AMS ),BR ) + MDR ) )", "choosing": "Min( ( ( RMSe * MUC ) - CS ) ,Max( MUC,Max( ( ( RCSe - MUR ) / ( MUR * MUR ) ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / ( ( Max( PN,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - ( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) + MDR ) ) ) * ( MRS + ACS ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Max( MUC,Max( DS,MLU ) ) ) - RCSe ) / ( MUR * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - ( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "( ( RCSe - RCSe ) / ( MUR * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS + ( FirstVNF_RAM / DDR ) ) * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( ( ( ( RRSe / CS ) + ( MUR * Min( Max( MUM,MUM ) ,( RMSe * RRSe ) ) ) ) / MUR ) / ( RCSe - MUR ) ) + ( RCSe / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_RAM ) - Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( ( RCSe * CS ) / MUC ) + Max( ( CS / RRSe ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),CRS ) - Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( ( RCSe * CS ) / ( CS / MUR ) ) + Max( ( CS / RRSe ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,ARS ) * ( FirstVNF_CPU + ( Const * Max( ( FirstVNF_Mem * MRS ),Max( MDR,FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MLU / MUM ) * ( RRSe - MUM ) )", "obj1": 0.36726546906187624, "obj2": 0.577249074059409}, {"determining": "( ( DDR - ( FirstVNF_CPU + ( ( CRS + ( DDR + FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) * ( Const * Min( ( Max( FirstVNF_Mem,FirstVNF_Mem ) / FirstVNF_RAM ) ,BR ) ) )", "choosing": "( ( RRSe * RRSe ) + Min( Max( ( RMSe * ( DS * RCSe ) ),Max( RRSe,RCSe ) ) ,( ( RRSe * ( RCSe * MUC ) ) * ( DS + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ( FirstVNF_CPU + ( ( CRS + ( DDR + FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) * ( Const * Min( ( Max( FirstVNF_Mem,FirstVNF_Mem ) / FirstVNF_RAM ) ,BR ) ) )", "choosing": "( ( RRSe * RRSe ) + Min( Max( ( RMSe * ( DS * RCSe ) ),Max( RRSe,RCSe ) ) ,( ( RRSe * ( RCSe * MUC ) ) * ( DS + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ( FirstVNF_CPU + ( ( CRS + ( DDR + FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) * ( Const * Min( ( Max( FirstVNF_Mem,FirstVNF_Mem ) / FirstVNF_RAM ) ,BR ) ) )", "choosing": "( ( RRSe * RRSe ) + Min( Max( ( RMSe * ( DS * RCSe ) ),Max( RRSe,RCSe ) ) ,( ( RRSe * ( RCSe * MUC ) ) * ( DS + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ACS ) * ( Const * Max( ( FirstVNF_Mem * ARS ),Max( MDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / MUC ) / Min( CS ,RRSe ) ) + ( ( RMSe / CS ) * ( RMSe * MUC ) ) ) + Min( Max( ( RMSe * ( DS - RCSe ) ),Max( RRSe,RCSe ) ) ,( ( RRSe * RCSe ) + ( DS + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - FirstVNF_Mem ) - Max( FirstVNF_Mem_Server,AMS ) ) / ( ( FirstVNF_Mem_Server / BR ) * Min( FirstVNF_Mem_Server ,ARS ) ) )", "choosing": "( Max( ( DS + MUC ),Max( DS,RMSe ) ) * Min( ( DS * RCSe ) ,Min( MUR ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server / BR ) )", "choosing": "( Max( ( DS + MUC ),Max( DS,MUR ) ) + ( MUM * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( AMS,CRS ) - FirstVNF_Mem ) - Max( FirstVNF_Mem_Server,AMS ) ) / ( ( FirstVNF_Mem_Server / BR ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + DS ),Max( DS,MUR ) ) * Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( ( CRS - DDR ) / Max( DDR,FirstVNF_Mem ) )", "choosing": "( Min( ( RRSe * ( MUM * ( Min( ( MUC * Max( CS,CS ) ) ,RCSe ) - MLU ) ) ) ,MUR ) - Max( MLU,DS ) )", "obj1": 0.7924151696606786, "obj2": 0.18923031562859935}, {"determining": "( ( Const - ARS ) * Max( MDR,PN ) )", "choosing": "( ( DS - RRSe ) / ( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( AMS + ( FirstVNF_RAM - ( FirstVNF_Mem - FirstVNF_CPU ) ) ) * ( FirstVNF_CPU_Server + DDR ) ) - FirstVNF_CPU_Server ) ,( FirstVNF_RAM + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + RCSe ) + Min( RRSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),CRS ) - Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( ( RCSe * CS ) / ( CS / MUR ) ) + Max( ( CS / RRSe ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * Max( ( MDR - MDR ),CRS ) ) + ( CRS - ( DDR + Const ) ) )", "choosing": "( ( CS + RRSe ) / ( ( CS / DS ) + ( ( MUR / MUC ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( MUR + DS ) + MUR ) )", "obj1": 0.29141716566866266, "obj2": 0.6516179204641015}, {"determining": "Max( Max( RRS,( ARS - PN ) ),( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / DS ) - ( MLU / RCSe ) )", "obj1": 0.2894211576846307, "obj2": 0.6527706319629112}, {"determining": "( ( MDR * FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + Const ) )", "choosing": "( ( MUR - MUR ) / ( Min( ( ( CS / RCSe ) / ( MUR / ( ( Max( MLU,RMSe ) + RCSe ) - RMSe ) ) ) ,MUM ) - Min( CS ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - FirstVNF_CPU ) * ARS ) + ARS ) - Min( PN ,Max( FirstVNF_RAM_Server,BR ) ) )", "choosing": "( Max( ( MUC + RRSe ),( RCSe / MLU ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,DDR ) * ( DDR - Max( ACS,FirstVNF_Mem ) ) )", "choosing": "( ( MUC + MUR ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - ARS ) * ( ACS - PN ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( ( MUC - RCSe ) * Min( DS ,DS ) ) / Max( Min( CS ,MUC ),( MUC * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( MDR + Max( PN,( ( ( Min( FirstVNF_Mem_Server ,ACS ) + Min( RRS ,MRS ) ) + FirstVNF_Mem_Server ) - ( ( CRS - ( AMS * ACS ) ) + Max( PN,AMS ) ) ) ) ),DDR ) ,( ( AMS * AMS ) + Min( ( ARS + AMS ) ,DDR ) ) )", "choosing": "Min( ( DS - MUR ) ,( Min( MUM ,RRSe ) - ( ( Min( DS ,MUC ) / Max( CS,DS ) ) - ( RCSe + ( Min( RRSe ,Min( MLU ,MUR ) ) + MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( BR ,FirstVNF_Mem ) - Max( FirstVNF_Mem_Server,AMS ) ) / ( FirstVNF_CPU - AMS ) )", "choosing": "( Min( ( DS + MUC ) ,Max( DS,MUR ) ) * Min( ( ( Max( RRSe,( ( ( MUC - MUM ) + RRSe ) + DS ) ) - RMSe ) + MUC ) ,Min( MUR ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( PN - BR ) / ( BR * CRS ) ) ,( ( RRS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem + CRS ) ) )", "choosing": "Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + ( ( CRS * BR ) / Min( ( AMS - ( FirstVNF_RAM_Server * ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + CRS ) ) ) ,FirstVNF_RAM_Server ) ) ) ,( Min( Min( AMS ,PN ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( Min( ( MUC / MUR ) ,( ( MUM - MUR ) + ( MUM * CS ) ) ) * ( Min( ( MLU - MUM ) ,( CS + RMSe ) ) / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * ( ( ACS - RRS ) / Const ) ) / Min( FirstVNF_CPU_Server ,Max( ( PN * ACS ),( CRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,( Max( RRSe,DS ) * ( DS * RCSe ) ) ) ,( ( ( MUC + MLU ) + ( MLU - MUC ) ) + Max( ( CS + MUC ),Max( RCSe,RCSe ) ) ) )", "obj1": 0.5688622754491018, "obj2": 0.38884865272070185}, {"determining": "( ( Max( FirstVNF_Mem_Server,PN ) * FirstVNF_RAM_Server ) - ( Max( ( ( Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) / ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU - BR ) ) * ( PN - AMS ) ) ) / AMS ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - ( MLU * ( MUR - RCSe ) ) ) ,( ( ( ( RCSe * ( CS - ( MUM - MUC ) ) ) - MUC ) / RMSe ) * ( Min( CS ,MUC ) - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( ARS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( BR ,Const ) ) ) / Min( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) )", "choosing": "( ( RRSe - ( Min( ( Min( RMSe ,MLU ) / RCSe ) ,RCSe ) / ( MUR - RCSe ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( DDR / ARS ),Min( DDR ,CRS ) ) ,( Min( Const ,CRS ) - Max( AMS,RRS ) ) ) ,Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) + RRSe ) * ( CS - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,MUM ) + Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( FirstVNF_CPU * ( ( Max( Min( DDR ,RRS ),Const ) / ACS ) / FirstVNF_Mem ) ) / ( PN - BR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( ( RRSe * RCSe ) / ( RCSe + CS ) ) + ( ( ( ( Min( MUC ,Min( RCSe ,MUR ) ) / MLU ) / RMSe ) + Min( MUR ,Min( ( DS + MLU ) ,MUR ) ) ) - Max( MUM,MUC ) ) ),( ( ( MUM - MLU ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / AMS ) * Min( BR ,( RRS / MDR ) ) )", "choosing": "( DS - ( CS + MUC ) )", "obj1": 0.3812375249500998, "obj2": 0.5582631642103946}, {"determining": "Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - MRS ) )", "choosing": "( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * ( ( CS + RMSe ) - Min( MUC ,RRSe ) ) ) ) ) * ( Min( ( CS + RMSe ) ,( MLU - MUM ) ) / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( FirstVNF_Mem - Const ),( FirstVNF_Mem - FirstVNF_Mem ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( FirstVNF_CPU * ARS ) ) ) )", "choosing": "( ( ( ( MUR * Min( RMSe ,CS ) ) / ( DS / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) * ( Min( ( CS + RMSe ) ,( MLU - MUM ) ) / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( PN - BR ),( BR * CRS ) ) ,( ( FirstVNF_Mem + CRS ) / ( RRS - ( ( Max( MRS,FirstVNF_Mem ) + DDR ) / MRS ) ) ) )", "choosing": "Min( ( MUC * MLU ) ,( ( DS * MUR ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( PN - BR ) / ( BR * CRS ) ) ,( ( RRS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem + CRS ) ) )", "choosing": "( ( ( RMSe * DS ) / ( MUM / CS ) ) / ( ( DS * MUR ) * Min( MUR ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,ARS ) * ( FirstVNF_CPU + ACS ) )", "choosing": "( ( MLU / MUM ) * ( RCSe - MUM ) )", "obj1": 0.37325349301397204, "obj2": 0.5707193769790719}, {"determining": "Max( ( ( ( Const / RRS ) - ( ARS * DDR ) ) / Max( ( ACS / PN ),( CRS / BR ) ) ),( ( ACS * FirstVNF_CPU ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( ACS / FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe - DS ) ) / ( ( DS + MUM ) + ( MUR / MUM ) ) ) / Min( ( ( MUC * MUC ) / RCSe ) ,( ( DS + CS ) + Min( RMSe ,CS ) ) ) )", "obj1": 0.3393213572854291, "obj2": 0.6086665526820204}, {"determining": "( Max( DDR,ARS ) - Max( ( Min( FirstVNF_RAM ,DDR ) / PN ),( CRS / BR ) ) )", "choosing": "( ( Min( ( MUR + Max( CS,( ( Min( RCSe ,MUC ) * ( RRSe * MLU ) ) - MUC ) ) ) ,( MLU / RCSe ) ) / ( ( MUM + DS ) * ( MUR / RMSe ) ) ) - ( DS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR / CRS ) - ( MRS - PN ) ) * ( ( Const / FirstVNF_RAM ) * ( FirstVNF_RAM_Server / ACS ) ) )", "choosing": "( ( RRSe - MUR ) - ( RCSe - RMSe ) )", "obj1": 0.32335329341317365, "obj2": 0.628413984198884}, {"determining": "( ( ( ( MDR * PN ) - Min( Const ,BR ) ) + ( ( FirstVNF_RAM + AMS ) - ( Max( Max( ( ACS * FirstVNF_CPU ),( BR * ARS ) ),FirstVNF_RAM_Server ) * MDR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( Min( BR ,MRS ) / ( Const - FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( RCSe - MUM ),Min( ( ( ( ( MLU * DS ) / ( RMSe * MUC ) ) / RRSe ) / RMSe ) ,( RMSe + Min( ( RMSe - RCSe ) ,Min( RRSe ,MUR ) ) ) ) ) / Max( Max( MUR,CS ),Min( ( RMSe + MLU ) ,Min( MUC ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) )", "choosing": "( ( ( ( MLU - MUR ) / Min( CS ,MUM ) ) + Max( ( MUR + MUC ),( MLU * MUM ) ) ) * ( Min( ( RCSe * MLU ) ,Min( CS ,MUR ) ) / ( ( MUC / MUC ) / Max( RCSe,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem - Min( ( FirstVNF_CPU_Server - Max( ARS,CRS ) ) ,Min( AMS ,BR ) ) ),BR ) - Min( FirstVNF_CPU ,MDR ) )", "choosing": "Max( ( ( RCSe * MUM ) + MUM ),( RRSe - Max( Max( MUM,CS ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) / ( AMS / FirstVNF_CPU ) ),Min( ( MRS * Const ) ,( FirstVNF_Mem + PN ) ) )", "choosing": "( Min( MUM ,Min( CS ,MUC ) ) * ( MUR - RCSe ) )", "obj1": 0.35129740518962077, "obj2": 0.5860499214482309}, {"determining": "( ( MDR * Max( FirstVNF_RAM_Server,CRS ) ) + ( CRS - ( DDR + Const ) ) )", "choosing": "( ( CS + RRSe ) / ( ( CS / DS ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / AMS ) * ( RRS + Min( ( ( AMS * ( AMS / ( MDR * FirstVNF_Mem_Server ) ) ) * RRS ) ,MDR ) ) )", "choosing": "( ( CS - RMSe ) - Min( ( ( MUM - MUC ) + MUR ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_Mem ) - ( Max( ( MRS * Const ),Max( FirstVNF_Mem,ARS ) ) + PN ) )", "choosing": "( Min( ( RCSe * DS ) ,( MLU * MUC ) ) / ( ( ( MLU - RMSe ) + ( CS / RCSe ) ) - Min( RRSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_Mem ) - ( ( ( Min( AMS ,FirstVNF_RAM_Server ) * ACS ) + MRS ) + ARS ) )", "choosing": "( Min( ( RCSe * DS ) ,( MLU * Max( RRSe,RMSe ) ) ) / ( Min( CS ,DS ) - Min( RRSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - FirstVNF_CPU_Server ) ,( ( PN * Max( FirstVNF_CPU,( ( RRS + ACS ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) ) ) + CRS ) )", "choosing": "( ( MUC + RMSe ) + Min( RCSe ,( MUM / ( MLU + ( RMSe * MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * BR ) ) + ( ( FirstVNF_CPU_Server - Const ) + RRS ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( ( FirstVNF_CPU * ( CRS / MDR ) ) / ( MRS - ARS ) ) ) )", "choosing": "Max( ( MLU + ( Max( MUM,MUC ) - Min( MLU ,DS ) ) ),( ( ( MLU - MUM ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * BR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / ( RRSe * RCSe ) ) + ( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ),( ( ( MUM - MLU ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - ( ( ( FirstVNF_Mem / MRS ) / ( BR + FirstVNF_RAM ) ) + CRS ) ) * ( Max( Max( PN,FirstVNF_RAM ),FirstVNF_RAM_Server ) * CRS ) )", "choosing": "( ( ( ( MLU - MUR ) / Min( CS ,MUM ) ) + Max( ( MUR + MUC ),( MLU * MUM ) ) ) * ( Min( ( RCSe * MLU ) ,Min( CS ,MUR ) ) / Max( ( ( ( MUM - RMSe ) - ( MUM - RCSe ) ) * ( Min( RRSe ,RRSe ) * ( MUM / RMSe ) ) ),( ( Max( MUR,MUM ) + Min( MUC ,RMSe ) ) * Max( ( MUR / RRSe ),( CS + DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const - ( Min( MRS ,BR ) + ACS ) )", "choosing": "( ( MUM / DS ) / ( ( MUC + Max( MUC,MUC ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_Mem - AMS ),FirstVNF_CPU ) / ( FirstVNF_Mem + CRS ) ) ,( Max( FirstVNF_RAM,ARS ) / AMS ) )", "choosing": "Min( Min( ( RRSe / MUR ) ,Max( MUR,MUC ) ) ,( Max( RMSe,( Min( ( MUM - RRSe ) ,Min( CS ,( ( DS - MUC ) + RRSe ) ) ) - ( RMSe - ( ( RMSe / MUR ) - MUC ) ) ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( PN - BR ) / ( BR * CRS ) ) ,( ( RRS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem + CRS ) ) )", "choosing": "Min( Min( ( RMSe / RMSe ) ,( CS + MUC ) ) ,Max( ( RMSe * MLU ),( DS + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS - Max( FirstVNF_Mem_Server,MRS ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( CS + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - FirstVNF_CPU_Server ) ,Max( FirstVNF_RAM,( Min( FirstVNF_CPU_Server ,MRS ) * PN ) ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( Max( Min( MLU ,RMSe ),Max( MUC,( ( Min( MUM ,MUM ) + ( MUR / MUC ) ) * ( ( Min( MLU ,MUR ) * Min( RRSe ,RCSe ) ) - RCSe ) ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( DDR - FirstVNF_CPU_Server ) ,Min( PN ,FirstVNF_RAM ) ) ,( ( AMS * ARS ) + ( ( ( ( ( PN / FirstVNF_RAM_Server ) / ( ARS - AMS ) ) * ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) + ( AMS + FirstVNF_CPU ) ) + MRS ) ) )", "choosing": "Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Max( MUM,MUR ) * MUM ) - ( MUM - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN / FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server - AMS ) ) * Min( Min( ( DDR - FirstVNF_CPU_Server ) ,Min( PN ,( ( FirstVNF_RAM_Server + ( MRS * FirstVNF_Mem_Server ) ) * Max( ARS,Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) ) ) ) ,( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) + ( Min( ARS ,DDR ) + FirstVNF_CPU ) )", "choosing": "( ( DS + RMSe ) - ( ( Max( MUM,MUR ) * MUM ) / ( ( RMSe / RMSe ) * ( Max( ( ( Min( RRSe ,RCSe ) / ( RCSe - MLU ) ) + ( ( MUC + DS ) - ( DS + MUR ) ) ),( ( ( MLU / MUC ) * RRSe ) * DS ) ) + RCSe ) ) ) )", "obj1": 0.45708582834331335, "obj2": 0.46589271556629863}, {"determining": "Min( Min( ( DDR - FirstVNF_CPU_Server ) ,Min( PN ,FirstVNF_RAM ) ) ,( ( AMS * ARS ) + ( DDR + MRS ) ) )", "choosing": "( Min( RRSe ,RRSe ) - ( ( Max( MUM,MUR ) * MUM ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) ) - AMS ) * Min( FirstVNF_Mem_Server ,MRS ) )", "choosing": "( Min( ( CS + RMSe ) ,( MLU - MUM ) ) + Min( MUM ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,MRS ) ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( DS * MUM ) + Min( MUM ,CS ) ) ) * ( Min( ( CS + RMSe ) ,( MLU - MUM ) ) / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( DS * MUM ) + Min( MUM ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_RAM ,BR ) ,Max( ( ( FirstVNF_RAM / CRS ) * FirstVNF_RAM ),Max( FirstVNF_Mem_Server,ARS ) ) )", "choosing": "Max( ( MUM * RMSe ),( DS + MLU ) )", "obj1": 0.562874251497006, "obj2": 0.4047823303023192}, {"determining": "Min( ( CRS - FirstVNF_CPU_Server ) ,( ( Min( MDR ,RRS ) / Max( ( Min( ( FirstVNF_Mem - RRS ) ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) * FirstVNF_RAM ) ),FirstVNF_Mem ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe + RMSe ) + ( ( MUM + RCSe ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - FirstVNF_CPU_Server ) ,( FirstVNF_RAM + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUM + RCSe ) - RRSe ) * ( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,Max( BR,FirstVNF_CPU_Server ) )", "choosing": "( ( DS + DS ) - ( RCSe - Max( RCSe,RMSe ) ) )", "obj1": 0.5369261477045908, "obj2": 0.40879249269503365}, {"determining": "Min( ( ( ( AMS + ( FirstVNF_RAM - ( FirstVNF_Mem - ( Min( CRS ,MRS ) - ( FirstVNF_CPU_Server + MRS ) ) ) ) ) * ( FirstVNF_CPU_Server + DDR ) ) - FirstVNF_CPU_Server ) ,( FirstVNF_RAM + FirstVNF_CPU_Server ) )", "choosing": "( Max( RMSe,RRSe ) + Min( RRSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( DS * MUM ) + Min( MUM ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server + Min( ( MDR / FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ,( ( RRS - ( RRS + FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem + CRS ) ) )", "choosing": "Min( Min( ( MUM / ( ( RMSe + MUC ) * ( MUM - CS ) ) ) ,( MUR / MUC ) ) ,Min( RMSe ,( ( ( RCSe * RRSe ) + Min( ( RMSe * MUC ) ,Min( MUC ,CS ) ) ) / ( ( Min( ( MUC / RCSe ) ,MLU ) * Max( CS,Max( Min( MUC ,MUC ),MUC ) ) ) * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( PN - BR ) / ( BR * CRS ) ) ,( ( RRS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem + CRS ) ) )", "choosing": "Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( MUM * RRSe ) - ( DS - ( Min( DS ,MUC ) / ( CS - DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - Max( ( RRS + RRS ),( Const - ( FirstVNF_RAM_Server * MRS ) ) ) ) * Max( MDR,PN ) )", "choosing": "( ( DS - RRSe ) / Max( ( RRSe + RCSe ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,Min( MRS ,MDR ) ) * Max( MDR,PN ) )", "choosing": "( ( MUC + MUR ) * ( MUR * ( ( RRSe / ( ( RMSe / ( ( MUC + MUR ) * MUM ) ) + DS ) ) + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * Max( FirstVNF_RAM_Server,CRS ) ) + ( CRS - ( DDR + Const ) ) )", "choosing": "Min( ( RMSe * MUM ) ,( MUR * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( MDR,( BR * CRS ) ) * ( ACS - PN ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( ACS - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUM,MUC ) / Max( Min( MUC ,MLU ),Min( CS ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ARS ) * ( PN - ACS ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( FirstVNF_Mem_Server - Min( AMS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( MUR - ( ( RMSe - ( Max( MUC,Max( MUC,( RMSe / RRSe ) ) ) + MUC ) ) / ( MUC - RRSe ) ) ) - Min( ( ( RRSe * Min( MUR ,RCSe ) ) - Min( MLU ,RMSe ) ) ,( ( DS * MLU ) / ( RRSe - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( RRS + ( PN - ARS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) - ( FirstVNF_RAM - MDR ) )", "choosing": "( Max( DS,( RCSe * CS ) ) - ( DS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( AMS,Min( ( ( MRS * MRS ) / FirstVNF_CPU_Server ) ,Min( ( BR - CRS ) ,( ARS / MRS ) ) ) ) / Min( ( MDR / FirstVNF_RAM ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) )", "choosing": "( Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( Max( DS,Max( RRSe,MUR ) ) ,Min( MUR ,MUR ) ) ) / Max( Min( ( ( DS + ( ( Max( MUM,CS ) + MUM ) / MUR ) ) * MUR ) ,Max( MUR,MLU ) ),( ( ( MUM - RMSe ) + RCSe ) / ( MUR - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) )", "choosing": "( ( RCSe / RCSe ) - ( DS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( MRS / ARS ),Min( DDR ,CRS ) ) ,( Min( Const ,CRS ) - Max( AMS,RRS ) ) ) ,Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) + RRSe ) * ( ( ( MLU * RRSe ) * DS ) - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,MUM ) + Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( DDR / ARS ),Min( DDR ,CRS ) ) ,( Min( Const ,CRS ) - Max( AMS,RRS ) ) ) ,Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) )", "choosing": "( ( MUM / DS ) / ( ( MLU * RRSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( Max( MRS,Const ) + Min( PN ,PN ) ) * Min( ( ARS / FirstVNF_Mem_Server ) ,Max( RRS,ACS ) ) ),Max( FirstVNF_CPU,MDR ) ) / ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( AMS - PN ) ) )", "choosing": "Max( ( Max( CS,RRSe ) + ( MLU - CS ) ),Max( MUM,( MLU / MUR ) ) )", "obj1": 0.4431137724550898, "obj2": 0.4882275230228066}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( Min( MRS ,BR ) + ACS ) )", "choosing": "( ( MUM / DS ) / ( ( MLU * RRSe ) * DS ) )", "obj1": 0.25149700598802394, "obj2": 0.6944872416674391}, {"determining": "Max( Max( ( ( ARS * FirstVNF_RAM ) + ( ARS + FirstVNF_Mem_Server ) ),( ARS - PN ) ),( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / DS ) - ( ( RMSe * CS ) / RCSe ) )", "obj1": 0.27345309381237526, "obj2": 0.6722087900011549}, {"determining": "( ( Max( PN,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - ( Max( ( ( ( ( Max( DDR,FirstVNF_Mem_Server ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + FirstVNF_RAM ) + ACS ) / AMS ),BR ) + MDR ) )", "choosing": "Min( ( ( RMSe * MUC ) - CS ) ,Max( MUC,Max( ( ( RCSe - MUR ) / ( MUR * MUR ) ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / ( ( Max( PN,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - ( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) + MDR ) ) ) * ( MRS + ACS ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Max( MUC,Max( DS,MLU ) ) ) - RCSe ) / ( MUR * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - ( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "( ( RCSe - RCSe ) / ( MUR * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS + ( FirstVNF_RAM / DDR ) ) * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( ( ( ( RRSe / CS ) + ( MUR * Min( Max( MUM,MUM ) ,( RMSe * RRSe ) ) ) ) / MUR ) / ( RCSe - MUR ) ) + ( RCSe / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_RAM ) - Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( ( RCSe * CS ) / MUC ) + Max( ( CS / RRSe ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),CRS ) - Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( ( RCSe * CS ) / ( CS / MUR ) ) + Max( ( CS / RRSe ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,ARS ) * ( FirstVNF_CPU + ( Const * Max( ( FirstVNF_Mem * MRS ),Max( MDR,FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MLU / MUM ) * ( RRSe - MUM ) )", "obj1": 0.36726546906187624, "obj2": 0.577249074059409}, {"determining": "( ( DDR - ( FirstVNF_CPU + ( ( CRS + ( DDR + FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) * ( Const * Min( ( Max( FirstVNF_Mem,FirstVNF_Mem ) / FirstVNF_RAM ) ,BR ) ) )", "choosing": "( ( RRSe * RRSe ) + Min( Max( ( RMSe * ( DS * RCSe ) ),Max( RRSe,RCSe ) ) ,( ( RRSe * ( RCSe * MUC ) ) * ( DS + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ( FirstVNF_CPU + ( ( CRS + ( DDR + FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) * ( Const * Min( ( Max( FirstVNF_Mem,FirstVNF_Mem ) / FirstVNF_RAM ) ,BR ) ) )", "choosing": "( ( RRSe * RRSe ) + Min( Max( ( RMSe * ( DS * RCSe ) ),Max( RRSe,RCSe ) ) ,( ( RRSe * ( RCSe * MUC ) ) * ( DS + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ( FirstVNF_CPU + ( ( CRS + ( DDR + FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) * ( Const * Min( ( Max( FirstVNF_Mem,FirstVNF_Mem ) / FirstVNF_RAM ) ,BR ) ) )", "choosing": "( ( RRSe * RRSe ) + Min( Max( ( RMSe * ( DS * RCSe ) ),Max( RRSe,RCSe ) ) ,( ( RRSe * ( RCSe * MUC ) ) * ( DS + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( AMS / FirstVNF_CPU_Server ) * ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / Max( ( MUR + DS ),Min( Min( ( RCSe / MUR ) ,MUR ) ,DS ) ) )", "obj1": 0.29141716566866266, "obj2": 0.6516179204641015}, {"determining": "Max( Max( ( ( ARS * FirstVNF_RAM ) + ( ARS + FirstVNF_Mem_Server ) ),( ( ( Max( FirstVNF_RAM,AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ),( Min( RRS ,FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / Max( ( ( MUM - RMSe ) - Min( MUC ,Max( ( ( MUM + RRSe ) + RMSe ),MUM ) ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) - ( ( RMSe * MUR ) / RCSe ) )", "obj1": 0.3932135728542914, "obj2": 0.5136501505801265}, {"determining": "( Min( DDR ,PN ) - Min( BR ,AMS ) )", "choosing": "Max( ( MUM * Min( ( DS * RCSe ) ,Min( MUR ,MLU ) ) ),( DS + MLU ) )", "obj1": 0.5548902195608783, "obj2": 0.405593131116962}, {"determining": "( ( ARS + Max( ARS,ACS ) ) / Min( ( BR + ARS ) ,Const ) )", "choosing": "( ( ( Min( RMSe ,MUM ) + RRSe ) * ( ( ( MLU * RRSe ) * DS ) - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,MUM ) + Min( MUM ,RMSe ) ) ) )", "obj1": 0.3093812375249501, "obj2": 0.6358993661413888}, {"determining": "Min( ( ( AMS + DDR ) - Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( RRSe / ( ( MUR + DS ) + MUR ) )", "obj1": 0.29141716566866266, "obj2": 0.6516179204641015}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) * ( AMS / ( Min( Min( ( Min( Const ,MDR ) * ( MRS * FirstVNF_RAM_Server ) ) ,( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) - FirstVNF_RAM ) ) ,DDR ) - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Max( MUR,( ( ( CS * MUM ) + ( RCSe / Max( ( MUR + RRSe ),MUC ) ) ) - MLU ) ) / DS ) / ( ( MUR + DS ) + MUR ) )", "obj1": 0.29141716566866266, "obj2": 0.6516179204641015}, {"determining": "Min( Max( PN,Min( MRS ,Min( PN ,FirstVNF_RAM_Server ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( MLU / MUC ) + MUR ) )", "obj1": 0.29141716566866266, "obj2": 0.6516179204641015}, {"determining": "( ( FirstVNF_RAM * ( ( ACS - RRS ) / Const ) ) / Min( FirstVNF_CPU_Server ,Max( ( PN * ACS ),( CRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,( Max( RRSe,DS ) * ( DS * RCSe ) ) ) ,( ( ( MUC + MLU ) + ( MLU - MUC ) ) + Max( ( CS + MUC ),Max( RCSe,RCSe ) ) ) )", "obj1": 0.5688622754491018, "obj2": 0.38884865272070185}, {"determining": "Min( ( ( PN - BR ) / ( BR * CRS ) ) ,( ( FirstVNF_Mem_Server - ( FirstVNF_Mem / MRS ) ) / Min( ( FirstVNF_RAM / MDR ) ,( ( Const - FirstVNF_CPU ) / Max( BR,Max( FirstVNF_RAM,PN ) ) ) ) ) )", "choosing": "Min( ( Max( Min( ( ( DS + RCSe ) * MUC ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( ( CS * RRSe ) ,DS ) ) ) ) ,( ( MUR * DS ) / MUM ) )", "obj1": 0.499001996007984, "obj2": 0.4292808369605992}, {"determining": "Max( Max( ( ( ARS * FirstVNF_RAM ) + ( FirstVNF_Mem_Server + ARS ) ),( ARS - PN ) ),( Max( ( FirstVNF_Mem_Server - RRS ),FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / DS ) - ( ( ( ( ( ( ( MLU / MLU ) - Min( DS ,MUR ) ) / DS ) * RCSe ) * MUR ) * CS ) / RCSe ) )", "obj1": 0.27345309381237526, "obj2": 0.6722087900011549}, {"determining": "( ( ( DDR / CRS ) - ( MRS - PN ) ) * ( ( Const / FirstVNF_RAM ) * ( FirstVNF_RAM_Server / ACS ) ) )", "choosing": "( ( RRSe - MUR ) - ( RCSe - RMSe ) )", "obj1": 0.32335329341317365, "obj2": 0.628413984198884}, {"determining": "Max( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) / ( AMS / FirstVNF_CPU ) ),Min( ( MRS * ARS ) ,( FirstVNF_Mem + PN ) ) )", "choosing": "( Min( MUM ,Min( CS ,MUC ) ) * ( MUM - CS ) )", "obj1": 0.43912175648702595, "obj2": 0.4968896865056242}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUM,MUC ) / Max( Min( MUC ,MLU ),Min( CS ,MUC ) ) )", "obj1": 0.3532934131736527, "obj2": 0.582471185899716}, {"determining": "Min( Max( ( MRS + CRS ),DDR ) ,( ( AMS * ARS ) + ( ( MRS - MRS ) / ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( Min( ( DS / DS ) ,Min( MUR ,MUC ) ) * Min( ( MUC + MLU ) ,Max( RCSe,MUM ) ) ) )", "obj1": 0.4091816367265469, "obj2": 0.5058526086146105}, {"determining": "( ( FirstVNF_RAM_Server / AMS ) * Min( BR ,( RRS / MDR ) ) )", "choosing": "( DS - ( CS + MUC ) )", "obj1": 0.3812375249500998, "obj2": 0.5582631642103946}, {"determining": "Min( Min( FirstVNF_RAM ,BR ) ,Max( ( ( FirstVNF_RAM / CRS ) * FirstVNF_RAM ),Max( FirstVNF_Mem_Server,ARS ) ) )", "choosing": "Max( ( MUM * RMSe ),( DS + MLU ) )", "obj1": 0.562874251497006, "obj2": 0.4047823303023192}, {"determining": "( ( FirstVNF_Mem - ( MRS + Min( RRS ,AMS ) ) ) * ( FirstVNF_RAM_Server + AMS ) )", "choosing": "( ( MUR - ( Max( RCSe,RRSe ) / ( RMSe - Max( RCSe,MLU ) ) ) ) - Min( ( MUM - Min( MLU ,RMSe ) ) ,( ( DS * MLU ) / ( RRSe - MLU ) ) ) )", "obj1": 0.4810379241516966, "obj2": 0.45393331342447085}], "4": [{"determining": "( ( CRS - DDR ) / Max( DDR,FirstVNF_Mem ) )", "choosing": "( Min( ( RRSe * ( MUM * ( Min( ( MUC * Max( CS,CS ) ) ,RCSe ) - MLU ) ) ) ,MUR ) - Max( MLU,DS ) )", "obj1": 0.7924151696606786, "obj2": 0.18923031562859935}, {"determining": "( ( Const - ARS ) * Max( MDR,PN ) )", "choosing": "( ( DS - RRSe ) / ( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( AMS + ( FirstVNF_RAM - ( FirstVNF_Mem - FirstVNF_CPU ) ) ) * ( FirstVNF_CPU_Server + DDR ) ) - FirstVNF_CPU_Server ) ,( FirstVNF_RAM + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + RCSe ) + Min( RRSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),CRS ) - Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( ( RCSe * CS ) / ( CS / MUR ) ) + Max( ( CS / RRSe ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * Max( ( MDR - MDR ),CRS ) ) + ( CRS - ( DDR + Const ) ) )", "choosing": "( ( CS + RRSe ) / ( ( CS / DS ) + ( ( MUR / MUC ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( MUR + DS ) + MUR ) )", "obj1": 0.29141716566866266, "obj2": 0.6516179204641015}, {"determining": "Max( Max( RRS,( ARS - PN ) ),( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / DS ) - ( MLU / RCSe ) )", "obj1": 0.2894211576846307, "obj2": 0.6527706319629112}, {"determining": "( ( MDR * FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + Const ) )", "choosing": "( ( MUR - MUR ) / ( Min( ( ( CS / RCSe ) / ( MUR / ( ( Max( MLU,RMSe ) + RCSe ) - RMSe ) ) ) ,MUM ) - Min( CS ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - FirstVNF_CPU ) * ARS ) + ARS ) - Min( PN ,Max( FirstVNF_RAM_Server,BR ) ) )", "choosing": "( Max( ( MUC + RRSe ),( RCSe / MLU ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,DDR ) * ( DDR - Max( ACS,FirstVNF_Mem ) ) )", "choosing": "( ( MUC + MUR ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - ARS ) * ( ACS - PN ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( ( MUC - RCSe ) * Min( DS ,DS ) ) / Max( Min( CS ,MUC ),( MUC * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( MDR + Max( PN,( ( ( Min( FirstVNF_Mem_Server ,ACS ) + Min( RRS ,MRS ) ) + FirstVNF_Mem_Server ) - ( ( CRS - ( AMS * ACS ) ) + Max( PN,AMS ) ) ) ) ),DDR ) ,( ( AMS * AMS ) + Min( ( ARS + AMS ) ,DDR ) ) )", "choosing": "Min( ( DS - MUR ) ,( Min( MUM ,RRSe ) - ( ( Min( DS ,MUC ) / Max( CS,DS ) ) - ( RCSe + ( Min( RRSe ,Min( MLU ,MUR ) ) + MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( BR ,FirstVNF_Mem ) - Max( FirstVNF_Mem_Server,AMS ) ) / ( FirstVNF_CPU - AMS ) )", "choosing": "( Min( ( DS + MUC ) ,Max( DS,MUR ) ) * Min( ( ( Max( RRSe,( ( ( MUC - MUM ) + RRSe ) + DS ) ) - RMSe ) + MUC ) ,Min( MUR ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( PN - BR ) / ( BR * CRS ) ) ,( ( RRS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem + CRS ) ) )", "choosing": "Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + ( ( CRS * BR ) / Min( ( AMS - ( FirstVNF_RAM_Server * ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + CRS ) ) ) ,FirstVNF_RAM_Server ) ) ) ,( Min( Min( AMS ,PN ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( Min( ( MUC / MUR ) ,( ( MUM - MUR ) + ( MUM * CS ) ) ) * ( Min( ( MLU - MUM ) ,( CS + RMSe ) ) / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * ( ( ACS - RRS ) / Const ) ) / Min( FirstVNF_CPU_Server ,Max( ( PN * ACS ),( CRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,( Max( RRSe,DS ) * ( DS * RCSe ) ) ) ,( ( ( MUC + MLU ) + ( MLU - MUC ) ) + Max( ( CS + MUC ),Max( RCSe,RCSe ) ) ) )", "obj1": 0.5688622754491018, "obj2": 0.38884865272070185}, {"determining": "( ( Max( FirstVNF_Mem_Server,PN ) * FirstVNF_RAM_Server ) - ( Max( ( ( Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) / ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU - BR ) ) * ( PN - AMS ) ) ) / AMS ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - ( MLU * ( MUR - RCSe ) ) ) ,( ( ( ( RCSe * ( CS - ( MUM - MUC ) ) ) - MUC ) / RMSe ) * ( Min( CS ,MUC ) - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( ARS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( BR ,Const ) ) ) / Min( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) )", "choosing": "( ( RRSe - ( Min( ( Min( RMSe ,MLU ) / RCSe ) ,RCSe ) / ( MUR - RCSe ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( DDR / ARS ),Min( DDR ,CRS ) ) ,( Min( Const ,CRS ) - Max( AMS,RRS ) ) ) ,Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) + RRSe ) * ( CS - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,MUM ) + Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( FirstVNF_CPU * ( ( Max( Min( DDR ,RRS ),Const ) / ACS ) / FirstVNF_Mem ) ) / ( PN - BR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( ( RRSe * RCSe ) / ( RCSe + CS ) ) + ( ( ( ( Min( MUC ,Min( RCSe ,MUR ) ) / MLU ) / RMSe ) + Min( MUR ,Min( ( DS + MLU ) ,MUR ) ) ) - Max( MUM,MUC ) ) ),( ( ( MUM - MLU ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - MRS ) )", "choosing": "( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * ( ( CS + RMSe ) - Min( MUC ,RRSe ) ) ) ) ) * ( Min( ( CS + RMSe ) ,( MLU - MUM ) ) / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( FirstVNF_Mem - Const ),( FirstVNF_Mem - FirstVNF_Mem ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( FirstVNF_CPU * ARS ) ) ) )", "choosing": "( ( ( ( MUR * Min( RMSe ,CS ) ) / ( DS / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) * ( Min( ( CS + RMSe ) ,( MLU - MUM ) ) / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( PN - BR ),( BR * CRS ) ) ,( ( FirstVNF_Mem + CRS ) / ( RRS - ( ( Max( MRS,FirstVNF_Mem ) + DDR ) / MRS ) ) ) )", "choosing": "Min( ( MUC * MLU ) ,( ( DS * MUR ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( PN - BR ) / ( BR * CRS ) ) ,( ( RRS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem + CRS ) ) )", "choosing": "( ( ( RMSe * DS ) / ( MUM / CS ) ) / ( ( DS * MUR ) * Min( MUR ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,ARS ) - Max( ( Min( FirstVNF_RAM ,DDR ) / PN ),( CRS / BR ) ) )", "choosing": "( ( Min( ( MUR + Max( CS,( ( Min( RCSe ,MUC ) * ( RRSe * MLU ) ) - MUC ) ) ) ,( MLU / RCSe ) ) / ( ( MUM + DS ) * ( MUR / RMSe ) ) ) - ( DS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR * PN ) - Min( Const ,BR ) ) + ( ( FirstVNF_RAM + AMS ) - ( Max( Max( ( ACS * FirstVNF_CPU ),( BR * ARS ) ),FirstVNF_RAM_Server ) * MDR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( Min( BR ,MRS ) / ( Const - FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( RCSe - MUM ),Min( ( ( ( ( MLU * DS ) / ( RMSe * MUC ) ) / RRSe ) / RMSe ) ,( RMSe + Min( ( RMSe - RCSe ) ,Min( RRSe ,MUR ) ) ) ) ) / Max( Max( MUR,CS ),Min( ( RMSe + MLU ) ,Min( MUC ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) )", "choosing": "( ( ( ( MLU - MUR ) / Min( CS ,MUM ) ) + Max( ( MUR + MUC ),( MLU * MUM ) ) ) * ( Min( ( RCSe * MLU ) ,Min( CS ,MUR ) ) / ( ( MUC / MUC ) / Max( RCSe,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem - Min( ( FirstVNF_CPU_Server - Max( ARS,CRS ) ) ,Min( AMS ,BR ) ) ),BR ) - Min( FirstVNF_CPU ,MDR ) )", "choosing": "Max( ( ( RCSe * MUM ) + MUM ),( RRSe - Max( Max( MUM,CS ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * Max( FirstVNF_RAM_Server,CRS ) ) + ( CRS - ( DDR + Const ) ) )", "choosing": "( ( CS + RRSe ) / ( ( CS / DS ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / AMS ) * ( RRS + Min( ( ( AMS * ( AMS / ( MDR * FirstVNF_Mem_Server ) ) ) * RRS ) ,MDR ) ) )", "choosing": "( ( CS - RMSe ) - Min( ( ( MUM - MUC ) + MUR ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_Mem ) - ( Max( ( MRS * Const ),Max( FirstVNF_Mem,ARS ) ) + PN ) )", "choosing": "( Min( ( RCSe * DS ) ,( MLU * MUC ) ) / ( ( ( MLU - RMSe ) + ( CS / RCSe ) ) - Min( RRSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_Mem ) - ( ( ( Min( AMS ,FirstVNF_RAM_Server ) * ACS ) + MRS ) + ARS ) )", "choosing": "( Min( ( RCSe * DS ) ,( MLU * Max( RRSe,RMSe ) ) ) / ( Min( CS ,DS ) - Min( RRSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - FirstVNF_CPU_Server ) ,( ( PN * Max( FirstVNF_CPU,( ( RRS + ACS ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) ) ) + CRS ) )", "choosing": "( ( MUC + RMSe ) + Min( RCSe ,( MUM / ( MLU + ( RMSe * MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * BR ) ) + ( ( FirstVNF_CPU_Server - Const ) + RRS ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( ( FirstVNF_CPU * ( CRS / MDR ) ) / ( MRS - ARS ) ) ) )", "choosing": "Max( ( MLU + ( Max( MUM,MUC ) - Min( MLU ,DS ) ) ),( ( ( MLU - MUM ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * BR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / ( RRSe * RCSe ) ) + ( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ),( ( ( MUM - MLU ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - ( ( ( FirstVNF_Mem / MRS ) / ( BR + FirstVNF_RAM ) ) + CRS ) ) * ( Max( Max( PN,FirstVNF_RAM ),FirstVNF_RAM_Server ) * CRS ) )", "choosing": "( ( ( ( MLU - MUR ) / Min( CS ,MUM ) ) + Max( ( MUR + MUC ),( MLU * MUM ) ) ) * ( Min( ( RCSe * MLU ) ,Min( CS ,MUR ) ) / Max( ( ( ( MUM - RMSe ) - ( MUM - RCSe ) ) * ( Min( RRSe ,RRSe ) * ( MUM / RMSe ) ) ),( ( Max( MUR,MUM ) + Min( MUC ,RMSe ) ) * Max( ( MUR / RRSe ),( CS + DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const - ( Min( MRS ,BR ) + ACS ) )", "choosing": "( ( MUM / DS ) / ( ( MUC + Max( MUC,MUC ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_Mem - AMS ),FirstVNF_CPU ) / ( FirstVNF_Mem + CRS ) ) ,( Max( FirstVNF_RAM,ARS ) / AMS ) )", "choosing": "Min( Min( ( RRSe / MUR ) ,Max( MUR,MUC ) ) ,( Max( RMSe,( Min( ( MUM - RRSe ) ,Min( CS ,( ( DS - MUC ) + RRSe ) ) ) - ( RMSe - ( ( RMSe / MUR ) - MUC ) ) ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( PN - BR ) / ( BR * CRS ) ) ,( ( RRS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem + CRS ) ) )", "choosing": "Min( Min( ( RMSe / RMSe ) ,( CS + MUC ) ) ,Max( ( RMSe * MLU ),( DS + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS - Max( FirstVNF_Mem_Server,MRS ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( CS + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - FirstVNF_CPU_Server ) ,Max( FirstVNF_RAM,( Min( FirstVNF_CPU_Server ,MRS ) * PN ) ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( Max( Min( MLU ,RMSe ),Max( MUC,( ( Min( MUM ,MUM ) + ( MUR / MUC ) ) * ( ( Min( MLU ,MUR ) * Min( RRSe ,RCSe ) ) - RCSe ) ) ) ) + ( ( MUC - RRSe ) * ( MLU * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( DDR - FirstVNF_CPU_Server ) ,Min( PN ,FirstVNF_RAM ) ) ,( ( AMS * ARS ) + ( ( ( ( ( PN / FirstVNF_RAM_Server ) / ( ARS - AMS ) ) * ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) + ( AMS + FirstVNF_CPU ) ) + MRS ) ) )", "choosing": "Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Max( MUM,MUR ) * MUM ) - ( MUM - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN / FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server - AMS ) ) * Min( Min( ( DDR - FirstVNF_CPU_Server ) ,Min( PN ,( ( FirstVNF_RAM_Server + ( MRS * FirstVNF_Mem_Server ) ) * Max( ARS,Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) ) ) ) ,( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) + ( Min( ARS ,DDR ) + FirstVNF_CPU ) )", "choosing": "( ( DS + RMSe ) - ( ( Max( MUM,MUR ) * MUM ) / ( ( RMSe / RMSe ) * ( Max( ( ( Min( RRSe ,RCSe ) / ( RCSe - MLU ) ) + ( ( MUC + DS ) - ( DS + MUR ) ) ),( ( ( MLU / MUC ) * RRSe ) * DS ) ) + RCSe ) ) ) )", "obj1": 0.45708582834331335, "obj2": 0.46589271556629863}, {"determining": "Min( Min( ( DDR - FirstVNF_CPU_Server ) ,Min( PN ,FirstVNF_RAM ) ) ,( ( AMS * ARS ) + ( DDR + MRS ) ) )", "choosing": "( Min( RRSe ,RRSe ) - ( ( Max( MUM,MUR ) * MUM ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) ) - AMS ) * Min( FirstVNF_Mem_Server ,MRS ) )", "choosing": "( Min( ( CS + RMSe ) ,( MLU - MUM ) ) + Min( MUM ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,MRS ) ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( DS * MUM ) + Min( MUM ,CS ) ) ) * ( Min( ( CS + RMSe ) ,( MLU - MUM ) ) / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( DS * MUM ) + Min( MUM ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - FirstVNF_CPU_Server ) ,( ( Min( MDR ,RRS ) / Max( ( Min( ( FirstVNF_Mem - RRS ) ,FirstVNF_RAM_Server ) + ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) * FirstVNF_RAM ) ),FirstVNF_Mem ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe + RMSe ) + ( ( MUM + RCSe ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - FirstVNF_CPU_Server ) ,( FirstVNF_RAM + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUM + RCSe ) - RRSe ) * ( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,Max( BR,FirstVNF_CPU_Server ) )", "choosing": "( ( DS + DS ) - ( RCSe - Max( RCSe,RMSe ) ) )", "obj1": 0.5369261477045908, "obj2": 0.40879249269503365}, {"determining": "Min( ( ( ( AMS + ( FirstVNF_RAM - ( FirstVNF_Mem - ( Min( CRS ,MRS ) - ( FirstVNF_CPU_Server + MRS ) ) ) ) ) * ( FirstVNF_CPU_Server + DDR ) ) - FirstVNF_CPU_Server ) ,( FirstVNF_RAM + FirstVNF_CPU_Server ) )", "choosing": "( Max( RMSe,RRSe ) + Min( RRSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( DS * MUM ) + Min( MUM ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server + Min( ( MDR / FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ,( ( RRS - ( RRS + FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem + CRS ) ) )", "choosing": "Min( Min( ( MUM / ( ( RMSe + MUC ) * ( MUM - CS ) ) ) ,( MUR / MUC ) ) ,Min( RMSe ,( ( ( RCSe * RRSe ) + Min( ( RMSe * MUC ) ,Min( MUC ,CS ) ) ) / ( ( Min( ( MUC / RCSe ) ,MLU ) * Max( CS,Max( Min( MUC ,MUC ),MUC ) ) ) * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( PN - BR ) / ( BR * CRS ) ) ,( ( RRS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem + CRS ) ) )", "choosing": "Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( MUM * RRSe ) - ( DS - ( Min( DS ,MUC ) / ( CS - DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - Max( ( RRS + RRS ),( Const - ( FirstVNF_RAM_Server * MRS ) ) ) ) * Max( MDR,PN ) )", "choosing": "( ( DS - RRSe ) / Max( ( RRSe + RCSe ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,Min( MRS ,MDR ) ) * Max( MDR,PN ) )", "choosing": "( ( MUC + MUR ) * ( MUR * ( ( RRSe / ( ( RMSe / ( ( MUC + MUR ) * MUM ) ) + DS ) ) + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * Max( FirstVNF_RAM_Server,CRS ) ) + ( CRS - ( DDR + Const ) ) )", "choosing": "Min( ( RMSe * MUM ) ,( MUR * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( MDR,( BR * CRS ) ) * ( ACS - PN ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( ACS - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUM,MUC ) / Max( Min( MUC ,MLU ),Min( CS ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ARS ) * ( PN - ACS ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( FirstVNF_Mem_Server - Min( AMS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( MUR - ( ( RMSe - ( Max( MUC,Max( MUC,( RMSe / RRSe ) ) ) + MUC ) ) / ( MUC - RRSe ) ) ) - Min( ( ( RRSe * Min( MUR ,RCSe ) ) - Min( MLU ,RMSe ) ) ,( ( DS * MLU ) / ( RRSe - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( RRS + ( PN - ARS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) - ( FirstVNF_RAM - MDR ) )", "choosing": "( Max( DS,( RCSe * CS ) ) - ( DS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( AMS,Min( ( ( MRS * MRS ) / FirstVNF_CPU_Server ) ,Min( ( BR - CRS ) ,( ARS / MRS ) ) ) ) / Min( ( MDR / FirstVNF_RAM ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) )", "choosing": "( Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( Max( DS,Max( RRSe,MUR ) ) ,Min( MUR ,MUR ) ) ) / Max( Min( ( ( DS + ( ( Max( MUM,CS ) + MUM ) / MUR ) ) * MUR ) ,Max( MUR,MLU ) ),( ( ( MUM - RMSe ) + RCSe ) / ( MUR - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( Min( MRS ,BR ) + ACS ) )", "choosing": "( ( MUM / DS ) / ( ( MLU * RRSe ) * DS ) )", "obj1": 0.25149700598802394, "obj2": 0.6944872416674391}, {"determining": "Max( Max( ( ( ARS * FirstVNF_RAM ) + ( ARS + FirstVNF_Mem_Server ) ),( ARS - PN ) ),( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / DS ) - ( ( RMSe * CS ) / RCSe ) )", "obj1": 0.27345309381237526, "obj2": 0.6722087900011549}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( AMS / FirstVNF_CPU_Server ) * ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / Max( ( MUR + DS ),Min( Min( ( RCSe / MUR ) ,MUR ) ,DS ) ) )", "obj1": 0.29141716566866266, "obj2": 0.6516179204641015}, {"determining": "Max( Max( ( ( ARS * FirstVNF_RAM ) + ( ARS + FirstVNF_Mem_Server ) ),( ( ( Max( FirstVNF_RAM,AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ),( Min( RRS ,FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / Max( ( ( MUM - RMSe ) - Min( MUC ,Max( ( ( MUM + RRSe ) + RMSe ),MUM ) ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) - ( ( RMSe * MUR ) / RCSe ) )", "obj1": 0.3932135728542914, "obj2": 0.5136501505801265}, {"determining": "( ( ARS + Max( ARS,ACS ) ) / Min( ( BR + ARS ) ,Const ) )", "choosing": "( ( ( Min( RMSe ,MUM ) + RRSe ) * ( ( ( MLU * RRSe ) * DS ) - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,MUM ) + Min( MUM ,RMSe ) ) ) )", "obj1": 0.3093812375249501, "obj2": 0.6358993661413888}, {"determining": "Min( ( ( AMS + DDR ) - Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( RRSe / ( ( MUR + DS ) + MUR ) )", "obj1": 0.29141716566866266, "obj2": 0.6516179204641015}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) * ( AMS / ( Min( Min( ( Min( Const ,MDR ) * ( MRS * FirstVNF_RAM_Server ) ) ,( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) - FirstVNF_RAM ) ) ,DDR ) - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Max( MUR,( ( ( CS * MUM ) + ( RCSe / Max( ( MUR + RRSe ),MUC ) ) ) - MLU ) ) / DS ) / ( ( MUR + DS ) + MUR ) )", "obj1": 0.29141716566866266, "obj2": 0.6516179204641015}, {"determining": "Min( Max( PN,Min( MRS ,Min( PN ,FirstVNF_RAM_Server ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( MLU / MUC ) + MUR ) )", "obj1": 0.29141716566866266, "obj2": 0.6516179204641015}, {"determining": "( ( FirstVNF_RAM * ( ( ACS - RRS ) / Const ) ) / Min( FirstVNF_CPU_Server ,Max( ( PN * ACS ),( CRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,( Max( RRSe,DS ) * ( DS * RCSe ) ) ) ,( ( ( MUC + MLU ) + ( MLU - MUC ) ) + Max( ( CS + MUC ),Max( RCSe,RCSe ) ) ) )", "obj1": 0.5688622754491018, "obj2": 0.38884865272070185}, {"determining": "Min( ( ( PN - BR ) / ( BR * CRS ) ) ,( ( FirstVNF_Mem_Server - ( FirstVNF_Mem / MRS ) ) / Min( ( FirstVNF_RAM / MDR ) ,( ( Const - FirstVNF_CPU ) / Max( BR,Max( FirstVNF_RAM,PN ) ) ) ) ) )", "choosing": "Min( ( Max( Min( ( ( DS + RCSe ) * MUC ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( ( CS * RRSe ) ,DS ) ) ) ) ,( ( MUR * DS ) / MUM ) )", "obj1": 0.499001996007984, "obj2": 0.4292808369605992}, {"determining": "Max( Max( ( ( ARS * FirstVNF_RAM ) + ( FirstVNF_Mem_Server + ARS ) ),( ARS - PN ) ),( Max( ( FirstVNF_Mem_Server - RRS ),FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / DS ) - ( ( ( ( ( ( ( MLU / MLU ) - Min( DS ,MUR ) ) / DS ) * RCSe ) * MUR ) * CS ) / RCSe ) )", "obj1": 0.27345309381237526, "obj2": 0.6722087900011549}, {"determining": "Min( Max( ( MRS + CRS ),DDR ) ,( ( AMS * ARS ) + ( ( MRS - MRS ) / ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( Min( ( DS / DS ) ,Min( MUR ,MUC ) ) * Min( ( MUC + MLU ) ,Max( RCSe,MUM ) ) ) )", "obj1": 0.4091816367265469, "obj2": 0.5058526086146105}, {"determining": "( ( FirstVNF_Mem - ( MRS + Min( RRS ,AMS ) ) ) * ( FirstVNF_RAM_Server + AMS ) )", "choosing": "( ( MUR - ( Max( RCSe,RRSe ) / ( RMSe - Max( RCSe,MLU ) ) ) ) - Min( ( MUM - Min( MLU ,RMSe ) ) ,( ( DS * MLU ) / ( RRSe - MLU ) ) ) )", "obj1": 0.4810379241516966, "obj2": 0.45393331342447085}, {"determining": "Max( Max( ( ( ARS * FirstVNF_RAM ) + ( ARS + FirstVNF_Mem_Server ) ),( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( ACS + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ),( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,( ( RMSe * CS ) / RCSe ) ) ) ) - ( ( RMSe * CS ) / RCSe ) )", "obj1": 0.38922155688622756, "obj2": 0.5255192333784124}, {"determining": "Max( Max( ( ( ARS * FirstVNF_RAM ) + ( ARS + FirstVNF_Mem_Server ) ),( ARS - PN ) ),( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) - ( ( RMSe * CS ) / RCSe ) )", "obj1": 0.40119760479041916, "obj2": 0.5119804564263415}, {"determining": "Max( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) / ( AMS / FirstVNF_CPU ) ),Min( FirstVNF_Mem ,( ( ( ( AMS + DDR ) - Max( Const,MDR ) ) + Min( ( RRS / ( MDR + FirstVNF_CPU ) ) ,RRS ) ) - Max( FirstVNF_RAM,( ACS + PN ) ) ) ) )", "choosing": "( Min( MUM ,( Max( Max( MUR,RRSe ),RCSe ) / ( RRSe / MUC ) ) ) * ( MUM - CS ) )", "obj1": 0.44510978043912175, "obj2": 0.48056101938607304}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( Min( MRS ,BR ) + ACS ) )", "choosing": "( ( MUM / DS ) / ( ( MLU * RRSe ) * DS ) )", "obj1": 0.25149700598802394, "obj2": 0.6944872416674391}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( MUR + DS ) + MUR ) )", "obj1": 0.29141716566866266, "obj2": 0.6516179204641015}, {"determining": "( ( FirstVNF_CPU + ( ( CRS + ( DDR + FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU + ACS ) )", "choosing": "( ( MLU / MUM ) * ( Max( ( RMSe * ( DS - RCSe ) ),Max( RRSe,RCSe ) ) - MUM ) )", "obj1": 0.3473053892215569, "obj2": 0.5957535826641223}, {"determining": "Min( ( ( PN - BR ) / ( BR * CRS ) ) ,MRS )", "choosing": "Min( ( Max( Min( ( ( DS + RCSe ) * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( DS + RCSe ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ,( ( DS * MUR ) / MUM ) )", "obj1": 0.530938123752495, "obj2": 0.4130245752032569}, {"determining": "Min( ( ( PN - BR ) / ( BR * CRS ) ) ,( ( RRS - ( FirstVNF_Mem / MRS ) ) / Min( ( FirstVNF_RAM / MDR ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) )", "choosing": "Min( ( Max( Min( ( ( DS + RCSe ) * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ,( ( DS * MUR ) / MUM ) )", "obj1": 0.562874251497006, "obj2": 0.3912287224122157}, {"determining": "( Max( FirstVNF_Mem,Min( MRS ,MDR ) ) * Max( MDR,PN ) )", "choosing": "Min( ( MUC * MLU ) ,( ( DS * MUR ) / MUM ) )", "obj1": 0.5548902195608783, "obj2": 0.40229532200660983}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( ACS + ( FirstVNF_RAM_Server / Max( FirstVNF_CPU,ACS ) ) ) )", "choosing": "( ( MLU * MUC ) / ( ( MLU * RRSe ) * RMSe ) )", "obj1": 0.25149700598802394, "obj2": 0.6944872416674391}, {"determining": "Max( Max( ( ( Max( Min( DDR ,RRS ),Const ) / ACS ) / FirstVNF_Mem ),( ARS - PN ) ),( Max( ( FirstVNF_Mem_Server - RRS ),FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / DS ) - ( ( ( ( ( ( ( MLU / MLU ) - Min( DS ,MUR ) ) / DS ) * RCSe ) * ( ( Min( MUC ,Min( RCSe ,MUR ) ) / MLU ) / RMSe ) ) * CS ) / RCSe ) )", "obj1": 0.42714570858283435, "obj2": 0.4938910635860625}, {"determining": "( ( FirstVNF_RAM * ( ( ACS - RRS ) / Const ) ) / Min( FirstVNF_CPU_Server ,Max( ( PN * ACS ),( CRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,( Max( RRSe,DS ) * ( DS * RCSe ) ) ) ,( ( ( MUC + MLU ) + ( MLU - MUC ) ) + Max( ( CS + MUC ),Max( RCSe,RCSe ) ) ) )", "obj1": 0.5688622754491018, "obj2": 0.38884865272070185}, {"determining": "( ( ( ( CRS + AMS ) + Max( MRS,PN ) ) + FirstVNF_Mem ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) / ( ACS - FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( MUM * Max( ( ( RMSe * RCSe ) * CS ),DS ) ) - ( MUM - MUC ) ) ) - ( Max( Max( MUM,MUR ),MUM ) / RMSe ) )", "obj1": 0.4411177644710579, "obj2": 0.48654819637058067}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( MUR + DS ) + MUR ) )", "obj1": 0.29141716566866266, "obj2": 0.6516179204641015}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( DDR + MRS ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( MUR + DS ) + ( MUM * CS ) ) )", "obj1": 0.34930139720558884, "obj2": 0.5568249372490205}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) ) - ( ( Max( MUM,MUR ) * MUM ) / RMSe ) )", "obj1": 0.4411177644710579, "obj2": 0.48654819637058067}, {"determining": "Max( Max( AMS,( ARS - PN ) ),( Max( ( FirstVNF_Mem_Server - RRS ),FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( Min( Min( ( RCSe / MUR ) ,MUR ) ,DS ) / DS ) - ( ( ( ( ( ( ( MLU / MLU ) - Min( DS ,MUR ) ) / DS ) * RCSe ) * MUR ) * CS ) / RCSe ) )", "obj1": 0.469061876247505, "obj2": 0.45486346742101047}, {"determining": "Max( Max( ( ( ARS * FirstVNF_RAM ) + ( FirstVNF_Mem_Server + ARS ) ),( ARS - PN ) ),( Max( ( FirstVNF_Mem_Server - RRS ),FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / DS ) - ( ( ( ( ( ( ( MLU / MLU ) - Min( DS ,MUR ) ) / DS ) * RCSe ) * MUR ) * CS ) / RCSe ) )", "obj1": 0.3273453093812375, "obj2": 0.6043494747245649}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( AMS / FirstVNF_CPU_Server ) * ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / Max( ( MUR + DS ),Min( Min( ( RCSe / MUR ) ,MUR ) ,DS ) ) )", "obj1": 0.2774451097804391, "obj2": 0.6604080817064796}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( DDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( Max( Min( MUC ,MLU ),Min( CS ,MUC ) ) + DS ) + MUR ) )", "obj1": 0.3213572854291417, "obj2": 0.6238875244393437}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( MUR + DS ) + MUR ) )", "obj1": 0.29141716566866266, "obj2": 0.6516179204641015}, {"determining": "( ( FirstVNF_RAM_Server / AMS ) * Min( BR ,( RRS / MDR ) ) )", "choosing": "( DS - ( CS + MUC ) )", "obj1": 0.4251497005988024, "obj2": 0.5057725773211997}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( Max( FirstVNF_Mem_Server,PN ) + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe - CS ) / ( ( MUR + DS ) + MUR ) )", "obj1": 0.4530938123752495, "obj2": 0.47575616485226324}, {"determining": "( ( Max( ( FirstVNF_Mem - Min( ( FirstVNF_CPU_Server - Max( ARS,CRS ) ) ,Min( AMS ,BR ) ) ),BR ) - Min( FirstVNF_CPU ,MDR ) ) + ( AMS + FirstVNF_CPU ) )", "choosing": "( Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Max( Max( MUM,CS ),MUM ) * CS ) - ( MUM - MUC ) ) ) - ( ( Max( MUM,MUR ) * MUM ) / RMSe ) )", "obj1": 0.4411177644710579, "obj2": 0.48654819637058067}, {"determining": "( ( ( ( PN / FirstVNF_RAM_Server ) / ( ARS - AMS ) ) * Min( Min( ( DDR - FirstVNF_CPU_Server ) ,Min( PN ,FirstVNF_RAM ) ) ,( ( AMS * ARS ) + ( DDR + MRS ) ) ) ) + ( AMS + FirstVNF_CPU ) )", "choosing": "( Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) ) - ( ( Max( MUM,MUR ) * MUM ) / RMSe ) )", "obj1": 0.4630738522954092, "obj2": 0.4575263390786269}, {"determining": "Max( Max( RRS,( ARS - ( MDR * FirstVNF_Mem ) ) ),( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( DS - ( Max( RMSe,MUC ) + MUC ) )", "obj1": 0.37325349301397204, "obj2": 0.5469490761685505}], "5": [{"determining": "( ( CRS - DDR ) / Max( DDR,FirstVNF_Mem ) )", "choosing": "( Min( ( RRSe * ( MUM * ( Min( ( MUC * Max( CS,CS ) ) ,RCSe ) - MLU ) ) ) ,MUR ) - Max( MLU,DS ) )", "obj1": 0.7924151696606786, "obj2": 0.18923031562859935}, {"determining": "( ( Const - ARS ) * Max( MDR,PN ) )", "choosing": "( ( DS - RRSe ) / ( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( AMS + ( FirstVNF_RAM - ( FirstVNF_Mem - FirstVNF_CPU ) ) ) * ( FirstVNF_CPU_Server + DDR ) ) - FirstVNF_CPU_Server ) ,( FirstVNF_RAM + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + RCSe ) + Min( RRSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),CRS ) - Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( ( RCSe * CS ) / ( CS / MUR ) ) + Max( ( CS / RRSe ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * Max( ( MDR - MDR ),CRS ) ) + ( CRS - ( DDR + Const ) ) )", "choosing": "( ( CS + RRSe ) / ( ( CS / DS ) + ( ( MUR / MUC ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( MUR + DS ) + MUR ) )", "obj1": 0.29141716566866266, "obj2": 0.6516179204641015}, {"determining": "Max( Max( RRS,( ARS - PN ) ),( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / DS ) - ( MLU / RCSe ) )", "obj1": 0.2894211576846307, "obj2": 0.6527706319629112}, {"determining": "( ( MDR * FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + Const ) )", "choosing": "( ( MUR - MUR ) / ( Min( ( ( CS / RCSe ) / ( MUR / ( ( Max( MLU,RMSe ) + RCSe ) - RMSe ) ) ) ,MUM ) - Min( CS ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - FirstVNF_CPU ) * ARS ) + ARS ) - Min( PN ,Max( FirstVNF_RAM_Server,BR ) ) )", "choosing": "( Max( ( MUC + RRSe ),( RCSe / MLU ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,DDR ) * ( DDR - Max( ACS,FirstVNF_Mem ) ) )", "choosing": "( ( MUC + MUR ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - ARS ) * ( ACS - PN ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( ( MUC - RCSe ) * Min( DS ,DS ) ) / Max( Min( CS ,MUC ),( MUC * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( MDR + Max( PN,( ( ( Min( FirstVNF_Mem_Server ,ACS ) + Min( RRS ,MRS ) ) + FirstVNF_Mem_Server ) - ( ( CRS - ( AMS * ACS ) ) + Max( PN,AMS ) ) ) ) ),DDR ) ,( ( AMS * AMS ) + Min( ( ARS + AMS ) ,DDR ) ) )", "choosing": "Min( ( DS - MUR ) ,( Min( MUM ,RRSe ) - ( ( Min( DS ,MUC ) / Max( CS,DS ) ) - ( RCSe + ( Min( RRSe ,Min( MLU ,MUR ) ) + MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( BR ,FirstVNF_Mem ) - Max( FirstVNF_Mem_Server,AMS ) ) / ( FirstVNF_CPU - AMS ) )", "choosing": "( Min( ( DS + MUC ) ,Max( DS,MUR ) ) * Min( ( ( Max( RRSe,( ( ( MUC - MUM ) + RRSe ) + DS ) ) - RMSe ) + MUC ) ,Min( MUR ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( PN - BR ) / ( BR * CRS ) ) ,( ( RRS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem + CRS ) ) )", "choosing": "Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + ( ( CRS * BR ) / Min( ( AMS - ( FirstVNF_RAM_Server * ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + CRS ) ) ) ,FirstVNF_RAM_Server ) ) ) ,( Min( Min( AMS ,PN ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( Min( ( MUC / MUR ) ,( ( MUM - MUR ) + ( MUM * CS ) ) ) * ( Min( ( MLU - MUM ) ,( CS + RMSe ) ) / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * ( ( ACS - RRS ) / Const ) ) / Min( FirstVNF_CPU_Server ,Max( ( PN * ACS ),( CRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,( Max( RRSe,DS ) * ( DS * RCSe ) ) ) ,( ( ( MUC + MLU ) + ( MLU - MUC ) ) + Max( ( CS + MUC ),Max( RCSe,RCSe ) ) ) )", "obj1": 0.5688622754491018, "obj2": 0.38884865272070185}, {"determining": "( ( Max( FirstVNF_Mem_Server,PN ) * FirstVNF_RAM_Server ) - ( Max( ( ( Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) / ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU - BR ) ) * ( PN - AMS ) ) ) / AMS ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - ( MLU * ( MUR - RCSe ) ) ) ,( ( ( ( RCSe * ( CS - ( MUM - MUC ) ) ) - MUC ) / RMSe ) * ( Min( CS ,MUC ) - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( ARS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( BR ,Const ) ) ) / Min( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) )", "choosing": "( ( RRSe - ( Min( ( Min( RMSe ,MLU ) / RCSe ) ,RCSe ) / ( MUR - RCSe ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( DDR / ARS ),Min( DDR ,CRS ) ) ,( Min( Const ,CRS ) - Max( AMS,RRS ) ) ) ,Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) + RRSe ) * ( CS - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,MUM ) + Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( FirstVNF_CPU * ( ( Max( Min( DDR ,RRS ),Const ) / ACS ) / FirstVNF_Mem ) ) / ( PN - BR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( ( RRSe * RCSe ) / ( RCSe + CS ) ) + ( ( ( ( Min( MUC ,Min( RCSe ,MUR ) ) / MLU ) / RMSe ) + Min( MUR ,Min( ( DS + MLU ) ,MUR ) ) ) - Max( MUM,MUC ) ) ),( ( ( MUM - MLU ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - MRS ) )", "choosing": "( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * ( ( CS + RMSe ) - Min( MUC ,RRSe ) ) ) ) ) * ( Min( ( CS + RMSe ) ,( MLU - MUM ) ) / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( FirstVNF_Mem - Const ),( FirstVNF_Mem - FirstVNF_Mem ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( FirstVNF_CPU * ARS ) ) ) )", "choosing": "( ( ( ( MUR * Min( RMSe ,CS ) ) / ( DS / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) * ( Min( ( CS + RMSe ) ,( MLU - MUM ) ) / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( PN - BR ),( BR * CRS ) ) ,( ( FirstVNF_Mem + CRS ) / ( RRS - ( ( Max( MRS,FirstVNF_Mem ) + DDR ) / MRS ) ) ) )", "choosing": "Min( ( MUC * MLU ) ,( ( DS * MUR ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( PN - BR ) / ( BR * CRS ) ) ,( ( RRS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem + CRS ) ) )", "choosing": "( ( ( RMSe * DS ) / ( MUM / CS ) ) / ( ( DS * MUR ) * Min( MUR ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,ARS ) - Max( ( Min( FirstVNF_RAM ,DDR ) / PN ),( CRS / BR ) ) )", "choosing": "( ( Min( ( MUR + Max( CS,( ( Min( RCSe ,MUC ) * ( RRSe * MLU ) ) - MUC ) ) ) ,( MLU / RCSe ) ) / ( ( MUM + DS ) * ( MUR / RMSe ) ) ) - ( DS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR * PN ) - Min( Const ,BR ) ) + ( ( FirstVNF_RAM + AMS ) - ( Max( Max( ( ACS * FirstVNF_CPU ),( BR * ARS ) ),FirstVNF_RAM_Server ) * MDR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( Min( BR ,MRS ) / ( Const - FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( RCSe - MUM ),Min( ( ( ( ( MLU * DS ) / ( RMSe * MUC ) ) / RRSe ) / RMSe ) ,( RMSe + Min( ( RMSe - RCSe ) ,Min( RRSe ,MUR ) ) ) ) ) / Max( Max( MUR,CS ),Min( ( RMSe + MLU ) ,Min( MUC ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) )", "choosing": "( ( ( ( MLU - MUR ) / Min( CS ,MUM ) ) + Max( ( MUR + MUC ),( MLU * MUM ) ) ) * ( Min( ( RCSe * MLU ) ,Min( CS ,MUR ) ) / ( ( MUC / MUC ) / Max( RCSe,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem - Min( ( FirstVNF_CPU_Server - Max( ARS,CRS ) ) ,Min( AMS ,BR ) ) ),BR ) - Min( FirstVNF_CPU ,MDR ) )", "choosing": "Max( ( ( RCSe * MUM ) + MUM ),( RRSe - Max( Max( MUM,CS ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * Max( FirstVNF_RAM_Server,CRS ) ) + ( CRS - ( DDR + Const ) ) )", "choosing": "( ( CS + RRSe ) / ( ( CS / DS ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / AMS ) * ( RRS + Min( ( ( AMS * ( AMS / ( MDR * FirstVNF_Mem_Server ) ) ) * RRS ) ,MDR ) ) )", "choosing": "( ( CS - RMSe ) - Min( ( ( MUM - MUC ) + MUR ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_Mem ) - ( Max( ( MRS * Const ),Max( FirstVNF_Mem,ARS ) ) + PN ) )", "choosing": "( Min( ( RCSe * DS ) ,( MLU * MUC ) ) / ( ( ( MLU - RMSe ) + ( CS / RCSe ) ) - Min( RRSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_Mem ) - ( ( ( Min( AMS ,FirstVNF_RAM_Server ) * ACS ) + MRS ) + ARS ) )", "choosing": "( Min( ( RCSe * DS ) ,( MLU * Max( RRSe,RMSe ) ) ) / ( Min( CS ,DS ) - Min( RRSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - FirstVNF_CPU_Server ) ,( ( PN * Max( FirstVNF_CPU,( ( RRS + ACS ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) ) ) + CRS ) )", "choosing": "( ( MUC + RMSe ) + Min( RCSe ,( MUM / ( MLU + ( RMSe * MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * BR ) ) + ( ( FirstVNF_CPU_Server - Const ) + RRS ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( ( FirstVNF_CPU * ( CRS / MDR ) ) / ( MRS - ARS ) ) ) )", "choosing": "Max( ( MLU + ( Max( MUM,MUC ) - Min( MLU ,DS ) ) ),( ( ( MLU - MUM ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( PN * BR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / ( RRSe * RCSe ) ) + ( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ),( ( ( MUM - MLU ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( Min( MRS ,BR ) + ACS ) )", "choosing": "( ( MUM / DS ) / ( ( MLU * RRSe ) * DS ) )", "obj1": 0.25149700598802394, "obj2": 0.6944872416674391}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( AMS / FirstVNF_CPU_Server ) * ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / Max( ( MUR + DS ),Min( Min( ( RCSe / MUR ) ,MUR ) ,DS ) ) )", "obj1": 0.29141716566866266, "obj2": 0.6516179204641015}, {"determining": "Max( Max( ( ( ARS * FirstVNF_RAM ) + ( ARS + FirstVNF_Mem_Server ) ),( ( ( Max( FirstVNF_RAM,AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ),( Min( RRS ,FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / Max( ( ( MUM - RMSe ) - Min( MUC ,Max( ( ( MUM + RRSe ) + RMSe ),MUM ) ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) - ( ( RMSe * MUR ) / RCSe ) )", "obj1": 0.3932135728542914, "obj2": 0.5136501505801265}, {"determining": "( ( ARS + Max( ARS,ACS ) ) / Min( ( BR + ARS ) ,Const ) )", "choosing": "( ( ( Min( RMSe ,MUM ) + RRSe ) * ( ( ( MLU * RRSe ) * DS ) - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,MUM ) + Min( MUM ,RMSe ) ) ) )", "obj1": 0.3093812375249501, "obj2": 0.6358993661413888}, {"determining": "Min( ( ( AMS + DDR ) - Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( RRSe / ( ( MUR + DS ) + MUR ) )", "obj1": 0.29141716566866266, "obj2": 0.6516179204641015}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) * ( AMS / ( Min( Min( ( Min( Const ,MDR ) * ( MRS * FirstVNF_RAM_Server ) ) ,( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) - FirstVNF_RAM ) ) ,DDR ) - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Max( MUR,( ( ( CS * MUM ) + ( RCSe / Max( ( MUR + RRSe ),MUC ) ) ) - MLU ) ) / DS ) / ( ( MUR + DS ) + MUR ) )", "obj1": 0.29141716566866266, "obj2": 0.6516179204641015}, {"determining": "Min( Max( PN,Min( MRS ,Min( PN ,FirstVNF_RAM_Server ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( MLU / MUC ) + MUR ) )", "obj1": 0.29141716566866266, "obj2": 0.6516179204641015}, {"determining": "( ( FirstVNF_RAM * ( ( ACS - RRS ) / Const ) ) / Min( FirstVNF_CPU_Server ,Max( ( PN * ACS ),( CRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,( Max( RRSe,DS ) * ( DS * RCSe ) ) ) ,( ( ( MUC + MLU ) + ( MLU - MUC ) ) + Max( ( CS + MUC ),Max( RCSe,RCSe ) ) ) )", "obj1": 0.5688622754491018, "obj2": 0.38884865272070185}, {"determining": "Min( ( ( PN - BR ) / ( BR * CRS ) ) ,( ( FirstVNF_Mem_Server - ( FirstVNF_Mem / MRS ) ) / Min( ( FirstVNF_RAM / MDR ) ,( ( Const - FirstVNF_CPU ) / Max( BR,Max( FirstVNF_RAM,PN ) ) ) ) ) )", "choosing": "Min( ( Max( Min( ( ( DS + RCSe ) * MUC ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( ( CS * RRSe ) ,DS ) ) ) ) ,( ( MUR * DS ) / MUM ) )", "obj1": 0.499001996007984, "obj2": 0.4292808369605992}, {"determining": "Min( Max( ( MRS + CRS ),DDR ) ,( ( AMS * ARS ) + ( ( MRS - MRS ) / ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( Min( ( DS / DS ) ,Min( MUR ,MUC ) ) * Min( ( MUC + MLU ) ,Max( RCSe,MUM ) ) ) )", "obj1": 0.4091816367265469, "obj2": 0.5058526086146105}, {"determining": "( ( FirstVNF_Mem - ( MRS + Min( RRS ,AMS ) ) ) * ( FirstVNF_RAM_Server + AMS ) )", "choosing": "( ( MUR - ( Max( RCSe,RRSe ) / ( RMSe - Max( RCSe,MLU ) ) ) ) - Min( ( MUM - Min( MLU ,RMSe ) ) ,( ( DS * MLU ) / ( RRSe - MLU ) ) ) )", "obj1": 0.4810379241516966, "obj2": 0.45393331342447085}, {"determining": "Max( Max( ( ( ARS * FirstVNF_RAM ) + ( ARS + FirstVNF_Mem_Server ) ),( ARS - PN ) ),( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) - ( ( RMSe * CS ) / RCSe ) )", "obj1": 0.40119760479041916, "obj2": 0.5119804564263415}, {"determining": "Max( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) / ( AMS / FirstVNF_CPU ) ),Min( FirstVNF_Mem ,( ( ( ( AMS + DDR ) - Max( Const,MDR ) ) + Min( ( RRS / ( MDR + FirstVNF_CPU ) ) ,RRS ) ) - Max( FirstVNF_RAM,( ACS + PN ) ) ) ) )", "choosing": "( Min( MUM ,( Max( Max( MUR,RRSe ),RCSe ) / ( RRSe / MUC ) ) ) * ( MUM - CS ) )", "obj1": 0.44510978043912175, "obj2": 0.48056101938607304}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( Min( MRS ,BR ) + ACS ) )", "choosing": "( ( MUM / DS ) / ( ( MLU * RRSe ) * DS ) )", "obj1": 0.25149700598802394, "obj2": 0.6944872416674391}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( MUR + DS ) + MUR ) )", "obj1": 0.29141716566866266, "obj2": 0.6516179204641015}, {"determining": "( ( FirstVNF_CPU + ( ( CRS + ( DDR + FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU + ACS ) )", "choosing": "( ( MLU / MUM ) * ( Max( ( RMSe * ( DS - RCSe ) ),Max( RRSe,RCSe ) ) - MUM ) )", "obj1": 0.3473053892215569, "obj2": 0.5957535826641223}, {"determining": "Min( ( ( PN - BR ) / ( BR * CRS ) ) ,MRS )", "choosing": "Min( ( Max( Min( ( ( DS + RCSe ) * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( DS + RCSe ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ,( ( DS * MUR ) / MUM ) )", "obj1": 0.530938123752495, "obj2": 0.4130245752032569}, {"determining": "Min( ( ( PN - BR ) / ( BR * CRS ) ) ,( ( RRS - ( FirstVNF_Mem / MRS ) ) / Min( ( FirstVNF_RAM / MDR ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) )", "choosing": "Min( ( Max( Min( ( ( DS + RCSe ) * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ,( ( DS * MUR ) / MUM ) )", "obj1": 0.562874251497006, "obj2": 0.3912287224122157}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( ACS + ( FirstVNF_RAM_Server / Max( FirstVNF_CPU,ACS ) ) ) )", "choosing": "( ( MLU * MUC ) / ( ( MLU * RRSe ) * RMSe ) )", "obj1": 0.25149700598802394, "obj2": 0.6944872416674391}, {"determining": "Max( Max( ( ( Max( Min( DDR ,RRS ),Const ) / ACS ) / FirstVNF_Mem ),( ARS - PN ) ),( Max( ( FirstVNF_Mem_Server - RRS ),FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / DS ) - ( ( ( ( ( ( ( MLU / MLU ) - Min( DS ,MUR ) ) / DS ) * RCSe ) * ( ( Min( MUC ,Min( RCSe ,MUR ) ) / MLU ) / RMSe ) ) * CS ) / RCSe ) )", "obj1": 0.42714570858283435, "obj2": 0.4938910635860625}, {"determining": "( ( FirstVNF_RAM * ( ( ACS - RRS ) / Const ) ) / Min( FirstVNF_CPU_Server ,Max( ( PN * ACS ),( CRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,( Max( RRSe,DS ) * ( DS * RCSe ) ) ) ,( ( ( MUC + MLU ) + ( MLU - MUC ) ) + Max( ( CS + MUC ),Max( RCSe,RCSe ) ) ) )", "obj1": 0.5688622754491018, "obj2": 0.38884865272070185}, {"determining": "( ( ( ( CRS + AMS ) + Max( MRS,PN ) ) + FirstVNF_Mem ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) / ( ACS - FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( MUM * Max( ( ( RMSe * RCSe ) * CS ),DS ) ) - ( MUM - MUC ) ) ) - ( Max( Max( MUM,MUR ),MUM ) / RMSe ) )", "obj1": 0.4411177644710579, "obj2": 0.48654819637058067}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( MUR + DS ) + MUR ) )", "obj1": 0.29141716566866266, "obj2": 0.6516179204641015}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( DDR + MRS ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( MUR + DS ) + ( MUM * CS ) ) )", "obj1": 0.34930139720558884, "obj2": 0.5568249372490205}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) ) - ( ( Max( MUM,MUR ) * MUM ) / RMSe ) )", "obj1": 0.4411177644710579, "obj2": 0.48654819637058067}, {"determining": "Max( Max( AMS,( ARS - PN ) ),( Max( ( FirstVNF_Mem_Server - RRS ),FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( Min( Min( ( RCSe / MUR ) ,MUR ) ,DS ) / DS ) - ( ( ( ( ( ( ( MLU / MLU ) - Min( DS ,MUR ) ) / DS ) * RCSe ) * MUR ) * CS ) / RCSe ) )", "obj1": 0.469061876247505, "obj2": 0.45486346742101047}, {"determining": "Max( Max( ( ( ARS * FirstVNF_RAM ) + ( FirstVNF_Mem_Server + ARS ) ),( ARS - PN ) ),( Max( ( FirstVNF_Mem_Server - RRS ),FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / DS ) - ( ( ( ( ( ( ( MLU / MLU ) - Min( DS ,MUR ) ) / DS ) * RCSe ) * MUR ) * CS ) / RCSe ) )", "obj1": 0.3273453093812375, "obj2": 0.6043494747245649}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( AMS / FirstVNF_CPU_Server ) * ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / Max( ( MUR + DS ),Min( Min( ( RCSe / MUR ) ,MUR ) ,DS ) ) )", "obj1": 0.2774451097804391, "obj2": 0.6604080817064796}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( MUR + DS ) + MUR ) )", "obj1": 0.29141716566866266, "obj2": 0.6516179204641015}, {"determining": "( ( Max( ( FirstVNF_Mem - Min( ( FirstVNF_CPU_Server - Max( ARS,CRS ) ) ,Min( AMS ,BR ) ) ),BR ) - Min( FirstVNF_CPU ,MDR ) ) + ( AMS + FirstVNF_CPU ) )", "choosing": "( Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Max( Max( MUM,CS ),MUM ) * CS ) - ( MUM - MUC ) ) ) - ( ( Max( MUM,MUR ) * MUM ) / RMSe ) )", "obj1": 0.4411177644710579, "obj2": 0.48654819637058067}, {"determining": "Max( Max( RRS,( ARS - ( MDR * FirstVNF_Mem ) ) ),( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( DS - ( Max( RMSe,MUC ) + MUC ) )", "obj1": 0.37325349301397204, "obj2": 0.5469490761685505}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) ) - ( ( Max( MUM,MUR ) * MUM ) / RMSe ) )", "obj1": 0.4411177644710579, "obj2": 0.48654819637058067}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM / DS ) / ( ( MLU * RRSe ) * DS ) )", "obj1": 0.25149700598802394, "obj2": 0.6944872416674391}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( Min( MRS ,BR ) + ACS ) )", "choosing": "( ( RRSe + RRSe ) / ( ( MUR + DS ) + MUR ) )", "obj1": 0.29141716566866266, "obj2": 0.6516179204641015}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( Min( MRS ,BR ) + ACS ) )", "choosing": "( ( MUM / DS ) / ( ( MLU * RRSe ) * DS ) )", "obj1": 0.2694610778443114, "obj2": 0.6699317883199544}, {"determining": "Min( ( ( PN - BR ) / ( BR * CRS ) ) ,( ( RRS - ( FirstVNF_Mem / MRS ) ) / Min( ( FirstVNF_RAM / MDR ) ,( ( Const - FirstVNF_CPU ) / Max( BR,Max( AMS,RRS ) ) ) ) ) )", "choosing": "Min( ( Max( Min( ( ( DS + RCSe ) * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( ( Min( RMSe ,MUM ) + RRSe ) + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ,( ( DS * MUR ) / MUM ) )", "obj1": 0.5369261477045908, "obj2": 0.3922018028969125}, {"determining": "Min( ( ( AMS - DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( ( BR * ( ARS - ( DDR - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( RMSe + MUC ) * ( MUM - CS ) ) / ( ( MUM * CS ) - ( MUM - MUC ) ) ) - ( ( Max( MUM,MUR ) * Min( RCSe ,MLU ) ) / RMSe ) )", "obj1": 0.4231536926147705, "obj2": 0.49872590200508465}, {"determining": "Max( Max( RRS,( ( FirstVNF_CPU_Server + ACS ) - PN ) ),( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( Max( MUC,RRSe ) / DS ) - ( DS / RCSe ) )", "obj1": 0.2894211576846307, "obj2": 0.6527706319629112}, {"determining": "( ( FirstVNF_RAM * ( ( ACS - RRS ) / Const ) ) / Min( FirstVNF_CPU_Server ,Max( ( PN * ACS ),( CRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,( Max( RRSe,DS ) * ( DS * RCSe ) ) ) ,( ( ( MUC + MLU ) + ( MLU - MUC ) ) + Max( ( CS + MUC ),Max( RCSe,RCSe ) ) ) )", "obj1": 0.5688622754491018, "obj2": 0.38884865272070185}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( AMS / FirstVNF_CPU_Server ) * ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Max( Max( MUM,CS ),MUM ) * CS ) - ( MUM - MUC ) ) ) - ( ( Max( MUM,MUR ) * MUM ) / RMSe ) )", "obj1": 0.4411177644710579, "obj2": 0.48654819637058067}, {"determining": "Min( Max( ( MRS + CRS ),DDR ) ,( ( AMS * ARS ) + ( ( MRS - MRS ) / ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( MUM * RRSe ) - ( DS - ( Min( DS ,MUC ) / ( CS - DS ) ) ) ) )", "obj1": 0.4091816367265469, "obj2": 0.5058526086146105}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( MUR + DS ) + MUR ) )", "obj1": 0.29141716566866266, "obj2": 0.6516179204641015}, {"determining": "( ( ( ( PN / FirstVNF_RAM_Server ) / ( ARS - AMS ) ) * Min( Min( ( DDR - FirstVNF_CPU_Server ) ,Min( PN ,FirstVNF_RAM ) ) ,( ( AMS * ARS ) + ( DDR + MRS ) ) ) ) + ( AMS + FirstVNF_CPU ) )", "choosing": "( Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) ) - ( ( Max( MUM,MUR ) * MUM ) / RMSe ) )", "obj1": 0.4491017964071856, "obj2": 0.4574831125884286}, {"determining": "( ( ( ( PN / FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server - AMS ) ) * Min( Min( ( DDR - FirstVNF_CPU_Server ) ,Min( PN ,( ( FirstVNF_RAM_Server + ( MRS * FirstVNF_Mem_Server ) ) * Max( ARS,Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) ) ) ) ,( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) + ( Min( ARS ,DDR ) + FirstVNF_CPU ) )", "choosing": "( ( DS + RMSe ) - ( ( Max( MUM,MUR ) * MUM ) / ( ( RMSe / RMSe ) * ( Max( ( ( Min( RRSe ,RCSe ) / ( RCSe - MLU ) ) + ( ( MUC + DS ) - ( DS + MUR ) ) ),( ( ( MLU / MUC ) * RRSe ) * DS ) ) + RCSe ) ) ) )", "obj1": 0.49101796407185627, "obj2": 0.4475907757370815}, {"determining": "( ( ( ( PN / FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server - AMS ) ) * Min( Min( ( DDR - FirstVNF_CPU_Server ) ,Min( PN ,( ( FirstVNF_RAM_Server + ( MRS * FirstVNF_Mem_Server ) ) * Max( ARS,Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) ) ) ) ,( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) + ( Min( ARS ,DDR ) + FirstVNF_CPU ) )", "choosing": "( ( DS + RMSe ) - ( ( Max( MUM,MUR ) * MUM ) / ( ( RMSe / RMSe ) * ( Max( ( ( Min( RRSe ,RCSe ) / ( RCSe - MLU ) ) + ( ( MUC + DS ) - ( DS + MUR ) ) ),( ( ( MLU / MUC ) * RRSe ) * DS ) ) + RCSe ) ) ) )", "obj1": 0.49101796407185627, "obj2": 0.4475907757370815}, {"determining": "( ( ( ( PN / FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server - AMS ) ) * Min( Min( ( DDR - FirstVNF_CPU_Server ) ,Min( PN ,( ( FirstVNF_RAM_Server + ( MRS * FirstVNF_Mem_Server ) ) * Max( ARS,Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) ) ) ) ,( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) + ( Min( ARS ,DDR ) + FirstVNF_CPU ) )", "choosing": "( ( DS + RMSe ) - ( ( Max( MUM,MUR ) * MUM ) / ( ( RMSe / RMSe ) * ( Max( ( ( Min( RRSe ,RCSe ) / ( RCSe - MLU ) ) + ( ( MUC + DS ) - ( DS + MUR ) ) ),( ( ( MLU / MUC ) * RRSe ) * DS ) ) + RCSe ) ) ) )", "obj1": 0.49101796407185627, "obj2": 0.4475907757370815}, {"determining": "( ( ( ( PN / FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server - AMS ) ) * Min( Min( ( DDR - FirstVNF_CPU_Server ) ,Min( PN ,FirstVNF_RAM ) ) ,( FirstVNF_Mem_Server + DDR ) ) ) + ( AMS + FirstVNF_CPU ) )", "choosing": "( Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) ) - ( ( Max( MUM,MUR ) * MUM ) / ( ( RMSe / RMSe ) * ( Max( ( ( Min( MLU ,RRSe ) / ( RCSe - MLU ) ) - ( ( MUC + DS ) - ( DS + MUR ) ) ),( ( ( MLU / MUC ) * RRSe ) * DS ) ) + RCSe ) ) ) )", "obj1": 0.49101796407185627, "obj2": 0.4475907757370815}, {"determining": "Max( Max( ( ARS - MRS ),AMS ),Min( Max( ( ( ARS + Max( Min( Min( FirstVNF_RAM_Server ,CRS ) ,ARS ),FirstVNF_Mem_Server ) ) - RRS ),FirstVNF_Mem ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUR + ( MUM + ( ( MLU * ( MUC - ( MLU + RCSe ) ) ) - Min( MUC ,MLU ) ) ) ) + MUR ) / ( RRSe + RRSe ) )", "obj1": 0.2774451097804391, "obj2": 0.6604080817064796}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( Min( ( Min( MRS ,BR ) + ACS ) ,BR ) + ACS ) )", "choosing": "( MUM / ( ( MLU * RRSe ) * DS ) )", "obj1": 0.24750499001996007, "obj2": 0.7079762229423854}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( Min( MRS ,BR ) + ACS ) )", "choosing": "( ( MUM / DS ) / ( ( MLU * RRSe ) * DS ) )", "obj1": 0.25149700598802394, "obj2": 0.6944872416674391}, {"determining": "( ( Min( DDR ,BR ) + ACS ) - ( ( Const + ACS ) + FirstVNF_Mem_Server ) )", "choosing": "( ( MUM / ( ( MLU / RCSe ) * DS ) ) / ( ( RRSe * MLU ) * MLU ) )", "obj1": 0.25149700598802394, "obj2": 0.6944872416674391}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( Max( MRS,FirstVNF_Mem_Server ) - Max( ( FirstVNF_CPU + DDR ),FirstVNF_Mem_Server ) ) * Min( AMS ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Max( RMSe,MUC ) * ( MUM - CS ) ) ,( ( MUM * CS ) - ( MUC - MUM ) ) ) - ( ( Max( MUM,MUR ) * ( Max( ( MUR - MUM ),Max( DS,RCSe ) ) / RRSe ) ) / RMSe ) )", "obj1": 0.42115768463073855, "obj2": 0.5020851347809}, {"determining": "Max( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( DDR + MRS ) ),( Max( ( FirstVNF_Mem_Server - RRS ),FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( Min( Min( ( RCSe / RRSe ) ,MUR ) ,DS ) / DS ) - ( ( ( ( ( ( ( MLU / MLU ) - Min( DS ,MUR ) ) / DS ) * RCSe ) * MUR ) * CS ) / RCSe ) )", "obj1": 0.469061876247505, "obj2": 0.45486346742101047}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( DDR + MRS ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( MUR + DS ) + ( MUM * CS ) ) )", "obj1": 0.3852295409181637, "obj2": 0.524435680188422}, {"determining": "( ( Max( ( FirstVNF_Mem - Min( ( FirstVNF_CPU_Server - Max( ARS,CRS ) ) ,Min( Max( ( PN - BR ),( BR * CRS ) ) ,BR ) ) ),BR ) - Min( FirstVNF_CPU ,MDR ) ) + ( AMS + FirstVNF_CPU ) )", "choosing": "( Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,MUC ) - ( ( Max( MUM,MUR ) * MUM ) / RMSe ) )", "obj1": 0.4411177644710579, "obj2": 0.48654819637058067}, {"determining": "( ( Max( ( FirstVNF_Mem - Min( ( FirstVNF_CPU_Server - Max( ARS,CRS ) ) ,Min( AMS ,BR ) ) ),BR ) - Min( FirstVNF_CPU ,MDR ) ) + ( AMS + FirstVNF_CPU ) )", "choosing": "Min( ( MUC * MLU ) ,( ( DS * MUR ) / MUM ) )", "obj1": 0.5229540918163673, "obj2": 0.4245056621483316}, {"determining": "( ( FirstVNF_CPU + ( ( CRS + ( DDR + FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU + ACS ) )", "choosing": "( ( RRSe + RRSe ) / ( ( MUR + DS ) + MUR ) )", "obj1": 0.2654690618762475, "obj2": 0.6718384803910693}, {"determining": "Max( Max( ( ( ARS * FirstVNF_RAM ) + ( ARS + FirstVNF_Mem_Server ) ),( ARS - PN ) ),( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( Max( Min( ( ( DS + RCSe ) * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ,( ( DS * MUR ) / MUM ) )", "obj1": 0.49500998003992014, "obj2": 0.43379245496208246}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - FirstVNF_CPU ) ) ,( ( AMS / FirstVNF_CPU_Server ) * ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / Max( ( MUR + DS ),Min( Min( ( RCSe / MUR ) ,MUR ) ,( DS + DS ) ) ) )", "obj1": 0.2774451097804391, "obj2": 0.6604080817064796}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( AMS / FirstVNF_CPU_Server ) * ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / Max( ( MUR + DS ),Min( Min( ( RCSe / MUR ) ,MUR ) ,DS ) ) )", "obj1": 0.2774451097804391, "obj2": 0.6604080817064796}, {"determining": "Max( ( FirstVNF_Mem_Server / ( FirstVNF_CPU - ( ( CRS / MDR ) * FirstVNF_Mem_Server ) ) ),( FirstVNF_RAM_Server + Max( ( PN - RRS ),FirstVNF_Mem ) ) )", "choosing": "( ( CS + RRSe ) / ( Min( Max( MUC,RMSe ) ,MUR ) + MUM ) )", "obj1": 0.5329341317365269, "obj2": 0.40836199315589655}, {"determining": "( Max( ( ACS / PN ),( CRS / BR ) ) * ( FirstVNF_CPU + ACS ) )", "choosing": "( ( MLU / MUM ) * ( Max( DS,Max( RRSe,RCSe ) ) - MUM ) )", "obj1": 0.3473053892215569, "obj2": 0.5957535826641223}, {"determining": "( ( FirstVNF_CPU + ( ( CRS + ( DDR + FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU + ACS ) )", "choosing": "( ( Min( ( MUR + Max( ( ( Min( RCSe ,MUC ) * ( RRSe * MLU ) ) - MUC ),CS ) ) ,( RMSe - DS ) ) / ( ( MUM + DS ) + ( MUR / RMSe ) ) ) - ( DS + RCSe ) )", "obj1": 0.3193612774451098, "obj2": 0.6063428188389468}, {"determining": "( ( FirstVNF_RAM * ( ( ACS - RRS ) / Const ) ) / Min( FirstVNF_CPU_Server ,Max( ( PN * ACS ),( CRS / ( FirstVNF_Mem_Server + ( MRS * BR ) ) ) ) ) )", "choosing": "Min( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,( ( DS * RCSe ) * Max( RRSe,DS ) ) ) ,( ( ( MUC + MLU ) + ( MLU - MUC ) ) + ( MLU + Min( ( RCSe * MUR ) ,MUC ) ) ) )", "obj1": 0.5688622754491018, "obj2": 0.38884865272070185}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( MUR + DS ) + MUR ) )", "obj1": 0.29141716566866266, "obj2": 0.6516179204641015}], "6": [{"determining": "( ( Const - ARS ) * Max( MDR,PN ) )", "choosing": "( ( DS - RRSe ) / ( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( AMS + ( FirstVNF_RAM - ( FirstVNF_Mem - FirstVNF_CPU ) ) ) * ( FirstVNF_CPU_Server + DDR ) ) - FirstVNF_CPU_Server ) ,( FirstVNF_RAM + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + RCSe ) + Min( RRSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),CRS ) - Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( ( RCSe * CS ) / ( CS / MUR ) ) + Max( ( CS / RRSe ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * Max( ( MDR - MDR ),CRS ) ) + ( CRS - ( DDR + Const ) ) )", "choosing": "( ( CS + RRSe ) / ( ( CS / DS ) + ( ( MUR / MUC ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( RRS,( ARS - PN ) ),( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / DS ) - ( MLU / RCSe ) )", "obj1": 0.2894211576846307, "obj2": 0.6527706319629112}, {"determining": "( ( MDR * FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + Const ) )", "choosing": "( ( MUR - MUR ) / ( Min( ( ( CS / RCSe ) / ( MUR / ( ( Max( MLU,RMSe ) + RCSe ) - RMSe ) ) ) ,MUM ) - Min( CS ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - FirstVNF_CPU ) * ARS ) + ARS ) - Min( PN ,Max( FirstVNF_RAM_Server,BR ) ) )", "choosing": "( Max( ( MUC + RRSe ),( RCSe / MLU ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,DDR ) * ( DDR - Max( ACS,FirstVNF_Mem ) ) )", "choosing": "( ( MUC + MUR ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - ARS ) * ( ACS - PN ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( ( MUC - RCSe ) * Min( DS ,DS ) ) / Max( Min( CS ,MUC ),( MUC * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( MDR + Max( PN,( ( ( Min( FirstVNF_Mem_Server ,ACS ) + Min( RRS ,MRS ) ) + FirstVNF_Mem_Server ) - ( ( CRS - ( AMS * ACS ) ) + Max( PN,AMS ) ) ) ) ),DDR ) ,( ( AMS * AMS ) + Min( ( ARS + AMS ) ,DDR ) ) )", "choosing": "Min( ( DS - MUR ) ,( Min( MUM ,RRSe ) - ( ( Min( DS ,MUC ) / Max( CS,DS ) ) - ( RCSe + ( Min( RRSe ,Min( MLU ,MUR ) ) + MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( BR ,FirstVNF_Mem ) - Max( FirstVNF_Mem_Server,AMS ) ) / ( FirstVNF_CPU - AMS ) )", "choosing": "( Min( ( DS + MUC ) ,Max( DS,MUR ) ) * Min( ( ( Max( RRSe,( ( ( MUC - MUM ) + RRSe ) + DS ) ) - RMSe ) + MUC ) ,Min( MUR ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( PN - BR ) / ( BR * CRS ) ) ,( ( RRS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem + CRS ) ) )", "choosing": "Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + ( ( CRS * BR ) / Min( ( AMS - ( FirstVNF_RAM_Server * ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + CRS ) ) ) ,FirstVNF_RAM_Server ) ) ) ,( Min( Min( AMS ,PN ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( Min( ( MUC / MUR ) ,( ( MUM - MUR ) + ( MUM * CS ) ) ) * ( Min( ( MLU - MUM ) ,( CS + RMSe ) ) / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,PN ) * FirstVNF_RAM_Server ) - ( Max( ( ( Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) / ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU - BR ) ) * ( PN - AMS ) ) ) / AMS ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - ( MLU * ( MUR - RCSe ) ) ) ,( ( ( ( RCSe * ( CS - ( MUM - MUC ) ) ) - MUC ) / RMSe ) * ( Min( CS ,MUC ) - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( ARS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( BR ,Const ) ) ) / Min( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) )", "choosing": "( ( RRSe - ( Min( ( Min( RMSe ,MLU ) / RCSe ) ,RCSe ) / ( MUR - RCSe ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUR ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( DDR / ARS ),Min( DDR ,CRS ) ) ,( Min( Const ,CRS ) - Max( AMS,RRS ) ) ) ,Min( ( ( FirstVNF_Mem - PN ) + ( FirstVNF_Mem - ARS ) ) ,( ( BR / CRS ) * Max( FirstVNF_CPU_Server,RRS ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) + RRSe ) * ( CS - Max( MUC,RCSe ) ) ) * ( DS / ( Min( RCSe ,MUM ) + Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( FirstVNF_CPU * ( ( Max( Min( DDR ,RRS ),Const ) / ACS ) / FirstVNF_Mem ) ) / ( PN - BR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - Min( Const ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( ( RRSe * RCSe ) / ( RCSe + CS ) ) + ( ( ( ( Min( MUC ,Min( RCSe ,MUR ) ) / MLU ) / RMSe ) + Min( MUR ,Min( ( DS + MLU ) ,MUR ) ) ) - Max( MUM,MUC ) ) ),( ( ( MUM - MLU ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - MRS ) )", "choosing": "( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * ( ( CS + RMSe ) - Min( MUC ,RRSe ) ) ) ) ) * ( Min( ( CS + RMSe ) ,( MLU - MUM ) ) / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( FirstVNF_Mem - Const ),( FirstVNF_Mem - FirstVNF_Mem ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( FirstVNF_CPU * ARS ) ) ) )", "choosing": "( ( ( ( MUR * Min( RMSe ,CS ) ) / ( DS / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) * ( Min( ( CS + RMSe ) ,( MLU - MUM ) ) / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( PN - BR ),( BR * CRS ) ) ,( ( FirstVNF_Mem + CRS ) / ( RRS - ( ( Max( MRS,FirstVNF_Mem ) + DDR ) / MRS ) ) ) )", "choosing": "Min( ( MUC * MLU ) ,( ( DS * MUR ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( PN - BR ) / ( BR * CRS ) ) ,( ( RRS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem + CRS ) ) )", "choosing": "( ( ( RMSe * DS ) / ( MUM / CS ) ) / ( ( DS * MUR ) * Min( MUR ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,ARS ) - Max( ( Min( FirstVNF_RAM ,DDR ) / PN ),( CRS / BR ) ) )", "choosing": "( ( Min( ( MUR + Max( CS,( ( Min( RCSe ,MUC ) * ( RRSe * MLU ) ) - MUC ) ) ) ,( MLU / RCSe ) ) / ( ( MUM + DS ) * ( MUR / RMSe ) ) ) - ( DS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR * PN ) - Min( Const ,BR ) ) + ( ( FirstVNF_RAM + AMS ) - ( Max( Max( ( ACS * FirstVNF_CPU ),( BR * ARS ) ),FirstVNF_RAM_Server ) * MDR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( Min( BR ,MRS ) / ( Const - FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( RCSe - MUM ),Min( ( ( ( ( MLU * DS ) / ( RMSe * MUC ) ) / RRSe ) / RMSe ) ,( RMSe + Min( ( RMSe - RCSe ) ,Min( RRSe ,MUR ) ) ) ) ) / Max( Max( MUR,CS ),Min( ( RMSe + MLU ) ,Min( MUC ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) )", "choosing": "( ( ( ( MLU - MUR ) / Min( CS ,MUM ) ) + Max( ( MUR + MUC ),( MLU * MUM ) ) ) * ( Min( ( RCSe * MLU ) ,Min( CS ,MUR ) ) / ( ( MUC / MUC ) / Max( RCSe,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( Min( MRS ,BR ) + ACS ) )", "choosing": "( ( MUM / DS ) / ( ( MLU * RRSe ) * DS ) )", "obj1": 0.25149700598802394, "obj2": 0.6944872416674391}, {"determining": "Max( Max( ( ( ARS * FirstVNF_RAM ) + ( ARS + FirstVNF_Mem_Server ) ),( ( ( Max( FirstVNF_RAM,AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ),( Min( RRS ,FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / Max( ( ( MUM - RMSe ) - Min( MUC ,Max( ( ( MUM + RRSe ) + RMSe ),MUM ) ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) - ( ( RMSe * MUR ) / RCSe ) )", "obj1": 0.3932135728542914, "obj2": 0.5136501505801265}, {"determining": "Min( ( ( PN - BR ) / ( BR * CRS ) ) ,( ( FirstVNF_Mem_Server - ( FirstVNF_Mem / MRS ) ) / Min( ( FirstVNF_RAM / MDR ) ,( ( Const - FirstVNF_CPU ) / Max( BR,Max( FirstVNF_RAM,PN ) ) ) ) ) )", "choosing": "Min( ( Max( Min( ( ( DS + RCSe ) * MUC ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( ( CS * RRSe ) ,DS ) ) ) ) ,( ( MUR * DS ) / MUM ) )", "obj1": 0.499001996007984, "obj2": 0.4292808369605992}, {"determining": "Min( Max( ( MRS + CRS ),DDR ) ,( ( AMS * ARS ) + ( ( MRS - MRS ) / ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( Min( ( DS / DS ) ,Min( MUR ,MUC ) ) * Min( ( MUC + MLU ) ,Max( RCSe,MUM ) ) ) )", "obj1": 0.4091816367265469, "obj2": 0.5058526086146105}, {"determining": "Max( Max( ( ( ARS * FirstVNF_RAM ) + ( ARS + FirstVNF_Mem_Server ) ),( ARS - PN ) ),( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) - ( ( RMSe * CS ) / RCSe ) )", "obj1": 0.40119760479041916, "obj2": 0.5119804564263415}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( Min( MRS ,BR ) + ACS ) )", "choosing": "( ( MUM / DS ) / ( ( MLU * RRSe ) * DS ) )", "obj1": 0.25149700598802394, "obj2": 0.6944872416674391}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( ACS + ( FirstVNF_RAM_Server / Max( FirstVNF_CPU,ACS ) ) ) )", "choosing": "( ( MLU * MUC ) / ( ( MLU * RRSe ) * RMSe ) )", "obj1": 0.25149700598802394, "obj2": 0.6944872416674391}, {"determining": "Max( Max( ( ( Max( Min( DDR ,RRS ),Const ) / ACS ) / FirstVNF_Mem ),( ARS - PN ) ),( Max( ( FirstVNF_Mem_Server - RRS ),FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / DS ) - ( ( ( ( ( ( ( MLU / MLU ) - Min( DS ,MUR ) ) / DS ) * RCSe ) * ( ( Min( MUC ,Min( RCSe ,MUR ) ) / MLU ) / RMSe ) ) * CS ) / RCSe ) )", "obj1": 0.42714570858283435, "obj2": 0.4938910635860625}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( DDR + MRS ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( MUR + DS ) + ( MUM * CS ) ) )", "obj1": 0.34930139720558884, "obj2": 0.5568249372490205}, {"determining": "Max( Max( AMS,( ARS - PN ) ),( Max( ( FirstVNF_Mem_Server - RRS ),FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( Min( Min( ( RCSe / MUR ) ,MUR ) ,DS ) / DS ) - ( ( ( ( ( ( ( MLU / MLU ) - Min( DS ,MUR ) ) / DS ) * RCSe ) * MUR ) * CS ) / RCSe ) )", "obj1": 0.469061876247505, "obj2": 0.45486346742101047}, {"determining": "Max( Max( ( ( ARS * FirstVNF_RAM ) + ( FirstVNF_Mem_Server + ARS ) ),( ARS - PN ) ),( Max( ( FirstVNF_Mem_Server - RRS ),FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / DS ) - ( ( ( ( ( ( ( MLU / MLU ) - Min( DS ,MUR ) ) / DS ) * RCSe ) * MUR ) * CS ) / RCSe ) )", "obj1": 0.3273453093812375, "obj2": 0.6043494747245649}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( AMS / FirstVNF_CPU_Server ) * ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / Max( ( MUR + DS ),Min( Min( ( RCSe / MUR ) ,MUR ) ,DS ) ) )", "obj1": 0.2774451097804391, "obj2": 0.6604080817064796}, {"determining": "Max( Max( RRS,( ARS - ( MDR * FirstVNF_Mem ) ) ),( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( DS - ( Max( RMSe,MUC ) + MUC ) )", "obj1": 0.37325349301397204, "obj2": 0.5469490761685505}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM / DS ) / ( ( MLU * RRSe ) * DS ) )", "obj1": 0.25149700598802394, "obj2": 0.6944872416674391}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( Min( MRS ,BR ) + ACS ) )", "choosing": "( ( MUM / DS ) / ( ( MLU * RRSe ) * DS ) )", "obj1": 0.2694610778443114, "obj2": 0.6699317883199544}, {"determining": "Max( Max( RRS,( ( FirstVNF_CPU_Server + ACS ) - PN ) ),( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( Max( MUC,RRSe ) / DS ) - ( DS / RCSe ) )", "obj1": 0.2894211576846307, "obj2": 0.6527706319629112}, {"determining": "Min( Max( ( MRS + CRS ),DDR ) ,( ( AMS * ARS ) + ( ( MRS - MRS ) / ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( MUM * RRSe ) - ( DS - ( Min( DS ,MUC ) / ( CS - DS ) ) ) ) )", "obj1": 0.4091816367265469, "obj2": 0.5058526086146105}, {"determining": "( ( ( ( PN / FirstVNF_RAM_Server ) / ( ARS - AMS ) ) * Min( Min( ( DDR - FirstVNF_CPU_Server ) ,Min( PN ,FirstVNF_RAM ) ) ,( ( AMS * ARS ) + ( DDR + MRS ) ) ) ) + ( AMS + FirstVNF_CPU ) )", "choosing": "( Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) ) - ( ( Max( MUM,MUR ) * MUM ) / RMSe ) )", "obj1": 0.4491017964071856, "obj2": 0.4574831125884286}, {"determining": "Max( Max( ( ARS - MRS ),AMS ),Min( Max( ( ( ARS + Max( Min( Min( FirstVNF_RAM_Server ,CRS ) ,ARS ),FirstVNF_Mem_Server ) ) - RRS ),FirstVNF_Mem ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUR + ( MUM + ( ( MLU * ( MUC - ( MLU + RCSe ) ) ) - Min( MUC ,MLU ) ) ) ) + MUR ) / ( RRSe + RRSe ) )", "obj1": 0.2774451097804391, "obj2": 0.6604080817064796}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( Min( ( Min( MRS ,BR ) + ACS ) ,BR ) + ACS ) )", "choosing": "( MUM / ( ( MLU * RRSe ) * DS ) )", "obj1": 0.24750499001996007, "obj2": 0.7079762229423854}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( Min( MRS ,BR ) + ACS ) )", "choosing": "( ( MUM / DS ) / ( ( MLU * RRSe ) * DS ) )", "obj1": 0.25149700598802394, "obj2": 0.6944872416674391}, {"determining": "( ( Min( DDR ,BR ) + ACS ) - ( ( Const + ACS ) + FirstVNF_Mem_Server ) )", "choosing": "( ( MUM / ( ( MLU / RCSe ) * DS ) ) / ( ( RRSe * MLU ) * MLU ) )", "obj1": 0.25149700598802394, "obj2": 0.6944872416674391}, {"determining": "Max( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( DDR + MRS ) ),( Max( ( FirstVNF_Mem_Server - RRS ),FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( Min( Min( ( RCSe / RRSe ) ,MUR ) ,DS ) / DS ) - ( ( ( ( ( ( ( MLU / MLU ) - Min( DS ,MUR ) ) / DS ) * RCSe ) * MUR ) * CS ) / RCSe ) )", "obj1": 0.469061876247505, "obj2": 0.45486346742101047}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( DDR + MRS ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( MUR + DS ) + ( MUM * CS ) ) )", "obj1": 0.3852295409181637, "obj2": 0.524435680188422}, {"determining": "( ( FirstVNF_CPU + ( ( CRS + ( DDR + FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU + ACS ) )", "choosing": "( ( RRSe + RRSe ) / ( ( MUR + DS ) + MUR ) )", "obj1": 0.2654690618762475, "obj2": 0.6718384803910693}, {"determining": "Max( Max( ( ( ARS * FirstVNF_RAM ) + ( ARS + FirstVNF_Mem_Server ) ),( ARS - PN ) ),( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( Max( Min( ( ( DS + RCSe ) * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ,( ( DS * MUR ) / MUM ) )", "obj1": 0.49500998003992014, "obj2": 0.43379245496208246}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - FirstVNF_CPU ) ) ,( ( AMS / FirstVNF_CPU_Server ) * ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / Max( ( MUR + DS ),Min( Min( ( RCSe / MUR ) ,MUR ) ,( DS + DS ) ) ) )", "obj1": 0.2774451097804391, "obj2": 0.6604080817064796}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( AMS / FirstVNF_CPU_Server ) * ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / Max( ( MUR + DS ),Min( Min( ( RCSe / MUR ) ,MUR ) ,DS ) ) )", "obj1": 0.2774451097804391, "obj2": 0.6604080817064796}, {"determining": "( ( FirstVNF_CPU + ( ( CRS + ( DDR + FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU + ACS ) )", "choosing": "( ( Min( ( MUR + Max( ( ( Min( RCSe ,MUC ) * ( RRSe * MLU ) ) - MUC ),CS ) ) ,( RMSe - DS ) ) / ( ( MUM + DS ) + ( MUR / RMSe ) ) ) - ( DS + RCSe ) )", "obj1": 0.3193612774451098, "obj2": 0.6063428188389468}, {"determining": "( ARS + ( CRS - ( DDR + Const ) ) )", "choosing": "( ( ( RCSe + MUM ) + RRSe ) / ( ( CS / DS ) + MUM ) )", "obj1": 0.5788423153692615, "obj2": 0.38558615694850884}, {"determining": "Min( ( ( AMS + DDR ) - ( Min( ( ( PN - BR ) / ( BR * CRS ) ) ,( ( RRS - ( FirstVNF_Mem / MRS ) ) / Min( ( FirstVNF_RAM / MDR ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) ) - ( Min( ( ( DS + RCSe ) * MUR ) ,Max( MUR,MLU ) ) / RMSe ) )", "obj1": 0.9021956087824351, "obj2": 0.09328043603746214}, {"determining": "Min( ( ( PN - BR ) / ( BR * CRS ) ) ,( ( RRS - ( FirstVNF_Mem / MRS ) ) / Min( ( FirstVNF_RAM / ( CRS - RRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) )", "choosing": "Min( ( Max( RMSe,( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ,( ( DS * MUR ) / MUM ) )", "obj1": 0.5189620758483033, "obj2": 0.4010042274833062}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - FirstVNF_CPU ) ) ,( ( ( Max( ( FirstVNF_Mem_Server - RRS ),FirstVNF_Mem ) + FirstVNF_RAM_Server ) / FirstVNF_CPU_Server ) * ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / Max( ( MUR + DS ),Min( Min( ( RCSe / MUR ) ,MUR ) ,( DS + RCSe ) ) ) )", "obj1": 0.2774451097804391, "obj2": 0.6604080817064796}, {"determining": "Min( ( ( PN - BR ) / ( BR * CRS ) ) ,( ( FirstVNF_Mem_Server - ( FirstVNF_Mem / MRS ) ) / Min( ( FirstVNF_RAM / MDR ) ,( ( Const - FirstVNF_CPU ) / Max( BR,Max( FirstVNF_RAM,PN ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,MUC ) - ( ( Max( MUM,MUR ) * MUM ) / RMSe ) )", "obj1": 0.4590818363273453, "obj2": 0.45602406499180365}, {"determining": "Min( ( ( PN - BR ) / ( ( Const - FirstVNF_CPU ) / Max( BR,Max( AMS,RRS ) ) ) ) ,MRS )", "choosing": "Min( ( Max( Min( ( ( DS + Min( MUC ,DS ) ) * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( DS + RCSe ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ,( ( DS * MUR ) / MUM ) )", "obj1": 0.9960079840319361, "obj2": 0.004153500716510012}, {"determining": "Max( Max( RRS,( ARS - PN ) ),( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / DS ) - ( MLU / RCSe ) )", "obj1": 0.2894211576846307, "obj2": 0.6527706319629112}, {"determining": "Max( Max( AMS,( ARS - PN ) ),( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( Min( MRS ,BR ) + ACS ) ) )", "choosing": "( ( RRSe + ( ( MLU * RRSe ) * DS ) ) / ( ( MUR + DS ) + MUR ) )", "obj1": 0.49101796407185627, "obj2": 0.44403021518582597}, {"determining": "Max( Max( AMS,( ARS - PN ) ),( Max( ( FirstVNF_Mem_Server - RRS ),FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUM / DS ) / ( ( MLU * RRSe ) * DS ) )", "obj1": 0.29141716566866266, "obj2": 0.6510763608892294}, {"determining": "( ( FirstVNF_Mem - ( MRS + Max( ( ( Max( Min( DDR ,RRS ),Const ) / ACS ) / FirstVNF_Mem ),( ARS - PN ) ) ) ) * ( FirstVNF_RAM_Server + AMS ) )", "choosing": "( ( MUR - ( Max( RCSe,RRSe ) / ( RMSe - Max( RCSe,MLU ) ) ) ) - Min( ( MUM - Min( MLU ,RMSe ) ) ,( ( DS * MLU ) / ( RRSe - MUM ) ) ) )", "obj1": 0.8483033932135728, "obj2": 0.13997354017632468}, {"determining": "( ( ( ( PN / FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server - AMS ) ) * Min( Min( ( DDR - FirstVNF_CPU_Server ) ,Min( PN ,FirstVNF_RAM ) ) ,( FirstVNF_RAM_Server + DDR ) ) ) + ( Min( ARS ,DDR ) + FirstVNF_CPU ) )", "choosing": "( ( DS + RMSe ) - ( ( Max( MUM,MUR ) * MUM ) / ( ( RMSe / RMSe ) * ( Max( ( ( Min( MLU ,RRSe ) / ( RCSe - MLU ) ) - ( ( MUC + DS ) - ( DS + MUR ) ) ),( ( ( MLU / MUC ) * RRSe ) * DS ) ) + RCSe ) ) ) )", "obj1": 0.6307385229540918, "obj2": 0.32479259858478166}, {"determining": "Max( Max( RRS,( ARS - PN ) ),( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe + RRSe ) / ( ( MUR + DS ) + ( MUM * CS ) ) )", "obj1": 0.3852295409181637, "obj2": 0.524435680188422}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( DDR + MRS ) ) )", "choosing": "( ( MUR / DS ) - ( MLU / RCSe ) )", "obj1": 0.2894211576846307, "obj2": 0.6527706319629112}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( Min( ( FirstVNF_RAM / MDR ) ,BR ) + ACS ) )", "choosing": "( MUM / ( Max( Min( ( ( DS + RCSe ) * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) * DS ) )", "obj1": 0.23952095808383234, "obj2": 0.7141366231865048}, {"determining": "Max( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( DDR + MRS ) ),( Max( ( FirstVNF_Mem_Server - RRS ),FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe + RRSe ) / ( ( MUR + DS ) + MUR ) )", "obj1": 0.2654690618762475, "obj2": 0.6718384803910693}, {"determining": "( ( FirstVNF_CPU + ( ( CRS + ( DDR + FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU + ACS ) )", "choosing": "( ( Min( Min( ( RCSe / RRSe ) ,MUR ) ,DS ) / DS ) - ( ( ( ( ( ( ( MLU / MLU ) - Min( DS ,MUR ) ) / DS ) * RCSe ) * MUR ) * CS ) / RCSe ) )", "obj1": 0.469061876247505, "obj2": 0.45486346742101047}, {"determining": "( ( Max( ( FirstVNF_Mem - Min( ( FirstVNF_CPU_Server - Max( ARS,CRS ) ) ,Min( AMS ,BR ) ) ),BR ) - Min( FirstVNF_CPU ,MDR ) ) + ( AMS + FirstVNF_CPU ) )", "choosing": "( ( MUR / DS ) - ( ( ( ( ( ( ( MLU / MLU ) - Min( DS ,MUR ) ) / DS ) * RCSe ) * MUR ) * CS ) / RCSe ) )", "obj1": 0.3273453093812375, "obj2": 0.6043494747245649}, {"determining": "Min( ( MRS - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) ) - ( ( MUM / DS ) / ( ( MLU * RRSe ) * DS ) ) )", "obj1": 0.9860279441117764, "obj2": 0.005026803969383243}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) ) - ( ( Max( MUM,MUR ) * MUM ) / RMSe ) )", "obj1": 0.4111776447105788, "obj2": 0.5030412838597962}, {"determining": "Max( Max( RRS,( ARS - PN ) ),( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / DS ) - ( MLU / RCSe ) )", "obj1": 0.2894211576846307, "obj2": 0.6527706319629112}, {"determining": "( Max( DDR,ARS ) - Max( ( Min( FirstVNF_RAM ,DDR ) / PN ),( CRS / BR ) ) )", "choosing": "( ( Min( ( MUR + Max( CS,( ( Min( RCSe ,MUC ) * ( RRSe * MLU ) ) - MUC ) ) ) ,( MLU / RCSe ) ) / ( ( MUM + DS ) * ( MUR / RMSe ) ) ) - ( DS + RCSe ) )", "obj1": 0.9680638722554891, "obj2": 0.01464985239299303}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( DDR + MRS ) ) )", "choosing": "( Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Max( Max( MUM,CS ),MUM ) * CS ) - ( MUM - MUC ) ) ) - ( ( Max( MUM,MUR ) * MUM ) / RMSe ) )", "obj1": 0.43912175648702595, "obj2": 0.46282722693500966}, {"determining": "( Max( DDR,ARS ) - Max( ( Min( FirstVNF_RAM ,DDR ) / PN ),( CRS / BR ) ) )", "choosing": "( ( Min( ( MUR + Max( CS,( ( Min( RCSe ,MUC ) * ( RRSe * MLU ) ) - MUC ) ) ) ,( MLU / RCSe ) ) / ( ( MUM + DS ) * ( MUR / RMSe ) ) ) - ( DS + RCSe ) )", "obj1": 0.9660678642714571, "obj2": 0.015299479080881931}, {"determining": "( Max( DDR,ARS ) - Max( ( Min( FirstVNF_RAM ,DDR ) / PN ),AMS ) )", "choosing": "( ( Min( ( MUR + Max( ( DS - ( Min( DS ,MUC ) / ( CS - DS ) ) ),( ( Min( RCSe ,MUC ) * ( RRSe * MLU ) ) - MUC ) ) ) ,( MLU / RCSe ) ) / ( ( MUM + DS ) * ( MUR / RMSe ) ) ) - ( DS + RCSe ) )", "obj1": 0.9520958083832335, "obj2": 0.021215115561866102}, {"determining": "( Max( DDR,ARS ) - Max( ( Min( FirstVNF_RAM ,DDR ) / PN ),( CRS / BR ) ) )", "choosing": "Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( MUM * RRSe ) - ( DS - ( Min( DS ,MUC ) / ( CS - DS ) ) ) ) )", "obj1": 0.9840319361277445, "obj2": 0.006272223220889843}, {"determining": "Min( Max( ( MRS + CRS ),DDR ) ,( ( AMS * ARS ) + ( ( MRS - MRS ) / ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( ( MUR + Max( CS,( ( Min( RCSe ,MUC ) * ( RRSe * MLU ) ) - MUC ) ) ) ,( MLU / RCSe ) ) / ( ( MUM + DS ) * ( MUR / RMSe ) ) ) - ( DS + RCSe ) )", "obj1": 0.32934131736526945, "obj2": 0.5926402566524158}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( Min( MRS ,BR ) + ACS ) )", "choosing": "( ( MUM / DS ) / ( ( MLU * RRSe ) * DS ) )", "obj1": 0.25149700598802394, "obj2": 0.6944872416674391}, {"determining": "Max( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( DDR + Min( FirstVNF_Mem ,BR ) ) ),( Max( ( FirstVNF_Mem_Server - RRS ),FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( Max( ( ( ( RCSe + CS ) / ( RRSe * RCSe ) ) + ( Min( MLU ,RRSe ) - Max( MUM,MUC ) ) ),( ( ( MUM - MLU ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) ) / DS ) - ( ( ( ( ( ( ( MLU / MLU ) - Min( DS ,MUR ) ) / DS ) * RCSe ) * MUR ) * CS ) / RCSe ) )", "obj1": 0.3093812375249501, "obj2": 0.6211275910163242}, {"determining": "Max( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( DDR + MRS ) ),( Max( ( FirstVNF_Mem_Server - RRS ),FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( Min( Min( ( RCSe / RRSe ) ,MUR ) ,DS ) / DS ) - ( ( ( ( ( ( ( MLU / MLU ) - Min( DS ,MUR ) ) / DS ) * RCSe ) * MUR ) * CS ) / RCSe ) )", "obj1": 0.469061876247505, "obj2": 0.45486346742101047}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( DDR + MRS ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( MUR + DS ) + ( MUM * CS ) ) )", "obj1": 0.36327345309381237, "obj2": 0.5561787969242815}, {"determining": "Min( ( ( PN - BR ) / ( BR * CRS ) ) ,( ( FirstVNF_Mem_Server - ( FirstVNF_Mem / MRS ) ) / Min( ( FirstVNF_RAM / MDR ) ,( ( Const - FirstVNF_CPU ) / Max( BR,Max( FirstVNF_RAM,PN ) ) ) ) ) )", "choosing": "Min( ( Max( Min( ( ( DS + RCSe ) * MUC ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( ( CS * RRSe ) ,DS ) ) ) ) ,( ( MUR * DS ) / MUM ) )", "obj1": 0.5149700598802395, "obj2": 0.4109464227094449}, {"determining": "( ( FirstVNF_RAM * ( ( ACS - RRS ) / Const ) ) / Min( FirstVNF_CPU_Server ,Max( ( PN * ACS ),( CRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,( Max( RRSe,DS ) * ( DS * RCSe ) ) ) ,( ( ( MUC + MLU ) + ( MLU - MUC ) ) + Max( ( CS + MUC ),Max( RCSe,RCSe ) ) ) )", "obj1": 0.47904191616766467, "obj2": 0.45101093562020034}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - FirstVNF_CPU ) ) ,( ( AMS / FirstVNF_CPU_Server ) * ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / Max( ( MUR + DS ),Min( Min( ( RCSe / MUR ) ,MUR ) ,( DS + DS ) ) ) )", "obj1": 0.2774451097804391, "obj2": 0.6604080817064796}, {"determining": "Min( ( ( PN - BR ) / ( BR * CRS ) ) ,( ( RRS - ( FirstVNF_Mem / MRS ) ) / Min( ( FirstVNF_RAM / MDR ) ,( ( Const - FirstVNF_CPU ) / Max( BR,Max( AMS,RRS ) ) ) ) ) )", "choosing": "Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( MUM * RRSe ) - ( DS - ( Min( DS ,MUC ) / ( CS - DS ) ) ) ) )", "obj1": 0.41916167664670656, "obj2": 0.49514507752960757}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( Min( MRS ,( ( CRS - DDR ) / Max( DDR,FirstVNF_Mem ) ) ) + ACS ) )", "choosing": "( ( MUM / ( MUC * Max( CS,CS ) ) ) / ( ( MLU * RRSe ) * DS ) )", "obj1": 0.25948103792415167, "obj2": 0.674996533833878}, {"determining": "Min( ( ( AMS + DDR ) - Min( ( ( AMS + DDR ) - ( Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ) - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( RRSe / ( ( MUR + DS ) + ( ( MUR + DS ) + MUR ) ) )", "obj1": 0.25349301397205587, "obj2": 0.6899615566009512}, {"determining": "( ( ( ( CRS + AMS ) + Max( MRS,PN ) ) + FirstVNF_Mem ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) / ( ACS - FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( MUR + DS ) + MUR ) )", "obj1": 0.6487025948103793, "obj2": 0.25196363508967096}, {"determining": "Max( Max( ( ( ARS * FirstVNF_RAM ) + ( ARS + FirstVNF_Mem_Server ) ),( ARS - PN ) ),( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) - ( ( RMSe * CS ) / RCSe ) )", "obj1": 0.40119760479041916, "obj2": 0.5119804564263415}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + ( ( ( ( PN / FirstVNF_RAM_Server ) / ( ARS - AMS ) ) * Min( Min( ( DDR - FirstVNF_CPU_Server ) ,Min( PN ,FirstVNF_RAM ) ) ,( ( AMS * ARS ) + ( DDR + MRS ) ) ) ) + ( AMS + FirstVNF_CPU ) ) ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( RMSe + MUC ) * ( MUM - CS ) ) + RRSe ) / ( ( MUR + DS ) + MUR ) )", "obj1": 0.5209580838323353, "obj2": 0.3879937413447156}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( Min( ( Min( MRS ,BR ) + ACS ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) / ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU - BR ) ) * ( PN - AMS ) ) ) ) + ACS ) )", "choosing": "( MUM / ( ( ( RCSe * ( CS - ( MUM - MUC ) ) ) * RRSe ) * DS ) )", "obj1": 0.3033932135728543, "obj2": 0.6267210336769036}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( DS - ( CS + MUC ) )", "obj1": 0.37325349301397204, "obj2": 0.5469490761685505}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( Max( MRS,FirstVNF_Mem_Server ) - Max( ( FirstVNF_CPU + DDR ),FirstVNF_Mem_Server ) ) * Min( AMS ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Max( RMSe,MUC ) * ( MUM - CS ) ) ,( ( MUM * CS ) - ( MUC - MUM ) ) ) - ( ( Max( MUM,MUR ) * ( Max( ( MUR - MUM ),Max( DS,RCSe ) ) / RRSe ) ) / RMSe ) )", "obj1": 0.7085828343313373, "obj2": 0.2156615303082344}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( Max( MRS,FirstVNF_Mem_Server ) - Max( ( FirstVNF_CPU + DDR ),FirstVNF_Mem_Server ) ) * Min( AMS ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Max( RMSe,MUC ) * ( MUM - CS ) ) ,( ( MUM * CS ) - ( MUC - MUM ) ) ) - ( ( Max( MUM,MUR ) * ( Max( ( MUR - MUM ),Max( DS,RCSe ) ) / RRSe ) ) / RMSe ) )", "obj1": 0.7085828343313373, "obj2": 0.2156615303082344}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( Max( MRS,FirstVNF_Mem_Server ) - Max( ( FirstVNF_CPU + DDR ),FirstVNF_Mem_Server ) ) * Min( AMS ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Max( RMSe,MUC ) * ( MUM - CS ) ) ,( ( MUM * CS ) - ( MUC - MUM ) ) ) - ( ( Max( MUM,MUR ) * ( Max( ( MUR - MUM ),Max( DS,RCSe ) ) / RRSe ) ) / RMSe ) )", "obj1": 0.7085828343313373, "obj2": 0.2156615303082344}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( Max( MRS,FirstVNF_Mem_Server ) - Max( ( FirstVNF_CPU + DDR ),FirstVNF_Mem_Server ) ) * Min( AMS ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Max( RMSe,MUC ) * ( MUM - CS ) ) ,( ( MUM * CS ) - ( MUC - MUM ) ) ) - ( ( Max( MUM,MUR ) * ( Max( ( MUR - MUM ),Max( DS,RCSe ) ) / RRSe ) ) / RMSe ) )", "obj1": 0.7085828343313373, "obj2": 0.2156615303082344}, {"determining": "( ( ( ( PN / FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server - AMS ) ) * Min( Min( ( DDR - FirstVNF_CPU_Server ) ,Min( PN ,( ( FirstVNF_RAM_Server + ( MRS * FirstVNF_Mem_Server ) ) * Max( ARS,Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) ) ) ) ,( FirstVNF_RAM_Server + Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ) ) ) ) + ( Min( ARS ,DDR ) + FirstVNF_CPU ) )", "choosing": "( ( DS + RMSe ) - ( ( Max( MUM,MUR ) * MUM ) / ( ( RRSe + RRSe ) / ( ( MUR + DS ) + MUR ) ) ) )", "obj1": 0.7405189620758483, "obj2": 0.17836821534769134}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( AMS / FirstVNF_CPU_Server ) * ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / Max( ( MUR + DS ),Min( Min( ( RCSe / MUR ) ,MUR ) ,DS ) ) )", "obj1": 0.2774451097804391, "obj2": 0.6604080817064796}]}